AutoGen Definitions dummy;
struct = {
  cp-id     = 'structnmsis__nn__activation';
  cp-name   = 'nmsis_nn_activation';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structnmsis__nn__activation_1a48362c23f271b9118bf8337b288c7917';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'min';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
      sec-mem-desc-line = '78';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Min value used to clamp the result  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structnmsis__nn__activation_1a5b16a906b065373a562b9124ea582390';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'max';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
      sec-mem-desc-line = '79';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Max value used to clamp the result  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
  cp-fileline  = '77';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
NMSIS-NN object for the quantized Relu activation  
_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structnmsis__nn__context';
  cp-name   = 'nmsis_nn_context';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structnmsis__nn__context_1af6e072db02d746a4dcd41c7af0bc9654';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'buf';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
      sec-mem-desc-line = '47';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Pointer to a buffer needed for the optimization  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structnmsis__nn__context_1ac1de8a271e699d3dd20b5ec77bd423cd';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'size';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
      sec-mem-desc-line = '48';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Buffer size  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
  cp-fileline  = '46';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
NMSIS-NN object used for the function context.  
_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structnmsis__nn__conv__params';
  cp-name   = 'nmsis_nn_conv_params';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structnmsis__nn__conv__params_1a69222ddf54d0b81ab958544243fa69a4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'input_offset';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
      sec-mem-desc-line = '85';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Zero value for the input tensor  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structnmsis__nn__conv__params_1ad217486a0f383011c6f3b8429fbfc80e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'output_offset';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
      sec-mem-desc-line = '86';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Zero value for the output tensor  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structnmsis__nn__conv__params_1a521f35f3383a1eb27ab042967f0419c2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
nmsis_nn_tile
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'stride';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
      sec-mem-desc-line = '87';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structnmsis__nn__conv__params_1acf35a1282d0aa4684216a315ad82b429';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
nmsis_nn_tile
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'padding';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
      sec-mem-desc-line = '88';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structnmsis__nn__conv__params_1aaa527a17de023c13a877f628fba6ce94';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
nmsis_nn_tile
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dilation';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
      sec-mem-desc-line = '89';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structnmsis__nn__conv__params_1ab69c82a9c309672ae56624e7641c17df';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
nmsis_nn_activation
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'activation';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
      sec-mem-desc-line = '90';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
  cp-fileline  = '84';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
NMSIS-NN object for the convolution layer parameters  
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 45;
        node-label = 'nmsis_nn_activation';
        node-link = {
          node-link-id = 'structnmsis__nn__activation';
        };
      }; /* node */
      node = {
        node-id    = 46;
        node-label = 'nmsis_nn_tile';
        node-link = {
          node-link-id = 'structnmsis__nn__tile';
        };
      }; /* node */
      node = {
        node-id    = 44;
        node-label = 'nmsis_nn_conv_params';
        node-link = {
          node-link-id = 'structnmsis__nn__conv__params';
        };
        node-child = {
          child-id = '45';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
activation
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '46';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
padding
dilation
stride
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structnmsis__nn__dims';
  cp-name   = 'nmsis_nn_dims';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structnmsis__nn__dims_1a225e4bf88cf08f9f164194c60c2e8dd3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'n';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
      sec-mem-desc-line = '54';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Generic dimension to contain either the batch size or output channels.
 Please refer to the function documentation for more information  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structnmsis__nn__dims_1a0f3681fa48b5952418a3e30f01d44354';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'h';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
      sec-mem-desc-line = '56';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Height  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structnmsis__nn__dims_1a51cfe9f1c5b7c4e948298c27a7f79931';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'w';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
      sec-mem-desc-line = '57';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Width  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structnmsis__nn__dims_1ab640a21faa6868342cae5af525b7b2d0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'c';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
      sec-mem-desc-line = '58';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Input channels  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
  cp-fileline  = '53';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
NMSIS-NN object to contain the dimensions of the tensors  
_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structnmsis__nn__dw__conv__params';
  cp-name   = 'nmsis_nn_dw_conv_params';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structnmsis__nn__dw__conv__params_1a104c378b0473ec338f66ddbdca082d5d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'input_offset';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
      sec-mem-desc-line = '96';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Zero value for the input tensor  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structnmsis__nn__dw__conv__params_1aba8ac5e66ded34508c6b4afa9d3fb2d4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'output_offset';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
      sec-mem-desc-line = '97';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Zero value for the output tensor  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structnmsis__nn__dw__conv__params_1ab4921613da4c34e592c71bc54b7c0183';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ch_mult';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
      sec-mem-desc-line = '98';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Channel Multiplier. ch_mult * in_ch = out_ch  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structnmsis__nn__dw__conv__params_1a5a889c2d278c93133c8984d33eabd05e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
nmsis_nn_tile
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'stride';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
      sec-mem-desc-line = '99';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structnmsis__nn__dw__conv__params_1a4c2563d6016f2ca3ba522bdf22c119f7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
nmsis_nn_tile
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'padding';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
      sec-mem-desc-line = '100';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structnmsis__nn__dw__conv__params_1a7e9b8d07abbade30ce59edfadeaa6379';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
nmsis_nn_tile
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dilation';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
      sec-mem-desc-line = '101';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structnmsis__nn__dw__conv__params_1a6f7006e262d7d710bc78d69adcde484e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
nmsis_nn_activation
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'activation';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
      sec-mem-desc-line = '102';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
  cp-fileline  = '95';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
NMSIS-NN object for Depthwise convolution layer parameters  
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 51;
        node-label = 'nmsis_nn_activation';
        node-link = {
          node-link-id = 'structnmsis__nn__activation';
        };
      }; /* node */
      node = {
        node-id    = 52;
        node-label = 'nmsis_nn_tile';
        node-link = {
          node-link-id = 'structnmsis__nn__tile';
        };
      }; /* node */
      node = {
        node-id    = 50;
        node-label = 'nmsis_nn_dw_conv_params';
        node-link = {
          node-link-id = 'structnmsis__nn__dw__conv__params';
        };
        node-child = {
          child-id = '51';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
activation
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '52';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
padding
dilation
stride
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structnmsis__nn__fc__params';
  cp-name   = 'nmsis_nn_fc_params';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structnmsis__nn__fc__params_1a026c1d1f427be5b789fca26a579a0802';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'input_offset';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
      sec-mem-desc-line = '115';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Zero value for the input tensor  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structnmsis__nn__fc__params_1ae06de74e9e605ba7025b253dcc2851d2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'filter_offset';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
      sec-mem-desc-line = '116';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Zero value for the filter tensor. Not used  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structnmsis__nn__fc__params_1a81d0dd4c414d1feed031db7aaccb7e41';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'output_offset';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
      sec-mem-desc-line = '117';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Zero value for the output tensor  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structnmsis__nn__fc__params_1a6e7f75a5d79722f7d9b1c48f4e2d4f19';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
nmsis_nn_activation
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'activation';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
      sec-mem-desc-line = '118';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
  cp-fileline  = '114';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
NMSIS-NN object for Fully Connected layer parameters  
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 55;
        node-label = 'nmsis_nn_activation';
        node-link = {
          node-link-id = 'structnmsis__nn__activation';
        };
      }; /* node */
      node = {
        node-id    = 54;
        node-label = 'nmsis_nn_fc_params';
        node-link = {
          node-link-id = 'structnmsis__nn__fc__params';
        };
        node-child = {
          child-id = '55';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
activation
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structnmsis__nn__per__channel__quant__params';
  cp-name   = 'nmsis_nn_per_channel_quant_params';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structnmsis__nn__per__channel__quant__params_1a7c5cfd043d06c78d422dcb2cf645337e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'multiplier';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
      sec-mem-desc-line = '64';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Multiplier values  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structnmsis__nn__per__channel__quant__params_1a8ac7fca431438156a06945ef54c7e125';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'shift';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
      sec-mem-desc-line = '65';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Shift values  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
  cp-fileline  = '63';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
NMSIS-NN object for the per-channel quantization parameters  
_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structnmsis__nn__per__tensor__quant__params';
  cp-name   = 'nmsis_nn_per_tensor_quant_params';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structnmsis__nn__per__tensor__quant__params_1aa882d192b84006c68f172902704f7a8a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'multiplier';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
      sec-mem-desc-line = '71';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Multiplier value  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structnmsis__nn__per__tensor__quant__params_1a7277c0982c47d02ae4cfd2f135ea7ebe';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'shift';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
      sec-mem-desc-line = '72';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Shift value  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
  cp-fileline  = '70';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
NMSIS-NN object for the per-tensor quantization parameters  
_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structnmsis__nn__pool__params';
  cp-name   = 'nmsis_nn_pool_params';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structnmsis__nn__pool__params_1a7eadfa2ab9475d08ca419f2720b9f778';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
nmsis_nn_tile
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'stride';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
      sec-mem-desc-line = '107';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structnmsis__nn__pool__params_1a5eb08bced0dab5f950480d468a993e03';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
nmsis_nn_tile
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'padding';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
      sec-mem-desc-line = '108';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structnmsis__nn__pool__params_1a023eb47065accf2770132f704c49e125';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
nmsis_nn_activation
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'activation';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
      sec-mem-desc-line = '109';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
  cp-fileline  = '106';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
NMSIS-NN object for pooling layer parameters  
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 61;
        node-label = 'nmsis_nn_pool_params';
        node-link = {
          node-link-id = 'structnmsis__nn__pool__params';
        };
        node-child = {
          child-id = '62';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
activation
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '63';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
padding
stride
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 62;
        node-label = 'nmsis_nn_activation';
        node-link = {
          node-link-id = 'structnmsis__nn__activation';
        };
      }; /* node */
      node = {
        node-id    = 63;
        node-label = 'nmsis_nn_tile';
        node-link = {
          node-link-id = 'structnmsis__nn__tile';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structnmsis__nn__softmax__lut__s16';
  cp-name   = 'nmsis_nn_softmax_lut_s16';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structnmsis__nn__softmax__lut__s16_1a85ddcdb3134d12b060d32ea1bfa624fb';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const int16_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'exp_lut';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
      sec-mem-desc-line = '134';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structnmsis__nn__softmax__lut__s16_1aba24587722bfcce9d3b7b285a079dc36';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const int16_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'one_by_one_lut';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
      sec-mem-desc-line = '135';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
  cp-fileline  = '133';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
NMSIS-NN object for Softmax s16 layer parameters  
_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structnmsis__nn__svdf__params';
  cp-name   = 'nmsis_nn_svdf_params';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structnmsis__nn__svdf__params_1a257ac48e9f0550777943cdd4d2c073ef';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rank';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
      sec-mem-desc-line = '124';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structnmsis__nn__svdf__params_1a2b17b0d43b179eda5b76cd59ca290ce0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'input_offset';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
      sec-mem-desc-line = '125';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Zero value for the input tensor  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structnmsis__nn__svdf__params_1ab4c5b6a99f247cd1a5f56fd8b7618dbf';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'output_offset';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
      sec-mem-desc-line = '126';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Zero value for the output tensor  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structnmsis__nn__svdf__params_1a9ab72612a7132630788ecc8e128be16f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
nmsis_nn_activation
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'input_activation';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
      sec-mem-desc-line = '127';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structnmsis__nn__svdf__params_1afbbb06c17f32db86fec3a979cc1cbda7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
nmsis_nn_activation
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'output_activation';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
      sec-mem-desc-line = '128';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
  cp-fileline  = '123';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
NMSIS-NN object for SVDF layer parameters  
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 68;
        node-label = 'nmsis_nn_activation';
        node-link = {
          node-link-id = 'structnmsis__nn__activation';
        };
      }; /* node */
      node = {
        node-id    = 67;
        node-label = 'nmsis_nn_svdf_params';
        node-link = {
          node-link-id = 'structnmsis__nn__svdf__params';
        };
        node-child = {
          child-id = '68';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
output_activation
input_activation
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structnmsis__nn__tile';
  cp-name   = 'nmsis_nn_tile';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structnmsis__nn__tile_1a82e785cad0cae88563f9022f83bdbdb5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'w';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
      sec-mem-desc-line = '40';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Width  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structnmsis__nn__tile_1adeebf9c51de7da41c46f9c9ea0c7d35a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'h';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
      sec-mem-desc-line = '41';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Height  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
  cp-fileline  = '39';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
NMSIS-NN object to contain the width and height of a tile  
_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structriscv__nn__double';
  cp-name   = 'riscv_nn_double';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structriscv__nn__double_1afcea081808175285de1e4655f94aca96';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'low';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      sec-mem-desc-line = '82';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structriscv__nn__double_1aba59bb4f5d8e8c3a58453b56117c2b88';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'high';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      sec-mem-desc-line = '83';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
  cp-fileline  = '81';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Union for data type long long.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
union = {
  cp-id     = 'unionriscv__nn__long__long';
  cp-name   = 'riscv_nn_long_long';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionriscv__nn__long__long_1a864870c34e2d63a2b23eb9a989fa240e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int64_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'long_long';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      sec-mem-desc-line = '88';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionriscv__nn__long__long_1ab22215ee4ac215db8e861f34c48e36fe';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct riscv_nn_double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'word';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      sec-mem-desc-line = '88';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
  cp-fileline  = '87';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 74;
        node-label = 'riscv_nn_long_long';
        node-link = {
          node-link-id = 'unionriscv__nn__long__long';
        };
        node-child = {
          child-id = '75';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
word
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 75;
        node-label = 'riscv_nn_double';
        node-link = {
          node-link-id = 'structriscv__nn__double';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* union */
union = {
  cp-id     = 'unionriscv__nnword';
  cp-name   = 'riscv_nnword';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionriscv__nnword_1a132bf32a113b8edfb4417618182dfd69';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
q31_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'word';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      sec-mem-desc-line = '69';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
q31 type  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionriscv__nnword_1aaf153566cb85335577d30a685c64bd88';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
q15_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'half_words';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      sec-mem-desc-line = '71';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
q15 type  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionriscv__nnword_1a7d27a031fb02506228b668e145be3f69';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
q7_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'bytes';
      sec-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      sec-mem-desc-line = '73';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
q7 type  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
  cp-fileline  = '68';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Union for SIMD access of q31/q15/q7 types.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* union */
file = {
  file-id   = 'bench_8h';
  file-name = 'bench.h';
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/bench.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'image__data_8h';
  file-name = 'image_data.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a46f46699d1865f54b65cd6a74fb45f26';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_frog3';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{63, 48, 18, 64, 53, 21, 64, 56, 24, 60, 50, \
18, 67, 51, 21, 73, 51, 23, 75, 50, 23, \
71, 50, 20, 68, 50, 20, 68, 51, 20, 66, \
49, 20, 58, 43, 15, 50, 36, 8, 55, 42, \
14, 82, 63, 34, 105, 77, 45, 113, 83, 49, \
125, 95, 59, 138, 109, 70, 141, 112, 71, 124, \
95, 52, 118, 90, 46, 115, 88, 48, 108, 84, \
47, 112, 88, 53, 93, 68, 34, 79, 53, 20, \
86, 60, 27, 107, 80, 48, 102, 74, 44, 84, \
61, 39, 64, 43, 27, 61, 43, 16, 61, 44, \
16, 56, 40, 13, 60, 41, 15, 75, 53, 27, \
82, 57, 32, 85, 56, 29, 101, 70, 34, 103, \
74, 35, 86, 59, 24, 62, 38, 10, 43, 24, \
3, 45, 30, 6, 55, 42, 17, 71, 53, 25, \
99, 72, 37, 116, 87, 49, 123, 93, 55, 134, \
104, 66, 131, 101, 61, 112, 83, 42, 108, 79, \
38, 115, 88, 45, 118, 94, 49, 112, 89, 46, \
87, 63, 26, 73, 50, 18, 73, 49, 23, 80, \
56, 35, 66, 44, 29, 35, 22, 14, 25, 18, \
13, 65, 45, 15, 66, 44, 15, 54, 30, 6, \
76, 49, 21, 95, 66, 38, 103, 75, 46, 120, \
90, 59, 138, 101, 62, 141, 104, 62, 130, 95, \
57, 106, 75, 42, 82, 56, 29, 93, 72, 45, \
108, 89, 62, 102, 80, 50, 104, 77, 39, 123, \
94, 54, 125, 96, 56, 122, 93, 54, 127, 98, \
59, 135, 105, 67, 138, 108, 70, 136, 108, 65, \
127, 102, 56, 92, 68, 26, 73, 50, 13, 74, \
52, 22, 72, 51, 28, 63, 43, 26, 36, 19, \
10, 21, 17, 5, 13, 15, 2, 103, 82, 42, \
119, 93, 55, 116, 84, 50, 135, 100, 65, 131, \
97, 61, 120, 89, 53, 119, 88, 50, 131, 94, \
54, 138, 98, 59, 140, 102, 64, 136, 100, 63, \
132, 98, 62, 140, 107, 74, 142, 111, 78, 134, \
104, 67, 126, 97, 54, 127, 98, 56, 130, 101, \
59, 123, 93, 54, 123, 93, 55, 124, 94, 58, \
125, 94, 59, 119, 90, 52, 113, 85, 44, 100, \
75, 37, 92, 69, 36, 76, 56, 27, 55, 38, \
15, 53, 38, 20, 39, 27, 12, 23, 18, 4, \
22, 20, 4, 130, 107, 61, 155, 126, 81, 160, \
125, 82, 149, 111, 69, 122, 88, 44, 100, 70, \
25, 85, 57, 12, 98, 64, 25, 107, 70, 34, \
106, 69, 32, 109, 71, 33, 126, 88, 49, 139, \
101, 60, 130, 92, 50, 121, 87, 43, 123, 94, \
49, 125, 97, 53, 130, 101, 60, 116, 86, 48, \
106, 77, 40, 106, 77, 43, 108, 79, 47, 106, \
78, 45, 106, 78, 46, 116, 91, 60, 106, 84, \
56, 76, 59, 32, 60, 45, 23, 48, 37, 17, \
32, 23, 7, 25, 19, 8, 28, 22, 12, 102, \
71, 34, 125, 94, 55, 113, 83, 43, 112, 83, \
42, 115, 90, 45, 114, 91, 44, 113, 90, 43, \
111, 81, 37, 113, 80, 38, 107, 75, 33, 110, \
79, 36, 114, 84, 41, 125, 96, 52, 124, 96, \
52, 101, 74, 31, 97, 72, 31, 116, 89, 51, \
121, 92, 57, 109, 80, 47, 89, 64, 32, 86, \
66, 33, 82, 66, 34, 78, 61, 32, 73, 55, \
30, 60, 45, 24, 52, 41, 18, 47, 37, 14, \
51, 40, 18, 47, 33, 15, 34, 17, 4, 34, \
29, 12, 30, 34, 14, 113, 75, 44, 116, 80, \
46, 104, 70, 35, 110, 79, 41, 115, 87, 45, \
117, 91, 46, 127, 100, 54, 130, 99, 52, 136, \
104, 58, 132, 101, 58, 116, 87, 46, 104, 77, \
39, 118, 93, 58, 118, 93, 60, 95, 73, 39, \
96, 75, 40, 103, 81, 46, 102, 77, 45, 94, \
68, 38, 73, 50, 22, 57, 40, 14, 48, 37, \
11, 39, 27, 4, 41, 27, 8, 36, 27, 8, \
32, 27, 5, 32, 28, 4, 31, 25, 2, 45, \
32, 9, 55, 39, 17, 61, 48, 34, 57, 46, \
37, 131, 91, 61, 136, 95, 63, 138, 99, 64, \
139, 101, 64, 124, 88, 48, 124, 89, 47, 127, \
93, 49, 129, 97, 49, 134, 102, 55, 129, 98, \
55, 107, 77, 41, 93, 63, 34, 95, 67, 44, \
100, 73, 53, 93, 70, 45, 97, 80, 46, 89, \
71, 36, 91, 69, 37, 87, 62, 33, 65, 42, \
16, 45, 27, 4, 53, 40, 17, 64, 49, 28, \
53, 38, 21, 42, 32, 14, 41, 36, 13, 51, \
49, 20, 66, 63, 33, 73, 67, 34, 79, 69, \
36, 74, 55, 40, 67, 45, 39, 124, 87, 55, \
138, 101, 67, 129, 92, 57, 130, 92, 55, 147, \
109, 70, 148, 110, 69, 140, 103, 60, 132, 99, \
52, 124, 93, 46, 136, 105, 62, 127, 97, 61, \
105, 77, 47, 97, 69, 45, 97, 70, 50, 94, \
71, 45, 98, 81, 43, 97, 77, 38, 88, 63, \
27, 85, 56, 24, 87, 58, 28, 101, 75, 46, \
115, 93, 63, 136, 113, 84, 116, 94, 66, 70, \
52, 24, 61, 50, 18, 80, 73, 38, 97, 91, \
55, 84, 76, 41, 63, 52, 18, 48, 39, 10, \
49, 43, 14, 103, 74, 40, 117, 88, 52, 124, \
93, 55, 132, 98, 60, 132, 97, 57, 127, 91, \
49, 135, 100, 56, 136, 103, 57, 121, 88, 43, \
127, 96, 52, 139, 110, 69, 121, 94, 57, 94, \
68, 37, 73, 48, 23, 88, 65, 31, 102, 81, \
34, 121, 96, 48, 157, 125, 80, 140, 103, 64, \
138, 100, 63, 180, 144, 107, 155, 122, 87, 124, \
89, 54, 152, 117, 79, 139, 111, 72, 115, 95, \
57, 74, 59, 24, 74, 60, 28, 72, 57, 28, \
72, 56, 30, 62, 54, 24, 50, 47, 14, 74, \
52, 17, 98, 75, 37, 116, 92, 52, 125, 98, \
58, 134, 105, 63, 130, 97, 55, 138, 105, 63, \
138, 106, 62, 141, 109, 65, 132, 102, 58, 122, \
94, 50, 121, 94, 51, 98, 73, 33, 97, 73, \
36, 141, 117, 74, 149, 124, 74, 145, 115, 65, \
168, 132, 84, 166, 123, 79, 171, 126, 83, 183, \
139, 97, 182, 139, 97, 172, 129, 85, 197, 156, \
111, 192, 156, 111, 161, 130, 87, 113, 87, 49, \
92, 68, 37, 89, 65, 40, 79, 54, 35, 79, \
62, 42, 67, 55, 35, 80, 55, 20, 87, 65, \
28, 91, 71, 33, 102, 81, 41, 113, 89, 49, \
114, 84, 45, 115, 82, 43, 123, 91, 52, 133, \
103, 63, 137, 107, 67, 116, 87, 47, 114, 85, \
45, 99, 70, 30, 110, 82, 42, 132, 105, 65, \
151, 125, 86, 152, 123, 85, 123, 90, 52, 137, \
100, 59, 187, 148, 103, 184, 142, 95, 182, 138, \
91, 171, 134, 93, 144, 113, 76, 142, 110, 72, \
158, 123, 82, 160, 125, 84, 141, 109, 70, 104, \
75, 43, 73, 49, 23, 64, 49, 24, 71, 56, \
33, 113, 86, 50, 115, 91, 54, 85, 65, 28, \
96, 76, 37, 109, 86, 47, 101, 73, 36, 97, \
66, 30, 107, 77, 39, 118, 89, 50, 130, 101, \
63, 118, 89, 51, 111, 82, 44, 115, 86, 48, \
113, 84, 46, 96, 69, 32, 102, 76, 42, 131, \
103, 69, 150, 119, 83, 153, 118, 80, 175, 139, \
96, 183, 143, 97, 149, 108, 65, 108, 79, 49, \
64, 45, 26, 63, 43, 21, 110, 86, 60, 127, \
101, 73, 115, 92, 64, 101, 81, 57, 78, 61, \
40, 99, 76, 50, 119, 86, 62, 107, 76, 38, \
134, 109, 69, 113, 92, 54, 106, 87, 49, 119, \
98, 61, 105, 79, 44, 100, 72, 38, 98, 71, \
33, 113, 88, 48, 119, 94, 54, 113, 87, 48, \
119, 93, 53, 163, 137, 97, 181, 156, 116, 138, \
112, 74, 88, 61, 29, 92, 63, 32, 141, 110, \
73, 144, 111, 73, 111, 76, 41, 109, 72, 36, \
148, 111, 71, 147, 119, 88, 91, 70, 49, 48, \
28, 12, 54, 32, 16, 106, 83, 61, 119, 97, \
74, 124, 104, 83, 102, 82, 62, 125, 93, 66, \
137, 96, 66, 118, 84, 44, 104, 76, 39, 97, \
76, 38, 86, 68, 31, 95, 75, 41, 109, 86, \
54, 121, 96, 64, 158, 136, 98, 183, 163, 122, \
175, 153, 112, 164, 141, 100, 163, 140, 99, 182, \
159, 119, 199, 176, 135, 194, 170, 131, 179, 151, \
116, 160, 131, 96, 141, 111, 74, 134, 103, 66, \
122, 90, 56, 115, 82, 49, 133, 100, 62, 143, \
110, 72, 120, 86, 52, 97, 65, 36, 100, 69, \
39, 115, 84, 52, 128, 97, 63, 141, 108, 73, \
153, 120, 84, 158, 127, 89, 123, 94, 55, 138, \
101, 58, 112, 82, 42, 102, 79, 40, 69, 51, \
15, 87, 70, 36, 98, 78, 47, 113, 91, 62, \
148, 126, 92, 196, 176, 135, 184, 163, 122, 166, \
145, 104, 184, 162, 121, 190, 169, 128, 186, 164, \
123, 194, 169, 130, 202, 174, 137, 177, 148, 112, \
139, 110, 74, 140, 111, 75, 158, 130, 94, 151, \
123, 87, 150, 121, 86, 159, 127, 86, 161, 128, \
84, 160, 130, 89, 173, 147, 109, 179, 154, 117, \
173, 147, 108, 160, 130, 87, 159, 124, 79, 158, \
126, 84, 134, 108, 68, 126, 91, 50, 133, 104, \
63, 111, 89, 50, 86, 67, 31, 71, 53, 22, \
88, 68, 39, 114, 94, 65, 151, 132, 97, 200, \
181, 139, 185, 165, 123, 160, 140, 98, 170, 149, \
107, 192, 172, 130, 200, 181, 139, 182, 158, 117, \
164, 134, 95, 145, 114, 75, 140, 110, 72, 166, \
136, 100, 170, 141, 108, 127, 99, 68, 133, 105, \
73, 154, 127, 89, 172, 148, 105, 166, 147, 107, \
182, 167, 132, 189, 176, 143, 195, 180, 146, 200, \
182, 144, 193, 170, 129, 177, 142, 102, 161, 123, \
85, 84, 63, 29, 100, 78, 44, 99, 77, 44, \
101, 79, 45, 93, 70, 40, 111, 86, 57, 138, \
114, 81, 172, 151, 113, 171, 151, 109, 164, 143, \
101, 161, 140, 97, 157, 136, 93, 156, 134, 90, \
184, 164, 120, 174, 150, 105, 145, 114, 69, 130, \
97, 53, 136, 103, 62, 158, 125, 85, 154, 121, \
84, 121, 88, 56, 141, 108, 76, 175, 146, 108, \
180, 155, 114, 165, 142, 103, 167, 147, 110, 173, \
156, 121, 195, 180, 146, 203, 188, 155, 176, 161, \
127, 156, 129, 92, 150, 115, 77, 87, 69, 34, \
91, 71, 38, 96, 73, 39, 111, 88, 54, 102, \
77, 43, 126, 100, 68, 111, 85, 53, 111, 83, \
47, 147, 121, 81, 159, 135, 94, 160, 139, 97, \
149, 130, 87, 135, 117, 75, 115, 98, 55, 127, \
107, 65, 164, 136, 97, 174, 142, 105, 141, 109, \
72, 128, 97, 60, 142, 111, 72, 128, 97, 58, \
139, 108, 69, 170, 143, 104, 192, 168, 129, 188, \
165, 128, 176, 155, 119, 172, 154, 118, 181, 164, \
130, 153, 137, 108, 135, 120, 89, 138, 121, 92, \
133, 115, 88, 85, 67, 35, 106, 86, 53, 118, \
95, 61, 105, 82, 48, 93, 69, 35, 84, 58, \
26, 86, 59, 27, 111, 81, 45, 146, 116, 77, \
157, 131, 92, 151, 130, 89, 135, 119, 78, 125, \
114, 76, 83, 75, 38, 97, 84, 48, 140, 118, \
88, 175, 149, 121, 155, 130, 98, 106, 81, 49, \
112, 87, 50, 137, 114, 72, 142, 119, 76, 159, \
139, 99, 184, 166, 130, 179, 162, 127, 131, 115, \
82, 103, 87, 55, 110, 94, 64, 122, 107, 77, \
138, 122, 90, 145, 129, 101, 129, 112, 87, 68, \
51, 22, 87, 68, 37, 127, 105, 71, 123, 100, \
66, 112, 88, 55, 96, 70, 38, 101, 75, 42, \
122, 95, 55, 143, 117, 76, 168, 146, 105, 157, \
138, 99, 129, 115, 78, 131, 120, 85, 106, 99, \
66, 74, 63, 36, 68, 50, 27, 100, 80, 54, \
138, 119, 90, 153, 135, 103, 154, 136, 101, 173, \
156, 118, 160, 143, 104, 119, 104, 70, 104, 92, \
62, 84, 71, 46, 93, 79, 52, 86, 72, 43, \
105, 90, 61, 123, 108, 75, 96, 80, 46, 118, \
94, 59, 149, 121, 85, 100, 83, 49, 100, 81, \
46, 83, 61, 30, 84, 60, 30, 84, 60, 29, \
96, 70, 37, 103, 79, 44, 128, 109, 65, 135, \
119, 73, 151, 136, 93, 136, 121, 82, 112, 97, \
63, 119, 105, 74, 116, 102, 74, 80, 67, 41, \
69, 57, 29, 80, 68, 37, 112, 100, 69, 148, \
135, 104, 167, 154, 124, 171, 158, 129, 139, 126, \
98, 85, 75, 48, 57, 50, 27, 50, 43, 19, \
105, 95, 67, 129, 116, 85, 163, 149, 115, 115, \
100, 67, 102, 85, 50, 126, 100, 62, 149, 118, \
80, 78, 57, 23, 81, 59, 27, 90, 67, 34, \
81, 59, 28, 80, 58, 28, 80, 58, 27, 98, \
78, 43, 113, 99, 56, 136, 123, 79, 146, 133, \
93, 111, 97, 61, 104, 89, 58, 110, 95, 67, \
109, 93, 68, 103, 88, 60, 101, 88, 55, 108, \
96, 63, 109, 97, 68, 120, 109, 83, 133, 124, \
100, 133, 124, 101, 118, 110, 87, 114, 106, 80, \
96, 87, 59, 90, 81, 52, 104, 94, 66, 115, \
103, 75, 116, 100, 71, 90, 71, 42, 110, 88, \
55, 142, 118, 85, 143, 119, 87, 100, 76, 42, \
81, 58, 27, 69, 48, 21, 74, 55, 28, 85, \
68, 40, 75, 59, 32, 83, 67, 37, 97, 79, \
46, 109, 92, 59, 129, 113, 81, 111, 97, 68, \
105, 93, 66, 95, 84, 60, 95, 86, 63, 102, \
90, 63, 107, 90, 59, 106, 88, 59, 92, 77, \
52, 93, 81, 60, 99, 91, 69, 93, 88, 62, \
108, 106, 76, 113, 104, 71, 104, 89, 57, 102, \
89, 61, 85, 74, 50, 74, 64, 41, 80, 65, \
42, 79, 56, 30, 108, 81, 52, 137, 111, 81, \
129, 108, 77, 71, 56, 32, 70, 55, 29, 84, \
69, 42, 71, 56, 28, 91, 75, 45, 82, 65, \
35, 90, 73, 44, 97, 83, 54, 82, 69, 43, \
89, 78, 52, 89, 79, 55, 66, 59, 38, 36, \
30, 17, 30, 25, 14, 49, 42, 24, 81, 72, \
43, 91, 80, 49, 80, 70, 42, 73, 64, 37, \
67, 59, 30, 63, 58, 23, 74, 70, 31, 75, \
66, 34, 76, 65, 42, 62, 53, 36, 46, 38, \
23, 46, 39, 21, 63, 52, 30, 66, 51, 24, \
102, 82, 52, 110, 90, 59, 86, 67, 37, 32, \
24, 7, 41, 32, 16, 77, 65, 42, 70, 54, \
28, 85, 67, 37, 84, 64, 32, 77, 59, 29, \
60, 51, 29, 64, 58, 37, 67, 62, 41, 80, \
75, 54, 74, 70, 50, 53, 48, 32, 38, 34, \
21, 30, 26, 15, 26, 22, 10, 38, 32, 19, \
49, 43, 30, 50, 42, 30, 45, 36, 21, 44, \
34, 15, 45, 36, 13, 40, 33, 17, 29, 24, \
16, 18, 13, 8, 10, 6, 1, 29, 24, 11, \
54, 47, 27, 90, 82, 56, 99, 89, 59, 90, \
77, 48, 88, 73, 46, 51, 38, 13, 50, 36, \
11, 47, 31, 7, 64, 46, 19, 95, 75, 43, \
98, 76, 44, 60, 42, 14, 46, 38, 19, 45, \
41, 22, 54, 49, 31, 92, 87, 67, 122, 115, \
93, 112, 104, 81, 106, 97, 74, 91, 83, 65, \
46, 40, 32, 16, 10, 8, 16, 9, 9, 17, \
8, 12, 13, 5, 8, 14, 6, 5, 14, 6, \
4, 11, 7, 4, 11, 10, 6, 23, 20, 13, \
57, 51, 40, 80, 71, 54, 105, 96, 76, 122, \
115, 91, 81, 74, 51, 56, 46, 24, 70, 56, \
32, 129, 103, 66, 101, 76, 41, 85, 61, 25, \
86, 63, 28, 89, 67, 33, 119, 97, 62, 77, \
58, 29, 47, 38, 18, 48, 42, 21, 43, 35, \
17, 55, 45, 28, 114, 102, 79, 134, 120, 92, \
103, 88, 59, 116, 102, 74, 97, 87, 62, 46, \
37, 23, 24, 16, 9, 23, 17, 15, 14, 11, \
11, 8, 7, 8, 3, 4, 3, 4, 6, 2, \
34, 35, 23, 81, 76, 58, 114, 102, 80, 139, \
123, 100, 167, 152, 129, 104, 93, 75, 32, 24, \
14, 46, 34, 19, 69, 55, 34, 167, 133, 91, \
156, 122, 80, 153, 119, 78, 123, 92, 53, 97, \
69, 35, 104, 79, 49, 104, 82, 53, 77, 62, \
40, 67, 55, 33, 68, 54, 30, 67, 51, 26, \
93, 76, 47, 124, 104, 69, 93, 73, 35, 97, \
78, 38, 105, 89, 48, 88, 74, 42, 55, 43, \
20, 41, 31, 10, 41, 33, 13, 35, 28, 11, \
35, 29, 11, 46, 41, 21, 90, 83, 59, 91, \
78, 55, 62, 45, 26, 112, 93, 69, 128, 110, \
88, 41, 27, 18, 20, 8, 2, 48, 34, 19, \
60, 44, 27, 167, 134, 95, 154, 118, 77, 159, \
120, 78, 146, 108, 66, 114, 80, 43, 107, 77, \
47, 114, 88, 62, 71, 49, 32, 71, 51, 31, \
79, 59, 33, 78, 57, 26, 98, 77, 40, 122, \
100, 57, 120, 99, 52, 121, 100, 54, 111, 91, \
50, 107, 86, 48, 96, 75, 39, 90, 67, 32, \
93, 69, 33, 97, 71, 36, 103, 76, 42, 112, \
87, 53, 120, 97, 62, 100, 78, 45, 78, 57, \
27, 97, 77, 47, 117, 98, 69, 63, 46, 23, \
58, 42, 18, 60, 46, 19, 71, 57, 30, 150, \
123, 87, 149, 116, 77, 142, 106, 65, 140, 104, \
62, 151, 117, 78, 144, 114, 77, 122, 95, 64, \
92, 67, 42, 95, 70, 45, 80, 56, 28, 84, \
61, 29, 99, 77, 40, 113, 91, 50, 116, 94, \
51, 116, 95, 52, 111, 90, 50, 110, 88, 49, \
114, 91, 52, 124, 99, 61, 124, 97, 60, 122, \
93, 56, 128, 97, 61, 131, 99, 60, 130, 98, \
56, 128, 97, 55, 127, 98, 57, 123, 95, 56, \
126, 100, 63, 111, 87, 49, 105, 81, 44, 97, \
75, 33, 111, 90, 46, 102, 81, 49, 103, 77, \
40, 130, 100, 60, 146, 114, 73, 140, 109, 70, \
128, 100, 62, 122, 95, 60, 109, 80, 48, 100, \
71, 40, 98, 70, 39, 100, 74, 41, 94, 69, \
35, 93, 70, 34, 90, 68, 32, 91, 70, 33, \
98, 77, 38, 106, 85, 46, 115, 92, 53, 118, \
93, 56, 113, 87, 50, 112, 83, 47, 119, 88, \
52, 130, 94, 53, 135, 97, 50, 132, 93, 46, \
132, 95, 49, 136, 101, 56, 136, 102, 58, 134, \
102, 59, 127, 95, 54, 121, 91, 50, 115, 86, \
45, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '4';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a0fab1dfa86988f72a7926be685d3aed1';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_deer3';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{11, 9, 20, 9, 10, 20, 8, 10, 24, 8, 9, \
27, 8, 9, 26, 8, 9, 27, 7, 8, 27, \
12, 12, 27, 27, 26, 31, 11, 10, 29, 9, \
10, 28, 8, 9, 28, 8, 9, 27, 8, 9, \
27, 8, 9, 30, 8, 9, 30, 8, 9, 30, \
8, 9, 30, 8, 10, 25, 8, 10, 22, 9, \
10, 27, 10, 11, 31, 28, 26, 34, 22, 20, \
34, 8, 9, 29, 8, 9, 28, 8, 10, 25, \
8, 11, 20, 8, 11, 21, 8, 10, 23, 8, \
10, 23, 11, 9, 23, 10, 9, 22, 9, 10, \
22, 8, 10, 25, 9, 10, 29, 9, 10, 30, \
9, 9, 29, 6, 8, 26, 25, 23, 33, 52, \
49, 45, 32, 27, 38, 14, 14, 30, 8, 9, \
27, 8, 9, 28, 8, 9, 28, 8, 9, 30, \
9, 10, 31, 8, 9, 30, 8, 9, 30, 8, \
9, 26, 8, 10, 25, 8, 9, 30, 5, 7, \
28, 59, 54, 48, 57, 47, 45, 6, 8, 25, \
8, 9, 28, 8, 10, 25, 8, 11, 21, 8, \
11, 21, 8, 10, 24, 8, 10, 24, 10, 9, \
24, 8, 9, 27, 8, 9, 27, 8, 9, 27, \
9, 10, 28, 11, 12, 30, 15, 13, 32, 9, \
10, 27, 48, 40, 43, 78, 62, 54, 55, 46, \
44, 8, 9, 26, 8, 9, 28, 8, 9, 30, \
8, 9, 30, 10, 11, 32, 10, 11, 32, 8, \
9, 30, 8, 9, 30, 8, 9, 30, 8, 9, \
30, 9, 9, 30, 4, 6, 29, 37, 29, 37, \
75, 57, 46, 14, 12, 27, 8, 9, 28, 8, \
10, 26, 8, 10, 23, 8, 10, 24, 8, 9, \
27, 8, 9, 27, 8, 9, 27, 8, 9, 27, \
8, 9, 27, 8, 9, 27, 9, 10, 28, 9, \
10, 29, 39, 33, 43, 33, 26, 34, 94, 75, \
60, 90, 72, 59, 22, 19, 32, 6, 7, 25, \
8, 9, 28, 8, 9, 30, 8, 9, 30, 10, \
11, 32, 10, 11, 32, 8, 9, 30, 8, 9, \
30, 8, 9, 30, 8, 9, 30, 8, 9, 30, \
8, 9, 30, 10, 8, 29, 68, 50, 46, 39, \
29, 37, 6, 8, 27, 9, 10, 28, 8, 9, \
28, 8, 9, 28, 8, 9, 27, 8, 9, 27, \
8, 9, 27, 10, 9, 25, 9, 9, 26, 8, \
9, 27, 9, 10, 27, 6, 8, 27, 45, 36, \
40, 113, 84, 63, 120, 96, 72, 27, 25, 36, \
6, 6, 25, 9, 10, 28, 8, 9, 27, 9, \
10, 32, 8, 8, 33, 9, 9, 31, 9, 10, \
31, 8, 9, 29, 8, 9, 28, 8, 9, 28, \
8, 9, 28, 8, 9, 28, 8, 9, 28, 6, \
7, 25, 37, 25, 34, 61, 46, 40, 19, 15, \
32, 7, 9, 29, 8, 9, 29, 8, 9, 28, \
8, 9, 27, 8, 9, 27, 8, 10, 25, 11, \
9, 23, 9, 9, 26, 8, 9, 27, 9, 9, \
27, 5, 7, 26, 28, 22, 31, 114, 83, 62, \
75, 56, 46, 12, 10, 28, 9, 9, 26, 9, \
9, 27, 7, 9, 26, 7, 9, 28, 7, 7, \
32, 8, 9, 31, 8, 9, 30, 8, 9, 28, \
8, 9, 27, 8, 9, 27, 8, 9, 27, 8, \
9, 27, 8, 9, 27, 7, 10, 28, 18, 17, \
30, 54, 40, 38, 30, 22, 36, 5, 8, 29, \
9, 9, 28, 8, 9, 27, 8, 9, 27, 8, \
9, 27, 8, 10, 23, 11, 9, 22, 9, 9, \
25, 8, 9, 27, 8, 9, 27, 7, 8, 27, \
14, 14, 27, 59, 43, 39, 61, 45, 42, 20, \
18, 29, 7, 10, 26, 8, 8, 28, 16, 16, \
33, 16, 16, 30, 6, 7, 27, 8, 9, 30, \
8, 9, 30, 8, 9, 28, 8, 9, 27, 8, \
9, 27, 7, 8, 25, 8, 9, 27, 8, 7, \
26, 17, 17, 32, 44, 39, 44, 60, 45, 47, \
28, 22, 35, 6, 9, 30, 9, 10, 28, 8, \
9, 27, 8, 9, 26, 8, 9, 26, 8, 10, \
23, 11, 10, 19, 7, 8, 23, 7, 8, 27, \
8, 9, 27, 8, 9, 27, 6, 9, 24, 32, \
24, 27, 68, 50, 42, 39, 33, 35, 7, 9, \
31, 13, 12, 30, 23, 22, 31, 43, 36, 42, \
10, 10, 27, 8, 9, 27, 8, 9, 28, 8, \
9, 27, 8, 9, 27, 10, 11, 28, 26, 22, \
34, 11, 10, 27, 9, 9, 30, 17, 16, 29, \
61, 44, 42, 66, 52, 50, 14, 15, 28, 7, \
8, 31, 8, 9, 28, 8, 9, 26, 9, 7, \
22, 9, 8, 22, 10, 9, 23, 11, 9, 21, \
8, 8, 24, 8, 10, 28, 9, 10, 27, 8, \
9, 27, 8, 10, 26, 13, 10, 21, 38, 29, \
29, 75, 54, 43, 42, 30, 39, 31, 26, 30, \
26, 26, 29, 36, 31, 35, 21, 17, 30, 7, \
8, 27, 8, 9, 27, 8, 9, 27, 7, 9, \
27, 14, 13, 29, 46, 36, 44, 18, 13, 29, \
0, 7, 28, 35, 24, 27, 95, 69, 60, 46, \
36, 42, 5, 7, 23, 8, 9, 28, 8, 9, \
27, 8, 9, 26, 9, 7, 21, 9, 7, 21, \
11, 9, 23, 11, 9, 27, 10, 10, 29, 11, \
13, 32, 11, 12, 31, 9, 10, 29, 9, 9, \
28, 10, 9, 27, 10, 8, 24, 39, 26, 28, \
80, 55, 43, 53, 38, 32, 61, 45, 44, 48, \
33, 34, 41, 30, 37, 10, 9, 31, 11, 10, \
28, 10, 10, 27, 7, 8, 28, 20, 12, 25, \
42, 29, 34, 24, 19, 33, 54, 36, 34, 118, \
80, 58, 69, 52, 47, 9, 11, 28, 8, 9, \
28, 8, 10, 27, 8, 9, 27, 8, 9, 26, \
9, 8, 24, 9, 8, 23, 9, 9, 22, 11, \
12, 33, 10, 12, 32, 16, 19, 37, 16, 19, \
39, 11, 13, 35, 9, 10, 31, 9, 10, 31, \
8, 10, 33, 6, 6, 27, 18, 12, 23, 40, \
30, 32, 51, 32, 35, 48, 35, 33, 64, 45, \
41, 28, 22, 36, 7, 9, 29, 14, 12, 28, \
36, 21, 25, 75, 50, 39, 104, 72, 51, 71, \
49, 40, 68, 47, 43, 49, 36, 39, 9, 8, \
25, 9, 11, 29, 9, 10, 31, 9, 10, 30, \
8, 9, 27, 8, 9, 27, 8, 9, 27, 8, \
9, 27, 7, 9, 24, 10, 16, 36, 14, 18, \
33, 22, 25, 38, 22, 25, 42, 15, 17, 38, \
10, 12, 33, 11, 12, 33, 8, 12, 32, 8, \
12, 32, 7, 8, 28, 41, 35, 40, 81, 65, \
57, 24, 20, 19, 35, 24, 25, 40, 29, 27, \
37, 29, 29, 44, 29, 27, 74, 50, 39, 103, \
74, 52, 95, 70, 52, 35, 29, 34, 9, 11, \
25, 5, 9, 27, 8, 12, 27, 10, 11, 30, \
11, 12, 33, 10, 11, 31, 8, 9, 27, 8, \
9, 27, 8, 9, 27, 8, 9, 27, 9, 10, \
29, 15, 20, 38, 19, 23, 37, 26, 28, 41, \
25, 28, 42, 18, 21, 38, 11, 13, 34, 10, \
12, 33, 10, 13, 32, 9, 12, 30, 8, 10, \
32, 21, 19, 35, 47, 42, 42, 36, 31, 33, \
36, 27, 32, 45, 30, 23, 87, 61, 38, 121, \
87, 59, 73, 56, 46, 67, 52, 45, 56, 44, \
44, 13, 15, 31, 9, 13, 30, 10, 12, 30, \
8, 12, 28, 8, 12, 32, 10, 12, 33, 10, \
12, 32, 9, 11, 28, 9, 11, 29, 10, 9, \
30, 9, 8, 29, 10, 10, 32, 19, 22, 39, \
23, 25, 39, 27, 29, 41, 24, 27, 39, 18, \
21, 37, 12, 14, 35, 10, 12, 33, 11, 12, \
33, 10, 11, 32, 9, 10, 31, 8, 10, 29, \
9, 11, 25, 28, 26, 35, 43, 36, 37, 42, \
30, 31, 111, 75, 51, 170, 131, 93, 104, 84, \
68, 59, 44, 37, 26, 24, 33, 10, 15, 33, \
11, 13, 30, 9, 12, 30, 9, 11, 32, 9, \
11, 32, 10, 12, 33, 10, 12, 32, 10, 13, \
30, 10, 13, 31, 10, 13, 34, 9, 12, 32, \
10, 11, 32, 21, 24, 40, 21, 24, 39, 21, \
23, 38, 17, 19, 33, 13, 16, 33, 10, 12, \
33, 9, 11, 32, 10, 11, 32, 10, 11, 31, \
9, 10, 30, 9, 10, 29, 9, 10, 32, 19, \
18, 34, 44, 40, 41, 50, 42, 41, 150, 115, \
82, 215, 175, 121, 121, 96, 73, 42, 34, 32, \
16, 20, 33, 11, 13, 31, 10, 13, 29, 10, \
11, 31, 9, 11, 32, 10, 12, 32, 10, 12, \
33, 10, 13, 33, 11, 14, 32, 12, 16, 34, \
11, 19, 36, 9, 16, 34, 9, 11, 31, 21, \
23, 40, 17, 19, 38, 12, 14, 34, 11, 12, \
32, 11, 12, 33, 9, 10, 29, 8, 9, 27, \
8, 9, 27, 8, 9, 27, 8, 9, 27, 8, \
9, 27, 6, 8, 27, 23, 18, 30, 54, 46, \
48, 43, 38, 40, 109, 90, 72, 228, 193, 130, \
198, 141, 87, 174, 111, 68, 113, 73, 50, 41, \
31, 32, 8, 11, 30, 9, 9, 29, 10, 11, \
32, 10, 12, 33, 10, 12, 33, 10, 12, 33, \
10, 12, 33, 14, 17, 36, 17, 22, 35, 13, \
17, 30, 9, 10, 28, 17, 17, 40, 11, 13, \
34, 7, 9, 31, 9, 10, 31, 9, 10, 31, \
8, 9, 28, 8, 9, 27, 8, 9, 27, 8, \
9, 27, 8, 9, 27, 8, 9, 27, 8, 9, \
26, 30, 21, 25, 53, 43, 35, 51, 44, 42, \
141, 115, 92, 237, 190, 113, 223, 151, 82, 208, \
124, 65, 184, 113, 64, 129, 85, 52, 48, 34, \
38, 10, 11, 28, 9, 10, 31, 11, 12, 33, \
10, 12, 33, 10, 12, 33, 10, 12, 33, 15, \
17, 36, 23, 22, 36, 18, 17, 31, 10, 10, \
28, 11, 11, 36, 9, 10, 32, 8, 10, 28, \
8, 10, 26, 8, 9, 26, 8, 9, 25, 8, \
9, 26, 8, 9, 28, 8, 9, 27, 9, 9, \
27, 9, 9, 25, 12, 11, 25, 25, 16, 17, \
43, 33, 19, 64, 47, 31, 181, 134, 82, 230, \
166, 89, 190, 122, 67, 197, 120, 62, 191, 115, \
63, 182, 107, 61, 131, 85, 52, 47, 36, 40, \
10, 11, 31, 10, 12, 33, 10, 12, 33, 10, \
12, 33, 10, 12, 34, 16, 18, 35, 24, 24, \
38, 19, 19, 33, 10, 11, 27, 10, 10, 34, \
9, 9, 31, 8, 10, 25, 8, 10, 22, 8, \
10, 23, 8, 10, 22, 8, 10, 26, 8, 9, \
29, 8, 9, 27, 9, 9, 26, 11, 9, 23, \
17, 13, 26, 23, 12, 16, 35, 25, 18, 69, \
49, 31, 172, 120, 70, 211, 145, 83, 179, 111, \
59, 211, 126, 65, 182, 108, 58, 198, 114, 64, \
188, 111, 60, 114, 75, 53, 19, 14, 28, 8, \
10, 32, 10, 12, 34, 10, 11, 34, 11, 11, \
34, 17, 19, 34, 22, 24, 37, 18, 20, 33, \
9, 11, 26, 10, 10, 34, 9, 9, 31, 8, \
10, 25, 8, 10, 23, 8, 10, 23, 8, 10, \
23, 8, 9, 26, 8, 9, 28, 8, 9, 27, \
8, 9, 26, 10, 8, 23, 20, 16, 28, 25, \
15, 19, 33, 22, 26, 74, 56, 43, 152, 109, \
71, 180, 124, 76, 178, 108, 59, 213, 129, 69, \
165, 96, 50, 193, 110, 65, 213, 122, 66, 144, \
95, 66, 17, 16, 32, 9, 10, 32, 10, 12, \
33, 10, 11, 34, 11, 11, 34, 16, 18, 34, \
20, 22, 36, 16, 18, 32, 9, 11, 26, 8, \
9, 33, 8, 9, 31, 8, 9, 29, 8, 10, \
25, 8, 10, 23, 8, 10, 25, 8, 9, 27, \
8, 9, 27, 8, 9, 27, 7, 9, 27, 6, \
8, 26, 24, 17, 27, 29, 20, 23, 31, 23, \
26, 81, 62, 46, 146, 104, 72, 179, 123, 75, \
188, 112, 62, 219, 130, 71, 191, 108, 54, 200, \
113, 63, 225, 132, 72, 119, 81, 61, 9, 11, \
32, 9, 12, 31, 10, 11, 32, 10, 11, 33, \
12, 12, 34, 15, 16, 36, 17, 18, 38, 13, \
14, 33, 10, 11, 29, 8, 8, 32, 8, 9, \
30, 8, 9, 30, 8, 9, 26, 8, 10, 22, \
8, 9, 25, 8, 9, 27, 8, 9, 27, 8, \
9, 27, 8, 9, 27, 9, 12, 31, 30, 21, \
29, 30, 18, 18, 38, 27, 26, 102, 76, 58, \
151, 107, 73, 185, 121, 73, 197, 116, 66, 223, \
130, 72, 209, 115, 61, 214, 126, 67, 229, 146, \
80, 88, 58, 47, 7, 9, 26, 9, 11, 32, \
10, 11, 32, 10, 11, 32, 10, 11, 32, 12, \
13, 34, 14, 15, 36, 12, 13, 33, 10, 11, \
30, 7, 9, 34, 8, 10, 32, 9, 10, 30, \
9, 10, 27, 9, 10, 26, 8, 9, 27, 8, \
9, 28, 8, 9, 29, 9, 9, 29, 8, 9, \
28, 13, 16, 33, 33, 25, 32, 37, 21, 20, \
46, 31, 27, 105, 79, 54, 164, 113, 74, 188, \
123, 73, 197, 126, 73, 226, 138, 76, 217, 121, \
64, 222, 132, 74, 234, 169, 92, 75, 55, 46, \
5, 7, 23, 9, 11, 31, 9, 10, 32, 9, \
10, 31, 9, 10, 31, 10, 11, 32, 11, 12, \
33, 11, 12, 33, 17, 17, 33, 11, 15, 34, \
10, 13, 30, 11, 13, 28, 10, 12, 31, 10, \
11, 32, 9, 10, 31, 9, 10, 31, 10, 11, \
32, 9, 10, 30, 8, 8, 28, 13, 16, 29, \
27, 21, 25, 40, 22, 23, 48, 31, 24, 107, \
79, 51, 174, 118, 72, 204, 137, 81, 184, 125, \
80, 224, 146, 83, 229, 135, 70, 236, 149, 82, \
226, 174, 92, 54, 42, 37, 4, 6, 26, 9, \
10, 29, 8, 9, 30, 9, 10, 31, 10, 11, \
32, 10, 11, 31, 11, 12, 31, 10, 11, 31, \
29, 26, 36, 36, 32, 38, 26, 28, 33, 17, \
20, 32, 10, 12, 32, 10, 11, 32, 9, 10, \
31, 10, 11, 32, 14, 15, 33, 13, 15, 29, \
10, 10, 26, 11, 13, 27, 23, 17, 20, 39, \
21, 17, 56, 39, 26, 116, 82, 56, 190, 129, \
78, 187, 130, 78, 146, 103, 72, 215, 137, 84, \
223, 128, 67, 239, 160, 82, 216, 162, 87, 42, \
32, 36, 5, 8, 28, 9, 10, 29, 8, 9, \
30, 9, 10, 30, 10, 11, 32, 10, 11, 31, \
12, 14, 29, 12, 13, 28, 34, 28, 34, 68, \
56, 47, 52, 48, 42, 36, 36, 37, 15, 17, \
32, 8, 10, 31, 10, 11, 29, 16, 16, 30, \
23, 23, 34, 22, 23, 32, 11, 13, 28, 11, \
13, 28, 34, 28, 32, 47, 28, 20, 64, 45, \
32, 123, 90, 59, 195, 131, 81, 155, 105, 64, \
128, 91, 63, 181, 115, 71, 208, 122, 70, 241, \
163, 83, 210, 146, 87, 48, 37, 35, 6, 9, \
26, 9, 10, 30, 8, 9, 29, 8, 9, 26, \
9, 10, 29, 8, 9, 27, 10, 12, 24, 10, \
12, 25, 23, 20, 28, 89, 73, 53, 71, 62, \
47, 53, 50, 39, 36, 33, 33, 31, 28, 33, \
37, 33, 34, 44, 39, 36, 46, 39, 36, 40, \
34, 33, 23, 21, 27, 27, 23, 31, 53, 42, \
38, 62, 43, 30, 61, 42, 28, 88, 64, 39, \
141, 96, 60, 122, 84, 55, 116, 85, 60, 133, \
93, 55, 172, 107, 64, 205, 134, 76, 163, 109, \
70, 48, 40, 37, 8, 11, 28, 11, 12, 26, \
10, 12, 26, 8, 10, 25, 8, 9, 27, 8, \
9, 26, 7, 9, 22, 9, 11, 24, 15, 13, \
25, 98, 80, 51, 83, 71, 47, 70, 64, 44, \
64, 57, 39, 66, 57, 39, 74, 63, 44, 77, \
64, 45, 76, 60, 43, 70, 54, 42, 56, 46, \
38, 61, 48, 42, 74, 57, 42, 76, 58, 38, \
64, 46, 26, 69, 46, 24, 99, 72, 45, 80, \
59, 38, 107, 81, 60, 105, 76, 44, 123, 84, \
47, 146, 99, 62, 122, 89, 66, 38, 32, 37, \
10, 11, 28, 19, 22, 26, 20, 23, 29, 9, \
11, 26, 7, 8, 27, 8, 10, 27, 6, 9, \
21, 9, 11, 24, 18, 16, 27, 97, 81, 48, \
89, 78, 47, 85, 77, 47, 83, 74, 44, 84, \
76, 45, 92, 78, 50, 96, 77, 52, 96, 74, \
52, 92, 70, 50, 85, 68, 47, 87, 70, 47, \
90, 72, 48, 88, 71, 46, 78, 60, 36, 70, \
50, 31, 71, 52, 33, 79, 65, 40, 105, 79, \
56, 85, 62, 38, 76, 55, 32, 96, 67, 40, \
102, 78, 59, 42, 37, 35, 27, 23, 32, 40, \
37, 36, 41, 39, 35, 26, 24, 29, 14, 15, \
28, 20, 21, 32, 22, 24, 28, 20, 21, 29, \
28, 25, 31, 95, 77, 49, 94, 79, 50, 95, \
81, 51, 94, 80, 51, 95, 81, 52, 98, 81, \
53, 100, 80, 55, 101, 79, 54, 100, 78, 52, \
95, 79, 50, 97, 80, 49, 96, 79, 48, 94, \
77, 46, 91, 74, 44, 82, 64, 43, 80, 63, \
44, 92, 74, 50, 100, 78, 53, 74, 60, 38, \
64, 51, 36, 77, 57, 33, 98, 75, 51, 63, \
54, 40, 55, 48, 42, 64, 56, 42, 69, 58, \
41, 58, 48, 40, 43, 37, 34, 48, 42, 38, \
52, 46, 38, 44, 38, 35, 44, 36, 33, 93, \
74, 49, 94, 75, 49, 96, 80, 52, 97, 82, \
54, 98, 81, 54, 98, 79, 53, 97, 78, 53, \
98, 77, 51, 98, 77, 50, 97, 79, 50, 98, \
80, 49, 95, 77, 46, 95, 79, 46, 95, 79, \
46, 91, 76, 44, 89, 75, 43, 96, 78, 51, \
100, 78, 53, 86, 69, 45, 84, 68, 47, 88, \
68, 43, 111, 83, 57, 86, 70, 48, 74, 63, \
45, 81, 68, 45, 87, 70, 46, 83, 67, 47, \
77, 62, 44, 77, 63, 45, 72, 62, 45, 66, \
55, 41, 63, 53, 41, 95, 75, 49, 94, 73, \
49, 91, 76, 49, 91, 76, 49, 93, 76, 50, \
95, 76, 50, 95, 75, 50, 95, 75, 49, 97, \
77, 49, 97, 77, 50, 98, 78, 51, 97, 77, \
49, 96, 79, 47, 96, 80, 47, 93, 79, 45, \
89, 76, 41, 95, 79, 49, 104, 81, 55, 101, \
80, 53, 98, 80, 52, 99, 78, 51, 113, 83, \
58, 94, 76, 50, 83, 69, 44, 90, 74, 48, \
95, 78, 51, 95, 78, 50, 96, 78, 51, 95, \
78, 51, 88, 76, 51, 83, 71, 47, 82, 70, \
48, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '314';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a4e6503034f35be51732d0cd0a1342ec0';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_deer7';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{127, 120, 108, 147, 139, 126, 154, 144, 126, 157, 149, \
132, 147, 137, 120, 141, 130, 110, 134, 125, 107, \
139, 135, 118, 166, 163, 146, 165, 163, 146, 157, \
156, 141, 140, 136, 123, 120, 114, 100, 126, 119, \
102, 121, 111, 93, 106, 96, 79, 127, 117, 101, \
134, 124, 108, 133, 125, 110, 131, 126, 110, 136, \
128, 112, 111, 102, 89, 122, 116, 105, 164, 161, \
151, 165, 164, 155, 161, 160, 151, 164, 162, 154, \
165, 165, 155, 153, 155, 147, 146, 147, 140, 130, \
131, 124, 130, 129, 118, 117, 105, 87, 107, 94, \
76, 112, 96, 73, 115, 99, 74, 115, 99, 76, \
103, 88, 65, 113, 98, 79, 133, 126, 110, 166, \
164, 146, 169, 166, 149, 175, 173, 155, 169, 166, \
148, 142, 136, 114, 141, 135, 113, 146, 142, 125, \
134, 132, 115, 141, 135, 118, 133, 122, 107, 153, \
144, 125, 172, 169, 150, 174, 169, 151, 140, 134, \
116, 141, 134, 117, 161, 155, 136, 175, 171, 149, \
170, 165, 143, 169, 164, 143, 170, 165, 147, 173, \
167, 148, 172, 166, 145, 175, 169, 149, 161, 156, \
138, 125, 115, 91, 100, 91, 71, 126, 117, 92, \
142, 135, 103, 153, 149, 117, 126, 121, 95, 104, \
94, 74, 127, 120, 96, 161, 156, 131, 171, 167, \
145, 178, 175, 148, 173, 168, 139, 170, 164, 133, \
168, 164, 136, 159, 152, 125, 172, 166, 135, 152, \
140, 116, 125, 106, 82, 148, 134, 105, 172, 167, \
144, 170, 167, 148, 159, 154, 128, 168, 162, 132, \
166, 159, 130, 180, 173, 145, 179, 174, 145, 180, \
174, 144, 181, 174, 146, 178, 172, 145, 178, 172, \
144, 179, 174, 145, 164, 160, 134, 154, 148, 116, \
143, 137, 109, 161, 157, 129, 182, 181, 147, 181, \
179, 144, 173, 167, 134, 143, 133, 104, 154, 147, \
119, 153, 145, 114, 173, 168, 145, 180, 176, 150, \
172, 165, 132, 173, 165, 131, 177, 171, 140, 162, \
152, 123, 152, 141, 116, 124, 111, 96, 112, 92, \
71, 138, 121, 101, 158, 154, 138, 150, 143, 123, \
141, 124, 97, 149, 132, 103, 156, 141, 111, 174, \
163, 135, 185, 179, 158, 190, 184, 166, 190, 185, \
169, 173, 169, 152, 177, 168, 144, 187, 181, 158, \
164, 159, 137, 164, 159, 139, 159, 152, 129, 163, \
155, 133, 176, 170, 150, 174, 168, 146, 161, 154, \
132, 158, 149, 127, 159, 155, 133, 153, 145, 121, \
158, 153, 139, 176, 172, 156, 181, 176, 154, 183, \
177, 154, 185, 178, 156, 164, 158, 140, 91, 85, \
75, 77, 72, 63, 111, 103, 93, 126, 115, 102, \
120, 107, 87, 121, 103, 78, 145, 126, 96, 184, \
174, 155, 191, 183, 168, 193, 188, 174, 199, 196, \
188, 200, 195, 186, 196, 192, 184, 187, 186, 181, \
167, 160, 145, 180, 178, 163, 175, 172, 157, 119, \
123, 121, 122, 123, 113, 144, 142, 123, 154, 153, \
133, 143, 143, 126, 128, 126, 113, 148, 146, 129, \
143, 143, 126, 142, 136, 121, 150, 145, 137, 176, \
173, 157, 180, 177, 158, 182, 178, 157, 180, 175, \
152, 171, 170, 149, 143, 145, 125, 97, 95, 79, \
100, 95, 86, 102, 91, 80, 106, 85, 64, 145, \
121, 90, 185, 174, 153, 196, 194, 184, 198, 196, \
190, 201, 199, 195, 199, 200, 192, 199, 197, 189, \
193, 191, 183, 187, 185, 176, 144, 137, 120, 131, \
128, 113, 170, 168, 153, 148, 147, 126, 153, 152, \
128, 166, 163, 135, 166, 164, 136, 164, 165, 136, \
159, 160, 131, 168, 168, 137, 170, 172, 142, 167, \
166, 139, 162, 157, 140, 162, 160, 147, 173, 171, \
147, 178, 178, 150, 169, 168, 145, 158, 154, 136, \
168, 162, 142, 137, 126, 104, 110, 105, 90, 65, \
66, 60, 73, 64, 54, 127, 112, 90, 183, 177, \
164, 188, 185, 176, 189, 181, 166, 191, 183, 167, \
192, 187, 172, 191, 182, 165, 175, 161, 138, 150, \
133, 105, 135, 122, 97, 136, 131, 111, 167, 164, \
142, 171, 169, 139, 170, 168, 138, 174, 170, 142, \
175, 172, 144, 176, 175, 144, 174, 174, 142, 174, \
173, 141, 176, 176, 146, 176, 174, 144, 152, 146, \
121, 125, 122, 112, 140, 133, 116, 141, 134, 117, \
113, 102, 89, 113, 107, 99, 116, 107, 94, 134, \
121, 90, 173, 171, 138, 135, 138, 114, 100, 99, \
77, 100, 92, 70, 116, 107, 90, 143, 134, 120, \
142, 128, 105, 137, 113, 81, 149, 124, 91, 140, \
114, 81, 96, 77, 52, 104, 83, 57, 138, 122, \
96, 153, 150, 126, 165, 164, 137, 163, 160, 133, \
163, 160, 133, 164, 160, 134, 164, 161, 134, 161, \
160, 132, 164, 163, 136, 165, 164, 137, 165, 163, \
135, 163, 161, 135, 159, 156, 130, 141, 134, 114, \
113, 98, 85, 89, 76, 66, 109, 88, 65, 125, \
107, 78, 144, 134, 106, 146, 140, 115, 162, 160, \
134, 167, 166, 138, 168, 165, 138, 149, 143, 119, \
89, 83, 70, 60, 58, 54, 83, 77, 65, 87, \
77, 60, 77, 68, 48, 89, 78, 60, 79, 77, \
66, 41, 39, 35, 88, 78, 60, 155, 148, 122, \
165, 162, 137, 160, 155, 126, 157, 153, 125, 161, \
157, 129, 160, 157, 131, 160, 157, 131, 164, 161, \
132, 167, 164, 137, 168, 164, 138, 164, 161, 137, \
160, 159, 136, 136, 132, 122, 91, 85, 88, 99, \
94, 88, 117, 103, 87, 111, 91, 64, 162, 154, \
128, 171, 168, 148, 166, 163, 142, 166, 162, 145, \
169, 165, 147, 167, 161, 139, 153, 150, 129, 72, \
72, 67, 112, 109, 97, 154, 152, 132, 140, 137, \
116, 152, 147, 126, 151, 145, 123, 60, 59, 53, \
53, 48, 42, 121, 114, 97, 149, 145, 125, 163, \
158, 124, 163, 157, 124, 169, 162, 129, 167, 161, \
128, 170, 163, 130, 172, 164, 130, 168, 161, 130, \
167, 159, 131, 165, 159, 129, 164, 159, 135, 111, \
106, 103, 83, 77, 75, 98, 91, 82, 89, 80, \
66, 78, 67, 55, 130, 125, 116, 155, 151, 136, \
173, 160, 135, 188, 181, 167, 187, 182, 171, 181, \
173, 157, 174, 169, 149, 109, 106, 96, 118, 116, \
101, 152, 148, 126, 156, 150, 129, 160, 155, 134, \
147, 143, 122, 106, 101, 87, 71, 66, 58, 99, \
94, 82, 147, 144, 126, 164, 153, 117, 170, 158, \
120, 172, 161, 124, 171, 163, 128, 170, 162, 130, \
172, 165, 132, 166, 160, 129, 155, 148, 124, 163, \
154, 128, 120, 116, 103, 73, 68, 66, 82, 71, \
60, 68, 59, 48, 76, 64, 50, 83, 69, 56, \
111, 104, 95, 139, 125, 104, 177, 153, 120, 193, \
183, 170, 196, 194, 185, 200, 199, 192, 196, 193, \
184, 137, 134, 120, 150, 146, 128, 181, 176, 158, \
173, 168, 150, 172, 168, 150, 163, 161, 143, 123, \
118, 101, 112, 106, 91, 131, 126, 109, 170, 165, \
144, 171, 165, 143, 175, 169, 144, 177, 170, 146, \
179, 173, 151, 177, 172, 150, 174, 170, 149, 175, \
171, 150, 177, 172, 154, 181, 177, 157, 133, 129, \
119, 87, 78, 69, 60, 50, 40, 48, 38, 29, \
66, 53, 40, 55, 46, 40, 95, 86, 76, 146, \
128, 103, 180, 162, 132, 196, 192, 182, 198, 199, \
195, 201, 204, 204, 200, 203, 202, 174, 173, 166, \
167, 161, 146, 183, 177, 159, 180, 174, 156, 184, \
178, 160, 171, 164, 146, 131, 125, 107, 138, 132, \
115, 151, 144, 126, 181, 175, 155, 175, 170, 152, \
176, 172, 154, 173, 168, 152, 175, 170, 153, 176, \
171, 154, 175, 170, 152, 176, 172, 154, 180, 176, \
157, 183, 180, 160, 180, 177, 158, 174, 166, 149, \
105, 99, 87, 30, 26, 21, 42, 37, 34, 41, \
42, 46, 65, 61, 61, 141, 124, 101, 180, 164, \
136, 189, 189, 181, 193, 194, 191, 198, 204, 206, \
199, 206, 209, 194, 196, 194, 178, 176, 164, 180, \
174, 155, 181, 175, 156, 187, 182, 164, 148, 140, \
122, 150, 141, 122, 138, 132, 115, 154, 148, 130, \
187, 182, 163, 170, 166, 147, 173, 169, 151, 173, \
169, 152, 175, 171, 154, 178, 174, 156, 177, 172, \
153, 175, 171, 152, 177, 173, 155, 182, 177, 159, \
177, 174, 155, 180, 178, 159, 149, 147, 132, 39, \
39, 40, 25, 28, 35, 37, 40, 47, 51, 49, \
52, 107, 89, 70, 161, 145, 116, 184, 185, 176, \
188, 190, 185, 188, 194, 195, 187, 195, 196, 190, \
192, 189, 179, 178, 164, 168, 165, 143, 170, 167, \
146, 171, 170, 151, 142, 139, 120, 160, 157, 136, \
145, 142, 125, 159, 155, 136, 170, 168, 149, 149, \
148, 126, 148, 145, 125, 144, 141, 120, 150, 148, \
128, 155, 153, 134, 160, 159, 138, 161, 159, 138, \
161, 159, 138, 164, 161, 141, 160, 158, 138, 147, \
148, 129, 133, 137, 123, 57, 57, 57, 29, 30, \
35, 34, 36, 41, 52, 49, 51, 79, 68, 58, \
140, 119, 94, 182, 180, 169, 183, 187, 184, 178, \
183, 180, 177, 182, 181, 180, 179, 172, 172, 169, \
151, 167, 164, 139, 172, 169, 145, 171, 169, 148, \
172, 170, 149, 170, 169, 147, 172, 169, 148, 171, \
169, 148, 167, 164, 143, 147, 146, 122, 144, 141, \
118, 142, 140, 114, 150, 147, 121, 151, 147, 122, \
155, 153, 128, 161, 160, 136, 160, 160, 135, 162, \
160, 135, 163, 163, 138, 153, 155, 131, 156, 155, \
131, 86, 84, 74, 30, 31, 37, 32, 34, 38, \
44, 44, 46, 56, 51, 47, 124, 106, 85, 179, \
174, 161, 178, 181, 176, 168, 168, 158, 169, 170, \
164, 166, 162, 148, 171, 167, 144, 178, 176, 150, \
177, 174, 147, 175, 172, 145, 174, 172, 145, 176, \
173, 144, 178, 173, 147, 178, 173, 150, 178, 174, \
149, 170, 168, 139, 169, 167, 136, 173, 172, 139, \
174, 173, 141, 173, 172, 139, 173, 172, 139, 178, \
176, 144, 171, 170, 137, 172, 169, 137, 180, 177, \
145, 178, 176, 141, 183, 177, 135, 137, 129, 100, \
32, 33, 36, 20, 24, 26, 30, 31, 32, 36, \
37, 36, 120, 107, 87, 172, 167, 148, 164, 164, \
154, 160, 154, 137, 157, 149, 130, 150, 138, 114, \
175, 168, 137, 183, 180, 147, 180, 177, 143, 181, \
178, 144, 175, 173, 139, 180, 176, 144, 182, 178, \
146, 181, 177, 144, 181, 177, 142, 174, 171, 145, \
174, 171, 146, 180, 177, 150, 177, 175, 148, 174, \
172, 146, 176, 174, 149, 180, 177, 148, 179, 176, \
148, 178, 175, 150, 184, 180, 154, 183, 179, 149, \
184, 181, 148, 176, 166, 134, 69, 63, 52, 16, \
21, 24, 13, 18, 21, 16, 18, 18, 105, 93, \
75, 149, 140, 115, 134, 129, 113, 141, 129, 107, \
110, 95, 71, 103, 93, 73, 176, 172, 137, 184, \
180, 147, 184, 180, 150, 182, 179, 146, 181, 177, \
143, 184, 181, 149, 181, 178, 146, 180, 177, 144, \
180, 176, 143, 174, 169, 147, 171, 167, 143, 174, \
169, 144, 176, 171, 145, 172, 167, 141, 171, 167, \
142, 172, 168, 143, 169, 166, 141, 170, 169, 145, \
174, 171, 149, 172, 168, 147, 174, 171, 150, 183, \
176, 152, 97, 86, 69, 25, 23, 21, 40, 36, \
31, 49, 43, 35, 62, 53, 42, 69, 60, 50, \
65, 59, 49, 71, 59, 43, 26, 20, 16, 91, \
88, 78, 178, 176, 151, 172, 169, 143, 177, 173, \
149, 174, 170, 144, 173, 170, 141, 171, 169, 145, \
171, 170, 146, 173, 170, 145, 172, 169, 143, 161, \
158, 136, 160, 157, 134, 168, 165, 140, 166, 162, \
137, 164, 160, 133, 160, 158, 133, 156, 154, 133, \
157, 155, 134, 165, 163, 141, 166, 163, 141, 167, \
163, 142, 167, 164, 142, 169, 168, 146, 94, 92, \
82, 17, 16, 13, 63, 53, 39, 75, 59, 41, \
26, 20, 16, 8, 11, 14, 31, 31, 34, 36, \
36, 35, 18, 20, 23, 127, 126, 112, 169, 168, \
145, 164, 163, 137, 166, 164, 142, 163, 162, 138, \
160, 160, 137, 158, 157, 137, 162, 161, 141, 165, \
163, 142, 163, 162, 138, 158, 156, 133, 162, 159, \
136, 164, 161, 138, 165, 163, 142, 167, 165, 142, \
164, 162, 139, 166, 163, 141, 167, 164, 143, 173, \
169, 146, 171, 166, 142, 170, 166, 140, 169, 165, \
138, 181, 178, 151, 117, 116, 102, 9, 13, 16, \
47, 47, 42, 112, 107, 92, 77, 75, 66, 16, \
20, 20, 16, 20, 22, 14, 18, 19, 62, 62, \
56, 165, 161, 139, 167, 165, 140, 165, 163, 139, \
163, 162, 140, 164, 164, 139, 164, 162, 137, 165, \
162, 137, 168, 166, 140, 165, 162, 137, 163, 160, \
134, 158, 157, 133, 163, 160, 136, 169, 165, 140, \
166, 163, 137, 166, 164, 138, 166, 164, 138, 167, \
163, 135, 166, 162, 133, 167, 163, 136, 169, 164, \
138, 166, 160, 132, 164, 157, 128, 176, 169, 142, \
151, 147, 126, 44, 46, 48, 74, 75, 71, 182, \
178, 150, 150, 147, 123, 39, 42, 39, 50, 51, \
50, 32, 29, 25, 109, 105, 88, 173, 166, 136, \
168, 164, 136, 163, 159, 133, 163, 160, 133, 166, \
163, 135, 168, 162, 132, 169, 162, 131, 172, 168, \
138, 163, 159, 130, 162, 158, 129, 157, 154, 125, \
162, 158, 131, 164, 161, 135, 159, 155, 128, 163, \
159, 132, 163, 160, 133, 162, 157, 129, 161, 157, \
129, 166, 163, 135, 169, 164, 138, 171, 165, 137, \
165, 160, 130, 164, 157, 129, 170, 163, 132, 86, \
85, 81, 81, 81, 77, 172, 167, 137, 150, 146, \
121, 66, 66, 58, 122, 120, 106, 59, 56, 49, \
118, 114, 94, 167, 163, 134, 165, 162, 134, 171, \
166, 136, 169, 163, 132, 164, 159, 128, 160, 154, \
124, 162, 155, 127, 163, 157, 129, 163, 156, 127, \
160, 155, 125, 146, 143, 116, 158, 153, 124, 162, \
155, 127, 156, 150, 121, 168, 162, 136, 167, 162, \
138, 167, 163, 135, 162, 158, 131, 162, 159, 129, \
162, 158, 129, 168, 164, 134, 169, 164, 135, 161, \
157, 129, 167, 163, 133, 98, 99, 93, 89, 92, \
86, 170, 166, 136, 143, 138, 113, 65, 64, 56, \
134, 132, 112, 85, 82, 74, 127, 122, 103, 165, \
159, 127, 164, 158, 126, 158, 151, 119, 160, 151, \
118, 166, 155, 121, 154, 142, 110, 156, 146, 117, \
168, 157, 123, 168, 156, 121, 164, 151, 116, 146, \
148, 124, 148, 148, 123, 159, 154, 126, 160, 155, \
126, 161, 157, 128, 161, 157, 127, 164, 158, 129, \
168, 161, 130, 167, 160, 128, 167, 161, 128, 164, \
157, 127, 165, 159, 133, 159, 155, 129, 165, 159, \
128, 95, 94, 85, 90, 89, 86, 163, 156, 128, \
135, 130, 104, 47, 46, 40, 133, 127, 103, 105, \
98, 84, 131, 123, 101, 167, 158, 122, 160, 149, \
116, 162, 150, 116, 160, 149, 116, 162, 152, 118, \
164, 152, 115, 162, 148, 110, 162, 146, 108, 165, \
151, 113, 166, 150, 110, 162, 158, 131, 159, 156, \
128, 154, 152, 123, 157, 152, 122, 169, 163, 132, \
167, 160, 130, 163, 156, 125, 163, 158, 127, 167, \
162, 133, 168, 163, 133, 166, 159, 129, 163, 157, \
128, 160, 156, 127, 173, 163, 130, 107, 103, 88, \
91, 90, 78, 163, 154, 124, 156, 149, 119, 91, \
88, 77, 145, 138, 114, 107, 103, 90, 133, 126, \
105, 174, 164, 127, 170, 162, 131, 172, 163, 133, \
170, 161, 130, 172, 164, 130, 173, 165, 132, 170, \
161, 122, 167, 155, 119, 171, 159, 124, 172, 161, \
125, 162, 152, 121, 160, 152, 122, 155, 151, 123, \
157, 154, 126, 168, 161, 132, 169, 163, 133, 166, \
162, 131, 161, 157, 131, 166, 161, 133, 170, 163, \
133, 171, 165, 134, 166, 160, 128, 167, 160, 126, \
177, 168, 133, 122, 120, 103, 109, 108, 93, 174, \
166, 133, 179, 170, 137, 115, 111, 93, 137, 133, \
111, 100, 98, 87, 131, 125, 105, 175, 166, 129, \
169, 162, 127, 171, 165, 134, 166, 160, 129, 163, \
159, 128, 168, 163, 133, 167, 162, 130, 166, 162, \
131, 167, 162, 128, 166, 160, 126, 162, 154, 123, \
159, 151, 117, 158, 150, 118, 163, 156, 127, 163, \
156, 126, 162, 153, 122, 164, 154, 120, 164, 155, \
124, 172, 163, 129, 169, 159, 125, 165, 160, 127, \
164, 158, 126, 166, 160, 129, 174, 167, 133, 119, \
117, 102, 120, 116, 98, 179, 169, 136, 182, 174, \
142, 119, 116, 98, 108, 104, 88, 83, 78, 73, \
125, 120, 102, 166, 161, 130, 158, 153, 122, 164, \
160, 129, 165, 160, 130, 162, 157, 127, 169, 164, \
131, 168, 162, 130, 168, 167, 136, 165, 164, 132, \
159, 156, 124, 160, 154, 126, 160, 156, 127, 157, \
153, 124, 161, 153, 122, 167, 159, 127, 163, 155, \
122, 166, 156, 122, 165, 155, 123, 164, 155, 123, \
165, 156, 124, 165, 158, 125, 165, 158, 127, 161, \
154, 125, 167, 159, 125, 105, 104, 92, 117, 113, \
99, 171, 163, 131, 174, 165, 131, 109, 102, 82, \
57, 50, 42, 71, 61, 53, 112, 104, 87, 170, \
162, 131, 169, 162, 131, 172, 164, 131, 171, 163, \
128, 165, 156, 122, 162, 153, 119, 159, 155, 123, \
161, 157, 123, 161, 156, 124, 161, 154, 121, 151, \
147, 119, 151, 147, 119, 160, 154, 125, 163, 155, \
124, 161, 152, 121, 161, 153, 121, 166, 159, 126, \
162, 155, 124, 153, 147, 117, 152, 146, 116, 153, \
149, 121, 156, 150, 120, 157, 149, 114, 160, 149, \
114, 104, 93, 82, 110, 100, 85, 153, 146, 116, \
154, 146, 113, 105, 95, 75, 43, 36, 35, 67, \
64, 62, 116, 110, 91, 164, 155, 121, 160, 152, \
119, 154, 145, 113, 158, 150, 118, 161, 155, 123, \
150, 145, 117, 145, 141, 116, 157, 151, 119, 156, \
149, 119, 162, 155, 123, 154, 149, 120, 154, 147, \
117, 162, 156, 126, 163, 158, 130, 152, 147, 120, \
153, 149, 122, 157, 152, 125, 155, 150, 120, 153, \
148, 120, 148, 142, 116, 145, 141, 115, 147, 143, \
114, 152, 144, 113, 136, 130, 107, 83, 74, 73, \
111, 99, 82, 151, 144, 114, 149, 141, 111, 121, \
116, 96, 80, 81, 77, 105, 106, 93, 135, 131, \
105, 144, 140, 110, 140, 137, 111, 143, 139, 109, \
147, 142, 109, 152, 146, 114, 150, 143, 114, 143, \
138, 108, 150, 142, 113, 154, 147, 116, 156, 148, \
116, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '624';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1aef49cfc07f2aed8c5c30fd1eb73c03c9';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_bird7';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{252, 253, 255, 248, 249, 254, 248, 249, 254, 249, 250, \
255, 249, 250, 255, 248, 249, 254, 243, 244, 250, \
234, 235, 243, 226, 227, 235, 222, 223, 231, 213, \
213, 221, 198, 197, 205, 209, 208, 216, 219, 218, \
227, 220, 218, 227, 227, 223, 231, 216, 208, 215, \
227, 219, 224, 234, 234, 239, 235, 236, 247, 231, \
232, 242, 233, 236, 241, 236, 239, 248, 235, 239, \
248, 238, 241, 250, 238, 240, 248, 242, 243, 248, \
249, 250, 255, 251, 252, 255, 252, 253, 255, 253, \
254, 255, 255, 255, 255, 249, 250, 255, 245, 246, \
251, 245, 246, 251, 246, 247, 252, 245, 246, 251, \
244, 245, 249, 233, 232, 239, 209, 205, 214, 195, \
192, 201, 190, 187, 196, 203, 198, 206, 179, 174, \
181, 183, 178, 185, 199, 193, 201, 208, 201, 208, \
211, 203, 209, 200, 189, 193, 211, 200, 202, 225, \
221, 225, 226, 223, 233, 228, 224, 233, 228, 227, \
231, 233, 235, 241, 238, 241, 247, 240, 242, 248, \
239, 240, 246, 243, 244, 249, 246, 247, 252, 247, \
248, 253, 250, 251, 254, 250, 251, 253, 253, 254, \
255, 250, 251, 255, 246, 247, 252, 247, 248, 253, \
246, 247, 252, 245, 246, 251, 239, 240, 245, 223, \
221, 228, 180, 173, 183, 156, 148, 159, 148, 141, \
151, 175, 166, 174, 174, 164, 170, 165, 155, 162, \
180, 170, 177, 194, 183, 188, 194, 182, 184, 191, \
176, 176, 197, 182, 181, 208, 201, 203, 213, 206, \
214, 216, 209, 217, 212, 208, 211, 226, 225, 231, \
239, 238, 244, 242, 241, 247, 241, 241, 247, 243, \
244, 249, 248, 249, 254, 248, 249, 254, 250, 251, \
254, 249, 250, 252, 253, 254, 255, 251, 252, 255, \
248, 249, 254, 247, 248, 253, 246, 247, 252, 245, \
246, 251, 232, 233, 238, 207, 203, 211, 157, 147, \
157, 107, 97, 107, 119, 108, 119, 140, 128, 137, \
163, 150, 157, 160, 148, 154, 171, 159, 165, 184, \
171, 173, 191, 176, 175, 187, 169, 167, 192, 174, \
171, 194, 183, 185, 201, 191, 199, 195, 184, 191, \
191, 183, 186, 205, 203, 208, 219, 217, 222, 229, \
227, 233, 234, 233, 239, 241, 242, 247, 248, 249, \
254, 249, 250, 255, 246, 248, 251, 246, 248, 250, \
253, 254, 255, 250, 251, 255, 248, 249, 254, 247, \
248, 253, 246, 249, 252, 244, 244, 249, 227, 225, \
234, 193, 186, 195, 155, 143, 149, 96, 84, 90, \
88, 76, 82, 124, 113, 120, 155, 145, 151, 169, \
158, 162, 174, 161, 163, 178, 163, 164, 184, 169, \
166, 178, 160, 155, 187, 167, 167, 191, 176, 175, \
192, 178, 179, 177, 163, 163, 177, 165, 166, 183, \
176, 182, 187, 181, 184, 202, 197, 203, 215, 213, \
222, 232, 233, 241, 244, 245, 250, 248, 249, 253, \
243, 247, 252, 241, 247, 252, 250, 254, 255, 250, \
251, 255, 247, 248, 253, 246, 248, 252, 245, 248, \
251, 245, 245, 251, 220, 217, 227, 177, 169, 179, \
157, 146, 150, 123, 112, 116, 65, 54, 58, 81, \
71, 77, 112, 100, 107, 146, 132, 137, 166, 150, \
151, 175, 160, 160, 175, 160, 155, 162, 144, 139, \
174, 154, 155, 182, 166, 164, 185, 170, 166, 175, \
160, 156, 172, 158, 158, 173, 162, 167, 160, 151, \
152, 167, 161, 167, 184, 181, 193, 214, 214, 224, \
238, 238, 245, 247, 248, 252, 241, 247, 252, 240, \
247, 252, 250, 254, 255, 250, 251, 255, 247, 248, \
253, 246, 247, 252, 239, 242, 246, 233, 233, 239, \
205, 202, 212, 164, 157, 168, 141, 132, 138, 124, \
115, 121, 87, 79, 84, 53, 43, 50, 56, 42, \
50, 94, 78, 83, 117, 99, 101, 141, 125, 126, \
157, 143, 138, 143, 126, 120, 142, 122, 123, 152, \
136, 135, 162, 147, 144, 162, 147, 144, 160, 145, \
143, 176, 161, 162, 162, 152, 151, 127, 121, 126, \
139, 137, 149, 196, 196, 206, 239, 239, 245, 246, \
247, 251, 246, 250, 253, 246, 250, 253, 253, 255, \
255, 249, 250, 255, 247, 248, 253, 245, 247, 252, \
242, 245, 248, 219, 218, 224, 149, 145, 156, 96, \
90, 101, 71, 64, 71, 56, 50, 57, 74, 67, \
74, 72, 64, 72, 44, 35, 41, 46, 35, 38, \
70, 56, 57, 91, 77, 77, 133, 118, 113, 129, \
112, 106, 123, 103, 104, 128, 112, 110, 135, 120, \
117, 139, 124, 121, 136, 119, 117, 156, 136, 134, \
137, 124, 122, 80, 73, 79, 130, 128, 141, 208, \
208, 217, 237, 238, 243, 247, 248, 252, 250, 253, \
255, 251, 254, 255, 255, 255, 255, 249, 250, 255, \
246, 247, 252, 244, 246, 250, 243, 246, 249, 232, \
232, 239, 145, 142, 153, 49, 44, 55, 19, 14, \
22, 17, 12, 20, 28, 22, 30, 60, 57, 63, \
54, 51, 55, 44, 40, 41, 58, 51, 50, 76, \
64, 63, 112, 97, 92, 126, 109, 104, 131, 111, \
112, 148, 131, 130, 158, 142, 139, 156, 141, 138, \
140, 123, 119, 137, 116, 111, 101, 88, 84, 80, \
74, 80, 152, 151, 163, 217, 217, 227, 241, 242, \
248, 250, 251, 254, 251, 253, 255, 252, 253, 254, \
255, 255, 254, 249, 250, 255, 246, 247, 252, 245, \
246, 251, 240, 242, 248, 222, 221, 231, 146, 142, \
156, 52, 47, 62, 26, 23, 36, 20, 17, 29, \
19, 16, 28, 41, 39, 49, 55, 54, 60, 66, \
66, 71, 84, 84, 88, 89, 83, 82, 110, 101, \
96, 128, 118, 115, 134, 120, 120, 170, 149, 150, \
215, 196, 196, 219, 204, 202, 214, 201, 198, 190, \
179, 174, 162, 155, 156, 153, 150, 161, 181, 179, \
194, 220, 219, 229, 246, 245, 250, 252, 252, 254, \
253, 253, 254, 253, 253, 253, 255, 255, 255, 250, \
251, 255, 246, 247, 252, 245, 246, 251, 242, 244, \
250, 235, 234, 244, 199, 194, 208, 92, 88, 103, \
41, 39, 52, 15, 13, 26, 17, 15, 28, 38, \
37, 47, 52, 51, 59, 70, 69, 77, 81, 80, \
88, 110, 110, 115, 123, 120, 123, 128, 119, 122, \
121, 106, 108, 79, 58, 62, 143, 125, 129, 216, \
204, 206, 197, 190, 189, 180, 175, 174, 155, 152, \
155, 125, 124, 132, 119, 118, 128, 179, 178, 186, \
236, 235, 240, 252, 252, 254, 253, 253, 253, 253, \
253, 253, 255, 255, 255, 251, 252, 255, 246, 247, \
252, 244, 246, 251, 244, 246, 251, 239, 239, 246, \
208, 204, 215, 103, 98, 111, 31, 29, 40, 9, \
7, 18, 12, 10, 21, 38, 36, 46, 63, 62, \
70, 83, 79, 88, 78, 73, 82, 102, 101, 113, \
122, 118, 129, 149, 135, 141, 138, 116, 119, 83, \
65, 70, 108, 94, 99, 124, 116, 119, 85, 81, \
81, 74, 69, 68, 69, 66, 65, 60, 60, 59, \
61, 61, 63, 113, 113, 117, 227, 226, 230, 254, \
254, 255, 253, 253, 253, 253, 253, 253, 255, 255, \
255, 251, 252, 255, 246, 247, 252, 244, 246, 250, \
244, 248, 250, 246, 245, 251, 227, 223, 232, 143, \
139, 149, 46, 45, 53, 18, 16, 25, 15, 13, \
22, 40, 40, 48, 90, 89, 97, 99, 92, 103, \
103, 92, 103, 133, 124, 133, 157, 144, 149, 169, \
147, 149, 143, 116, 116, 111, 91, 88, 90, 76, \
71, 65, 58, 51, 50, 46, 37, 47, 43, 35, \
36, 33, 28, 29, 29, 25, 29, 30, 27, 73, \
73, 72, 224, 224, 226, 255, 255, 255, 253, 253, \
253, 253, 253, 253, 255, 255, 255, 250, 251, 255, \
246, 247, 252, 246, 248, 252, 245, 248, 249, 245, \
245, 249, 224, 221, 228, 138, 134, 142, 66, 64, \
71, 37, 36, 42, 35, 33, 39, 78, 78, 85, \
113, 111, 119, 124, 115, 125, 151, 136, 147, 159, \
139, 137, 136, 113, 105, 131, 104, 97, 136, 108, \
100, 120, 98, 82, 85, 69, 50, 68, 58, 38, \
55, 49, 29, 50, 47, 30, 36, 34, 24, 24, \
23, 21, 23, 24, 21, 117, 118, 113, 248, 248, \
247, 253, 253, 255, 253, 253, 254, 253, 253, 253, \
255, 255, 255, 251, 251, 254, 248, 248, 251, 250, \
250, 253, 248, 249, 251, 238, 236, 243, 189, 184, \
192, 98, 92, 97, 65, 58, 64, 60, 54, 56, \
81, 76, 74, 119, 114, 117, 125, 118, 124, 125, \
111, 114, 140, 119, 120, 134, 113, 109, 117, 98, \
91, 147, 128, 117, 145, 128, 114, 92, 78, 61, \
58, 47, 30, 48, 40, 24, 45, 41, 24, 46, \
43, 27, 41, 38, 26, 31, 28, 20, 65, 64, \
59, 207, 207, 204, 255, 255, 254, 253, 253, 253, \
253, 253, 254, 252, 252, 253, 255, 255, 255, 252, \
252, 254, 250, 250, 252, 251, 251, 253, 249, 249, \
252, 225, 222, 232, 151, 145, 154, 106, 99, 103, \
91, 82, 86, 87, 79, 79, 103, 96, 92, 122, \
112, 112, 117, 104, 105, 132, 116, 116, 130, 111, \
109, 100, 85, 86, 116, 104, 103, 118, 107, 98, \
84, 73, 60, 54, 46, 31, 49, 42, 28, 46, \
42, 30, 43, 40, 28, 48, 45, 31, 53, 49, \
38, 59, 55, 45, 165, 163, 158, 252, 253, 252, \
252, 252, 252, 253, 253, 253, 252, 252, 254, 252, \
252, 254, 255, 255, 255, 252, 252, 254, 251, 251, \
253, 252, 253, 254, 248, 248, 251, 211, 208, 218, \
158, 152, 160, 139, 132, 135, 114, 105, 106, 82, \
74, 74, 89, 81, 80, 110, 98, 96, 127, 112, \
111, 123, 111, 110, 112, 101, 101, 127, 116, 118, \
117, 107, 106, 69, 60, 53, 48, 39, 27, 53, \
46, 30, 59, 55, 40, 55, 53, 41, 44, 43, \
29, 62, 59, 44, 76, 72, 61, 114, 109, 104, \
234, 231, 231, 253, 253, 255, 251, 251, 253, 252, \
252, 255, 252, 252, 254, 252, 252, 254, 253, 253, \
255, 254, 254, 255, 252, 252, 254, 252, 252, 254, \
241, 241, 244, 204, 201, 211, 177, 171, 180, 143, \
136, 138, 96, 88, 85, 62, 54, 54, 70, 61, \
63, 92, 82, 83, 105, 94, 93, 116, 106, 104, \
140, 130, 129, 107, 98, 96, 48, 41, 35, 49, \
42, 30, 69, 63, 47, 76, 72, 55, 68, 67, \
51, 44, 45, 32, 42, 43, 28, 77, 74, 59, \
109, 104, 96, 184, 179, 178, 250, 246, 251, 250, \
249, 254, 251, 250, 255, 251, 250, 255, 251, 251, \
254, 251, 251, 253, 252, 252, 254, 255, 255, 255, \
253, 253, 255, 250, 251, 252, 239, 239, 242, 210, \
207, 217, 185, 179, 187, 133, 126, 127, 83, 75, \
71, 75, 67, 66, 86, 77, 81, 111, 105, 109, \
134, 129, 130, 150, 141, 138, 118, 105, 99, 53, \
45, 36, 58, 53, 40, 75, 72, 53, 78, 75, \
52, 72, 70, 52, 52, 52, 36, 33, 35, 21, \
52, 54, 39, 90, 87, 71, 140, 135, 128, 210, \
204, 208, 245, 241, 248, 249, 248, 254, 250, 249, \
254, 251, 250, 255, 250, 250, 253, 249, 249, 252, \
251, 251, 254, 255, 255, 255, 253, 253, 254, 250, \
250, 253, 236, 234, 243, 217, 212, 221, 189, 181, \
186, 130, 123, 122, 84, 78, 74, 98, 91, 92, \
124, 117, 121, 150, 144, 146, 162, 157, 154, 143, \
135, 128, 71, 62, 51, 68, 60, 49, 92, 85, \
71, 86, 79, 61, 71, 65, 45, 58, 54, 40, \
51, 49, 35, 51, 50, 35, 73, 71, 54, 107, \
100, 86, 166, 158, 156, 213, 205, 212, 241, 237, \
245, 248, 247, 253, 250, 249, 255, 250, 249, 254, \
249, 248, 253, 248, 247, 252, 251, 250, 255, 254, \
254, 255, 252, 252, 254, 249, 248, 252, 231, 228, \
236, 211, 207, 210, 186, 178, 177, 134, 127, 122, \
111, 106, 103, 133, 127, 127, 145, 139, 142, 153, \
146, 146, 143, 136, 130, 101, 94, 86, 77, 70, \
59, 100, 93, 81, 103, 95, 83, 82, 74, 58, \
66, 60, 42, 69, 65, 51, 72, 68, 55, 78, \
74, 61, 95, 90, 75, 120, 111, 101, 181, 172, \
175, 220, 213, 221, 243, 239, 246, 248, 247, 253, \
249, 248, 254, 249, 248, 254, 249, 248, 254, 249, \
248, 254, 251, 250, 255, 255, 255, 255, 251, 251, \
253, 246, 246, 248, 228, 226, 230, 209, 206, 204, \
183, 177, 171, 144, 138, 130, 136, 131, 125, 144, \
139, 136, 146, 140, 140, 146, 139, 138, 124, 116, \
111, 91, 84, 75, 105, 99, 88, 114, 108, 96, \
101, 95, 81, 78, 72, 56, 73, 69, 49, 79, \
76, 59, 85, 82, 67, 102, 99, 87, 115, 110, \
99, 146, 138, 132, 192, 185, 189, 230, 226, 233, \
246, 244, 249, 250, 249, 254, 250, 249, 254, 249, \
248, 254, 250, 249, 255, 250, 249, 255, 252, 251, \
255, 255, 255, 255, 250, 250, 252, 242, 241, 244, \
225, 223, 227, 202, 199, 199, 175, 168, 163, 154, \
148, 139, 143, 139, 131, 148, 143, 138, 147, 142, \
139, 137, 131, 128, 115, 107, 102, 112, 105, 96, \
123, 117, 105, 111, 106, 94, 93, 90, 76, 86, \
83, 65, 82, 80, 60, 81, 78, 58, 93, 90, \
74, 119, 115, 105, 136, 131, 124, 170, 164, 162, \
207, 202, 208, 237, 235, 241, 247, 247, 251, 250, \
249, 255, 250, 249, 255, 251, 250, 255, 251, 250, \
255, 251, 250, 255, 253, 252, 255, 255, 255, 255, \
252, 252, 253, 245, 244, 248, 232, 229, 238, 204, \
199, 205, 174, 166, 167, 158, 152, 146, 147, 143, \
133, 140, 135, 128, 132, 127, 122, 124, 117, 114, \
119, 111, 106, 123, 116, 107, 118, 111, 100, 104, \
100, 87, 96, 94, 79, 91, 89, 71, 79, 77, \
57, 86, 84, 63, 101, 98, 82, 130, 126, 116, \
158, 152, 148, 184, 179, 180, 216, 213, 221, 239, \
239, 244, 246, 246, 250, 250, 249, 254, 250, 249, \
255, 251, 250, 255, 251, 250, 255, 251, 250, 255, \
253, 252, 255, 255, 255, 255, 253, 254, 254, 250, \
251, 253, 237, 237, 246, 218, 216, 224, 183, 179, \
179, 156, 151, 142, 136, 130, 117, 123, 116, 105, \
122, 115, 107, 128, 121, 115, 128, 121, 114, 115, \
108, 97, 106, 100, 85, 97, 94, 78, 96, 93, \
77, 87, 84, 67, 79, 77, 59, 94, 93, 76, \
115, 112, 99, 142, 134, 126, 174, 166, 163, 202, \
200, 202, 222, 221, 225, 237, 237, 241, 246, 246, \
248, 249, 249, 252, 250, 250, 253, 251, 251, 254, \
251, 251, 254, 251, 250, 254, 253, 253, 255, 254, \
255, 255, 252, 254, 253, 250, 253, 253, 237, 240, \
246, 222, 222, 230, 199, 197, 197, 157, 152, 142, \
128, 120, 108, 120, 112, 100, 125, 117, 105, 129, \
121, 111, 116, 109, 99, 102, 96, 82, 96, 90, \
74, 91, 88, 70, 87, 84, 67, 81, 78, 61, \
74, 71, 55, 95, 93, 80, 126, 123, 112, 151, \
142, 136, 181, 172, 170, 211, 210, 212, 236, 236, \
238, 243, 243, 245, 248, 248, 250, 249, 249, 251, \
250, 250, 252, 251, 251, 253, 251, 251, 253, 251, \
251, 253, 253, 253, 255, 254, 255, 255, 252, 254, \
253, 251, 253, 253, 243, 246, 250, 229, 228, 236, \
206, 204, 206, 165, 160, 153, 126, 118, 108, 117, \
109, 97, 122, 114, 100, 118, 112, 97, 104, 98, \
85, 96, 90, 76, 90, 84, 68, 80, 76, 60, \
76, 73, 56, 77, 74, 57, 64, 61, 44, 93, \
89, 76, 132, 126, 117, 162, 154, 151, 190, 184, \
184, 207, 206, 208, 230, 230, 232, 247, 247, 249, \
249, 249, 251, 249, 249, 251, 250, 250, 252, 251, \
251, 253, 251, 251, 253, 251, 251, 253, 253, 253, \
255, 254, 255, 255, 252, 254, 253, 252, 254, 253, \
247, 251, 251, 238, 238, 244, 215, 212, 216, 171, \
165, 162, 129, 120, 113, 116, 108, 96, 119, 112, \
95, 113, 108, 88, 104, 99, 80, 95, 90, 73, \
82, 76, 61, 75, 71, 54, 76, 74, 57, 76, \
73, 56, 62, 59, 42, 95, 89, 76, 137, 130, \
123, 177, 170, 171, 204, 199, 204, 223, 222, 225, \
243, 243, 245, 251, 251, 253, 251, 251, 253, 250, \
250, 252, 250, 250, 252, 252, 252, 254, 253, 253, \
255, 251, 251, 253, 253, 253, 255, 250, 252, 251, \
252, 254, 253, 252, 254, 252, 249, 253, 251, 240, \
239, 245, 227, 224, 230, 186, 180, 180, 137, 128, \
123, 117, 109, 97, 111, 104, 85, 102, 97, 74, \
94, 89, 67, 82, 77, 59, 79, 74, 59, 75, \
72, 56, 80, 77, 60, 78, 75, 58, 74, 70, \
53, 111, 102, 90, 159, 151, 145, 199, 194, 198, \
219, 216, 223, 243, 243, 245, 253, 253, 255, 252, \
252, 254, 252, 252, 254, 251, 251, 253, 251, 251, \
253, 252, 252, 254, 253, 253, 255, 251, 251, 253, \
253, 253, 255, 221, 226, 221, 250, 251, 253, 252, \
253, 253, 251, 252, 253, 240, 239, 245, 223, 222, \
230, 193, 188, 192, 144, 136, 131, 119, 112, 101, \
109, 103, 84, 93, 87, 67, 77, 72, 53, 69, \
66, 48, 69, 67, 50, 71, 69, 53, 75, 72, \
56, 85, 81, 63, 94, 87, 70, 131, 123, 113, \
184, 178, 178, 217, 213, 220, 238, 237, 242, 252, \
251, 253, 254, 253, 255, 254, 253, 255, 254, 253, \
255, 254, 252, 253, 252, 252, 253, 252, 253, 253, \
253, 253, 254, 252, 252, 254, 253, 253, 255, 175, \
184, 170, 244, 248, 246, 254, 255, 255, 251, 250, \
252, 239, 239, 244, 227, 226, 234, 200, 197, 202, \
153, 145, 141, 126, 119, 109, 109, 103, 87, 92, \
87, 70, 82, 77, 61, 68, 67, 49, 59, 60, \
42, 67, 66, 51, 74, 71, 55, 93, 87, 70, \
110, 102, 85, 151, 145, 136, 188, 183, 186, 214, \
212, 219, 244, 243, 247, 253, 252, 254, 254, 253, \
255, 253, 253, 255, 254, 253, 254, 254, 252, 253, \
253, 252, 252, 251, 254, 253, 252, 253, 254, 253, \
252, 255, 253, 253, 255, 142, 155, 131, 207, 214, \
202, 228, 232, 223, 243, 243, 243, 234, 233, 236, \
227, 226, 232, 205, 201, 206, 170, 162, 159, 138, \
131, 123, 110, 104, 90, 98, 92, 76, 91, 85, \
71, 79, 77, 61, 67, 68, 52, 67, 66, 52, \
79, 76, 63, 99, 93, 78, 123, 116, 100, 169, \
166, 157, 201, 199, 201, 230, 230, 236, 250, 252, \
255, 252, 254, 255, 253, 254, 255, 255, 255, 255, \
255, 255, 255, 255, 255, 255, 252, 254, 253, 248, \
253, 251, 253, 255, 255, 255, 255, 255, 255, 255, \
255, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '934';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a59a923c519d82df8989d81c05b5ce155';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_airplane3';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{51, 83, 130, 51, 88, 140, 78, 85, 96, 103, 90, \
57, 132, 117, 110, 100, 111, 143, 56, 99, 159, \
57, 97, 159, 57, 90, 168, 44, 97, 161, 46, \
97, 159, 49, 95, 162, 48, 94, 162, 48, 94, \
163, 50, 96, 165, 51, 96, 166, 51, 95, 164, \
51, 95, 163, 51, 96, 162, 51, 95, 161, 52, \
97, 161, 53, 100, 162, 52, 100, 165, 51, 99, \
168, 52, 101, 175, 52, 101, 178, 54, 103, 179, \
53, 100, 179, 51, 97, 179, 52, 97, 178, 51, \
97, 171, 57, 102, 167, 52, 84, 135, 55, 92, \
147, 79, 82, 90, 101, 82, 38, 108, 84, 59, \
87, 88, 108, 54, 93, 165, 48, 98, 171, 54, \
96, 169, 48, 97, 169, 48, 98, 168, 49, 97, \
168, 49, 98, 168, 50, 100, 169, 52, 102, 171, \
53, 100, 171, 53, 98, 169, 53, 98, 168, 53, \
99, 167, 53, 98, 165, 53, 99, 165, 52, 101, \
165, 51, 101, 168, 51, 102, 173, 50, 101, 177, \
50, 102, 181, 52, 104, 185, 49, 101, 184, 47, \
99, 185, 48, 101, 186, 46, 101, 182, 51, 104, \
176, 53, 86, 139, 56, 94, 151, 90, 91, 96, \
123, 99, 45, 122, 90, 49, 95, 85, 89, 60, \
92, 165, 45, 100, 183, 51, 101, 172, 52, 97, \
176, 49, 97, 174, 48, 98, 171, 48, 98, 171, \
50, 100, 171, 52, 103, 172, 54, 103, 173, 54, \
100, 172, 53, 100, 170, 53, 100, 168, 52, 100, \
166, 53, 101, 167, 51, 102, 167, 51, 102, 170, \
51, 103, 176, 49, 102, 179, 48, 101, 182, 47, \
102, 185, 45, 100, 185, 45, 102, 187, 46, 104, \
189, 44, 104, 187, 47, 104, 181, 52, 90, 145, \
55, 96, 157, 107, 109, 115, 148, 120, 60, 135, \
95, 49, 104, 85, 73, 70, 95, 152, 47, 102, \
190, 48, 104, 179, 53, 99, 182, 50, 99, 181, \
48, 100, 177, 48, 101, 176, 50, 102, 175, 52, \
105, 175, 54, 104, 176, 54, 102, 175, 54, 102, \
173, 51, 100, 169, 50, 99, 167, 52, 101, 168, \
51, 103, 171, 51, 104, 175, 50, 105, 180, 49, \
104, 184, 47, 103, 186, 45, 103, 190, 44, 102, \
188, 47, 106, 188, 53, 112, 192, 49, 108, 189, \
52, 107, 181, 50, 95, 150, 53, 99, 164, 115, \
118, 128, 159, 127, 67, 139, 96, 52, 107, 85, \
59, 79, 95, 126, 50, 99, 188, 43, 104, 187, \
48, 101, 184, 49, 101, 185, 48, 102, 182, 49, \
103, 179, 50, 105, 178, 50, 105, 175, 52, 104, \
176, 54, 102, 176, 53, 102, 175, 50, 99, 169, \
49, 98, 167, 52, 102, 170, 50, 105, 174, 49, \
105, 177, 49, 106, 182, 48, 105, 187, 46, 104, \
189, 45, 104, 193, 46, 105, 191, 59, 115, 194, \
76, 130, 204, 67, 119, 193, 75, 121, 190, 49, \
100, 156, 51, 102, 170, 115, 120, 133, 164, 130, \
72, 141, 98, 58, 108, 85, 48, 87, 96, 101, \
55, 97, 185, 41, 102, 192, 44, 104, 185, 48, \
103, 188, 48, 103, 186, 48, 105, 182, 49, 106, \
179, 49, 107, 177, 52, 105, 177, 54, 103, 178, \
52, 102, 175, 50, 99, 171, 50, 100, 170, 53, \
105, 174, 51, 107, 177, 48, 105, 178, 49, 107, \
185, 47, 107, 189, 46, 105, 192, 46, 105, 195, \
53, 111, 195, 85, 139, 213, 104, 152, 218, 101, \
143, 208, 123, 161, 221, 50, 105, 167, 51, 106, \
176, 114, 122, 137, 173, 134, 76, 146, 106, 56, \
110, 84, 36, 97, 92, 83, 66, 96, 175, 44, \
102, 190, 46, 104, 187, 47, 103, 191, 47, 104, \
190, 49, 106, 187, 51, 107, 184, 51, 108, 181, \
54, 106, 181, 55, 102, 180, 53, 102, 178, 51, \
101, 177, 51, 103, 179, 53, 107, 180, 53, 109, \
177, 48, 108, 181, 46, 107, 190, 47, 106, 196, \
50, 105, 199, 50, 107, 195, 54, 114, 195, 92, \
145, 215, 135, 173, 226, 151, 181, 227, 163, 193, \
237, 51, 106, 179, 53, 108, 185, 110, 122, 146, \
179, 137, 89, 157, 118, 64, 119, 88, 41, 106, \
91, 76, 77, 100, 159, 50, 103, 188, 48, 104, \
192, 49, 105, 194, 48, 105, 192, 50, 106, 189, \
51, 107, 186, 52, 107, 183, 56, 106, 183, 57, \
104, 182, 55, 104, 181, 53, 104, 181, 54, 107, \
184, 57, 109, 185, 58, 108, 181, 53, 107, 184, \
48, 106, 190, 50, 105, 194, 55, 106, 194, 56, \
110, 195, 53, 113, 195, 86, 139, 210, 147, 182, \
231, 172, 199, 235, 162, 193, 230, 53, 105, 184, \
55, 110, 195, 103, 119, 159, 159, 123, 93, 141, \
103, 59, 113, 82, 47, 102, 86, 67, 85, 105, \
134, 58, 106, 188, 47, 106, 198, 51, 109, 197, \
51, 108, 194, 50, 107, 190, 51, 107, 187, 53, \
109, 186, 57, 110, 188, 58, 109, 187, 57, 108, \
184, 57, 108, 181, 59, 109, 180, 61, 110, 182, \
64, 107, 186, 61, 107, 189, 57, 108, 190, 55, \
108, 188, 58, 110, 187, 61, 113, 195, 55, 113, \
200, 70, 125, 203, 121, 161, 218, 137, 170, 214, \
121, 159, 200, 57, 107, 181, 57, 112, 197, 93, \
119, 168, 123, 97, 79, 97, 63, 27, 83, 53, \
32, 79, 64, 40, 78, 91, 92, 62, 103, 177, \
48, 109, 202, 53, 112, 198, 53, 111, 195, 53, \
109, 192, 53, 109, 190, 57, 111, 191, 59, 113, \
193, 58, 113, 190, 59, 111, 186, 60, 110, 181, \
66, 115, 182, 71, 119, 187, 70, 117, 192, 64, \
113, 193, 58, 110, 193, 55, 111, 195, 57, 112, \
197, 64, 115, 200, 66, 119, 207, 61, 117, 198, \
89, 133, 194, 102, 139, 187, 96, 137, 181, 60, \
109, 173, 58, 114, 194, 88, 124, 178, 132, 117, \
106, 116, 89, 59, 95, 71, 56, 83, 69, 43, \
89, 92, 79, 75, 106, 164, 52, 113, 201, 54, \
115, 199, 57, 114, 197, 55, 112, 194, 55, 111, \
193, 58, 112, 195, 61, 115, 196, 60, 114, 192, \
61, 113, 188, 62, 113, 184, 70, 119, 186, 74, \
124, 191, 67, 123, 193, 62, 119, 194, 58, 114, \
198, 55, 113, 206, 55, 112, 212, 77, 124, 211, \
89, 137, 219, 67, 120, 199, 94, 137, 197, 112, \
146, 194, 111, 149, 192, 63, 110, 170, 60, 116, \
197, 72, 117, 181, 109, 103, 105, 119, 97, 78, \
99, 83, 69, 86, 74, 50, 101, 93, 82, 85, \
106, 145, 57, 116, 192, 55, 117, 199, 57, 115, \
197, 57, 113, 195, 57, 112, 195, 60, 114, 197, \
64, 115, 196, 63, 114, 192, 62, 113, 189, 62, \
113, 186, 65, 115, 187, 65, 118, 189, 60, 121, \
192, 61, 119, 193, 60, 113, 194, 61, 113, 203, \
63, 115, 212, 99, 141, 218, 113, 156, 224, 99, \
147, 216, 131, 167, 221, 141, 167, 209, 143, 172, \
211, 65, 109, 174, 61, 116, 204, 57, 107, 185, \
75, 75, 91, 115, 98, 90, 105, 98, 81, 96, \
87, 66, 104, 87, 86, 83, 95, 117, 61, 116, \
178, 59, 118, 196, 58, 115, 194, 58, 115, 196, \
58, 114, 197, 62, 115, 200, 68, 117, 197, 63, \
109, 185, 63, 110, 186, 63, 114, 191, 61, 114, \
191, 61, 115, 193, 61, 118, 197, 64, 115, 191, \
48, 91, 163, 60, 99, 173, 95, 135, 211, 135, \
170, 230, 132, 170, 226, 122, 165, 225, 138, 167, \
214, 120, 135, 171, 128, 147, 181, 66, 110, 183, \
59, 116, 210, 61, 114, 193, 88, 93, 106, 112, \
100, 86, 101, 95, 76, 96, 90, 75, 103, 93, \
92, 86, 90, 96, 73, 99, 128, 83, 115, 167, \
77, 119, 184, 62, 116, 195, 57, 116, 203, 62, \
116, 205, 71, 115, 189, 50, 80, 136, 60, 90, \
146, 69, 119, 190, 58, 119, 200, 60, 116, 200, \
66, 117, 203, 69, 112, 183, 34, 67, 121, 52, \
80, 134, 122, 150, 211, 157, 183, 235, 139, 168, \
219, 115, 149, 203, 110, 134, 173, 71, 80, 106, \
99, 107, 136, 66, 113, 181, 59, 120, 210, 69, \
123, 196, 149, 158, 165, 194, 185, 166, 174, 165, \
150, 113, 109, 101, 61, 61, 59, 64, 64, 65, \
71, 71, 75, 72, 80, 99, 79, 108, 152, 68, \
120, 192, 61, 121, 209, 70, 123, 215, 71, 112, \
182, 44, 60, 96, 55, 59, 85, 68, 102, 153, \
61, 121, 197, 64, 123, 206, 67, 121, 207, 66, \
110, 179, 48, 80, 128, 66, 91, 138, 118, 143, \
203, 128, 150, 197, 113, 134, 177, 109, 133, 178, \
96, 117, 143, 80, 88, 101, 112, 113, 129, 68, \
115, 167, 66, 123, 199, 80, 130, 197, 194, 201, \
217, 238, 230, 221, 167, 156, 148, 72, 66, 64, \
40, 40, 43, 52, 52, 59, 62, 61, 67, 71, \
78, 84, 77, 102, 128, 71, 116, 172, 67, 119, \
197, 69, 116, 201, 64, 106, 172, 42, 57, 84, \
53, 40, 43, 54, 61, 80, 68, 109, 161, 69, \
124, 195, 67, 125, 206, 77, 126, 198, 104, 138, \
198, 117, 144, 197, 99, 125, 180, 57, 77, 108, \
70, 87, 110, 98, 118, 145, 93, 110, 120, 98, \
105, 104, 101, 103, 103, 71, 110, 149, 74, 119, \
176, 106, 145, 196, 194, 195, 206, 129, 120, 114, \
59, 50, 43, 46, 41, 36, 46, 46, 45, 61, \
62, 65, 84, 85, 88, 161, 163, 163, 165, 178, \
189, 148, 176, 203, 128, 162, 204, 98, 129, 179, \
96, 124, 164, 63, 71, 84, 66, 51, 42, 59, \
55, 55, 42, 62, 85, 57, 93, 134, 82, 132, \
192, 105, 147, 212, 141, 169, 230, 158, 179, 230, \
99, 119, 158, 43, 57, 72, 72, 82, 94, 75, \
87, 102, 67, 78, 79, 72, 77, 70, 71, 71, \
70, 78, 102, 140, 76, 105, 148, 88, 117, 153, \
107, 106, 109, 66, 61, 53, 56, 54, 45, 59, \
56, 47, 54, 53, 44, 72, 73, 66, 146, 147, \
142, 231, 225, 225, 243, 240, 243, 237, 243, 245, \
228, 240, 242, 218, 230, 234, 210, 215, 218, 181, \
179, 177, 160, 158, 153, 123, 130, 129, 92, 98, \
101, 115, 124, 132, 112, 141, 173, 93, 119, 162, \
134, 149, 192, 131, 139, 173, 82, 90, 108, 53, \
58, 63, 72, 74, 84, 73, 78, 91, 62, 68, \
71, 64, 67, 66, 65, 65, 71, 98, 117, 155, \
95, 118, 156, 83, 112, 147, 90, 100, 114, 81, \
89, 96, 77, 82, 82, 78, 78, 73, 81, 78, \
69, 100, 99, 88, 181, 180, 172, 217, 208, 207, \
217, 208, 207, 224, 219, 214, 223, 223, 213, 223, \
225, 211, 217, 212, 199, 213, 208, 202, 204, 213, \
212, 172, 185, 184, 178, 180, 173, 182, 179, 171, \
170, 181, 191, 140, 152, 170, 140, 146, 166, 116, \
118, 133, 85, 86, 91, 62, 62, 61, 80, 78, \
86, 84, 84, 97, 64, 67, 71, 61, 65, 71, \
61, 65, 73, 100, 127, 163, 98, 129, 169, 83, \
123, 172, 92, 118, 164, 87, 109, 146, 87, 97, \
115, 90, 91, 100, 100, 95, 95, 117, 111, 106, \
174, 168, 164, 195, 192, 185, 192, 188, 180, 210, \
206, 198, 211, 209, 202, 207, 208, 202, 190, 189, \
186, 184, 185, 184, 183, 190, 188, 180, 185, 177, \
184, 188, 179, 178, 183, 179, 191, 196, 197, 193, \
198, 200, 174, 179, 181, 178, 181, 183, 174, 177, \
177, 114, 115, 111, 77, 76, 78, 73, 72, 79, \
80, 83, 84, 80, 87, 91, 61, 69, 81, 95, \
123, 154, 91, 124, 162, 79, 120, 173, 86, 122, \
182, 92, 123, 176, 92, 107, 137, 88, 91, 106, \
78, 75, 80, 93, 87, 89, 116, 107, 106, 128, \
126, 118, 137, 136, 125, 144, 141, 131, 137, 135, \
131, 134, 135, 137, 141, 145, 152, 149, 157, 164, \
157, 166, 169, 170, 175, 173, 180, 188, 190, 181, \
193, 203, 183, 190, 197, 186, 189, 192, 178, 180, \
182, 179, 181, 183, 196, 200, 205, 172, 178, 182, \
75, 81, 88, 56, 61, 72, 92, 100, 108, 93, \
102, 113, 62, 70, 87, 98, 109, 129, 91, 110, \
135, 86, 111, 145, 82, 108, 149, 89, 114, 157, \
99, 115, 145, 103, 105, 116, 68, 68, 70, 70, \
69, 72, 78, 69, 69, 84, 76, 71, 104, 97, \
88, 110, 103, 93, 95, 90, 83, 64, 61, 60, \
71, 70, 77, 86, 91, 102, 95, 107, 119, 120, \
134, 148, 154, 165, 181, 176, 185, 203, 169, 178, \
194, 167, 169, 182, 164, 159, 170, 150, 146, 156, \
139, 142, 152, 122, 131, 145, 77, 87, 104, 54, \
63, 81, 68, 76, 93, 76, 83, 103, 56, 60, \
76, 150, 144, 147, 152, 153, 159, 149, 152, 163, \
79, 81, 96, 53, 60, 85, 102, 108, 130, 93, \
86, 89, 92, 85, 83, 115, 113, 115, 81, 75, \
76, 61, 51, 50, 71, 62, 57, 95, 87, 79, \
110, 102, 95, 81, 73, 71, 55, 45, 47, 55, \
48, 54, 58, 62, 72, 108, 118, 132, 154, 161, \
179, 174, 179, 196, 139, 147, 161, 112, 113, 124, \
98, 92, 101, 79, 74, 83, 70, 71, 80, 69, \
73, 82, 78, 80, 91, 81, 83, 94, 68, 68, \
79, 88, 86, 98, 91, 86, 95, 144, 136, 130, \
143, 138, 133, 137, 130, 127, 86, 74, 73, 73, \
66, 75, 98, 91, 102, 66, 45, 39, 100, 83, \
75, 111, 106, 105, 97, 94, 96, 80, 71, 72, \
48, 39, 37, 56, 47, 42, 67, 57, 52, 71, \
56, 53, 63, 41, 38, 62, 41, 38, 57, 49, \
52, 74, 76, 84, 92, 94, 107, 78, 79, 92, \
52, 55, 64, 42, 41, 46, 52, 46, 49, 67, \
63, 66, 67, 67, 73, 69, 69, 73, 58, 56, \
58, 57, 54, 57, 53, 48, 52, 71, 64, 69, \
65, 55, 57, 70, 75, 76, 74, 80, 79, 74, \
75, 74, 95, 89, 88, 138, 129, 134, 114, 97, \
98, 107, 74, 60, 108, 80, 66, 56, 48, 45, \
58, 58, 61, 77, 68, 71, 43, 34, 33, 45, \
36, 32, 55, 41, 36, 70, 49, 42, 72, 41, \
31, 86, 56, 47, 58, 44, 40, 35, 31, 33, \
27, 26, 31, 43, 40, 47, 75, 73, 75, 65, \
61, 59, 64, 59, 55, 70, 65, 63, 63, 62, \
63, 56, 57, 59, 49, 51, 52, 34, 34, 36, \
34, 33, 35, 39, 37, 40, 33, 25, 25, 81, \
95, 104, 75, 89, 96, 66, 75, 80, 114, 116, \
122, 151, 147, 153, 146, 125, 121, 179, 138, 119, \
153, 117, 100, 81, 71, 66, 70, 73, 75, 72, \
64, 65, 65, 56, 54, 63, 54, 49, 86, 70, \
61, 100, 75, 62, 85, 51, 37, 78, 49, 36, \
54, 39, 31, 34, 30, 26, 34, 32, 30, 44, \
41, 39, 75, 69, 64, 86, 80, 71, 81, 76, \
66, 50, 47, 39, 42, 40, 37, 37, 40, 40, \
47, 53, 52, 58, 63, 62, 53, 56, 56, 45, \
47, 48, 33, 29, 27, 75, 83, 88, 75, 83, \
87, 87, 91, 94, 129, 127, 130, 108, 103, 107, \
93, 72, 67, 153, 109, 88, 144, 103, 84, 75, \
63, 57, 61, 65, 66, 73, 67, 64, 93, 86, \
80, 96, 89, 80, 101, 85, 71, 110, 80, 59, \
111, 77, 58, 84, 60, 46, 62, 52, 41, 48, \
47, 38, 51, 51, 42, 53, 49, 39, 52, 43, \
33, 87, 80, 66, 100, 96, 81, 54, 51, 39, \
43, 40, 34, 41, 42, 36, 73, 76, 69, 102, \
104, 97, 88, 88, 82, 75, 74, 69, 56, 52, \
46, 102, 99, 98, 107, 104, 101, 109, 102, 99, \
107, 95, 93, 83, 72, 74, 67, 44, 41, 100, \
55, 35, 118, 73, 52, 92, 73, 62, 86, 84, \
80, 108, 99, 93, 115, 108, 99, 86, 81, 71, \
78, 66, 52, 75, 53, 33, 84, 62, 42, 122, \
108, 93, 127, 119, 106, 119, 116, 105, 120, 117, \
106, 120, 115, 102, 121, 112, 98, 136, 129, 113, \
135, 131, 114, 107, 106, 92, 101, 99, 90, 111, \
110, 102, 124, 123, 114, 126, 124, 114, 123, 120, \
110, 121, 116, 107, 118, 113, 103, 132, 124, 121, \
135, 125, 118, 132, 118, 110, 123, 106, 102, 114, \
95, 97, 98, 70, 70, 98, 51, 35, 128, 79, \
54, 149, 121, 101, 160, 149, 136, 164, 151, 139, \
158, 148, 138, 80, 77, 69, 46, 45, 36, 42, \
39, 27, 62, 60, 42, 150, 147, 128, 169, 161, \
147, 165, 155, 144, 163, 153, 143, 160, 153, 141, \
162, 156, 141, 160, 156, 140, 157, 154, 139, 155, \
154, 141, 153, 153, 141, 155, 152, 145, 153, 150, \
144, 152, 149, 142, 153, 150, 142, 151, 148, 138, \
149, 146, 137, 156, 147, 144, 167, 156, 149, 170, \
155, 147, 171, 153, 148, 168, 146, 149, 137, 102, \
105, 120, 67, 57, 147, 98, 75, 173, 146, 124, \
172, 160, 146, 174, 161, 148, 150, 140, 130, 54, \
51, 44, 35, 36, 29, 42, 42, 33, 65, 64, \
49, 154, 151, 134, 169, 161, 147, 166, 155, 144, \
164, 155, 145, 160, 154, 143, 162, 157, 144, 161, \
156, 144, 160, 156, 145, 158, 157, 147, 156, 156, \
147, 156, 154, 149, 155, 151, 148, 155, 152, 147, \
156, 153, 147, 155, 152, 144, 152, 150, 141, 150, \
142, 139, 164, 154, 146, 169, 155, 147, 173, 156, \
151, 177, 153, 155, 154, 110, 116, 135, 75, 70, \
147, 101, 82, 178, 160, 141, 168, 159, 147, 171, \
159, 147, 159, 149, 139, 82, 78, 70, 42, 39, \
31, 90, 85, 75, 119, 111, 97, 164, 154, 140, \
173, 163, 151, 168, 160, 149, 162, 159, 147, 158, \
156, 144, 163, 157, 149, 164, 158, 151, 163, 159, \
153, 160, 159, 154, 159, 158, 154, 159, 156, 154, \
158, 154, 152, 159, 155, 152, 160, 156, 151, 159, \
156, 149, 157, 154, 146, 142, 136, 132, 158, 149, \
141, 164, 152, 143, 169, 154, 149, 169, 145, 147, \
140, 90, 96, 131, 65, 64, 152, 110, 95, 172, \
161, 142, 165, 158, 146, 169, 157, 146, 169, 160, \
150, 148, 141, 133, 89, 81, 73, 124, 112, 101, \
158, 144, 131, 167, 153, 142, 166, 156, 145, 164, \
159, 148, 158, 157, 146, 157, 157, 147, 163, 157, \
152, 165, 158, 156, 164, 159, 157, 160, 157, 157, \
158, 156, 157, 159, 155, 156, 158, 154, 153, 157, \
153, 151, 157, 153, 150, 157, 154, 148, 154, 150, \
144, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '1244';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1ac3957cc1de4426fa129304592f13e468';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_truck1';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{226, 232, 241, 233, 234, 241, 231, 238, 241, 224, 235, \
241, 198, 217, 231, 175, 205, 225, 174, 207, 225, \
177, 207, 221, 187, 214, 226, 196, 220, 234, 203, \
223, 239, 206, 224, 239, 207, 227, 238, 210, 230, \
242, 208, 228, 239, 202, 221, 233, 196, 213, 222, \
192, 206, 213, 201, 212, 216, 217, 225, 228, 229, \
237, 237, 240, 231, 233, 155, 123, 129, 60, 53, \
57, 35, 55, 56, 39, 54, 56, 40, 54, 53, \
41, 56, 51, 41, 56, 50, 43, 58, 52, 43, \
58, 53, 44, 59, 54, 206, 228, 243, 221, 233, \
244, 224, 237, 241, 208, 224, 233, 191, 214, 231, \
185, 215, 235, 187, 216, 231, 192, 217, 227, 202, \
225, 235, 210, 230, 241, 218, 235, 247, 223, 238, \
249, 223, 239, 248, 217, 233, 241, 205, 221, 230, \
197, 212, 219, 205, 216, 219, 223, 229, 230, 236, \
239, 238, 241, 242, 239, 246, 245, 241, 227, 199, \
201, 102, 79, 82, 44, 53, 58, 38, 55, 61, \
40, 54, 55, 42, 57, 56, 44, 59, 55, 43, \
58, 52, 44, 59, 54, 44, 59, 54, 45, 60, \
55, 187, 226, 239, 206, 232, 247, 214, 232, 247, \
206, 225, 238, 197, 219, 232, 198, 221, 234, 203, \
225, 236, 206, 226, 237, 214, 232, 244, 218, 234, \
245, 229, 241, 251, 230, 242, 251, 213, 229, 240, \
203, 215, 223, 208, 215, 219, 227, 229, 230, 240, \
242, 242, 245, 246, 246, 244, 244, 242, 242, 242, \
241, 247, 245, 243, 187, 145, 142, 62, 59, 58, \
41, 57, 64, 42, 59, 58, 41, 55, 50, 33, \
48, 56, 34, 50, 49, 43, 56, 54, 44, 59, \
56, 44, 59, 54, 46, 61, 56, 203, 230, 244, \
208, 233, 247, 214, 237, 252, 217, 236, 247, 212, \
229, 238, 214, 230, 240, 215, 232, 241, 214, 231, \
241, 221, 235, 246, 226, 237, 246, 224, 232, 239, \
215, 222, 228, 209, 219, 227, 222, 229, 235, 238, \
240, 242, 246, 244, 243, 245, 245, 244, 244, 244, \
244, 244, 244, 244, 245, 246, 246, 237, 222, 218, \
124, 96, 94, 47, 55, 63, 38, 56, 66, 39, \
56, 64, 55, 66, 53, 85, 86, 55, 113, 114, \
60, 82, 87, 55, 46, 60, 56, 44, 59, 54, \
46, 61, 56, 218, 234, 247, 218, 235, 247, 222, \
240, 251, 226, 241, 250, 225, 238, 246, 225, 238, \
246, 223, 237, 244, 222, 234, 242, 221, 231, 239, \
216, 224, 229, 216, 220, 224, 227, 229, 232, 240, \
241, 241, 245, 246, 246, 244, 245, 245, 244, 244, \
244, 245, 246, 246, 246, 246, 246, 244, 245, 246, \
248, 248, 248, 206, 174, 169, 75, 70, 74, 66, \
68, 67, 103, 104, 70, 106, 97, 68, 144, 131, \
59, 214, 182, 70, 214, 187, 76, 108, 102, 57, \
44, 57, 53, 44, 59, 54, 45, 60, 55, 230, \
242, 249, 234, 242, 250, 238, 242, 252, 238, 243, \
252, 236, 242, 251, 235, 241, 250, 230, 236, 246, \
220, 226, 235, 215, 220, 221, 224, 225, 218, 239, \
240, 236, 245, 247, 250, 246, 244, 247, 245, 244, \
244, 243, 245, 242, 243, 247, 242, 243, 248, 246, \
242, 247, 249, 246, 246, 247, 240, 231, 221, 202, \
170, 128, 133, 116, 84, 154, 131, 82, 212, 179, \
74, 207, 165, 77, 192, 138, 62, 241, 184, 64, \
164, 137, 54, 64, 64, 50, 42, 58, 56, 41, \
59, 56, 41, 59, 55, 235, 244, 249, 237, 242, \
248, 243, 244, 251, 243, 245, 252, 240, 243, 251, \
230, 233, 241, 222, 225, 233, 224, 227, 235, 237, \
237, 237, 239, 234, 222, 245, 242, 235, 241, 244, \
248, 240, 244, 249, 242, 245, 248, 244, 246, 247, \
244, 246, 244, 243, 244, 230, 244, 241, 203, 244, \
228, 170, 236, 203, 145, 236, 195, 107, 217, 177, \
90, 201, 164, 87, 202, 166, 74, 184, 158, 89, \
122, 89, 53, 205, 166, 77, 123, 118, 62, 43, \
55, 53, 42, 61, 58, 41, 60, 58, 40, 59, \
58, 236, 244, 250, 238, 243, 249, 243, 244, 251, \
236, 238, 243, 228, 232, 235, 227, 231, 234, 233, \
236, 240, 242, 244, 248, 247, 243, 244, 236, 227, \
217, 245, 237, 232, 246, 244, 250, 244, 245, 246, \
245, 243, 233, 245, 240, 218, 243, 234, 201, 242, \
228, 179, 235, 208, 142, 238, 202, 119, 233, 194, \
102, 192, 152, 87, 203, 163, 90, 215, 173, 86, \
225, 187, 88, 170, 158, 77, 95, 83, 53, 199, \
172, 90, 122, 119, 69, 47, 58, 60, 43, 62, \
59, 43, 62, 60, 42, 61, 59, 239, 246, 253, \
240, 245, 250, 240, 243, 247, 229, 231, 233, 235, \
236, 237, 241, 244, 243, 242, 246, 244, 242, 246, \
244, 244, 245, 242, 237, 230, 217, 246, 236, 214, \
242, 234, 204, 242, 236, 206, 243, 231, 195, 242, \
222, 173, 240, 215, 144, 237, 204, 142, 234, 199, \
132, 237, 200, 123, 212, 180, 95, 177, 156, 89, \
188, 166, 95, 206, 173, 80, 208, 157, 81, 196, \
167, 87, 119, 101, 54, 206, 174, 86, 125, 115, \
73, 43, 61, 58, 43, 64, 58, 43, 63, 61, \
43, 62, 60, 241, 245, 254, 242, 247, 251, 225, \
230, 231, 220, 221, 225, 247, 245, 249, 245, 244, \
243, 245, 245, 240, 244, 242, 230, 245, 241, 223, \
244, 234, 213, 237, 219, 181, 232, 213, 153, 236, \
224, 173, 236, 220, 166, 239, 214, 152, 243, 214, \
135, 232, 202, 149, 235, 207, 119, 198, 161, 106, \
160, 115, 78, 244, 208, 112, 181, 170, 83, 189, \
151, 83, 154, 128, 76, 183, 148, 84, 132, 102, \
66, 170, 139, 77, 102, 91, 68, 41, 63, 58, \
42, 64, 58, 43, 63, 61, 43, 63, 61, 240, \
245, 254, 243, 248, 252, 212, 217, 218, 211, 216, \
214, 244, 245, 239, 243, 239, 226, 245, 237, 217, \
242, 229, 197, 236, 222, 190, 240, 232, 210, 239, \
223, 192, 240, 215, 160, 242, 220, 165, 238, 214, \
150, 237, 209, 147, 233, 206, 139, 234, 207, 149, \
232, 196, 121, 144, 130, 104, 91, 83, 77, 170, \
138, 95, 110, 102, 75, 121, 97, 81, 88, 89, \
81, 92, 84, 64, 71, 75, 65, 70, 77, 65, \
51, 65, 66, 40, 63, 67, 43, 63, 61, 43, \
63, 61, 43, 63, 61, 240, 246, 252, 241, 247, \
250, 210, 215, 217, 214, 216, 213, 242, 241, 223, \
238, 232, 198, 242, 228, 191, 242, 222, 181, 237, \
220, 185, 241, 233, 218, 239, 229, 211, 233, 212, \
176, 236, 208, 167, 231, 208, 166, 232, 212, 183, \
229, 214, 189, 232, 212, 187, 209, 167, 158, 92, \
100, 96, 50, 85, 88, 67, 78, 86, 54, 75, \
81, 51, 77, 70, 45, 72, 75, 44, 69, 66, \
44, 71, 64, 42, 67, 66, 44, 64, 65, 44, \
61, 61, 43, 63, 61, 43, 63, 61, 43, 63, \
61, 239, 246, 248, 241, 248, 249, 212, 219, 221, \
222, 223, 220, 241, 238, 216, 235, 229, 195, 237, \
222, 197, 234, 217, 195, 234, 222, 199, 239, 234, \
227, 236, 232, 227, 236, 229, 216, 237, 232, 221, \
239, 238, 231, 239, 241, 237, 241, 247, 244, 241, \
237, 236, 164, 136, 146, 68, 81, 82, 45, 81, \
79, 51, 75, 78, 48, 77, 77, 46, 76, 76, \
41, 71, 70, 39, 67, 66, 43, 68, 65, 46, \
67, 65, 46, 64, 63, 46, 62, 62, 43, 63, \
61, 43, 63, 61, 44, 64, 62, 240, 242, 246, \
206, 213, 215, 157, 170, 170, 215, 221, 216, 242, \
240, 232, 238, 236, 228, 241, 237, 233, 242, 234, \
234, 243, 238, 236, 239, 242, 241, 238, 242, 241, \
244, 244, 243, 241, 243, 246, 240, 241, 244, 241, \
240, 243, 244, 240, 242, 218, 201, 199, 113, 110, \
104, 61, 88, 79, 50, 80, 76, 58, 83, 81, \
55, 84, 80, 57, 86, 81, 57, 86, 82, 55, \
84, 78, 55, 81, 74, 43, 66, 60, 44, 63, \
58, 46, 63, 59, 43, 63, 61, 43, 63, 61, \
44, 64, 62, 191, 190, 187, 133, 141, 138, 126, \
141, 141, 214, 219, 221, 243, 240, 242, 230, 230, \
230, 228, 231, 226, 232, 232, 228, 229, 227, 227, \
217, 220, 216, 219, 224, 219, 229, 231, 228, 220, \
221, 222, 206, 207, 209, 210, 215, 215, 204, 208, \
207, 159, 145, 143, 99, 112, 101, 86, 124, 108, \
82, 113, 103, 75, 105, 95, 69, 100, 89, 81, \
111, 101, 87, 118, 107, 94, 123, 113, 82, 109, \
99, 37, 61, 52, 41, 60, 53, 42, 60, 54, \
41, 61, 57, 43, 62, 58, 43, 63, 59, 181, \
178, 159, 145, 149, 132, 153, 161, 155, 219, 223, \
225, 238, 236, 238, 220, 217, 216, 222, 217, 213, \
229, 226, 220, 221, 222, 216, 204, 206, 201, 210, \
212, 207, 213, 216, 212, 206, 214, 214, 194, 200, \
199, 207, 209, 206, 193, 191, 188, 109, 113, 108, \
89, 112, 101, 93, 127, 113, 88, 113, 102, 72, \
97, 86, 65, 95, 83, 81, 110, 98, 86, 116, \
104, 95, 124, 112, 81, 107, 98, 37, 60, 52, \
42, 62, 55, 41, 58, 52, 40, 58, 52, 41, \
60, 54, 42, 61, 55, 146, 139, 118, 178, 172, \
150, 174, 168, 154, 218, 211, 204, 243, 236, 231, \
239, 235, 232, 239, 237, 236, 242, 243, 241, 240, \
243, 239, 238, 240, 236, 237, 238, 234, 236, 237, \
234, 236, 240, 238, 232, 238, 232, 243, 238, 233, \
189, 169, 168, 78, 88, 83, 59, 85, 78, 58, \
82, 75, 60, 78, 73, 55, 75, 70, 51, 75, \
68, 52, 77, 70, 51, 76, 69, 57, 81, 74, \
53, 74, 67, 41, 60, 53, 49, 63, 59, 44, \
57, 52, 41, 59, 53, 40, 59, 53, 40, 59, \
53, 121, 111, 96, 155, 145, 126, 132, 124, 112, \
161, 146, 141, 189, 169, 165, 202, 181, 175, 214, \
187, 182, 226, 196, 191, 231, 202, 197, 234, 210, \
205, 236, 219, 213, 243, 228, 225, 246, 234, 235, \
244, 243, 237, 239, 228, 222, 142, 123, 121, 67, \
79, 76, 56, 79, 76, 53, 75, 71, 50, 74, \
70, 48, 71, 67, 48, 70, 67, 44, 65, 62, \
42, 62, 60, 49, 68, 64, 47, 65, 59, 46, \
63, 57, 51, 64, 60, 43, 57, 53, 41, 59, \
53, 39, 58, 52, 39, 58, 52, 174, 166, 149, \
150, 135, 118, 115, 102, 91, 70, 64, 62, 75, \
76, 74, 91, 94, 85, 114, 111, 99, 136, 122, \
111, 152, 128, 119, 164, 134, 126, 178, 139, 133, \
194, 148, 145, 205, 156, 154, 216, 168, 162, 199, \
156, 152, 99, 97, 89, 62, 86, 80, 57, 81, \
78, 53, 78, 74, 51, 76, 72, 48, 75, 70, \
48, 73, 69, 45, 66, 64, 45, 63, 62, 52, \
69, 66, 51, 70, 64, 49, 67, 62, 47, 66, \
60, 41, 59, 53, 40, 59, 53, 40, 59, 53, \
39, 58, 52, 225, 213, 204, 191, 167, 159, 142, \
104, 93, 97, 76, 69, 72, 73, 69, 46, 58, \
53, 25, 39, 36, 48, 56, 56, 50, 56, 57, \
66, 73, 69, 82, 92, 83, 97, 104, 92, 108, \
102, 90, 122, 101, 92, 125, 99, 100, 81, 98, \
98, 65, 95, 91, 61, 86, 82, 57, 82, 78, \
55, 80, 76, 51, 77, 73, 48, 74, 70, 47, \
68, 66, 47, 65, 63, 53, 70, 67, 52, 71, \
65, 50, 69, 63, 48, 67, 61, 42, 61, 55, \
40, 59, 53, 40, 59, 53, 39, 58, 52, 220, \
209, 203, 197, 181, 174, 170, 138, 125, 162, 132, \
123, 121, 112, 104, 117, 101, 88, 82, 53, 44, \
86, 70, 66, 68, 65, 62, 49, 47, 46, 39, \
39, 38, 54, 55, 57, 61, 76, 77, 59, 83, \
77, 71, 85, 82, 69, 86, 88, 68, 90, 89, \
71, 93, 90, 70, 93, 90, 67, 91, 88, 58, \
83, 79, 56, 80, 76, 51, 72, 69, 47, 65, \
63, 54, 72, 69, 53, 73, 68, 51, 70, 66, \
50, 68, 63, 43, 62, 57, 40, 60, 53, 40, \
60, 54, 40, 59, 53, 204, 194, 181, 180, 169, \
160, 143, 120, 116, 165, 137, 134, 156, 137, 129, \
172, 112, 96, 163, 90, 75, 120, 95, 88, 80, \
76, 72, 71, 70, 66, 69, 70, 66, 69, 72, \
70, 49, 52, 54, 38, 45, 45, 44, 52, 51, \
52, 60, 60, 55, 65, 66, 56, 68, 68, 55, \
71, 70, 58, 77, 75, 58, 76, 74, 61, 79, \
78, 61, 78, 77, 56, 73, 71, 57, 76, 73, \
55, 76, 72, 53, 74, 70, 52, 73, 68, 48, \
68, 64, 44, 65, 58, 43, 63, 56, 41, 61, \
54, 219, 202, 187, 199, 183, 171, 123, 109, 100, \
94, 91, 79, 129, 110, 112, 179, 122, 118, 147, \
93, 77, 99, 79, 72, 88, 85, 82, 66, 66, \
61, 53, 55, 50, 67, 71, 66, 69, 72, 71, \
54, 58, 57, 38, 40, 39, 28, 30, 30, 35, \
36, 40, 42, 44, 48, 45, 51, 53, 45, 55, \
56, 45, 54, 55, 42, 51, 52, 44, 53, 55, \
48, 57, 59, 57, 67, 66, 58, 71, 66, 53, \
70, 64, 51, 73, 65, 49, 74, 65, 51, 73, \
66, 47, 69, 62, 45, 67, 60, 224, 211, 199, \
227, 205, 189, 199, 181, 159, 153, 141, 116, 123, \
103, 95, 122, 109, 98, 69, 64, 51, 34, 25, \
26, 65, 62, 61, 72, 73, 70, 65, 67, 64, \
71, 75, 71, 95, 95, 90, 81, 78, 74, 74, \
75, 70, 39, 39, 36, 45, 40, 43, 47, 44, \
48, 37, 37, 40, 29, 31, 34, 34, 36, 39, \
36, 37, 41, 34, 35, 39, 32, 33, 36, 51, \
48, 49, 47, 43, 39, 33, 33, 28, 40, 48, \
40, 43, 57, 48, 41, 58, 51, 45, 62, 55, \
47, 64, 57, 206, 196, 182, 227, 209, 193, 228, \
205, 186, 230, 206, 181, 197, 171, 144, 146, 126, \
100, 96, 85, 67, 54, 49, 42, 41, 38, 36, \
31, 31, 29, 37, 39, 39, 46, 51, 49, 84, \
82, 73, 100, 86, 82, 99, 101, 96, 65, 67, \
63, 71, 62, 60, 68, 65, 61, 63, 65, 62, \
29, 27, 28, 36, 36, 37, 45, 48, 49, 38, \
40, 40, 30, 33, 32, 61, 60, 56, 52, 45, \
37, 31, 26, 18, 46, 42, 33, 37, 35, 27, \
25, 28, 23, 35, 39, 34, 42, 46, 41, 202, \
190, 169, 234, 219, 200, 238, 221, 203, 238, 218, \
196, 231, 209, 183, 226, 202, 176, 206, 181, 152, \
164, 142, 118, 103, 90, 75, 50, 42, 32, 26, \
25, 20, 14, 19, 15, 80, 78, 67, 116, 99, \
95, 97, 100, 94, 77, 80, 75, 105, 89, 81, \
83, 74, 64, 99, 99, 94, 47, 47, 48, 59, \
57, 54, 64, 66, 58, 44, 49, 44, 33, 41, \
39, 82, 87, 83, 59, 58, 52, 29, 27, 21, \
39, 37, 31, 29, 27, 21, 25, 26, 20, 28, \
29, 24, 31, 32, 27, 212, 197, 171, 226, 211, \
188, 241, 226, 206, 228, 205, 179, 230, 208, 182, \
235, 219, 198, 235, 217, 195, 236, 213, 186, 215, \
194, 168, 165, 150, 129, 87, 81, 66, 34, 36, \
24, 72, 71, 61, 118, 104, 101, 94, 96, 92, \
74, 75, 71, 133, 112, 99, 97, 82, 68, 102, \
100, 92, 59, 60, 60, 88, 79, 72, 88, 76, \
65, 60, 54, 48, 40, 42, 41, 99, 102, 101, \
73, 74, 70, 25, 25, 23, 23, 24, 22, 24, \
25, 22, 26, 27, 22, 25, 26, 21, 26, 27, \
22, 198, 184, 163, 208, 189, 165, 218, 195, 167, \
219, 192, 163, 225, 196, 166, 231, 205, 177, 236, \
217, 194, 241, 228, 211, 242, 231, 215, 242, 230, \
214, 209, 195, 178, 140, 129, 112, 82, 79, 66, \
95, 93, 85, 90, 92, 89, 59, 60, 60, 123, \
110, 101, 99, 85, 75, 92, 88, 80, 52, 55, \
49, 101, 94, 83, 106, 89, 78, 74, 60, 55, \
45, 41, 40, 110, 113, 107, 93, 95, 87, 36, \
36, 36, 38, 38, 39, 24, 24, 22, 26, 26, \
25, 27, 27, 25, 27, 28, 23, 205, 193, 175, \
205, 190, 170, 217, 199, 177, 232, 220, 202, 238, \
223, 204, 230, 207, 181, 220, 199, 174, 234, 220, \
205, 249, 241, 235, 251, 243, 236, 247, 238, 232, \
228, 219, 209, 178, 173, 152, 141, 138, 121, 97, \
98, 88, 43, 45, 39, 94, 90, 82, 95, 89, \
81, 90, 88, 82, 44, 45, 41, 105, 99, 88, \
120, 103, 92, 79, 64, 59, 46, 42, 40, 116, \
120, 113, 112, 114, 105, 45, 45, 46, 52, 52, \
54, 27, 27, 25, 26, 26, 27, 28, 28, 26, \
32, 32, 27, 227, 207, 184, 202, 184, 161, 217, \
200, 178, 244, 232, 214, 231, 215, 195, 218, 195, \
169, 214, 193, 168, 220, 201, 179, 233, 214, 195, \
230, 215, 198, 238, 228, 214, 241, 236, 225, 243, \
244, 234, 244, 242, 232, 201, 194, 183, 129, 120, \
108, 84, 82, 73, 81, 83, 76, 82, 82, 80, \
34, 33, 35, 98, 90, 82, 122, 106, 95, 80, \
65, 60, 46, 41, 39, 114, 117, 110, 131, 133, \
124, 36, 36, 37, 31, 31, 32, 29, 30, 27, \
27, 27, 27, 29, 29, 28, 46, 47, 41, 203, \
183, 159, 222, 203, 180, 226, 208, 185, 236, 221, \
201, 234, 218, 198, 235, 215, 191, 236, 214, 189, \
224, 201, 174, 212, 189, 164, 218, 200, 180, 244, \
232, 217, 248, 243, 232, 245, 244, 239, 248, 246, \
241, 248, 244, 238, 240, 234, 227, 196, 192, 180, \
154, 150, 140, 104, 99, 95, 38, 31, 33, 67, \
60, 58, 112, 105, 100, 75, 68, 64, 49, 44, \
41, 121, 120, 113, 151, 153, 142, 44, 45, 39, \
29, 30, 26, 31, 31, 28, 32, 32, 29, 33, \
34, 30, 42, 43, 38, 223, 205, 183, 230, 213, \
191, 219, 202, 180, 229, 214, 194, 236, 221, 203, \
214, 200, 180, 221, 206, 186, 238, 222, 202, 238, \
223, 206, 242, 230, 216, 244, 235, 224, 244, 238, \
230, 244, 241, 235, 243, 240, 235, 242, 239, 234, \
244, 241, 236, 246, 241, 234, 241, 234, 224, 201, \
195, 182, 124, 118, 102, 70, 68, 59, 78, 79, \
76, 79, 80, 77, 56, 57, 54, 108, 109, 103, \
118, 119, 111, 43, 44, 38, 35, 35, 33, 35, \
35, 35, 39, 40, 36, 40, 41, 36, 46, 47, \
42, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '1554';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a3440d78e717c42786f7ee80ccd31cfb0';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_ship1';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{129, 169, 219, 131, 170, 216, 131, 172, 215, 131, 172, \
218, 130, 172, 221, 131, 172, 222, 133, 175, 225, \
134, 176, 225, 136, 175, 220, 137, 175, 219, 137, \
174, 221, 135, 174, 221, 134, 175, 220, 135, 177, \
221, 135, 178, 222, 134, 176, 221, 134, 175, 220, \
135, 175, 221, 137, 174, 224, 132, 171, 222, 132, \
174, 225, 129, 172, 223, 130, 172, 216, 135, 175, \
218, 130, 169, 219, 127, 168, 219, 128, 170, 217, \
125, 166, 215, 126, 166, 217, 125, 166, 216, 125, \
165, 216, 122, 164, 215, 135, 174, 223, 134, 176, \
214, 136, 179, 205, 137, 180, 209, 135, 179, 221, \
135, 180, 220, 136, 181, 222, 137, 182, 223, 141, \
178, 222, 145, 177, 222, 145, 177, 222, 145, 178, \
222, 145, 178, 224, 142, 179, 228, 141, 180, 228, \
141, 180, 225, 141, 180, 224, 141, 179, 226, 143, \
178, 228, 143, 178, 227, 143, 176, 225, 143, 176, \
223, 165, 198, 231, 148, 181, 214, 140, 174, 218, \
145, 183, 231, 134, 174, 222, 130, 165, 214, 135, \
168, 217, 133, 166, 216, 132, 165, 214, 128, 165, \
215, 139, 175, 219, 137, 177, 218, 139, 179, 210, \
140, 180, 211, 139, 181, 222, 138, 181, 218, 139, \
181, 218, 139, 181, 223, 144, 180, 227, 148, 181, \
227, 149, 181, 223, 148, 180, 222, 149, 179, 225, \
147, 179, 227, 147, 179, 224, 146, 181, 221, 146, \
182, 223, 146, 182, 223, 150, 184, 221, 152, 182, \
219, 150, 177, 212, 141, 164, 197, 152, 176, 199, \
146, 173, 196, 141, 170, 207, 141, 173, 217, 128, \
164, 209, 138, 172, 221, 141, 174, 224, 139, 171, \
222, 137, 170, 220, 134, 169, 220, 150, 180, 213, \
143, 177, 227, 145, 176, 228, 149, 178, 225, 146, \
179, 221, 150, 185, 219, 153, 188, 221, 150, 184, \
225, 144, 180, 228, 146, 183, 227, 150, 185, 221, \
152, 185, 221, 153, 183, 225, 157, 181, 219, 158, \
184, 214, 157, 187, 214, 155, 187, 219, 159, 190, \
222, 167, 196, 211, 166, 191, 206, 168, 189, 203, \
183, 200, 214, 180, 198, 210, 172, 192, 209, 157, \
178, 209, 142, 168, 205, 144, 173, 210, 141, 176, \
220, 141, 177, 223, 139, 174, 221, 139, 175, 221, \
135, 171, 219, 139, 162, 180, 150, 177, 227, 153, \
175, 234, 160, 179, 229, 156, 179, 211, 149, 175, \
196, 145, 171, 191, 158, 182, 213, 151, 182, 220, \
152, 187, 218, 158, 191, 209, 160, 187, 207, 164, \
187, 213, 169, 184, 200, 161, 179, 186, 158, 179, \
186, 158, 182, 201, 127, 151, 171, 118, 139, 137, \
108, 126, 125, 114, 129, 131, 172, 184, 187, 193, \
208, 216, 187, 203, 221, 186, 202, 226, 169, 186, \
212, 158, 178, 200, 158, 187, 216, 150, 182, 213, \
151, 183, 213, 150, 182, 213, 152, 183, 216, 113, \
129, 130, 162, 184, 218, 162, 179, 218, 161, 173, \
199, 125, 137, 147, 94, 109, 105, 96, 110, 107, \
136, 149, 157, 170, 188, 204, 153, 175, 181, 128, \
147, 138, 115, 128, 120, 128, 136, 136, 134, 139, \
129, 117, 126, 107, 107, 121, 106, 103, 120, 123, \
100, 115, 126, 113, 123, 116, 106, 115, 111, 99, \
107, 111, 100, 109, 117, 100, 113, 129, 113, 129, \
152, 137, 149, 172, 155, 165, 179, 128, 138, 143, \
122, 138, 142, 137, 155, 159, 150, 168, 172, 153, \
171, 175, 120, 139, 145, 125, 135, 124, 143, 162, \
175, 117, 132, 139, 110, 118, 111, 83, 88, 72, \
83, 91, 60, 109, 116, 85, 114, 119, 102, 131, \
135, 128, 108, 113, 94, 110, 112, 76, 109, 105, \
70, 117, 107, 83, 93, 90, 57, 105, 108, 68, \
101, 110, 77, 101, 112, 105, 103, 111, 118, 108, \
109, 105, 108, 110, 113, 113, 117, 129, 117, 123, \
143, 105, 118, 144, 101, 116, 143, 113, 123, 144, \
158, 163, 169, 124, 126, 116, 114, 115, 96, 100, \
102, 81, 109, 110, 89, 103, 104, 84, 76, 82, \
61, 114, 109, 82, 108, 109, 89, 93, 93, 65, \
98, 95, 55, 109, 106, 58, 114, 112, 59, 132, \
129, 78, 119, 113, 72, 83, 79, 45, 98, 94, \
55, 109, 102, 55, 95, 85, 40, 95, 81, 44, \
75, 70, 25, 90, 87, 38, 95, 93, 58, 119, \
118, 114, 109, 108, 122, 109, 107, 112, 130, 130, \
134, 127, 128, 137, 96, 99, 116, 90, 97, 118, \
93, 102, 119, 126, 131, 142, 167, 173, 174, 151, \
158, 152, 135, 141, 128, 118, 118, 100, 81, 84, \
64, 85, 86, 64, 77, 72, 45, 119, 108, 79, \
139, 129, 97, 134, 125, 89, 134, 127, 85, 139, \
135, 86, 120, 115, 70, 137, 132, 90, 139, 134, \
96, 114, 114, 71, 118, 121, 76, 134, 136, 94, \
158, 158, 120, 141, 141, 106, 141, 143, 111, 131, \
129, 94, 96, 90, 67, 120, 116, 117, 160, 158, \
175, 163, 163, 172, 171, 173, 173, 165, 167, 165, \
96, 96, 103, 84, 85, 96, 121, 123, 128, 160, \
161, 164, 138, 147, 151, 92, 110, 120, 80, 101, \
115, 98, 110, 118, 100, 119, 127, 111, 127, 131, \
102, 104, 96, 181, 185, 182, 181, 188, 183, 155, \
165, 159, 152, 162, 156, 155, 164, 162, 147, 157, \
157, 151, 163, 166, 157, 171, 175, 155, 172, 176, \
150, 169, 172, 144, 163, 170, 141, 160, 171, 135, \
154, 166, 134, 148, 157, 148, 157, 154, 168, 173, \
163, 187, 193, 189, 226, 232, 237, 232, 233, 241, \
237, 238, 239, 229, 230, 230, 207, 208, 214, 173, \
174, 181, 165, 166, 170, 200, 203, 209, 139, 151, \
164, 97, 119, 141, 73, 105, 144, 83, 110, 147, \
86, 120, 162, 89, 124, 165, 120, 141, 165, 143, \
167, 195, 157, 185, 215, 111, 144, 175, 106, 138, \
174, 103, 129, 175, 95, 124, 171, 82, 116, 163, \
75, 113, 161, 70, 108, 164, 64, 102, 165, 63, \
101, 167, 59, 99, 168, 62, 101, 169, 92, 116, \
157, 176, 191, 208, 223, 233, 234, 232, 242, 236, \
232, 241, 239, 243, 244, 250, 248, 249, 251, 228, \
229, 231, 231, 231, 237, 234, 234, 239, 218, 219, \
222, 213, 217, 225, 124, 139, 159, 95, 122, 155, \
64, 102, 155, 62, 98, 154, 55, 102, 169, 55, \
107, 179, 124, 157, 208, 57, 99, 156, 52, 99, \
159, 49, 100, 162, 52, 100, 168, 56, 98, 172, \
56, 102, 174, 51, 104, 175, 52, 110, 180, 57, \
115, 183, 59, 116, 182, 59, 116, 183, 56, 113, \
181, 67, 121, 186, 166, 192, 223, 214, 225, 239, \
229, 233, 240, 245, 247, 247, 251, 254, 254, 221, \
222, 226, 184, 185, 190, 189, 190, 194, 198, 199, \
203, 201, 203, 205, 209, 210, 212, 211, 216, 223, \
128, 142, 164, 93, 119, 155, 87, 121, 167, 80, \
114, 163, 64, 114, 183, 50, 110, 191, 56, 100, \
167, 49, 102, 176, 44, 100, 176, 42, 100, 180, \
43, 100, 179, 46, 99, 175, 45, 101, 175, 44, \
103, 175, 48, 110, 179, 48, 110, 183, 55, 114, \
189, 63, 120, 191, 68, 122, 189, 80, 129, 188, \
77, 95, 111, 51, 55, 60, 74, 67, 74, 99, \
90, 99, 129, 124, 131, 129, 129, 133, 118, 118, \
125, 116, 116, 123, 111, 112, 117, 109, 112, 113, \
115, 117, 117, 112, 115, 121, 84, 95, 113, 49, \
71, 98, 95, 117, 140, 116, 138, 164, 66, 110, \
162, 48, 107, 178, 50, 101, 173, 45, 103, 181, \
48, 103, 183, 48, 103, 184, 47, 101, 178, 51, \
107, 172, 53, 108, 172, 58, 113, 175, 55, 109, \
168, 57, 111, 177, 57, 107, 174, 67, 109, 168, \
73, 108, 159, 66, 95, 134, 37, 46, 45, 45, \
43, 40, 50, 39, 45, 39, 28, 39, 33, 27, \
37, 48, 49, 52, 48, 48, 56, 41, 41, 51, \
39, 40, 44, 38, 42, 43, 39, 43, 42, 34, \
36, 35, 37, 42, 47, 31, 43, 54, 16, 26, \
27, 17, 28, 35, 44, 80, 119, 50, 107, 173, \
51, 100, 171, 51, 108, 183, 56, 107, 181, 62, \
108, 182, 65, 112, 180, 61, 114, 170, 67, 116, \
170, 77, 120, 173, 93, 132, 183, 98, 140, 184, \
72, 111, 146, 67, 93, 115, 56, 70, 78, 68, \
74, 73, 63, 67, 66, 62, 59, 64, 62, 55, \
63, 57, 55, 61, 63, 65, 67, 60, 61, 63, \
52, 52, 61, 58, 58, 68, 57, 58, 61, 52, \
57, 58, 54, 58, 57, 52, 51, 43, 45, 46, \
36, 28, 33, 26, 15, 19, 10, 10, 15, 18, \
50, 84, 124, 51, 109, 182, 52, 103, 178, 50, \
106, 179, 58, 106, 175, 60, 101, 168, 62, 104, \
165, 67, 114, 164, 72, 114, 161, 76, 110, 153, \
83, 111, 151, 99, 126, 166, 130, 152, 187, 153, \
163, 186, 81, 79, 87, 124, 116, 117, 177, 179, \
187, 150, 151, 161, 123, 122, 131, 89, 96, 98, \
78, 87, 84, 84, 87, 88, 87, 88, 96, 91, \
92, 102, 64, 66, 69, 51, 56, 58, 51, 54, \
54, 68, 66, 58, 132, 130, 117, 55, 56, 43, \
30, 32, 23, 53, 60, 65, 67, 101, 143, 51, \
110, 186, 51, 110, 193, 47, 101, 175, 51, 102, \
164, 47, 96, 153, 53, 97, 149, 68, 103, 145, \
87, 117, 155, 107, 131, 158, 153, 170, 187, 186, \
197, 212, 203, 210, 226, 192, 197, 210, 121, 123, \
133, 157, 157, 164, 220, 224, 228, 229, 233, 236, \
218, 223, 225, 225, 231, 231, 212, 219, 219, 205, \
210, 213, 215, 219, 223, 199, 203, 208, 155, 160, \
164, 119, 123, 126, 140, 141, 143, 159, 159, 159, \
238, 238, 236, 157, 158, 155, 127, 132, 127, 162, \
174, 175, 130, 158, 184, 54, 103, 163, 51, 110, \
188, 48, 94, 162, 55, 99, 152, 58, 100, 146, \
82, 115, 153, 139, 159, 186, 181, 198, 220, 204, \
216, 229, 221, 227, 232, 210, 215, 218, 202, 207, \
212, 193, 198, 203, 167, 172, 178, 181, 186, 191, \
213, 219, 219, 213, 219, 218, 200, 206, 206, 212, \
218, 218, 212, 217, 217, 203, 208, 211, 215, 219, \
223, 213, 218, 222, 229, 234, 238, 229, 233, 236, \
236, 237, 239, 231, 232, 234, 223, 224, 226, 186, \
187, 189, 182, 186, 186, 184, 194, 196, 149, 170, \
189, 48, 87, 135, 30, 80, 146, 88, 126, 180, \
133, 167, 200, 146, 176, 210, 187, 207, 227, 227, \
234, 243, 228, 232, 237, 227, 228, 229, 242, 241, \
239, 234, 236, 236, 230, 235, 238, 236, 241, 243, \
238, 242, 245, 231, 236, 238, 234, 239, 239, 237, \
242, 243, 233, 239, 239, 232, 237, 237, 234, 239, \
240, 226, 231, 234, 223, 228, 231, 223, 228, 231, \
215, 220, 224, 205, 210, 213, 195, 199, 200, 199, \
202, 203, 203, 206, 207, 209, 212, 214, 213, 216, \
219, 211, 217, 220, 165, 180, 194, 59, 88, 124, \
69, 108, 160, 70, 110, 162, 83, 118, 151, 81, \
109, 143, 99, 118, 142, 162, 168, 170, 171, 172, \
170, 182, 180, 177, 180, 180, 178, 187, 191, 189, \
187, 193, 192, 181, 187, 186, 185, 191, 190, 186, \
192, 191, 187, 192, 192, 187, 193, 193, 190, 196, \
196, 194, 200, 200, 163, 168, 170, 195, 200, 204, \
190, 195, 199, 176, 181, 185, 208, 213, 217, 181, \
185, 188, 176, 180, 181, 188, 192, 193, 200, 204, \
205, 194, 198, 200, 187, 190, 197, 185, 189, 193, \
180, 190, 199, 109, 129, 155, 110, 140, 181, 45, \
94, 156, 71, 114, 164, 51, 88, 133, 63, 93, \
128, 129, 147, 159, 139, 149, 153, 136, 141, 143, \
112, 122, 125, 112, 121, 121, 125, 131, 129, 122, \
128, 126, 155, 161, 159, 171, 177, 175, 179, 185, \
185, 188, 194, 194, 195, 201, 201, 198, 204, 204, \
153, 158, 160, 192, 197, 201, 187, 192, 196, 173, \
178, 182, 185, 190, 194, 175, 180, 182, 173, 179, \
179, 176, 181, 182, 175, 181, 181, 177, 183, 184, \
185, 191, 199, 190, 195, 200, 187, 196, 203, 126, \
142, 165, 72, 100, 139, 45, 99, 168, 50, 102, \
162, 53, 102, 162, 49, 93, 147, 75, 109, 142, \
123, 144, 163, 121, 136, 144, 118, 137, 144, 126, \
138, 142, 139, 144, 145, 141, 147, 148, 144, 150, \
151, 146, 151, 152, 151, 157, 157, 157, 163, 163, \
161, 167, 167, 167, 173, 173, 175, 181, 182, 175, \
180, 184, 179, 184, 188, 180, 185, 189, 178, 183, \
187, 178, 184, 186, 181, 189, 188, 187, 195, 194, \
191, 199, 198, 182, 191, 191, 152, 161, 168, 111, \
119, 125, 94, 105, 116, 70, 91, 118, 49, 81, \
127, 37, 88, 160, 44, 97, 164, 50, 104, 175, \
45, 98, 168, 47, 90, 143, 119, 145, 175, 141, \
157, 168, 139, 159, 165, 150, 162, 167, 160, 165, \
169, 162, 167, 172, 167, 172, 176, 170, 175, 180, \
169, 175, 176, 173, 179, 179, 172, 178, 178, 172, \
178, 178, 176, 182, 183, 183, 188, 192, 184, 189, \
193, 185, 190, 194, 191, 196, 200, 191, 198, 200, \
178, 187, 186, 154, 163, 162, 122, 131, 130, 92, \
101, 101, 74, 86, 91, 75, 88, 94, 101, 119, \
135, 82, 110, 148, 70, 108, 165, 34, 78, 147, \
45, 93, 161, 43, 95, 170, 44, 98, 176, 54, \
100, 165, 93, 118, 154, 151, 163, 173, 153, 168, \
168, 166, 176, 180, 171, 176, 183, 174, 179, 186, \
176, 180, 188, 175, 180, 187, 174, 180, 181, 175, \
181, 181, 174, 180, 180, 182, 188, 189, 186, 192, \
193, 186, 191, 195, 177, 182, 186, 166, 171, 175, \
139, 144, 148, 105, 112, 114, 81, 91, 90, 77, \
87, 86, 87, 96, 95, 110, 120, 120, 111, 126, \
130, 113, 130, 137, 98, 123, 143, 55, 92, 139, \
35, 77, 143, 56, 101, 172, 58, 105, 176, 49, \
97, 173, 50, 100, 178, 53, 97, 169, 63, 89, \
138, 137, 149, 164, 167, 174, 177, 166, 172, 177, \
161, 165, 172, 158, 163, 169, 161, 166, 172, 161, \
166, 172, 166, 170, 173, 164, 170, 172, 154, 162, \
165, 145, 155, 157, 125, 136, 139, 103, 114, 118, \
85, 95, 100, 70, 80, 85, 63, 74, 78, 74, \
88, 91, 92, 109, 110, 106, 124, 122, 110, 125, \
123, 112, 128, 124, 111, 129, 128, 104, 125, 131, \
76, 105, 130, 42, 82, 138, 40, 86, 162, 47, \
99, 170, 42, 91, 164, 46, 93, 166, 36, 83, \
156, 45, 87, 163, 38, 68, 130, 122, 139, 162, \
205, 209, 217, 187, 192, 198, 166, 174, 177, 145, \
154, 156, 114, 122, 125, 104, 113, 115, 109, 116, \
119, 114, 122, 125, 109, 121, 124, 100, 116, 119, \
102, 120, 124, 94, 112, 116, 98, 115, 119, 101, \
118, 122, 114, 131, 136, 110, 132, 136, 101, 127, \
128, 97, 122, 119, 95, 118, 113, 96, 117, 110, \
105, 123, 119, 117, 140, 144, 91, 124, 151, 62, \
104, 164, 50, 97, 177, 38, 89, 160, 49, 97, \
169, 48, 94, 166, 35, 82, 154, 48, 92, 169, \
59, 92, 155, 121, 143, 168, 168, 180, 188, 185, \
196, 202, 166, 181, 183, 145, 160, 162, 129, 143, \
146, 102, 116, 119, 96, 108, 111, 112, 127, 129, \
117, 135, 137, 103, 124, 125, 99, 121, 122, 105, \
126, 129, 100, 120, 123, 97, 118, 120, 104, 125, \
127, 102, 126, 129, 99, 126, 126, 111, 137, 134, \
108, 132, 127, 103, 125, 119, 103, 121, 120, 107, \
131, 139, 70, 104, 133, 52, 93, 154, 41, 86, \
163, 36, 86, 157, 50, 98, 170, 56, 101, 173, \
41, 87, 160, 47, 94, 170, 59, 96, 160, 69, \
98, 123, 100, 120, 131, 89, 109, 116, 71, 94, \
97, 72, 95, 98, 80, 103, 106, 74, 97, 100, \
70, 91, 94, 66, 89, 91, 76, 101, 101, 87, \
114, 113, 83, 111, 109, 92, 118, 117, 101, 127, \
125, 109, 135, 133, 111, 137, 136, 109, 137, 135, \
103, 133, 130, 120, 147, 144, 122, 146, 142, 127, \
150, 145, 111, 132, 133, 97, 123, 136, 67, 100, \
135, 52, 93, 154, 44, 88, 163, 46, 95, 163, \
50, 97, 166, 51, 95, 165, 55, 100, 171, 51, \
99, 174, 54, 95, 157, 56, 92, 116, 97, 126, \
136, 85, 114, 121, 80, 111, 113, 74, 105, 108, \
77, 108, 111, 79, 110, 113, 80, 110, 114, 84, \
115, 117, 84, 116, 115, 93, 125, 122, 91, 123, \
119, 97, 128, 123, 105, 135, 130, 108, 138, 133, \
101, 131, 126, 91, 122, 117, 81, 112, 106, 92, \
121, 117, 104, 129, 126, 100, 124, 121, 94, 117, \
122, 98, 125, 145, 68, 103, 143, 40, 81, 143, \
39, 84, 157, 46, 95, 162, 46, 91, 159, 50, \
93, 162, 45, 89, 158, 48, 96, 167, 51, 94, \
153, 60, 101, 122, 66, 102, 109, 73, 108, 114, \
78, 114, 118, 80, 116, 120, 67, 103, 107, 77, \
113, 118, 85, 121, 127, 87, 122, 125, 90, 125, \
125, 95, 129, 125, 96, 129, 124, 108, 139, 133, \
105, 136, 130, 110, 141, 135, 95, 126, 120, 89, \
122, 115, 83, 116, 109, 95, 126, 121, 99, 126, \
123, 85, 111, 109, 65, 91, 101, 75, 105, 130, \
62, 97, 142, 50, 92, 153, 46, 92, 163, 38, \
85, 152, 46, 90, 158, 41, 82, 150, 40, 82, \
149, 49, 93, 159, 51, 93, 147, 58, 101, 117, \
55, 95, 98, 71, 109, 115, 72, 110, 116, 75, \
114, 119, 65, 104, 109, 74, 113, 119, 79, 118, \
125, 80, 118, 124, 94, 131, 131, 97, 132, 128, \
93, 125, 120, 110, 141, 135, 106, 136, 130, 108, \
138, 132, 95, 126, 119, 92, 125, 116, 94, 129, \
120, 100, 131, 125, 100, 129, 126, 80, 106, 107, \
76, 105, 117, 75, 106, 137, 68, 104, 154, 58, \
99, 161, 48, 94, 162, 41, 86, 153, 41, 84, \
151, 46, 86, 155, 47, 87, 152, 44, 84, 145, \
49, 89, 138, 56, 99, 111, 68, 110, 109, 70, \
109, 114, 70, 108, 116, 76, 114, 121, 73, 112, \
119, 75, 113, 121, 73, 112, 121, 83, 121, 129, \
88, 123, 124, 98, 130, 127, 88, 118, 112, 92, \
119, 112, 103, 130, 123, 100, 127, 120, 108, 136, \
129, 90, 124, 114, 95, 131, 120, 96, 129, 122, \
87, 117, 114, 82, 109, 112, 72, 103, 118, 61, \
93, 128, 48, 84, 138, 43, 84, 146, 34, 79, \
143, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '1864';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1ab2808b76fe0809406f820aef7dede61f';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_truck5';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{36, 63, 55, 35, 57, 44, 115, 145, 152, 150, 180, \
191, 97, 109, 109, 107, 94, 84, 114, 88, 75, \
119, 72, 68, 124, 58, 62, 124, 52, 58, 120, \
43, 51, 123, 36, 43, 149, 37, 50, 154, 63, \
80, 111, 80, 85, 108, 93, 96, 27, 14, 17, \
15, 3, 12, 8, 6, 7, 15, 3, 9, 76, \
54, 67, 159, 148, 157, 26, 10, 18, 12, 15, \
14, 51, 40, 38, 59, 34, 36, 43, 43, 46, \
16, 15, 21, 5, 10, 11, 9, 7, 12, 10, \
5, 11, 12, 6, 13, 24, 54, 42, 20, 43, \
28, 63, 77, 73, 113, 106, 108, 114, 80, 81, \
110, 46, 46, 132, 45, 48, 130, 36, 39, 129, \
34, 35, 115, 18, 20, 108, 11, 13, 122, 19, \
18, 163, 45, 41, 167, 64, 70, 169, 131, 137, \
128, 116, 124, 28, 25, 27, 4, 9, 8, 11, \
7, 6, 28, 9, 14, 117, 87, 94, 203, 169, \
179, 32, 10, 19, 10, 14, 21, 49, 42, 44, \
54, 38, 38, 40, 46, 48, 15, 16, 22, 4, \
7, 10, 4, 7, 9, 7, 6, 9, 11, 7, \
11, 19, 40, 29, 38, 48, 36, 89, 79, 68, \
138, 91, 89, 143, 71, 74, 116, 22, 28, 150, \
37, 47, 154, 37, 48, 150, 38, 45, 133, 24, \
31, 132, 26, 32, 143, 29, 33, 176, 42, 42, \
221, 77, 88, 198, 104, 116, 140, 79, 95, 97, \
32, 46, 47, 8, 7, 27, 4, 1, 31, 14, \
8, 82, 44, 39, 130, 72, 75, 50, 18, 20, \
6, 18, 17, 36, 49, 44, 45, 44, 38, 40, \
52, 52, 23, 13, 23, 11, 2, 8, 3, 10, \
8, 10, 12, 12, 11, 8, 9, 79, 81, 73, \
92, 84, 76, 122, 92, 82, 142, 64, 67, 139, \
42, 53, 129, 28, 41, 128, 21, 36, 114, 16, \
31, 100, 16, 29, 96, 17, 28, 91, 17, 27, \
107, 18, 32, 157, 32, 51, 195, 28, 48, 159, \
11, 26, 160, 51, 67, 184, 52, 78, 169, 38, \
45, 141, 33, 43, 123, 27, 32, 126, 32, 29, \
143, 45, 44, 84, 19, 19, 14, 14, 8, 43, \
45, 38, 54, 35, 34, 32, 37, 37, 38, 30, \
37, 25, 17, 21, 8, 12, 11, 7, 8, 8, \
14, 11, 12, 133, 116, 110, 134, 112, 108, 122, \
90, 86, 72, 28, 28, 58, 18, 21, 48, 17, \
21, 50, 23, 24, 40, 18, 22, 33, 16, 25, \
29, 17, 24, 22, 16, 21, 34, 20, 31, 77, \
50, 62, 145, 46, 52, 127, 24, 21, 141, 84, \
77, 201, 124, 131, 180, 22, 26, 189, 26, 46, \
206, 25, 48, 192, 35, 48, 180, 45, 50, 157, \
32, 39, 70, 18, 17, 79, 32, 33, 90, 24, \
34, 28, 17, 18, 24, 29, 26, 36, 46, 41, \
37, 34, 33, 34, 30, 30, 29, 24, 24, 136, \
112, 104, 138, 113, 108, 108, 92, 95, 27, 22, \
26, 22, 27, 33, 14, 28, 35, 18, 32, 34, \
11, 16, 23, 9, 9, 22, 8, 10, 23, 10, \
13, 25, 11, 18, 35, 31, 61, 69, 108, 52, \
51, 92, 23, 17, 107, 95, 85, 168, 136, 137, \
173, 23, 26, 146, 30, 41, 138, 18, 29, 143, \
18, 30, 129, 22, 27, 171, 21, 35, 113, 21, \
27, 103, 31, 35, 116, 29, 40, 24, 1, 0, \
34, 27, 24, 47, 45, 39, 42, 29, 30, 40, \
29, 29, 46, 40, 38, 136, 113, 102, 135, 116, \
109, 90, 96, 103, 14, 30, 42, 35, 55, 71, \
48, 67, 87, 35, 44, 60, 12, 19, 31, 26, \
36, 49, 7, 17, 30, 10, 21, 35, 25, 33, \
52, 41, 66, 77, 118, 49, 58, 93, 14, 20, \
92, 81, 89, 138, 120, 129, 175, 18, 32, 89, \
13, 24, 70, 18, 18, 73, 14, 20, 42, 5, \
4, 138, 11, 25, 126, 32, 39, 137, 82, 78, \
140, 71, 72, 66, 32, 31, 75, 29, 34, 71, \
29, 31, 48, 25, 27, 42, 26, 27, 45, 37, \
35, 135, 113, 101, 131, 115, 108, 74, 87, 95, \
10, 30, 45, 33, 55, 70, 46, 65, 81, 30, \
38, 52, 10, 19, 31, 28, 44, 53, 5, 18, \
23, 9, 25, 32, 41, 56, 74, 58, 79, 94, \
120, 35, 48, 82, 16, 20, 69, 56, 69, 120, \
104, 114, 172, 20, 32, 88, 13, 25, 61, 18, \
20, 75, 10, 21, 31, 15, 10, 131, 23, 29, \
160, 80, 75, 154, 115, 104, 152, 104, 101, 168, \
101, 101, 200, 94, 98, 194, 98, 102, 160, 96, \
93, 132, 83, 76, 101, 58, 50, 64, 45, 37, \
64, 51, 47, 43, 56, 64, 10, 30, 44, 20, \
41, 54, 25, 44, 54, 20, 30, 41, 9, 17, \
30, 18, 29, 39, 9, 19, 24, 10, 24, 31, \
44, 66, 84, 51, 89, 101, 115, 29, 43, 73, \
14, 15, 76, 51, 66, 123, 97, 107, 169, 22, \
33, 92, 11, 22, 64, 16, 18, 77, 9, 21, \
32, 22, 19, 129, 30, 35, 161, 92, 85, 132, \
103, 94, 136, 104, 99, 157, 66, 69, 182, 35, \
38, 184, 42, 47, 186, 59, 61, 188, 75, 73, \
184, 76, 75, 40, 28, 23, 31, 25, 24, 24, \
40, 49, 10, 35, 48, 16, 42, 54, 21, 46, \
56, 18, 33, 44, 10, 19, 35, 14, 26, 41, \
11, 26, 36, 8, 27, 38, 17, 40, 59, 47, \
79, 92, 118, 30, 47, 67, 13, 14, 51, 35, \
45, 89, 55, 64, 170, 26, 38, 92, 13, 23, \
64, 16, 17, 58, 15, 23, 14, 16, 16, 123, \
28, 41, 119, 59, 61, 87, 76, 71, 105, 87, \
82, 152, 58, 64, 200, 29, 38, 203, 24, 36, \
203, 29, 42, 206, 30, 46, 197, 31, 45, 33, \
28, 26, 35, 35, 36, 23, 38, 47, 7, 30, \
43, 19, 45, 57, 22, 47, 55, 16, 31, 41, \
12, 21, 37, 14, 27, 43, 13, 34, 46, 10, \
32, 45, 17, 34, 53, 58, 63, 79, 119, 22, \
42, 63, 13, 13, 19, 18, 17, 48, 14, 18, \
152, 25, 33, 80, 13, 16, 62, 18, 15, 56, \
15, 19, 16, 3, 5, 125, 20, 38, 125, 74, \
78, 104, 103, 102, 92, 79, 79, 151, 51, 61, \
196, 9, 21, 205, 9, 22, 200, 17, 29, 213, \
16, 35, 203, 20, 35, 19, 17, 18, 24, 21, \
23, 24, 26, 35, 13, 24, 36, 23, 38, 48, \
23, 37, 44, 17, 22, 29, 15, 15, 28, 15, \
24, 38, 11, 31, 42, 13, 31, 42, 24, 34, \
48, 47, 47, 54, 125, 24, 41, 85, 11, 13, \
59, 13, 15, 70, 10, 13, 149, 19, 28, 91, \
13, 14, 93, 27, 24, 95, 13, 17, 62, 2, \
3, 145, 18, 33, 139, 91, 90, 97, 96, 97, \
93, 73, 80, 146, 43, 55, 208, 22, 32, 209, \
21, 29, 197, 29, 33, 212, 24, 37, 199, 28, \
37, 22, 19, 18, 33, 20, 22, 36, 15, 22, \
28, 14, 22, 29, 21, 27, 34, 24, 28, 35, \
16, 21, 32, 9, 17, 23, 13, 21, 22, 23, \
31, 33, 23, 32, 55, 35, 44, 82, 57, 58, \
155, 41, 53, 140, 26, 30, 152, 38, 45, 158, \
32, 44, 187, 19, 39, 160, 33, 39, 170, 43, \
48, 181, 33, 44, 164, 33, 43, 187, 31, 44, \
124, 77, 69, 62, 56, 57, 92, 63, 75, 145, \
42, 55, 206, 30, 37, 206, 29, 34, 203, 34, \
38, 215, 28, 41, 202, 33, 41, 41, 32, 28, \
61, 34, 33, 76, 27, 31, 60, 15, 21, 62, \
24, 28, 72, 33, 34, 78, 29, 32, 80, 22, \
27, 67, 19, 23, 53, 15, 21, 81, 23, 33, \
121, 32, 46, 158, 47, 59, 177, 28, 40, 171, \
42, 37, 191, 55, 51, 201, 34, 47, 209, 15, \
40, 194, 28, 37, 211, 31, 43, 221, 26, 44, \
197, 29, 43, 191, 28, 39, 113, 69, 57, 60, \
52, 52, 88, 61, 72, 139, 41, 54, 188, 20, \
27, 190, 15, 22, 200, 17, 28, 207, 14, 30, \
199, 24, 36, 47, 32, 24, 78, 37, 33, 104, \
29, 31, 94, 21, 24, 88, 22, 23, 105, 37, \
36, 110, 32, 31, 113, 18, 20, 108, 15, 18, \
93, 7, 16, 127, 13, 27, 172, 14, 34, 198, \
10, 33, 205, 25, 37, 206, 66, 53, 206, 56, \
42, 189, 27, 28, 188, 14, 27, 193, 39, 36, \
208, 28, 32, 212, 12, 29, 189, 19, 34, 173, \
22, 31, 80, 40, 31, 59, 55, 55, 79, 67, \
71, 134, 45, 55, 196, 29, 39, 199, 19, 31, \
206, 21, 34, 202, 19, 33, 192, 25, 36, 45, \
30, 23, 89, 44, 38, 114, 37, 34, 111, 29, \
31, 115, 51, 48, 113, 60, 54, 120, 59, 56, \
129, 37, 39, 115, 16, 17, 103, 19, 19, 136, \
17, 23, 185, 11, 26, 209, 10, 27, 208, 27, \
30, 193, 48, 30, 201, 47, 27, 172, 40, 29, \
171, 32, 31, 189, 40, 32, 202, 29, 27, 210, \
19, 31, 195, 20, 36, 175, 26, 40, 97, 57, \
51, 64, 62, 60, 77, 72, 70, 136, 50, 60, \
194, 20, 37, 192, 26, 38, 187, 38, 50, 176, \
42, 51, 183, 72, 72, 50, 41, 34, 86, 54, \
42, 99, 49, 44, 96, 33, 34, 65, 32, 26, \
34, 34, 24, 40, 36, 33, 85, 40, 42, 110, \
41, 38, 124, 67, 54, 148, 60, 50, 174, 20, \
25, 206, 14, 24, 201, 28, 25, 199, 65, 42, \
194, 68, 41, 183, 44, 44, 184, 31, 36, 209, \
18, 30, 207, 16, 23, 197, 14, 25, 189, 12, \
29, 173, 27, 45, 120, 74, 73, 91, 76, 74, \
87, 74, 71, 151, 90, 95, 226, 113, 124, 194, \
119, 113, 151, 85, 91, 140, 94, 92, 230, 210, \
195, 105, 91, 60, 92, 73, 52, 92, 69, 64, \
83, 44, 47, 63, 41, 39, 35, 34, 29, 33, \
33, 30, 77, 38, 39, 116, 37, 38, 145, 62, \
58, 149, 36, 36, 182, 14, 27, 209, 8, 26, \
209, 22, 33, 203, 52, 45, 199, 53, 46, 189, \
26, 41, 188, 27, 44, 188, 40, 51, 197, 72, \
74, 215, 107, 114, 228, 142, 149, 225, 165, 171, \
110, 81, 84, 88, 69, 68, 88, 75, 67, 186, \
174, 166, 254, 255, 242, 195, 201, 183, 82, 67, \
60, 96, 89, 77, 224, 171, 165, 164, 145, 96, \
137, 128, 101, 96, 93, 89, 124, 112, 116, 91, \
79, 82, 67, 61, 61, 69, 67, 65, 110, 78, \
78, 137, 81, 80, 124, 80, 70, 138, 56, 54, \
177, 34, 49, 197, 41, 58, 209, 64, 77, 209, \
97, 101, 225, 126, 128, 228, 161, 162, 218, 149, \
151, 100, 60, 52, 118, 96, 85, 243, 234, 229, \
254, 251, 242, 243, 246, 235, 92, 99, 94, 102, \
102, 95, 140, 128, 116, 195, 163, 160, 241, 202, \
203, 216, 170, 173, 85, 72, 67, 63, 45, 37, \
178, 51, 65, 169, 154, 107, 161, 154, 130, 140, \
133, 131, 132, 131, 135, 75, 71, 74, 41, 32, \
35, 46, 42, 41, 101, 103, 97, 149, 142, 136, \
118, 108, 100, 162, 145, 136, 221, 183, 180, 243, \
206, 204, 252, 218, 216, 252, 242, 235, 255, 246, \
241, 255, 248, 237, 168, 141, 137, 36, 30, 26, \
42, 26, 29, 196, 189, 188, 255, 245, 238, 233, \
214, 205, 66, 59, 52, 77, 75, 69, 124, 111, \
99, 168, 82, 85, 202, 52, 71, 180, 51, 68, \
82, 51, 52, 72, 28, 29, 203, 66, 84, 211, \
203, 174, 205, 190, 176, 154, 127, 124, 140, 132, \
131, 79, 76, 75, 38, 30, 29, 38, 33, 29, \
90, 98, 93, 157, 166, 164, 137, 151, 146, 139, \
161, 152, 222, 232, 225, 245, 247, 242, 229, 226, \
223, 250, 255, 252, 255, 255, 254, 247, 240, 231, \
119, 105, 101, 52, 46, 47, 43, 18, 32, 134, \
90, 97, 212, 106, 118, 193, 67, 77, 102, 42, \
40, 61, 33, 34, 72, 56, 47, 149, 47, 44, \
206, 17, 27, 175, 37, 38, 93, 31, 40, 93, \
16, 28, 163, 47, 58, 231, 227, 216, 205, 182, \
176, 112, 63, 60, 124, 98, 91, 104, 96, 87, \
65, 61, 52, 66, 60, 52, 125, 113, 110, 178, \
159, 163, 158, 150, 150, 159, 155, 154, 237, 224, \
225, 248, 245, 241, 239, 225, 224, 253, 240, 237, \
245, 216, 216, 205, 178, 176, 78, 82, 73, 32, \
37, 33, 20, 21, 24, 84, 34, 35, 196, 29, \
47, 203, 23, 39, 111, 43, 35, 63, 35, 34, \
71, 52, 42, 152, 54, 44, 201, 21, 23, 150, \
42, 29, 76, 33, 31, 78, 30, 31, 94, 58, \
44, 224, 219, 213, 204, 176, 173, 101, 39, 36, \
95, 48, 38, 69, 54, 40, 29, 30, 13, 49, \
43, 31, 110, 95, 87, 141, 96, 94, 151, 76, \
85, 173, 106, 113, 218, 157, 163, 234, 159, 165, \
231, 133, 140, 211, 99, 102, 196, 69, 76, 161, \
78, 88, 72, 64, 55, 55, 27, 30, 37, 19, \
21, 73, 33, 26, 202, 44, 54, 200, 40, 44, \
92, 55, 36, 75, 68, 57, 92, 71, 56, 161, \
75, 64, 201, 63, 68, 152, 66, 61, 94, 42, \
38, 107, 65, 61, 77, 63, 45, 217, 210, 204, \
174, 148, 146, 92, 36, 34, 134, 81, 68, 120, \
98, 71, 95, 96, 62, 33, 27, 11, 52, 33, \
22, 115, 59, 49, 136, 43, 44, 135, 30, 35, \
165, 34, 44, 188, 33, 40, 205, 32, 40, 201, \
26, 27, 211, 27, 32, 162, 60, 73, 69, 50, \
43, 126, 57, 64, 77, 20, 27, 72, 23, 21, \
194, 48, 54, 196, 54, 54, 172, 137, 121, 177, \
174, 160, 171, 150, 133, 167, 116, 104, 130, 74, \
74, 72, 30, 31, 112, 57, 53, 162, 127, 118, \
189, 170, 155, 171, 168, 171, 163, 153, 156, 109, \
87, 86, 102, 74, 62, 209, 182, 134, 236, 217, \
145, 106, 98, 60, 26, 14, 5, 125, 52, 55, \
129, 22, 29, 141, 20, 25, 187, 17, 35, 198, \
24, 40, 223, 29, 46, 217, 29, 37, 215, 34, \
40, 136, 59, 66, 71, 44, 46, 177, 93, 84, \
104, 39, 40, 73, 22, 21, 174, 65, 63, 199, \
83, 79, 228, 173, 166, 187, 172, 167, 115, 104, \
99, 48, 31, 28, 17, 4, 3, 18, 3, 6, \
71, 44, 41, 153, 135, 115, 204, 189, 165, 119, \
121, 124, 161, 160, 159, 139, 130, 122, 101, 85, \
75, 160, 134, 91, 208, 182, 116, 185, 177, 140, \
91, 98, 87, 121, 79, 80, 120, 51, 53, 115, \
36, 32, 178, 31, 43, 203, 30, 43, 221, 30, \
45, 211, 33, 39, 201, 38, 40, 114, 53, 56, \
77, 34, 44, 161, 69, 57, 122, 46, 47, 59, \
38, 36, 184, 136, 127, 144, 86, 79, 94, 70, \
63, 42, 39, 35, 13, 5, 5, 11, 4, 3, \
12, 4, 3, 16, 6, 6, 62, 46, 43, 193, \
178, 156, 214, 199, 173, 96, 105, 103, 172, 174, \
167, 183, 174, 158, 160, 148, 137, 183, 163, 139, \
170, 148, 117, 156, 149, 134, 135, 152, 144, 174, \
168, 162, 204, 185, 177, 207, 175, 165, 222, 126, \
129, 212, 79, 74, 210, 49, 51, 190, 34, 34, \
195, 45, 48, 106, 56, 55, 81, 27, 37, 159, \
56, 52, 144, 55, 60, 29, 30, 31, 39, 36, \
33, 12, 6, 0, 0, 5, 0, 1, 7, 1, \
51, 44, 38, 127, 120, 114, 147, 140, 134, 154, \
144, 140, 192, 175, 170, 226, 210, 190, 226, 211, \
187, 109, 124, 128, 161, 166, 162, 165, 157, 143, \
106, 101, 87, 191, 178, 167, 194, 177, 170, 135, \
132, 132, 95, 100, 99, 178, 163, 159, 198, 184, \
174, 215, 180, 171, 168, 56, 63, 208, 67, 70, \
208, 75, 77, 211, 123, 116, 204, 142, 132, 84, \
62, 55, 73, 23, 30, 189, 84, 86, 153, 70, \
75, 21, 14, 21, 2, 2, 4, 9, 9, 4, \
46, 46, 43, 115, 112, 107, 186, 179, 168, 217, \
210, 200, 223, 216, 205, 225, 216, 208, 227, 212, \
205, 222, 208, 190, 223, 210, 189, 74, 93, 111, \
84, 92, 101, 135, 131, 128, 139, 140, 125, 165, \
162, 152, 180, 171, 171, 126, 127, 129, 81, 73, \
71, 202, 171, 165, 198, 177, 164, 203, 161, 151, \
156, 49, 56, 200, 76, 90, 173, 81, 88, 113, \
89, 82, 33, 37, 27, 18, 17, 9, 55, 28, \
27, 163, 72, 78, 128, 76, 73, 29, 10, 16, \
47, 34, 36, 116, 106, 100, 201, 182, 178, 233, \
216, 210, 230, 224, 211, 231, 225, 211, 232, 226, \
212, 230, 222, 211, 229, 216, 207, 224, 212, 196, \
219, 207, 189, 56, 78, 104, 60, 73, 93, 115, \
115, 125, 132, 137, 126, 133, 135, 124, 125, 122, \
120, 128, 132, 131, 115, 110, 104, 196, 177, 166, \
211, 202, 185, 213, 189, 174, 141, 87, 83, 90, \
51, 52, 36, 4, 8, 7, 0, 2, 8, 3, \
10, 14, 16, 13, 38, 36, 29, 139, 74, 82, \
86, 67, 57, 139, 127, 121, 191, 185, 177, 223, \
220, 207, 231, 219, 207, 231, 219, 208, 231, 225, \
212, 233, 227, 214, 235, 229, 216, 236, 229, 217, \
236, 225, 215, 227, 216, 203, 229, 218, 205, 49, \
74, 99, 45, 63, 84, 48, 56, 69, 58, 65, \
65, 77, 80, 75, 70, 71, 66, 45, 48, 49, \
54, 56, 54, 105, 104, 95, 140, 143, 131, 95, \
92, 82, 31, 19, 14, 6, 2, 1, 11, 4, \
7, 6, 9, 13, 10, 7, 16, 17, 15, 20, \
26, 35, 28, 68, 32, 40, 89, 89, 79, 221, \
222, 205, 228, 230, 214, 229, 231, 216, 230, 231, \
216, 232, 229, 216, 234, 228, 217, 233, 226, 216, \
230, 223, 213, 226, 219, 208, 226, 216, 204, 231, \
221, 210, 234, 224, 213, 35, 62, 78, 25, 48, \
62, 18, 34, 42, 12, 19, 31, 9, 12, 17, \
12, 13, 9, 7, 8, 14, 4, 5, 14, 10, \
7, 12, 12, 7, 11, 8, 4, 7, 16, 14, \
14, 34, 30, 28, 13, 11, 10, 0, 7, 3, \
0, 3, 6, 10, 1, 12, 13, 19, 18, 47, \
34, 43, 160, 163, 157, 229, 229, 212, 235, 226, \
215, 239, 227, 222, 232, 229, 222, 230, 228, 218, \
234, 227, 218, 235, 227, 219, 222, 215, 206, 213, \
206, 195, 223, 213, 201, 226, 216, 207, 228, 218, \
209, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '2174';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a3e570c3ae1216a2636f5c990b20a4e9a';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_automobile1';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{52, 59, 40, 53, 59, 48, 35, 39, 36, 34, 40, \
30, 47, 55, 35, 53, 59, 40, 61, 64, 56, \
72, 76, 77, 75, 85, 88, 78, 87, 90, 78, \
88, 90, 73, 82, 87, 73, 81, 93, 78, 86, \
96, 73, 82, 86, 69, 78, 79, 67, 77, 76, \
67, 77, 77, 67, 76, 76, 68, 78, 78, 81, \
88, 84, 82, 84, 82, 58, 57, 59, 85, 82, \
76, 136, 130, 118, 155, 146, 134, 107, 99, 90, \
60, 56, 49, 69, 67, 61, 77, 75, 65, 74, \
72, 62, 52, 49, 40, 52, 60, 37, 43, 50, \
34, 34, 40, 30, 38, 45, 28, 47, 56, 31, \
53, 61, 38, 56, 62, 51, 59, 68, 70, 45, \
60, 68, 36, 51, 59, 32, 48, 55, 30, 45, \
54, 28, 42, 57, 28, 43, 56, 29, 44, 54, \
37, 53, 59, 32, 47, 53, 29, 44, 49, 27, \
42, 48, 26, 42, 47, 29, 42, 48, 33, 41, \
50, 34, 39, 46, 74, 78, 72, 136, 134, 121, \
159, 150, 139, 92, 86, 77, 25, 23, 17, 33, \
32, 28, 33, 32, 28, 32, 30, 26, 31, 30, \
26, 42, 51, 25, 42, 50, 29, 47, 54, 38, \
47, 54, 33, 52, 60, 32, 52, 62, 36, 47, \
56, 44, 44, 57, 61, 34, 53, 67, 27, 46, \
60, 30, 49, 63, 29, 48, 63, 27, 45, 62, \
27, 46, 62, 29, 48, 62, 28, 47, 60, 27, \
46, 58, 26, 45, 56, 24, 43, 54, 24, 44, \
54, 25, 42, 56, 28, 42, 60, 34, 46, 58, \
43, 54, 49, 117, 121, 108, 156, 149, 140, 88, \
83, 76, 15, 14, 9, 23, 24, 21, 20, 19, \
20, 19, 18, 19, 23, 23, 23, 39, 47, 24, \
44, 52, 31, 49, 56, 37, 48, 55, 31, 49, \
57, 29, 47, 59, 35, 38, 52, 42, 40, 56, \
64, 33, 53, 71, 28, 47, 66, 39, 59, 77, \
42, 62, 80, 42, 62, 78, 41, 61, 77, 39, \
59, 77, 37, 57, 75, 31, 52, 66, 29, 49, \
63, 28, 49, 63, 33, 54, 68, 31, 51, 68, \
27, 44, 65, 36, 52, 67, 27, 42, 40, 80, \
86, 75, 152, 147, 139, 86, 83, 77, 8, 8, \
4, 12, 14, 12, 12, 12, 15, 10, 10, 13, \
11, 10, 14, 36, 44, 25, 41, 48, 30, 44, \
51, 33, 41, 47, 26, 48, 55, 30, 45, 58, \
39, 39, 56, 53, 41, 59, 71, 33, 51, 70, \
28, 46, 66, 45, 63, 82, 47, 65, 83, 47, \
67, 78, 47, 66, 80, 48, 67, 84, 46, 64, \
83, 39, 58, 74, 37, 57, 71, 39, 58, 72, \
44, 63, 77, 43, 63, 77, 25, 44, 61, 34, \
50, 64, 34, 49, 51, 44, 51, 43, 132, 129, \
122, 86, 85, 79, 6, 7, 5, 9, 12, 12, \
9, 11, 11, 7, 9, 10, 8, 9, 10, 25, \
32, 19, 27, 33, 19, 33, 40, 25, 38, 42, \
25, 65, 71, 51, 58, 71, 58, 41, 59, 62, \
45, 63, 79, 38, 54, 72, 31, 48, 65, 36, \
52, 70, 29, 45, 61, 31, 49, 56, 35, 52, \
63, 42, 58, 73, 44, 60, 78, 42, 58, 73, \
39, 56, 70, 36, 53, 67, 38, 55, 69, 42, \
60, 69, 28, 45, 56, 34, 48, 60, 45, 57, \
62, 30, 35, 32, 99, 97, 92, 114, 114, 110, \
35, 37, 36, 11, 16, 15, 8, 12, 9, 6, \
10, 7, 13, 17, 13, 26, 32, 21, 20, 26, \
14, 22, 29, 15, 81, 86, 73, 150, 156, 145, \
91, 102, 97, 44, 58, 66, 53, 68, 83, 49, \
63, 76, 48, 62, 74, 50, 64, 77, 50, 63, \
74, 58, 70, 76, 64, 75, 84, 72, 82, 94, \
73, 84, 98, 72, 83, 95, 69, 80, 91, 64, \
75, 87, 63, 74, 85, 61, 73, 79, 54, 65, \
73, 53, 62, 72, 61, 69, 76, 41, 45, 45, \
70, 69, 67, 175, 175, 174, 126, 128, 128, 18, \
21, 22, 9, 12, 8, 6, 10, 6, 60, 63, \
59, 35, 41, 28, 30, 36, 23, 33, 39, 26, \
138, 145, 137, 216, 224, 222, 124, 133, 136, 85, \
94, 104, 107, 116, 128, 111, 122, 129, 116, 128, \
134, 122, 133, 140, 128, 138, 145, 138, 143, 149, \
142, 146, 154, 146, 151, 159, 147, 152, 160, 147, \
151, 160, 146, 151, 159, 144, 149, 157, 141, 145, \
153, 137, 142, 149, 131, 136, 143, 125, 129, 137, \
121, 125, 132, 106, 108, 113, 104, 103, 106, 188, \
188, 191, 169, 169, 173, 27, 27, 30, 8, 8, \
8, 18, 19, 18, 127, 128, 127, 38, 44, 31, \
36, 42, 29, 41, 47, 34, 112, 119, 113, 188, \
196, 197, 161, 167, 172, 158, 164, 173, 174, 181, \
189, 182, 189, 194, 185, 192, 197, 187, 194, 199, \
191, 197, 202, 194, 197, 203, 195, 197, 203, 195, \
198, 204, 196, 198, 204, 195, 197, 203, 195, 197, \
203, 194, 197, 203, 194, 196, 202, 193, 195, 202, \
193, 195, 202, 189, 191, 198, 178, 181, 187, 175, \
176, 181, 171, 170, 175, 177, 176, 181, 156, 155, \
160, 45, 45, 48, 5, 5, 6, 26, 26, 26, \
140, 140, 140, 29, 35, 24, 32, 38, 27, 34, \
40, 28, 103, 108, 104, 187, 192, 195, 193, 198, \
202, 195, 200, 206, 199, 202, 208, 205, 207, 212, \
207, 208, 213, 209, 210, 215, 210, 211, 216, 210, \
210, 216, 211, 211, 216, 211, 211, 216, 211, 211, \
216, 211, 211, 216, 211, 211, 216, 209, 209, 214, \
208, 208, 213, 208, 208, 213, 209, 210, 215, 207, \
207, 212, 198, 199, 204, 197, 197, 202, 195, 194, \
199, 188, 187, 192, 181, 180, 185, 98, 97, 101, \
6, 6, 7, 35, 35, 35, 136, 136, 136, 34, \
39, 31, 40, 45, 37, 46, 52, 43, 152, 156, \
154, 209, 211, 215, 210, 212, 215, 211, 214, 216, \
213, 213, 217, 217, 214, 219, 219, 216, 220, 219, \
216, 221, 219, 217, 221, 219, 218, 222, 218, 218, \
221, 219, 218, 222, 219, 219, 223, 220, 219, 223, \
219, 218, 222, 217, 217, 220, 216, 216, 219, 216, \
216, 220, 217, 216, 220, 215, 214, 218, 210, 210, \
213, 208, 207, 211, 206, 205, 210, 203, 202, 207, \
204, 203, 208, 162, 162, 165, 26, 26, 26, 41, \
41, 41, 129, 129, 129, 52, 57, 50, 51, 56, \
49, 73, 78, 72, 195, 197, 198, 221, 221, 225, \
221, 222, 223, 221, 222, 221, 222, 222, 222, 225, \
222, 224, 226, 223, 226, 227, 223, 226, 227, 224, \
226, 227, 225, 227, 225, 224, 226, 226, 225, 226, \
226, 225, 226, 226, 225, 227, 225, 224, 226, 224, \
223, 225, 224, 223, 224, 224, 223, 224, 224, 223, \
225, 223, 222, 224, 220, 219, 220, 218, 217, 220, \
217, 216, 221, 215, 214, 218, 214, 213, 218, 204, \
204, 208, 72, 72, 72, 27, 27, 27, 60, 60, \
60, 57, 62, 57, 47, 52, 47, 122, 128, 123, \
217, 218, 220, 226, 225, 230, 226, 226, 226, 225, \
226, 222, 226, 226, 223, 228, 228, 228, 229, 229, \
229, 228, 228, 228, 229, 228, 229, 233, 231, 232, \
232, 229, 230, 231, 228, 229, 230, 227, 228, 229, \
226, 227, 227, 224, 225, 226, 223, 224, 226, 223, \
224, 226, 223, 224, 226, 223, 224, 226, 223, 224, \
226, 223, 224, 223, 221, 224, 221, 220, 225, 220, \
219, 224, 220, 219, 224, 220, 220, 224, 123, 123, \
124, 23, 23, 23, 28, 28, 28, 50, 55, 51, \
51, 55, 51, 167, 171, 167, 225, 225, 228, 229, \
227, 232, 230, 229, 229, 231, 230, 225, 229, 231, \
225, 229, 232, 229, 230, 233, 230, 228, 231, 228, \
228, 230, 228, 228, 225, 225, 227, 224, 223, 226, \
222, 222, 222, 218, 218, 217, 213, 213, 215, 212, \
211, 214, 211, 210, 214, 210, 210, 216, 213, 212, \
219, 216, 215, 221, 217, 217, 222, 218, 218, 219, \
217, 219, 215, 214, 219, 214, 213, 218, 214, 213, \
218, 218, 218, 221, 162, 162, 163, 29, 29, 29, \
14, 14, 14, 57, 61, 56, 81, 83, 80, 192, \
192, 191, 232, 231, 233, 232, 232, 234, 231, 231, \
231, 231, 231, 229, 233, 233, 231, 232, 234, 232, \
231, 233, 232, 229, 231, 229, 232, 233, 232, 234, \
233, 233, 232, 231, 231, 237, 236, 235, 216, 215, \
215, 181, 180, 180, 228, 227, 226, 232, 231, 231, \
232, 231, 230, 233, 232, 231, 230, 229, 228, 229, \
227, 227, 226, 225, 225, 225, 224, 224, 223, 223, \
225, 223, 223, 225, 220, 219, 221, 223, 223, 225, \
194, 191, 196, 52, 49, 52, 19, 16, 16, 41, \
43, 38, 111, 112, 109, 203, 202, 202, 161, 160, \
161, 117, 117, 117, 125, 125, 125, 120, 120, 120, \
121, 121, 121, 123, 123, 123, 116, 116, 116, 124, \
124, 124, 130, 130, 130, 191, 190, 191, 233, 233, \
233, 239, 239, 239, 216, 216, 216, 165, 165, 165, \
231, 231, 231, 238, 238, 238, 232, 232, 232, 166, \
166, 166, 120, 120, 120, 108, 108, 108, 104, 104, \
104, 100, 100, 100, 93, 93, 93, 95, 95, 95, \
87, 87, 87, 87, 86, 88, 179, 175, 181, 74, \
69, 74, 29, 25, 25, 42, 43, 36, 120, 120, \
116, 203, 203, 202, 84, 83, 84, 20, 20, 20, \
32, 32, 32, 23, 23, 23, 28, 28, 28, 32, \
32, 32, 24, 24, 24, 38, 38, 38, 22, 22, \
22, 54, 54, 54, 203, 203, 203, 239, 239, 239, \
224, 224, 224, 200, 200, 200, 232, 232, 232, 234, \
234, 234, 162, 162, 162, 20, 20, 20, 24, 24, \
24, 22, 22, 22, 16, 16, 16, 21, 21, 21, \
20, 20, 20, 24, 24, 24, 29, 29, 28, 30, \
29, 30, 169, 164, 170, 111, 106, 109, 59, 55, \
54, 45, 42, 34, 118, 117, 113, 206, 206, 206, \
127, 127, 128, 76, 76, 76, 78, 78, 78, 70, \
70, 70, 87, 87, 87, 91, 91, 91, 71, 71, \
71, 78, 78, 78, 69, 69, 69, 70, 70, 70, \
189, 189, 189, 234, 234, 234, 234, 234, 234, 230, \
230, 230, 232, 232, 232, 230, 230, 230, 146, 146, \
146, 53, 53, 53, 67, 67, 67, 63, 63, 63, \
60, 60, 60, 70, 70, 70, 76, 76, 76, 78, \
78, 78, 93, 93, 93, 114, 113, 114, 190, 186, \
189, 170, 166, 166, 147, 144, 140, 58, 52, 40, \
120, 118, 113, 211, 212, 213, 218, 219, 220, 210, \
210, 210, 208, 208, 208, 203, 203, 203, 205, 205, \
205, 205, 205, 205, 202, 202, 201, 201, 201, 201, \
205, 205, 205, 210, 210, 210, 223, 223, 223, 229, \
229, 229, 233, 233, 233, 231, 231, 231, 228, 228, \
228, 228, 228, 228, 219, 219, 219, 206, 206, 206, \
202, 202, 202, 201, 201, 201, 203, 203, 203, 206, \
206, 206, 210, 210, 210, 213, 213, 213, 216, 217, \
216, 221, 220, 220, 222, 218, 219, 183, 179, 177, \
93, 90, 85, 103, 94, 80, 170, 167, 161, 227, \
228, 229, 227, 228, 229, 230, 230, 230, 230, 230, \
230, 230, 230, 230, 230, 230, 230, 231, 231, 231, \
232, 232, 232, 231, 231, 231, 232, 232, 232, 231, \
231, 231, 231, 231, 231, 232, 232, 232, 233, 233, \
233, 232, 232, 232, 231, 231, 231, 231, 231, 231, \
232, 232, 232, 231, 231, 231, 229, 229, 229, 229, \
229, 229, 229, 229, 229, 228, 228, 228, 227, 227, \
227, 228, 228, 227, 227, 227, 227, 224, 224, 224, \
224, 220, 219, 197, 193, 190, 80, 77, 69, 125, \
114, 98, 169, 165, 158, 214, 215, 217, 217, 218, \
220, 220, 220, 220, 221, 221, 221, 222, 222, 222, \
223, 223, 223, 225, 225, 225, 220, 220, 220, 214, \
214, 214, 213, 213, 213, 214, 214, 214, 214, 214, \
214, 217, 217, 217, 223, 223, 223, 225, 225, 225, \
219, 219, 219, 214, 214, 214, 211, 211, 211, 209, \
209, 209, 206, 206, 206, 205, 205, 205, 214, 214, \
214, 217, 217, 217, 215, 215, 215, 214, 214, 214, \
212, 212, 212, 210, 209, 209, 208, 204, 202, 181, \
177, 173, 121, 118, 110, 132, 120, 103, 162, 159, \
151, 196, 195, 196, 181, 177, 177, 188, 183, 181, \
197, 194, 193, 211, 210, 210, 212, 212, 212, 215, \
215, 215, 175, 175, 175, 127, 127, 127, 129, 129, \
129, 132, 132, 131, 134, 134, 133, 135, 135, 134, \
173, 173, 172, 213, 213, 212, 162, 162, 161, 125, \
126, 124, 125, 125, 124, 120, 120, 120, 114, 114, \
116, 115, 114, 115, 180, 178, 178, 208, 207, 207, \
205, 207, 206, 200, 199, 198, 174, 170, 168, 163, \
157, 155, 163, 157, 153, 170, 167, 159, 144, 140, \
129, 132, 122, 106, 156, 156, 144, 169, 166, 163, \
101, 87, 84, 118, 102, 96, 141, 132, 129, 200, \
197, 195, 208, 208, 208, 210, 210, 212, 127, 127, \
128, 26, 26, 27, 32, 32, 33, 33, 34, 30, \
36, 37, 33, 34, 34, 30, 109, 110, 106, 202, \
203, 199, 87, 88, 84, 26, 26, 22, 29, 29, \
25, 28, 28, 30, 23, 23, 27, 33, 31, 32, \
157, 151, 151, 205, 204, 203, 200, 203, 201, 183, \
180, 176, 115, 103, 99, 94, 78, 72, 108, 97, \
89, 160, 156, 144, 148, 142, 126, 145, 135, 119, \
148, 148, 136, 166, 163, 157, 119, 103, 99, 129, \
111, 106, 144, 134, 130, 198, 194, 192, 206, 206, \
205, 208, 208, 208, 130, 130, 131, 11, 11, 11, \
14, 14, 13, 14, 15, 10, 16, 17, 12, 12, \
13, 8, 85, 86, 81, 191, 192, 187, 64, 65, \
60, 7, 8, 3, 10, 11, 7, 12, 12, 14, \
9, 8, 12, 31, 28, 29, 165, 158, 157, 207, \
202, 201, 200, 199, 197, 187, 182, 178, 147, 136, \
130, 141, 127, 119, 149, 137, 128, 155, 150, 136, \
147, 139, 122, 162, 151, 135, 140, 137, 125, 145, \
143, 138, 159, 147, 144, 165, 152, 149, 174, 166, \
163, 188, 186, 183, 192, 193, 191, 203, 203, 202, \
146, 146, 145, 20, 20, 19, 13, 13, 11, 13, \
14, 9, 16, 17, 12, 11, 12, 7, 79, 80, \
75, 183, 184, 179, 59, 60, 55, 7, 8, 3, \
12, 13, 9, 21, 22, 22, 17, 17, 19, 50, \
48, 47, 176, 170, 167, 193, 186, 183, 180, 173, \
171, 168, 163, 158, 151, 148, 140, 145, 140, 131, \
150, 140, 131, 146, 139, 126, 149, 138, 123, 172, \
159, 144, 137, 130, 120, 96, 93, 88, 90, 85, \
83, 89, 82, 80, 96, 93, 90, 112, 112, 108, \
129, 130, 126, 154, 154, 151, 163, 164, 161, 66, \
67, 64, 35, 35, 32, 34, 35, 30, 39, 40, \
35, 37, 38, 33, 94, 95, 90, 178, 179, 174, \
74, 75, 70, 29, 30, 25, 36, 37, 32, 47, \
48, 47, 52, 52, 52, 109, 107, 104, 169, 163, \
159, 137, 128, 124, 116, 106, 103, 85, 80, 75, \
69, 71, 63, 66, 68, 59, 110, 102, 92, 146, \
136, 125, 158, 145, 130, 166, 152, 137, 136, 126, \
118, 85, 84, 78, 51, 51, 50, 33, 31, 31, \
34, 34, 32, 47, 48, 44, 75, 76, 71, 89, \
90, 85, 143, 144, 139, 156, 157, 151, 135, 136, \
131, 133, 134, 129, 135, 136, 131, 132, 133, 128, \
154, 155, 150, 185, 186, 181, 146, 147, 142, 130, \
131, 126, 132, 133, 128, 134, 135, 132, 141, 141, \
139, 160, 158, 153, 125, 120, 113, 88, 80, 73, \
74, 66, 59, 36, 34, 27, 28, 32, 25, 35, \
41, 33, 102, 96, 86, 152, 139, 128, 161, 145, \
132, 161, 145, 131, 138, 125, 117, 87, 87, 81, \
56, 61, 61, 41, 44, 46, 36, 39, 38, 40, \
44, 38, 57, 59, 53, 63, 64, 57, 89, 90, \
83, 134, 135, 128, 144, 145, 138, 150, 151, 146, \
153, 154, 149, 149, 150, 145, 150, 151, 146, 152, \
153, 148, 148, 149, 144, 144, 145, 140, 140, 141, \
136, 130, 131, 127, 119, 120, 116, 106, 104, 98, \
79, 74, 65, 69, 63, 53, 62, 58, 48, 42, \
42, 34, 37, 40, 35, 48, 53, 47, 92, 89, \
78, 150, 135, 125, 158, 140, 127, 155, 139, 125, \
135, 121, 113, 71, 71, 65, 55, 62, 63, 48, \
54, 58, 40, 45, 44, 41, 45, 39, 47, 49, \
42, 56, 57, 50, 57, 58, 50, 54, 55, 47, \
45, 46, 40, 53, 54, 49, 63, 64, 59, 56, \
57, 52, 52, 53, 48, 54, 55, 51, 49, 50, \
45, 53, 53, 49, 49, 50, 46, 34, 36, 33, \
33, 34, 29, 51, 50, 43, 64, 59, 50, 62, \
59, 47, 53, 55, 42, 45, 47, 38, 49, 51, \
47, 62, 63, 61, 74, 71, 61, 140, 124, 115, \
151, 132, 119, 112, 101, 90, 125, 113, 103, 59, \
57, 51, 43, 46, 46, 59, 62, 64, 54, 56, \
56, 53, 55, 52, 59, 60, 56, 63, 64, 60, \
57, 57, 54, 41, 41, 38, 28, 28, 25, 23, \
23, 21, 40, 41, 39, 40, 40, 38, 24, 25, \
23, 24, 24, 22, 25, 26, 24, 36, 36, 34, \
30, 30, 29, 20, 20, 17, 31, 32, 27, 52, \
52, 45, 69, 67, 60, 70, 70, 62, 65, 67, \
60, 61, 62, 58, 60, 61, 59, 44, 44, 44, \
59, 55, 52, 142, 128, 120, 145, 128, 116, 103, \
95, 85, 132, 123, 111, 67, 64, 57, 19, 19, \
18, 30, 30, 30, 34, 34, 34, 42, 42, 42, \
60, 60, 60, 84, 84, 83, 80, 80, 80, 62, \
62, 61, 56, 56, 56, 52, 52, 51, 53, 53, \
52, 46, 46, 45, 38, 38, 38, 36, 36, 36, \
38, 38, 37, 35, 35, 35, 44, 44, 43, 55, \
56, 53, 57, 58, 53, 60, 61, 56, 59, 60, \
55, 47, 47, 44, 35, 36, 35, 26, 26, 26, \
20, 20, 20, 9, 9, 10, 59, 55, 57, 142, \
130, 123, 144, 129, 116, 141, 133, 123, 161, 151, \
138, 92, 87, 79, 15, 14, 12, 10, 10, 10, \
7, 7, 7, 7, 7, 7, 9, 9, 9, 17, \
17, 17, 22, 22, 22, 21, 21, 21, 25, 25, \
25, 32, 32, 32, 31, 31, 31, 27, 27, 27, \
27, 27, 27, 26, 26, 26, 25, 25, 24, 23, \
23, 23, 24, 24, 24, 23, 24, 22, 17, 18, \
15, 14, 14, 12, 10, 10, 8, 8, 8, 7, \
6, 6, 6, 2, 3, 2, 3, 3, 3, 4, \
4, 6, 45, 41, 44, 129, 117, 110, 139, 125, \
112, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '2484';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a9cff8fec826b8d67cf6755ae53deb12b';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_cat8';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{216, 227, 202, 143, 166, 157, 132, 163, 153, 138, 170, \
159, 142, 174, 168, 139, 181, 170, 140, 185, 174, \
141, 186, 178, 144, 187, 184, 147, 190, 189, 146, \
192, 191, 146, 194, 192, 151, 193, 194, 151, 191, \
184, 148, 193, 178, 146, 194, 190, 153, 194, 194, \
161, 194, 191, 153, 189, 190, 149, 187, 190, 148, \
185, 184, 148, 183, 176, 141, 183, 172, 138, 183, \
170, 137, 179, 166, 136, 175, 161, 136, 171, 158, \
136, 167, 153, 135, 165, 147, 131, 161, 145, 148, \
169, 149, 219, 225, 191, 174, 194, 173, 43, 82, \
100, 29, 84, 113, 36, 97, 122, 42, 106, 129, \
43, 116, 144, 47, 122, 153, 51, 127, 160, 55, \
132, 168, 58, 136, 175, 56, 139, 178, 57, 142, \
183, 65, 143, 178, 68, 132, 152, 94, 152, 166, \
85, 158, 183, 70, 141, 164, 93, 152, 169, 77, \
142, 174, 59, 132, 172, 54, 131, 165, 48, 129, \
151, 45, 124, 143, 43, 119, 139, 41, 111, 131, \
39, 102, 121, 38, 93, 112, 33, 84, 102, 29, \
78, 97, 24, 72, 88, 41, 75, 78, 152, 166, \
143, 174, 198, 175, 45, 96, 113, 31, 103, 132, \
36, 114, 144, 43, 120, 153, 48, 129, 167, 51, \
135, 175, 54, 140, 183, 57, 146, 191, 58, 150, \
196, 61, 153, 202, 61, 156, 206, 66, 162, 205, \
83, 151, 182, 106, 146, 167, 139, 185, 205, 130, \
177, 192, 121, 161, 171, 100, 155, 176, 80, 152, \
183, 62, 148, 182, 53, 146, 179, 48, 138, 168, \
46, 129, 157, 44, 122, 148, 44, 115, 138, 42, \
107, 127, 36, 95, 115, 31, 87, 113, 29, 81, \
106, 39, 77, 84, 140, 154, 132, 174, 200, 183, \
47, 104, 118, 35, 112, 138, 41, 123, 156, 48, \
129, 169, 53, 139, 180, 57, 147, 188, 60, 153, \
196, 59, 157, 201, 59, 161, 206, 67, 165, 214, \
69, 168, 220, 68, 174, 222, 84, 156, 194, 99, \
122, 146, 93, 106, 119, 116, 126, 134, 138, 143, \
150, 150, 174, 182, 137, 185, 200, 81, 153, 182, \
61, 148, 190, 54, 144, 181, 50, 137, 166, 47, \
130, 156, 45, 124, 146, 43, 117, 136, 37, 107, \
124, 36, 95, 115, 34, 85, 104, 43, 79, 82, \
143, 156, 130, 173, 203, 184, 47, 112, 128, 37, \
118, 150, 46, 130, 167, 49, 138, 180, 53, 146, \
191, 57, 152, 198, 60, 159, 205, 62, 165, 212, \
65, 171, 219, 71, 176, 224, 71, 181, 227, 74, \
185, 226, 100, 173, 202, 55, 78, 94, 28, 32, \
44, 32, 33, 44, 60, 61, 69, 96, 107, 115, \
108, 144, 156, 92, 159, 184, 62, 155, 191, 55, \
151, 187, 55, 143, 175, 51, 136, 165, 49, 129, \
155, 45, 122, 144, 40, 114, 134, 39, 102, 122, \
34, 90, 109, 42, 82, 87, 141, 157, 133, 174, \
206, 185, 50, 117, 133, 39, 121, 153, 47, 133, \
170, 50, 140, 182, 53, 148, 193, 58, 154, 202, \
64, 163, 210, 67, 170, 218, 72, 177, 225, 75, \
183, 231, 72, 188, 234, 76, 188, 229, 113, 185, \
213, 49, 69, 86, 10, 11, 26, 17, 17, 26, \
6, 13, 19, 20, 47, 64, 69, 125, 153, 85, \
162, 194, 69, 154, 187, 60, 148, 181, 56, 143, \
174, 52, 136, 164, 49, 128, 153, 44, 120, 142, \
40, 112, 132, 37, 100, 120, 32, 89, 109, 41, \
82, 88, 140, 157, 134, 174, 206, 185, 52, 119, \
134, 42, 123, 155, 49, 134, 172, 51, 142, 183, \
56, 150, 195, 62, 158, 205, 68, 166, 214, 70, \
173, 220, 73, 178, 226, 74, 183, 230, 70, 188, \
233, 75, 186, 228, 115, 182, 211, 53, 70, 87, \
8, 11, 25, 18, 27, 38, 64, 91, 106, 93, \
156, 189, 79, 170, 218, 67, 163, 211, 66, 152, \
195, 61, 145, 179, 54, 140, 170, 50, 132, 159, \
47, 124, 148, 42, 116, 137, 38, 108, 126, 35, \
98, 117, 31, 88, 107, 41, 81, 87, 140, 157, \
134, 174, 206, 186, 54, 120, 136, 43, 125, 157, \
49, 134, 172, 53, 143, 185, 58, 152, 198, 62, \
158, 205, 66, 165, 213, 69, 172, 220, 71, 177, \
224, 72, 180, 227, 70, 182, 228, 80, 185, 228, \
94, 158, 190, 48, 67, 85, 89, 101, 112, 116, \
134, 145, 78, 110, 130, 80, 148, 181, 71, 167, \
210, 62, 161, 206, 63, 152, 194, 59, 144, 177, \
53, 137, 165, 50, 130, 156, 47, 123, 145, 43, \
115, 134, 38, 106, 123, 35, 97, 116, 30, 88, \
107, 40, 80, 86, 140, 157, 134, 175, 206, 187, \
53, 121, 137, 41, 124, 157, 48, 133, 171, 51, \
141, 182, 55, 150, 192, 62, 155, 200, 66, 161, \
208, 67, 170, 217, 70, 176, 223, 73, 179, 229, \
73, 183, 233, 89, 184, 227, 81, 137, 167, 45, \
66, 82, 69, 84, 93, 156, 172, 179, 152, 173, \
186, 96, 142, 164, 84, 157, 189, 67, 154, 190, \
64, 149, 183, 59, 142, 172, 53, 135, 164, 50, \
128, 154, 46, 120, 143, 42, 112, 133, 37, 104, \
123, 33, 96, 116, 29, 86, 107, 40, 80, 87, \
140, 156, 134, 175, 204, 186, 48, 118, 134, 38, \
122, 154, 46, 130, 168, 49, 137, 176, 53, 146, \
184, 63, 149, 193, 66, 153, 202, 63, 165, 211, \
66, 169, 215, 73, 174, 222, 76, 173, 221, 94, \
165, 202, 99, 138, 162, 55, 74, 88, 30, 43, \
54, 62, 78, 89, 148, 166, 177, 158, 183, 197, \
152, 201, 223, 80, 156, 190, 57, 142, 175, 54, \
137, 165, 49, 129, 158, 46, 123, 149, 44, 116, \
140, 41, 108, 131, 36, 101, 123, 32, 93, 115, \
28, 84, 106, 40, 78, 86, 141, 155, 134, 175, \
203, 184, 49, 113, 129, 37, 115, 146, 43, 124, \
158, 46, 130, 166, 50, 137, 175, 56, 138, 184, \
59, 145, 194, 58, 155, 200, 64, 158, 200, 71, \
147, 184, 55, 109, 137, 59, 97, 118, 113, 136, \
153, 67, 81, 98, 29, 43, 60, 29, 48, 67, \
69, 86, 99, 152, 165, 170, 205, 235, 241, 103, \
167, 191, 50, 135, 166, 48, 131, 160, 46, 123, \
151, 43, 117, 143, 41, 111, 135, 39, 104, 127, \
35, 97, 118, 31, 89, 109, 27, 80, 99, 38, \
75, 81, 141, 155, 133, 173, 200, 181, 46, 105, \
120, 36, 106, 134, 41, 115, 145, 42, 122, 152, \
45, 127, 161, 49, 128, 170, 51, 134, 179, 54, \
139, 179, 62, 133, 168, 58, 100, 127, 52, 70, \
85, 51, 66, 78, 80, 96, 108, 49, 64, 78, \
26, 41, 58, 30, 47, 67, 44, 58, 71, 96, \
105, 109, 147, 174, 182, 90, 151, 170, 43, 125, \
151, 42, 123, 149, 43, 116, 142, 39, 109, 134, \
37, 101, 125, 36, 97, 119, 33, 90, 110, 30, \
83, 100, 28, 76, 92, 39, 73, 78, 142, 154, \
132, 171, 198, 178, 41, 96, 109, 31, 95, 121, \
34, 104, 131, 35, 112, 136, 38, 118, 144, 43, \
119, 154, 46, 124, 163, 56, 125, 159, 70, 110, \
138, 73, 85, 106, 53, 59, 72, 40, 51, 63, \
31, 48, 58, 34, 52, 62, 41, 54, 65, 31, \
42, 55, 33, 42, 55, 34, 48, 59, 46, 84, \
102, 56, 122, 145, 42, 120, 139, 40, 115, 137, \
39, 109, 135, 35, 101, 127, 35, 96, 120, 33, \
91, 112, 30, 85, 104, 29, 79, 94, 27, 72, \
86, 38, 70, 73, 142, 154, 130, 172, 196, 177, \
41, 88, 102, 27, 87, 112, 29, 95, 122, 33, \
103, 131, 36, 110, 138, 40, 113, 145, 46, 115, \
146, 77, 129, 156, 99, 121, 142, 60, 66, 81, \
36, 46, 57, 26, 39, 49, 9, 21, 30, 43, \
55, 64, 53, 63, 75, 24, 33, 43, 24, 30, \
38, 7, 21, 33, 34, 73, 96, 49, 113, 141, \
39, 110, 131, 36, 105, 127, 34, 100, 126, 33, \
94, 120, 33, 89, 113, 32, 83, 105, 31, 79, \
99, 27, 76, 91, 22, 69, 82, 35, 66, 70, \
142, 153, 130, 174, 194, 176, 42, 82, 97, 26, \
83, 106, 30, 90, 117, 34, 94, 125, 34, 99, \
131, 33, 99, 129, 61, 119, 145, 119, 158, 179, \
77, 94, 111, 36, 45, 57, 30, 41, 50, 16, \
24, 32, 3, 7, 15, 39, 43, 54, 49, 57, \
72, 28, 37, 49, 28, 34, 40, 17, 30, 40, \
46, 82, 104, 43, 102, 131, 33, 98, 123, 32, \
95, 119, 32, 92, 118, 31, 88, 112, 31, 82, \
105, 31, 77, 98, 30, 74, 94, 25, 72, 88, \
20, 67, 81, 33, 65, 69, 142, 153, 131, 174, \
191, 173, 39, 75, 89, 22, 73, 95, 26, 80, \
104, 28, 81, 109, 30, 87, 116, 30, 84, 111, \
97, 140, 162, 127, 156, 174, 38, 54, 69, 33, \
41, 54, 28, 32, 44, 11, 13, 22, 1, 2, \
10, 24, 26, 37, 42, 49, 65, 37, 46, 59, \
38, 47, 54, 36, 54, 63, 50, 90, 111, 34, \
91, 119, 30, 89, 112, 31, 87, 110, 30, 85, \
109, 29, 82, 103, 29, 78, 98, 28, 73, 92, \
26, 69, 86, 23, 67, 84, 19, 63, 78, 33, \
63, 68, 143, 152, 130, 173, 188, 169, 34, 66, \
78, 18, 63, 82, 24, 71, 91, 27, 72, 96, \
27, 74, 100, 41, 81, 104, 111, 137, 157, 85, \
102, 118, 36, 48, 62, 35, 44, 56, 22, 24, \
37, 8, 8, 18, 1, 1, 10, 15, 19, 30, \
33, 43, 57, 36, 50, 62, 33, 46, 54, 44, \
66, 76, 48, 91, 111, 26, 81, 109, 30, 81, \
104, 31, 79, 100, 28, 77, 98, 26, 74, 93, \
26, 71, 89, 24, 69, 84, 23, 66, 79, 22, \
63, 79, 19, 57, 75, 32, 59, 65, 143, 151, \
130, 173, 185, 166, 28, 56, 68, 13, 52, 70, \
20, 61, 78, 25, 64, 84, 25, 64, 87, 85, \
114, 135, 119, 134, 150, 57, 66, 79, 50, 62, \
73, 35, 46, 58, 21, 26, 37, 6, 9, 18, \
3, 8, 16, 26, 37, 46, 28, 45, 57, 27, \
45, 58, 34, 51, 59, 49, 75, 85, 40, 85, \
104, 19, 72, 98, 28, 73, 96, 28, 71, 91, \
24, 69, 89, 22, 66, 84, 22, 65, 80, 20, \
64, 76, 19, 60, 72, 18, 55, 72, 14, 49, \
68, 28, 52, 59, 142, 150, 129, 170, 183, 163, \
23, 47, 59, 7, 39, 58, 13, 47, 65, 18, \
50, 70, 27, 63, 84, 130, 157, 175, 102, 116, \
131, 43, 51, 63, 47, 59, 69, 34, 46, 55, \
24, 29, 37, 12, 12, 22, 9, 17, 28, 36, \
56, 67, 28, 50, 64, 24, 42, 52, 44, 62, \
67, 49, 78, 86, 37, 79, 93, 17, 66, 83, \
20, 66, 83, 19, 64, 80, 19, 63, 78, 17, \
60, 75, 17, 58, 73, 15, 55, 69, 12, 51, \
65, 15, 46, 66, 11, 42, 62, 24, 48, 54, \
142, 149, 128, 169, 180, 161, 21, 40, 53, 4, \
31, 51, 11, 38, 57, 9, 36, 57, 44, 76, \
96, 134, 158, 176, 64, 77, 91, 33, 41, 52, \
32, 43, 53, 22, 33, 42, 18, 22, 30, 11, \
9, 23, 10, 19, 33, 31, 53, 68, 27, 48, \
67, 23, 37, 49, 46, 60, 65, 48, 73, 83, \
33, 68, 83, 16, 58, 74, 14, 59, 75, 14, \
57, 72, 15, 55, 70, 14, 52, 69, 14, 51, \
68, 12, 47, 65, 10, 44, 62, 11, 40, 61, \
7, 36, 56, 20, 44, 50, 141, 148, 127, 171, \
178, 160, 19, 36, 49, 3, 27, 48, 10, 33, \
54, 6, 29, 52, 40, 68, 88, 82, 103, 120, \
31, 40, 54, 21, 26, 37, 20, 27, 37, 12, \
20, 29, 8, 11, 21, 8, 7, 22, 10, 18, \
34, 21, 43, 58, 24, 45, 65, 20, 32, 47, \
47, 57, 65, 56, 77, 90, 30, 62, 79, 12, \
51, 70, 12, 53, 72, 13, 52, 70, 13, 50, \
69, 12, 48, 67, 12, 46, 66, 11, 43, 63, \
9, 40, 60, 9, 39, 59, 4, 35, 55, 17, \
43, 49, 140, 149, 127, 169, 179, 160, 17, 36, \
49, 1, 27, 48, 7, 33, 53, 7, 31, 53, \
20, 46, 66, 29, 46, 63, 9, 15, 28, 8, \
8, 19, 8, 11, 21, 3, 9, 16, 1, 4, \
10, 3, 2, 13, 7, 16, 28, 20, 43, 54, \
27, 49, 64, 20, 33, 46, 47, 59, 69, 63, \
86, 100, 27, 61, 80, 15, 55, 77, 16, 58, \
79, 15, 55, 76, 15, 53, 74, 15, 52, 73, \
14, 49, 71, 13, 47, 69, 12, 44, 66, 12, \
43, 64, 7, 41, 60, 20, 47, 53, 139, 151, \
128, 169, 182, 162, 21, 43, 55, 7, 35, 55, \
13, 42, 60, 17, 44, 63, 33, 56, 75, 31, \
45, 61, 13, 17, 30, 16, 16, 26, 16, 18, \
26, 12, 17, 22, 14, 19, 20, 21, 23, 27, \
21, 31, 37, 22, 43, 49, 34, 54, 64, 35, \
48, 59, 55, 69, 78, 72, 96, 110, 59, 96, \
114, 28, 73, 92, 21, 69, 87, 22, 67, 86, \
23, 66, 85, 23, 65, 84, 23, 62, 82, 22, \
60, 80, 19, 56, 77, 19, 53, 72, 15, 51, \
69, 27, 58, 64, 140, 153, 129, 172, 185, 164, \
33, 57, 69, 20, 41, 62, 21, 38, 55, 21, \
36, 52, 35, 45, 64, 28, 34, 51, 17, 22, \
35, 23, 28, 38, 21, 27, 33, 17, 24, 28, \
22, 29, 34, 31, 39, 45, 32, 41, 49, 27, \
37, 47, 30, 39, 50, 35, 42, 53, 54, 62, \
71, 82, 99, 109, 80, 108, 120, 44, 84, 95, \
29, 75, 87, 30, 71, 87, 30, 68, 85, 30, \
68, 83, 32, 69, 83, 34, 70, 84, 39, 76, \
90, 51, 82, 96, 44, 82, 99, 30, 74, 84, \
143, 155, 126, 172, 190, 168, 40, 66, 77, 11, \
27, 48, 9, 16, 33, 5, 10, 24, 8, 8, \
25, 6, 6, 22, 4, 4, 17, 4, 5, 15, \
3, 4, 11, 2, 3, 9, 2, 5, 11, 3, \
6, 14, 5, 8, 18, 9, 11, 23, 12, 15, \
27, 11, 14, 25, 13, 18, 29, 25, 36, 46, \
32, 49, 60, 32, 56, 68, 31, 59, 71, 36, \
64, 77, 44, 71, 85, 48, 76, 87, 55, 83, \
93, 64, 92, 100, 73, 102, 111, 81, 107, 117, \
72, 109, 125, 46, 94, 107, 144, 158, 130, 173, \
193, 171, 39, 66, 76, 5, 17, 36, 6, 7, \
22, 4, 2, 14, 6, 3, 15, 5, 2, 13, \
4, 1, 11, 4, 1, 10, 4, 1, 8, 7, \
5, 11, 5, 4, 10, 2, 2, 8, 4, 3, \
11, 3, 2, 13, 5, 4, 16, 6, 7, 19, \
5, 9, 21, 5, 10, 22, 4, 11, 24, 7, \
15, 29, 8, 17, 31, 15, 29, 42, 44, 63, \
73, 51, 69, 78, 57, 76, 83, 63, 82, 88, \
65, 85, 91, 68, 87, 94, 67, 101, 116, 64, \
113, 127, 145, 162, 137, 180, 197, 176, 36, 59, \
69, 0, 11, 28, 4, 5, 16, 3, 2, 8, \
4, 3, 8, 3, 2, 8, 4, 3, 8, 3, \
2, 8, 2, 1, 7, 4, 4, 9, 2, 4, \
8, 1, 2, 7, 1, 3, 8, 1, 2, 10, \
2, 3, 12, 4, 5, 17, 5, 5, 19, 5, \
6, 20, 5, 8, 21, 7, 12, 23, 6, 12, \
23, 8, 19, 31, 38, 52, 63, 47, 62, 71, \
51, 66, 74, 57, 72, 79, 60, 75, 82, 64, \
78, 81, 58, 92, 103, 71, 123, 138, 148, 168, \
145, 182, 194, 175, 30, 45, 56, 0, 5, 21, \
5, 6, 15, 3, 6, 10, 4, 6, 8, 3, \
4, 7, 3, 3, 7, 3, 3, 8, 2, 3, \
9, 2, 3, 8, 1, 5, 6, 0, 4, 6, \
0, 4, 8, 0, 4, 10, 1, 4, 13, 3, \
6, 16, 4, 7, 18, 6, 9, 21, 6, 10, \
22, 6, 10, 22, 7, 11, 23, 10, 19, 31, \
36, 48, 60, 43, 56, 67, 41, 57, 67, 44, \
61, 70, 44, 63, 71, 48, 63, 70, 42, 73, \
88, 63, 110, 126, 148, 170, 149, 174, 191, 172, \
26, 44, 57, 4, 12, 31, 4, 8, 21, 0, \
5, 11, 0, 2, 3, 0, 0, 0, 0, 0, \
1, 0, 0, 2, 2, 0, 4, 5, 1, 6, \
7, 1, 8, 8, 2, 11, 6, 2, 13, 5, \
3, 16, 5, 4, 18, 3, 6, 16, 1, 8, \
13, 3, 11, 17, 4, 13, 22, 3, 12, 23, \
3, 13, 25, 7, 19, 28, 29, 43, 51, 34, \
48, 57, 30, 46, 56, 33, 49, 60, 32, 48, \
59, 35, 47, 59, 28, 50, 66, 47, 75, 84, \
146, 162, 143, 176, 213, 200, 61, 136, 161, 44, \
123, 163, 49, 112, 151, 49, 100, 133, 44, 87, \
115, 36, 74, 99, 29, 61, 82, 22, 46, 63, \
16, 36, 49, 13, 25, 37, 11, 16, 29, 7, \
10, 22, 2, 5, 15, 0, 2, 10, 0, 1, \
8, 2, 0, 11, 5, 0, 16, 5, 2, 20, \
5, 6, 24, 5, 9, 27, 4, 11, 29, 4, \
17, 30, 18, 35, 46, 22, 39, 51, 18, 35, \
49, 19, 37, 52, 20, 38, 53, 22, 47, 55, \
23, 56, 66, 43, 75, 78, 143, 158, 137, 178, \
224, 213, 73, 177, 208, 57, 181, 233, 65, 181, \
241, 73, 182, 243, 73, 188, 242, 74, 187, 236, \
77, 183, 227, 77, 176, 213, 74, 168, 200, 71, \
159, 184, 65, 146, 162, 57, 130, 144, 52, 112, \
126, 49, 95, 108, 41, 80, 92, 34, 65, 78, \
26, 50, 64, 17, 37, 52, 13, 26, 43, 11, \
20, 39, 10, 14, 34, 7, 11, 30, 15, 25, \
41, 18, 37, 51, 21, 53, 64, 40, 82, 91, \
65, 116, 124, 83, 150, 159, 110, 183, 193, 122, \
180, 179, 149, 177, 150, 206, 231, 208, 126, 178, \
180, 97, 156, 167, 93, 154, 167, 90, 155, 172, \
93, 157, 174, 96, 159, 175, 98, 162, 175, 99, \
164, 175, 100, 164, 174, 99, 168, 176, 99, 174, \
179, 105, 177, 181, 110, 175, 180, 114, 173, 176, \
116, 169, 171, 113, 165, 159, 109, 159, 146, 105, \
147, 134, 100, 130, 119, 93, 114, 105, 81, 96, \
87, 70, 77, 70, 73, 82, 74, 91, 108, 98, \
116, 142, 131, 131, 166, 154, 141, 184, 170, 139, \
191, 178, 134, 189, 179, 133, 176, 160, 173, 192, \
157, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '2794';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1ac9050d1816f8e0a60d0f54bd567c25b7';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_truck7';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{90, 82, 96, 80, 72, 92, 78, 73, 99, 90, 87, \
117, 94, 96, 129, 104, 108, 143, 110, 114, 149, \
119, 124, 158, 123, 127, 162, 108, 106, 135, 96, \
90, 113, 97, 91, 111, 88, 83, 99, 86, 82, \
94, 89, 84, 99, 83, 77, 97, 75, 69, 89, \
71, 65, 85, 65, 59, 79, 56, 51, 69, 55, \
53, 68, 63, 61, 75, 70, 68, 82, 75, 73, \
87, 85, 80, 96, 101, 88, 110, 104, 91, 112, \
106, 93, 114, 107, 94, 114, 108, 95, 115, 112, \
99, 120, 111, 96, 118, 127, 117, 127, 96, 87, \
101, 79, 73, 91, 73, 69, 90, 78, 74, 95, \
87, 83, 102, 84, 80, 99, 93, 89, 108, 99, \
95, 114, 98, 92, 108, 109, 102, 116, 113, 106, \
119, 103, 97, 106, 104, 98, 106, 100, 93, 107, \
87, 79, 100, 85, 77, 98, 87, 79, 100, 84, \
76, 97, 76, 69, 88, 81, 75, 91, 80, 74, \
90, 81, 75, 91, 83, 77, 93, 90, 82, 98, \
101, 89, 107, 101, 88, 108, 108, 94, 117, 106, \
92, 118, 105, 91, 117, 109, 95, 120, 116, 101, \
122, 183, 172, 181, 173, 163, 173, 151, 144, 156, \
123, 117, 130, 120, 111, 122, 118, 107, 115, 100, \
89, 97, 97, 86, 94, 93, 82, 91, 93, 84, \
91, 102, 94, 100, 107, 98, 105, 100, 91, 99, \
101, 92, 100, 102, 92, 106, 86, 75, 96, 91, \
80, 101, 97, 86, 108, 93, 82, 104, 91, 80, \
100, 92, 82, 99, 95, 84, 101, 92, 81, 98, \
87, 77, 94, 92, 81, 98, 96, 83, 100, 100, \
87, 105, 107, 94, 115, 102, 88, 111, 106, 92, \
113, 118, 107, 112, 126, 115, 111, 205, 191, 204, \
206, 194, 207, 199, 190, 202, 193, 185, 196, 194, \
182, 191, 183, 168, 176, 170, 155, 163, 160, 145, \
154, 126, 111, 120, 112, 99, 106, 96, 85, 91, \
88, 77, 85, 90, 78, 89, 94, 82, 95, 95, \
82, 100, 92, 79, 101, 90, 77, 99, 91, 78, \
100, 100, 86, 109, 98, 85, 106, 92, 78, 96, \
96, 81, 100, 92, 77, 96, 88, 74, 92, 96, \
82, 100, 97, 84, 101, 99, 87, 101, 96, 84, \
95, 108, 96, 105, 138, 128, 129, 142, 136, 115, \
134, 126, 97, 207, 189, 209, 204, 190, 208, 202, \
190, 206, 201, 191, 205, 204, 191, 204, 202, 187, \
199, 194, 178, 191, 202, 186, 199, 197, 182, 194, \
185, 171, 181, 160, 147, 156, 114, 101, 113, 90, \
76, 92, 90, 76, 94, 88, 73, 95, 89, 75, \
97, 91, 76, 99, 87, 72, 95, 101, 86, 109, \
101, 85, 106, 87, 68, 88, 96, 78, 97, 99, \
81, 101, 98, 80, 100, 106, 90, 109, 102, 89, \
106, 93, 81, 92, 95, 85, 86, 134, 126, 117, \
158, 151, 134, 148, 142, 112, 150, 144, 110, 205, \
190, 208, 202, 189, 206, 199, 187, 203, 198, 186, \
201, 197, 183, 199, 199, 183, 200, 191, 176, 193, \
191, 175, 192, 201, 186, 203, 206, 189, 207, 205, \
188, 205, 186, 172, 187, 139, 128, 141, 93, 84, \
95, 81, 72, 86, 81, 70, 88, 87, 75, 93, \
87, 73, 92, 81, 65, 85, 86, 71, 92, 85, \
70, 92, 98, 83, 103, 104, 90, 107, 94, 81, \
95, 98, 85, 96, 104, 94, 97, 115, 106, 98, \
142, 135, 115, 179, 173, 150, 182, 176, 152, 169, \
160, 132, 167, 157, 127, 172, 160, 166, 174, 162, \
169, 182, 170, 177, 189, 177, 183, 182, 168, 178, \
191, 174, 187, 179, 163, 175, 168, 152, 164, 177, \
161, 174, 182, 163, 180, 191, 172, 191, 201, 187, \
200, 203, 194, 201, 166, 162, 164, 137, 132, 138, \
128, 119, 131, 109, 99, 111, 93, 81, 94, 82, \
66, 80, 77, 63, 78, 78, 69, 83, 89, 82, \
89, 93, 88, 87, 95, 90, 84, 105, 100, 89, \
138, 131, 112, 164, 159, 127, 177, 174, 135, 194, \
190, 155, 189, 183, 155, 174, 162, 135, 172, 158, \
129, 141, 126, 118, 148, 134, 126, 170, 155, 148, \
170, 155, 148, 169, 155, 149, 177, 164, 158, 159, \
145, 140, 148, 135, 129, 149, 136, 130, 156, 141, \
141, 178, 162, 167, 177, 163, 169, 186, 175, 182, \
181, 172, 180, 171, 162, 171, 179, 169, 178, 184, \
173, 183, 173, 159, 169, 147, 130, 142, 141, 126, \
134, 117, 109, 109, 108, 102, 93, 116, 111, 91, \
135, 132, 102, 155, 152, 119, 165, 159, 127, 165, \
159, 121, 164, 159, 115, 165, 160, 117, 165, 159, \
120, 168, 156, 123, 167, 154, 122, 127, 110, 94, \
132, 115, 100, 136, 119, 103, 133, 116, 101, 133, \
120, 104, 136, 125, 108, 143, 131, 115, 155, 143, \
127, 155, 144, 127, 150, 138, 127, 150, 136, 132, \
142, 128, 130, 142, 127, 137, 123, 108, 124, 107, \
94, 107, 120, 109, 118, 150, 137, 146, 164, 148, \
159, 162, 142, 153, 174, 157, 168, 158, 146, 152, \
139, 129, 126, 151, 143, 129, 153, 147, 122, 156, \
150, 119, 161, 153, 121, 160, 152, 117, 167, 160, \
121, 178, 171, 130, 169, 161, 121, 172, 160, 126, \
176, 162, 132, 165, 149, 140, 174, 158, 150, 182, \
166, 157, 174, 158, 149, 156, 142, 132, 146, 133, \
122, 141, 129, 117, 146, 133, 122, 142, 130, 119, \
143, 131, 123, 131, 118, 117, 107, 91, 98, 119, \
100, 115, 116, 94, 118, 108, 90, 110, 106, 93, \
106, 115, 99, 113, 125, 105, 120, 140, 118, 133, \
147, 126, 145, 150, 134, 155, 145, 130, 145, 146, \
132, 140, 147, 134, 135, 155, 143, 136, 163, 151, \
134, 171, 159, 143, 174, 161, 145, 178, 167, 145, \
176, 165, 137, 187, 173, 148, 200, 185, 162, 223, \
208, 218, 223, 208, 218, 225, 210, 220, 222, 207, \
217, 215, 200, 207, 209, 194, 200, 208, 192, 198, \
214, 199, 204, 212, 197, 203, 209, 195, 202, 169, \
155, 165, 122, 104, 120, 132, 109, 132, 130, 102, \
130, 122, 98, 125, 121, 104, 126, 132, 111, 134, \
140, 116, 140, 142, 117, 142, 133, 110, 134, 133, \
116, 137, 137, 119, 140, 136, 119, 139, 145, 127, \
147, 157, 139, 155, 157, 138, 147, 162, 142, 157, \
163, 143, 159, 159, 140, 147, 153, 136, 132, 160, \
144, 132, 173, 157, 143, 226, 216, 234, 223, 212, \
230, 221, 210, 228, 223, 212, 230, 225, 212, 228, \
227, 212, 226, 227, 213, 227, 230, 216, 230, 224, \
207, 223, 184, 169, 185, 169, 152, 169, 126, 104, \
122, 131, 105, 128, 129, 101, 130, 123, 101, 129, \
122, 105, 130, 131, 110, 136, 146, 121, 147, 146, \
119, 145, 126, 102, 123, 123, 105, 121, 128, 110, \
128, 124, 106, 127, 128, 110, 133, 136, 116, 140, \
137, 114, 139, 143, 120, 149, 152, 129, 159, 149, \
127, 150, 136, 116, 127, 173, 155, 152, 199, 181, \
173, 220, 213, 226, 219, 213, 224, 220, 213, 225, \
222, 214, 226, 217, 204, 212, 214, 201, 204, 217, \
207, 208, 223, 208, 213, 228, 205, 216, 200, 177, \
188, 166, 140, 146, 115, 81, 85, 130, 95, 104, \
123, 94, 111, 114, 96, 117, 111, 99, 120, 115, \
98, 119, 132, 109, 129, 146, 119, 137, 123, 99, \
118, 114, 97, 118, 126, 108, 130, 124, 106, 129, \
126, 108, 132, 131, 112, 136, 132, 110, 136, 130, \
108, 133, 134, 111, 135, 132, 111, 131, 135, 115, \
128, 185, 165, 161, 199, 180, 169, 170, 164, 174, \
170, 164, 174, 171, 165, 175, 173, 166, 176, 157, \
138, 140, 134, 113, 109, 135, 118, 113, 147, 125, \
121, 164, 133, 133, 192, 151, 149, 176, 127, 118, \
152, 100, 88, 159, 111, 101, 148, 108, 104, 131, \
108, 116, 122, 110, 128, 122, 107, 127, 131, 113, \
132, 137, 115, 135, 122, 100, 122, 119, 101, 125, \
124, 106, 131, 123, 105, 129, 125, 107, 131, 128, \
109, 134, 129, 107, 132, 124, 101, 124, 130, 108, \
128, 124, 103, 122, 130, 109, 121, 184, 164, 155, \
186, 167, 151, 60, 54, 64, 59, 53, 63, 58, \
52, 62, 60, 53, 63, 80, 63, 69, 83, 65, \
69, 66, 51, 56, 74, 56, 60, 89, 62, 63, \
117, 72, 66, 138, 83, 71, 136, 85, 71, 138, \
92, 77, 144, 105, 90, 132, 106, 105, 123, 107, \
122, 128, 111, 129, 133, 117, 138, 126, 110, 134, \
119, 101, 126, 127, 109, 132, 123, 105, 129, 121, \
103, 127, 123, 105, 129, 124, 105, 130, 122, 99, \
125, 119, 97, 120, 127, 105, 126, 119, 98, 117, \
139, 118, 131, 211, 190, 190, 226, 205, 200, 53, \
46, 57, 52, 46, 56, 51, 45, 55, 51, 45, \
56, 61, 56, 71, 68, 65, 87, 58, 59, 84, \
70, 66, 87, 75, 64, 75, 89, 63, 65, 91, \
57, 56, 78, 49, 48, 76, 51, 47, 102, 79, \
71, 122, 97, 94, 119, 93, 100, 114, 90, 103, \
114, 94, 113, 118, 103, 128, 113, 98, 124, 121, \
103, 127, 119, 101, 125, 119, 101, 125, 120, 102, \
126, 122, 103, 127, 118, 95, 121, 116, 94, 117, \
124, 102, 123, 118, 97, 115, 140, 118, 135, 208, \
184, 200, 221, 197, 212, 57, 51, 61, 56, 50, \
60, 55, 49, 59, 54, 48, 58, 59, 55, 74, \
57, 58, 88, 58, 62, 97, 72, 74, 101, 72, \
67, 79, 79, 67, 71, 70, 59, 64, 56, 50, \
57, 58, 49, 54, 87, 71, 69, 116, 86, 81, \
129, 89, 86, 127, 93, 98, 124, 98, 112, 120, \
101, 124, 115, 98, 124, 119, 101, 125, 118, 100, \
124, 117, 99, 123, 118, 100, 124, 121, 101, 126, \
116, 93, 119, 115, 93, 116, 120, 98, 119, 113, \
92, 111, 141, 120, 136, 214, 190, 205, 222, 198, \
211, 52, 46, 56, 48, 41, 51, 46, 39, 50, \
53, 48, 60, 71, 64, 81, 65, 59, 85, 68, \
62, 94, 78, 68, 91, 83, 68, 74, 69, 59, \
57, 55, 53, 56, 55, 53, 60, 65, 53, 57, \
83, 57, 54, 108, 67, 56, 125, 77, 66, 132, \
92, 91, 134, 102, 112, 123, 101, 121, 115, 98, \
122, 119, 101, 125, 118, 100, 124, 116, 98, 122, \
116, 98, 122, 119, 99, 124, 117, 94, 120, 115, \
93, 115, 114, 92, 113, 111, 89, 108, 140, 118, \
133, 214, 192, 200, 221, 201, 204, 69, 59, 67, \
89, 77, 86, 106, 96, 109, 140, 136, 155, 143, \
139, 158, 121, 110, 128, 99, 80, 97, 84, 58, \
74, 89, 62, 76, 75, 63, 69, 63, 59, 62, \
78, 60, 67, 116, 82, 82, 135, 89, 76, 122, \
72, 52, 118, 74, 64, 115, 78, 82, 118, 81, \
91, 120, 99, 118, 109, 98, 124, 116, 98, 121, \
118, 100, 122, 117, 99, 122, 118, 100, 122, 117, \
97, 120, 118, 93, 115, 117, 92, 114, 114, 89, \
111, 107, 82, 102, 128, 102, 124, 175, 153, 186, \
168, 156, 191, 82, 74, 85, 105, 98, 112, 143, \
129, 141, 165, 140, 147, 151, 121, 120, 143, 109, \
103, 122, 84, 76, 99, 63, 60, 83, 54, 58, \
69, 51, 53, 74, 55, 53, 78, 46, 45, 125, \
78, 71, 158, 102, 82, 135, 77, 52, 110, 60, \
49, 107, 63, 67, 117, 69, 74, 119, 85, 97, \
101, 85, 107, 102, 85, 106, 105, 87, 107, 105, \
88, 108, 106, 88, 109, 104, 86, 106, 104, 83, \
102, 104, 82, 101, 104, 82, 101, 96, 75, 93, \
108, 86, 106, 141, 124, 157, 127, 121, 166, 62, \
57, 70, 57, 58, 78, 85, 63, 69, 143, 85, \
65, 161, 86, 56, 167, 93, 63, 151, 86, 57, \
112, 62, 41, 107, 75, 63, 111, 80, 68, 104, \
66, 53, 90, 49, 38, 101, 52, 38, 147, 90, \
67, 173, 109, 82, 125, 64, 49, 114, 57, 55, \
130, 65, 62, 128, 74, 75, 102, 73, 86, 93, \
77, 93, 95, 78, 94, 97, 80, 96, 96, 79, \
95, 94, 77, 93, 96, 80, 95, 93, 78, 92, \
89, 73, 88, 88, 72, 87, 103, 86, 101, 127, \
115, 141, 114, 108, 150, 78, 67, 76, 63, 61, \
80, 88, 54, 52, 188, 104, 66, 214, 107, 66, \
189, 86, 53, 170, 81, 49, 139, 71, 46, 106, \
60, 44, 105, 56, 38, 137, 83, 62, 155, 109, \
92, 140, 94, 78, 132, 82, 63, 157, 97, 74, \
133, 73, 57, 126, 66, 62, 147, 75, 65, 137, \
72, 64, 83, 47, 52, 65, 49, 61, 67, 51, \
62, 70, 54, 66, 68, 52, 63, 67, 52, 63, \
64, 50, 61, 64, 51, 62, 70, 56, 68, 67, \
54, 64, 85, 70, 87, 115, 101, 144, 111, 98, \
150, 84, 56, 52, 68, 48, 52, 104, 58, 46, \
190, 104, 63, 207, 104, 65, 185, 84, 52, 185, \
89, 53, 199, 117, 82, 154, 86, 56, 127, 60, \
35, 124, 65, 44, 136, 95, 81, 120, 88, 78, \
85, 51, 42, 104, 61, 47, 98, 54, 45, 97, \
50, 49, 116, 53, 45, 115, 56, 46, 73, 40, \
40, 56, 40, 48, 56, 41, 48, 57, 41, 49, \
60, 44, 52, 63, 47, 55, 59, 43, 53, 60, \
44, 54, 68, 52, 62, 77, 60, 69, 96, 78, \
94, 107, 87, 134, 111, 89, 134, 134, 89, 71, \
117, 76, 64, 136, 80, 60, 177, 99, 64, 189, \
107, 68, 184, 101, 58, 208, 119, 67, 225, 136, \
79, 206, 122, 65, 182, 104, 68, 116, 57, 41, \
84, 53, 44, 72, 55, 52, 65, 46, 48, 76, \
50, 46, 74, 49, 46, 74, 44, 49, 95, 48, \
43, 96, 50, 41, 72, 46, 45, 58, 43, 47, \
58, 44, 47, 60, 45, 49, 66, 51, 54, 68, \
51, 56, 68, 46, 55, 69, 47, 56, 75, 52, \
62, 85, 63, 72, 108, 85, 96, 123, 99, 121, \
144, 115, 132, 164, 108, 84, 163, 105, 84, 163, \
95, 71, 178, 100, 71, 189, 110, 74, 175, 96, \
56, 180, 99, 57, 200, 120, 76, 200, 123, 81, \
200, 111, 83, 135, 65, 55, 67, 42, 38, 69, \
54, 47, 81, 59, 52, 74, 48, 45, 75, 51, \
53, 79, 52, 57, 84, 48, 47, 80, 43, 42, \
68, 43, 43, 58, 43, 44, 55, 44, 51, 61, \
47, 56, 73, 47, 53, 83, 51, 52, 72, 44, \
46, 78, 48, 51, 87, 56, 61, 107, 80, 85, \
159, 133, 138, 185, 152, 156, 184, 143, 141, 104, \
59, 48, 120, 68, 55, 125, 65, 51, 131, 66, \
50, 143, 75, 57, 130, 65, 48, 123, 63, 51, \
143, 90, 82, 142, 93, 89, 160, 91, 78, 123, \
67, 58, 64, 43, 43, 97, 65, 55, 123, 75, \
59, 87, 49, 45, 74, 48, 52, 73, 46, 50, \
69, 43, 47, 70, 44, 49, 68, 44, 46, 58, \
43, 45, 51, 44, 57, 60, 48, 64, 79, 46, \
55, 91, 49, 49, 72, 45, 42, 80, 49, 48, \
98, 63, 62, 120, 91, 89, 209, 183, 181, 215, \
176, 177, 202, 156, 151, 66, 47, 51, 70, 47, \
50, 73, 46, 49, 74, 43, 45, 73, 43, 46, \
71, 44, 48, 75, 48, 53, 75, 49, 54, 72, \
46, 50, 73, 52, 42, 66, 55, 49, 65, 45, \
55, 112, 60, 60, 126, 60, 51, 87, 48, 47, \
60, 45, 52, 58, 44, 50, 59, 44, 50, 59, \
45, 51, 59, 44, 49, 56, 44, 50, 52, 45, \
59, 59, 47, 64, 76, 47, 57, 92, 59, 62, \
68, 49, 51, 71, 44, 47, 87, 52, 52, 127, \
94, 89, 207, 176, 168, 212, 174, 167, 221, 182, \
173, 65, 51, 58, 64, 49, 56, 61, 46, 52, \
60, 44, 51, 57, 46, 56, 57, 46, 57, 61, \
47, 55, 81, 64, 69, 98, 77, 79, 68, 59, \
55, 52, 51, 57, 68, 44, 62, 111, 56, 59, \
123, 69, 58, 80, 54, 51, 56, 45, 51, 54, \
43, 49, 54, 43, 49, 54, 44, 49, 60, 46, \
51, 60, 42, 48, 59, 43, 53, 64, 45, 56, \
79, 49, 54, 89, 58, 60, 74, 56, 59, 77, \
50, 52, 95, 57, 55, 138, 98, 89, 175, 135, \
122, 199, 148, 137, 212, 160, 151, 143, 115, 116, \
118, 94, 95, 76, 55, 57, 62, 44, 46, 62, \
46, 52, 63, 47, 52, 88, 68, 70, 128, 103, \
101, 130, 101, 97, 87, 61, 63, 62, 43, 60, \
73, 44, 63, 93, 49, 46, 93, 62, 46, 66, \
48, 40, 66, 45, 44, 70, 49, 48, 78, 56, \
55, 82, 61, 60, 91, 65, 64, 91, 59, 57, \
109, 76, 75, 123, 88, 86, 141, 100, 94, 145, \
107, 100, 153, 126, 121, 156, 120, 115, 167, 122, \
114, 182, 136, 122, 193, 148, 130, 205, 143, 130, \
193, 125, 116, 185, 147, 149, 161, 131, 135, 84, \
61, 66, 63, 44, 50, 65, 46, 51, 67, 46, \
50, 75, 51, 55, 80, 54, 56, 77, 49, 50, \
77, 43, 50, 65, 40, 57, 62, 46, 56, 83, \
50, 42, 102, 67, 58, 124, 90, 84, 134, 92, \
81, 158, 116, 105, 179, 137, 127, 179, 138, 127, \
175, 129, 118, 181, 130, 117, 212, 159, 143, 219, \
163, 145, 217, 160, 139, 220, 169, 149, 226, 185, \
167, 230, 181, 165, 228, 175, 160, 218, 168, 150, \
214, 169, 148, 227, 175, 155, 216, 161, 144, 154, \
112, 113, 141, 106, 109, 103, 75, 79, 96, 73, \
78, 117, 91, 95, 130, 101, 103, 120, 89, 91, \
115, 82, 84, 116, 83, 84, 125, 83, 82, 134, \
100, 97, 137, 114, 106, 158, 118, 101, 193, 140, \
128, 212, 160, 150, 215, 164, 146, 234, 183, 166, \
232, 181, 164, 228, 177, 159, 232, 179, 160, 234, \
176, 155, 231, 168, 143, 236, 178, 151, 238, 183, \
156, 244, 193, 168, 240, 191, 166, 222, 165, 142, \
234, 179, 156, 247, 198, 175, 244, 197, 174, 244, \
198, 173, 235, 189, 165, 213, 162, 148, 207, 159, \
147, 186, 141, 130, 173, 131, 122, 177, 134, 125, \
193, 148, 137, 185, 137, 125, 197, 145, 133, 196, \
142, 128, 197, 135, 116, 209, 151, 127, 220, 172, \
145, 216, 165, 135, 234, 178, 151, 239, 191, 169, \
241, 198, 180, 247, 203, 185, 241, 194, 176, 238, \
192, 172, 247, 205, 182, 231, 179, 156, 224, 163, \
141, 229, 183, 157, 229, 186, 164, 235, 187, 168, \
224, 171, 148, 226, 161, 136, 241, 187, 156, 229, \
182, 152, 234, 180, 158, 239, 180, 159, 217, 155, \
131, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '3104';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1adbbe14555fbc896253f5a526bd62a6bf';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_truck4';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{47, 43, 33, 17, 18, 20, 24, 18, 19, 17, 21, \
21, 20, 19, 23, 17, 17, 17, 14, 14, 11, \
16, 14, 14, 17, 13, 19, 18, 15, 20, 23, \
21, 24, 30, 28, 29, 37, 39, 38, 50, 53, \
50, 62, 66, 59, 78, 82, 72, 97, 96, 88, \
106, 104, 97, 99, 98, 91, 92, 90, 83, 84, \
82, 80, 77, 75, 74, 50, 49, 45, 16, 16, \
13, 15, 15, 11, 15, 15, 11, 14, 13, 15, \
14, 13, 15, 15, 13, 11, 17, 12, 10, 17, \
13, 13, 12, 11, 11, 47, 41, 35, 16, 19, \
21, 19, 21, 21, 17, 22, 22, 18, 18, 21, \
35, 35, 35, 70, 71, 67, 88, 85, 84, 110, \
101, 105, 128, 119, 119, 142, 136, 135, 154, 149, \
146, 167, 157, 146, 175, 165, 151, 181, 171, 156, \
180, 172, 155, 174, 175, 155, 184, 184, 164, 201, \
197, 178, 206, 202, 183, 198, 196, 188, 198, 195, \
193, 152, 147, 137, 59, 52, 33, 49, 44, 21, \
41, 38, 19, 44, 39, 31, 46, 41, 38, 25, \
20, 13, 22, 18, 4, 22, 19, 10, 26, 25, \
22, 46, 43, 40, 17, 20, 22, 19, 23, 26, \
21, 24, 26, 17, 16, 19, 70, 70, 70, 166, \
166, 163, 176, 178, 170, 173, 172, 156, 167, 159, \
134, 156, 149, 120, 155, 152, 125, 149, 143, 112, \
129, 123, 92, 117, 111, 80, 115, 110, 80, 109, \
110, 77, 108, 105, 73, 144, 136, 106, 174, 173, \
140, 196, 195, 176, 213, 209, 201, 203, 196, 182, \
152, 143, 114, 143, 136, 96, 130, 126, 90, 135, \
130, 105, 140, 133, 113, 88, 83, 61, 73, 71, \
46, 73, 72, 55, 102, 102, 95, 45, 45, 46, \
18, 20, 23, 21, 23, 28, 23, 22, 28, 21, \
21, 24, 32, 32, 32, 59, 60, 57, 74, 76, \
67, 123, 119, 96, 107, 86, 48, 105, 78, 31, \
118, 98, 52, 110, 99, 52, 91, 81, 36, 91, \
80, 38, 116, 104, 65, 132, 112, 78, 107, 77, \
47, 114, 84, 54, 125, 111, 75, 153, 149, 118, \
208, 204, 185, 207, 202, 187, 188, 184, 157, 187, \
184, 147, 176, 173, 141, 168, 163, 139, 160, 155, \
132, 136, 133, 105, 121, 120, 92, 115, 114, 92, \
123, 124, 110, 43, 48, 50, 21, 23, 25, 24, \
23, 30, 25, 21, 29, 22, 22, 25, 22, 21, \
22, 12, 13, 10, 21, 14, 10, 99, 69, 59, \
126, 75, 47, 140, 78, 37, 146, 86, 46, 139, \
73, 36, 128, 59, 28, 134, 66, 37, 137, 69, \
43, 122, 59, 35, 114, 46, 26, 111, 49, 28, \
106, 65, 36, 119, 103, 66, 185, 180, 152, 208, \
206, 190, 183, 185, 165, 183, 185, 162, 178, 176, \
161, 167, 164, 153, 154, 151, 138, 144, 142, 121, \
133, 132, 105, 123, 123, 100, 118, 119, 102, 34, \
37, 41, 24, 25, 29, 25, 25, 31, 25, 23, \
29, 25, 23, 28, 25, 24, 28, 42, 45, 40, \
64, 44, 34, 95, 44, 37, 108, 52, 40, 118, \
47, 24, 119, 52, 28, 113, 47, 24, 114, 43, \
26, 120, 52, 35, 146, 69, 49, 151, 83, 58, \
141, 78, 56, 139, 88, 67, 136, 89, 66, 113, \
83, 48, 153, 144, 110, 206, 204, 183, 197, 198, \
182, 194, 195, 178, 188, 188, 173, 177, 177, 163, \
164, 165, 149, 151, 151, 133, 140, 141, 120, 130, \
131, 112, 126, 127, 112, 31, 31, 37, 26, 27, \
32, 26, 27, 32, 26, 25, 30, 26, 24, 30, \
33, 32, 36, 102, 104, 100, 91, 81, 68, 63, \
44, 34, 54, 36, 28, 79, 47, 28, 83, 54, \
32, 78, 52, 26, 86, 63, 36, 93, 66, 36, \
120, 62, 33, 143, 106, 68, 128, 105, 69, 137, \
127, 92, 170, 156, 120, 113, 91, 53, 153, 142, \
107, 201, 199, 176, 196, 196, 179, 197, 197, 180, \
195, 196, 178, 184, 185, 167, 171, 172, 154, 157, \
158, 140, 145, 146, 128, 135, 136, 119, 128, 128, \
115, 28, 29, 34, 28, 28, 33, 27, 28, 33, \
26, 26, 31, 26, 26, 31, 40, 39, 44, 124, \
124, 120, 94, 88, 79, 48, 43, 42, 54, 49, \
49, 88, 70, 58, 80, 61, 48, 75, 58, 42, \
77, 75, 51, 100, 82, 53, 135, 62, 40, 121, \
83, 53, 101, 85, 57, 117, 111, 82, 164, 154, \
123, 120, 99, 65, 167, 155, 123, 205, 202, 180, \
202, 202, 184, 201, 201, 182, 201, 202, 184, 190, \
191, 173, 176, 177, 159, 162, 163, 145, 148, 149, \
131, 134, 135, 118, 125, 126, 112, 31, 32, 37, \
29, 30, 35, 28, 29, 34, 26, 29, 33, 28, \
30, 34, 36, 35, 40, 133, 130, 127, 103, 93, \
83, 44, 34, 30, 70, 62, 59, 104, 80, 65, \
73, 51, 39, 47, 37, 30, 49, 58, 43, 69, \
58, 40, 117, 46, 37, 84, 42, 29, 71, 49, \
38, 119, 105, 92, 179, 160, 142, 137, 112, 84, \
172, 160, 130, 200, 198, 175, 200, 201, 180, 198, \
199, 179, 196, 197, 179, 187, 188, 170, 174, 175, \
157, 160, 161, 143, 146, 147, 129, 134, 135, 118, \
123, 124, 111, 32, 33, 38, 31, 32, 37, 30, \
31, 36, 27, 33, 36, 25, 31, 35, 24, 24, \
29, 102, 98, 97, 110, 93, 79, 84, 61, 44, \
98, 77, 61, 114, 76, 48, 102, 69, 44, 72, \
54, 39, 73, 68, 51, 88, 69, 52, 121, 52, \
43, 90, 44, 30, 75, 44, 31, 116, 93, 78, \
176, 145, 123, 141, 110, 83, 176, 164, 136, 200, \
197, 175, 197, 199, 176, 197, 198, 176, 196, 197, \
179, 189, 190, 172, 176, 177, 159, 164, 165, 147, \
150, 151, 133, 137, 138, 122, 127, 128, 114, 35, \
34, 41, 32, 34, 40, 26, 29, 34, 22, 29, \
31, 28, 30, 31, 62, 56, 56, 92, 82, 75, \
131, 91, 73, 163, 87, 68, 170, 92, 75, 166, \
75, 47, 166, 80, 53, 157, 80, 61, 162, 90, \
74, 146, 71, 56, 143, 47, 37, 139, 68, 51, \
142, 81, 64, 136, 70, 53, 140, 71, 46, 139, \
98, 68, 180, 169, 142, 205, 203, 180, 206, 208, \
183, 203, 204, 181, 201, 202, 184, 194, 195, 177, \
182, 183, 166, 169, 170, 153, 155, 156, 138, 142, \
142, 126, 121, 121, 108, 38, 32, 41, 42, 44, \
49, 50, 58, 57, 72, 72, 68, 111, 82, 76, \
157, 113, 98, 187, 123, 104, 173, 95, 71, 176, \
66, 47, 182, 62, 46, 182, 58, 40, 176, 57, \
38, 176, 59, 41, 179, 68, 49, 166, 69, 52, \
172, 105, 86, 173, 134, 111, 181, 147, 124, 141, \
60, 50, 142, 68, 46, 148, 126, 89, 160, 152, \
122, 193, 193, 167, 197, 200, 171, 200, 202, 176, \
204, 205, 188, 199, 200, 184, 190, 192, 177, 178, \
179, 164, 166, 164, 150, 151, 149, 135, 124, 122, \
109, 76, 68, 70, 143, 138, 131, 128, 127, 111, \
180, 173, 159, 189, 162, 149, 171, 129, 107, 177, \
80, 64, 175, 68, 49, 169, 65, 43, 169, 56, \
37, 165, 51, 32, 158, 48, 28, 153, 45, 26, \
148, 39, 21, 141, 53, 36, 153, 120, 96, 161, \
153, 128, 160, 159, 132, 121, 61, 48, 127, 53, \
33, 151, 127, 92, 162, 155, 126, 190, 191, 165, \
195, 198, 170, 207, 208, 182, 215, 216, 198, 208, \
209, 193, 199, 200, 187, 180, 180, 169, 156, 155, \
145, 125, 124, 115, 103, 102, 92, 111, 87, 82, \
181, 150, 132, 162, 128, 101, 204, 175, 152, 208, \
190, 172, 174, 163, 137, 161, 75, 60, 162, 48, \
32, 153, 50, 30, 150, 45, 27, 148, 41, 23, \
145, 42, 24, 143, 45, 28, 141, 35, 22, 131, \
46, 33, 131, 106, 85, 143, 143, 120, 135, 147, \
120, 102, 66, 47, 120, 39, 20, 152, 114, 84, \
176, 170, 141, 198, 198, 174, 212, 215, 188, 209, \
211, 185, 202, 204, 184, 185, 186, 170, 154, 154, \
142, 111, 111, 103, 66, 66, 61, 39, 39, 34, \
35, 35, 30, 108, 61, 54, 138, 75, 55, 145, \
77, 52, 158, 79, 63, 180, 126, 116, 171, 155, \
137, 143, 63, 50, 154, 38, 25, 152, 40, 27, \
148, 39, 25, 149, 40, 27, 152, 42, 30, 146, \
42, 29, 136, 31, 19, 128, 39, 30, 152, 111, \
96, 157, 136, 117, 144, 139, 113, 103, 66, 46, \
120, 36, 19, 128, 83, 57, 144, 138, 111, 164, \
164, 142, 170, 172, 148, 166, 168, 141, 162, 164, \
142, 128, 129, 112, 50, 50, 40, 34, 34, 29, \
22, 23, 19, 18, 19, 15, 20, 20, 17, 113, \
60, 52, 142, 70, 51, 144, 69, 49, 146, 61, \
42, 161, 105, 92, 182, 173, 159, 136, 71, 58, \
144, 38, 23, 152, 44, 34, 164, 64, 51, 169, \
70, 57, 173, 67, 55, 152, 50, 34, 127, 43, \
22, 108, 30, 16, 110, 50, 38, 123, 65, 46, \
135, 85, 63, 107, 47, 29, 126, 38, 23, 111, \
64, 41, 115, 108, 84, 85, 85, 65, 105, 106, \
85, 147, 149, 123, 158, 161, 136, 108, 109, 92, \
22, 22, 13, 29, 29, 25, 29, 32, 26, 24, \
28, 22, 24, 28, 22, 115, 65, 53, 141, 72, \
50, 143, 72, 53, 145, 67, 45, 164, 103, 88, \
194, 171, 162, 141, 69, 61, 151, 43, 31, 158, \
57, 43, 170, 80, 63, 158, 72, 55, 153, 54, \
42, 147, 49, 31, 142, 67, 36, 128, 52, 27, \
106, 29, 15, 124, 37, 22, 125, 45, 30, 114, \
42, 32, 113, 42, 32, 95, 60, 40, 70, 63, \
40, 44, 39, 21, 94, 99, 74, 153, 156, 127, \
170, 172, 146, 108, 110, 93, 33, 34, 25, 31, \
35, 28, 25, 31, 22, 31, 37, 26, 34, 39, \
29, 122, 64, 51, 140, 68, 43, 145, 70, 48, \
148, 69, 47, 159, 84, 70, 196, 160, 147, 158, \
104, 91, 179, 78, 67, 160, 57, 39, 150, 50, \
29, 150, 54, 35, 155, 41, 33, 154, 39, 25, \
160, 58, 28, 162, 59, 31, 136, 43, 26, 121, \
38, 30, 82, 32, 21, 62, 31, 19, 64, 32, \
24, 66, 38, 24, 73, 40, 24, 80, 40, 26, \
101, 100, 69, 145, 146, 113, 172, 174, 149, 109, \
111, 97, 52, 51, 41, 36, 49, 33, 21, 29, \
19, 44, 47, 32, 52, 55, 42, 126, 70, 61, \
134, 69, 48, 142, 72, 54, 149, 69, 51, 135, \
57, 43, 182, 143, 127, 166, 117, 100, 151, 70, \
56, 153, 66, 47, 157, 45, 28, 170, 55, 38, \
177, 48, 36, 178, 47, 33, 153, 60, 40, 121, \
43, 28, 101, 33, 20, 96, 35, 20, 95, 58, \
37, 87, 41, 22, 109, 36, 24, 92, 28, 19, \
112, 40, 29, 141, 55, 41, 101, 75, 53, 116, \
109, 90, 126, 129, 110, 82, 80, 68, 88, 78, \
66, 61, 67, 47, 24, 29, 17, 51, 50, 32, \
61, 60, 45, 135, 67, 59, 141, 66, 48, 149, \
69, 52, 154, 65, 49, 131, 54, 40, 164, 117, \
102, 145, 87, 69, 154, 89, 69, 183, 118, 98, \
169, 48, 35, 177, 44, 29, 184, 43, 27, 184, \
51, 36, 105, 41, 34, 48, 17, 15, 47, 22, \
13, 57, 31, 14, 111, 55, 41, 158, 55, 48, \
169, 66, 49, 127, 65, 46, 119, 45, 24, 149, \
57, 34, 57, 38, 19, 32, 36, 29, 38, 41, \
29, 60, 55, 42, 96, 77, 62, 86, 81, 61, \
30, 31, 19, 56, 52, 34, 76, 71, 56, 143, \
64, 51, 147, 65, 46, 157, 67, 48, 154, 62, \
45, 140, 69, 54, 160, 106, 92, 156, 85, 67, \
161, 98, 76, 179, 117, 98, 172, 51, 39, 180, \
44, 28, 184, 46, 30, 162, 52, 38, 63, 29, \
22, 32, 31, 29, 33, 31, 21, 33, 26, 16, \
67, 35, 27, 147, 71, 62, 156, 75, 54, 137, \
76, 54, 133, 53, 33, 153, 57, 40, 59, 35, \
23, 25, 26, 26, 29, 32, 23, 65, 59, 44, \
104, 84, 66, 96, 89, 70, 31, 32, 22, 54, \
51, 35, 83, 79, 66, 120, 65, 52, 121, 66, \
49, 134, 69, 50, 142, 61, 42, 149, 85, 66, \
167, 106, 91, 156, 66, 50, 154, 72, 51, 175, \
97, 79, 161, 43, 28, 171, 44, 26, 177, 53, \
38, 112, 42, 29, 62, 55, 37, 55, 64, 47, \
40, 40, 24, 40, 25, 18, 50, 32, 20, 131, \
75, 58, 159, 59, 41, 141, 58, 40, 130, 53, \
39, 144, 58, 53, 62, 37, 30, 34, 26, 25, \
32, 35, 23, 58, 54, 35, 116, 99, 80, 114, \
111, 95, 30, 34, 29, 42, 42, 30, 50, 49, \
41, 78, 63, 49, 79, 64, 47, 84, 60, 44, \
97, 50, 35, 114, 71, 54, 136, 86, 74, 126, \
55, 40, 138, 73, 54, 146, 84, 68, 134, 43, \
28, 151, 44, 28, 153, 43, 34, 80, 36, 27, \
102, 106, 82, 88, 91, 64, 88, 79, 58, 52, \
55, 35, 41, 34, 16, 122, 69, 53, 152, 65, \
48, 134, 83, 58, 78, 46, 30, 70, 34, 33, \
33, 34, 26, 28, 31, 22, 32, 35, 21, 52, \
52, 33, 105, 97, 80, 87, 89, 78, 24, 30, \
29, 26, 28, 23, 27, 29, 26, 69, 69, 50, \
87, 86, 63, 88, 86, 66, 59, 53, 41, 53, \
45, 33, 60, 48, 36, 67, 46, 35, 65, 51, \
39, 61, 49, 37, 79, 41, 31, 109, 43, 32, \
107, 33, 25, 69, 50, 39, 101, 109, 85, 105, \
80, 60, 129, 80, 65, 94, 81, 62, 42, 36, \
22, 110, 83, 75, 152, 111, 102, 126, 112, 91, \
42, 41, 29, 30, 25, 31, 28, 29, 31, 27, \
30, 22, 30, 33, 22, 44, 47, 35, 62, 64, \
52, 41, 44, 36, 25, 29, 31, 23, 27, 29, \
21, 25, 27, 76, 70, 53, 97, 92, 63, 108, \
103, 72, 61, 56, 34, 42, 45, 26, 37, 45, \
27, 50, 41, 33, 51, 37, 32, 44, 39, 30, \
49, 40, 28, 45, 31, 16, 39, 25, 10, 40, \
50, 32, 81, 79, 57, 128, 63, 50, 129, 54, \
38, 108, 84, 63, 45, 52, 33, 70, 65, 53, \
78, 68, 55, 80, 80, 64, 41, 43, 38, 32, \
30, 40, 30, 29, 36, 27, 28, 27, 25, 27, \
25, 30, 32, 30, 37, 39, 36, 30, 32, 31, \
28, 31, 35, 26, 30, 34, 23, 27, 31, 99, \
88, 78, 90, 65, 43, 122, 78, 50, 110, 61, \
39, 85, 67, 46, 46, 58, 35, 53, 58, 46, \
51, 42, 37, 43, 38, 29, 37, 37, 27, 25, \
31, 20, 31, 34, 24, 43, 37, 27, 84, 56, \
42, 158, 76, 64, 157, 96, 68, 114, 89, 64, \
52, 59, 39, 59, 60, 49, 61, 61, 51, 61, \
65, 58, 36, 38, 42, 33, 33, 46, 33, 33, \
44, 32, 33, 41, 29, 31, 40, 28, 30, 39, \
29, 32, 41, 30, 32, 41, 28, 31, 37, 26, \
29, 35, 25, 28, 34, 78, 72, 73, 80, 43, \
36, 131, 56, 41, 142, 56, 44, 149, 100, 85, \
60, 57, 35, 43, 53, 37, 36, 39, 29, 32, \
30, 22, 31, 28, 22, 31, 26, 23, 46, 41, \
38, 42, 46, 32, 79, 55, 40, 156, 70, 62, \
161, 88, 67, 128, 97, 76, 57, 58, 43, 56, \
51, 51, 55, 50, 54, 36, 39, 46, 33, 35, \
49, 34, 36, 53, 34, 35, 52, 33, 36, 51, \
31, 35, 50, 29, 34, 49, 29, 34, 49, 28, \
32, 46, 27, 30, 38, 26, 29, 37, 26, 29, \
37, 39, 46, 56, 54, 39, 40, 89, 40, 30, \
119, 45, 33, 144, 80, 68, 86, 50, 35, 54, \
35, 22, 47, 34, 27, 38, 30, 26, 34, 28, \
22, 32, 27, 21, 47, 46, 36, 43, 56, 37, \
69, 63, 43, 124, 56, 48, 145, 66, 55, 138, \
118, 98, 46, 53, 42, 32, 29, 38, 38, 31, \
49, 35, 37, 57, 34, 36, 58, 34, 36, 56, \
34, 35, 56, 33, 36, 56, 30, 36, 52, 29, \
35, 51, 28, 35, 51, 28, 33, 48, 27, 30, \
40, 25, 29, 38, 24, 27, 36, 36, 47, 61, \
31, 38, 41, 39, 33, 23, 61, 32, 19, 74, \
36, 25, 74, 39, 31, 65, 36, 29, 53, 33, \
29, 39, 28, 27, 31, 27, 22, 26, 29, 20, \
35, 39, 27, 54, 45, 35, 60, 57, 38, 95, \
66, 55, 141, 101, 92, 105, 107, 88, 33, 44, \
36, 32, 34, 45, 37, 34, 56, 31, 34, 56, \
30, 32, 55, 31, 30, 55, 31, 32, 54, 30, \
33, 52, 30, 33, 52, 29, 33, 52, 29, 34, \
49, 26, 32, 46, 27, 30, 39, 28, 27, 42, \
35, 39, 50, 46, 51, 61, 37, 43, 46, 32, \
38, 34, 32, 33, 26, 30, 29, 22, 29, 27, \
21, 29, 27, 21, 29, 27, 23, 28, 26, 24, \
27, 25, 23, 26, 26, 23, 27, 30, 26, 40, \
34, 28, 47, 49, 31, 63, 58, 53, 80, 69, \
65, 52, 62, 48, 41, 48, 46, 52, 54, 64, \
56, 58, 73, 54, 61, 74, 57, 62, 78, 68, \
64, 84, 68, 68, 84, 62, 67, 78, 60, 61, \
77, 52, 56, 71, 43, 51, 55, 35, 45, 54, \
29, 36, 44, 27, 24, 40, 41, 48, 55, 83, \
91, 93, 80, 89, 85, 75, 84, 76, 69, 77, \
69, 60, 68, 61, 48, 56, 49, 38, 47, 39, \
38, 43, 37, 37, 37, 35, 34, 34, 32, 32, \
32, 29, 25, 29, 27, 33, 33, 23, 37, 42, \
20, 44, 43, 32, 47, 41, 31, 53, 61, 45, \
97, 104, 96, 122, 127, 126, 129, 135, 131, 139, \
144, 143, 143, 151, 152, 154, 153, 144, 163, 159, \
151, 149, 152, 155, 128, 129, 141, 103, 105, 117, \
78, 85, 86, 55, 65, 76, 43, 52, 63, 49, \
47, 45, 28, 34, 25, 94, 105, 100, 94, 105, \
97, 92, 104, 93, 89, 101, 92, 86, 99, 91, \
81, 93, 85, 74, 87, 79, 72, 81, 75, 69, \
74, 70, 66, 71, 67, 62, 66, 62, 48, 53, \
50, 91, 81, 52, 90, 79, 36, 82, 67, 33, \
103, 85, 50, 112, 101, 65, 134, 124, 93, 140, \
135, 107, 148, 141, 105, 159, 145, 116, 160, 158, \
134, 165, 152, 104, 178, 153, 106, 164, 150, 121, \
148, 133, 110, 132, 118, 97, 117, 107, 77, 90, \
85, 74, 66, 66, 67, 101, 86, 55, 81, 71, \
38, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '3414';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1ab71141a93589da9885df5de181f5d572';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_frog1';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{131, 95, 67, 139, 101, 71, 147, 106, 74, 151, 110, \
78, 152, 113, 81, 150, 110, 78, 164, 124, 92, \
157, 117, 87, 138, 97, 69, 146, 105, 77, 144, \
103, 76, 138, 97, 68, 139, 99, 67, 137, 100, \
70, 130, 94, 66, 133, 98, 71, 143, 108, 83, \
116, 88, 70, 106, 78, 60, 132, 98, 75, 143, \
108, 84, 120, 86, 62, 102, 68, 44, 127, 93, \
69, 126, 89, 64, 136, 99, 73, 148, 111, 85, \
132, 93, 67, 127, 92, 66, 134, 102, 77, 126, \
95, 71, 117, 87, 63, 115, 82, 56, 132, 96, \
68, 152, 113, 83, 150, 112, 83, 155, 117, 89, \
135, 97, 69, 138, 101, 73, 150, 111, 83, 135, \
94, 65, 136, 95, 65, 152, 111, 82, 143, 102, \
72, 127, 87, 56, 134, 96, 67, 130, 95, 67, \
135, 101, 75, 141, 109, 88, 109, 83, 67, 104, \
75, 57, 128, 92, 67, 147, 107, 80, 131, 91, \
63, 102, 62, 34, 119, 79, 52, 135, 95, 68, \
142, 104, 78, 159, 123, 98, 133, 98, 73, 114, \
87, 67, 128, 104, 85, 130, 99, 75, 144, 107, \
77, 120, 89, 65, 127, 94, 67, 140, 104, 76, \
139, 102, 77, 143, 105, 83, 131, 94, 71, 120, \
83, 61, 129, 90, 63, 142, 101, 68, 148, 108, \
75, 158, 118, 85, 155, 114, 82, 148, 108, 76, \
158, 121, 91, 156, 121, 93, 150, 116, 90, 142, \
109, 86, 115, 85, 65, 126, 91, 68, 159, 114, \
83, 166, 119, 85, 155, 108, 75, 151, 103, 70, \
153, 105, 72, 154, 106, 73, 153, 107, 76, 150, \
109, 81, 126, 88, 62, 96, 70, 52, 93, 71, \
53, 115, 84, 60, 155, 116, 85, 113, 85, 62, \
117, 85, 60, 126, 91, 64, 140, 104, 82, 128, \
92, 73, 119, 83, 64, 120, 84, 66, 126, 88, \
61, 141, 100, 65, 149, 110, 75, 149, 109, 74, \
151, 111, 77, 156, 116, 85, 165, 128, 99, 161, \
126, 99, 146, 111, 84, 143, 103, 77, 140, 103, \
77, 157, 112, 80, 182, 127, 86, 171, 116, 76, \
152, 98, 60, 158, 104, 66, 164, 109, 71, 173, \
114, 72, 169, 113, 73, 151, 102, 67, 126, 82, \
51, 102, 72, 51, 89, 65, 46, 101, 70, 46, \
147, 110, 81, 111, 82, 59, 114, 83, 59, 127, \
93, 68, 132, 97, 76, 127, 92, 75, 126, 91, \
73, 118, 83, 66, 132, 97, 69, 167, 128, 88, \
175, 131, 89, 165, 122, 83, 145, 103, 67, 153, \
110, 74, 160, 119, 83, 143, 105, 72, 145, 106, \
76, 172, 128, 95, 186, 141, 108, 189, 138, 100, \
188, 128, 85, 171, 114, 73, 158, 102, 63, 152, \
95, 57, 158, 101, 62, 176, 114, 69, 195, 133, \
88, 185, 129, 89, 166, 115, 79, 140, 100, 69, \
113, 81, 55, 106, 75, 50, 135, 103, 77, 121, \
89, 66, 122, 90, 67, 131, 99, 76, 128, 96, \
74, 142, 109, 89, 136, 104, 83, 116, 83, 63, \
145, 117, 87, 204, 169, 122, 213, 161, 108, 197, \
150, 104, 173, 131, 93, 183, 137, 91, 192, 148, \
96, 173, 129, 87, 185, 141, 108, 222, 178, 138, \
201, 154, 113, 194, 143, 102, 181, 127, 86, 180, \
126, 87, 183, 129, 91, 177, 122, 85, 182, 128, \
90, 194, 137, 95, 202, 144, 100, 210, 153, 110, \
196, 140, 98, 184, 130, 87, 159, 116, 78, 121, \
90, 61, 117, 91, 65, 131, 99, 76, 131, 100, \
77, 134, 102, 79, 126, 94, 72, 142, 110, 89, \
132, 100, 79, 115, 83, 62, 147, 121, 92, 209, \
177, 135, 211, 165, 116, 202, 160, 119, 198, 164, \
128, 215, 181, 136, 222, 187, 143, 190, 154, 122, \
191, 152, 126, 208, 164, 122, 184, 136, 93, 175, \
125, 83, 167, 114, 73, 173, 121, 78, 182, 130, \
87, 188, 135, 92, 199, 146, 104, 209, 155, 112, \
207, 153, 109, 214, 159, 115, 197, 142, 98, 198, \
143, 97, 182, 136, 96, 141, 108, 79, 121, 93, \
66, 130, 97, 74, 131, 100, 77, 130, 98, 75, \
122, 90, 69, 127, 95, 75, 126, 94, 73, 121, \
89, 68, 148, 121, 97, 212, 185, 153, 222, 188, \
152, 226, 196, 164, 228, 207, 176, 233, 215, 179, \
207, 185, 155, 105, 79, 60, 171, 139, 118, 200, \
156, 111, 184, 137, 90, 171, 121, 75, 173, 120, \
75, 177, 125, 78, 178, 126, 78, 186, 134, 86, \
193, 141, 93, 197, 145, 100, 204, 151, 107, 216, \
163, 119, 207, 155, 111, 210, 158, 110, 195, 150, \
107, 156, 122, 90, 135, 102, 74, 128, 96, 72, \
132, 100, 77, 124, 92, 69, 115, 83, 61, 117, \
85, 64, 113, 82, 61, 118, 86, 65, 170, 143, \
123, 232, 210, 190, 239, 218, 195, 245, 227, 205, \
248, 236, 213, 233, 224, 201, 205, 190, 172, 148, \
128, 110, 194, 167, 138, 218, 176, 127, 193, 147, \
97, 175, 126, 77, 171, 119, 71, 180, 128, 82, \
187, 134, 89, 196, 143, 98, 198, 146, 100, 194, \
144, 99, 196, 147, 102, 214, 164, 119, 228, 179, \
133, 220, 170, 120, 188, 143, 98, 143, 106, 73, \
150, 111, 84, 128, 95, 72, 132, 100, 77, 119, \
87, 64, 105, 72, 51, 107, 75, 54, 97, 65, \
44, 114, 82, 61, 193, 166, 149, 239, 221, 210, \
245, 233, 221, 238, 230, 215, 244, 238, 222, 240, \
234, 222, 220, 206, 196, 199, 180, 156, 209, 182, \
140, 220, 177, 125, 208, 162, 110, 193, 145, 94, \
183, 132, 83, 187, 134, 93, 197, 144, 105, 192, \
139, 100, 200, 147, 108, 205, 156, 112, 195, 148, \
101, 204, 157, 110, 229, 182, 136, 231, 183, 132, \
193, 150, 102, 151, 113, 79, 153, 111, 83, 131, \
95, 71, 144, 108, 83, 130, 93, 67, 122, 84, \
61, 119, 83, 63, 97, 65, 45, 118, 90, 69, \
201, 178, 163, 233, 216, 207, 247, 235, 226, 241, \
233, 222, 240, 234, 221, 245, 239, 225, 244, 232, \
211, 237, 219, 179, 224, 199, 145, 217, 180, 132, \
215, 177, 133, 204, 161, 116, 200, 150, 104, 192, \
142, 102, 204, 154, 116, 206, 156, 118, 197, 147, \
109, 207, 159, 116, 204, 154, 107, 207, 156, 108, \
222, 174, 130, 249, 208, 164, 220, 177, 136, 168, \
122, 89, 131, 92, 65, 134, 97, 70, 146, 107, \
81, 146, 106, 79, 129, 88, 64, 119, 80, 59, \
105, 74, 54, 108, 84, 64, 171, 151, 136, 225, \
207, 196, 250, 235, 222, 244, 232, 218, 241, 232, \
219, 245, 237, 222, 246, 232, 207, 241, 221, 183, \
237, 211, 166, 223, 193, 151, 221, 192, 155, 211, \
174, 135, 210, 163, 119, 197, 151, 109, 201, 156, \
115, 215, 170, 128, 196, 152, 110, 195, 148, 106, \
209, 155, 109, 207, 153, 105, 212, 164, 122, 249, \
215, 180, 248, 211, 177, 191, 139, 107, 141, 106, \
78, 139, 102, 76, 117, 81, 56, 127, 91, 67, \
125, 87, 64, 116, 79, 57, 112, 81, 61, 103, \
77, 58, 108, 86, 68, 141, 122, 103, 205, 189, \
169, 231, 218, 196, 229, 217, 198, 232, 219, 204, \
237, 219, 200, 236, 212, 190, 237, 210, 181, 224, \
195, 156, 201, 173, 138, 203, 169, 131, 217, 171, \
129, 191, 145, 103, 198, 153, 112, 204, 159, 118, \
190, 145, 104, 199, 152, 111, 212, 161, 116, 204, \
153, 108, 190, 148, 111, 232, 197, 165, 255, 217, \
183, 220, 170, 135, 149, 109, 79, 141, 103, 78, \
92, 59, 37, 89, 58, 39, 104, 71, 48, 117, \
84, 60, 108, 77, 57, 107, 78, 60, 91, 66, \
45, 75, 54, 30, 100, 83, 58, 150, 135, 109, \
187, 173, 144, 205, 188, 156, 213, 194, 163, 215, \
193, 163, 217, 192, 160, 209, 182, 145, 184, 159, \
126, 191, 158, 123, 198, 155, 114, 193, 148, 106, \
202, 158, 117, 197, 152, 111, 195, 150, 109, 206, \
160, 119, 218, 169, 126, 202, 156, 116, 168, 134, \
103, 189, 158, 132, 224, 185, 154, 192, 149, 114, \
129, 89, 57, 145, 108, 83, 98, 68, 48, 68, \
43, 28, 87, 59, 38, 112, 80, 56, 112, 81, \
61, 103, 71, 54, 99, 71, 53, 86, 62, 41, \
68, 49, 26, 72, 56, 32, 94, 76, 49, 121, \
99, 65, 153, 131, 95, 194, 172, 135, 216, 193, \
154, 201, 178, 140, 192, 169, 137, 183, 153, 119, \
177, 136, 96, 205, 160, 119, 194, 149, 108, 190, \
145, 104, 195, 150, 109, 201, 156, 115, 205, 158, \
117, 176, 135, 98, 139, 112, 87, 81, 58, 44, \
102, 75, 56, 103, 73, 45, 110, 77, 51, 128, \
92, 67, 103, 73, 55, 87, 64, 50, 89, 63, \
42, 105, 74, 50, 117, 84, 65, 105, 71, 54, \
105, 74, 57, 96, 70, 53, 74, 51, 34, 73, \
54, 35, 87, 66, 49, 93, 66, 51, 96, 71, \
51, 119, 97, 69, 140, 118, 86, 159, 137, 102, \
188, 166, 135, 172, 143, 110, 188, 149, 109, 207, \
163, 121, 186, 141, 100, 190, 146, 105, 195, 151, \
110, 187, 142, 101, 186, 142, 101, 182, 146, 112, \
81, 60, 39, 25, 8, 1, 35, 17, 5, 59, \
39, 17, 99, 73, 51, 118, 83, 56, 105, 72, \
52, 110, 79, 59, 131, 99, 77, 138, 101, 81, \
121, 81, 63, 104, 72, 49, 108, 79, 53, 99, \
70, 50, 73, 46, 32, 67, 44, 27, 86, 66, \
50, 100, 81, 71, 99, 79, 66, 97, 76, 59, \
109, 88, 65, 150, 131, 100, 157, 135, 108, 152, \
124, 92, 224, 192, 145, 206, 168, 119, 181, 143, \
97, 189, 152, 110, 190, 153, 114, 203, 163, 119, \
223, 189, 150, 142, 119, 95, 38, 22, 7, 57, \
36, 22, 77, 51, 35, 91, 66, 46, 103, 76, \
57, 144, 106, 79, 130, 92, 68, 144, 107, 76, \
147, 109, 77, 175, 130, 102, 157, 111, 83, 129, \
93, 60, 128, 99, 68, 105, 76, 57, 66, 39, \
28, 56, 33, 20, 62, 43, 26, 70, 53, 38, \
75, 54, 38, 83, 60, 41, 88, 65, 42, 95, \
77, 48, 88, 66, 40, 148, 124, 91, 240, 213, \
166, 213, 176, 128, 191, 153, 107, 209, 172, 130, \
230, 194, 156, 223, 189, 152, 152, 128, 102, 46, \
31, 20, 38, 23, 12, 86, 62, 45, 107, 77, \
59, 107, 77, 59, 98, 69, 51, 144, 102, 77, \
155, 114, 87, 191, 153, 113, 159, 118, 74, 182, \
134, 90, 214, 165, 120, 191, 150, 107, 148, 118, \
88, 87, 62, 48, 48, 25, 19, 38, 19, 13, \
52, 34, 20, 61, 41, 24, 67, 42, 23, 92, \
65, 43, 83, 56, 33, 57, 37, 9, 97, 77, \
48, 194, 173, 139, 236, 213, 172, 226, 190, 145, \
223, 182, 139, 227, 185, 143, 230, 189, 150, 120, \
90, 67, 20, 3, 0, 26, 12, 6, 66, 47, \
37, 97, 70, 55, 104, 75, 57, 116, 87, 69, \
99, 70, 52, 124, 86, 62, 144, 106, 80, 183, \
147, 110, 186, 146, 101, 210, 163, 113, 225, 178, \
126, 206, 165, 124, 125, 97, 74, 46, 26, 19, \
22, 5, 5, 16, 3, 2, 38, 24, 16, 58, \
40, 25, 65, 44, 27, 96, 71, 52, 124, 98, \
77, 141, 120, 94, 199, 181, 149, 248, 233, 199, \
241, 223, 189, 240, 211, 170, 243, 207, 164, 235, \
195, 152, 211, 167, 125, 121, 88, 61, 45, 25, \
12, 54, 37, 27, 89, 67, 57, 104, 77, 61, \
102, 72, 54, 108, 79, 61, 109, 80, 62, 111, \
80, 58, 93, 62, 44, 99, 69, 44, 138, 103, \
69, 193, 151, 103, 216, 172, 124, 166, 130, 99, \
63, 39, 28, 16, 1, 1, 11, 0, 4, 9, \
0, 3, 14, 6, 3, 34, 23, 15, 52, 38, \
27, 65, 48, 34, 110, 90, 74, 178, 156, 131, \
234, 217, 182, 251, 239, 205, 251, 239, 211, 249, \
231, 191, 249, 224, 178, 245, 213, 166, 243, 204, \
157, 215, 175, 131, 131, 99, 66, 83, 61, 40, \
89, 67, 50, 105, 77, 60, 109, 80, 62, 109, \
80, 62, 110, 81, 63, 100, 75, 53, 62, 35, \
20, 75, 49, 32, 143, 113, 89, 135, 102, 67, \
160, 126, 90, 77, 48, 31, 24, 5, 1, 18, \
4, 4, 12, 1, 4, 10, 0, 3, 9, 0, \
0, 10, 0, 0, 16, 6, 3, 22, 11, 6, \
32, 17, 11, 88, 66, 50, 172, 153, 124, 218, \
204, 173, 232, 220, 193, 233, 217, 179, 238, 217, \
175, 236, 208, 162, 232, 195, 145, 221, 175, 121, \
171, 131, 89, 108, 81, 54, 96, 71, 50, 101, \
73, 52, 107, 77, 58, 116, 86, 67, 114, 84, \
65, 106, 79, 56, 92, 66, 44, 105, 79, 57, \
95, 70, 49, 99, 75, 54, 102, 77, 58, 52, \
28, 13, 59, 40, 27, 46, 30, 21, 35, 19, \
11, 26, 11, 4, 30, 13, 6, 46, 26, 18, \
34, 17, 11, 22, 9, 5, 24, 9, 5, 32, \
10, 6, 56, 34, 24, 105, 86, 66, 128, 109, \
84, 133, 108, 81, 161, 136, 107, 178, 149, 114, \
199, 159, 112, 208, 160, 107, 168, 127, 89, 123, \
90, 71, 119, 86, 67, 111, 78, 57, 113, 82, \
61, 121, 89, 68, 121, 90, 69, 148, 115, 90, \
137, 105, 80, 123, 91, 66, 114, 84, 60, 112, \
83, 61, 103, 74, 52, 107, 77, 54, 96, 70, \
50, 85, 61, 45, 81, 57, 40, 70, 46, 30, \
82, 56, 39, 107, 80, 61, 90, 66, 49, 83, \
61, 48, 82, 62, 49, 84, 61, 47, 44, 21, \
11, 31, 8, 0, 35, 12, 0, 36, 10, 0, \
43, 19, 5, 56, 28, 10, 151, 112, 77, 217, \
172, 121, 165, 126, 90, 124, 92, 75, 127, 94, \
76, 110, 77, 56, 119, 88, 68, 115, 84, 64, \
114, 83, 63, 129, 91, 66, 133, 96, 72, 129, \
92, 68, 133, 97, 72, 120, 85, 59, 127, 92, \
66, 134, 98, 73, 119, 85, 62, 111, 78, 57, \
112, 79, 58, 114, 81, 59, 117, 84, 61, 127, \
94, 68, 120, 90, 66, 117, 90, 68, 115, 90, \
70, 108, 84, 61, 104, 79, 58, 93, 68, 51, \
77, 51, 38, 69, 43, 32, 55, 31, 21, 77, \
50, 32, 179, 141, 109, 219, 175, 127, 156, 119, \
84, 95, 65, 50, 100, 70, 53, 95, 65, 45, \
92, 64, 45, 98, 69, 51, 109, 80, 61, 119, \
83, 62, 122, 86, 65, 118, 83, 62, 114, 78, \
56, 113, 77, 54, 109, 73, 50, 114, 77, 55, \
106, 69, 46, 112, 76, 52, 115, 78, 54, 122, \
86, 62, 128, 92, 67, 129, 96, 68, 123, 93, \
66, 112, 85, 60, 108, 82, 59, 104, 78, 56, \
106, 79, 58, 122, 96, 75, 119, 92, 72, 107, \
78, 60, 89, 62, 44, 120, 89, 63, 201, 160, \
122, 208, 165, 118, 136, 102, 69, 92, 65, 51, \
98, 70, 56, 96, 68, 50, 93, 67, 49, 99, \
73, 55, 105, 79, 61, 116, 86, 71, 113, 83, \
69, 107, 77, 63, 105, 73, 57, 111, 77, 59, \
110, 76, 58, 114, 81, 63, 110, 76, 56, 116, \
81, 59, 132, 97, 75, 118, 83, 61, 126, 93, \
69, 123, 94, 66, 119, 92, 67, 111, 88, 64, \
108, 85, 65, 117, 88, 74, 109, 81, 62, 114, \
87, 61, 122, 95, 64, 133, 100, 70, 143, 110, \
80, 155, 118, 81, 198, 151, 102, 184, 140, 90, \
110, 77, 46, 92, 66, 54, 99, 73, 60, 95, \
68, 52, 104, 78, 63, 108, 83, 67, 94, 69, \
54, 107, 83, 71, 106, 81, 70, 99, 74, 63, \
99, 70, 55, 113, 80, 63, 115, 81, 64, 119, \
83, 67, 118, 83, 63, 118, 83, 59, 143, 106, \
81, 145, 107, 81, 142, 103, 76, 119, 84, 57, \
113, 84, 59, 112, 87, 65, 114, 87, 69, 111, \
83, 69, 114, 86, 69, 120, 93, 70, 116, 89, \
61, 152, 117, 84, 190, 151, 114, 192, 148, 104, \
204, 152, 100, 167, 121, 75, 97, 65, 40, 86, \
63, 55, 91, 68, 55, 98, 73, 55, 96, 71, \
55, 101, 76, 59, 93, 68, 51, 95, 73, 62, \
93, 71, 60, 96, 74, 63, 99, 74, 58, 109, \
80, 62, 109, 76, 59, 113, 77, 62, 110, 75, \
56, 109, 74, 51, 120, 83, 57, 142, 102, 74, \
161, 118, 90, 155, 113, 86, 135, 104, 77, 112, \
83, 61, 119, 86, 69, 108, 80, 62, 104, 77, \
59, 118, 91, 73, 125, 97, 77, 130, 98, 69, \
125, 87, 53, 171, 125, 85, 188, 137, 93, 186, \
141, 103, 123, 91, 72, 88, 67, 61, 86, 66, \
52, 97, 71, 51, 98, 70, 52, 98, 71, 53, \
104, 76, 58, 93, 70, 59, 92, 70, 59, 91, \
69, 58, 93, 73, 60, 101, 80, 66, 98, 73, \
60, 100, 71, 60, 104, 75, 62, 102, 75, 57, \
109, 79, 59, 116, 83, 60, 131, 94, 71, 139, \
101, 78, 119, 90, 66, 125, 96, 74, 127, 93, \
74, 105, 75, 56, 100, 71, 52, 109, 79, 60, \
128, 98, 79, 113, 85, 60, 105, 73, 45, 124, \
87, 54, 130, 88, 52, 165, 125, 91, 124, 91, \
71, 100, 74, 63, 93, 69, 52, 94, 66, 46, \
104, 75, 56, 110, 81, 62, 116, 87, 68, 91, \
69, 58, 94, 72, 61, 94, 73, 62, 94, 77, \
65, 99, 83, 70, 91, 71, 60, 92, 69, 58, \
106, 83, 71, 102, 80, 66, 105, 81, 64, 115, \
87, 68, 115, 83, 64, 115, 83, 63, 91, 65, \
43, 126, 97, 76, 140, 104, 85, 132, 100, 79, \
115, 83, 63, 129, 97, 76, 133, 102, 81, 121, \
93, 71, 119, 89, 66, 102, 70, 45, 101, 67, \
40, 111, 76, 48, 104, 69, 49, 107, 75, 59, \
104, 76, 56, 102, 73, 51, 103, 71, 51, 108, \
76, 56, 114, 82, 61, 98, 76, 65, 98, 76, \
65, 104, 82, 71, 99, 81, 66, 106, 88, 71, \
103, 81, 65, 105, 80, 65, 114, 90, 75, 110, \
86, 70, 102, 75, 57, 111, 81, 61, 120, 89, \
70, 108, 80, 64, 85, 62, 42, 116, 88, 66, \
125, 89, 68, 134, 99, 76, 133, 98, 76, 149, \
115, 92, 139, 104, 81, 129, 96, 72, 135, 102, \
78, 121, 88, 64, 111, 78, 55, 111, 81, 56, \
123, 87, 65, 128, 88, 68, 128, 94, 72, 120, \
88, 64, 118, 83, 60, 115, 80, 58, 109, 74, \
52, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '3724';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a197696cdcc5fd7677656bf67a508954e';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_automobile10';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{255, 255, 255, 252, 252, 252, 252, 252, 252, 251, 251, \
252, 247, 252, 252, 247, 251, 251, 251, 248, 251, \
249, 248, 252, 247, 250, 252, 246, 248, 252, 239, \
251, 248, 240, 251, 244, 231, 240, 247, 210, 218, \
232, 209, 216, 228, 214, 221, 231, 208, 218, 229, \
197, 210, 223, 187, 204, 220, 179, 199, 215, 172, \
193, 208, 166, 187, 202, 162, 183, 201, 162, 184, \
206, 164, 189, 209, 168, 196, 214, 173, 202, 218, \
172, 201, 215, 168, 196, 214, 160, 188, 210, 153, \
177, 198, 155, 172, 188, 255, 255, 255, 255, 255, \
255, 254, 255, 255, 250, 255, 255, 247, 255, 255, \
249, 255, 254, 253, 253, 254, 252, 249, 254, 251, \
251, 253, 247, 252, 253, 245, 251, 251, 248, 248, \
244, 246, 243, 247, 235, 233, 241, 222, 224, 231, \
204, 210, 222, 178, 190, 207, 169, 188, 211, 166, \
191, 216, 161, 189, 211, 159, 186, 208, 154, 182, \
204, 153, 180, 202, 158, 183, 206, 159, 186, 208, \
160, 190, 212, 166, 198, 218, 166, 197, 216, 163, \
193, 214, 158, 188, 212, 153, 179, 201, 156, 175, \
190, 255, 255, 255, 253, 253, 250, 252, 252, 249, \
250, 253, 250, 250, 253, 251, 251, 251, 250, 251, \
249, 249, 244, 250, 247, 241, 244, 239, 227, 234, \
231, 225, 219, 226, 221, 204, 206, 210, 186, 191, \
196, 174, 179, 188, 172, 175, 179, 172, 178, 170, \
172, 184, 164, 175, 196, 163, 183, 208, 157, 185, \
210, 153, 182, 206, 150, 178, 203, 147, 174, 198, \
151, 177, 198, 154, 182, 204, 153, 184, 208, 157, \
189, 212, 159, 189, 210, 158, 188, 210, 156, 185, \
208, 153, 178, 198, 156, 175, 191, 255, 255, 255, \
255, 252, 248, 254, 250, 244, 254, 247, 246, 254, \
244, 246, 250, 238, 240, 240, 225, 226, 237, 200, \
204, 238, 183, 188, 202, 176, 181, 181, 162, 177, \
145, 119, 128, 120, 82, 88, 106, 65, 70, 103, \
70, 73, 108, 85, 83, 137, 122, 125, 165, 159, \
171, 158, 162, 179, 156, 176, 195, 157, 177, 197, \
155, 174, 194, 150, 171, 190, 150, 174, 191, 153, \
179, 199, 152, 181, 204, 155, 184, 209, 160, 185, \
208, 161, 186, 208, 160, 185, 206, 159, 181, 199, \
169, 185, 201, 255, 254, 253, 251, 241, 238, 242, \
226, 222, 228, 208, 210, 221, 195, 201, 211, 185, \
190, 180, 157, 158, 191, 118, 126, 207, 100, 115, \
183, 142, 149, 179, 180, 192, 122, 114, 123, 72, \
40, 44, 60, 19, 20, 53, 17, 18, 56, 27, \
24, 72, 47, 47, 114, 96, 101, 148, 137, 146, \
154, 158, 168, 185, 190, 200, 195, 200, 209, 189, \
199, 208, 180, 199, 211, 169, 191, 207, 154, 178, \
200, 146, 168, 193, 146, 164, 187, 150, 168, 188, \
152, 171, 187, 167, 182, 198, 186, 197, 215, 255, \
254, 254, 223, 203, 201, 214, 183, 181, 229, 201, \
205, 215, 182, 189, 197, 171, 175, 164, 156, 152, \
144, 110, 103, 167, 75, 81, 158, 133, 132, 160, \
191, 196, 163, 178, 185, 87, 72, 73, 60, 30, \
27, 47, 19, 18, 45, 20, 23, 50, 25, 29, \
54, 32, 37, 97, 79, 84, 152, 142, 144, 184, \
175, 175, 208, 196, 197, 212, 208, 210, 205, 219, \
226, 183, 200, 212, 155, 174, 194, 141, 160, 182, \
144, 158, 178, 151, 165, 181, 155, 171, 182, 165, \
177, 191, 175, 182, 201, 240, 246, 249, 215, 191, \
190, 235, 208, 206, 237, 203, 207, 195, 163, 169, \
205, 199, 203, 175, 190, 188, 124, 131, 123, 150, \
68, 76, 135, 93, 91, 128, 152, 159, 165, 179, \
193, 124, 116, 124, 61, 36, 35, 48, 22, 14, \
42, 18, 20, 48, 18, 24, 46, 21, 26, 49, \
29, 33, 106, 90, 91, 157, 143, 138, 142, 104, \
101, 174, 152, 148, 178, 187, 194, 168, 181, 194, \
163, 185, 202, 164, 191, 208, 175, 195, 210, 180, \
199, 211, 177, 200, 208, 174, 197, 207, 175, 192, \
209, 235, 226, 238, 223, 172, 176, 223, 174, 177, \
177, 152, 151, 156, 144, 146, 187, 191, 200, 176, \
193, 205, 120, 152, 160, 127, 76, 92, 119, 53, \
58, 96, 100, 106, 130, 152, 157, 145, 149, 157, \
70, 47, 53, 55, 20, 18, 47, 20, 21, 45, \
16, 19, 47, 20, 24, 43, 16, 22, 44, 23, \
29, 102, 84, 83, 148, 96, 98, 204, 170, 169, \
212, 210, 218, 193, 195, 209, 177, 196, 211, 167, \
199, 215, 164, 193, 213, 162, 189, 206, 160, 190, \
205, 160, 191, 205, 166, 192, 206, 214, 210, 217, \
227, 162, 162, 196, 117, 117, 162, 128, 124, 149, \
135, 134, 162, 160, 169, 166, 179, 195, 122, 160, \
180, 110, 107, 120, 118, 45, 54, 81, 57, 62, \
94, 102, 98, 147, 143, 148, 118, 91, 104, 60, \
19, 29, 55, 21, 24, 42, 19, 18, 50, 18, \
21, 74, 25, 34, 89, 49, 56, 121, 89, 93, \
194, 144, 154, 246, 205, 211, 242, 214, 217, 223, \
201, 212, 189, 186, 200, 161, 179, 198, 151, 181, \
207, 152, 183, 210, 160, 191, 216, 173, 201, 221, \
187, 213, 226, 191, 193, 194, 215, 136, 133, 226, \
116, 113, 216, 133, 131, 199, 140, 138, 169, 142, \
141, 150, 144, 146, 149, 142, 154, 124, 120, 121, \
130, 49, 54, 88, 42, 46, 77, 59, 60, 112, \
94, 98, 119, 100, 100, 67, 34, 31, 76, 22, \
26, 73, 34, 31, 112, 58, 58, 176, 92, 100, \
210, 129, 131, 216, 149, 150, 210, 143, 150, 227, \
154, 160, 243, 176, 175, 242, 184, 190, 230, 190, \
201, 203, 189, 203, 179, 193, 211, 183, 212, 232, \
190, 222, 243, 201, 228, 244, 210, 236, 248, 232, \
217, 224, 210, 103, 104, 226, 81, 79, 236, 118, \
111, 237, 134, 126, 215, 129, 122, 183, 105, 97, \
176, 86, 79, 151, 96, 83, 149, 52, 47, 107, \
40, 40, 82, 44, 48, 94, 51, 53, 117, 67, \
58, 139, 69, 56, 165, 72, 75, 186, 105, 102, \
223, 129, 127, 232, 108, 110, 212, 77, 71, 189, \
64, 58, 187, 74, 70, 214, 102, 101, 237, 131, \
126, 241, 138, 139, 237, 149, 154, 229, 165, 167, \
195, 168, 168, 207, 218, 223, 216, 245, 252, 214, \
241, 248, 214, 241, 250, 213, 204, 213, 232, 128, \
126, 244, 102, 94, 235, 108, 94, 232, 103, 90, \
229, 88, 80, 215, 63, 55, 192, 39, 22, 170, \
55, 39, 176, 49, 36, 171, 58, 51, 168, 71, \
70, 185, 77, 81, 203, 74, 76, 221, 71, 72, \
224, 78, 81, 231, 89, 86, 232, 81, 76, 222, \
56, 52, 203, 22, 14, 212, 39, 30, 212, 62, \
52, 224, 70, 65, 223, 77, 71, 220, 70, 67, \
212, 73, 70, 218, 93, 85, 203, 115, 104, 211, \
190, 187, 223, 244, 244, 214, 242, 244, 214, 242, \
249, 184, 178, 191, 215, 116, 112, 244, 106, 94, \
250, 119, 111, 245, 104, 96, 240, 89, 81, 228, \
68, 56, 206, 45, 30, 190, 42, 35, 205, 47, \
31, 230, 61, 46, 236, 75, 59, 238, 95, 85, \
230, 94, 94, 215, 62, 66, 211, 27, 29, 216, \
19, 17, 218, 13, 9, 214, 12, 5, 216, 10, \
6, 220, 19, 15, 207, 27, 16, 213, 19, 13, \
209, 24, 18, 208, 22, 16, 197, 18, 9, 200, \
25, 13, 201, 57, 48, 209, 155, 154, 211, 222, \
225, 201, 228, 232, 203, 231, 238, 182, 178, 191, \
166, 79, 77, 198, 48, 36, 227, 67, 60, 241, \
86, 79, 251, 100, 94, 249, 102, 93, 242, 102, \
93, 234, 92, 92, 222, 74, 59, 241, 68, 55, \
236, 48, 21, 230, 60, 30, 229, 100, 80, 227, \
113, 113, 225, 75, 78, 219, 34, 28, 234, 6, \
4, 220, 7, 3, 221, 5, 9, 223, 6, 10, \
213, 17, 10, 216, 18, 8, 212, 16, 4, 206, \
12, 1, 203, 13, 2, 205, 11, 2, 191, 20, \
12, 202, 108, 108, 207, 198, 201, 187, 212, 216, \
187, 219, 227, 188, 195, 204, 131, 73, 72, 158, \
20, 8, 197, 22, 9, 206, 33, 22, 222, 55, \
50, 244, 84, 82, 252, 113, 108, 254, 118, 119, \
245, 113, 98, 249, 94, 86, 237, 54, 29, 226, \
30, 0, 220, 45, 23, 205, 116, 103, 192, 121, \
116, 193, 69, 59, 227, 27, 22, 231, 7, 6, \
226, 2, 4, 224, 4, 5, 218, 9, 4, 214, \
13, 4, 213, 16, 5, 202, 15, 5, 187, 14, \
7, 174, 15, 8, 152, 17, 5, 192, 69, 63, \
209, 147, 146, 192, 185, 190, 192, 222, 229, 207, \
218, 227, 136, 101, 102, 147, 43, 33, 189, 21, \
4, 194, 12, 0, 194, 12, 6, 207, 24, 21, \
217, 52, 46, 232, 71, 71, 249, 95, 81, 254, \
89, 84, 246, 55, 44, 230, 31, 8, 227, 18, \
6, 185, 74, 57, 188, 154, 144, 185, 123, 119, \
160, 52, 42, 208, 28, 17, 233, 20, 9, 214, \
11, 1, 216, 9, 3, 215, 11, 8, 195, 15, \
12, 183, 13, 23, 152, 25, 28, 102, 18, 10, \
100, 13, 3, 182, 42, 30, 209, 88, 82, 212, \
162, 166, 213, 233, 241, 217, 231, 239, 157, 145, \
150, 155, 89, 85, 180, 24, 7, 201, 14, 1, \
203, 8, 1, 204, 5, 0, 200, 10, 5, 202, \
13, 10, 219, 35, 23, 237, 67, 64, 214, 45, \
44, 228, 43, 35, 239, 50, 36, 211, 30, 20, \
198, 118, 111, 184, 171, 167, 175, 150, 147, 170, \
89, 77, 218, 73, 60, 217, 69, 57, 200, 17, \
14, 212, 7, 8, 168, 13, 11, 98, 10, 14, \
110, 43, 42, 116, 32, 27, 133, 13, 7, 196, \
23, 11, 215, 80, 69, 213, 165, 169, 189, 207, \
222, 208, 223, 232, 174, 177, 183, 163, 129, 127, \
184, 40, 21, 215, 25, 7, 221, 21, 7, 220, \
17, 3, 215, 11, 3, 209, 7, 1, 209, 7, \
1, 172, 25, 19, 92, 18, 8, 150, 25, 22, \
224, 65, 54, 231, 49, 27, 204, 65, 46, 220, \
192, 183, 231, 225, 232, 204, 174, 182, 177, 103, \
108, 213, 125, 123, 223, 83, 83, 207, 13, 11, \
164, 10, 3, 97, 8, 5, 120, 25, 22, 167, \
26, 22, 187, 11, 6, 206, 14, 5, 199, 71, \
66, 169, 130, 142, 165, 186, 209, 208, 221, 229, \
188, 196, 202, 166, 148, 147, 183, 48, 31, 219, \
32, 13, 228, 29, 11, 225, 28, 4, 228, 23, \
6, 221, 20, 6, 218, 17, 6, 140, 12, 7, \
56, 20, 10, 72, 27, 19, 177, 25, 25, 235, \
41, 22, 235, 36, 15, 228, 115, 108, 239, 223, \
222, 220, 193, 205, 196, 133, 141, 200, 104, 106, \
235, 111, 108, 215, 44, 34, 195, 15, 3, 186, \
10, 12, 188, 12, 14, 192, 14, 5, 195, 14, \
0, 190, 22, 10, 158, 38, 39, 128, 75, 92, \
170, 184, 206, 218, 228, 235, 204, 210, 215, 171, \
157, 157, 176, 48, 34, 208, 27, 10, 220, 29, \
9, 217, 30, 2, 221, 24, 3, 216, 25, 4, \
220, 26, 10, 130, 16, 13, 69, 35, 35, 82, \
74, 69, 151, 40, 39, 222, 20, 8, 238, 27, \
8, 220, 45, 32, 235, 163, 149, 231, 160, 157, \
207, 91, 79, 204, 50, 42, 218, 59, 49, 225, \
59, 48, 214, 16, 9, 204, 14, 4, 203, 11, \
3, 203, 11, 1, 183, 18, 3, 142, 22, 9, \
112, 16, 11, 138, 73, 77, 196, 196, 205, 217, \
227, 238, 205, 209, 216, 165, 153, 155, 152, 51, \
42, 179, 25, 13, 207, 27, 11, 215, 28, 4, \
213, 26, 2, 200, 31, 2, 210, 26, 10, 125, \
15, 18, 92, 74, 74, 120, 115, 118, 133, 85, \
74, 196, 30, 17, 222, 26, 6, 221, 29, 10, \
232, 86, 72, 235, 107, 95, 205, 37, 13, 213, \
19, 3, 212, 16, 6, 213, 28, 22, 206, 16, \
12, 192, 16, 5, 183, 18, 4, 168, 17, 7, \
129, 14, 11, 78, 14, 5, 93, 19, 10, 172, \
100, 96, 217, 209, 209, 211, 224, 238, 204, 211, \
219, 137, 131, 135, 92, 31, 32, 115, 25, 19, \
162, 32, 22, 204, 29, 19, 215, 27, 11, 198, \
31, 0, 208, 25, 8, 126, 23, 24, 118, 108, \
107, 105, 100, 106, 108, 97, 86, 165, 35, 22, \
223, 40, 11, 218, 25, 5, 217, 33, 25, 224, \
55, 48, 213, 25, 11, 211, 12, 3, 205, 9, \
4, 200, 9, 6, 195, 13, 8, 165, 16, 13, \
133, 13, 10, 95, 13, 9, 64, 11, 11, 56, \
10, 4, 107, 21, 19, 200, 119, 123, 225, 220, \
221, 212, 228, 241, 211, 222, 229, 169, 169, 175, \
116, 90, 101, 106, 87, 87, 116, 71, 67, 146, \
40, 42, 202, 38, 33, 221, 31, 17, 221, 20, \
5, 128, 38, 24, 140, 138, 132, 138, 131, 141, \
110, 109, 105, 141, 45, 34, 220, 56, 17, 217, \
30, 7, 213, 18, 9, 222, 43, 41, 205, 24, \
19, 186, 12, 13, 172, 11, 9, 181, 14, 7, \
164, 15, 9, 86, 14, 7, 66, 11, 15, 57, \
10, 11, 66, 11, 2, 103, 4, 6, 135, 31, \
36, 192, 138, 141, 214, 213, 218, 217, 235, 244, \
217, 230, 235, 213, 223, 228, 197, 209, 220, 185, \
196, 207, 164, 169, 177, 129, 120, 123, 141, 66, \
65, 207, 57, 55, 237, 37, 30, 148, 39, 28, \
132, 131, 123, 155, 147, 158, 151, 156, 160, 164, \
99, 93, 204, 25, 3, 222, 33, 12, 205, 43, \
28, 178, 43, 37, 165, 22, 17, 109, 10, 8, \
105, 6, 2, 160, 24, 19, 122, 17, 19, 40, \
17, 3, 41, 19, 6, 73, 16, 5, 117, 12, \
5, 142, 19, 26, 161, 92, 97, 185, 178, 179, \
202, 207, 217, 223, 239, 246, 224, 237, 241, 224, \
237, 241, 224, 244, 251, 228, 238, 251, 214, 230, \
242, 182, 220, 223, 156, 167, 170, 151, 97, 102, \
201, 61, 63, 157, 41, 44, 120, 114, 108, 138, \
131, 142, 145, 153, 163, 114, 70, 72, 204, 9, \
4, 214, 20, 8, 160, 30, 19, 107, 7, 3, \
143, 15, 10, 62, 9, 1, 95, 12, 5, 173, \
30, 26, 93, 10, 8, 76, 11, 3, 108, 14, \
5, 143, 18, 10, 150, 25, 29, 130, 75, 76, \
171, 162, 170, 197, 200, 215, 206, 216, 229, 231, \
241, 247, 230, 240, 245, 233, 239, 245, 239, 236, \
246, 227, 240, 246, 217, 239, 243, 215, 232, 240, \
210, 227, 242, 185, 195, 206, 156, 112, 114, 103, \
40, 49, 136, 125, 124, 161, 157, 164, 149, 156, \
166, 88, 60, 62, 195, 26, 21, 206, 18, 8, \
154, 11, 6, 134, 10, 12, 177, 16, 16, 106, \
9, 4, 148, 19, 18, 192, 17, 20, 131, 10, \
3, 150, 18, 21, 164, 17, 35, 146, 37, 49, \
135, 81, 89, 165, 149, 159, 195, 196, 216, 203, \
211, 233, 208, 224, 237, 240, 244, 249, 236, 241, \
247, 237, 241, 248, 242, 239, 248, 234, 244, 249, \
229, 242, 246, 230, 234, 241, 226, 231, 244, 213, \
231, 246, 198, 205, 207, 117, 106, 114, 132, 117, \
121, 158, 158, 162, 113, 117, 123, 126, 101, 101, \
196, 39, 30, 218, 22, 9, 197, 17, 9, 188, \
35, 35, 211, 34, 28, 187, 20, 13, 182, 22, \
18, 173, 20, 18, 154, 29, 28, 142, 44, 55, \
136, 72, 89, 131, 120, 128, 159, 166, 175, 199, \
194, 212, 204, 210, 229, 197, 221, 233, 206, 228, \
236, 246, 247, 251, 242, 244, 249, 240, 244, 250, \
237, 247, 251, 245, 245, 252, 245, 242, 250, 235, \
244, 245, 234, 240, 244, 228, 236, 247, 226, 236, \
240, 194, 198, 205, 127, 111, 116, 158, 156, 157, \
142, 138, 141, 159, 127, 127, 172, 33, 28, 200, \
30, 22, 197, 35, 27, 189, 66, 62, 182, 62, \
54, 176, 34, 30, 155, 45, 39, 129, 68, 62, \
125, 94, 101, 137, 130, 139, 158, 165, 173, 175, \
192, 200, 192, 205, 222, 192, 217, 228, 196, 222, \
231, 198, 224, 231, 204, 229, 236, 251, 251, 252, \
247, 247, 248, 246, 248, 249, 246, 250, 250, 250, \
249, 251, 250, 248, 250, 243, 247, 247, 241, 246, \
248, 241, 245, 250, 238, 242, 246, 237, 240, 244, \
169, 161, 166, 123, 114, 116, 162, 148, 148, 110, \
82, 81, 89, 24, 25, 120, 49, 48, 135, 65, \
64, 146, 93, 96, 136, 103, 110, 135, 101, 110, \
142, 126, 133, 152, 157, 164, 167, 183, 193, 181, \
202, 214, 191, 212, 225, 197, 216, 230, 199, 217, \
232, 196, 222, 234, 199, 224, 235, 200, 223, 235, \
201, 227, 238, 253, 253, 253, 250, 250, 250, 250, \
250, 250, 250, 250, 250, 250, 251, 250, 250, 250, \
250, 248, 248, 248, 246, 248, 250, 246, 248, 251, \
245, 248, 250, 245, 247, 249, 224, 222, 225, 145, \
138, 139, 111, 97, 96, 84, 70, 69, 94, 92, \
92, 130, 130, 130, 150, 150, 150, 166, 165, 167, \
175, 172, 183, 180, 185, 196, 184, 200, 210, 193, \
212, 222, 204, 221, 231, 204, 223, 235, 200, 222, \
236, 197, 220, 235, 197, 219, 233, 197, 219, 233, \
198, 220, 234, 196, 220, 233, 196, 223, 234, 255, \
255, 255, 253, 253, 253, 253, 253, 253, 253, 253, \
253, 252, 252, 252, 251, 251, 251, 251, 251, 251, \
250, 251, 252, 250, 251, 252, 250, 250, 252, 249, \
250, 251, 245, 248, 248, 229, 229, 228, 204, 198, \
196, 194, 190, 190, 199, 209, 213, 210, 221, 225, \
215, 225, 230, 223, 232, 237, 227, 230, 238, 219, \
229, 237, 209, 228, 236, 207, 228, 236, 214, 230, \
239, 214, 232, 243, 208, 228, 242, 203, 225, 239, \
201, 224, 238, 198, 221, 235, 198, 221, 235, 196, \
221, 234, 197, 224, 235, 253, 253, 253, 250, 250, \
250, 249, 249, 249, 249, 249, 249, 247, 247, 247, \
247, 247, 247, 247, 247, 247, 247, 247, 247, 247, \
247, 247, 247, 247, 247, 246, 247, 247, 244, 249, \
247, 244, 248, 246, 249, 250, 250, 250, 248, 250, \
248, 245, 249, 245, 240, 245, 245, 239, 244, 243, \
240, 245, 234, 241, 245, 223, 235, 241, 211, 230, \
236, 210, 229, 236, 219, 233, 241, 218, 235, 244, \
211, 230, 242, 205, 227, 240, 201, 226, 239, 198, \
222, 236, 196, 221, 234, 195, 221, 233, 198, 224, \
235, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '4034';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a8a949185eebaac4c686e75db442866e0';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_bird10';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{48, 65, 66, 59, 80, 79, 59, 72, 73, 101, 118, \
94, 145, 163, 115, 151, 173, 123, 155, 178, 131, \
149, 171, 121, 140, 164, 125, 154, 172, 134, 158, \
173, 136, 159, 171, 143, 165, 177, 148, 160, 174, \
139, 161, 172, 141, 155, 164, 137, 149, 165, 134, \
153, 170, 126, 159, 168, 131, 155, 174, 128, 152, \
173, 128, 139, 160, 121, 141, 163, 123, 141, 166, \
117, 124, 156, 108, 128, 152, 103, 131, 141, 99, \
136, 145, 113, 132, 150, 118, 133, 154, 123, 147, \
162, 126, 140, 159, 118, 47, 68, 69, 40, 50, \
54, 52, 67, 71, 62, 74, 73, 129, 140, 111, \
158, 175, 127, 149, 173, 131, 145, 174, 130, 146, \
167, 127, 157, 181, 134, 166, 188, 139, 166, 183, \
141, 169, 185, 144, 167, 185, 140, 153, 176, 139, \
147, 166, 134, 162, 169, 136, 166, 174, 140, 161, \
168, 139, 155, 174, 128, 149, 173, 124, 142, 156, \
119, 133, 149, 116, 132, 156, 118, 135, 162, 119, \
128, 148, 98, 126, 139, 97, 135, 147, 114, 137, \
152, 132, 130, 150, 125, 130, 146, 119, 131, 157, \
122, 66, 94, 90, 48, 58, 62, 45, 61, 61, \
45, 62, 63, 98, 107, 93, 165, 169, 131, 154, \
169, 136, 149, 178, 136, 155, 177, 131, 165, 181, \
143, 168, 196, 138, 165, 195, 132, 165, 184, 138, \
160, 183, 133, 154, 177, 141, 152, 167, 141, 159, \
170, 132, 170, 175, 143, 168, 170, 143, 154, 169, \
129, 152, 172, 127, 150, 165, 128, 135, 150, 119, \
121, 143, 111, 120, 143, 102, 130, 146, 105, 127, \
150, 104, 132, 148, 109, 142, 156, 132, 118, 138, \
117, 104, 121, 100, 123, 149, 117, 82, 117, 110, \
71, 97, 93, 51, 71, 69, 44, 59, 60, 67, \
74, 67, 144, 156, 116, 158, 170, 129, 158, 182, \
122, 148, 183, 116, 163, 177, 135, 163, 183, 129, \
162, 191, 128, 162, 184, 132, 152, 173, 128, 166, \
181, 145, 171, 185, 151, 156, 168, 134, 165, 167, \
139, 163, 164, 141, 154, 167, 129, 154, 171, 126, \
144, 166, 129, 140, 148, 123, 136, 155, 115, 125, \
153, 112, 140, 157, 124, 131, 160, 116, 140, 162, \
118, 142, 160, 126, 112, 129, 113, 112, 124, 101, \
129, 152, 116, 72, 112, 105, 83, 120, 110, 67, \
92, 85, 48, 67, 63, 48, 58, 55, 119, 140, \
108, 155, 170, 125, 148, 170, 113, 131, 162, 96, \
148, 171, 121, 155, 171, 125, 158, 173, 128, 157, \
176, 134, 149, 166, 123, 173, 185, 139, 177, 185, \
152, 160, 166, 142, 160, 165, 137, 161, 159, 134, \
155, 161, 129, 149, 170, 126, 144, 165, 127, 148, \
160, 122, 145, 169, 116, 135, 171, 131, 129, 164, \
122, 131, 165, 105, 148, 169, 124, 149, 163, 134, \
131, 140, 125, 138, 150, 128, 143, 159, 125, 46, \
71, 69, 68, 98, 92, 72, 101, 94, 51, 72, \
65, 48, 65, 62, 89, 105, 82, 158, 179, 129, \
160, 181, 136, 139, 159, 110, 137, 156, 116, 141, \
155, 118, 144, 166, 120, 150, 171, 126, 155, 169, \
119, 163, 179, 126, 166, 171, 141, 162, 166, 138, \
153, 164, 130, 160, 159, 136, 158, 163, 134, 144, \
169, 127, 152, 168, 123, 150, 169, 112, 136, 163, \
106, 136, 164, 116, 137, 163, 118, 127, 156, 99, \
137, 152, 113, 140, 148, 124, 145, 150, 125, 150, \
166, 143, 143, 156, 121, 42, 60, 62, 42, 58, \
61, 65, 98, 95, 70, 102, 99, 44, 64, 63, \
58, 69, 53, 150, 166, 122, 158, 175, 131, 146, \
160, 123, 144, 152, 123, 139, 153, 129, 133, 156, \
123, 148, 159, 120, 160, 168, 131, 159, 168, 132, \
163, 163, 135, 159, 162, 127, 158, 170, 126, 153, \
165, 138, 152, 176, 135, 156, 169, 125, 170, 131, \
102, 169, 110, 91, 157, 123, 113, 147, 140, 116, \
142, 162, 120, 131, 158, 125, 124, 146, 114, 128, \
142, 107, 142, 148, 116, 150, 155, 137, 143, 152, \
125, 53, 82, 83, 43, 57, 63, 42, 58, 58, \
69, 109, 98, 43, 67, 67, 51, 60, 52, 145, \
159, 118, 159, 170, 131, 164, 168, 141, 163, 162, \
142, 145, 157, 139, 140, 151, 133, 159, 159, 139, \
172, 176, 154, 166, 165, 142, 161, 157, 135, 164, \
163, 138, 165, 172, 141, 147, 165, 141, 155, 171, \
130, 173, 129, 92, 167, 74, 51, 178, 69, 60, \
184, 59, 72, 167, 98, 101, 135, 158, 112, 110, \
140, 102, 111, 131, 96, 122, 133, 98, 131, 134, \
108, 141, 145, 116, 141, 153, 129, 92, 139, 132, \
81, 116, 110, 63, 89, 89, 60, 89, 90, 61, \
85, 85, 98, 110, 116, 157, 171, 145, 165, 164, \
137, 160, 158, 140, 148, 151, 137, 150, 150, 136, \
152, 150, 137, 149, 151, 134, 154, 155, 135, 151, \
154, 130, 156, 158, 130, 168, 160, 133, 165, 152, \
126, 181, 137, 111, 179, 111, 82, 160, 82, 48, \
156, 60, 47, 165, 52, 58, 163, 64, 64, 142, \
132, 92, 126, 158, 105, 123, 148, 96, 118, 143, \
93, 108, 130, 86, 118, 128, 92, 131, 145, 112, \
134, 146, 122, 76, 108, 103, 79, 112, 107, 78, \
115, 115, 71, 104, 108, 79, 101, 106, 127, 145, \
160, 185, 195, 212, 173, 175, 172, 148, 147, 135, \
142, 146, 130, 153, 150, 132, 149, 147, 130, 146, \
144, 127, 144, 137, 111, 164, 140, 99, 178, 131, \
77, 179, 121, 73, 184, 108, 69, 189, 90, 45, \
171, 76, 36, 147, 75, 44, 135, 63, 54, 124, \
52, 60, 129, 103, 83, 115, 148, 102, 119, 145, \
98, 125, 152, 96, 124, 147, 93, 121, 134, 100, \
115, 124, 95, 124, 137, 101, 133, 153, 121, 47, \
68, 68, 69, 106, 106, 59, 89, 92, 78, 85, \
92, 125, 130, 143, 159, 174, 189, 203, 216, 232, \
214, 223, 229, 152, 158, 147, 145, 143, 122, 149, \
138, 125, 156, 138, 124, 179, 140, 103, 186, 134, \
73, 202, 127, 56, 199, 117, 52, 188, 109, 51, \
192, 93, 35, 181, 81, 27, 165, 70, 29, 147, \
62, 35, 119, 58, 45, 106, 72, 66, 122, 129, \
107, 129, 140, 111, 120, 139, 96, 120, 146, 94, \
125, 141, 95, 136, 144, 112, 124, 131, 108, 110, \
131, 96, 126, 146, 106, 63, 94, 94, 63, 99, \
97, 70, 90, 89, 97, 103, 104, 125, 123, 129, \
181, 186, 204, 208, 224, 234, 196, 212, 216, 157, \
148, 142, 143, 123, 117, 145, 115, 123, 168, 115, \
110, 210, 136, 76, 219, 139, 53, 194, 134, 72, \
189, 122, 64, 198, 103, 30, 187, 90, 27, 174, \
78, 25, 160, 68, 27, 148, 56, 26, 125, 50, \
32, 105, 79, 67, 119, 124, 102, 138, 138, 117, \
127, 138, 109, 131, 139, 112, 126, 133, 107, 118, \
132, 100, 123, 140, 111, 110, 135, 103, 122, 138, \
98, 65, 102, 94, 61, 85, 80, 77, 96, 93, \
97, 98, 94, 114, 108, 109, 172, 176, 191, 204, \
220, 236, 158, 171, 181, 145, 116, 120, 151, 103, \
114, 143, 91, 101, 155, 95, 85, 206, 134, 63, \
218, 143, 59, 194, 130, 63, 189, 116, 49, 192, \
101, 30, 182, 90, 28, 171, 79, 24, 159, 67, \
18, 147, 54, 20, 128, 57, 37, 114, 55, 39, \
118, 98, 82, 144, 151, 131, 136, 138, 117, 133, \
135, 116, 123, 125, 105, 120, 137, 110, 125, 146, \
117, 124, 132, 106, 120, 133, 103, 49, 68, 67, \
56, 75, 69, 62, 73, 70, 91, 97, 94, 108, \
112, 112, 159, 161, 174, 187, 202, 221, 154, 131, \
147, 142, 86, 85, 165, 89, 76, 158, 68, 58, \
145, 67, 50, 181, 110, 48, 198, 132, 57, 209, \
122, 34, 200, 114, 34, 179, 107, 43, 178, 93, \
29, 170, 82, 21, 159, 69, 17, 141, 65, 33, \
130, 58, 33, 130, 33, 6, 122, 83, 64, 134, \
147, 127, 145, 146, 126, 134, 138, 114, 129, 141, \
111, 127, 145, 116, 121, 136, 103, 136, 140, 112, \
134, 136, 112, 49, 63, 64, 54, 71, 63, 54, \
66, 62, 65, 75, 68, 96, 88, 89, 124, 131, \
134, 143, 128, 137, 161, 83, 67, 166, 74, 44, \
167, 87, 58, 163, 54, 33, 124, 47, 43, 151, \
98, 60, 196, 124, 39, 210, 122, 29, 200, 110, \
26, 178, 105, 38, 169, 96, 35, 171, 83, 21, \
154, 82, 36, 136, 70, 33, 136, 46, 10, 127, \
33, 1, 126, 93, 68, 138, 158, 127, 132, 140, \
118, 130, 131, 112, 120, 139, 108, 120, 132, 103, \
118, 123, 99, 136, 141, 112, 137, 140, 115, 41, \
41, 37, 40, 40, 32, 41, 53, 45, 45, 32, \
28, 75, 70, 71, 103, 83, 78, 143, 58, 38, \
179, 71, 16, 178, 67, 19, 170, 81, 36, 138, \
54, 39, 110, 61, 62, 149, 100, 52, 193, 114, \
31, 197, 117, 35, 191, 111, 28, 183, 100, 27, \
163, 98, 42, 156, 101, 54, 149, 90, 41, 144, \
57, 8, 135, 43, 3, 124, 32, 4, 127, 98, \
75, 131, 135, 111, 135, 135, 113, 130, 146, 127, \
127, 133, 113, 131, 130, 111, 126, 124, 110, 122, \
120, 103, 133, 131, 111, 40, 24, 19, 28, 21, \
16, 38, 39, 31, 58, 64, 60, 69, 68, 66, \
114, 44, 29, 167, 55, 9, 176, 60, 7, 176, \
62, 7, 172, 54, 5, 127, 70, 60, 91, 76, \
78, 127, 64, 46, 150, 75, 32, 172, 95, 25, \
180, 104, 31, 172, 97, 30, 164, 99, 37, 138, \
113, 73, 144, 82, 29, 141, 54, 1, 128, 38, \
2, 114, 35, 14, 139, 126, 105, 152, 150, 131, \
145, 151, 129, 132, 142, 124, 130, 129, 116, 145, \
140, 129, 139, 134, 120, 138, 131, 118, 140, 132, \
120, 35, 23, 17, 32, 22, 16, 42, 36, 31, \
58, 79, 71, 69, 57, 49, 128, 40, 14, 163, \
50, 7, 165, 53, 6, 165, 50, 7, 157, 50, \
21, 101, 62, 62, 82, 63, 66, 102, 49, 49, \
103, 40, 39, 136, 62, 21, 160, 78, 19, 159, \
86, 28, 155, 98, 39, 153, 85, 24, 142, 80, \
33, 129, 57, 18, 118, 27, 1, 108, 51, 36, \
150, 155, 128, 149, 157, 136, 145, 154, 129, 135, \
134, 114, 137, 134, 121, 143, 138, 126, 147, 138, \
125, 142, 136, 122, 134, 136, 123, 31, 29, 23, \
48, 43, 30, 75, 82, 64, 39, 40, 34, 59, \
43, 36, 130, 50, 27, 149, 38, 7, 154, 39, \
6, 151, 41, 13, 133, 52, 38, 85, 54, 67, \
81, 55, 69, 88, 58, 58, 89, 32, 38, 99, \
30, 19, 116, 43, 19, 133, 74, 39, 144, 77, \
25, 149, 69, 6, 138, 67, 15, 118, 56, 29, \
106, 37, 21, 123, 94, 77, 151, 167, 137, 146, \
161, 130, 150, 159, 131, 148, 155, 132, 149, 152, \
133, 137, 133, 119, 133, 127, 114, 134, 130, 117, \
143, 144, 131, 77, 83, 62, 92, 101, 76, 116, \
123, 91, 82, 76, 56, 85, 63, 51, 108, 46, \
31, 129, 37, 17, 135, 23, 6, 132, 48, 28, \
111, 40, 31, 73, 51, 68, 63, 61, 80, 64, \
60, 75, 73, 54, 56, 72, 24, 26, 78, 40, \
37, 95, 51, 38, 118, 45, 11, 127, 51, 11, \
122, 41, 8, 109, 34, 16, 109, 79, 60, 135, \
144, 113, 144, 155, 127, 149, 150, 125, 146, 157, \
126, 148, 163, 129, 147, 149, 126, 139, 134, 119, \
131, 132, 118, 136, 136, 124, 148, 138, 127, 119, \
131, 94, 134, 150, 118, 136, 141, 111, 135, 135, \
108, 122, 104, 86, 93, 29, 18, 110, 45, 31, \
124, 40, 30, 114, 48, 37, 93, 29, 22, 71, \
51, 60, 53, 62, 79, 51, 55, 71, 54, 56, \
64, 68, 62, 61, 55, 54, 52, 51, 31, 31, \
77, 33, 22, 96, 35, 22, 91, 28, 14, 111, \
66, 48, 131, 135, 110, 133, 153, 120, 147, 149, \
125, 154, 150, 128, 148, 151, 123, 148, 158, 123, \
146, 148, 122, 142, 144, 126, 140, 141, 127, 142, \
136, 126, 153, 142, 131, 133, 147, 114, 141, 152, \
121, 142, 148, 121, 139, 136, 114, 128, 116, 97, \
88, 29, 17, 97, 41, 30, 109, 75, 64, 99, \
39, 33, 94, 33, 22, 87, 50, 41, 41, 49, \
59, 43, 45, 53, 41, 49, 56, 52, 72, 70, \
44, 56, 56, 33, 33, 40, 47, 37, 42, 63, \
34, 36, 80, 62, 46, 139, 150, 117, 143, 161, \
125, 132, 143, 106, 139, 143, 117, 159, 155, 136, \
164, 160, 138, 156, 165, 130, 141, 152, 126, 134, \
141, 125, 147, 141, 126, 147, 138, 126, 147, 140, \
129, 141, 159, 125, 147, 154, 123, 141, 150, 120, \
142, 145, 118, 132, 129, 112, 80, 34, 24, 82, \
41, 31, 83, 53, 47, 94, 43, 37, 102, 40, \
19, 110, 54, 25, 49, 36, 34, 26, 31, 35, \
40, 55, 56, 32, 43, 46, 38, 47, 48, 44, \
53, 53, 44, 45, 51, 77, 76, 68, 126, 134, \
112, 129, 155, 118, 125, 136, 103, 125, 132, 94, \
128, 139, 104, 147, 150, 129, 158, 163, 134, 145, \
161, 127, 135, 151, 128, 142, 150, 125, 145, 149, \
122, 148, 141, 123, 147, 143, 129, 139, 163, 118, \
145, 164, 131, 144, 157, 125, 140, 157, 122, 129, \
138, 111, 75, 46, 42, 74, 39, 36, 73, 19, \
16, 96, 46, 34, 109, 53, 34, 113, 44, 17, \
78, 35, 20, 39, 43, 41, 34, 44, 48, 31, \
35, 44, 40, 43, 53, 53, 57, 66, 68, 74, \
73, 116, 123, 96, 139, 153, 126, 114, 125, 102, \
125, 133, 102, 124, 131, 104, 121, 129, 99, 120, \
134, 98, 129, 152, 111, 126, 152, 117, 129, 143, \
111, 131, 147, 106, 141, 159, 119, 149, 158, 127, \
144, 148, 120, 142, 163, 124, 149, 167, 138, 148, \
154, 132, 136, 153, 117, 123, 138, 98, 83, 92, \
77, 53, 27, 24, 76, 24, 15, 88, 30, 18, \
93, 52, 41, 92, 47, 32, 89, 58, 41, 67, \
67, 63, 37, 39, 45, 34, 39, 47, 47, 47, \
59, 65, 65, 66, 109, 115, 96, 122, 152, 112, \
126, 154, 113, 123, 137, 102, 129, 144, 109, 133, \
151, 117, 124, 129, 107, 115, 127, 89, 94, 127, \
86, 93, 119, 88, 117, 119, 97, 122, 124, 102, \
125, 137, 107, 146, 150, 120, 144, 146, 121, 137, \
156, 113, 142, 151, 126, 130, 136, 116, 124, 138, \
110, 129, 155, 116, 121, 150, 108, 96, 87, 64, \
109, 87, 70, 84, 64, 52, 82, 73, 57, 93, \
96, 77, 58, 71, 67, 36, 33, 30, 31, 25, \
24, 37, 39, 40, 71, 85, 66, 107, 127, 85, \
118, 139, 96, 112, 145, 110, 120, 153, 110, 116, \
126, 93, 121, 128, 106, 112, 130, 93, 123, 134, \
101, 108, 127, 96, 84, 110, 78, 76, 94, 69, \
111, 125, 100, 125, 137, 109, 123, 139, 103, 129, \
132, 110, 136, 141, 121, 136, 149, 111, 140, 144, \
119, 142, 151, 124, 131, 158, 131, 126, 160, 125, \
128, 147, 104, 147, 153, 117, 156, 161, 126, 132, \
144, 113, 132, 149, 115, 128, 150, 113, 63, 83, \
70, 22, 24, 25, 43, 45, 40, 85, 102, 71, \
115, 144, 93, 112, 143, 96, 106, 137, 97, 109, \
137, 94, 107, 140, 95, 111, 123, 99, 103, 110, \
82, 96, 106, 76, 114, 132, 100, 104, 129, 100, \
99, 113, 89, 97, 118, 85, 96, 118, 85, 104, \
119, 91, 103, 121, 88, 114, 137, 107, 128, 143, \
114, 124, 141, 98, 130, 141, 105, 137, 156, 119, \
126, 156, 123, 124, 158, 120, 133, 154, 118, 133, \
147, 111, 132, 145, 102, 135, 149, 104, 133, 147, \
117, 133, 148, 115, 73, 82, 66, 36, 46, 43, \
77, 92, 65, 103, 129, 67, 111, 141, 82, 105, \
135, 98, 99, 120, 81, 106, 131, 82, 92, 111, \
77, 102, 110, 92, 101, 111, 84, 95, 104, 81, \
112, 128, 106, 115, 132, 100, 111, 129, 101, 111, \
137, 93, 100, 129, 86, 97, 119, 92, 95, 117, \
90, 109, 134, 103, 126, 147, 107, 106, 126, 84, \
118, 141, 94, 127, 158, 108, 126, 155, 114, 123, \
156, 110, 126, 156, 115, 126, 146, 106, 119, 123, \
91, 128, 142, 103, 135, 149, 121, 140, 144, 117, \
96, 96, 79, 65, 69, 63, 104, 126, 89, 100, \
119, 75, 109, 137, 97, 117, 140, 114, 108, 128, \
90, 110, 142, 93, 105, 125, 95, 99, 107, 83, \
109, 125, 101, 109, 122, 107, 114, 120, 101, 105, \
116, 84, 90, 102, 69, 89, 98, 65, 106, 115, \
70, 115, 125, 93, 119, 126, 104, 115, 125, 92, \
121, 140, 99, 105, 137, 81, 109, 145, 103, 116, \
142, 101, 124, 143, 103, 116, 144, 95, 122, 147, \
102, 119, 146, 102, 123, 136, 99, 123, 144, 107, \
131, 139, 110, 132, 134, 108, 132, 124, 107, 148, \
139, 133, 133, 153, 124, 104, 128, 99, 111, 139, \
106, 121, 142, 108, 114, 137, 101, 107, 136, 98, \
110, 132, 102, 100, 114, 87, 100, 118, 96, 109, \
120, 101, 111, 123, 94, 94, 109, 77, 93, 93, \
65, 93, 88, 66, 117, 92, 64, 127, 99, 71, \
144, 117, 88, 133, 115, 83, 111, 128, 91, 110, \
154, 98, 108, 148, 109, 111, 135, 102, 119, 140, \
103, 118, 137, 98, 113, 127, 89, 112, 129, 99, \
112, 140, 109, 120, 138, 102, 124, 126, 98, 121, \
122, 99, 133, 130, 109, 193, 176, 174, 149, 168, \
147, 106, 139, 103, 104, 136, 95, 104, 133, 84, \
98, 120, 74, 97, 113, 85, 92, 108, 83, 103, \
124, 92, 112, 134, 100, 109, 123, 96, 105, 118, \
93, 106, 112, 90, 107, 106, 85, 105, 114, 94, \
95, 91, 73, 85, 71, 55, 106, 107, 75, 124, \
131, 94, 121, 137, 103, 115, 154, 109, 117, 151, \
107, 115, 134, 98, 118, 141, 99, 116, 131, 93, \
117, 121, 91, 121, 135, 109, 122, 153, 118, 127, \
147, 111, 128, 133, 111, 116, 120, 96, 115, 112, \
91, 185, 167, 169, 150, 167, 148, 103, 131, 89, \
98, 125, 82, 85, 107, 73, 85, 110, 68, 109, \
139, 93, 107, 130, 103, 105, 124, 96, 114, 135, \
101, 124, 139, 117, 108, 116, 98, 115, 120, 101, \
123, 129, 110, 116, 127, 108, 106, 116, 90, 93, \
102, 81, 101, 116, 91, 112, 130, 98, 106, 126, \
95, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '4344';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1affd5777d68d41c817383761fd90b9896';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_dog2';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{157, 166, 103, 157, 167, 104, 161, 171, 107, 157, 168, \
101, 152, 163, 97, 147, 160, 95, 144, 156, 94, \
139, 156, 89, 146, 159, 96, 153, 164, 106, 156, \
160, 106, 155, 157, 102, 157, 157, 100, 169, 170, \
110, 161, 167, 104, 161, 168, 103, 168, 175, 114, \
167, 172, 114, 157, 164, 102, 148, 161, 102, 142, \
158, 98, 138, 153, 94, 132, 148, 92, 136, 150, \
92, 129, 143, 83, 136, 152, 91, 134, 153, 96, \
140, 159, 102, 116, 137, 82, 121, 138, 81, 138, \
151, 92, 135, 152, 88, 158, 168, 105, 155, 168, \
102, 156, 169, 103, 160, 172, 105, 153, 163, 96, \
155, 162, 101, 154, 164, 105, 146, 159, 94, 143, \
160, 96, 144, 162, 99, 142, 155, 98, 148, 159, \
101, 155, 166, 104, 156, 165, 101, 152, 158, 98, \
166, 164, 111, 166, 166, 110, 156, 163, 102, 151, \
164, 100, 154, 162, 97, 143, 154, 84, 159, 160, \
106, 157, 159, 106, 140, 150, 88, 140, 151, 90, \
143, 158, 94, 141, 156, 92, 146, 160, 102, 133, \
150, 91, 143, 158, 94, 146, 162, 98, 137, 154, \
86, 152, 161, 96, 154, 164, 105, 153, 163, 100, \
155, 166, 97, 163, 167, 104, 158, 163, 104, 147, \
160, 95, 144, 155, 89, 148, 159, 94, 137, 155, \
85, 137, 154, 90, 146, 158, 96, 149, 162, 103, \
137, 154, 89, 150, 161, 102, 164, 166, 116, 154, \
157, 101, 152, 158, 98, 160, 164, 104, 162, 162, \
98, 171, 155, 98, 207, 178, 140, 171, 173, 116, \
151, 158, 94, 155, 160, 100, 150, 160, 95, 141, \
153, 85, 142, 152, 91, 150, 162, 97, 153, 164, \
97, 151, 160, 97, 142, 157, 91, 144, 160, 87, \
149, 162, 99, 151, 162, 97, 149, 163, 91, 160, \
167, 99, 156, 162, 98, 154, 166, 100, 157, 166, \
100, 153, 161, 94, 141, 156, 84, 145, 158, 91, \
155, 166, 102, 146, 159, 98, 139, 154, 90, 148, \
165, 100, 158, 169, 111, 162, 166, 110, 168, 166, \
110, 176, 161, 109, 189, 155, 107, 204, 153, 113, \
206, 183, 149, 164, 174, 113, 155, 162, 98, 157, \
164, 105, 154, 162, 101, 147, 159, 94, 147, 158, \
94, 149, 161, 92, 153, 164, 101, 153, 161, 100, \
151, 164, 101, 145, 158, 91, 147, 164, 95, 155, \
168, 100, 149, 163, 91, 151, 166, 93, 152, 165, \
95, 163, 170, 106, 168, 169, 109, 147, 157, 89, \
146, 158, 87, 153, 164, 97, 155, 167, 105, 144, \
160, 92, 140, 159, 85, 150, 168, 96, 170, 175, \
119, 199, 177, 128, 211, 170, 121, 217, 164, 116, \
205, 144, 102, 184, 139, 104, 178, 174, 130, 155, \
169, 100, 157, 165, 98, 155, 164, 104, 147, 160, \
96, 139, 154, 85, 149, 164, 93, 148, 165, 94, \
148, 162, 92, 152, 163, 96, 142, 157, 90, 146, \
162, 94, 158, 171, 105, 160, 170, 107, 154, 163, \
100, 155, 169, 96, 152, 169, 98, 156, 169, 104, \
157, 165, 104, 145, 160, 92, 141, 156, 84, 149, \
164, 95, 148, 165, 100, 145, 163, 93, 147, 163, \
93, 170, 177, 118, 208, 188, 143, 232, 180, 132, \
228, 162, 112, 198, 136, 93, 159, 111, 72, 173, \
138, 110, 172, 170, 117, 147, 163, 89, 156, 165, \
101, 144, 159, 91, 135, 154, 85, 132, 152, 78, \
139, 158, 79, 139, 159, 84, 143, 160, 85, 147, \
161, 91, 140, 156, 87, 146, 163, 97, 159, 172, \
110, 152, 165, 102, 165, 171, 113, 155, 171, 100, \
152, 168, 102, 152, 169, 101, 148, 161, 94, 145, \
161, 90, 137, 158, 85, 142, 165, 93, 152, 168, \
104, 148, 164, 97, 167, 170, 115, 212, 188, 149, \
220, 173, 132, 218, 154, 104, 174, 116, 75, 118, \
76, 48, 125, 89, 56, 199, 153, 117, 191, 158, \
108, 153, 162, 93, 150, 164, 99, 143, 162, 96, \
145, 164, 94, 140, 158, 86, 138, 153, 79, 141, \
155, 84, 147, 162, 90, 147, 160, 94, 147, 159, \
93, 147, 158, 95, 153, 168, 106, 148, 167, 96, \
147, 161, 93, 149, 164, 100, 161, 170, 113, 156, \
166, 108, 154, 168, 104, 155, 168, 104, 156, 172, \
109, 144, 166, 96, 143, 163, 92, 163, 171, 115, \
205, 187, 149, 213, 172, 137, 186, 136, 94, 169, \
113, 71, 112, 70, 41, 87, 58, 34, 114, 78, \
47, 195, 142, 98, 218, 161, 110, 161, 159, 94, \
140, 164, 95, 137, 160, 98, 142, 167, 99, 145, \
166, 97, 145, 160, 90, 147, 159, 91, 152, 166, \
98, 151, 165, 97, 151, 162, 96, 138, 158, 89, \
153, 169, 103, 145, 164, 93, 130, 151, 83, 141, \
157, 92, 146, 161, 96, 149, 160, 103, 157, 169, \
113, 156, 166, 112, 156, 166, 109, 146, 161, 97, \
140, 155, 93, 195, 180, 142, 212, 177, 145, 165, \
126, 92, 142, 99, 63, 118, 78, 47, 80, 53, \
31, 89, 62, 37, 123, 84, 55, 194, 141, 99, \
229, 166, 117, 181, 160, 99, 121, 149, 78, 122, \
147, 84, 126, 156, 79, 141, 168, 93, 147, 168, \
99, 148, 165, 91, 153, 169, 97, 145, 165, 85, \
141, 161, 82, 133, 155, 83, 152, 167, 105, 143, \
159, 95, 131, 153, 86, 136, 154, 84, 138, 154, \
91, 144, 161, 102, 145, 161, 100, 148, 164, 103, \
146, 163, 101, 149, 165, 100, 166, 166, 115, 193, \
163, 135, 163, 132, 104, 115, 87, 58, 103, 69, \
42, 81, 54, 32, 67, 49, 31, 94, 65, 37, \
186, 141, 99, 221, 160, 113, 211, 144, 95, 191, \
157, 105, 132, 151, 86, 134, 155, 92, 141, 163, \
101, 139, 161, 98, 135, 163, 85, 143, 169, 88, \
150, 171, 96, 137, 165, 81, 134, 165, 84, 136, \
157, 83, 151, 169, 100, 140, 156, 91, 121, 146, \
75, 127, 147, 76, 147, 159, 100, 145, 161, 101, \
146, 163, 104, 142, 161, 99, 127, 152, 90, 149, \
167, 104, 179, 163, 128, 139, 116, 93, 116, 97, \
74, 100, 80, 53, 85, 59, 34, 78, 58, 36, \
78, 60, 38, 107, 78, 51, 187, 139, 96, 204, \
139, 90, 186, 129, 87, 169, 136, 92, 153, 166, \
100, 143, 162, 93, 133, 152, 85, 124, 149, 82, \
118, 144, 70, 134, 154, 85, 133, 156, 88, 117, \
146, 75, 120, 154, 74, 128, 152, 76, 131, 156, \
73, 135, 155, 85, 131, 155, 87, 125, 146, 81, \
136, 155, 87, 144, 168, 101, 139, 164, 106, 128, \
152, 94, 133, 158, 92, 183, 178, 133, 143, 127, \
106, 98, 87, 70, 108, 93, 71, 100, 83, 54, \
85, 64, 36, 89, 71, 42, 91, 71, 40, 95, \
64, 37, 148, 97, 60, 174, 114, 71, 153, 114, \
87, 156, 131, 96, 159, 163, 101, 132, 155, 90, \
124, 147, 75, 127, 150, 81, 132, 152, 90, 134, \
158, 93, 135, 158, 94, 119, 145, 79, 119, 146, \
75, 137, 155, 82, 142, 162, 87, 145, 167, 98, \
147, 171, 111, 135, 158, 95, 130, 155, 94, 128, \
155, 95, 119, 148, 81, 116, 147, 84, 167, 172, \
121, 180, 156, 128, 103, 94, 74, 95, 89, 70, \
103, 91, 66, 94, 77, 47, 78, 58, 33, 84, \
68, 40, 98, 79, 48, 103, 76, 45, 146, 109, \
75, 188, 143, 107, 146, 117, 95, 173, 138, 114, \
183, 164, 114, 138, 161, 104, 136, 157, 92, 123, \
147, 80, 131, 153, 94, 130, 155, 93, 136, 161, \
97, 132, 157, 94, 133, 157, 88, 145, 160, 99, \
138, 158, 94, 136, 157, 95, 133, 156, 99, 131, \
157, 93, 122, 148, 90, 114, 139, 81, 119, 147, \
81, 130, 151, 89, 161, 144, 114, 124, 107, 86, \
88, 82, 60, 97, 88, 65, 96, 83, 53, 86, \
67, 36, 74, 54, 30, 83, 68, 42, 105, 91, \
61, 111, 92, 60, 133, 116, 88, 179, 151, 123, \
202, 169, 140, 218, 176, 149, 206, 162, 122, 162, \
161, 113, 144, 164, 105, 131, 152, 85, 134, 158, \
97, 130, 155, 93, 138, 164, 102, 127, 154, 88, \
124, 150, 83, 151, 167, 110, 137, 162, 99, 133, \
153, 96, 131, 151, 93, 124, 151, 89, 120, 147, \
85, 118, 143, 84, 122, 148, 86, 128, 142, 93, \
121, 107, 86, 92, 83, 66, 87, 80, 59, 94, \
80, 53, 87, 68, 38, 79, 58, 29, 76, 53, \
29, 87, 73, 43, 112, 103, 70, 117, 105, 73, \
128, 118, 90, 145, 134, 113, 182, 163, 147, 195, \
167, 151, 185, 147, 123, 159, 136, 108, 140, 155, \
102, 139, 158, 92, 137, 160, 97, 130, 156, 86, \
132, 157, 95, 129, 154, 91, 127, 151, 92, 146, \
165, 107, 144, 168, 110, 139, 160, 105, 139, 162, \
101, 130, 157, 96, 126, 150, 87, 122, 146, 86, \
131, 154, 96, 118, 129, 88, 95, 86, 69, 81, \
73, 57, 80, 73, 54, 88, 73, 45, 81, 61, \
32, 81, 57, 30, 84, 61, 32, 94, 79, 45, \
116, 110, 75, 124, 117, 82, 128, 122, 91, 120, \
118, 100, 125, 122, 114, 139, 128, 120, 147, 127, \
114, 143, 126, 123, 116, 128, 93, 129, 154, 84, \
134, 160, 88, 127, 155, 77, 127, 153, 87, 133, \
156, 97, 142, 162, 101, 130, 154, 92, 137, 158, \
103, 136, 160, 103, 123, 152, 86, 120, 150, 86, \
127, 153, 96, 131, 156, 98, 138, 161, 104, 111, \
117, 85, 89, 80, 62, 78, 69, 51, 67, 60, \
45, 84, 71, 44, 85, 66, 37, 87, 66, 35, \
97, 76, 40, 103, 90, 50, 116, 111, 74, 127, \
122, 88, 129, 125, 92, 107, 107, 83, 76, 77, \
68, 87, 86, 78, 102, 96, 86, 133, 128, 122, \
114, 129, 84, 125, 151, 76, 129, 156, 82, 129, \
159, 86, 138, 166, 100, 136, 160, 94, 143, 165, \
103, 131, 155, 89, 133, 154, 99, 122, 147, 90, \
115, 143, 83, 114, 145, 87, 114, 144, 90, 130, \
159, 100, 129, 153, 103, 101, 104, 80, 89, 80, \
58, 85, 73, 52, 65, 56, 40, 75, 64, 43, \
94, 78, 47, 96, 80, 45, 106, 92, 53, 113, \
105, 66, 142, 136, 104, 133, 135, 93, 131, 140, \
91, 114, 125, 85, 66, 76, 49, 48, 51, 38, \
64, 67, 52, 112, 125, 87, 123, 150, 86, 125, \
154, 79, 129, 156, 88, 129, 157, 93, 134, 159, \
93, 131, 155, 90, 143, 163, 103, 138, 158, 101, \
137, 154, 107, 117, 137, 88, 116, 141, 87, 120, \
149, 93, 121, 145, 93, 122, 148, 89, 110, 125, \
91, 93, 92, 76, 92, 82, 59, 92, 77, 53, \
84, 74, 53, 66, 60, 43, 88, 79, 54, 106, \
97, 62, 112, 103, 66, 111, 105, 73, 172, 163, \
144, 151, 160, 109, 131, 153, 84, 121, 143, 85, \
102, 122, 70, 90, 107, 61, 103, 118, 74, 121, \
145, 83, 112, 142, 76, 118, 146, 77, 117, 145, \
81, 122, 148, 87, 131, 155, 88, 142, 162, 102, \
145, 165, 101, 138, 159, 110, 138, 154, 106, 123, \
143, 86, 114, 138, 86, 125, 150, 100, 127, 151, \
95, 117, 141, 86, 105, 109, 91, 92, 89, 76, \
93, 84, 59, 92, 78, 53, 95, 86, 63, 80, \
77, 59, 66, 61, 45, 95, 90, 64, 105, 100, \
70, 89, 87, 65, 167, 160, 152, 153, 161, 129, \
130, 153, 85, 140, 158, 94, 131, 152, 90, 115, \
142, 74, 123, 146, 76, 128, 151, 92, 123, 149, \
87, 117, 145, 86, 106, 132, 79, 111, 136, 78, \
134, 159, 91, 136, 160, 91, 127, 155, 87, 146, \
167, 119, 124, 146, 93, 122, 144, 88, 118, 140, \
88, 124, 149, 99, 113, 144, 76, 103, 125, 78, \
94, 94, 83, 91, 87, 68, 92, 83, 58, 92, \
82, 57, 95, 87, 64, 97, 92, 73, 81, 77, \
63, 69, 67, 52, 63, 65, 47, 119, 119, 108, \
194, 190, 187, 140, 148, 123, 134, 156, 89, 143, \
159, 96, 130, 154, 92, 125, 149, 90, 134, 156, \
98, 130, 154, 93, 120, 148, 85, 124, 152, 93, \
122, 148, 88, 112, 139, 80, 110, 137, 70, 107, \
135, 66, 120, 146, 94, 149, 160, 114, 137, 162, \
105, 123, 148, 87, 125, 148, 85, 108, 136, 76, \
96, 131, 64, 89, 102, 67, 84, 81, 68, 91, \
84, 62, 93, 81, 55, 99, 93, 70, 101, 97, \
80, 94, 93, 75, 92, 90, 75, 77, 78, 68, \
54, 58, 48, 133, 131, 122, 180, 175, 172, 129, \
137, 118, 143, 161, 103, 134, 154, 96, 126, 151, \
86, 133, 155, 101, 139, 161, 103, 110, 135, 74, \
119, 144, 86, 132, 157, 96, 130, 157, 94, 125, \
151, 90, 119, 140, 83, 102, 127, 73, 104, 128, \
83, 133, 150, 99, 144, 158, 104, 132, 152, 95, \
130, 149, 93, 107, 134, 73, 85, 107, 64, 81, \
83, 67, 79, 76, 58, 86, 78, 57, 91, 81, \
56, 104, 103, 84, 109, 112, 99, 100, 103, 87, \
91, 94, 76, 87, 90, 75, 69, 76, 64, 104, \
108, 88, 135, 131, 117, 119, 127, 103, 127, 155, \
88, 136, 161, 101, 129, 155, 85, 132, 156, 88, \
134, 158, 91, 129, 150, 88, 132, 155, 107, 123, \
146, 96, 131, 153, 94, 151, 164, 112, 140, 153, \
102, 111, 137, 83, 119, 143, 93, 119, 138, 85, \
120, 136, 87, 133, 145, 92, 118, 136, 75, 93, \
114, 63, 89, 93, 76, 77, 73, 63, 74, 71, \
51, 82, 75, 54, 88, 77, 52, 102, 102, 82, \
111, 118, 104, 108, 112, 91, 97, 98, 72, 92, \
97, 78, 82, 95, 81, 88, 93, 68, 110, 107, \
87, 112, 121, 88, 123, 156, 89, 146, 171, 111, \
143, 165, 96, 151, 174, 102, 138, 163, 87, 126, \
150, 82, 130, 152, 92, 131, 152, 102, 128, 150, \
98, 134, 153, 96, 120, 142, 81, 110, 134, 66, \
140, 154, 95, 123, 137, 85, 167, 171, 134, 156, \
161, 119, 116, 132, 81, 106, 118, 91, 80, 79, \
72, 69, 66, 51, 71, 68, 51, 80, 74, 53, \
85, 72, 46, 98, 92, 68, 110, 114, 96, 106, \
111, 88, 100, 99, 72, 93, 92, 69, 84, 91, \
69, 86, 87, 59, 102, 97, 75, 112, 116, 86, \
128, 154, 93, 140, 165, 104, 137, 164, 93, 144, \
169, 104, 140, 162, 99, 121, 144, 81, 121, 144, \
81, 122, 148, 87, 117, 145, 86, 128, 149, 91, \
112, 134, 82, 116, 134, 77, 142, 154, 101, 126, \
143, 87, 183, 176, 140, 196, 180, 154, 132, 133, \
111, 125, 131, 127, 74, 76, 74, 59, 56, 43, \
69, 65, 50, 76, 71, 53, 79, 69, 44, 88, \
76, 50, 104, 103, 79, 103, 107, 79, 101, 100, \
69, 93, 88, 56, 85, 83, 56, 95, 93, 66, \
100, 95, 71, 108, 101, 78, 117, 135, 82, 120, \
148, 81, 114, 143, 77, 118, 143, 79, 133, 154, \
91, 130, 152, 83, 128, 150, 85, 124, 148, 85, \
121, 145, 87, 129, 148, 92, 122, 144, 91, 112, \
133, 77, 120, 140, 85, 106, 125, 76, 139, 128, \
96, 152, 130, 109, 148, 144, 138, 143, 148, 151, \
74, 82, 83, 53, 50, 41, 65, 60, 47, 70, \
65, 50, 72, 63, 44, 79, 63, 39, 95, 88, \
60, 102, 102, 71, 101, 101, 69, 96, 93, 63, \
81, 80, 53, 94, 90, 71, 103, 96, 73, 101, \
89, 66, 112, 124, 77, 110, 137, 75, 103, 125, \
71, 106, 127, 71, 121, 140, 84, 111, 131, 64, \
109, 129, 64, 114, 134, 72, 117, 139, 82, 120, \
139, 85, 121, 139, 85, 112, 131, 74, 99, 124, \
70, 83, 101, 59, 93, 88, 66, 101, 92, 79, \
132, 133, 128, 125, 132, 138, 79, 89, 91, 48, \
47, 39, 57, 52, 38, 64, 60, 45, 70, 62, \
47, 75, 57, 37, 89, 75, 49, 102, 98, 72, \
102, 100, 70, 88, 88, 58, 56, 63, 40, 69, \
66, 55, 100, 90, 77, 98, 84, 61, 125, 132, \
90, 119, 143, 93, 122, 139, 90, 113, 130, 81, \
100, 125, 68, 89, 109, 51, 92, 106, 57, 79, \
97, 52, 86, 104, 58, 91, 108, 64, 106, 121, \
77, 109, 124, 76, 84, 97, 59, 86, 103, 60, \
76, 75, 58, 84, 81, 70, 108, 108, 102, 109, \
117, 125, 83, 92, 94, 49, 48, 39, 51, 46, \
32, 59, 56, 40, 70, 65, 49, 77, 60, 39, \
86, 69, 44, 95, 90, 65, 88, 85, 56, 64, \
66, 43, 34, 46, 30, 56, 60, 48, 84, 79, \
71, 85, 75, 66, 117, 124, 91, 120, 140, 98, \
117, 135, 92, 104, 124, 77, 101, 125, 72, 87, \
109, 63, 72, 89, 54, 58, 76, 47, 52, 66, \
41, 50, 66, 38, 75, 90, 62, 76, 81, 59, \
66, 67, 50, 73, 88, 50, 63, 64, 50, 78, \
77, 65, 95, 94, 85, 105, 113, 117, 85, 93, \
93, 53, 53, 46, 52, 47, 36, 58, 55, 41, \
69, 64, 49, 78, 63, 42, 85, 68, 43, 87, \
81, 56, 72, 77, 59, 41, 51, 37, 27, 37, \
26, 55, 63, 51, 86, 87, 73, 74, 69, 57, \
85, 89, 74, 88, 102, 76, 77, 93, 66, 69, \
85, 50, 78, 96, 60, 73, 89, 60, 51, 66, \
46, 39, 55, 38, 34, 48, 33, 32, 44, 31, \
52, 55, 44, 55, 51, 46, 43, 48, 37, 40, \
53, 31, 44, 49, 37, 69, 69, 55, 86, 83, \
70, 104, 111, 111, 88, 96, 96, 50, 53, 47, \
51, 51, 43, 64, 66, 58, 68, 68, 56, 76, \
66, 46, 84, 68, 43, 83, 76, 56, 88, 97, \
101, 66, 82, 85, 29, 38, 28, 45, 55, 45, \
89, 90, 75, 89, 76, 56, 67, 63, 53, 67, \
69, 64, 73, 73, 68, 55, 64, 50, 44, 59, \
42, 41, 57, 40, 38, 52, 38, 35, 48, 36, \
40, 48, 39, 51, 48, 43, 48, 45, 39, 36, \
43, 34, 29, 40, 30, 22, 32, 21, 28, 33, \
26, 58, 57, 47, 78, 73, 59, 102, 109, 108, \
89, 98, 99, 46, 49, 44, 38, 41, 34, 58, \
65, 63, 60, 64, 61, 70, 63, 47, 82, 66, \
43, 81, 73, 58, 90, 98, 107, 86, 102, 116, \
36, 46, 38, 41, 50, 39, 79, 82, 69, 91, \
80, 58, 64, 60, 47, 36, 42, 37, 49, 50, \
45, 79, 71, 68, 81, 76, 75, 65, 65, 62, \
62, 59, 53, 67, 57, 55, 56, 50, 46, 39, \
45, 36, 30, 41, 30, 30, 42, 30, 34, 46, \
36, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '4654';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1af762dc899ab67b8aff222f79f8e95c0f';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_airplane7';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{63, 73, 83, 67, 76, 88, 68, 78, 91, 70, 80, \
93, 72, 82, 95, 73, 84, 97, 76, 87, 99, \
78, 90, 103, 79, 91, 104, 81, 93, 106, 82, \
94, 108, 83, 95, 109, 86, 98, 112, 86, 98, \
112, 86, 98, 112, 87, 99, 113, 87, 99, 113, \
87, 99, 113, 97, 109, 126, 86, 98, 118, 85, \
98, 110, 83, 97, 108, 83, 95, 108, 81, 93, \
107, 83, 91, 106, 82, 92, 102, 83, 92, 105, \
75, 85, 100, 72, 83, 98, 72, 81, 97, 69, \
78, 93, 66, 75, 89, 64, 74, 87, 67, 77, \
92, 70, 79, 96, 72, 81, 98, 73, 83, 99, \
74, 86, 101, 76, 89, 103, 79, 92, 106, 81, \
94, 107, 82, 95, 109, 84, 96, 112, 86, 98, \
114, 87, 99, 114, 87, 99, 115, 88, 100, 116, \
88, 100, 116, 88, 100, 115, 88, 100, 116, 88, \
100, 118, 78, 90, 113, 86, 99, 113, 85, 97, \
114, 83, 95, 112, 79, 95, 108, 78, 92, 107, \
77, 89, 105, 76, 87, 102, 73, 85, 99, 71, \
83, 97, 72, 81, 97, 68, 77, 92, 65, 75, \
88, 68, 77, 92, 69, 80, 96, 72, 82, 97, \
76, 85, 100, 75, 86, 102, 77, 89, 106, 79, \
91, 107, 82, 94, 110, 84, 98, 113, 86, 99, \
115, 88, 100, 116, 89, 101, 118, 91, 103, 119, \
92, 104, 120, 92, 105, 121, 93, 105, 121, 91, \
103, 119, 91, 103, 119, 104, 114, 130, 90, 101, \
118, 89, 100, 114, 87, 93, 104, 97, 91, 102, \
97, 88, 99, 88, 92, 105, 80, 94, 107, 79, \
91, 106, 74, 87, 103, 73, 84, 100, 72, 81, \
95, 66, 76, 88, 63, 72, 83, 62, 73, 81, \
63, 74, 83, 61, 74, 81, 65, 77, 86, 68, \
80, 90, 72, 84, 94, 72, 85, 94, 74, 87, \
97, 76, 89, 99, 78, 91, 101, 79, 93, 103, \
82, 96, 106, 83, 97, 107, 84, 98, 108, 86, \
100, 112, 87, 100, 112, 84, 97, 108, 82, 95, \
104, 94, 104, 127, 85, 98, 110, 82, 92, 103, \
79, 84, 91, 92, 81, 90, 95, 79, 89, 85, \
85, 96, 76, 87, 101, 74, 83, 98, 76, 85, \
98, 73, 81, 94, 71, 80, 94, 68, 77, 90, \
61, 70, 81, 51, 63, 58, 53, 65, 61, 53, \
67, 62, 55, 69, 65, 58, 70, 68, 61, 72, \
70, 62, 74, 72, 64, 76, 75, 66, 78, 77, \
68, 80, 79, 68, 82, 80, 70, 83, 82, 70, \
84, 82, 71, 87, 83, 72, 88, 85, 71, 87, \
85, 81, 96, 96, 77, 91, 92, 91, 103, 124, \
74, 89, 93, 73, 87, 86, 70, 85, 84, 68, \
85, 83, 68, 86, 83, 67, 85, 84, 68, 80, \
81, 66, 78, 78, 91, 70, 72, 89, 68, 67, \
62, 73, 77, 63, 75, 82, 62, 73, 81, 51, \
64, 59, 55, 67, 63, 56, 68, 64, 58, 70, \
68, 61, 71, 70, 63, 74, 73, 65, 75, 74, \
66, 78, 76, 67, 79, 78, 69, 81, 79, 71, \
83, 81, 72, 84, 82, 72, 85, 82, 71, 86, \
83, 72, 87, 85, 74, 88, 88, 75, 88, 89, \
84, 94, 97, 88, 100, 123, 76, 89, 93, 75, \
88, 88, 73, 87, 87, 73, 86, 86, 72, 84, \
85, 71, 84, 83, 70, 82, 80, 69, 79, 80, \
69, 76, 76, 66, 72, 73, 58, 71, 65, 55, \
69, 63, 53, 68, 62, 52, 64, 62, 55, 66, \
66, 57, 69, 69, 59, 70, 73, 62, 73, 75, \
64, 75, 76, 66, 77, 78, 68, 78, 80, 70, \
80, 82, 71, 81, 83, 71, 83, 85, 73, 84, \
86, 76, 88, 90, 76, 89, 92, 78, 91, 95, \
84, 94, 103, 86, 93, 100, 103, 108, 114, 114, \
125, 144, 98, 107, 111, 88, 98, 101, 81, 91, \
96, 88, 95, 98, 79, 86, 89, 73, 82, 83, \
70, 79, 82, 66, 78, 76, 63, 76, 71, 61, \
71, 68, 58, 70, 66, 56, 68, 62, 54, 66, \
58, 55, 66, 60, 57, 68, 63, 59, 70, 67, \
61, 72, 69, 64, 74, 71, 67, 75, 72, 69, \
77, 74, 70, 78, 75, 71, 79, 77, 72, 81, \
78, 72, 82, 79, 73, 84, 80, 74, 85, 80, \
75, 86, 81, 76, 86, 82, 76, 87, 84, 74, \
85, 80, 91, 101, 104, 91, 105, 127, 75, 87, \
84, 74, 84, 78, 73, 82, 77, 71, 81, 76, \
69, 80, 74, 67, 77, 71, 67, 75, 71, 64, \
75, 72, 65, 74, 71, 62, 72, 69, 58, 70, \
67, 56, 68, 65, 56, 67, 64, 54, 65, 57, \
56, 68, 59, 58, 69, 61, 61, 72, 64, 63, \
74, 67, 65, 76, 71, 68, 79, 74, 68, 79, \
76, 71, 82, 80, 74, 85, 83, 75, 88, 86, \
77, 90, 88, 79, 92, 92, 82, 94, 97, 83, \
95, 98, 85, 97, 101, 86, 97, 99, 109, 118, \
127, 96, 109, 128, 85, 96, 105, 88, 99, 108, \
87, 99, 106, 86, 98, 107, 86, 97, 108, 84, \
96, 107, 83, 95, 106, 82, 93, 106, 79, 91, \
104, 77, 88, 101, 76, 85, 99, 74, 82, 96, \
72, 79, 94, 69, 78, 88, 72, 81, 92, 75, \
84, 96, 79, 87, 100, 80, 90, 104, 82, 93, \
108, 86, 97, 112, 88, 99, 114, 90, 101, 116, \
93, 104, 119, 95, 107, 121, 97, 109, 123, 98, \
110, 124, 100, 112, 125, 101, 113, 127, 102, 113, \
126, 103, 113, 125, 112, 121, 141, 96, 108, 134, \
98, 108, 124, 97, 108, 119, 94, 106, 117, 92, \
104, 116, 91, 101, 114, 88, 98, 110, 86, 96, \
107, 84, 93, 105, 81, 90, 103, 77, 87, 99, \
75, 85, 97, 73, 82, 95, 70, 78, 90, 71, \
78, 94, 74, 81, 96, 75, 84, 98, 77, 86, \
101, 79, 89, 103, 81, 91, 105, 84, 94, 108, \
87, 97, 109, 89, 99, 111, 91, 101, 113, 93, \
103, 113, 94, 105, 115, 95, 105, 117, 97, 107, \
119, 98, 108, 120, 100, 108, 119, 100, 110, 121, \
102, 114, 138, 80, 96, 124, 96, 107, 117, 98, \
106, 117, 96, 105, 116, 94, 103, 116, 92, 102, \
113, 90, 100, 110, 88, 98, 109, 86, 96, 108, \
83, 94, 107, 81, 92, 104, 77, 90, 102, 74, \
86, 99, 72, 82, 95, 72, 80, 93, 74, 84, \
97, 78, 86, 100, 81, 89, 105, 83, 92, 107, \
86, 95, 110, 89, 98, 113, 91, 102, 116, 93, \
104, 118, 97, 107, 123, 97, 108, 123, 100, 110, \
125, 102, 109, 127, 104, 114, 131, 105, 115, 132, \
104, 116, 132, 108, 119, 135, 104, 120, 149, 75, \
91, 122, 101, 116, 130, 101, 113, 131, 100, 111, \
129, 98, 110, 126, 95, 108, 125, 92, 106, 124, \
90, 104, 122, 88, 101, 120, 85, 97, 115, 82, \
95, 113, 78, 91, 109, 75, 88, 105, 72, 84, \
100, 74, 85, 103, 76, 89, 106, 78, 93, 111, \
81, 96, 112, 83, 98, 116, 87, 101, 121, 89, \
103, 123, 92, 106, 125, 94, 109, 127, 95, 110, \
128, 97, 112, 130, 99, 113, 132, 101, 113, 133, \
100, 115, 132, 100, 115, 131, 99, 113, 129, 110, \
122, 132, 101, 116, 155, 69, 85, 115, 94, 109, \
116, 91, 106, 113, 87, 101, 108, 83, 98, 102, \
80, 94, 97, 77, 90, 93, 72, 85, 87, 70, \
82, 80, 66, 78, 75, 63, 75, 71, 59, 72, \
65, 56, 69, 61, 52, 65, 56, 62, 76, 80, \
66, 80, 84, 69, 82, 90, 69, 83, 88, 70, \
83, 86, 70, 84, 86, 70, 84, 86, 72, 84, \
83, 72, 85, 80, 72, 85, 78, 74, 87, 80, \
75, 87, 80, 77, 89, 83, 75, 87, 80, 74, \
87, 77, 67, 81, 69, 95, 107, 95, 93, 110, \
151, 56, 74, 94, 68, 82, 70, 67, 81, 66, \
67, 81, 64, 64, 79, 61, 63, 77, 59, 61, \
73, 57, 59, 71, 56, 58, 71, 56, 57, 69, \
54, 55, 68, 53, 54, 66, 52, 52, 64, 51, \
50, 62, 49, 51, 63, 47, 54, 65, 50, 53, \
65, 51, 53, 65, 52, 54, 66, 52, 57, 68, \
53, 59, 70, 55, 62, 73, 59, 64, 75, 62, \
64, 75, 62, 60, 70, 60, 63, 72, 62, 59, \
71, 58, 66, 77, 64, 84, 94, 84, 90, 101, \
92, 157, 166, 160, 117, 135, 173, 65, 82, 104, \
70, 81, 65, 70, 82, 68, 69, 81, 69, 69, \
80, 67, 67, 78, 66, 64, 75, 64, 61, 73, \
62, 58, 70, 59, 57, 69, 58, 55, 67, 56, \
53, 64, 53, 51, 62, 53, 50, 61, 52, 51, \
60, 52, 53, 63, 54, 53, 66, 54, 55, 67, \
56, 58, 69, 58, 57, 69, 59, 57, 69, 60, \
55, 66, 54, 59, 70, 61, 83, 92, 92, 102, \
112, 112, 108, 118, 117, 139, 150, 151, 163, 173, \
179, 186, 194, 203, 197, 206, 215, 202, 209, 219, \
173, 186, 208, 90, 110, 155, 77, 95, 103, 66, \
76, 63, 65, 74, 62, 63, 72, 61, 58, 69, \
56, 57, 70, 55, 56, 69, 56, 55, 67, 53, \
55, 67, 53, 54, 65, 54, 51, 63, 52, 49, \
60, 50, 47, 58, 49, 47, 57, 48, 49, 59, \
50, 49, 62, 50, 53, 65, 52, 48, 59, 46, \
54, 66, 55, 73, 84, 78, 96, 106, 104, 128, \
137, 138, 159, 167, 174, 189, 197, 207, 202, 210, \
221, 205, 213, 223, 202, 211, 220, 198, 206, 217, \
192, 204, 211, 196, 206, 212, 137, 154, 180, 87, \
113, 160, 81, 104, 139, 72, 84, 79, 75, 87, \
81, 78, 90, 84, 79, 90, 86, 81, 91, 89, \
80, 89, 89, 76, 87, 85, 73, 83, 80, 68, \
79, 73, 50, 62, 51, 48, 60, 48, 47, 59, \
47, 46, 56, 47, 47, 57, 48, 50, 61, 51, \
48, 59, 50, 92, 102, 101, 167, 176, 180, 194, \
203, 210, 195, 203, 214, 196, 204, 216, 198, 206, \
217, 193, 201, 211, 191, 199, 208, 195, 203, 213, \
193, 202, 212, 190, 199, 209, 188, 196, 205, 159, \
171, 189, 76, 103, 160, 73, 98, 151, 94, 113, \
135, 102, 109, 113, 94, 100, 102, 86, 92, 93, \
76, 85, 78, 70, 80, 70, 64, 74, 64, 60, \
70, 60, 58, 69, 57, 55, 66, 52, 54, 66, \
52, 52, 64, 50, 50, 62, 49, 45, 55, 47, \
48, 57, 49, 47, 55, 48, 98, 106, 106, 198, \
206, 216, 209, 218, 228, 203, 212, 221, 192, 201, \
210, 187, 196, 208, 185, 195, 204, 179, 188, 197, \
183, 192, 201, 158, 167, 177, 143, 151, 162, 180, \
189, 197, 159, 171, 186, 81, 100, 147, 74, 94, \
135, 71, 97, 134, 75, 97, 112, 65, 75, 60, \
66, 74, 60, 65, 74, 60, 65, 75, 63, 65, \
74, 62, 63, 73, 60, 60, 70, 56, 57, 68, \
54, 56, 67, 54, 54, 66, 52, 52, 64, 50, \
51, 62, 50, 48, 59, 47, 51, 63, 50, 59, \
71, 61, 170, 179, 184, 203, 212, 222, 207, 216, \
224, 201, 210, 216, 192, 201, 208, 186, 193, 203, \
171, 176, 188, 156, 165, 178, 176, 185, 195, 161, \
171, 179, 162, 171, 178, 144, 156, 169, 86, 104, \
136, 71, 90, 127, 64, 90, 131, 85, 118, 149, \
100, 114, 115, 68, 79, 61, 69, 80, 64, 68, \
80, 64, 67, 76, 61, 66, 74, 58, 61, 72, \
56, 60, 72, 56, 57, 69, 54, 54, 66, 52, \
51, 63, 49, 49, 61, 47, 48, 61, 47, 43, \
58, 42, 41, 58, 39, 71, 85, 80, 117, 127, \
136, 141, 150, 160, 142, 152, 161, 141, 151, 160, \
165, 175, 184, 176, 184, 194, 162, 169, 178, 149, \
159, 166, 146, 154, 163, 159, 166, 174, 118, 132, \
152, 62, 81, 130, 57, 74, 123, 56, 83, 128, \
80, 114, 143, 134, 147, 152, 90, 99, 87, 65, \
79, 59, 66, 79, 58, 65, 78, 56, 64, 76, \
54, 62, 74, 52, 59, 71, 51, 58, 71, 52, \
55, 68, 49, 54, 67, 48, 51, 64, 45, 49, \
62, 42, 47, 60, 41, 100, 115, 118, 83, 99, \
97, 103, 117, 121, 95, 106, 119, 100, 110, 119, \
90, 100, 110, 98, 108, 118, 123, 134, 143, 166, \
176, 185, 144, 154, 164, 141, 150, 161, 149, 158, \
165, 113, 123, 142, 56, 71, 117, 52, 69, 119, \
57, 84, 126, 91, 119, 139, 138, 143, 153, 123, \
126, 129, 69, 85, 65, 66, 82, 59, 66, 81, \
58, 65, 80, 57, 64, 78, 58, 63, 76, 58, \
61, 73, 58, 59, 71, 57, 56, 69, 55, 56, \
68, 54, 57, 70, 57, 57, 70, 57, 57, 71, \
59, 101, 111, 121, 140, 151, 160, 159, 170, 179, \
195, 205, 214, 204, 213, 223, 196, 205, 214, 185, \
195, 202, 172, 181, 190, 159, 169, 178, 148, 157, \
165, 151, 161, 167, 112, 125, 143, 65, 79, 117, \
55, 70, 110, 61, 90, 129, 96, 119, 138, 125, \
128, 132, 112, 118, 122, 97, 110, 119, 98, 111, \
128, 108, 118, 133, 110, 118, 133, 109, 117, 133, \
115, 123, 135, 119, 128, 138, 121, 133, 142, 128, \
139, 149, 132, 142, 152, 135, 145, 155, 136, 147, \
156, 136, 147, 156, 132, 143, 153, 102, 111, 119, \
61, 69, 79, 139, 149, 156, 188, 198, 205, 195, \
205, 214, 182, 191, 199, 165, 174, 182, 156, 163, \
171, 141, 148, 157, 124, 133, 143, 74, 86, 108, \
55, 69, 100, 56, 76, 108, 72, 111, 154, 124, \
139, 154, 151, 161, 168, 150, 159, 169, 156, 163, \
174, 161, 170, 179, 160, 168, 175, 147, 155, 163, \
139, 149, 154, 152, 163, 170, 145, 154, 162, 137, \
145, 153, 127, 137, 144, 119, 127, 133, 111, 117, \
125, 99, 106, 112, 90, 98, 105, 78, 86, 94, \
73, 81, 90, 96, 105, 113, 88, 98, 108, 117, \
126, 135, 171, 181, 190, 176, 186, 193, 162, 172, \
178, 143, 151, 158, 135, 145, 151, 99, 110, 124, \
45, 55, 79, 39, 48, 73, 59, 69, 86, 76, \
90, 103, 75, 92, 103, 127, 137, 140, 142, 150, \
157, 135, 143, 151, 121, 130, 138, 114, 122, 130, \
148, 156, 164, 83, 90, 97, 59, 65, 70, 81, \
87, 94, 61, 69, 78, 58, 65, 74, 58, 65, \
74, 44, 53, 59, 67, 75, 84, 66, 74, 83, \
71, 79, 88, 70, 76, 88, 69, 75, 88, 21, \
27, 34, 70, 81, 91, 74, 83, 93, 99, 107, \
115, 109, 117, 126, 109, 118, 126, 99, 106, 115, \
80, 87, 98, 55, 63, 77, 54, 62, 77, 63, \
70, 79, 60, 68, 75, 67, 74, 84, 54, 58, \
65, 45, 53, 61, 42, 48, 55, 26, 33, 41, \
43, 49, 57, 68, 73, 80, 105, 112, 120, 135, \
143, 153, 86, 94, 103, 88, 96, 106, 86, 94, \
105, 86, 93, 105, 84, 92, 103, 62, 72, 80, \
78, 88, 99, 75, 85, 97, 73, 81, 93, 70, \
78, 90, 67, 75, 87, 17, 20, 25, 41, 51, \
58, 51, 61, 68, 49, 56, 61, 53, 60, 65, \
58, 65, 72, 59, 65, 72, 57, 62, 67, 50, \
56, 61, 52, 59, 65, 50, 58, 66, 35, 44, \
50, 41, 51, 55, 51, 62, 64, 64, 70, 80, \
83, 92, 104, 62, 71, 81, 76, 85, 94, 33, \
39, 48, 17, 21, 30, 94, 101, 110, 112, 124, \
135, 84, 95, 106, 85, 94, 105, 83, 92, 102, \
83, 91, 102, 82, 91, 101, 80, 89, 101, 80, \
89, 100, 78, 87, 99, 77, 86, 97, 76, 84, \
95, 21, 25, 31, 32, 40, 47, 59, 67, 77, \
58, 64, 73, 42, 47, 51, 42, 49, 50, 44, \
51, 53, 48, 57, 62, 63, 73, 80, 77, 86, \
98, 78, 87, 101, 63, 73, 83, 68, 78, 88, \
83, 89, 105, 90, 99, 112, 93, 102, 115, 95, \
105, 115, 66, 76, 84, 19, 27, 36, 19, 25, \
35, 47, 54, 63, 105, 115, 124, 95, 103, 111, \
93, 102, 111, 92, 100, 111, 91, 99, 110, 90, \
99, 109, 88, 97, 106, 85, 95, 104, 84, 94, \
103, 82, 92, 101, 79, 88, 98, 30, 37, 43, \
39, 47, 54, 67, 75, 88, 67, 74, 87, 26, \
30, 37, 28, 32, 38, 49, 55, 62, 78, 88, \
99, 83, 93, 105, 87, 97, 108, 88, 98, 110, \
92, 102, 114, 94, 104, 115, 95, 103, 114, 95, \
103, 112, 95, 104, 114, 89, 98, 107, 59, 66, \
73, 30, 37, 45, 14, 21, 31, 48, 55, 63, \
92, 99, 108, 93, 100, 110, 92, 98, 106, 92, \
97, 107, 92, 97, 107, 91, 98, 108, 88, 95, \
105, 85, 92, 102, 81, 91, 101, 78, 88, 98, \
75, 85, 95, 60, 67, 79, 73, 82, 93, 78, \
87, 99, 73, 81, 92, 22, 26, 35, 33, 39, \
48, 53, 59, 68, 93, 102, 115, 92, 102, 113, \
93, 103, 113, 93, 103, 115, 93, 103, 115, 93, \
102, 114, 92, 101, 112, 91, 100, 110, 90, 101, \
111, 70, 80, 89, 21, 27, 34, 53, 59, 66, \
39, 45, 53, 53, 59, 66, 76, 85, 97, 88, \
93, 99, 92, 93, 98, 80, 88, 99, 81, 90, \
100, 83, 88, 99, 82, 86, 97, 80, 85, 95, \
81, 86, 93, 79, 84, 91, 76, 81, 89, 70, \
79, 91, 71, 80, 93, 74, 84, 95, 70, 78, \
89, 29, 35, 45, 48, 55, 64, 51, 59, 68, \
85, 94, 106, 83, 93, 104, 83, 93, 105, 82, \
92, 104, 80, 90, 102, 73, 82, 94, 63, 72, \
83, 64, 73, 83, 63, 72, 81, 46, 56, 65, \
26, 34, 44, 32, 40, 48, 58, 65, 75, 76, \
82, 90, 87, 92, 101, 93, 94, 98, 88, 89, \
95, 81, 88, 97, 81, 88, 96, 79, 84, 93, \
78, 83, 92, 79, 84, 92, 82, 86, 92, 81, \
84, 90, 78, 82, 87, 42, 51, 56, 47, 57, \
64, 52, 62, 71, 50, 59, 68, 31, 39, 47, \
23, 29, 37, 36, 44, 51, 45, 54, 61, 46, \
55, 63, 50, 58, 68, 47, 57, 66, 43, 53, \
62, 44, 53, 61, 39, 47, 52, 43, 50, 55, \
45, 50, 54, 41, 46, 51, 37, 41, 48, 35, \
41, 48, 60, 66, 74, 76, 81, 89, 80, 83, \
90, 80, 85, 94, 81, 86, 98, 83, 87, 98, \
82, 87, 97, 80, 87, 97, 78, 86, 96, 77, \
85, 95, 76, 84, 93, 74, 82, 91, 72, 79, \
89, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '4964';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1ad78e69ae9b6106ed0b7e6784ba270f06';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_dog6';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{165, 199, 99, 166, 197, 110, 173, 204, 121, 187, 219, \
132, 169, 195, 118, 172, 190, 122, 190, 209, 131, \
197, 220, 139, 180, 211, 140, 171, 210, 152, 120, \
160, 123, 76, 108, 97, 65, 86, 97, 69, 83, \
95, 76, 85, 82, 86, 101, 72, 95, 117, 72, \
121, 145, 94, 144, 172, 106, 130, 165, 78, 146, \
183, 77, 167, 200, 78, 183, 208, 87, 198, 218, \
99, 189, 212, 92, 160, 190, 69, 146, 182, 66, \
165, 201, 89, 181, 212, 102, 186, 211, 105, 172, \
192, 88, 174, 192, 89, 152, 189, 100, 156, 192, \
106, 161, 197, 111, 168, 204, 117, 182, 213, 143, \
182, 205, 153, 185, 205, 145, 188, 206, 150, 178, \
198, 164, 124, 148, 139, 67, 91, 114, 51, 71, \
114, 49, 65, 116, 60, 74, 119, 74, 87, 116, \
81, 95, 110, 82, 96, 105, 78, 93, 91, 85, \
104, 81, 107, 129, 81, 133, 160, 86, 147, 176, \
71, 164, 187, 77, 183, 201, 90, 179, 201, 84, \
157, 187, 65, 151, 186, 77, 162, 196, 98, 175, \
205, 104, 172, 197, 95, 164, 184, 80, 171, 189, \
84, 152, 194, 107, 159, 202, 113, 152, 194, 110, \
150, 191, 111, 155, 192, 130, 161, 192, 141, 173, \
196, 139, 194, 209, 163, 142, 152, 143, 69, 78, \
103, 53, 66, 100, 51, 63, 100, 61, 70, 104, \
80, 85, 107, 101, 104, 110, 124, 120, 126, 146, \
134, 149, 131, 123, 136, 106, 104, 107, 114, 118, \
107, 128, 140, 108, 132, 153, 94, 155, 172, 104, \
165, 178, 103, 172, 189, 104, 156, 182, 88, 151, \
183, 95, 155, 186, 101, 174, 202, 111, 184, 208, \
109, 156, 176, 70, 162, 181, 76, 117, 164, 73, \
145, 192, 101, 141, 186, 105, 133, 176, 110, 134, \
176, 118, 148, 187, 126, 181, 209, 142, 170, 185, \
136, 93, 97, 95, 67, 67, 103, 54, 58, 85, \
60, 63, 78, 85, 79, 86, 100, 87, 79, 123, \
103, 80, 150, 118, 90, 177, 136, 119, 185, 151, \
148, 146, 122, 130, 132, 118, 129, 133, 130, 137, \
114, 125, 118, 110, 118, 104, 133, 138, 113, 148, \
157, 118, 148, 167, 115, 151, 179, 114, 149, 180, \
104, 166, 193, 108, 191, 215, 119, 177, 198, 90, \
176, 196, 92, 80, 128, 39, 122, 170, 83, 130, \
176, 100, 110, 154, 94, 134, 178, 112, 151, 193, \
117, 141, 171, 115, 69, 83, 53, 86, 81, 78, \
101, 87, 100, 89, 80, 92, 89, 80, 87, 98, \
79, 77, 104, 72, 56, 137, 92, 63, 162, 102, \
60, 182, 114, 72, 210, 150, 125, 189, 146, 140, \
138, 117, 129, 119, 117, 134, 105, 108, 118, 75, \
76, 80, 101, 101, 97, 133, 135, 121, 143, 149, \
126, 153, 173, 123, 157, 186, 112, 154, 180, 94, \
164, 190, 90, 164, 192, 81, 162, 186, 83, 120, \
165, 80, 134, 179, 97, 123, 167, 94, 109, 150, \
91, 120, 156, 94, 125, 154, 91, 70, 88, 56, \
53, 54, 46, 120, 101, 93, 145, 112, 98, 145, \
115, 102, 125, 99, 88, 94, 65, 51, 93, 53, \
33, 122, 71, 41, 143, 81, 33, 176, 108, 52, \
210, 146, 101, 202, 157, 128, 148, 132, 120, 104, \
108, 108, 104, 107, 110, 73, 74, 76, 83, 83, \
80, 117, 116, 108, 131, 129, 116, 156, 169, 128, \
169, 192, 123, 152, 176, 91, 154, 180, 83, 158, \
186, 83, 145, 170, 71, 132, 172, 92, 138, 178, \
101, 127, 165, 96, 113, 150, 95, 112, 135, 92, \
87, 93, 65, 47, 44, 34, 87, 69, 69, 153, \
118, 105, 172, 123, 93, 167, 117, 78, 128, 84, \
48, 88, 50, 20, 88, 50, 21, 98, 58, 25, \
115, 69, 25, 152, 100, 48, 187, 135, 91, 153, \
113, 81, 117, 102, 82, 108, 111, 104, 112, 117, \
120, 94, 98, 101, 76, 77, 75, 106, 103, 97, \
123, 118, 108, 139, 142, 110, 154, 167, 112, 140, \
158, 89, 181, 202, 121, 194, 211, 130, 156, 174, \
87, 123, 155, 89, 121, 152, 89, 105, 135, 81, \
95, 124, 83, 78, 92, 69, 46, 43, 39, 37, \
26, 33, 89, 65, 70, 166, 126, 109, 182, 130, \
90, 151, 96, 48, 107, 60, 19, 77, 43, 13, \
64, 37, 13, 54, 29, 8, 60, 31, 13, 91, \
53, 38, 120, 76, 65, 100, 61, 56, 89, 69, \
72, 81, 77, 84, 93, 93, 95, 101, 99, 97, \
87, 79, 74, 104, 89, 81, 140, 122, 110, 143, \
131, 109, 143, 143, 106, 101, 112, 60, 126, 139, \
79, 208, 211, 155, 186, 192, 126, 125, 150, 102, \
123, 147, 101, 115, 137, 101, 79, 100, 77, 37, \
50, 40, 20, 23, 28, 26, 21, 34, 70, 52, \
60, 136, 103, 83, 170, 125, 81, 121, 75, 37, \
77, 43, 17, 48, 28, 13, 23, 12, 5, 15, \
8, 4, 21, 8, 10, 32, 7, 15, 63, 28, \
34, 107, 72, 79, 107, 85, 96, 115, 106, 114, \
110, 103, 97, 105, 93, 82, 86, 67, 55, 124, \
96, 82, 168, 134, 119, 138, 110, 96, 128, 117, \
95, 105, 110, 72, 93, 100, 56, 181, 174, 139, \
219, 212, 171, 134, 151, 118, 117, 133, 102, 82, \
94, 76, 39, 47, 46, 26, 30, 36, 18, 21, \
30, 26, 30, 43, 49, 49, 57, 70, 57, 48, \
92, 68, 43, 82, 56, 35, 75, 54, 40, 37, \
25, 18, 20, 12, 11, 24, 17, 18, 28, 21, \
19, 30, 16, 15, 62, 35, 36, 104, 73, 71, \
108, 82, 87, 126, 108, 120, 139, 121, 121, 147, \
123, 120, 107, 74, 61, 138, 97, 70, 191, 143, \
117, 134, 99, 86, 111, 98, 85, 119, 121, 96, \
103, 108, 74, 129, 121, 87, 196, 189, 147, 139, \
153, 125, 94, 103, 82, 38, 40, 35, 22, 18, \
34, 35, 25, 46, 36, 29, 43, 37, 43, 55, \
35, 47, 57, 34, 38, 42, 30, 21, 20, 60, \
43, 35, 74, 57, 49, 57, 42, 39, 67, 53, \
55, 74, 62, 68, 79, 73, 69, 61, 50, 44, \
65, 41, 31, 119, 91, 63, 177, 152, 126, 176, \
152, 144, 168, 141, 139, 167, 132, 139, 124, 79, \
70, 137, 85, 48, 205, 146, 111, 162, 124, 108, \
105, 92, 82, 109, 107, 89, 114, 119, 88, 125, \
126, 80, 159, 161, 106, 123, 139, 108, 73, 81, \
62, 24, 24, 23, 32, 24, 43, 45, 31, 49, \
46, 35, 42, 37, 39, 47, 25, 33, 40, 27, \
26, 30, 46, 32, 32, 88, 63, 60, 82, 56, \
57, 68, 49, 59, 83, 71, 90, 75, 69, 94, \
70, 60, 74, 85, 68, 63, 143, 123, 87, 212, \
193, 106, 239, 223, 115, 242, 226, 136, 217, 193, \
148, 155, 119, 105, 101, 56, 41, 113, 60, 27, \
184, 125, 94, 164, 120, 104, 121, 96, 85, 113, \
100, 83, 123, 121, 90, 133, 138, 91, 138, 148, \
93, 92, 111, 82, 40, 49, 36, 22, 19, 21, \
41, 29, 43, 56, 39, 48, 45, 30, 29, 28, \
26, 28, 31, 34, 38, 43, 36, 39, 76, 56, \
56, 106, 71, 68, 87, 53, 53, 71, 45, 55, \
72, 55, 75, 66, 56, 83, 59, 41, 61, 86, \
61, 55, 189, 171, 108, 246, 234, 97, 244, 232, \
60, 250, 235, 79, 248, 232, 134, 188, 159, 114, \
99, 58, 36, 90, 42, 13, 158, 105, 76, 167, \
124, 109, 138, 107, 98, 125, 100, 89, 112, 100, \
77, 125, 125, 86, 135, 148, 98, 47, 68, 50, \
18, 27, 21, 24, 21, 20, 47, 35, 33, 66, \
47, 40, 45, 26, 19, 15, 9, 7, 25, 24, \
24, 42, 30, 33, 70, 45, 44, 112, 75, 60, \
130, 92, 75, 106, 73, 63, 83, 53, 50, 68, \
42, 43, 67, 36, 42, 92, 62, 49, 188, 170, \
93, 240, 231, 76, 244, 228, 46, 247, 226, 55, \
248, 240, 99, 231, 215, 138, 110, 80, 50, 73, \
37, 10, 129, 90, 61, 149, 117, 103, 114, 84, \
82, 123, 91, 91, 100, 74, 68, 85, 71, 51, \
121, 127, 87, 27, 42, 39, 18, 25, 26, 29, \
27, 23, 50, 42, 29, 69, 52, 33, 47, 27, \
11, 14, 7, 0, 12, 9, 7, 33, 20, 22, \
85, 56, 55, 142, 99, 75, 165, 121, 88, 139, \
98, 68, 104, 65, 40, 77, 41, 21, 69, 31, \
24, 95, 63, 43, 189, 170, 89, 240, 229, 81, \
243, 225, 55, 245, 225, 61, 241, 240, 89, 225, \
217, 131, 110, 90, 56, 75, 48, 22, 104, 76, \
48, 119, 95, 84, 87, 61, 65, 105, 73, 80, \
92, 61, 66, 74, 48, 46, 117, 113, 87, 23, \
24, 35, 18, 19, 23, 21, 22, 16, 35, 36, \
22, 61, 51, 29, 53, 34, 14, 11, 6, 0, \
4, 4, 2, 47, 36, 36, 101, 72, 69, 153, \
104, 79, 178, 128, 91, 156, 112, 74, 116, 78, \
46, 78, 44, 23, 66, 29, 21, 77, 42, 19, \
163, 138, 62, 239, 222, 95, 241, 228, 74, 241, \
232, 75, 240, 239, 117, 192, 183, 122, 82, 62, \
39, 76, 51, 30, 82, 55, 33, 90, 65, 60, \
67, 44, 50, 64, 40, 46, 70, 46, 52, 73, \
48, 55, 126, 112, 103, 31, 29, 39, 15, 14, \
18, 16, 17, 12, 21, 24, 12, 44, 36, 23, \
56, 39, 28, 17, 12, 6, 3, 2, 0, 44, \
35, 27, 101, 79, 68, 127, 95, 71, 134, 98, \
67, 112, 75, 43, 93, 53, 25, 95, 51, 32, \
105, 54, 41, 113, 62, 33, 172, 135, 63, 228, \
204, 91, 245, 233, 94, 244, 239, 98, 223, 217, \
120, 154, 139, 100, 70, 48, 36, 78, 54, 40, \
69, 43, 30, 76, 52, 50, 60, 37, 41, 50, \
28, 31, 63, 41, 45, 73, 50, 55, 105, 87, \
80, 33, 32, 39, 20, 20, 22, 20, 20, 17, \
18, 20, 12, 22, 16, 10, 46, 33, 31, 28, \
21, 15, 9, 6, 0, 90, 83, 68, 117, 105, \
86, 72, 62, 43, 56, 40, 21, 63, 35, 15, \
109, 68, 46, 150, 99, 76, 164, 103, 72, 164, \
105, 52, 156, 112, 34, 204, 177, 71, 244, 233, \
105, 238, 233, 108, 199, 186, 114, 135, 114, 92, \
74, 50, 46, 72, 49, 38, 72, 50, 41, 66, \
44, 43, 56, 35, 35, 52, 31, 31, 65, 43, \
44, 82, 61, 62, 118, 98, 90, 24, 24, 27, \
25, 25, 26, 32, 32, 30, 26, 27, 23, 21, \
17, 15, 33, 25, 23, 45, 39, 28, 101, 98, \
80, 125, 120, 101, 55, 51, 36, 24, 25, 17, \
37, 33, 27, 65, 45, 37, 133, 96, 79, 189, \
141, 112, 182, 127, 85, 167, 114, 59, 158, 116, \
51, 202, 174, 96, 206, 193, 101, 192, 183, 93, \
170, 151, 100, 116, 90, 78, 70, 46, 42, 62, \
42, 27, 70, 51, 39, 52, 32, 28, 65, 44, \
41, 76, 55, 52, 81, 60, 57, 103, 82, 80, \
128, 112, 99, 20, 20, 21, 23, 23, 24, 33, \
33, 33, 30, 31, 29, 26, 25, 23, 30, 26, \
19, 107, 101, 86, 134, 127, 109, 44, 39, 26, \
12, 10, 5, 6, 8, 11, 22, 20, 25, 62, \
46, 45, 107, 78, 61, 142, 103, 69, 127, 81, \
46, 123, 75, 46, 121, 81, 51, 125, 94, 61, \
124, 101, 64, 144, 125, 82, 166, 141, 103, 128, \
100, 86, 59, 35, 27, 67, 50, 30, 70, 55, \
38, 48, 30, 23, 59, 38, 35, 91, 69, 66, \
110, 88, 83, 114, 91, 88, 125, 113, 95, 12, \
12, 13, 11, 11, 11, 19, 19, 19, 28, 28, \
28, 33, 31, 30, 30, 22, 22, 65, 51, 51, \
62, 46, 46, 28, 16, 16, 26, 19, 21, 13, \
8, 16, 18, 10, 15, 51, 37, 32, 84, 65, \
46, 76, 52, 21, 83, 47, 14, 126, 79, 47, \
114, 71, 41, 88, 49, 22, 97, 62, 36, 136, \
104, 74, 165, 133, 96, 121, 91, 68, 52, 28, \
17, 64, 50, 35, 87, 79, 59, 50, 42, 30, \
35, 20, 16, 73, 50, 46, 94, 68, 60, 84, \
59, 48, 96, 87, 59, 7, 7, 7, 11, 11, \
11, 17, 17, 17, 19, 19, 19, 23, 21, 22, \
35, 28, 30, 42, 28, 33, 49, 32, 38, 39, \
27, 31, 29, 24, 27, 14, 9, 15, 28, 21, \
23, 51, 40, 33, 72, 58, 41, 70, 53, 29, \
78, 48, 19, 141, 102, 70, 129, 91, 61, 115, \
79, 50, 134, 101, 75, 139, 107, 79, 119, 91, \
57, 77, 51, 29, 66, 46, 36, 83, 72, 61, \
97, 95, 72, 79, 81, 52, 43, 42, 13, 46, \
35, 6, 66, 53, 16, 86, 76, 34, 97, 103, \
47, 13, 13, 13, 17, 17, 17, 21, 21, 21, \
24, 24, 24, 25, 25, 25, 45, 44, 44, 43, \
35, 37, 38, 26, 30, 30, 24, 26, 23, 23, \
23, 15, 16, 18, 28, 26, 26, 46, 40, 36, \
56, 45, 36, 72, 58, 45, 68, 49, 31, 83, \
58, 39, 105, 81, 61, 143, 119, 100, 142, 118, \
100, 119, 96, 76, 86, 67, 45, 88, 71, 59, \
94, 81, 77, 93, 87, 77, 92, 93, 69, 101, \
113, 63, 92, 105, 42, 95, 101, 37, 106, 113, \
42, 123, 134, 57, 121, 145, 63, 28, 28, 28, \
20, 20, 20, 19, 19, 19, 26, 26, 26, 23, \
26, 25, 23, 28, 26, 24, 22, 22, 26, 21, \
22, 20, 20, 20, 14, 20, 18, 12, 19, 16, \
24, 28, 24, 43, 42, 39, 59, 53, 51, 71, \
60, 60, 74, 64, 60, 77, 69, 61, 95, 85, \
76, 116, 104, 94, 101, 87, 75, 70, 56, 44, \
82, 73, 63, 97, 90, 89, 90, 84, 88, 79, \
79, 71, 73, 79, 53, 78, 93, 37, 101, 118, \
45, 138, 151, 76, 154, 170, 88, 141, 166, 75, \
98, 130, 42, 39, 39, 38, 35, 35, 34, 26, \
27, 27, 24, 24, 24, 21, 25, 24, 10, 17, \
15, 13, 15, 14, 24, 23, 23, 19, 22, 21, \
14, 24, 20, 18, 29, 23, 46, 53, 48, 62, \
64, 64, 78, 74, 78, 82, 75, 81, 61, 58, \
63, 44, 46, 48, 63, 62, 62, 87, 83, 80, \
90, 82, 77, 69, 61, 55, 84, 83, 82, 89, \
89, 96, 72, 72, 79, 71, 74, 68, 88, 95, \
69, 87, 99, 49, 104, 115, 54, 141, 150, 86, \
140, 154, 83, 124, 148, 69, 83, 114, 29, 27, \
28, 23, 35, 35, 34, 40, 40, 42, 29, 28, \
34, 22, 24, 27, 7, 13, 13, 6, 9, 8, \
16, 17, 16, 22, 25, 23, 28, 33, 30, 39, \
42, 37, 57, 58, 54, 74, 73, 71, 94, 91, \
91, 92, 88, 89, 46, 48, 50, 20, 27, 29, \
36, 38, 40, 72, 70, 72, 69, 61, 63, 64, \
56, 59, 85, 86, 93, 89, 88, 95, 91, 85, \
87, 99, 90, 82, 123, 111, 92, 113, 106, 68, \
135, 132, 82, 154, 152, 98, 136, 142, 81, 103, \
120, 51, 70, 95, 14, 9, 10, 4, 11, 11, \
9, 27, 27, 30, 28, 26, 35, 27, 27, 34, \
18, 21, 23, 3, 5, 6, 5, 5, 5, 19, \
18, 16, 46, 43, 41, 51, 50, 49, 43, 42, \
42, 59, 58, 58, 75, 75, 74, 85, 85, 84, \
72, 76, 74, 64, 69, 67, 44, 44, 45, 36, \
32, 33, 37, 26, 30, 57, 45, 50, 66, 62, \
65, 77, 69, 69, 107, 92, 84, 139, 116, 102, \
153, 125, 107, 126, 106, 66, 136, 127, 71, 154, \
151, 94, 111, 117, 55, 94, 108, 44, 89, 110, \
38, 16, 17, 10, 8, 8, 6, 14, 14, 17, \
25, 23, 32, 33, 32, 42, 25, 26, 32, 8, \
7, 10, 7, 2, 3, 18, 9, 7, 38, 28, \
25, 43, 42, 42, 43, 44, 46, 48, 49, 50, \
65, 66, 68, 79, 80, 81, 84, 86, 83, 87, \
88, 82, 67, 63, 60, 31, 22, 20, 28, 13, \
14, 41, 25, 23, 45, 29, 19, 62, 42, 29, \
121, 96, 78, 193, 162, 139, 212, 178, 151, 171, \
147, 100, 132, 123, 62, 144, 144, 84, 108, 117, \
58, 99, 111, 55, 93, 110, 52, 39, 40, 33, \
20, 21, 18, 20, 20, 23, 24, 23, 31, 29, \
28, 39, 28, 26, 38, 23, 18, 25, 22, 9, \
12, 27, 9, 7, 34, 15, 11, 49, 40, 36, \
47, 43, 39, 44, 39, 35, 67, 62, 58, 73, \
69, 65, 58, 54, 47, 51, 47, 38, 48, 39, \
32, 40, 26, 21, 39, 20, 17, 53, 29, 23, \
70, 40, 16, 102, 68, 39, 181, 144, 112, 244, \
204, 170, 247, 204, 168, 205, 174, 131, 145, 133, \
83, 132, 136, 84, 102, 115, 64, 91, 101, 55, \
94, 104, 55, 50, 51, 44, 32, 31, 30, 21, \
20, 24, 24, 23, 31, 26, 24, 37, 33, 30, \
45, 38, 29, 40, 36, 19, 23, 51, 27, 25, \
64, 36, 31, 68, 51, 41, 62, 48, 37, 66, \
51, 40, 80, 66, 54, 83, 68, 56, 59, 49, \
36, 36, 28, 16, 33, 21, 10, 49, 31, 22, \
48, 25, 19, 62, 31, 20, 100, 57, 23, 157, \
110, 68, 228, 181, 139, 253, 205, 161, 240, 191, \
147, 198, 159, 129, 138, 121, 94, 113, 118, 81, \
105, 120, 79, 104, 113, 74, 111, 114, 70, 45, \
58, 37, 44, 53, 36, 28, 31, 26, 24, 22, \
33, 31, 28, 46, 31, 31, 46, 31, 26, 33, \
48, 27, 24, 86, 53, 42, 104, 73, 53, 93, \
69, 43, 101, 80, 55, 104, 86, 64, 79, 65, \
47, 53, 40, 26, 36, 25, 17, 33, 24, 18, \
50, 41, 29, 53, 42, 27, 36, 25, 9, 39, \
21, 3, 73, 35, 4, 127, 83, 44, 199, 152, \
113, 233, 183, 145, 197, 144, 109, 138, 96, 71, \
105, 84, 71, 107, 106, 92, 111, 122, 92, 87, \
95, 53, 94, 98, 49, 52, 79, 42, 65, 84, \
51, 30, 38, 25, 23, 19, 34, 33, 27, 51, \
29, 32, 46, 27, 30, 30, 60, 38, 28, 124, \
85, 63, 138, 107, 72, 112, 91, 49, 113, 96, \
58, 100, 88, 57, 48, 44, 22, 19, 20, 5, \
17, 14, 8, 34, 27, 23, 65, 63, 44, 70, \
71, 42, 48, 53, 21, 47, 47, 16, 72, 50, \
19, 73, 44, 13, 108, 73, 42, 162, 119, 90, \
165, 116, 91, 111, 71, 44, 91, 68, 58, 102, \
96, 98, 102, 109, 85, 91, 97, 50, 105, 111, \
56, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '5274';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a814ff14d84915d20ee5e55dd62ef7640';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_horse3';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{105, 107, 90, 72, 70, 36, 67, 57, 32, 100, 89, \
62, 99, 91, 59, 83, 80, 52, 95, 97, 74, \
119, 125, 108, 136, 152, 151, 156, 189, 202, 166, \
191, 199, 162, 166, 158, 172, 157, 139, 176, 134, \
97, 166, 124, 88, 158, 127, 98, 150, 128, 104, \
143, 138, 109, 116, 118, 78, 107, 105, 69, 88, \
80, 51, 69, 63, 34, 59, 56, 25, 74, 74, \
41, 85, 88, 52, 79, 78, 41, 67, 66, 38, \
54, 56, 35, 74, 79, 54, 72, 74, 33, 76, \
75, 27, 88, 87, 39, 96, 95, 76, 83, 77, \
45, 63, 50, 21, 98, 86, 58, 78, 71, 43, \
61, 60, 36, 82, 86, 66, 107, 113, 101, 133, \
145, 149, 165, 191, 201, 177, 192, 187, 165, 155, \
129, 160, 132, 100, 172, 129, 87, 159, 125, 91, \
149, 122, 93, 144, 111, 72, 126, 104, 60, 107, \
101, 57, 88, 89, 53, 76, 74, 47, 57, 52, \
29, 57, 54, 31, 58, 58, 37, 64, 67, 44, \
67, 65, 37, 61, 59, 34, 60, 63, 35, 93, \
100, 61, 97, 101, 47, 89, 89, 33, 85, 84, \
34, 116, 116, 101, 95, 91, 65, 79, 69, 40, \
90, 81, 54, 64, 59, 35, 73, 73, 53, 95, \
101, 85, 115, 123, 115, 146, 159, 165, 170, 193, \
201, 176, 183, 171, 167, 146, 110, 160, 128, 91, \
171, 135, 97, 158, 137, 110, 158, 133, 104, 164, \
123, 78, 157, 127, 82, 132, 122, 86, 83, 84, \
57, 81, 83, 60, 74, 71, 50, 53, 52, 33, \
71, 73, 58, 52, 54, 40, 59, 57, 36, 62, \
60, 39, 64, 67, 40, 89, 96, 56, 99, 102, \
52, 82, 82, 31, 81, 80, 35, 128, 135, 127, \
91, 93, 77, 80, 76, 52, 74, 69, 44, 59, \
56, 36, 60, 62, 46, 111, 119, 107, 161, 174, \
168, 174, 196, 200, 172, 199, 207, 168, 172, 164, \
157, 131, 99, 169, 145, 113, 173, 155, 128, 164, \
158, 141, 180, 157, 127, 145, 103, 59, 130, 101, \
69, 160, 151, 131, 132, 135, 121, 94, 96, 78, \
76, 76, 50, 54, 56, 34, 75, 80, 65, 46, \
51, 40, 52, 48, 32, 64, 61, 46, 52, 53, \
36, 61, 66, 36, 84, 86, 49, 75, 72, 37, \
62, 59, 24, 119, 130, 118, 100, 105, 89, 86, \
88, 66, 86, 82, 61, 69, 63, 48, 53, 51, \
40, 89, 94, 84, 134, 145, 135, 150, 172, 169, \
172, 197, 200, 172, 172, 161, 156, 126, 94, 163, \
141, 110, 166, 153, 127, 154, 150, 130, 161, 137, \
102, 131, 87, 48, 100, 73, 51, 155, 143, 135, \
163, 159, 153, 108, 112, 93, 72, 74, 43, 53, \
55, 32, 78, 82, 69, 65, 72, 57, 54, 57, \
40, 76, 70, 62, 42, 43, 34, 39, 43, 29, \
84, 83, 69, 91, 87, 72, 70, 68, 45, 93, \
95, 54, 96, 97, 56, 107, 105, 74, 102, 95, \
75, 81, 69, 56, 63, 53, 41, 72, 67, 47, \
83, 84, 57, 95, 100, 78, 130, 139, 120, 138, \
128, 94, 147, 111, 57, 154, 117, 64, 161, 127, \
76, 154, 124, 75, 159, 129, 81, 152, 105, 68, \
122, 89, 59, 142, 106, 85, 158, 118, 100, 133, \
120, 86, 107, 96, 53, 77, 61, 32, 108, 94, \
80, 96, 95, 61, 69, 69, 46, 88, 75, 73, \
39, 41, 30, 74, 87, 80, 152, 156, 163, 135, \
136, 139, 87, 91, 83, 87, 86, 38, 88, 87, \
40, 87, 84, 48, 96, 95, 69, 80, 80, 48, \
82, 82, 39, 75, 74, 33, 79, 76, 41, 77, \
75, 44, 74, 78, 50, 90, 84, 44, 122, 97, \
39, 156, 117, 54, 157, 114, 51, 148, 108, 52, \
182, 152, 109, 198, 176, 149, 164, 128, 96, 186, \
128, 81, 204, 129, 89, 210, 143, 100, 211, 169, \
99, 171, 116, 63, 196, 151, 110, 185, 158, 92, \
141, 90, 57, 74, 50, 36, 44, 35, 15, 105, \
123, 103, 162, 178, 172, 152, 149, 145, 102, 106, \
97, 79, 76, 38, 86, 84, 47, 87, 84, 49, \
97, 92, 63, 87, 86, 42, 94, 97, 34, 79, \
74, 25, 80, 67, 37, 74, 69, 38, 65, 69, \
37, 85, 86, 47, 96, 86, 34, 140, 106, 41, \
153, 107, 41, 151, 107, 54, 173, 146, 115, 227, \
227, 215, 210, 172, 142, 233, 179, 102, 234, 171, \
95, 224, 142, 86, 242, 186, 106, 227, 155, 90, \
216, 159, 101, 237, 203, 116, 219, 146, 89, 157, \
108, 74, 107, 86, 45, 78, 80, 38, 121, 115, \
91, 147, 131, 112, 102, 103, 82, 128, 123, 101, \
150, 145, 123, 132, 128, 100, 110, 97, 73, 115, \
103, 73, 134, 133, 91, 122, 114, 84, 105, 89, \
71, 72, 65, 40, 73, 71, 41, 93, 92, 52, \
114, 107, 57, 145, 111, 50, 166, 115, 49, 161, \
113, 60, 121, 97, 69, 185, 184, 178, 214, 180, \
149, 212, 171, 85, 226, 196, 102, 210, 163, 99, \
208, 163, 103, 231, 183, 132, 206, 163, 121, 227, \
203, 124, 228, 184, 101, 214, 143, 95, 209, 173, \
115, 160, 138, 74, 155, 111, 77, 130, 102, 73, \
85, 81, 50, 235, 228, 226, 233, 226, 223, 137, \
132, 116, 101, 89, 73, 113, 109, 106, 164, 181, \
186, 174, 192, 193, 143, 146, 138, 64, 55, 41, \
63, 53, 27, 117, 106, 66, 210, 198, 150, 211, \
175, 124, 216, 162, 102, 188, 138, 84, 78, 59, \
30, 132, 125, 114, 203, 182, 147, 189, 142, 75, \
221, 177, 102, 227, 196, 140, 211, 176, 142, 209, \
194, 159, 176, 150, 128, 202, 164, 109, 234, 207, \
116, 220, 148, 94, 227, 161, 98, 241, 217, 126, \
205, 159, 109, 132, 89, 59, 74, 69, 27, 189, \
176, 171, 167, 158, 154, 108, 100, 85, 92, 87, \
71, 107, 113, 114, 136, 159, 173, 122, 156, 164, \
105, 130, 128, 64, 59, 56, 87, 67, 45, 179, \
149, 109, 225, 192, 142, 227, 185, 130, 235, 181, \
118, 201, 160, 99, 120, 98, 63, 130, 111, 93, \
166, 153, 116, 194, 151, 103, 215, 160, 111, 225, \
194, 151, 218, 191, 165, 188, 184, 158, 147, 129, \
113, 164, 113, 79, 224, 180, 106, 231, 184, 114, \
216, 144, 74, 229, 199, 108, 213, 185, 127, 159, \
112, 77, 150, 128, 80, 108, 89, 74, 92, 80, \
69, 123, 109, 94, 138, 125, 114, 152, 139, 131, \
136, 126, 117, 100, 103, 99, 86, 97, 100, 88, \
85, 84, 130, 102, 80, 191, 144, 106, 197, 147, \
101, 201, 161, 102, 195, 144, 82, 178, 153, 94, \
118, 98, 65, 97, 68, 57, 61, 42, 20, 112, \
90, 57, 175, 152, 117, 216, 198, 166, 207, 194, \
166, 148, 143, 124, 126, 114, 100, 127, 90, 70, \
212, 144, 98, 232, 191, 114, 227, 174, 96, 219, \
158, 96, 216, 180, 131, 193, 147, 106, 214, 160, \
112, 130, 108, 107, 105, 89, 93, 137, 118, 120, \
171, 145, 145, 146, 115, 111, 156, 121, 111, 125, \
96, 86, 117, 98, 89, 130, 118, 102, 165, 140, \
114, 170, 137, 105, 183, 156, 122, 149, 130, 92, \
156, 113, 75, 175, 142, 105, 97, 85, 63, 62, \
45, 45, 60, 42, 40, 44, 29, 16, 98, 81, \
63, 207, 187, 167, 206, 188, 165, 128, 116, 99, \
102, 92, 77, 100, 78, 59, 182, 112, 78, 205, \
133, 80, 232, 180, 117, 196, 130, 84, 199, 150, \
116, 226, 184, 149, 185, 121, 82, 147, 125, 119, \
103, 84, 83, 127, 102, 100, 172, 147, 144, 148, \
124, 118, 144, 116, 103, 132, 100, 81, 160, 130, \
105, 190, 170, 140, 213, 195, 166, 217, 203, 178, \
209, 201, 178, 193, 182, 155, 202, 154, 124, 212, \
147, 116, 147, 110, 81, 71, 50, 38, 85, 69, \
62, 94, 83, 66, 99, 85, 63, 172, 152, 130, \
176, 155, 137, 107, 90, 74, 61, 51, 36, 55, \
44, 27, 108, 59, 33, 127, 54, 24, 165, 132, \
86, 194, 152, 116, 204, 167, 143, 215, 191, 162, \
171, 127, 90, 127, 108, 83, 86, 68, 50, 111, \
82, 64, 149, 130, 116, 120, 114, 103, 99, 92, \
76, 152, 138, 112, 208, 186, 153, 214, 193, 161, \
226, 214, 189, 213, 206, 186, 207, 199, 178, 211, \
192, 165, 222, 174, 134, 222, 133, 88, 201, 118, \
72, 131, 83, 48, 75, 50, 23, 116, 107, 80, \
161, 152, 122, 165, 149, 124, 161, 143, 127, 108, \
88, 72, 84, 69, 56, 49, 41, 30, 76, 52, \
33, 72, 32, 13, 108, 94, 66, 170, 153, 128, \
213, 201, 183, 199, 194, 171, 174, 153, 119, 120, \
101, 77, 118, 96, 81, 137, 104, 89, 127, 102, \
87, 102, 95, 84, 108, 105, 95, 175, 167, 147, \
208, 191, 163, 199, 183, 160, 230, 221, 204, 209, \
197, 177, 195, 173, 147, 195, 176, 151, 205, 180, \
134, 221, 137, 83, 229, 114, 65, 202, 124, 82, \
125, 82, 53, 85, 68, 48, 118, 109, 92, 153, \
142, 126, 137, 127, 112, 126, 106, 89, 164, 142, \
130, 123, 105, 101, 117, 94, 87, 71, 56, 45, \
147, 122, 115, 178, 160, 150, 185, 179, 169, 174, \
159, 149, 124, 103, 77, 155, 139, 122, 134, 121, \
112, 125, 109, 103, 133, 119, 107, 120, 112, 103, \
102, 98, 94, 176, 165, 150, 202, 185, 156, 192, \
179, 152, 224, 213, 195, 202, 187, 167, 183, 161, \
135, 191, 176, 153, 207, 193, 156, 204, 150, 108, \
189, 106, 67, 186, 110, 75, 160, 111, 87, 84, \
68, 56, 59, 53, 49, 132, 127, 120, 130, 123, \
103, 130, 103, 80, 166, 139, 124, 143, 126, 126, \
118, 99, 104, 72, 59, 62, 152, 123, 127, 173, \
152, 144, 176, 164, 154, 169, 148, 141, 131, 107, \
86, 143, 132, 124, 156, 153, 151, 128, 131, 134, \
95, 96, 90, 98, 96, 89, 103, 100, 97, 167, \
157, 138, 191, 174, 138, 183, 170, 136, 219, 204, \
182, 200, 184, 167, 173, 159, 137, 184, 170, 148, \
213, 194, 171, 208, 183, 157, 190, 158, 131, 173, \
125, 98, 134, 97, 75, 69, 62, 49, 54, 53, \
48, 111, 108, 100, 139, 128, 107, 139, 102, 76, \
135, 99, 81, 109, 90, 86, 94, 76, 76, 96, \
73, 75, 154, 132, 128, 162, 143, 124, 170, 153, \
135, 188, 174, 163, 172, 156, 143, 67, 54, 51, \
106, 100, 100, 99, 98, 102, 70, 67, 63, 92, \
88, 81, 120, 116, 108, 162, 150, 126, 185, 168, \
131, 165, 151, 121, 220, 205, 187, 194, 178, 161, \
140, 125, 103, 157, 140, 123, 202, 184, 168, 200, \
183, 164, 191, 175, 154, 174, 149, 128, 118, 99, \
83, 53, 50, 40, 58, 56, 47, 88, 82, 72, \
111, 95, 83, 130, 87, 68, 122, 74, 55, 132, \
94, 81, 123, 85, 69, 128, 93, 81, 155, 126, \
115, 146, 122, 103, 179, 157, 139, 186, 172, 166, \
183, 176, 179, 104, 95, 67, 97, 91, 66, 94, \
91, 67, 105, 99, 79, 114, 110, 91, 123, 119, \
96, 174, 161, 129, 182, 163, 125, 146, 132, 104, \
209, 194, 174, 155, 140, 119, 87, 72, 46, 94, \
76, 56, 147, 130, 112, 162, 152, 132, 144, 140, \
118, 117, 110, 91, 79, 73, 60, 45, 43, 34, \
60, 55, 42, 79, 70, 55, 108, 90, 77, 156, \
115, 95, 138, 88, 62, 153, 106, 79, 158, 107, \
86, 144, 102, 90, 144, 113, 106, 122, 93, 83, \
191, 164, 147, 196, 181, 170, 131, 130, 135, 141, \
137, 80, 137, 133, 77, 136, 132, 76, 137, 132, \
82, 136, 134, 89, 140, 137, 93, 185, 170, 129, \
184, 164, 126, 163, 149, 117, 195, 181, 154, 117, \
104, 72, 96, 83, 44, 87, 71, 36, 86, 71, \
38, 97, 88, 57, 91, 87, 56, 78, 75, 47, \
68, 65, 43, 55, 49, 35, 63, 56, 40, 90, \
83, 58, 119, 108, 76, 136, 109, 74, 159, 126, \
84, 159, 126, 81, 158, 118, 85, 148, 120, 96, \
158, 140, 120, 134, 107, 88, 185, 153, 124, 182, \
161, 135, 127, 122, 106, 137, 133, 72, 135, 130, \
68, 137, 131, 68, 137, 133, 65, 134, 134, 64, \
140, 137, 76, 185, 170, 124, 187, 165, 127, 190, \
178, 139, 196, 184, 148, 137, 124, 82, 142, 132, \
78, 138, 126, 72, 120, 107, 57, 106, 94, 49, \
99, 87, 46, 96, 89, 48, 83, 74, 43, 78, \
67, 47, 83, 74, 54, 103, 97, 63, 133, 130, \
77, 136, 125, 74, 148, 136, 79, 144, 134, 71, \
146, 128, 70, 137, 131, 77, 137, 136, 83, 143, \
126, 74, 172, 138, 90, 154, 126, 84, 143, 131, \
88, 126, 123, 63, 126, 122, 62, 129, 124, 64, \
130, 131, 61, 139, 133, 63, 143, 136, 75, 175, \
168, 119, 188, 171, 131, 199, 189, 153, 158, 148, \
110, 144, 127, 71, 143, 136, 72, 143, 136, 76, \
149, 139, 80, 147, 136, 80, 142, 131, 76, 146, \
135, 83, 103, 88, 51, 81, 75, 50, 110, 106, \
75, 130, 118, 73, 140, 134, 74, 142, 136, 77, \
141, 135, 75, 140, 135, 71, 141, 134, 69, 138, \
134, 70, 138, 136, 72, 147, 137, 73, 152, 132, \
74, 151, 131, 77, 149, 135, 78, 128, 125, 63, \
129, 125, 64, 131, 127, 67, 130, 132, 65, 141, \
131, 68, 142, 131, 75, 158, 154, 103, 186, 167, \
126, 193, 177, 147, 124, 115, 78, 148, 129, 67, \
141, 135, 69, 137, 131, 72, 142, 132, 73, 147, \
138, 79, 147, 138, 79, 152, 142, 87, 97, 85, \
47, 82, 79, 50, 118, 116, 78, 143, 129, 79, \
146, 136, 77, 146, 137, 78, 144, 135, 76, 143, \
134, 75, 144, 135, 76, 144, 135, 76, 146, 136, \
77, 146, 137, 78, 147, 136, 78, 147, 135, 77, \
152, 140, 81, 132, 127, 65, 128, 123, 62, 129, \
123, 63, 127, 127, 61, 134, 125, 61, 132, 123, \
64, 137, 130, 76, 179, 149, 108, 157, 128, 102, \
107, 98, 61, 143, 127, 64, 138, 130, 65, 136, \
129, 70, 140, 131, 72, 144, 135, 76, 142, 133, \
74, 141, 133, 79, 86, 81, 40, 104, 96, 63, \
151, 139, 100, 141, 133, 80, 143, 135, 75, 145, \
136, 77, 144, 135, 76, 146, 137, 78, 149, 140, \
81, 149, 140, 81, 147, 138, 79, 148, 139, 80, \
146, 135, 77, 146, 134, 76, 149, 136, 78, 135, \
126, 66, 129, 121, 62, 133, 124, 65, 129, 126, \
62, 133, 123, 60, 128, 121, 59, 132, 123, 64, \
160, 116, 75, 116, 70, 49, 102, 92, 56, 137, \
126, 62, 137, 126, 62, 136, 128, 69, 137, 128, \
69, 136, 127, 68, 134, 124, 65, 134, 125, 76, \
83, 80, 41, 129, 107, 73, 162, 134, 94, 135, \
129, 73, 140, 132, 72, 139, 129, 70, 139, 130, \
71, 143, 134, 75, 145, 136, 77, 144, 135, 76, \
143, 134, 75, 143, 134, 75, 145, 134, 76, 147, \
135, 77, 150, 138, 80, 140, 129, 70, 137, 126, \
67, 139, 128, 70, 136, 130, 68, 134, 125, 63, \
128, 125, 61, 136, 125, 62, 154, 96, 56, 105, \
42, 28, 86, 76, 41, 135, 128, 62, 139, 125, \
62, 135, 124, 67, 135, 126, 67, 136, 127, 68, \
136, 126, 67, 134, 119, 75, 80, 73, 37, 140, \
99, 64, 150, 98, 60, 131, 123, 67, 136, 129, \
69, 137, 128, 69, 139, 130, 71, 138, 129, 70, \
136, 127, 68, 137, 128, 69, 140, 131, 72, 142, \
133, 74, 145, 134, 76, 149, 137, 78, 151, 139, \
80, 137, 126, 66, 134, 123, 65, 134, 123, 64, \
133, 125, 64, 133, 124, 61, 130, 128, 62, 135, \
123, 57, 155, 94, 53, 115, 48, 35, 75, 64, \
30, 132, 128, 62, 138, 124, 61, 132, 123, 64, \
133, 125, 65, 134, 126, 66, 135, 127, 67, 129, \
111, 69, 83, 71, 35, 145, 92, 57, 146, 82, \
46, 132, 122, 65, 132, 126, 66, 135, 127, 68, \
136, 129, 69, 135, 127, 67, 132, 124, 65, 136, \
128, 69, 138, 130, 71, 136, 129, 69, 139, 129, \
72, 141, 130, 74, 144, 133, 76, 127, 122, 63, \
131, 126, 68, 130, 125, 68, 135, 128, 71, 135, \
126, 68, 136, 129, 71, 136, 127, 68, 151, 124, \
79, 128, 94, 71, 76, 63, 29, 126, 121, 68, \
131, 126, 68, 129, 124, 67, 128, 124, 66, 128, \
123, 65, 127, 123, 65, 122, 114, 67, 124, 105, \
67, 147, 107, 73, 140, 105, 68, 127, 119, 70, \
127, 122, 68, 129, 123, 69, 128, 123, 69, 127, \
122, 68, 126, 123, 68, 124, 122, 67, 124, 121, \
66, 128, 125, 70, 132, 127, 76, 132, 125, 77, \
134, 127, 79, 133, 126, 84, 132, 125, 84, 131, \
124, 83, 133, 123, 83, 133, 121, 81, 133, 121, \
81, 132, 120, 81, 145, 132, 97, 143, 125, 99, \
106, 92, 62, 123, 114, 79, 125, 119, 80, 127, \
120, 79, 125, 118, 77, 122, 115, 73, 116, 109, \
68, 118, 113, 75, 142, 125, 94, 136, 107, 80, \
135, 117, 87, 117, 111, 74, 117, 110, 69, 119, \
112, 71, 115, 108, 67, 116, 110, 68, 115, 111, \
69, 112, 109, 66, 113, 109, 67, 118, 115, 72, \
118, 113, 68, 117, 111, 64, 117, 111, 64, 112, \
102, 65, 111, 101, 65, 111, 102, 65, 112, 101, \
65, 112, 99, 64, 112, 99, 63, 115, 103, 67, \
120, 107, 70, 117, 103, 65, 115, 103, 66, 113, \
102, 66, 112, 102, 67, 113, 103, 67, 115, 106, \
69, 113, 103, 67, 111, 101, 64, 113, 109, 70, \
116, 106, 69, 121, 103, 68, 119, 107, 71, 118, \
113, 73, 119, 111, 69, 118, 110, 67, 114, 106, \
64, 116, 108, 65, 119, 112, 69, 125, 119, 75, \
127, 121, 77, 127, 121, 77, 123, 116, 68, 119, \
112, 61, 122, 115, 63, 127, 118, 60, 132, 123, \
66, 131, 122, 65, 130, 121, 64, 128, 119, 62, \
130, 121, 64, 136, 126, 69, 136, 128, 70, 135, \
130, 67, 136, 129, 68, 138, 130, 71, 141, 131, \
75, 139, 130, 73, 142, 133, 76, 138, 128, 71, \
133, 123, 66, 131, 126, 67, 131, 124, 64, 137, \
127, 68, 135, 127, 68, 135, 130, 69, 138, 129, \
68, 141, 132, 71, 143, 134, 73, 142, 134, 73, \
141, 136, 73, 141, 137, 74, 141, 137, 74, 140, \
136, 73, 144, 137, 78, 142, 132, 77, 143, 133, \
77, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '5584';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a3cb7f426554f81874d7b033161256b15';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_ship7';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{115, 136, 131, 117, 138, 133, 126, 146, 142, 128, 148, \
148, 129, 149, 150, 134, 154, 155, 138, 158, 159, \
138, 158, 159, 132, 152, 153, 123, 143, 144, 112, \
131, 133, 119, 137, 139, 134, 151, 153, 140, 158, \
160, 141, 159, 161, 139, 157, 159, 140, 158, 160, \
139, 157, 159, 140, 158, 160, 142, 159, 163, 143, \
161, 165, 143, 161, 165, 144, 161, 165, 142, 160, \
162, 140, 158, 160, 136, 154, 156, 137, 156, 157, \
142, 161, 163, 144, 162, 163, 147, 166, 167, 149, \
168, 170, 151, 169, 171, 118, 138, 135, 122, 142, \
139, 128, 148, 146, 129, 149, 149, 130, 150, 151, \
132, 152, 153, 136, 156, 157, 138, 158, 159, 131, \
151, 152, 123, 143, 144, 114, 134, 135, 117, 136, \
137, 131, 149, 151, 139, 157, 159, 139, 156, 158, \
137, 155, 157, 138, 156, 158, 136, 154, 156, 137, \
154, 156, 136, 152, 156, 138, 156, 160, 136, 155, \
161, 137, 155, 161, 136, 154, 157, 137, 155, 157, \
137, 155, 157, 138, 155, 156, 137, 156, 154, 136, \
160, 158, 137, 164, 163, 144, 167, 168, 152, 168, \
170, 123, 143, 142, 126, 146, 145, 129, 149, 148, \
127, 147, 148, 126, 146, 147, 128, 148, 149, 132, \
152, 153, 133, 153, 154, 125, 145, 146, 119, 140, \
140, 112, 132, 133, 114, 132, 134, 127, 145, 147, \
134, 152, 154, 133, 151, 153, 133, 151, 153, 132, \
150, 152, 136, 154, 156, 136, 154, 156, 134, 151, \
155, 136, 152, 155, 139, 153, 155, 138, 151, 153, \
133, 151, 153, 134, 152, 154, 137, 155, 157, 137, \
154, 155, 137, 156, 153, 137, 162, 158, 137, 157, \
155, 140, 153, 155, 148, 162, 165, 122, 142, 143, \
121, 141, 142, 126, 146, 147, 126, 146, 147, 124, \
144, 145, 125, 145, 146, 128, 148, 149, 128, 148, \
149, 121, 141, 143, 117, 137, 138, 107, 127, 128, \
114, 132, 134, 125, 143, 145, 130, 148, 150, 131, \
149, 151, 129, 147, 149, 128, 146, 148, 128, 146, \
147, 128, 147, 150, 129, 149, 155, 132, 144, 144, \
143, 145, 138, 147, 150, 142, 131, 148, 149, 131, \
149, 151, 130, 148, 150, 133, 151, 154, 132, 152, \
153, 136, 153, 151, 148, 145, 145, 151, 142, 146, \
147, 157, 161, 119, 139, 140, 112, 132, 133, 121, \
141, 142, 122, 142, 143, 123, 143, 144, 121, 141, \
142, 122, 142, 143, 125, 145, 146, 120, 140, 141, \
108, 128, 129, 107, 126, 128, 116, 134, 136, 121, \
139, 141, 121, 140, 141, 124, 142, 144, 124, 142, \
144, 123, 141, 143, 121, 139, 141, 120, 140, 143, \
118, 139, 145, 123, 133, 130, 128, 120, 105, 146, \
139, 126, 125, 143, 143, 125, 144, 147, 124, 143, \
146, 131, 150, 154, 128, 150, 156, 138, 150, 151, \
159, 134, 135, 168, 140, 145, 146, 155, 160, 114, \
134, 135, 114, 134, 135, 115, 135, 136, 112, 132, \
133, 113, 133, 134, 113, 133, 134, 113, 133, 134, \
112, 132, 133, 106, 126, 127, 103, 123, 124, 108, \
128, 129, 113, 133, 134, 117, 137, 138, 119, 139, \
140, 119, 139, 140, 113, 133, 134, 117, 136, 137, \
115, 134, 136, 110, 130, 130, 116, 136, 135, 104, \
116, 114, 71, 64, 54, 108, 101, 98, 111, 134, \
133, 117, 135, 141, 117, 134, 144, 122, 142, 137, \
124, 146, 149, 123, 139, 148, 148, 127, 126, 166, \
141, 143, 139, 154, 162, 107, 127, 128, 111, 131, \
132, 113, 133, 134, 109, 129, 130, 106, 126, 127, \
111, 131, 132, 111, 131, 132, 107, 127, 128, 107, \
127, 128, 104, 124, 125, 103, 123, 124, 103, 123, \
124, 107, 127, 128, 113, 133, 134, 116, 136, 137, \
114, 134, 135, 114, 134, 135, 114, 134, 135, 114, \
136, 135, 117, 137, 136, 68, 75, 78, 11, 6, \
4, 32, 31, 34, 102, 117, 113, 128, 135, 125, \
143, 147, 140, 188, 193, 170, 190, 191, 172, 162, \
167, 156, 150, 143, 130, 145, 139, 139, 135, 150, \
155, 106, 126, 127, 106, 126, 127, 105, 125, 126, \
98, 118, 119, 101, 121, 122, 101, 121, 122, 103, \
123, 124, 106, 126, 127, 109, 129, 130, 105, 125, \
126, 102, 122, 123, 105, 125, 126, 105, 125, 126, \
101, 121, 122, 101, 121, 122, 107, 127, 128, 110, \
130, 131, 110, 130, 131, 107, 129, 131, 113, 132, \
135, 66, 63, 70, 12, 5, 11, 12, 12, 13, \
101, 96, 81, 140, 127, 84, 163, 144, 104, 217, \
199, 155, 243, 227, 181, 242, 229, 184, 191, 185, \
149, 154, 158, 147, 136, 146, 143, 110, 130, 131, \
105, 125, 126, 99, 119, 120, 99, 119, 120, 104, \
124, 125, 104, 124, 125, 105, 125, 126, 100, 120, \
121, 96, 116, 117, 98, 118, 119, 96, 116, 117, \
104, 124, 125, 109, 129, 130, 111, 131, 132, 105, \
125, 126, 97, 117, 118, 96, 116, 118, 99, 119, \
120, 99, 119, 122, 110, 121, 120, 70, 63, 63, \
13, 5, 16, 25, 20, 15, 126, 98, 62, 162, \
128, 58, 158, 117, 51, 150, 118, 57, 184, 163, \
106, 221, 195, 127, 215, 196, 132, 227, 223, 190, \
179, 182, 168, 93, 113, 114, 89, 109, 110, 91, \
111, 112, 95, 115, 116, 98, 118, 119, 102, 122, \
123, 105, 125, 126, 101, 121, 122, 96, 116, 117, \
93, 113, 114, 94, 114, 115, 99, 119, 120, 100, \
120, 121, 101, 121, 122, 105, 125, 126, 106, 126, \
127, 104, 124, 125, 99, 120, 122, 104, 118, 120, \
119, 115, 99, 78, 74, 55, 9, 2, 13, 58, \
40, 24, 156, 112, 47, 167, 117, 37, 169, 119, \
45, 159, 120, 45, 147, 116, 52, 166, 131, 61, \
235, 212, 143, 253, 240, 196, 217, 214, 190, 89, \
109, 110, 90, 110, 111, 91, 111, 112, 91, 111, \
112, 91, 111, 112, 92, 112, 113, 95, 115, 116, \
95, 115, 116, 94, 114, 115, 93, 113, 114, 90, \
110, 111, 96, 115, 116, 97, 116, 117, 96, 118, \
117, 95, 116, 116, 93, 113, 117, 96, 115, 116, \
100, 119, 117, 121, 124, 120, 177, 158, 125, 130, \
128, 91, 32, 20, 28, 86, 55, 29, 160, 107, \
22, 171, 114, 35, 166, 114, 45, 163, 117, 34, \
163, 116, 40, 162, 128, 63, 216, 199, 144, 234, \
221, 182, 195, 188, 159, 92, 112, 113, 92, 111, \
112, 93, 112, 113, 93, 112, 113, 97, 116, 117, \
92, 111, 113, 83, 101, 102, 81, 100, 98, 87, \
107, 106, 89, 110, 111, 91, 113, 112, 97, 112, \
109, 92, 107, 109, 87, 114, 107, 89, 111, 112, \
91, 107, 117, 123, 126, 120, 154, 146, 111, 164, \
130, 79, 197, 156, 97, 165, 126, 79, 97, 49, \
38, 128, 91, 55, 161, 111, 24, 163, 112, 35, \
165, 117, 47, 165, 115, 39, 163, 111, 36, 160, \
128, 62, 192, 179, 129, 210, 204, 174, 177, 180, \
166, 85, 105, 106, 85, 105, 106, 88, 108, 109, \
90, 109, 110, 92, 110, 112, 92, 110, 112, 93, \
111, 112, 88, 105, 102, 81, 99, 96, 84, 101, \
100, 89, 109, 108, 93, 111, 118, 100, 110, 121, \
98, 116, 114, 124, 129, 123, 145, 136, 101, 180, \
156, 110, 196, 161, 93, 184, 124, 45, 175, 123, \
45, 174, 117, 47, 159, 99, 54, 152, 125, 86, \
162, 120, 48, 172, 130, 48, 165, 124, 37, 157, \
115, 32, 169, 129, 60, 206, 184, 123, 212, 205, \
164, 213, 212, 193, 152, 162, 158, 78, 99, 100, \
76, 96, 97, 77, 97, 98, 81, 100, 102, 86, \
104, 106, 90, 108, 110, 89, 107, 110, 86, 103, \
106, 81, 98, 100, 85, 100, 99, 83, 101, 102, \
83, 101, 107, 117, 119, 102, 165, 164, 115, 199, \
180, 109, 176, 135, 52, 196, 150, 71, 206, 163, \
80, 189, 125, 45, 182, 128, 45, 176, 122, 25, \
194, 145, 69, 133, 118, 91, 82, 49, 29, 124, \
85, 41, 162, 125, 55, 175, 142, 66, 211, 189, \
126, 216, 206, 159, 214, 212, 189, 190, 193, 185, \
128, 137, 132, 80, 100, 101, 79, 99, 100, 79, \
99, 100, 76, 94, 96, 73, 91, 93, 75, 93, \
95, 75, 93, 96, 78, 98, 105, 81, 100, 105, \
80, 97, 95, 85, 101, 94, 138, 140, 109, 206, \
186, 120, 215, 187, 98, 195, 154, 49, 167, 109, \
26, 224, 173, 96, 227, 190, 106, 179, 122, 40, \
184, 126, 50, 188, 131, 29, 189, 142, 55, 132, \
123, 108, 57, 30, 32, 42, 8, 0, 123, 93, \
49, 223, 205, 150, 211, 205, 156, 207, 205, 175, \
204, 208, 198, 118, 126, 121, 111, 121, 114, 85, \
105, 106, 82, 102, 103, 83, 103, 104, 82, 100, \
102, 79, 97, 99, 74, 93, 95, 70, 87, 89, \
78, 89, 86, 94, 100, 90, 125, 128, 109, 175, \
174, 144, 201, 182, 116, 209, 168, 89, 234, 197, \
151, 220, 178, 127, 180, 127, 57, 191, 142, 72, \
198, 163, 84, 179, 128, 45, 177, 117, 41, 187, \
121, 28, 195, 142, 54, 137, 129, 104, 146, 129, \
88, 136, 113, 60, 197, 183, 126, 202, 200, 152, \
202, 202, 175, 204, 207, 192, 125, 133, 123, 89, \
99, 87, 106, 117, 107, 78, 98, 99, 76, 96, \
97, 77, 97, 98, 78, 96, 99, 76, 95, 98, \
78, 96, 99, 84, 95, 90, 114, 107, 83, 170, \
155, 120, 224, 206, 160, 246, 226, 175, 190, 158, \
94, 190, 147, 67, 218, 194, 152, 240, 220, 163, \
207, 164, 77, 189, 142, 64, 194, 153, 74, 191, \
134, 50, 181, 123, 37, 183, 112, 21, 208, 149, \
57, 166, 156, 114, 230, 219, 156, 218, 203, 140, \
190, 185, 141, 202, 208, 185, 208, 212, 202, 128, \
133, 127, 90, 100, 84, 68, 78, 58, 88, 99, \
88, 71, 90, 90, 70, 89, 89, 72, 89, 90, \
80, 91, 99, 71, 90, 100, 82, 86, 83, 143, \
120, 82, 213, 194, 148, 251, 233, 187, 250, 229, \
181, 242, 219, 172, 224, 197, 146, 218, 191, 123, \
198, 175, 107, 215, 190, 109, 205, 167, 83, 201, \
156, 84, 202, 155, 79, 186, 133, 46, 186, 132, \
51, 194, 139, 59, 234, 196, 124, 233, 226, 182, \
198, 194, 148, 165, 159, 124, 208, 205, 192, 223, \
226, 223, 121, 122, 113, 84, 87, 78, 75, 81, \
66, 62, 72, 58, 91, 105, 99, 62, 80, 80, \
67, 85, 85, 67, 85, 87, 69, 83, 83, 91, \
89, 65, 157, 135, 95, 227, 198, 139, 245, 218, \
169, 241, 215, 172, 244, 219, 179, 247, 228, 189, \
253, 239, 198, 251, 241, 191, 246, 230, 170, 239, \
215, 152, 230, 205, 146, 225, 198, 147, 230, 201, \
142, 224, 195, 123, 227, 198, 134, 236, 215, 151, \
217, 210, 162, 178, 179, 147, 166, 165, 136, 214, \
214, 194, 217, 217, 210, 125, 126, 119, 80, 81, \
67, 81, 84, 71, 54, 59, 49, 80, 89, 82, \
94, 109, 106, 63, 81, 81, 63, 81, 80, 78, \
97, 98, 114, 124, 108, 170, 143, 80, 236, 198, \
128, 239, 226, 167, 241, 224, 173, 244, 227, 178, \
253, 242, 194, 254, 246, 201, 253, 244, 210, 251, \
246, 206, 254, 248, 202, 255, 249, 201, 255, 249, \
202, 252, 242, 206, 246, 238, 200, 236, 230, 185, \
212, 208, 165, 171, 170, 127, 161, 164, 136, 185, \
189, 174, 229, 227, 213, 209, 209, 197, 112, 114, \
105, 73, 77, 67, 82, 85, 73, 67, 73, 62, \
68, 76, 67, 89, 101, 94, 94, 109, 106, 70, \
88, 88, 59, 77, 78, 85, 98, 98, 185, 159, \
140, 216, 168, 116, 227, 178, 129, 227, 193, 150, \
230, 203, 160, 230, 209, 166, 230, 216, 174, 230, \
221, 180, 233, 223, 189, 232, 226, 190, 222, 217, \
179, 207, 198, 159, 190, 180, 142, 177, 168, 138, \
155, 151, 124, 139, 139, 112, 163, 165, 145, 177, \
179, 160, 214, 214, 206, 241, 239, 239, 199, 197, \
194, 83, 83, 77, 53, 56, 45, 68, 74, 61, \
54, 61, 51, 67, 76, 68, 80, 91, 85, 86, \
100, 95, 94, 109, 106, 64, 82, 82, 64, 82, \
83, 80, 93, 91, 117, 110, 90, 81, 80, 47, \
81, 82, 52, 92, 84, 52, 95, 84, 51, 95, \
88, 56, 94, 92, 60, 93, 91, 61, 116, 106, \
77, 110, 106, 75, 99, 97, 67, 97, 90, 63, \
108, 102, 75, 137, 133, 109, 153, 150, 130, 182, \
178, 163, 214, 212, 205, 225, 227, 220, 220, 218, \
217, 159, 153, 155, 65, 64, 60, 48, 50, 42, \
71, 78, 63, 48, 57, 42, 44, 54, 47, 60, \
73, 67, 78, 93, 89, 86, 102, 99, 93, 108, \
105, 52, 70, 70, 54, 72, 72, 68, 86, 85, \
98, 115, 101, 74, 92, 59, 65, 85, 56, 66, \
85, 62, 71, 86, 58, 74, 87, 60, 80, 93, \
69, 79, 89, 67, 90, 91, 72, 118, 125, 106, \
127, 137, 122, 148, 155, 144, 170, 180, 169, 197, \
204, 192, 209, 213, 204, 221, 221, 216, 222, 223, \
216, 174, 182, 175, 97, 102, 97, 37, 38, 32, \
46, 48, 38, 70, 74, 62, 64, 72, 56, 53, \
64, 50, 60, 71, 66, 65, 79, 76, 63, 80, \
78, 69, 86, 85, 86, 101, 99, 58, 77, 76, \
51, 69, 68, 48, 65, 65, 134, 143, 141, 194, \
197, 183, 185, 188, 177, 180, 188, 182, 178, 189, \
177, 179, 189, 178, 186, 196, 186, 175, 184, 175, \
177, 184, 176, 195, 204, 197, 198, 209, 204, 195, \
205, 202, 198, 207, 204, 221, 229, 225, 222, 227, \
223, 195, 198, 196, 115, 117, 112, 34, 40, 34, \
6, 13, 4, 40, 45, 34, 70, 75, 65, 64, \
69, 59, 47, 51, 40, 54, 62, 53, 71, 85, \
81, 71, 86, 83, 65, 81, 79, 65, 80, 79, \
60, 74, 74, 53, 72, 71, 53, 72, 70, 45, \
63, 62, 124, 135, 134, 208, 218, 217, 204, 214, \
213, 201, 211, 210, 198, 210, 206, 196, 209, 205, \
192, 206, 202, 185, 198, 193, 198, 205, 201, 198, \
203, 199, 203, 209, 205, 209, 214, 210, 205, 207, \
204, 184, 185, 183, 133, 135, 132, 56, 57, 55, \
6, 8, 4, 6, 8, 2, 31, 34, 25, 50, \
54, 42, 51, 56, 45, 44, 49, 41, 48, 53, \
48, 59, 68, 65, 68, 82, 79, 78, 93, 90, \
84, 99, 96, 84, 99, 97, 77, 91, 92, 46, \
64, 64, 47, 65, 65, 43, 60, 60, 102, 114, \
113, 202, 212, 211, 201, 211, 210, 198, 208, 207, \
197, 209, 205, 198, 210, 206, 194, 206, 202, 198, \
208, 204, 206, 212, 208, 202, 207, 203, 180, 185, \
181, 136, 140, 137, 90, 92, 89, 42, 44, 41, \
12, 14, 10, 7, 9, 5, 12, 15, 9, 28, \
31, 22, 51, 54, 42, 48, 51, 37, 27, 29, \
15, 31, 37, 29, 56, 66, 66, 61, 75, 75, \
66, 80, 78, 67, 82, 79, 74, 89, 86, 80, \
95, 93, 82, 96, 96, 47, 65, 66, 41, 59, \
60, 36, 53, 54, 76, 87, 86, 192, 202, 201, \
203, 213, 212, 199, 210, 208, 194, 208, 203, 194, \
206, 202, 196, 205, 202, 183, 188, 186, 151, 154, \
151, 98, 101, 97, 42, 45, 42, 8, 11, 8, \
0, 0, 0, 5, 7, 2, 10, 13, 7, 21, \
23, 17, 34, 37, 29, 47, 50, 39, 60, 64, \
50, 58, 61, 46, 32, 33, 19, 45, 52, 45, \
48, 61, 63, 55, 71, 74, 61, 76, 74, 64, \
79, 76, 65, 80, 77, 75, 89, 87, 79, 94, \
92, 40, 58, 62, 38, 56, 60, 33, 50, 53, \
52, 64, 63, 169, 179, 178, 191, 201, 200, 172, \
183, 181, 159, 174, 169, 148, 159, 155, 121, 127, \
125, 80, 81, 81, 34, 34, 32, 3, 4, 2, \
0, 0, 0, 3, 4, 1, 9, 12, 5, 14, \
17, 8, 27, 30, 22, 43, 46, 38, 48, 51, \
41, 48, 52, 39, 49, 53, 37, 37, 41, 27, \
39, 45, 34, 58, 67, 61, 45, 58, 59, 46, \
61, 63, 56, 71, 68, 59, 74, 71, 60, 75, \
72, 63, 78, 75, 74, 89, 84, 39, 56, 62, \
36, 54, 59, 35, 52, 57, 36, 47, 48, 124, \
134, 133, 189, 199, 198, 154, 166, 164, 115, 130, \
125, 71, 81, 77, 31, 34, 33, 9, 8, 8, \
3, 3, 1, 6, 6, 4, 10, 10, 8, 10, \
10, 6, 12, 15, 7, 30, 33, 25, 43, 46, \
37, 43, 46, 37, 42, 45, 33, 38, 42, 28, \
32, 36, 20, 43, 50, 35, 55, 67, 60, 64, \
75, 72, 64, 75, 75, 54, 66, 66, 44, 59, \
56, 50, 65, 62, 56, 71, 68, 54, 69, 65, \
58, 73, 67, 39, 53, 60, 35, 52, 59, 35, \
52, 59, 33, 47, 52, 62, 76, 78, 152, 167, \
164, 90, 105, 98, 28, 38, 32, 4, 10, 6, \
1, 3, 0, 8, 8, 5, 10, 11, 7, 10, \
11, 6, 9, 11, 4, 15, 17, 10, 33, 36, \
28, 44, 47, 36, 35, 38, 28, 34, 36, 28, \
21, 24, 12, 22, 28, 16, 39, 49, 39, 55, \
68, 59, 56, 70, 63, 56, 69, 64, 66, 77, \
75, 73, 84, 82, 58, 71, 68, 45, 58, 54, \
53, 66, 63, 54, 69, 65, 49, 64, 61, 30, \
41, 50, 29, 45, 52, 27, 45, 52, 30, 43, \
53, 33, 46, 51, 39, 55, 50, 15, 30, 20, \
2, 7, 1, 7, 9, 4, 10, 12, 7, 12, \
14, 9, 11, 14, 8, 10, 13, 6, 21, 24, \
14, 39, 42, 32, 34, 36, 29, 35, 38, 26, \
37, 41, 30, 29, 32, 25, 14, 17, 7, 30, \
38, 31, 37, 52, 49, 42, 58, 56, 53, 66, \
59, 50, 62, 57, 50, 62, 58, 63, 75, 71, \
71, 83, 79, 63, 75, 71, 51, 63, 59, 56, \
70, 67, 56, 72, 70, 25, 37, 45, 24, 39, \
46, 25, 40, 48, 29, 38, 49, 31, 39, 46, \
21, 30, 28, 10, 17, 10, 13, 16, 10, 12, \
14, 9, 12, 14, 9, 14, 16, 11, 19, 21, \
16, 22, 25, 18, 37, 40, 29, 36, 39, 29, \
31, 34, 27, 31, 35, 22, 30, 33, 22, 27, \
29, 25, 26, 32, 28, 42, 51, 50, 41, 54, \
56, 36, 51, 53, 45, 57, 55, 45, 57, 54, \
42, 54, 50, 50, 62, 58, 56, 68, 64, 64, \
76, 72, 59, 71, 67, 53, 66, 63, 61, 76, \
73, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '5894';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1ac6ce5418a391dce5a62f777afdf4a19a';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_automobile4';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{60, 40, 28, 72, 51, 29, 72, 55, 31, 64, 45, \
36, 68, 48, 41, 67, 47, 36, 69, 49, 38, \
66, 47, 33, 66, 46, 37, 69, 48, 41, 75, \
56, 41, 77, 58, 43, 79, 59, 44, 72, 52, \
38, 82, 62, 47, 78, 55, 42, 71, 49, 41, \
66, 48, 42, 71, 50, 44, 68, 48, 40, 66, \
45, 38, 71, 50, 44, 69, 48, 42, 67, 46, \
41, 67, 47, 40, 70, 50, 39, 77, 57, 43, \
77, 57, 43, 75, 55, 41, 71, 51, 40, 67, \
47, 36, 61, 42, 33, 54, 35, 22, 68, 46, \
20, 74, 51, 23, 78, 52, 38, 65, 41, 30, \
73, 50, 36, 78, 54, 40, 76, 53, 35, 79, \
55, 41, 77, 54, 42, 73, 50, 32, 76, 53, \
34, 81, 58, 43, 77, 53, 39, 72, 50, 28, \
81, 55, 40, 76, 51, 43, 71, 51, 45, 74, \
50, 41, 76, 52, 42, 77, 53, 44, 71, 45, \
38, 74, 49, 42, 74, 49, 41, 84, 59, 52, \
79, 54, 48, 74, 49, 41, 76, 53, 40, 78, \
55, 39, 72, 52, 40, 69, 49, 38, 64, 45, \
35, 56, 36, 25, 61, 38, 26, 59, 38, 23, \
70, 50, 31, 66, 42, 24, 73, 46, 30, 72, \
45, 29, 74, 48, 25, 83, 57, 37, 80, 54, \
37, 76, 50, 30, 78, 54, 33, 85, 60, 44, \
86, 59, 45, 91, 66, 39, 90, 62, 38, 84, \
57, 40, 77, 55, 40, 78, 52, 40, 75, 48, \
36, 79, 53, 38, 81, 55, 34, 86, 61, 39, \
84, 59, 36, 83, 57, 38, 80, 54, 42, 79, \
53, 37, 76, 49, 37, 73, 47, 41, 69, 48, \
38, 70, 50, 40, 69, 50, 41, 62, 40, 28, \
52, 32, 23, 52, 37, 20, 57, 39, 24, 66, \
47, 28, 65, 46, 24, 63, 44, 21, 69, 49, \
29, 74, 56, 35, 64, 43, 23, 74, 48, 27, \
85, 52, 35, 88, 55, 40, 78, 54, 40, 73, \
54, 29, 78, 56, 27, 85, 64, 34, 79, 62, \
39, 77, 51, 34, 78, 52, 34, 79, 55, 36, \
83, 61, 38, 90, 62, 41, 85, 59, 34, 85, \
62, 34, 86, 58, 34, 86, 59, 33, 82, 54, \
36, 79, 51, 42, 77, 57, 41, 77, 57, 40, \
79, 59, 42, 64, 41, 24, 47, 29, 21, 52, \
37, 25, 55, 35, 19, 68, 46, 23, 67, 45, \
26, 67, 44, 27, 70, 54, 36, 73, 55, 33, \
70, 43, 30, 67, 54, 31, 84, 69, 34, 106, \
76, 39, 118, 68, 45, 107, 59, 30, 112, 73, \
32, 120, 83, 33, 128, 87, 47, 120, 78, 38, \
116, 78, 39, 95, 65, 32, 80, 58, 30, 81, \
56, 36, 73, 52, 31, 76, 57, 31, 79, 53, \
27, 87, 60, 28, 91, 64, 35, 86, 59, 36, \
81, 60, 35, 80, 59, 34, 78, 56, 30, 67, \
44, 26, 59, 40, 30, 61, 41, 36, 53, 29, \
19, 65, 41, 18, 70, 45, 25, 65, 38, 26, \
71, 50, 12, 107, 65, 39, 156, 102, 36, 173, \
104, 30, 165, 108, 32, 154, 105, 33, 153, 105, \
39, 163, 108, 35, 162, 115, 44, 169, 117, 48, \
191, 126, 59, 197, 134, 54, 180, 124, 51, 183, \
135, 66, 134, 98, 49, 79, 61, 25, 67, 56, \
29, 69, 52, 31, 69, 50, 33, 80, 56, 26, \
90, 64, 31, 93, 67, 37, 85, 62, 36, 87, \
63, 37, 76, 52, 26, 72, 49, 32, 64, 46, \
26, 68, 48, 24, 63, 34, 32, 58, 34, 27, \
49, 33, 17, 53, 37, 18, 77, 45, 39, 169, \
122, 31, 147, 96, 39, 108, 72, 34, 92, 64, \
56, 90, 67, 69, 86, 65, 50, 88, 70, 63, \
99, 77, 75, 113, 82, 81, 136, 97, 82, 167, \
115, 84, 183, 121, 95, 202, 137, 90, 197, 141, \
89, 124, 96, 50, 86, 66, 31, 75, 50, 28, \
67, 45, 30, 81, 55, 34, 84, 56, 30, 92, \
66, 36, 95, 70, 41, 95, 70, 40, 88, 64, \
35, 67, 45, 24, 61, 41, 26, 66, 42, 32, \
99, 76, 41, 131, 104, 37, 151, 119, 38, 169, \
136, 41, 182, 149, 48, 201, 150, 49, 159, 111, \
62, 187, 140, 68, 186, 141, 71, 176, 133, 70, \
172, 129, 76, 135, 107, 73, 96, 74, 64, 101, \
79, 76, 112, 95, 73, 118, 97, 76, 155, 112, \
92, 204, 141, 93, 220, 148, 107, 166, 118, 72, \
114, 79, 38, 99, 64, 36, 74, 45, 27, 76, \
48, 36, 82, 54, 38, 83, 56, 32, 89, 62, \
33, 92, 65, 35, 86, 61, 32, 65, 44, 17, \
66, 43, 23, 79, 63, 41, 203, 184, 115, 235, \
194, 69, 232, 173, 61, 229, 162, 67, 216, 161, \
62, 206, 153, 56, 158, 114, 70, 213, 152, 96, \
208, 138, 86, 190, 133, 83, 201, 141, 78, 205, \
145, 70, 172, 131, 83, 165, 130, 100, 155, 127, \
104, 148, 120, 100, 142, 106, 91, 170, 124, 88, \
204, 137, 97, 197, 139, 98, 133, 100, 57, 107, \
68, 41, 83, 56, 36, 64, 47, 28, 72, 54, \
35, 70, 51, 26, 81, 56, 31, 87, 61, 37, \
88, 62, 36, 57, 40, 20, 64, 43, 29, 156, \
151, 106, 246, 200, 139, 212, 111, 80, 212, 114, \
93, 139, 89, 68, 90, 52, 51, 166, 129, 59, \
117, 100, 67, 133, 113, 93, 124, 95, 82, 103, \
82, 79, 115, 85, 81, 123, 89, 81, 124, 95, \
77, 157, 128, 101, 156, 131, 104, 169, 142, 107, \
159, 119, 88, 161, 114, 76, 178, 126, 94, 203, \
145, 114, 172, 126, 90, 98, 73, 36, 77, 57, \
34, 68, 47, 31, 64, 45, 28, 64, 44, 28, \
76, 52, 30, 82, 58, 36, 88, 63, 39, 63, \
46, 31, 89, 63, 44, 222, 218, 146, 242, 232, \
149, 197, 146, 102, 189, 114, 64, 151, 105, 66, \
119, 84, 63, 183, 135, 59, 122, 96, 76, 126, \
114, 98, 159, 137, 123, 163, 146, 124, 165, 143, \
112, 163, 142, 119, 158, 138, 125, 148, 126, 106, \
149, 128, 99, 146, 117, 101, 146, 103, 88, 176, \
123, 101, 200, 142, 98, 209, 136, 92, 218, 151, \
105, 131, 107, 60, 109, 87, 60, 85, 58, 42, \
72, 50, 29, 67, 42, 33, 69, 48, 28, 74, \
53, 31, 73, 50, 28, 78, 52, 34, 143, 120, \
68, 249, 246, 143, 241, 252, 139, 231, 229, 138, \
178, 140, 104, 95, 58, 52, 137, 102, 67, 199, \
144, 56, 127, 93, 74, 127, 104, 94, 121, 91, \
76, 110, 81, 71, 113, 82, 81, 121, 97, 94, \
135, 114, 103, 130, 105, 88, 118, 88, 67, 100, \
65, 51, 102, 71, 46, 133, 99, 76, 178, 132, \
100, 197, 144, 103, 214, 152, 103, 179, 126, 86, \
106, 71, 51, 91, 68, 45, 88, 67, 32, 69, \
44, 34, 65, 47, 31, 64, 46, 29, 66, 46, \
27, 109, 74, 37, 180, 163, 74, 250, 250, 130, \
251, 244, 122, 251, 251, 121, 167, 158, 87, 58, \
39, 22, 78, 53, 48, 164, 120, 39, 87, 57, \
34, 70, 45, 43, 82, 49, 32, 106, 84, 28, \
131, 120, 64, 153, 152, 84, 178, 166, 86, 187, \
171, 93, 190, 168, 106, 186, 168, 105, 183, 172, \
83, 186, 174, 103, 198, 185, 126, 195, 176, 109, \
209, 176, 98, 218, 162, 101, 156, 102, 67, 105, \
68, 21, 105, 74, 33, 90, 63, 38, 85, 62, \
32, 72, 55, 26, 77, 54, 27, 143, 99, 43, \
207, 178, 71, 242, 241, 100, 246, 235, 97, 231, \
221, 93, 239, 237, 123, 213, 202, 117, 152, 116, \
70, 188, 133, 35, 157, 122, 51, 177, 155, 48, \
210, 191, 75, 245, 239, 76, 255, 254, 111, 255, \
247, 130, 255, 252, 132, 245, 247, 123, 200, 176, \
87, 163, 122, 55, 164, 118, 45, 166, 118, 58, \
172, 146, 45, 244, 231, 129, 255, 246, 214, 251, \
239, 196, 233, 199, 127, 208, 173, 118, 166, 128, \
50, 158, 104, 43, 156, 109, 45, 143, 109, 45, \
149, 105, 49, 147, 95, 44, 186, 132, 50, 229, \
200, 66, 196, 156, 33, 220, 147, 28, 227, 179, \
47, 243, 225, 75, 242, 213, 72, 234, 195, 65, \
243, 232, 97, 253, 232, 105, 250, 245, 118, 243, \
241, 122, 249, 244, 109, 251, 243, 83, 246, 244, \
83, 249, 248, 93, 239, 228, 76, 223, 199, 70, \
235, 214, 135, 233, 214, 133, 240, 219, 163, 244, \
239, 158, 242, 250, 143, 248, 252, 190, 246, 248, \
195, 249, 250, 218, 240, 221, 174, 185, 141, 65, \
157, 108, 33, 154, 109, 36, 163, 112, 42, 156, \
108, 45, 121, 69, 25, 186, 124, 40, 181, 114, \
29, 236, 122, 14, 233, 125, 8, 226, 140, 24, \
238, 220, 56, 234, 233, 98, 238, 233, 94, 241, \
215, 70, 243, 230, 61, 248, 243, 79, 244, 242, \
86, 245, 248, 76, 248, 229, 43, 250, 230, 43, \
242, 245, 41, 252, 243, 54, 254, 244, 107, 247, \
253, 106, 238, 255, 104, 248, 251, 94, 250, 245, \
67, 253, 247, 79, 251, 248, 115, 249, 243, 175, \
243, 248, 174, 217, 222, 169, 144, 121, 61, 135, \
105, 41, 133, 103, 38, 148, 113, 37, 90, 60, \
26, 159, 89, 24, 187, 107, 30, 228, 125, 14, \
236, 124, 11, 243, 134, 11, 239, 214, 45, 245, \
239, 88, 242, 214, 81, 246, 208, 35, 241, 200, \
37, 249, 214, 27, 252, 224, 25, 243, 231, 37, \
242, 235, 27, 241, 208, 16, 247, 211, 17, 246, \
217, 11, 242, 216, 19, 246, 227, 28, 248, 235, \
25, 246, 239, 41, 244, 235, 37, 245, 232, 24, \
249, 238, 34, 253, 247, 87, 250, 251, 78, 246, \
246, 121, 181, 164, 92, 137, 104, 33, 133, 103, \
30, 138, 105, 40, 110, 68, 27, 136, 77, 40, \
189, 111, 27, 225, 123, 14, 224, 125, 6, 231, \
125, 1, 231, 163, 25, 223, 192, 49, 203, 132, \
30, 243, 183, 10, 242, 187, 26, 223, 164, 28, \
209, 168, 21, 235, 186, 3, 243, 212, 2, 249, \
205, 3, 250, 193, 1, 244, 194, 20, 245, 207, \
9, 248, 200, 16, 248, 198, 4, 244, 203, 4, \
238, 208, 5, 246, 210, 13, 252, 211, 15, 246, \
224, 24, 255, 230, 39, 237, 217, 51, 197, 185, \
92, 131, 107, 34, 128, 99, 23, 148, 104, 32, \
125, 76, 25, 122, 74, 47, 198, 114, 22, 235, \
120, 17, 235, 124, 19, 234, 125, 15, 237, 124, \
6, 168, 105, 26, 72, 36, 22, 226, 159, 15, \
240, 185, 11, 195, 137, 45, 193, 151, 69, 180, \
132, 36, 172, 136, 51, 189, 148, 52, 209, 162, \
57, 219, 157, 18, 184, 126, 25, 167, 121, 22, \
163, 124, 29, 153, 114, 22, 158, 104, 17, 151, \
103, 15, 165, 119, 24, 194, 143, 33, 156, 128, \
55, 195, 159, 99, 222, 195, 103, 146, 105, 49, \
134, 97, 36, 134, 102, 42, 119, 88, 49, 115, \
77, 58, 207, 119, 22, 236, 123, 23, 242, 124, \
29, 237, 130, 25, 235, 130, 21, 153, 74, 20, \
48, 24, 24, 183, 117, 15, 229, 159, 26, 198, \
140, 53, 245, 220, 42, 225, 199, 68, 153, 131, \
113, 143, 121, 108, 168, 143, 116, 198, 151, 43, \
98, 53, 25, 42, 20, 16, 80, 60, 59, 118, \
96, 96, 88, 62, 68, 33, 23, 14, 110, 65, \
14, 202, 146, 68, 138, 119, 100, 164, 128, 101, \
195, 166, 47, 151, 121, 49, 126, 99, 40, 115, \
75, 30, 109, 77, 46, 122, 89, 73, 220, 134, \
37, 231, 144, 38, 236, 127, 25, 241, 131, 25, \
235, 136, 31, 152, 85, 28, 57, 32, 21, 147, \
87, 19, 231, 154, 29, 204, 139, 51, 211, 163, \
41, 208, 159, 51, 164, 127, 95, 153, 119, 104, \
151, 117, 100, 207, 154, 68, 172, 131, 14, 63, \
32, 24, 79, 49, 34, 105, 76, 53, 81, 55, \
34, 76, 45, 8, 185, 127, 18, 207, 153, 55, \
172, 126, 78, 186, 131, 71, 197, 156, 78, 171, \
150, 74, 120, 99, 29, 216, 170, 97, 162, 122, \
78, 133, 95, 76, 192, 118, 22, 232, 153, 44, \
235, 156, 44, 236, 143, 32, 244, 133, 26, 129, \
73, 29, 70, 55, 58, 139, 90, 41, 245, 157, \
18, 245, 177, 10, 230, 169, 7, 222, 163, 15, \
222, 164, 11, 227, 160, 16, 227, 161, 14, 236, \
166, 20, 246, 175, 19, 201, 142, 16, 191, 122, \
9, 196, 126, 6, 200, 131, 8, 218, 140, 17, \
240, 177, 10, 241, 177, 9, 250, 168, 13, 250, \
175, 8, 242, 194, 23, 185, 140, 37, 115, 81, \
39, 250, 231, 123, 194, 166, 109, 135, 92, 82, \
153, 88, 41, 199, 103, 35, 208, 126, 38, 229, \
148, 48, 224, 149, 41, 101, 68, 37, 72, 44, \
46, 113, 73, 31, 241, 134, 13, 243, 147, 7, \
248, 157, 2, 247, 176, 1, 248, 185, 7, 250, \
179, 13, 252, 179, 6, 245, 181, 0, 243, 179, \
6, 243, 176, 6, 253, 154, 9, 252, 147, 4, \
247, 146, 11, 248, 148, 14, 247, 154, 9, 245, \
164, 8, 233, 159, 9, 240, 160, 14, 240, 148, \
28, 199, 128, 33, 118, 90, 47, 253, 243, 146, \
189, 167, 118, 115, 80, 81, 143, 91, 21, 209, \
147, 35, 212, 117, 30, 217, 116, 32, 202, 130, \
44, 91, 79, 54, 79, 50, 48, 112, 78, 50, \
235, 132, 12, 247, 141, 6, 249, 141, 4, 252, \
146, 6, 251, 152, 18, 246, 160, 13, 245, 153, \
20, 245, 152, 14, 243, 154, 2, 245, 147, 6, \
242, 149, 8, 242, 149, 7, 244, 149, 7, 246, \
146, 9, 243, 147, 13, 248, 142, 9, 252, 136, \
2, 251, 132, 4, 247, 134, 13, 238, 168, 57, \
243, 230, 131, 252, 252, 153, 190, 176, 120, 110, \
77, 75, 94, 54, 24, 190, 146, 49, 219, 188, \
56, 231, 160, 63, 211, 111, 40, 110, 75, 66, \
116, 93, 81, 126, 94, 72, 225, 127, 15, 238, \
132, 5, 236, 134, 0, 239, 138, 9, 231, 131, \
13, 225, 136, 8, 236, 133, 9, 234, 131, 15, \
224, 134, 11, 232, 128, 12, 227, 129, 9, 219, \
128, 14, 214, 123, 6, 210, 122, 11, 193, 109, \
7, 191, 114, 13, 199, 112, 16, 179, 104, 29, \
166, 99, 15, 216, 158, 78, 246, 236, 128, 250, \
215, 122, 206, 171, 113, 109, 73, 60, 33, 4, \
26, 57, 24, 25, 210, 158, 71, 242, 194, 67, \
204, 164, 54, 124, 81, 72, 122, 89, 76, 134, \
97, 78, 205, 115, 12, 218, 120, 10, 202, 116, \
5, 179, 106, 9, 138, 82, 25, 118, 68, 36, \
178, 99, 26, 139, 69, 19, 79, 37, 23, 95, \
47, 16, 93, 47, 21, 73, 41, 25, 86, 44, \
16, 101, 55, 26, 81, 42, 12, 131, 77, 16, \
167, 100, 39, 119, 76, 56, 145, 74, 29, 193, \
134, 83, 244, 231, 125, 239, 159, 89, 207, 130, \
87, 76, 39, 22, 29, 5, 0, 49, 19, 14, \
168, 98, 51, 184, 115, 47, 172, 125, 46, 130, \
98, 74, 120, 86, 73, 126, 94, 81, 173, 106, \
14, 208, 116, 16, 195, 115, 17, 199, 119, 13, \
180, 120, 21, 157, 103, 18, 230, 150, 18, 219, \
141, 8, 178, 112, 6, 186, 122, 13, 187, 124, \
7, 179, 126, 7, 186, 126, 12, 194, 129, 16, \
190, 127, 9, 212, 137, 11, 220, 136, 11, 212, \
129, 15, 198, 115, 8, 171, 109, 55, 239, 182, \
99, 232, 179, 95, 188, 126, 75, 58, 25, 12, \
25, 2, 2, 48, 17, 15, 129, 72, 43, 148, \
80, 59, 131, 66, 52, 121, 90, 85, 125, 100, \
81, 113, 83, 79, 124, 75, 27, 183, 104, 22, \
196, 109, 26, 191, 108, 16, 194, 114, 15, 164, \
111, 15, 119, 82, 13, 116, 68, 15, 111, 64, \
16, 97, 54, 9, 94, 46, 17, 86, 44, 11, \
76, 37, 18, 76, 35, 23, 79, 38, 13, 98, \
59, 8, 114, 71, 10, 124, 78, 19, 73, 47, \
27, 142, 126, 63, 237, 198, 101, 237, 214, 112, \
197, 154, 92, 82, 46, 36, 42, 17, 14, 51, \
23, 15, 127, 77, 40, 156, 103, 66, 154, 103, \
65, 110, 80, 64, 101, 78, 72, 91, 62, 67, \
60, 27, 29, 94, 46, 9, 120, 64, 13, 120, \
70, 19, 112, 59, 25, 88, 46, 13, 34, 5, \
12, 28, 0, 11, 29, 0, 9, 52, 21, 11, \
90, 53, 24, 126, 91, 53, 140, 115, 61, 118, \
96, 58, 42, 18, 12, 40, 11, 13, 41, 10, \
14, 40, 10, 11, 51, 17, 29, 188, 144, 72, \
246, 182, 99, 235, 201, 104, 199, 147, 89, 108, \
61, 47, 75, 40, 27, 73, 38, 18, 153, 102, \
53, 177, 127, 77, 187, 137, 78, 112, 76, 47, \
110, 83, 85, 86, 59, 62, 36, 13, 16, 33, \
4, 10, 71, 40, 28, 117, 77, 54, 108, 74, \
48, 98, 61, 35, 48, 18, 9, 33, 4, 8, \
41, 3, 12, 81, 37, 30, 132, 75, 54, 169, \
109, 74, 214, 156, 88, 222, 176, 100, 82, 48, \
32, 40, 3, 15, 39, 2, 15, 38, 8, 15, \
81, 60, 33, 225, 198, 101, 240, 190, 106, 229, \
183, 96, 194, 131, 75, 136, 79, 56, 108, 63, \
39, 105, 58, 36, 154, 93, 56, 146, 89, 52, \
133, 76, 50, 102, 55, 36, 73, 41, 33, 56, \
28, 26, 30, 4, 1, 40, 7, 16, 70, 32, \
22, 97, 42, 23, 112, 57, 34, 100, 49, 43, \
36, 10, 11, 25, 5, 3, 32, 3, 5, 79, \
42, 30, 141, 91, 58, 159, 106, 59, 188, 122, \
76, 201, 147, 81, 124, 97, 54, 33, 3, 5, \
30, 1, 6, 41, 13, 15, 171, 126, 91, 238, \
195, 105, 242, 200, 106, 238, 203, 121, 215, 158, \
99, 161, 102, 70, 135, 87, 58, 134, 84, 51, \
147, 88, 51, 134, 79, 44, 116, 73, 40, 98, \
58, 35, 62, 25, 16, 38, 6, 6, 34, 2, \
3, 48, 13, 11, 60, 21, 16, 56, 18, 14, \
51, 19, 15, 42, 12, 9, 33, 3, 1, 29, \
1, 0, 32, 4, 3, 45, 14, 11, 61, 24, \
14, 65, 29, 15, 82, 43, 20, 85, 46, 23, \
51, 21, 11, 35, 11, 6, 39, 13, 6, 56, \
26, 11, 146, 104, 59, 221, 165, 95, 241, 183, \
106, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '6204';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a0fa4b05991ba7186edd863dd3278b7cb';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_truck8';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{86, 102, 117, 93, 109, 123, 96, 112, 126, 163, 174, \
186, 191, 202, 207, 158, 172, 174, 139, 154, 163, \
109, 121, 137, 100, 109, 129, 101, 114, 140, 111, \
128, 151, 119, 137, 155, 122, 135, 161, 126, 139, \
167, 122, 134, 165, 120, 132, 165, 116, 131, 167, \
116, 132, 168, 113, 133, 166, 109, 132, 163, 110, \
131, 162, 110, 131, 161, 108, 129, 161, 106, 128, \
160, 107, 127, 160, 107, 126, 160, 106, 125, 157, \
104, 123, 153, 104, 124, 153, 102, 124, 155, 100, \
122, 153, 98, 120, 151, 89, 105, 119, 87, 104, \
113, 122, 140, 145, 175, 189, 191, 180, 194, 191, \
146, 162, 158, 143, 161, 162, 130, 145, 155, 111, \
121, 139, 107, 118, 139, 117, 132, 150, 134, 150, \
164, 145, 157, 177, 159, 170, 193, 139, 150, 176, \
127, 138, 167, 124, 138, 171, 121, 138, 172, 118, \
139, 171, 116, 139, 171, 115, 139, 170, 114, 138, \
169, 113, 137, 167, 112, 136, 166, 111, 133, 162, \
110, 131, 160, 108, 129, 159, 109, 129, 161, 108, \
129, 161, 106, 129, 159, 104, 127, 157, 103, 126, \
156, 105, 121, 135, 104, 121, 127, 145, 163, 163, \
149, 164, 165, 148, 162, 165, 132, 148, 152, 139, \
157, 163, 151, 171, 184, 122, 140, 160, 118, 132, \
154, 116, 133, 151, 117, 138, 153, 138, 154, 175, \
152, 167, 191, 141, 156, 183, 129, 143, 172, 125, \
141, 170, 123, 141, 171, 120, 141, 173, 119, 142, \
174, 118, 143, 174, 116, 143, 172, 116, 141, 169, \
115, 139, 165, 111, 133, 156, 109, 130, 151, 108, \
129, 154, 110, 130, 160, 111, 131, 162, 110, 133, \
159, 108, 131, 157, 103, 126, 152, 108, 124, 138, \
104, 122, 128, 120, 139, 140, 120, 135, 141, 128, \
141, 156, 126, 142, 160, 137, 154, 172, 151, 174, \
195, 128, 151, 177, 127, 142, 165, 120, 138, 157, \
116, 140, 158, 125, 147, 169, 134, 154, 179, 131, \
151, 179, 130, 150, 178, 132, 150, 176, 129, 147, \
174, 126, 147, 177, 124, 147, 180, 122, 148, 180, \
122, 148, 177, 121, 144, 171, 116, 135, 159, 109, \
127, 147, 109, 128, 144, 109, 127, 147, 110, 127, \
151, 113, 131, 155, 113, 134, 154, 109, 129, 149, \
101, 121, 141, 100, 116, 131, 109, 126, 137, 108, \
126, 133, 108, 123, 134, 122, 136, 157, 131, 146, \
172, 132, 150, 173, 133, 155, 179, 131, 148, 172, \
112, 117, 136, 82, 88, 103, 86, 102, 116, 103, \
120, 136, 125, 141, 160, 135, 151, 172, 146, 162, \
185, 148, 166, 188, 136, 154, 179, 131, 152, 182, \
129, 152, 185, 128, 152, 185, 128, 151, 181, 126, \
145, 171, 115, 129, 152, 108, 121, 138, 112, 125, \
138, 113, 126, 139, 106, 120, 133, 105, 119, 133, \
108, 123, 135, 96, 112, 124, 99, 115, 127, 124, \
140, 155, 136, 152, 167, 123, 139, 155, 120, 136, \
148, 124, 140, 157, 128, 145, 169, 126, 146, 166, \
135, 152, 169, 129, 132, 148, 100, 90, 98, 75, \
66, 71, 54, 57, 62, 59, 66, 73, 66, 72, \
80, 84, 90, 100, 111, 118, 131, 128, 143, 160, \
138, 157, 180, 136, 157, 186, 134, 157, 190, 133, \
156, 190, 134, 154, 185, 135, 150, 176, 123, 132, \
155, 111, 119, 136, 115, 124, 135, 117, 126, 135, \
102, 111, 116, 91, 101, 104, 92, 103, 110, 88, \
98, 105, 96, 107, 114, 144, 168, 176, 148, 169, \
180, 123, 143, 156, 138, 155, 168, 139, 156, 171, \
134, 149, 167, 126, 142, 157, 137, 141, 151, 114, \
99, 104, 115, 100, 101, 91, 83, 82, 61, 63, \
62, 65, 69, 72, 60, 65, 69, 60, 64, 69, \
57, 62, 67, 66, 76, 87, 127, 146, 169, 138, \
166, 196, 138, 163, 193, 139, 161, 195, 135, 157, \
188, 136, 153, 175, 124, 136, 154, 111, 120, 133, \
116, 124, 133, 116, 123, 132, 106, 112, 114, 85, \
91, 88, 85, 91, 95, 89, 95, 100, 88, 97, \
101, 138, 164, 176, 146, 169, 182, 129, 149, 163, \
138, 155, 170, 143, 157, 172, 144, 154, 166, 141, \
147, 158, 114, 108, 113, 122, 105, 103, 145, 135, \
133, 92, 91, 88, 60, 65, 63, 68, 76, 78, \
85, 93, 96, 93, 101, 104, 66, 73, 76, 64, \
70, 79, 124, 143, 165, 143, 173, 204, 143, 169, \
196, 146, 168, 199, 141, 163, 191, 138, 156, 172, \
123, 137, 150, 109, 120, 130, 116, 125, 133, 108, \
115, 124, 104, 109, 110, 92, 97, 92, 84, 87, \
91, 88, 94, 98, 87, 96, 98, 133, 153, 176, \
133, 150, 170, 131, 146, 163, 120, 137, 150, 128, \
142, 151, 140, 145, 151, 130, 124, 128, 105, 96, \
95, 153, 146, 141, 153, 149, 144, 97, 97, 94, \
58, 61, 59, 68, 76, 78, 64, 72, 74, 68, \
76, 78, 70, 77, 79, 66, 71, 78, 116, 132, \
151, 152, 178, 205, 149, 173, 198, 153, 172, 199, \
150, 167, 189, 148, 161, 174, 135, 144, 154, 118, \
127, 135, 113, 122, 130, 107, 114, 123, 100, 105, \
106, 97, 102, 96, 90, 94, 96, 80, 85, 88, \
86, 95, 97, 129, 144, 164, 121, 134, 147, 115, \
127, 134, 107, 121, 126, 112, 123, 126, 118, 117, \
116, 102, 89, 85, 128, 119, 112, 154, 157, 148, \
142, 144, 138, 99, 99, 97, 62, 63, 61, 72, \
77, 79, 64, 70, 72, 58, 63, 66, 67, 72, \
74, 63, 67, 73, 102, 115, 129, 161, 183, 205, \
155, 178, 200, 160, 177, 199, 159, 174, 190, 143, \
154, 161, 137, 142, 150, 118, 124, 132, 109, 118, \
125, 106, 113, 122, 103, 108, 109, 97, 102, 96, \
101, 105, 107, 75, 81, 83, 76, 84, 85, 89, \
100, 104, 92, 101, 98, 88, 95, 88, 89, 95, \
91, 89, 91, 88, 91, 86, 79, 121, 108, 100, \
144, 137, 127, 151, 157, 147, 142, 146, 139, 109, \
109, 106, 66, 66, 65, 67, 70, 71, 70, 74, \
75, 61, 65, 66, 67, 70, 71, 68, 71, 75, \
93, 102, 112, 167, 184, 200, 163, 184, 202, 167, \
184, 201, 169, 183, 194, 132, 142, 147, 136, 140, \
146, 126, 132, 139, 110, 119, 126, 114, 121, 130, \
96, 101, 102, 93, 98, 92, 98, 102, 102, 82, \
88, 88, 75, 84, 83, 64, 71, 62, 69, 73, \
62, 72, 75, 61, 75, 71, 61, 77, 70, 63, \
117, 110, 102, 145, 139, 129, 136, 135, 125, 151, \
154, 145, 150, 153, 146, 111, 111, 108, 57, 57, \
55, 52, 54, 53, 59, 62, 61, 54, 57, 56, \
56, 58, 58, 63, 65, 66, 75, 81, 87, 158, \
171, 182, 174, 193, 208, 172, 190, 206, 168, 183, \
192, 134, 145, 149, 131, 137, 145, 131, 137, 146, \
110, 119, 127, 115, 122, 131, 100, 105, 106, 95, \
100, 94, 92, 97, 95, 84, 90, 89, 72, 81, \
78, 76, 79, 67, 78, 78, 68, 82, 80, 71, \
81, 67, 59, 96, 80, 72, 167, 161, 152, 148, \
152, 143, 128, 131, 123, 154, 152, 145, 155, 154, \
148, 84, 84, 82, 38, 39, 37, 35, 37, 35, \
40, 42, 40, 54, 56, 54, 88, 89, 88, 113, \
115, 115, 121, 125, 127, 148, 158, 165, 158, 175, \
188, 154, 174, 187, 163, 180, 189, 157, 171, 175, \
135, 143, 152, 136, 144, 153, 113, 122, 129, 112, \
118, 127, 111, 116, 117, 105, 110, 104, 87, 92, \
89, 82, 88, 85, 78, 87, 83, 80, 82, 72, \
86, 81, 75, 98, 88, 84, 95, 78, 73, 122, \
109, 101, 179, 177, 169, 154, 159, 151, 133, 135, \
129, 141, 139, 134, 113, 112, 107, 42, 42, 38, \
31, 32, 28, 31, 33, 31, 27, 29, 29, 117, \
118, 119, 170, 172, 174, 143, 145, 146, 152, 154, \
156, 93, 99, 102, 73, 83, 90, 82, 97, 105, \
93, 108, 114, 142, 155, 160, 139, 149, 156, 128, \
137, 144, 113, 124, 129, 106, 115, 121, 130, 138, \
140, 116, 123, 121, 89, 94, 90, 80, 85, 82, \
87, 94, 90, 86, 88, 79, 87, 80, 74, 95, \
80, 77, 121, 105, 102, 138, 132, 125, 167, 170, \
161, 163, 166, 157, 141, 140, 134, 105, 106, 100, \
50, 50, 45, 26, 27, 21, 25, 26, 21, 27, \
29, 28, 27, 29, 31, 166, 167, 170, 183, 184, \
189, 98, 99, 102, 132, 133, 135, 67, 69, 71, \
57, 59, 61, 127, 135, 139, 99, 111, 115, 118, \
130, 134, 144, 155, 160, 120, 131, 135, 113, 123, \
125, 107, 117, 119, 144, 154, 156, 117, 126, 126, \
94, 99, 96, 74, 79, 75, 94, 99, 95, 88, \
91, 82, 79, 74, 68, 102, 89, 85, 165, 153, \
149, 141, 138, 131, 156, 158, 150, 168, 170, 162, \
117, 117, 111, 56, 57, 51, 28, 29, 24, 26, \
27, 22, 26, 27, 22, 26, 28, 26, 40, 41, \
42, 169, 170, 173, 157, 158, 162, 97, 98, 101, \
133, 134, 136, 72, 73, 75, 63, 64, 66, 144, \
150, 154, 110, 120, 124, 96, 105, 110, 135, 144, \
149, 121, 130, 132, 102, 109, 108, 101, 108, 107, \
117, 125, 124, 101, 107, 106, 90, 95, 91, 64, \
69, 65, 98, 103, 99, 71, 74, 65, 63, 59, \
52, 121, 111, 106, 180, 173, 168, 137, 136, 130, \
149, 151, 144, 152, 153, 147, 69, 69, 64, 27, \
28, 24, 26, 27, 22, 26, 27, 22, 26, 27, \
23, 23, 25, 21, 47, 49, 47, 164, 165, 167, \
129, 130, 134, 96, 97, 99, 141, 142, 144, 104, \
105, 107, 76, 77, 79, 103, 108, 111, 84, 91, \
95, 84, 90, 94, 118, 124, 129, 118, 123, 124, \
84, 87, 84, 81, 84, 82, 100, 103, 100, 95, \
98, 95, 83, 88, 83, 66, 71, 65, 93, 98, \
92, 66, 69, 60, 58, 56, 49, 108, 102, 96, \
177, 177, 171, 141, 143, 138, 136, 137, 132, 88, \
89, 84, 32, 33, 29, 26, 26, 24, 24, 24, \
22, 24, 24, 22, 24, 25, 22, 20, 22, 17, \
77, 79, 76, 190, 192, 192, 165, 166, 169, 166, \
167, 169, 204, 205, 207, 209, 210, 212, 209, 210, \
212, 210, 212, 214, 209, 213, 215, 208, 211, 214, \
211, 214, 217, 203, 206, 207, 167, 169, 167, 151, \
153, 151, 144, 147, 144, 118, 121, 117, 98, 103, \
96, 72, 77, 70, 105, 110, 103, 63, 66, 57, \
54, 54, 46, 89, 86, 79, 174, 178, 172, 140, \
144, 140, 92, 92, 89, 37, 37, 35, 25, 26, \
24, 26, 26, 26, 25, 25, 25, 23, 23, 23, \
25, 26, 24, 46, 48, 42, 135, 137, 132, 223, \
225, 223, 235, 236, 237, 231, 232, 234, 209, 210, \
212, 227, 228, 230, 233, 234, 236, 235, 236, 237, \
236, 236, 238, 240, 240, 242, 243, 243, 245, 203, \
206, 207, 137, 143, 142, 141, 147, 146, 143, 149, \
148, 119, 125, 123, 108, 114, 105, 81, 87, 77, \
103, 108, 99, 62, 65, 56, 56, 57, 49, 80, \
80, 72, 161, 170, 162, 109, 116, 112, 43, 41, \
40, 26, 26, 24, 25, 26, 25, 25, 25, 26, \
23, 23, 24, 20, 20, 21, 37, 37, 36, 91, \
94, 86, 153, 155, 150, 228, 230, 227, 219, 221, \
220, 227, 228, 229, 203, 204, 206, 198, 199, 201, \
217, 218, 220, 224, 223, 226, 220, 218, 221, 232, \
231, 233, 236, 235, 237, 154, 157, 159, 70, 80, \
81, 62, 72, 73, 59, 69, 70, 68, 77, 76, \
96, 102, 93, 86, 92, 82, 83, 89, 79, 51, \
54, 46, 54, 56, 49, 70, 71, 65, 118, 124, \
117, 56, 61, 56, 25, 24, 23, 26, 26, 24, \
24, 24, 24, 22, 21, 23, 21, 22, 25, 21, \
20, 22, 34, 33, 31, 66, 69, 62, 133, 136, \
130, 239, 241, 238, 220, 221, 221, 235, 236, 237, \
230, 231, 232, 209, 210, 211, 230, 231, 232, 227, \
227, 227, 230, 229, 229, 248, 248, 249, 244, 244, \
246, 151, 156, 158, 73, 83, 86, 45, 54, 57, \
39, 49, 52, 66, 75, 76, 93, 99, 92, 87, \
93, 84, 78, 83, 75, 40, 42, 35, 42, 43, \
36, 54, 55, 48, 59, 61, 55, 30, 32, 28, \
27, 27, 26, 48, 48, 49, 54, 52, 52, 31, \
29, 29, 22, 25, 27, 27, 28, 27, 33, 31, \
26, 31, 34, 27, 114, 116, 111, 239, 241, 238, \
236, 237, 237, 238, 238, 239, 237, 237, 237, 220, \
220, 220, 166, 166, 166, 109, 108, 106, 121, 121, \
118, 197, 199, 199, 241, 245, 246, 156, 162, 165, \
77, 85, 88, 55, 63, 66, 51, 59, 63, 73, \
81, 82, 81, 86, 81, 81, 86, 79, 89, 94, \
87, 69, 70, 60, 65, 67, 56, 73, 75, 64, \
74, 75, 67, 61, 62, 57, 35, 36, 33, 62, \
62, 63, 72, 71, 69, 48, 48, 42, 50, 54, \
51, 75, 77, 72, 91, 90, 82, 83, 85, 78, \
134, 136, 131, 231, 233, 231, 245, 246, 246, 238, \
238, 238, 243, 243, 243, 207, 207, 207, 72, 71, \
72, 43, 43, 40, 46, 47, 43, 101, 104, 103, \
219, 223, 225, 163, 169, 172, 77, 85, 88, 75, \
83, 86, 67, 75, 78, 79, 87, 88, 95, 100, \
95, 105, 110, 104, 113, 118, 112, 91, 94, 78, \
91, 93, 78, 91, 93, 78, 91, 93, 82, 77, \
78, 72, 41, 42, 38, 46, 46, 45, 51, 51, \
48, 40, 41, 36, 53, 58, 58, 70, 73, 73, \
63, 63, 59, 67, 69, 63, 109, 111, 106, 184, \
186, 183, 212, 213, 213, 221, 222, 222, 243, 243, \
243, 182, 182, 182, 48, 48, 48, 80, 80, 77, \
91, 92, 89, 73, 76, 75, 190, 194, 195, 166, \
172, 175, 83, 91, 94, 66, 74, 77, 54, 62, \
66, 73, 81, 82, 106, 111, 106, 126, 131, 125, \
122, 127, 121, 90, 93, 74, 91, 94, 75, 88, \
91, 72, 85, 87, 74, 74, 75, 67, 42, 43, \
38, 36, 37, 33, 48, 48, 47, 37, 38, 43, \
62, 67, 77, 70, 73, 85, 24, 23, 31, 30, \
32, 27, 47, 50, 44, 109, 111, 109, 155, 157, \
157, 165, 165, 165, 190, 190, 190, 138, 138, 138, \
51, 51, 51, 53, 52, 50, 66, 67, 63, 69, \
72, 71, 162, 167, 168, 161, 167, 170, 82, 90, \
93, 62, 70, 73, 54, 62, 65, 45, 52, 54, \
81, 87, 81, 130, 135, 128, 129, 134, 128, 88, \
91, 73, 87, 90, 73, 84, 87, 70, 82, 85, \
71, 82, 84, 74, 69, 70, 63, 54, 55, 49, \
50, 50, 49, 39, 41, 48, 61, 68, 82, 76, \
79, 97, 28, 27, 40, 31, 33, 28, 55, 57, \
52, 147, 149, 147, 223, 224, 224, 229, 229, 229, \
220, 219, 219, 114, 114, 114, 43, 43, 43, 40, \
40, 37, 43, 43, 40, 57, 60, 59, 92, 96, \
97, 114, 120, 123, 66, 73, 76, 45, 53, 56, \
49, 57, 60, 59, 66, 68, 90, 96, 90, 111, \
116, 110, 111, 116, 110, 84, 86, 72, 84, 86, \
72, 78, 80, 65, 75, 77, 63, 75, 77, 66, \
70, 71, 62, 77, 78, 72, 67, 69, 62, 31, \
35, 32, 36, 45, 50, 46, 52, 62, 28, 29, \
36, 32, 34, 29, 67, 69, 64, 128, 130, 127, \
176, 178, 178, 201, 201, 201, 201, 201, 201, 91, \
91, 91, 43, 43, 43, 43, 43, 40, 44, 44, \
41, 56, 58, 58, 34, 38, 40, 45, 51, 54, \
39, 47, 50, 24, 32, 35, 25, 33, 36, 56, \
64, 65, 85, 90, 85, 108, 113, 107, 116, 121, \
115, 65, 67, 57, 67, 69, 58, 66, 68, 58, \
64, 66, 56, 64, 66, 56, 65, 66, 59, 83, \
84, 78, 70, 72, 63, 31, 36, 25, 29, 37, \
32, 35, 41, 41, 37, 39, 38, 41, 43, 39, \
31, 32, 29, 34, 35, 34, 47, 48, 49, 67, \
67, 67, 78, 78, 78, 49, 49, 48, 48, 48, \
47, 44, 44, 42, 38, 39, 37, 54, 56, 56, \
34, 38, 39, 23, 28, 31, 21, 27, 30, 15, \
20, 24, 19, 25, 28, 38, 44, 46, 67, 72, \
69, 81, 86, 83, 89, 94, 91, 59, 61, 56, \
66, 68, 63, 70, 72, 67, 78, 80, 74, 91, \
93, 87, 99, 101, 95, 97, 99, 93, 86, 87, \
81, 74, 75, 69, 72, 74, 69, 60, 62, 58, \
36, 37, 34, 32, 32, 32, 25, 25, 25, 22, \
22, 23, 24, 24, 25, 24, 24, 23, 23, 23, \
21, 29, 29, 27, 46, 46, 44, 44, 45, 44, \
37, 38, 38, 59, 60, 61, 37, 38, 39, 21, \
23, 25, 17, 20, 23, 17, 20, 24, 25, 27, \
31, 32, 34, 38, 35, 38, 41, 36, 39, 43, \
44, 47, 50, 70, 72, 69, 76, 78, 75, 81, \
83, 80, 84, 86, 82, 89, 91, 86, 89, 91, \
86, 92, 94, 89, 101, 103, 98, 101, 102, 97, \
92, 93, 88, 82, 83, 78, 71, 72, 68, 60, \
60, 60, 51, 51, 51, 44, 44, 44, 41, 41, \
41, 37, 37, 35, 30, 30, 28, 26, 26, 24, \
42, 42, 40, 54, 55, 53, 49, 51, 51, 59, \
61, 60, 30, 32, 31, 21, 23, 24, 20, 21, \
25, 21, 22, 25, 26, 27, 30, 29, 31, 34, \
28, 31, 35, 30, 34, 38, 31, 34, 39, 78, \
80, 77, 75, 77, 74, 70, 72, 69, 71, 73, \
69, 71, 73, 68, 69, 71, 66, 80, 82, 77, \
86, 87, 82, 78, 79, 74, 76, 77, 72, 87, \
88, 83, 92, 93, 88, 85, 86, 84, 83, 83, \
82, 82, 82, 81, 71, 72, 70, 67, 67, 64, \
63, 63, 60, 56, 57, 53, 49, 50, 46, 55, \
57, 54, 56, 58, 56, 41, 43, 41, 22, 24, \
22, 22, 24, 23, 24, 25, 26, 25, 27, 28, \
35, 37, 37, 41, 43, 44, 29, 32, 35, 29, \
33, 36, 32, 36, 40, 87, 89, 86, 75, 77, \
74, 56, 58, 55, 55, 57, 53, 60, 62, 57, \
62, 64, 59, 71, 73, 68, 74, 76, 71, 71, \
72, 67, 75, 76, 71, 81, 82, 77, 82, 83, \
78, 80, 81, 77, 76, 77, 73, 81, 82, 78, \
80, 80, 76, 78, 79, 74, 78, 79, 74, 76, \
77, 72, 72, 73, 68, 68, 70, 65, 63, 65, \
61, 49, 51, 47, 44, 46, 42, 45, 47, 44, \
48, 50, 49, 60, 62, 61, 80, 82, 81, 64, \
66, 66, 50, 54, 56, 55, 59, 61, 61, 65, \
67, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '6514';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1ad4b8864f7b7fb511a462bdd83a593fd1';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_automobile9';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{42, 26, 27, 47, 31, 32, 53, 37, 38, 52, 36, \
37, 52, 35, 36, 54, 37, 38, 53, 37, 37, \
52, 35, 36, 53, 37, 37, 54, 38, 37, 55, \
39, 38, 55, 39, 38, 54, 38, 36, 60, 41, \
38, 62, 42, 39, 61, 42, 38, 62, 43, 39, \
61, 42, 39, 59, 45, 44, 58, 45, 43, 44, \
30, 29, 46, 32, 31, 44, 31, 28, 44, 31, \
25, 44, 31, 25, 42, 29, 23, 42, 29, 23, \
42, 31, 27, 41, 31, 30, 42, 32, 30, 42, \
32, 30, 49, 39, 37, 46, 33, 33, 47, 34, \
34, 52, 39, 39, 52, 38, 38, 50, 37, 34, \
52, 39, 36, 54, 41, 38, 52, 39, 37, 52, \
38, 40, 51, 37, 43, 52, 38, 45, 53, 38, \
45, 50, 36, 42, 54, 38, 35, 55, 39, 33, \
56, 39, 33, 58, 41, 35, 56, 40, 34, 57, \
43, 40, 61, 47, 45, 46, 32, 30, 46, 32, \
30, 44, 30, 27, 44, 31, 25, 44, 31, 25, \
43, 30, 24, 41, 29, 23, 40, 29, 26, 40, \
30, 28, 42, 32, 30, 42, 32, 30, 42, 32, \
30, 48, 36, 36, 48, 36, 36, 49, 37, 37, \
47, 35, 33, 46, 35, 29, 48, 37, 31, 52, \
41, 35, 51, 40, 34, 50, 38, 37, 48, 36, \
39, 49, 36, 40, 48, 36, 40, 49, 36, 39, \
50, 37, 32, 51, 37, 29, 52, 38, 30, 56, \
42, 34, 56, 43, 35, 59, 44, 40, 63, 48, \
44, 45, 31, 27, 47, 32, 28, 46, 32, 27, \
44, 31, 25, 44, 31, 25, 43, 30, 24, 40, \
28, 22, 39, 28, 24, 39, 29, 27, 41, 31, \
29, 42, 32, 30, 49, 39, 37, 31, 18, 16, \
31, 18, 16, 38, 24, 22, 36, 23, 18, 38, \
26, 16, 39, 27, 17, 41, 28, 19, 38, 26, \
16, 41, 29, 19, 41, 28, 19, 42, 30, 21, \
42, 29, 20, 45, 33, 24, 54, 40, 31, 55, \
41, 32, 59, 46, 37, 65, 52, 43, 71, 57, \
49, 73, 57, 51, 67, 51, 45, 47, 31, 25, \
49, 33, 27, 48, 33, 27, 48, 35, 29, 48, \
35, 29, 48, 35, 29, 43, 31, 25, 42, 31, \
27, 41, 31, 29, 40, 30, 28, 41, 31, 29, \
48, 38, 36, 83, 65, 57, 85, 67, 60, 86, \
68, 61, 101, 84, 75, 106, 89, 77, 109, 92, \
80, 104, 87, 76, 98, 81, 69, 101, 85, 68, \
84, 69, 47, 82, 66, 44, 89, 74, 52, 90, \
74, 53, 107, 90, 78, 133, 116, 107, 147, 130, \
121, 133, 117, 108, 139, 122, 113, 145, 127, 120, \
114, 96, 89, 46, 28, 21, 51, 33, 26, 48, \
31, 25, 47, 34, 28, 46, 33, 27, 44, 31, \
25, 39, 26, 20, 37, 26, 22, 38, 28, 26, \
38, 28, 26, 41, 31, 29, 53, 43, 41, 175, \
152, 138, 172, 148, 134, 176, 153, 139, 185, 162, \
149, 188, 164, 152, 195, 171, 159, 186, 163, 150, \
175, 152, 140, 174, 152, 134, 153, 131, 108, 154, \
132, 109, 177, 155, 133, 171, 149, 127, 183, 161, \
148, 211, 189, 180, 217, 195, 186, 192, 170, 161, \
185, 164, 155, 199, 180, 173, 161, 142, 135, 52, \
33, 26, 50, 31, 24, 49, 32, 26, 47, 34, \
28, 47, 34, 28, 43, 30, 24, 38, 25, 19, \
35, 24, 20, 38, 28, 26, 43, 33, 31, 46, \
36, 34, 50, 39, 37, 166, 136, 117, 156, 127, \
108, 163, 134, 115, 173, 143, 126, 174, 144, 132, \
179, 149, 137, 171, 140, 128, 177, 146, 135, 189, \
158, 147, 197, 166, 155, 203, 173, 161, 206, 175, \
163, 201, 171, 159, 203, 175, 166, 207, 180, 171, \
187, 160, 151, 174, 147, 138, 172, 146, 137, 186, \
165, 157, 164, 143, 136, 50, 30, 22, 50, 30, \
23, 49, 31, 24, 44, 31, 24, 44, 31, 25, \
41, 28, 22, 36, 23, 17, 37, 26, 22, 39, \
29, 27, 38, 28, 26, 46, 36, 34, 63, 53, \
51, 178, 148, 127, 173, 142, 120, 162, 131, 109, \
165, 133, 114, 171, 139, 128, 179, 147, 136, 170, \
140, 129, 178, 149, 137, 187, 157, 149, 195, 163, \
160, 198, 167, 164, 199, 168, 165, 201, 170, 167, \
199, 171, 165, 202, 175, 168, 193, 165, 158, 198, \
171, 164, 201, 175, 168, 165, 147, 141, 152, 134, \
127, 52, 32, 26, 48, 30, 23, 47, 31, 25, \
41, 28, 22, 43, 29, 24, 41, 28, 22, 37, \
23, 18, 36, 24, 21, 36, 26, 25, 37, 27, \
25, 47, 37, 34, 56, 46, 42, 170, 149, 126, \
162, 137, 113, 160, 132, 109, 158, 129, 111, 174, \
149, 145, 195, 170, 169, 198, 179, 176, 194, 184, \
172, 196, 184, 174, 199, 182, 178, 199, 182, 178, \
205, 188, 184, 206, 189, 185, 201, 185, 182, 209, \
193, 190, 195, 179, 176, 218, 202, 199, 235, 221, \
220, 206, 199, 205, 121, 109, 110, 48, 32, 31, \
45, 32, 32, 43, 32, 31, 41, 28, 24, 38, \
24, 20, 35, 20, 15, 37, 21, 17, 34, 23, \
21, 37, 28, 28, 39, 28, 29, 53, 41, 36, \
91, 79, 67, 146, 125, 101, 148, 123, 101, 165, \
136, 115, 153, 127, 113, 202, 185, 187, 216, 199, \
208, 205, 194, 200, 197, 195, 189, 211, 207, 199, \
211, 202, 199, 208, 199, 195, 210, 200, 197, 208, \
198, 195, 200, 190, 189, 212, 202, 202, 205, 195, \
195, 216, 206, 207, 226, 217, 218, 228, 224, 226, \
144, 131, 127, 45, 27, 19, 52, 35, 29, 50, \
33, 30, 48, 28, 24, 45, 27, 23, 38, 21, \
18, 34, 20, 17, 31, 21, 18, 34, 24, 23, \
37, 25, 25, 75, 62, 54, 167, 156, 137, 147, \
120, 94, 146, 117, 96, 163, 130, 113, 166, 139, \
129, 213, 199, 205, 212, 199, 213, 199, 187, 201, \
204, 195, 201, 216, 206, 207, 213, 201, 201, 208, \
196, 197, 213, 202, 202, 210, 199, 199, 203, 191, \
195, 213, 201, 205, 207, 195, 200, 218, 206, 211, \
220, 209, 212, 231, 223, 215, 211, 193, 178, 90, \
63, 46, 65, 36, 22, 56, 27, 18, 54, 22, \
17, 53, 27, 23, 43, 25, 22, 35, 24, 22, \
34, 23, 19, 39, 25, 22, 45, 30, 28, 73, \
60, 48, 157, 145, 121, 180, 147, 118, 172, 137, \
117, 156, 118, 105, 194, 161, 154, 218, 197, 201, \
214, 194, 207, 206, 186, 200, 215, 193, 202, 214, \
195, 199, 206, 190, 193, 201, 185, 188, 201, 185, \
188, 195, 180, 183, 194, 178, 184, 206, 190, 196, \
205, 189, 196, 202, 185, 192, 199, 184, 188, 179, \
164, 155, 167, 141, 125, 120, 82, 64, 108, 66, \
54, 104, 60, 53, 95, 52, 47, 79, 45, 41, \
56, 36, 34, 35, 24, 24, 44, 30, 25, 44, \
26, 20, 51, 35, 29, 72, 57, 42, 153, 141, \
114, 200, 163, 133, 181, 139, 120, 180, 134, 124, \
206, 158, 152, 209, 167, 162, 208, 173, 175, 211, \
176, 182, 213, 172, 175, 207, 173, 175, 199, 174, \
178, 197, 172, 176, 191, 166, 170, 188, 163, 167, \
190, 165, 169, 194, 169, 173, 196, 171, 176, 180, \
155, 160, 176, 151, 155, 169, 143, 142, 168, 129, \
124, 162, 112, 104, 160, 107, 104, 158, 106, 104, \
156, 106, 102, 152, 112, 108, 140, 113, 111, 120, \
102, 102, 101, 81, 77, 94, 71, 66, 91, 71, \
65, 82, 66, 50, 162, 149, 121, 149, 109, 79, \
141, 92, 72, 164, 106, 98, 169, 105, 97, 175, \
113, 97, 173, 122, 113, 182, 134, 129, 194, 138, \
133, 197, 147, 145, 190, 149, 150, 195, 154, 155, \
196, 156, 156, 197, 156, 157, 198, 157, 157, 200, \
160, 159, 199, 159, 158, 200, 159, 159, 205, 165, \
167, 211, 171, 180, 214, 164, 169, 219, 160, 163, \
213, 154, 159, 204, 150, 154, 197, 149, 145, 195, \
151, 148, 201, 163, 162, 207, 174, 174, 172, 141, \
139, 143, 114, 112, 161, 136, 132, 121, 103, 89, \
164, 150, 124, 120, 78, 51, 86, 30, 14, 97, \
27, 18, 106, 27, 18, 114, 40, 21, 110, 54, \
39, 100, 53, 42, 120, 66, 56, 145, 87, 78, \
157, 99, 92, 171, 113, 106, 178, 120, 113, 178, \
121, 113, 186, 128, 119, 190, 133, 123, 188, 131, \
121, 190, 133, 123, 188, 131, 126, 180, 128, 139, \
189, 131, 137, 201, 139, 141, 204, 147, 150, 197, \
149, 152, 198, 156, 155, 199, 154, 154, 204, 156, \
154, 210, 159, 157, 220, 177, 177, 204, 169, 172, \
192, 163, 165, 174, 154, 144, 146, 131, 109, 135, \
94, 68, 90, 28, 11, 99, 17, 6, 102, 12, \
3, 93, 17, 3, 67, 16, 6, 48, 11, 5, \
58, 17, 10, 92, 30, 19, 121, 47, 32, 129, \
55, 40, 126, 52, 38, 127, 53, 38, 128, 54, \
36, 130, 57, 38, 132, 58, 39, 138, 64, 45, \
149, 78, 63, 126, 67, 69, 130, 69, 66, 136, \
77, 67, 126, 75, 65, 104, 65, 61, 97, 64, \
66, 120, 75, 76, 148, 89, 88, 173, 104, 101, \
199, 144, 148, 215, 176, 185, 187, 155, 161, 132, \
109, 104, 143, 127, 109, 134, 96, 74, 97, 36, \
21, 99, 16, 5, 104, 14, 6, 88, 18, 11, \
46, 6, 3, 42, 18, 15, 48, 21, 19, 71, \
13, 4, 103, 23, 3, 114, 31, 10, 113, 30, \
8, 112, 30, 7, 115, 33, 9, 119, 36, 12, \
117, 34, 9, 116, 33, 9, 120, 40, 18, 103, \
36, 25, 101, 36, 20, 97, 41, 19, 62, 20, \
5, 33, 5, 3, 36, 10, 13, 44, 5, 6, \
86, 25, 23, 112, 34, 27, 130, 67, 70, 189, \
146, 155, 144, 111, 118, 111, 88, 85, 124, 107, \
91, 123, 94, 82, 154, 112, 104, 133, 79, 75, \
85, 24, 22, 65, 14, 13, 42, 18, 13, 60, \
48, 42, 67, 45, 46, 62, 22, 12, 89, 26, \
4, 108, 27, 5, 113, 27, 1, 108, 30, 1, \
111, 32, 4, 115, 34, 8, 116, 35, 9, 116, \
35, 8, 116, 35, 8, 120, 37, 7, 114, 36, \
10, 91, 33, 14, 38, 12, 4, 45, 32, 24, \
55, 38, 37, 38, 19, 20, 53, 13, 9, 96, \
24, 8, 95, 21, 13, 130, 77, 77, 132, 105, \
98, 113, 97, 86, 139, 120, 109, 146, 121, 116, \
161, 129, 126, 133, 94, 93, 64, 19, 20, 47, \
6, 6, 50, 32, 26, 89, 81, 74, 94, 75, \
75, 60, 26, 18, 79, 23, 6, 101, 21, 5, \
107, 21, 1, 102, 25, 0, 104, 25, 1, 107, \
26, 4, 109, 28, 6, 111, 29, 7, 114, 32, \
7, 117, 31, 0, 107, 29, 3, 76, 21, 8, \
36, 16, 9, 49, 42, 33, 58, 45, 40, 46, \
34, 36, 40, 13, 10, 80, 20, 4, 88, 18, \
9, 90, 40, 34, 149, 127, 115, 113, 100, 88, \
171, 151, 144, 165, 145, 138, 164, 138, 133, 139, \
106, 103, 71, 32, 31, 32, 1, 0, 58, 44, \
36, 123, 118, 110, 140, 124, 123, 67, 35, 31, \
64, 10, 3, 91, 15, 9, 96, 15, 5, 92, \
18, 2, 97, 18, 3, 101, 19, 6, 103, 21, \
7, 103, 21, 7, 105, 24, 8, 106, 29, 4, \
98, 31, 11, 61, 16, 9, 39, 23, 18, 75, \
68, 62, 86, 72, 67, 61, 49, 52, 36, 14, \
15, 58, 11, 4, 58, 5, 1, 71, 33, 29, \
134, 117, 109, 107, 94, 87, 150, 129, 127, 174, \
157, 150, 179, 157, 152, 181, 154, 150, 153, 122, \
119, 102, 76, 71, 77, 65, 57, 128, 122, 114, \
125, 112, 110, 60, 36, 35, 47, 6, 6, 64, \
5, 6, 72, 7, 5, 68, 9, 2, 74, 8, \
0, 80, 10, 3, 82, 13, 5, 82, 13, 5, \
86, 17, 7, 89, 25, 6, 83, 29, 14, 46, \
13, 7, 48, 35, 32, 106, 98, 94, 130, 114, \
109, 78, 67, 70, 35, 18, 23, 68, 38, 36, \
130, 93, 91, 145, 120, 116, 150, 138, 133, 132, \
119, 118, 158, 137, 140, 180, 165, 159, 178, 160, \
154, 172, 151, 146, 168, 144, 140, 153, 131, 124, \
92, 80, 72, 141, 134, 127, 115, 103, 101, 48, \
33, 33, 60, 38, 40, 52, 18, 21, 38, 1, \
2, 42, 8, 6, 70, 27, 20, 67, 21, 14, \
60, 14, 7, 57, 11, 3, 56, 9, 1, 63, \
13, 2, 59, 18, 9, 30, 7, 5, 57, 45, \
45, 127, 116, 114, 158, 141, 136, 92, 80, 83, \
33, 21, 27, 44, 26, 28, 103, 81, 79, 123, \
107, 104, 124, 115, 113, 155, 143, 145, 185, 166, \
172, 171, 155, 151, 158, 140, 136, 130, 111, 108, \
99, 79, 74, 65, 47, 39, 50, 37, 29, 150, \
138, 132, 135, 120, 119, 31, 24, 22, 33, 29, \
28, 28, 18, 17, 14, 2, 1, 32, 19, 16, \
92, 72, 64, 100, 77, 67, 98, 75, 65, 90, \
67, 57, 69, 43, 35, 52, 15, 11, 33, 4, \
2, 23, 7, 6, 59, 47, 46, 122, 109, 108, \
114, 98, 94, 92, 80, 81, 27, 17, 21, 8, \
0, 0, 6, 0, 0, 75, 63, 61, 164, 155, \
154, 182, 171, 174, 189, 172, 179, 156, 136, 136, \
138, 118, 118, 116, 95, 95, 93, 74, 70, 71, \
53, 45, 53, 35, 29, 72, 54, 51, 64, 45, \
45, 15, 7, 6, 1, 2, 0, 4, 2, 0, \
6, 1, 0, 10, 2, 0, 18, 7, 2, 23, \
11, 6, 30, 18, 14, 40, 29, 23, 50, 34, \
26, 50, 19, 16, 40, 18, 15, 47, 33, 29, \
58, 43, 41, 142, 125, 124, 126, 111, 108, 98, \
84, 83, 23, 11, 11, 10, 1, 0, 26, 14, \
12, 135, 121, 116, 177, 164, 162, 179, 167, 168, \
181, 170, 172, 171, 147, 149, 166, 143, 145, 159, \
137, 139, 150, 130, 128, 146, 126, 119, 140, 117, \
112, 128, 102, 101, 109, 85, 87, 87, 70, 67, \
78, 69, 61, 70, 60, 54, 63, 52, 47, 58, \
42, 39, 47, 32, 28, 42, 27, 24, 34, 19, \
14, 25, 9, 3, 22, 4, 1, 25, 1, 0, \
22, 6, 2, 21, 9, 5, 32, 14, 11, 99, \
78, 77, 128, 114, 112, 69, 53, 50, 20, 5, \
2, 12, 0, 0, 32, 16, 11, 95, 76, 69, \
129, 112, 108, 149, 137, 135, 163, 156, 153, 187, \
160, 164, 185, 160, 163, 181, 158, 160, 176, 156, \
154, 178, 157, 151, 181, 155, 152, 184, 154, 155, \
176, 149, 152, 170, 145, 143, 163, 141, 134, 156, \
136, 129, 150, 127, 124, 151, 124, 123, 143, 118, \
113, 136, 112, 107, 128, 104, 99, 115, 91, 86, \
102, 78, 73, 87, 62, 59, 68, 51, 45, 53, \
41, 34, 44, 24, 19, 49, 26, 24, 50, 35, \
34, 31, 14, 10, 21, 4, 1, 26, 10, 6, \
43, 24, 17, 69, 46, 40, 94, 74, 70, 125, \
113, 108, 151, 145, 140, 183, 163, 165, 186, 165, \
167, 188, 168, 170, 189, 169, 170, 188, 169, 169, \
186, 165, 166, 184, 162, 164, 180, 159, 161, 178, \
158, 158, 176, 155, 154, 174, 154, 152, 174, 153, \
152, 172, 150, 150, 173, 152, 151, 172, 152, 151, \
171, 150, 149, 165, 145, 144, 163, 142, 140, 157, \
137, 132, 149, 132, 125, 140, 125, 118, 134, 115, \
109, 123, 103, 98, 110, 91, 87, 100, 80, 76, \
102, 81, 75, 107, 86, 80, 110, 91, 88, 116, \
98, 97, 133, 116, 116, 152, 138, 137, 171, 160, \
158, 183, 164, 166, 185, 166, 168, 185, 166, 168, \
186, 167, 169, 188, 169, 171, 186, 167, 169, 186, \
167, 169, 185, 166, 168, 186, 167, 168, 185, 167, \
167, 185, 167, 167, 185, 167, 167, 183, 166, 166, \
184, 166, 166, 183, 165, 165, 180, 162, 162, 174, \
156, 156, 172, 154, 153, 171, 154, 148, 169, 152, \
145, 168, 151, 144, 172, 155, 148, 180, 162, 156, \
173, 152, 147, 166, 145, 140, 164, 143, 138, 163, \
142, 137, 160, 143, 141, 161, 147, 148, 174, 160, \
160, 182, 168, 168, 190, 177, 177, 184, 165, 167, \
185, 166, 168, 185, 166, 168, 185, 166, 168, 186, \
167, 169, 187, 168, 170, 190, 171, 173, 190, 171, \
173, 189, 170, 171, 188, 170, 170, 190, 172, 172, \
189, 171, 171, 187, 169, 169, 187, 169, 169, 187, \
169, 169, 187, 169, 169, 184, 166, 166, 185, 167, \
166, 184, 166, 161, 185, 167, 162, 188, 171, 165, \
188, 170, 165, 185, 167, 162, 183, 163, 158, 181, \
161, 156, 182, 162, 157, 182, 162, 158, 182, 166, \
164, 184, 170, 170, 191, 177, 177, 194, 180, 180, \
194, 180, 180, 187, 168, 170, 188, 169, 171, 188, \
169, 171, 188, 169, 171, 188, 169, 171, 190, 171, \
173, 193, 174, 176, 191, 172, 174, 192, 173, 174, \
191, 173, 173, 190, 172, 172, 188, 170, 170, 187, \
169, 169, 191, 173, 173, 194, 176, 176, 193, 175, \
175, 192, 174, 174, 197, 179, 178, 196, 178, 175, \
196, 178, 174, 196, 178, 175, 197, 179, 176, 193, \
174, 171, 191, 172, 169, 189, 171, 167, 192, 174, \
170, 193, 174, 171, 191, 175, 174, 191, 177, 177, \
191, 177, 177, 192, 178, 178, 191, 177, 177, 191, \
172, 174, 191, 172, 174, 190, 171, 173, 190, 171, \
173, 191, 172, 174, 193, 174, 176, 193, 174, 176, \
192, 173, 175, 193, 175, 176, 191, 173, 173, 190, \
172, 172, 192, 174, 174, 191, 173, 173, 194, 176, \
176, 196, 178, 178, 197, 179, 179, 195, 177, 177, \
199, 181, 181, 196, 178, 177, 195, 177, 175, 194, \
176, 175, 196, 178, 176, 193, 175, 174, 195, 177, \
176, 194, 176, 175, 195, 178, 177, 195, 177, 176, \
194, 179, 179, 194, 180, 180, 192, 178, 178, 195, \
181, 181, 197, 183, 183, 191, 172, 174, 191, 172, \
174, 191, 172, 174, 192, 173, 175, 191, 172, 174, \
191, 172, 174, 193, 174, 176, 195, 176, 178, 196, \
177, 178, 195, 177, 177, 193, 175, 175, 193, 175, \
175, 193, 175, 175, 195, 177, 177, 194, 176, 176, \
198, 180, 180, 196, 178, 178, 197, 179, 179, 196, \
178, 178, 197, 178, 179, 195, 177, 178, 195, 177, \
177, 193, 175, 176, 193, 177, 177, 194, 178, 178, \
194, 179, 179, 193, 178, 178, 192, 177, 177, 189, \
175, 175, 189, 175, 175, 193, 179, 179, 193, 179, \
179, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '6824';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a5b5d8f35a45f8aa17ce14f34c65403b0';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_truck2';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{19, 20, 14, 37, 31, 27, 58, 54, 49, 95, 96, \
89, 119, 115, 107, 65, 57, 51, 35, 28, 22, \
18, 21, 13, 14, 18, 8, 25, 24, 16, 20, \
21, 14, 16, 18, 13, 14, 18, 13, 15, 17, \
12, 20, 14, 11, 17, 15, 12, 15, 16, 12, \
24, 21, 17, 52, 56, 44, 137, 136, 119, 212, \
207, 192, 170, 165, 157, 83, 78, 72, 37, 31, \
21, 27, 21, 12, 27, 21, 12, 34, 28, 18, \
36, 25, 17, 32, 22, 21, 30, 27, 15, 59, \
54, 30, 63, 51, 38, 4, 11, 4, 11, 8, \
5, 21, 14, 12, 26, 18, 16, 33, 18, 18, \
34, 19, 17, 34, 23, 19, 19, 19, 10, 22, \
25, 12, 23, 25, 12, 13, 16, 6, 9, 14, \
7, 7, 13, 9, 11, 17, 7, 22, 27, 14, \
23, 24, 15, 23, 20, 18, 26, 22, 23, 40, \
40, 32, 137, 134, 120, 234, 229, 213, 210, 206, \
191, 131, 128, 116, 47, 44, 35, 30, 27, 19, \
34, 32, 23, 38, 36, 26, 42, 36, 24, 31, \
25, 21, 34, 30, 18, 74, 64, 39, 78, 60, \
43, 10, 8, 3, 10, 8, 4, 11, 9, 5, \
11, 10, 4, 11, 7, 3, 16, 10, 7, 31, \
24, 17, 34, 27, 19, 43, 36, 28, 27, 22, \
16, 13, 10, 6, 14, 12, 13, 14, 14, 17, \
14, 20, 18, 22, 37, 23, 47, 48, 31, 57, \
43, 30, 43, 33, 23, 41, 35, 27, 81, 75, \
64, 133, 127, 111, 96, 91, 71, 56, 53, 38, \
36, 37, 28, 31, 32, 22, 32, 33, 23, 37, \
38, 28, 47, 45, 28, 29, 25, 16, 34, 28, \
17, 86, 73, 47, 91, 69, 48, 95, 77, 68, \
66, 57, 45, 39, 36, 22, 27, 27, 15, 17, \
22, 11, 16, 19, 7, 37, 34, 22, 43, 31, \
25, 27, 15, 12, 14, 8, 6, 13, 9, 8, \
16, 14, 14, 18, 16, 18, 24, 16, 22, 26, \
27, 18, 67, 42, 23, 132, 75, 57, 102, 59, \
40, 49, 35, 23, 53, 46, 34, 49, 44, 29, \
49, 43, 23, 43, 39, 21, 34, 34, 21, 29, \
28, 16, 26, 25, 13, 43, 42, 29, 62, 57, \
35, 37, 30, 18, 31, 23, 13, 93, 79, 51, \
100, 79, 52, 197, 173, 146, 172, 153, 125, 131, \
108, 81, 121, 92, 70, 109, 85, 66, 82, 69, \
51, 51, 45, 31, 37, 29, 21, 12, 10, 4, \
23, 32, 19, 42, 52, 37, 42, 54, 37, 33, \
47, 26, 38, 46, 30, 41, 59, 31, 101, 76, \
45, 203, 128, 109, 161, 100, 84, 57, 37, 19, \
40, 31, 17, 36, 31, 19, 54, 47, 30, 49, \
43, 25, 37, 34, 18, 31, 28, 12, 27, 24, \
9, 46, 43, 26, 73, 64, 38, 55, 43, 31, \
37, 27, 18, 99, 87, 57, 107, 91, 58, 186, \
169, 129, 190, 162, 128, 175, 124, 96, 172, 102, \
81, 169, 101, 84, 135, 94, 77, 53, 39, 25, \
40, 44, 31, 80, 102, 78, 114, 149, 111, 128, \
167, 121, 137, 180, 124, 129, 174, 113, 108, 158, \
96, 97, 167, 93, 155, 173, 114, 235, 201, 177, \
228, 201, 189, 147, 132, 108, 93, 87, 68, 44, \
44, 29, 50, 46, 28, 56, 49, 28, 56, 47, \
25, 64, 53, 33, 72, 62, 41, 84, 73, 51, \
103, 86, 58, 80, 62, 49, 59, 47, 33, 112, \
102, 69, 117, 102, 66, 110, 90, 66, 99, 64, \
51, 103, 43, 33, 122, 48, 38, 107, 49, 37, \
99, 62, 47, 67, 54, 35, 78, 106, 70, 69, \
128, 76, 59, 117, 63, 74, 137, 73, 105, 184, \
99, 112, 177, 99, 140, 161, 96, 122, 144, 83, \
123, 136, 83, 138, 137, 105, 160, 166, 151, 154, \
151, 127, 142, 144, 114, 94, 97, 63, 82, 72, \
42, 100, 81, 50, 125, 93, 62, 146, 101, 75, \
154, 116, 86, 160, 121, 89, 146, 112, 83, 104, \
79, 59, 72, 53, 32, 122, 103, 72, 125, 104, \
68, 160, 143, 114, 126, 99, 79, 117, 71, 52, \
125, 70, 51, 87, 47, 33, 99, 73, 56, 111, \
102, 76, 53, 93, 46, 40, 108, 47, 47, 109, \
51, 55, 129, 57, 86, 177, 80, 103, 168, 87, \
137, 141, 89, 103, 79, 46, 110, 110, 71, 78, \
99, 60, 33, 42, 27, 64, 56, 39, 78, 72, \
43, 117, 106, 72, 153, 123, 95, 165, 131, 98, \
173, 135, 96, 175, 132, 97, 169, 143, 102, 157, \
131, 91, 148, 116, 81, 118, 92, 63, 93, 72, \
47, 122, 100, 71, 126, 103, 70, 221, 189, 150, \
194, 158, 125, 177, 133, 100, 166, 118, 89, 115, \
80, 64, 130, 108, 86, 137, 130, 99, 55, 92, \
46, 47, 108, 49, 54, 112, 54, 52, 135, 57, \
83, 180, 77, 106, 167, 84, 133, 132, 87, 99, \
58, 40, 119, 104, 71, 111, 124, 82, 54, 52, \
33, 91, 97, 72, 96, 101, 65, 108, 102, 63, \
149, 128, 95, 179, 149, 114, 184, 145, 104, 174, \
142, 101, 146, 135, 92, 136, 119, 83, 145, 117, \
79, 137, 114, 78, 132, 115, 86, 123, 107, 80, \
121, 102, 74, 217, 168, 137, 223, 175, 146, 225, \
174, 144, 198, 151, 125, 127, 101, 82, 134, 116, \
89, 142, 132, 98, 67, 95, 51, 55, 108, 53, \
53, 109, 51, 48, 134, 56, 78, 177, 76, 110, \
168, 89, 138, 146, 99, 96, 95, 60, 112, 116, \
67, 134, 147, 90, 90, 116, 71, 105, 137, 92, \
119, 140, 88, 113, 119, 66, 133, 132, 82, 175, \
164, 117, 184, 163, 116, 162, 151, 101, 147, 144, \
100, 162, 135, 107, 155, 122, 86, 125, 107, 70, \
99, 87, 64, 83, 72, 52, 85, 72, 52, 191, \
166, 139, 187, 163, 135, 187, 164, 138, 167, 147, \
125, 111, 96, 75, 131, 116, 85, 169, 151, 116, \
82, 91, 52, 64, 102, 53, 65, 109, 59, 61, \
126, 63, 87, 168, 86, 125, 171, 111, 140, 157, \
108, 80, 128, 68, 101, 128, 62, 160, 172, 103, \
119, 178, 110, 107, 169, 107, 129, 169, 105, 134, \
161, 94, 140, 168, 102, 153, 185, 123, 154, 189, \
128, 144, 188, 120, 155, 191, 132, 197, 185, 154, \
169, 139, 106, 110, 95, 62, 43, 36, 19, 19, \
15, 2, 52, 44, 28, 89, 89, 60, 98, 94, \
64, 91, 93, 65, 78, 82, 60, 142, 138, 114, \
182, 169, 133, 202, 173, 137, 98, 85, 52, 61, \
76, 37, 76, 89, 55, 85, 101, 66, 117, 151, \
103, 129, 145, 117, 120, 111, 81, 85, 102, 57, \
125, 115, 66, 190, 161, 111, 138, 164, 114, 119, \
155, 110, 132, 143, 98, 128, 129, 80, 106, 119, \
68, 106, 144, 89, 94, 156, 92, 84, 166, 84, \
95, 167, 93, 173, 185, 144, 133, 109, 83, 86, \
71, 47, 38, 34, 19, 10, 11, 1, 45, 42, \
28, 99, 86, 61, 124, 106, 78, 120, 105, 80, \
91, 84, 63, 190, 188, 163, 243, 230, 194, 225, \
191, 156, 112, 84, 56, 56, 49, 19, 83, 63, \
45, 115, 85, 75, 132, 121, 105, 96, 83, 83, \
91, 67, 55, 95, 72, 53, 133, 94, 68, 190, \
148, 116, 163, 151, 129, 118, 113, 100, 108, 83, \
69, 106, 73, 56, 93, 80, 58, 109, 115, 86, \
102, 127, 84, 89, 148, 80, 93, 152, 84, 155, \
160, 120, 120, 94, 74, 73, 59, 44, 39, 36, \
26, 11, 15, 6, 44, 44, 30, 84, 64, 45, \
101, 80, 56, 96, 79, 54, 89, 76, 52, 193, \
184, 160, 218, 208, 184, 191, 173, 149, 106, 83, \
56, 68, 51, 26, 82, 57, 39, 98, 71, 60, \
130, 121, 119, 123, 112, 113, 95, 70, 57, 83, \
65, 54, 108, 80, 57, 177, 143, 107, 131, 118, \
97, 73, 64, 59, 96, 76, 69, 98, 75, 67, \
106, 93, 85, 111, 105, 95, 116, 112, 98, 128, \
139, 120, 124, 142, 113, 146, 134, 103, 124, 98, \
74, 83, 69, 53, 47, 44, 31, 28, 30, 12, \
72, 69, 44, 114, 99, 78, 118, 105, 82, 127, \
117, 92, 136, 126, 100, 133, 119, 97, 90, 81, \
65, 89, 80, 63, 88, 73, 47, 72, 53, 29, \
77, 53, 30, 78, 60, 39, 98, 100, 93, 116, \
114, 105, 79, 59, 44, 84, 69, 59, 118, 91, \
64, 172, 140, 102, 141, 130, 108, 108, 94, 83, \
119, 97, 82, 127, 102, 86, 108, 89, 77, 107, \
97, 85, 103, 94, 84, 125, 118, 115, 134, 135, \
121, 140, 122, 97, 119, 95, 69, 93, 80, 59, \
94, 89, 69, 58, 52, 27, 89, 78, 49, 192, \
177, 153, 147, 135, 113, 163, 153, 131, 151, 140, \
116, 126, 111, 88, 60, 49, 30, 51, 43, 25, \
70, 59, 39, 75, 57, 37, 81, 54, 31, 83, \
64, 40, 100, 104, 92, 90, 93, 80, 53, 42, \
29, 76, 59, 46, 111, 80, 50, 157, 129, 95, \
135, 128, 108, 114, 98, 79, 111, 88, 66, 149, \
124, 102, 155, 134, 114, 156, 144, 123, 130, 119, \
102, 90, 79, 70, 138, 134, 119, 178, 157, 135, \
118, 96, 70, 101, 90, 64, 124, 113, 88, 70, \
54, 26, 93, 74, 42, 171, 153, 129, 92, 81, \
63, 106, 96, 77, 85, 74, 52, 122, 109, 86, \
102, 91, 69, 61, 52, 35, 65, 57, 40, 81, \
65, 52, 91, 62, 48, 101, 80, 65, 92, 94, \
88, 58, 61, 52, 71, 64, 52, 102, 81, 60, \
126, 95, 62, 147, 124, 94, 101, 93, 73, 77, \
66, 48, 93, 80, 62, 109, 96, 79, 118, 106, \
90, 174, 167, 146, 180, 169, 148, 71, 56, 43, \
115, 107, 90, 207, 185, 165, 117, 96, 71, 92, \
78, 48, 120, 101, 69, 105, 79, 44, 113, 84, \
47, 147, 127, 99, 89, 79, 60, 87, 78, 60, \
82, 71, 51, 53, 46, 28, 106, 97, 78, 91, \
80, 63, 55, 46, 27, 60, 46, 36, 54, 29, \
23, 73, 53, 44, 37, 36, 35, 21, 20, 16, \
84, 72, 55, 153, 127, 95, 152, 128, 96, 124, \
106, 78, 90, 73, 47, 79, 74, 60, 51, 51, \
42, 38, 38, 29, 49, 47, 37, 90, 88, 71, \
138, 127, 110, 95, 78, 64, 94, 85, 66, 176, \
155, 136, 112, 91, 65, 92, 72, 38, 123, 95, \
55, 142, 108, 65, 137, 103, 60, 122, 100, 70, \
80, 72, 56, 75, 65, 51, 99, 89, 73, 29, \
31, 20, 93, 87, 70, 143, 130, 108, 95, 82, \
59, 61, 50, 34, 59, 40, 25, 88, 71, 53, \
27, 25, 18, 62, 56, 44, 150, 126, 96, 177, \
145, 104, 107, 92, 68, 90, 75, 52, 139, 106, \
67, 75, 65, 51, 24, 26, 21, 38, 41, 36, \
47, 44, 35, 50, 49, 37, 81, 74, 65, 104, \
88, 76, 110, 103, 83, 162, 146, 125, 126, 102, \
77, 106, 78, 43, 119, 82, 38, 146, 108, 59, \
141, 106, 58, 138, 112, 74, 51, 40, 21, 45, \
33, 19, 74, 65, 49, 15, 20, 13, 48, 43, \
27, 125, 109, 83, 115, 96, 70, 107, 97, 72, \
116, 105, 74, 124, 110, 77, 87, 83, 60, 111, \
98, 71, 175, 142, 97, 185, 149, 103, 73, 63, \
43, 80, 65, 43, 189, 143, 96, 66, 48, 32, \
31, 26, 20, 67, 63, 54, 97, 84, 71, 57, \
52, 43, 57, 55, 54, 102, 91, 83, 122, 117, \
97, 131, 117, 94, 114, 87, 62, 122, 87, 51, \
143, 103, 53, 162, 123, 67, 157, 122, 66, 167, \
129, 77, 109, 83, 43, 78, 57, 25, 59, 43, \
17, 47, 35, 20, 64, 47, 23, 108, 85, 52, \
118, 91, 61, 102, 85, 58, 94, 83, 56, 113, \
98, 70, 127, 113, 88, 117, 97, 71, 162, 129, \
86, 168, 140, 99, 70, 56, 34, 77, 55, 29, \
168, 132, 95, 47, 37, 30, 34, 34, 22, 107, \
95, 66, 153, 131, 101, 87, 77, 62, 41, 46, \
47, 82, 85, 82, 117, 100, 75, 132, 99, 61, \
149, 115, 82, 140, 106, 65, 160, 123, 64, 193, \
154, 85, 192, 153, 84, 194, 151, 94, 181, 145, \
95, 166, 136, 90, 147, 121, 79, 145, 118, 78, \
153, 126, 79, 154, 127, 77, 138, 107, 62, 89, \
68, 35, 71, 60, 36, 94, 81, 58, 111, 97, \
76, 104, 88, 67, 133, 113, 81, 132, 119, 89, \
52, 46, 29, 49, 36, 17, 99, 78, 54, 34, \
28, 24, 44, 44, 28, 131, 113, 74, 157, 128, \
88, 119, 101, 80, 50, 51, 45, 57, 58, 51, \
143, 113, 79, 188, 140, 90, 166, 129, 91, 129, \
99, 59, 145, 112, 55, 188, 151, 86, 190, 150, \
86, 198, 155, 96, 197, 157, 101, 202, 163, 109, \
202, 165, 109, 200, 164, 102, 195, 161, 96, 185, \
152, 88, 161, 129, 70, 112, 87, 43, 83, 66, \
33, 81, 65, 37, 77, 62, 39, 64, 52, 30, \
69, 58, 31, 63, 60, 37, 29, 32, 17, 33, \
30, 14, 49, 38, 19, 26, 22, 15, 41, 40, \
25, 125, 107, 70, 164, 136, 98, 134, 114, 92, \
56, 50, 40, 63, 58, 45, 154, 121, 84, 177, \
130, 80, 135, 103, 65, 113, 87, 50, 141, 110, \
64, 177, 142, 92, 173, 135, 85, 196, 153, 92, \
199, 156, 95, 207, 161, 100, 207, 160, 96, 208, \
162, 94, 208, 165, 97, 205, 166, 102, 195, 159, \
99, 176, 142, 87, 159, 126, 76, 151, 120, 76, \
146, 119, 80, 126, 102, 67, 97, 80, 44, 67, \
57, 26, 61, 54, 29, 70, 59, 34, 66, 51, \
27, 26, 24, 14, 31, 35, 23, 92, 81, 53, \
140, 120, 92, 101, 90, 74, 45, 43, 36, 61, \
60, 50, 133, 107, 75, 128, 94, 52, 110, 84, \
48, 106, 81, 45, 128, 98, 60, 160, 126, 86, \
167, 128, 85, 199, 157, 94, 201, 157, 94, 210, \
164, 99, 209, 162, 96, 210, 162, 97, 212, 165, \
105, 214, 169, 113, 209, 168, 112, 206, 161, 99, \
203, 154, 89, 198, 152, 91, 199, 155, 98, 192, \
150, 98, 176, 141, 91, 157, 128, 79, 156, 128, \
84, 157, 126, 83, 141, 111, 73, 73, 65, 45, \
48, 50, 35, 54, 46, 24, 77, 66, 47, 50, \
47, 38, 36, 41, 37, 58, 61, 55, 115, 98, \
73, 100, 79, 48, 87, 66, 32, 91, 65, 29, \
128, 96, 60, 143, 108, 69, 166, 126, 80, 201, \
159, 95, 200, 158, 96, 206, 165, 102, 207, 165, \
101, 208, 164, 102, 211, 166, 109, 219, 172, 117, \
218, 172, 111, 215, 168, 100, 213, 163, 94, 210, \
160, 92, 211, 160, 95, 210, 159, 96, 211, 165, \
102, 213, 169, 107, 212, 167, 108, 208, 162, 105, \
198, 154, 100, 154, 125, 83, 113, 97, 69, 76, \
56, 30, 51, 37, 17, 40, 36, 25, 41, 42, \
36, 63, 63, 54, 124, 106, 81, 91, 74, 47, \
79, 58, 23, 120, 90, 50, 132, 97, 59, 144, \
105, 60, 182, 138, 83, 198, 157, 92, 195, 156, \
94, 199, 161, 101, 202, 165, 104, 207, 169, 103, \
211, 169, 109, 219, 174, 113, 222, 175, 104, 218, \
174, 103, 212, 170, 105, 215, 170, 104, 220, 172, \
106, 220, 170, 104, 218, 169, 103, 221, 172, 105, \
219, 169, 104, 223, 174, 112, 221, 171, 109, 205, \
155, 94, 186, 149, 101, 167, 131, 91, 126, 99, \
69, 99, 83, 62, 89, 77, 59, 87, 72, 51, \
103, 75, 41, 105, 80, 47, 137, 111, 72, 147, \
114, 71, 147, 109, 66, 178, 136, 83, 205, 160, \
96, 199, 158, 97, 197, 158, 98, 200, 161, 102, \
203, 164, 104, 212, 170, 110, 216, 172, 113, 217, \
172, 113, 218, 172, 110, 216, 172, 107, 214, 170, \
105, 215, 171, 105, 217, 172, 105, 217, 171, 105, \
217, 171, 105, 219, 172, 106, 224, 177, 111, 231, \
184, 119, 231, 184, 119, 215, 167, 103, 203, 159, \
97, 198, 155, 98, 187, 145, 102, 175, 139, 100, \
164, 133, 89, 151, 117, 72, 143, 104, 58, 163, \
126, 83, 162, 129, 90, 156, 121, 80, 183, 144, \
96, 216, 172, 116, 217, 170, 107, 196, 155, 95, \
199, 159, 100, 204, 164, 105, 205, 164, 106, 210, \
166, 108, 213, 168, 111, 215, 171, 114, 218, 174, \
117, 216, 172, 110, 216, 171, 105, 214, 169, 103, \
214, 170, 104, 215, 170, 104, 217, 172, 107, 222, \
177, 112, 224, 179, 114, 233, 188, 122, 238, 193, \
129, 219, 176, 113, 210, 168, 103, 211, 167, 106, \
208, 162, 114, 203, 159, 111, 191, 152, 96, 189, \
149, 96, 188, 149, 101, 181, 143, 98, 160, 125, \
85, 170, 135, 92, 211, 171, 120, 229, 184, 126, \
227, 179, 117, 186, 145, 87, 192, 151, 94, 201, \
160, 103, 204, 164, 106, 209, 167, 110, 211, 170, \
113, 214, 172, 115, 216, 174, 117, 214, 171, 111, \
212, 168, 106, 214, 170, 107, 216, 172, 110, 219, \
175, 112, 220, 176, 113, 224, 180, 118, 223, 179, \
117, 229, 185, 122, 232, 188, 126, 215, 174, 113, \
212, 171, 109, 217, 176, 117, 218, 175, 126, 217, \
173, 122, 208, 165, 108, 203, 165, 114, 190, 156, \
110, 170, 137, 94, 169, 134, 89, 196, 158, 110, \
224, 183, 130, 230, 185, 127, 230, 184, 123, 185, \
143, 87, 187, 146, 91, 195, 154, 99, 206, 165, \
109, 215, 174, 119, 220, 180, 124, 224, 183, 128, \
220, 180, 124, 217, 176, 118, 216, 172, 112, 217, \
174, 113, 221, 177, 117, 221, 178, 118, 217, 174, \
114, 218, 175, 115, 219, 176, 116, 221, 177, 117, \
217, 174, 114, 208, 168, 108, 211, 171, 113, 218, \
178, 123, 225, 185, 133, 228, 183, 128, 218, 172, \
116, 201, 166, 118, 183, 154, 110, 171, 140, 97, \
188, 152, 101, 220, 179, 125, 229, 187, 130, 232, \
186, 127, 233, 187, 127, 187, 145, 92, 192, 151, \
99, 196, 155, 103, 203, 163, 111, 216, 177, 124, \
224, 185, 132, 231, 192, 139, 227, 188, 135, 218, \
178, 123, 212, 171, 114, 207, 166, 110, 210, 169, \
112, 209, 168, 112, 204, 163, 107, 205, 164, 108, \
208, 167, 110, 210, 169, 112, 207, 167, 110, 203, \
164, 108, 208, 169, 117, 216, 176, 126, 221, 182, \
130, 221, 178, 123, 211, 168, 116, 184, 153, 110, \
177, 150, 109, 180, 149, 102, 212, 174, 116, 226, \
184, 123, 228, 184, 125, 228, 183, 125, 225, 181, \
123, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '7134';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1ab5e4edd8ce56347667584b6b2e003a16';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_horse4';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{35, 90, 93, 41, 100, 104, 44, 109, 113, 56, 116, \
121, 60, 128, 131, 56, 138, 142, 49, 135, 143, \
47, 139, 148, 44, 144, 150, 43, 148, 152, 42, \
149, 150, 48, 149, 152, 54, 151, 161, 57, 159, \
173, 63, 166, 180, 62, 159, 171, 80, 159, 170, \
162, 204, 212, 141, 196, 212, 43, 157, 171, 50, \
160, 179, 52, 167, 187, 55, 170, 190, 54, 170, \
189, 56, 171, 192, 56, 172, 194, 54, 173, 192, \
61, 176, 194, 75, 184, 203, 78, 186, 207, 80, \
189, 209, 78, 187, 207, 54, 117, 122, 57, 125, \
130, 59, 132, 138, 53, 132, 134, 60, 134, 138, \
52, 142, 145, 44, 149, 152, 46, 146, 161, 38, \
143, 161, 37, 146, 153, 39, 145, 150, 51, 148, \
158, 61, 151, 163, 57, 155, 170, 58, 161, 174, \
56, 157, 167, 65, 153, 164, 148, 195, 202, 149, \
203, 217, 44, 159, 175, 45, 160, 180, 45, 166, \
185, 48, 170, 188, 49, 171, 189, 51, 173, 192, \
50, 174, 192, 49, 174, 189, 62, 179, 195, 77, \
185, 203, 79, 186, 206, 78, 185, 205, 77, 184, \
204, 56, 129, 135, 62, 139, 146, 55, 138, 145, \
43, 128, 128, 89, 149, 155, 76, 154, 159, 44, \
147, 148, 53, 145, 157, 62, 144, 158, 73, 139, \
148, 60, 136, 145, 60, 155, 166, 57, 153, 164, \
53, 154, 168, 56, 157, 171, 56, 153, 165, 57, \
152, 165, 132, 184, 189, 153, 208, 220, 49, 167, \
186, 48, 164, 189, 46, 168, 190, 49, 170, 192, \
51, 172, 194, 51, 174, 195, 50, 176, 194, 52, \
176, 192, 65, 178, 196, 81, 185, 205, 79, 186, \
206, 77, 184, 205, 77, 184, 204, 58, 136, 144, \
58, 140, 151, 54, 140, 150, 81, 144, 145, 112, \
133, 138, 114, 153, 155, 102, 159, 161, 83, 129, \
134, 80, 118, 114, 93, 111, 107, 71, 106, 108, \
81, 157, 163, 60, 161, 169, 56, 160, 172, 61, \
158, 171, 60, 155, 167, 58, 156, 170, 123, 184, \
190, 153, 204, 217, 57, 172, 190, 52, 169, 193, \
52, 169, 192, 53, 172, 194, 54, 175, 196, 55, \
177, 197, 56, 179, 196, 59, 180, 195, 77, 185, \
203, 91, 188, 208, 83, 186, 205, 79, 185, 204, \
79, 185, 204, 55, 138, 148, 56, 138, 151, 79, \
146, 157, 154, 182, 185, 207, 204, 202, 187, 193, \
187, 208, 215, 213, 212, 213, 212, 147, 154, 142, \
97, 108, 92, 100, 125, 121, 88, 143, 152, 65, \
163, 174, 57, 163, 175, 64, 159, 172, 58, 158, \
165, 60, 159, 173, 115, 185, 194, 167, 209, 222, \
65, 172, 186, 50, 170, 190, 54, 166, 186, 54, \
171, 189, 54, 175, 192, 56, 177, 194, 59, 177, \
194, 65, 178, 193, 90, 185, 202, 104, 186, 205, \
89, 185, 201, 81, 184, 202, 82, 185, 203, 56, \
141, 150, 70, 141, 145, 155, 183, 189, 202, 206, \
205, 243, 232, 232, 229, 221, 223, 208, 212, 205, \
228, 227, 219, 240, 237, 228, 167, 171, 160, 117, \
140, 134, 106, 158, 163, 69, 164, 180, 60, 167, \
184, 66, 162, 177, 63, 162, 170, 61, 163, 176, \
116, 188, 197, 175, 216, 229, 70, 174, 189, 51, \
171, 191, 52, 167, 186, 53, 170, 188, 55, 174, \
191, 57, 177, 197, 62, 178, 200, 79, 181, 201, \
108, 189, 209, 115, 187, 206, 91, 186, 202, 80, \
183, 201, 81, 184, 202, 70, 144, 149, 131, 178, \
174, 211, 217, 214, 226, 219, 208, 238, 232, 226, \
195, 201, 198, 181, 186, 169, 219, 211, 192, 238, \
230, 221, 229, 225, 220, 116, 130, 125, 84, 124, \
123, 80, 157, 169, 69, 168, 183, 68, 164, 180, \
66, 166, 178, 63, 167, 181, 107, 181, 189, 178, \
218, 230, 78, 178, 194, 51, 173, 192, 52, 170, \
187, 52, 169, 187, 57, 173, 192, 62, 176, 194, \
67, 176, 193, 90, 188, 205, 108, 195, 210, 108, \
193, 206, 92, 189, 204, 81, 184, 203, 82, 185, \
203, 69, 125, 126, 112, 133, 127, 167, 177, 167, \
154, 169, 157, 149, 185, 183, 101, 164, 164, 132, \
165, 152, 231, 224, 207, 234, 228, 219, 241, 233, \
230, 163, 166, 163, 84, 106, 101, 97, 148, 150, \
77, 162, 169, 70, 164, 179, 68, 168, 185, 64, \
170, 185, 108, 184, 192, 181, 221, 232, 81, 179, \
196, 51, 173, 192, 51, 172, 189, 52, 170, 187, \
60, 174, 193, 81, 178, 194, 107, 182, 193, 104, \
178, 192, 106, 188, 202, 102, 196, 208, 92, 190, \
205, 81, 184, 202, 81, 184, 202, 58, 112, 114, \
50, 89, 89, 82, 136, 135, 69, 140, 143, 53, \
148, 158, 48, 153, 170, 103, 171, 170, 222, 222, \
213, 242, 235, 231, 240, 234, 233, 225, 223, 219, \
116, 125, 117, 87, 124, 117, 89, 159, 165, 79, \
166, 183, 77, 169, 187, 71, 173, 193, 97, 183, \
193, 182, 225, 237, 97, 183, 203, 49, 173, 192, \
54, 171, 193, 50, 176, 192, 77, 179, 189, 122, \
173, 181, 130, 162, 164, 119, 160, 164, 105, 172, \
184, 98, 192, 210, 89, 190, 205, 80, 183, 199, \
82, 185, 201, 55, 132, 135, 56, 133, 136, 48, \
140, 146, 46, 145, 152, 47, 154, 164, 48, 151, \
171, 88, 163, 162, 214, 216, 204, 242, 233, 228, \
241, 236, 232, 245, 243, 240, 224, 223, 221, 150, \
165, 163, 114, 166, 173, 79, 164, 175, 69, 169, \
175, 71, 169, 181, 92, 174, 177, 171, 210, 216, \
124, 188, 201, 71, 177, 185, 71, 170, 185, 73, \
174, 187, 113, 172, 183, 120, 132, 139, 67, 81, \
78, 104, 132, 130, 89, 153, 162, 91, 190, 208, \
86, 190, 205, 84, 186, 201, 84, 187, 201, 52, \
134, 141, 51, 135, 143, 46, 140, 148, 50, 145, \
151, 49, 149, 154, 52, 150, 163, 82, 160, 156, \
204, 211, 195, 246, 237, 224, 249, 242, 236, 250, \
245, 245, 254, 249, 252, 244, 243, 244, 194, 216, \
220, 145, 192, 198, 133, 193, 195, 140, 197, 200, \
165, 207, 205, 218, 230, 229, 218, 237, 239, 196, \
235, 236, 181, 222, 226, 143, 189, 198, 77, 111, \
121, 61, 81, 85, 47, 58, 54, 65, 86, 84, \
69, 129, 137, 94, 194, 209, 87, 189, 204, 87, \
188, 203, 88, 189, 204, 55, 129, 139, 53, 131, \
143, 52, 136, 144, 51, 141, 147, 46, 146, 150, \
50, 148, 159, 69, 157, 154, 190, 205, 193, 253, \
242, 230, 254, 245, 238, 252, 245, 241, 251, 247, \
244, 252, 252, 249, 254, 254, 254, 248, 249, 251, \
246, 248, 251, 245, 250, 253, 252, 253, 251, 255, \
250, 241, 255, 247, 239, 255, 244, 241, 255, 253, \
252, 225, 231, 236, 119, 158, 164, 65, 116, 113, \
60, 74, 66, 35, 47, 45, 69, 118, 127, 99, \
192, 209, 86, 185, 202, 88, 186, 203, 90, 188, \
205, 52, 135, 137, 48, 136, 142, 48, 138, 140, \
48, 141, 146, 43, 145, 151, 45, 148, 160, 56, \
152, 154, 174, 196, 192, 255, 243, 238, 246, 238, \
229, 241, 233, 223, 246, 240, 232, 250, 248, 243, \
252, 249, 245, 253, 250, 246, 252, 252, 247, 254, \
249, 247, 252, 245, 239, 244, 244, 224, 244, 234, \
213, 243, 224, 209, 242, 238, 226, 250, 243, 247, \
190, 221, 232, 92, 154, 152, 63, 85, 77, 59, \
67, 66, 94, 128, 137, 111, 183, 200, 92, 183, \
199, 88, 185, 201, 92, 189, 206, 49, 132, 135, \
48, 135, 139, 47, 139, 143, 48, 142, 146, 46, \
145, 149, 42, 148, 162, 61, 148, 155, 182, 206, \
200, 250, 238, 230, 229, 225, 211, 235, 228, 216, \
246, 234, 227, 248, 241, 231, 254, 246, 245, 251, \
244, 240, 244, 240, 224, 247, 236, 221, 241, 230, \
210, 217, 208, 180, 235, 220, 194, 241, 224, 207, \
236, 239, 221, 236, 227, 224, 195, 214, 223, 109, \
177, 181, 85, 125, 131, 97, 115, 115, 108, 133, \
135, 104, 135, 146, 105, 170, 179, 90, 183, 198, \
87, 183, 203, 51, 131, 135, 49, 134, 138, 49, \
139, 144, 52, 144, 153, 56, 150, 158, 53, 152, \
165, 72, 150, 157, 175, 198, 175, 229, 216, 183, \
230, 222, 206, 242, 235, 224, 225, 217, 197, 235, \
224, 201, 249, 236, 222, 238, 225, 209, 225, 215, \
187, 221, 214, 185, 205, 191, 156, 196, 178, 144, \
245, 235, 218, 249, 239, 226, 229, 228, 205, 213, \
208, 196, 172, 200, 204, 101, 183, 191, 96, 166, \
178, 79, 131, 137, 90, 148, 154, 90, 141, 156, \
91, 152, 164, 92, 179, 195, 92, 180, 201, 51, \
129, 134, 50, 132, 138, 50, 137, 143, 51, 141, \
153, 59, 147, 157, 61, 154, 164, 76, 155, 161, \
156, 185, 153, 209, 198, 146, 238, 224, 201, 243, \
235, 214, 177, 171, 133, 189, 172, 128, 230, 211, \
168, 217, 199, 153, 194, 178, 126, 183, 169, 110, \
173, 150, 92, 212, 185, 142, 242, 227, 206, 215, \
207, 186, 193, 187, 155, 189, 190, 168, 138, 182, \
180, 88, 180, 191, 89, 181, 196, 95, 181, 195, \
87, 184, 196, 94, 180, 198, 84, 170, 183, 79, \
179, 193, 83, 179, 196, 50, 126, 132, 49, 129, \
135, 50, 135, 141, 52, 138, 148, 58, 142, 145, \
56, 151, 157, 59, 152, 160, 125, 169, 150, 196, \
191, 149, 221, 207, 169, 221, 205, 164, 126, 112, \
64, 148, 127, 57, 207, 185, 109, 185, 163, 85, \
164, 142, 60, 160, 135, 54, 137, 119, 60, 161, \
149, 115, 203, 189, 162, 184, 176, 141, 181, 171, \
130, 167, 176, 144, 113, 174, 168, 89, 181, 192, \
91, 178, 190, 88, 178, 192, 78, 182, 195, 87, \
180, 198, 82, 182, 197, 76, 183, 195, 81, 178, \
193, 50, 123, 126, 49, 126, 130, 50, 131, 136, \
56, 138, 143, 59, 140, 143, 52, 143, 150, 49, \
147, 154, 96, 158, 148, 200, 200, 167, 223, 203, \
160, 187, 175, 134, 107, 99, 50, 124, 103, 29, \
170, 145, 57, 158, 136, 47, 149, 135, 57, 136, \
139, 89, 117, 146, 127, 141, 172, 164, 200, 195, \
171, 201, 192, 155, 181, 167, 129, 137, 138, 100, \
115, 168, 155, 94, 179, 188, 92, 176, 184, 88, \
173, 187, 85, 175, 190, 86, 177, 192, 82, 175, \
193, 80, 177, 192, 82, 174, 189, 48, 120, 118, \
48, 121, 122, 53, 128, 131, 64, 138, 140, 63, \
142, 148, 52, 139, 148, 53, 138, 143, 123, 170, \
157, 212, 203, 163, 189, 183, 146, 126, 157, 141, \
88, 133, 116, 93, 133, 114, 111, 145, 112, 113, \
153, 121, 105, 161, 144, 92, 162, 158, 77, 165, \
172, 117, 184, 190, 208, 202, 188, 206, 203, 167, \
170, 173, 140, 117, 122, 91, 100, 124, 109, 83, \
135, 136, 92, 168, 170, 86, 173, 182, 87, 170, \
185, 85, 177, 189, 83, 175, 190, 83, 176, 191, \
78, 174, 188, 48, 118, 117, 48, 119, 121, 50, \
124, 127, 66, 130, 131, 55, 133, 136, 48, 139, \
144, 82, 143, 145, 185, 194, 181, 191, 187, 155, \
110, 156, 134, 59, 144, 145, 64, 151, 165, 73, \
156, 172, 81, 162, 171, 82, 168, 179, 75, 171, \
187, 73, 167, 173, 67, 166, 173, 102, 176, 186, \
195, 203, 202, 195, 205, 174, 163, 183, 154, 124, \
157, 146, 110, 135, 121, 87, 103, 89, 88, 141, \
139, 82, 175, 176, 80, 172, 182, 84, 173, 187, \
80, 172, 187, 77, 171, 185, 73, 169, 183, 47, \
115, 114, 48, 117, 120, 48, 119, 123, 59, 123, \
123, 52, 127, 127, 57, 135, 133, 148, 179, 162, \
199, 197, 174, 106, 141, 134, 57, 141, 141, 57, \
148, 147, 72, 150, 155, 85, 154, 158, 87, 156, \
163, 85, 160, 168, 84, 164, 171, 90, 158, 172, \
84, 157, 173, 105, 171, 182, 165, 194, 201, 168, \
181, 164, 155, 157, 138, 125, 169, 170, 124, 167, \
154, 115, 134, 110, 102, 157, 155, 85, 174, 177, \
83, 170, 182, 84, 170, 185, 76, 168, 183, 75, \
168, 183, 69, 165, 179, 52, 116, 116, 51, 117, \
120, 52, 121, 126, 58, 128, 126, 64, 134, 133, \
90, 143, 136, 150, 163, 125, 174, 175, 131, 111, \
157, 149, 58, 138, 148, 60, 138, 142, 71, 149, \
155, 88, 155, 160, 83, 155, 167, 80, 157, 170, \
81, 162, 169, 78, 160, 167, 74, 157, 164, 98, \
165, 173, 163, 194, 207, 168, 189, 180, 175, 178, \
157, 127, 161, 162, 139, 171, 169, 122, 148, 133, \
96, 168, 172, 87, 167, 180, 85, 161, 179, 78, \
166, 179, 72, 165, 179, 69, 162, 177, 65, 162, \
175, 55, 114, 115, 53, 116, 118, 53, 121, 124, \
56, 123, 123, 78, 138, 134, 118, 147, 137, 109, \
127, 92, 121, 149, 126, 161, 191, 174, 150, 182, \
167, 122, 159, 146, 106, 156, 153, 101, 154, 157, \
80, 152, 156, 73, 155, 163, 77, 158, 166, 71, \
157, 158, 66, 158, 162, 88, 160, 169, 167, 193, \
197, 190, 196, 176, 150, 173, 158, 143, 177, 168, \
162, 175, 169, 111, 160, 161, 91, 168, 178, 82, \
160, 174, 78, 159, 173, 72, 162, 174, 68, 160, \
172, 68, 160, 172, 66, 159, 170, 49, 106, 109, \
52, 114, 117, 52, 118, 123, 49, 120, 123, 75, \
129, 124, 138, 157, 125, 101, 132, 106, 59, 123, \
122, 86, 137, 135, 154, 177, 152, 160, 165, 127, \
133, 144, 113, 102, 154, 156, 75, 150, 154, 70, \
156, 161, 76, 157, 167, 73, 150, 160, 69, 150, \
161, 90, 153, 160, 165, 187, 176, 143, 157, 140, \
113, 162, 166, 139, 184, 175, 168, 177, 160, 101, \
160, 155, 77, 160, 165, 72, 156, 163, 70, 155, \
164, 68, 154, 164, 66, 156, 165, 65, 155, 163, \
64, 154, 162, 59, 105, 100, 63, 111, 109, 62, \
113, 111, 54, 116, 116, 97, 131, 124, 149, 157, \
111, 99, 128, 117, 65, 124, 125, 62, 119, 119, \
71, 123, 121, 74, 128, 127, 76, 132, 134, 96, \
144, 143, 87, 144, 141, 83, 146, 144, 89, 150, \
151, 90, 148, 154, 93, 146, 152, 136, 172, 166, \
182, 191, 164, 131, 159, 145, 110, 164, 171, 119, \
163, 152, 166, 167, 143, 128, 174, 155, 74, 159, \
162, 74, 157, 163, 74, 154, 164, 74, 154, 165, \
70, 154, 163, 70, 155, 163, 69, 153, 161, 88, \
107, 79, 97, 115, 91, 101, 119, 98, 99, 125, \
98, 151, 153, 101, 151, 144, 91, 126, 140, 120, \
117, 137, 124, 106, 126, 105, 109, 130, 110, 113, \
135, 115, 119, 139, 119, 130, 146, 125, 131, 147, \
126, 135, 152, 130, 135, 151, 130, 137, 154, 135, \
145, 156, 137, 179, 179, 154, 173, 165, 125, 155, \
162, 134, 141, 156, 140, 137, 156, 133, 159, 148, \
121, 137, 152, 123, 112, 152, 140, 107, 148, 139, \
97, 140, 132, 94, 138, 132, 88, 135, 128, 86, \
133, 125, 86, 133, 125, 84, 76, 35, 92, 83, \
41, 99, 90, 46, 125, 120, 52, 170, 156, 51, \
159, 151, 72, 137, 140, 88, 126, 117, 83, 130, \
117, 81, 142, 128, 88, 148, 134, 93, 148, 135, \
93, 154, 142, 98, 161, 145, 108, 163, 143, 112, \
162, 142, 104, 158, 142, 98, 177, 156, 112, 189, \
164, 121, 145, 127, 85, 142, 124, 84, 148, 124, \
84, 139, 126, 89, 145, 120, 89, 138, 118, 82, \
133, 117, 82, 129, 116, 83, 122, 116, 85, 117, \
116, 87, 115, 117, 84, 116, 117, 81, 116, 118, \
84, 83, 62, 29, 88, 69, 26, 101, 85, 25, \
145, 133, 46, 162, 154, 51, 179, 176, 83, 161, \
160, 97, 106, 101, 60, 131, 117, 69, 179, 153, \
93, 172, 147, 86, 174, 159, 102, 184, 174, 108, \
177, 166, 112, 152, 138, 105, 157, 142, 99, 176, \
157, 106, 199, 174, 113, 183, 159, 97, 183, 171, \
125, 164, 152, 114, 169, 151, 109, 159, 139, 96, \
157, 132, 96, 155, 130, 97, 144, 121, 83, 141, \
117, 77, 135, 117, 81, 124, 112, 81, 121, 111, \
72, 118, 110, 61, 113, 108, 65, 94, 70, 32, \
97, 73, 33, 97, 74, 30, 105, 84, 17, 149, \
129, 54, 175, 155, 101, 152, 135, 91, 134, 120, \
66, 168, 150, 83, 200, 177, 109, 195, 179, 118, \
182, 173, 123, 196, 186, 121, 192, 187, 105, 161, \
159, 95, 148, 149, 96, 190, 182, 119, 207, 189, \
115, 191, 175, 100, 191, 187, 126, 195, 190, 143, \
209, 202, 156, 191, 187, 139, 149, 149, 107, 146, \
144, 110, 151, 142, 108, 158, 141, 101, 158, 140, \
98, 149, 135, 95, 145, 132, 91, 141, 130, 82, \
135, 127, 82, 118, 84, 38, 119, 84, 42, 109, \
74, 38, 94, 58, 21, 110, 72, 33, 94, 54, \
35, 80, 43, 23, 103, 69, 28, 136, 103, 47, \
139, 109, 61, 126, 104, 66, 96, 75, 47, 127, \
94, 50, 185, 153, 70, 175, 147, 78, 154, 135, \
86, 180, 162, 102, 183, 158, 90, 167, 143, 77, \
145, 135, 78, 149, 130, 80, 197, 171, 118, 198, \
180, 127, 155, 143, 97, 88, 80, 46, 99, 89, \
57, 161, 140, 99, 172, 146, 101, 168, 143, 99, \
164, 139, 97, 162, 139, 95, 155, 135, 91, 149, \
100, 50, 153, 105, 55, 159, 110, 68, 163, 114, \
74, 158, 110, 69, 156, 106, 68, 153, 103, 65, \
154, 103, 63, 154, 103, 63, 138, 92, 57, 132, \
90, 55, 127, 86, 54, 132, 85, 50, 171, 116, \
54, 154, 97, 50, 134, 89, 54, 128, 90, 50, \
133, 88, 50, 125, 81, 45, 93, 63, 33, 99, \
63, 31, 144, 101, 59, 125, 86, 47, 102, 66, \
39, 83, 51, 31, 108, 78, 49, 162, 124, 85, \
175, 135, 95, 174, 135, 97, 175, 135, 95, 178, \
139, 100, 171, 135, 95, 161, 113, 56, 166, 119, \
61, 175, 127, 73, 181, 132, 81, 186, 138, 82, \
192, 144, 85, 199, 149, 91, 203, 153, 100, 208, \
156, 109, 208, 158, 111, 212, 163, 113, 212, 165, \
115, 208, 164, 116, 207, 158, 107, 209, 158, 115, \
203, 157, 115, 199, 151, 109, 200, 147, 109, 199, \
146, 111, 195, 148, 115, 194, 149, 115, 191, 144, \
108, 187, 140, 106, 186, 139, 110, 191, 147, 117, \
193, 151, 115, 197, 153, 114, 198, 153, 115, 194, \
150, 113, 193, 149, 111, 194, 150, 112, 189, 147, \
105, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '7444';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1acb7852c2128e8667f7aa84c970ea4487';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_cat6';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{9, 88, 49, 8, 89, 49, 6, 89, 48, 18, 89, \
51, 28, 88, 52, 26, 86, 49, 7, 81, 41, \
4, 83, 42, 5, 82, 42, 7, 80, 43, 8, \
79, 43, 7, 79, 42, 7, 78, 40, 6, 77, \
40, 6, 76, 40, 6, 76, 38, 6, 76, 37, \
6, 77, 37, 6, 78, 38, 6, 79, 39, 7, \
81, 41, 7, 82, 43, 7, 83, 44, 7, 84, \
44, 6, 84, 44, 6, 84, 44, 7, 84, 46, \
9, 86, 47, 10, 88, 49, 10, 89, 50, 9, \
89, 50, 10, 89, 50, 9, 86, 48, 10, 88, \
49, 12, 89, 51, 44, 102, 69, 88, 125, 97, \
96, 127, 98, 37, 90, 53, 16, 83, 43, 8, \
80, 41, 8, 79, 42, 9, 79, 41, 21, 81, \
43, 27, 83, 45, 25, 82, 45, 8, 73, 37, \
7, 72, 35, 7, 73, 35, 7, 74, 35, 6, \
74, 36, 7, 76, 37, 8, 77, 39, 8, 78, \
41, 8, 79, 41, 7, 80, 42, 8, 81, 43, \
8, 82, 44, 8, 82, 45, 8, 84, 46, 9, \
85, 47, 9, 87, 48, 9, 87, 48, 10, 88, \
49, 9, 80, 44, 11, 85, 47, 19, 90, 53, \
64, 110, 79, 117, 134, 109, 132, 135, 111, 77, \
96, 65, 38, 75, 41, 21, 70, 35, 23, 75, \
40, 40, 84, 48, 89, 113, 79, 109, 126, 94, \
92, 117, 85, 27, 74, 42, 12, 66, 32, 8, \
65, 30, 7, 66, 31, 7, 67, 31, 7, 68, \
32, 7, 69, 34, 8, 70, 35, 7, 71, 35, \
7, 72, 36, 7, 74, 37, 8, 77, 40, 7, \
79, 42, 7, 81, 43, 8, 83, 45, 9, 85, \
47, 10, 87, 48, 10, 88, 49, 7, 76, 39, \
9, 79, 42, 17, 82, 45, 55, 93, 53, 101, \
107, 67, 123, 109, 71, 103, 91, 55, 79, 73, \
39, 66, 63, 30, 68, 66, 33, 95, 89, 53, \
127, 119, 89, 129, 127, 101, 98, 110, 87, 28, \
66, 39, 11, 58, 28, 7, 57, 26, 7, 57, \
27, 7, 59, 27, 7, 60, 28, 8, 62, 29, \
8, 63, 29, 8, 66, 31, 7, 69, 32, 7, \
72, 34, 8, 75, 37, 7, 77, 39, 8, 79, \
41, 9, 82, 43, 9, 84, 45, 10, 85, 46, \
11, 86, 47, 7, 74, 37, 12, 74, 37, 24, \
72, 37, 63, 82, 41, 98, 95, 52, 127, 112, \
68, 148, 131, 89, 131, 116, 76, 112, 98, 59, \
100, 84, 44, 104, 85, 40, 113, 97, 58, 99, \
93, 61, 66, 75, 47, 18, 51, 22, 8, 47, \
19, 5, 47, 19, 6, 48, 20, 6, 50, 21, \
6, 51, 22, 7, 53, 23, 7, 56, 24, 7, \
59, 26, 6, 64, 29, 7, 69, 32, 8, 73, \
36, 8, 76, 39, 8, 78, 41, 9, 80, 43, \
9, 82, 44, 10, 84, 45, 10, 85, 46, 10, \
75, 38, 19, 75, 37, 40, 76, 39, 88, 91, \
50, 104, 94, 51, 113, 98, 56, 127, 109, 70, \
121, 104, 66, 110, 95, 57, 104, 89, 50, 112, \
92, 48, 83, 68, 30, 59, 52, 20, 39, 44, \
18, 17, 41, 15, 9, 39, 14, 6, 38, 14, \
6, 39, 15, 6, 41, 15, 7, 42, 16, 7, \
44, 17, 7, 47, 18, 7, 53, 21, 6, 59, \
25, 7, 65, 30, 8, 70, 34, 8, 74, 37, \
9, 76, 40, 9, 79, 41, 9, 80, 43, 10, \
82, 44, 10, 84, 45, 11, 78, 39, 21, 78, \
38, 48, 81, 41, 109, 107, 63, 131, 112, 68, \
129, 103, 59, 110, 80, 40, 106, 79, 37, 111, \
88, 44, 113, 94, 50, 97, 81, 42, 73, 62, \
29, 56, 51, 24, 42, 46, 22, 21, 39, 16, \
12, 35, 12, 8, 33, 11, 6, 33, 10, 5, \
33, 10, 5, 35, 11, 5, 38, 12, 6, 42, \
14, 6, 48, 18, 5, 55, 22, 5, 61, 27, \
7, 68, 32, 8, 72, 36, 9, 76, 39, 10, \
78, 41, 10, 80, 43, 10, 82, 44, 11, 84, \
46, 12, 78, 41, 26, 83, 43, 60, 91, 51, \
126, 126, 87, 155, 143, 109, 158, 143, 113, 138, \
124, 96, 133, 117, 84, 129, 111, 72, 122, 103, \
59, 103, 87, 47, 76, 66, 32, 55, 51, 23, \
39, 44, 19, 27, 39, 15, 14, 33, 12, 7, \
30, 9, 4, 31, 9, 4, 32, 8, 5, 33, \
7, 4, 36, 9, 3, 41, 12, 4, 48, 17, \
4, 55, 22, 5, 61, 26, 6, 67, 31, 8, \
71, 34, 9, 75, 38, 10, 78, 41, 10, 81, \
44, 10, 82, 45, 10, 83, 46, 15, 77, 41, \
33, 88, 50, 71, 103, 65, 131, 135, 100, 165, \
162, 133, 177, 174, 152, 168, 165, 145, 149, 145, \
119, 141, 133, 101, 131, 120, 84, 110, 97, 62, \
74, 64, 32, 55, 49, 20, 47, 46, 21, 36, \
41, 17, 18, 34, 12, 7, 31, 9, 4, 33, \
9, 4, 34, 10, 5, 34, 10, 5, 36, 11, \
4, 40, 12, 5, 47, 17, 5, 54, 22, 5, \
60, 26, 7, 67, 31, 8, 71, 34, 9, 75, \
38, 9, 78, 40, 9, 80, 43, 9, 82, 45, \
10, 83, 45, 11, 69, 35, 29, 82, 47, 67, \
99, 65, 135, 140, 106, 170, 164, 133, 183, 175, \
147, 179, 172, 146, 164, 154, 123, 153, 140, 102, \
141, 126, 84, 121, 106, 67, 93, 81, 44, 74, \
65, 32, 60, 55, 26, 38, 37, 14, 26, 34, \
13, 17, 33, 12, 9, 32, 10, 6, 33, 10, \
6, 34, 11, 5, 36, 12, 4, 39, 12, 5, \
46, 16, 5, 52, 21, 5, 59, 25, 7, 66, \
30, 9, 71, 34, 10, 75, 38, 10, 78, 41, \
9, 80, 43, 9, 81, 44, 10, 83, 45, 7, \
62, 30, 21, 73, 39, 56, 89, 56, 121, 128, \
95, 162, 157, 126, 180, 172, 141, 175, 167, 138, \
162, 151, 117, 150, 136, 96, 137, 121, 76, 122, \
103, 58, 100, 86, 43, 80, 71, 33, 60, 55, \
24, 38, 34, 11, 37, 36, 16, 33, 37, 19, \
23, 35, 16, 15, 35, 14, 10, 34, 12, 6, \
35, 11, 4, 38, 11, 5, 44, 16, 5, 50, \
20, 5, 57, 24, 7, 64, 29, 8, 69, 33, \
9, 74, 37, 10, 77, 40, 9, 80, 43, 9, \
82, 44, 10, 83, 45, 8, 64, 30, 18, 70, \
34, 48, 84, 47, 118, 127, 92, 154, 151, 117, \
160, 153, 120, 140, 130, 97, 116, 104, 69, 106, \
92, 56, 101, 86, 48, 93, 78, 36, 78, 67, \
31, 62, 54, 23, 47, 42, 15, 45, 41, 16, \
43, 40, 18, 36, 37, 16, 27, 31, 13, 27, \
33, 14, 31, 39, 17, 30, 42, 17, 18, 41, \
12, 10, 42, 14, 6, 46, 18, 5, 52, 22, \
7, 58, 25, 7, 64, 29, 8, 69, 33, 9, \
74, 36, 9, 77, 38, 8, 79, 40, 9, 81, \
42, 10, 66, 32, 24, 74, 38, 54, 90, 54, \
112, 121, 89, 124, 122, 91, 112, 106, 75, 86, \
78, 47, 78, 67, 35, 79, 66, 34, 82, 68, \
35, 79, 64, 30, 67, 56, 25, 55, 48, 18, \
46, 41, 13, 48, 42, 15, 42, 38, 15, 35, \
32, 13, 28, 28, 10, 29, 29, 10, 38, 37, \
14, 52, 48, 20, 63, 61, 27, 40, 50, 18, \
20, 43, 14, 7, 43, 15, 5, 49, 19, 6, \
54, 22, 7, 60, 26, 8, 65, 30, 8, 70, \
33, 9, 75, 37, 10, 79, 41, 9, 68, 31, \
22, 76, 40, 47, 91, 54, 79, 100, 65, 89, \
94, 61, 85, 82, 50, 72, 66, 33, 79, 70, \
38, 82, 71, 38, 81, 68, 35, 72, 59, 27, \
63, 54, 24, 57, 50, 22, 54, 47, 20, 51, \
43, 16, 46, 38, 14, 40, 34, 13, 37, 33, \
11, 41, 36, 12, 48, 39, 11, 60, 47, 13, \
75, 58, 20, 64, 56, 24, 43, 47, 20, 22, \
40, 15, 9, 39, 13, 8, 43, 16, 8, 49, \
19, 8, 55, 23, 8, 61, 28, 8, 67, 32, \
8, 73, 36, 7, 68, 31, 12, 72, 33, 22, \
76, 37, 53, 87, 50, 79, 92, 56, 91, 90, \
54, 85, 80, 43, 88, 82, 44, 86, 78, 40, \
82, 72, 35, 80, 69, 34, 69, 61, 30, 61, \
54, 27, 57, 48, 23, 55, 45, 19, 53, 44, \
17, 54, 46, 17, 57, 49, 20, 59, 48, 16, \
67, 53, 18, 74, 58, 20, 76, 58, 22, 68, \
54, 25, 52, 46, 22, 33, 37, 17, 18, 32, \
12, 12, 37, 13, 9, 42, 16, 7, 48, 19, \
6, 53, 21, 6, 59, 25, 6, 65, 30, 7, \
68, 32, 8, 69, 32, 15, 69, 34, 46, 87, \
54, 82, 101, 67, 102, 103, 68, 96, 91, 54, \
92, 85, 47, 89, 81, 44, 87, 78, 42, 82, \
73, 38, 64, 56, 28, 58, 50, 22, 62, 54, \
21, 72, 60, 27, 74, 61, 27, 75, 60, 26, \
78, 61, 26, 85, 65, 29, 86, 64, 28, 81, \
60, 25, 70, 53, 22, 64, 52, 25, 52, 45, \
23, 37, 36, 18, 24, 28, 13, 16, 30, 13, \
10, 36, 15, 6, 42, 16, 4, 46, 16, 6, \
50, 19, 7, 56, 24, 6, 70, 33, 7, 70, \
33, 11, 69, 34, 33, 80, 46, 65, 93, 59, \
87, 96, 62, 84, 82, 48, 84, 77, 44, 84, \
76, 43, 80, 73, 42, 68, 63, 33, 52, 47, \
22, 55, 49, 21, 73, 64, 29, 94, 80, 41, \
93, 75, 34, 91, 72, 30, 91, 74, 32, 84, \
68, 29, 76, 62, 27, 68, 56, 26, 58, 50, \
24, 51, 45, 21, 45, 41, 19, 38, 36, 17, \
30, 31, 13, 17, 27, 9, 11, 29, 10, 8, \
36, 13, 5, 40, 14, 6, 45, 17, 7, 50, \
21, 6, 72, 34, 7, 73, 35, 8, 72, 34, \
14, 71, 35, 42, 85, 49, 70, 97, 62, 87, \
97, 63, 78, 78, 47, 70, 68, 39, 62, 60, \
33, 46, 46, 23, 42, 41, 20, 63, 57, 31, \
94, 84, 47, 106, 89, 47, 101, 81, 39, 95, \
75, 33, 89, 73, 30, 74, 60, 23, 62, 51, \
21, 56, 47, 20, 53, 46, 20, 55, 49, 24, \
53, 48, 25, 48, 45, 22, 40, 39, 18, 26, \
29, 11, 16, 26, 7, 10, 28, 8, 9, 37, \
14, 8, 41, 17, 7, 46, 20, 6, 71, 34, \
7, 75, 36, 9, 75, 37, 9, 73, 35, 19, \
75, 38, 41, 84, 48, 77, 101, 68, 69, 78, \
49, 55, 59, 33, 40, 44, 21, 29, 33, 14, \
33, 34, 16, 61, 57, 31, 97, 87, 48, 102, \
85, 43, 96, 77, 39, 89, 72, 35, 83, 67, \
29, 72, 59, 25, 65, 52, 24, 65, 52, 24, \
71, 57, 25, 66, 56, 26, 59, 52, 25, 51, \
47, 22, 42, 40, 17, 36, 35, 14, 27, 30, \
10, 18, 27, 8, 12, 32, 11, 10, 39, 17, \
9, 44, 20, 7, 68, 32, 8, 70, 33, 9, \
72, 35, 9, 73, 36, 9, 72, 35, 19, 76, \
39, 44, 89, 53, 63, 83, 54, 52, 61, 37, \
32, 38, 18, 25, 32, 15, 31, 34, 16, 60, \
58, 31, 97, 88, 50, 104, 88, 48, 92, 77, \
40, 80, 67, 32, 72, 59, 25, 70, 58, 25, \
72, 59, 27, 77, 63, 30, 84, 68, 34, 68, \
57, 28, 55, 49, 23, 46, 43, 19, 46, 43, \
19, 52, 45, 19, 45, 39, 13, 31, 30, 7, \
20, 32, 9, 13, 38, 14, 8, 43, 17, 7, \
68, 32, 8, 69, 33, 8, 70, 33, 8, 71, \
35, 8, 72, 35, 9, 73, 36, 13, 76, 36, \
36, 78, 44, 43, 65, 38, 38, 47, 27, 27, \
34, 19, 27, 32, 16, 55, 56, 31, 91, 86, \
51, 90, 79, 42, 76, 65, 31, 69, 59, 26, \
69, 59, 28, 65, 55, 25, 65, 55, 25, 67, \
57, 28, 69, 60, 32, 55, 50, 25, 49, 45, \
21, 48, 43, 19, 51, 44, 18, 57, 48, 23, \
52, 43, 19, 39, 34, 13, 29, 33, 13, 18, \
34, 13, 10, 39, 15, 6, 70, 33, 7, 70, \
33, 9, 69, 33, 8, 70, 33, 8, 70, 33, \
7, 70, 34, 8, 72, 36, 16, 73, 37, 32, \
71, 40, 41, 61, 37, 24, 34, 18, 22, 29, \
14, 43, 47, 25, 72, 71, 40, 69, 63, 30, \
64, 56, 25, 62, 54, 24, 62, 55, 26, 61, \
53, 26, 59, 51, 24, 54, 48, 22, 48, 43, \
18, 45, 43, 21, 44, 43, 21, 44, 42, 20, \
45, 41, 17, 47, 41, 18, 43, 38, 17, 36, \
33, 14, 30, 31, 14, 23, 31, 13, 14, 35, \
13, 6, 71, 34, 7, 70, 33, 7, 68, 31, \
7, 67, 30, 8, 66, 31, 9, 65, 33, 11, \
66, 35, 10, 70, 36, 20, 71, 37, 29, 63, \
35, 24, 37, 20, 21, 30, 15, 37, 43, 23, \
60, 62, 34, 64, 61, 31, 64, 60, 30, 64, \
59, 30, 64, 58, 30, 56, 50, 24, 55, 49, \
23, 56, 51, 25, 59, 54, 28, 52, 49, 26, \
43, 42, 21, 39, 39, 18, 46, 44, 23, 44, \
42, 21, 42, 41, 20, 39, 39, 19, 33, 35, \
17, 27, 32, 15, 17, 33, 12, 7, 73, 36, \
7, 73, 35, 6, 69, 31, 7, 66, 29, 7, \
64, 29, 7, 62, 30, 7, 62, 30, 7, 64, \
31, 16, 69, 36, 26, 68, 38, 33, 50, 29, \
22, 31, 15, 32, 38, 20, 52, 58, 34, 56, \
56, 28, 61, 59, 30, 66, 61, 33, 68, 62, \
33, 60, 54, 27, 54, 49, 24, 55, 50, 25, \
61, 55, 27, 62, 56, 29, 62, 56, 30, 62, \
56, 31, 65, 59, 35, 58, 53, 30, 48, 46, \
24, 39, 38, 18, 33, 35, 17, 26, 30, 13, \
17, 28, 11, 7, 76, 39, 7, 76, 36, 6, \
72, 32, 5, 67, 29, 6, 62, 28, 6, 58, \
26, 4, 56, 25, 5, 56, 25, 13, 60, 30, \
25, 64, 34, 41, 62, 36, 26, 36, 17, 23, \
30, 13, 34, 42, 22, 54, 57, 32, 61, 61, \
34, 64, 61, 33, 63, 58, 30, 56, 51, 25, \
56, 52, 28, 57, 54, 31, 57, 54, 29, 53, \
50, 26, 51, 47, 24, 49, 45, 23, 47, 44, \
23, 39, 40, 19, 33, 37, 16, 28, 33, 14, \
24, 31, 13, 21, 28, 12, 16, 28, 11, 9, \
76, 39, 9, 75, 37, 8, 72, 33, 7, 70, \
32, 8, 66, 31, 8, 61, 29, 6, 57, 26, \
5, 53, 23, 8, 53, 23, 18, 57, 26, 41, \
65, 36, 25, 38, 18, 17, 25, 10, 22, 31, \
15, 47, 53, 33, 63, 66, 42, 66, 65, 39, \
57, 54, 27, 49, 45, 20, 44, 43, 20, 42, \
42, 21, 40, 41, 19, 37, 38, 17, 34, 35, \
16, 31, 32, 14, 27, 29, 12, 24, 30, 13, \
23, 30, 14, 23, 31, 14, 21, 29, 13, 21, \
29, 14, 17, 30, 13, 13, 77, 41, 18, 78, \
41, 24, 79, 39, 12, 72, 34, 8, 68, 32, \
6, 64, 31, 6, 60, 29, 6, 57, 26, 7, \
54, 22, 14, 54, 22, 36, 64, 32, 31, 47, \
26, 34, 44, 30, 43, 53, 39, 49, 58, 39, \
58, 62, 41, 62, 62, 39, 58, 56, 32, 51, \
49, 26, 49, 48, 26, 47, 48, 28, 45, 48, \
27, 33, 37, 17, 29, 32, 14, 27, 30, 14, \
25, 28, 12, 22, 26, 11, 21, 26, 11, 23, \
26, 11, 23, 27, 11, 27, 30, 16, 26, 32, \
17, 21, 76, 36, 35, 80, 36, 47, 82, 36, \
25, 72, 30, 13, 65, 27, 7, 61, 26, 5, \
58, 26, 8, 56, 25, 13, 55, 24, 20, 53, \
23, 29, 52, 25, 26, 43, 24, 30, 42, 28, \
39, 50, 36, 51, 59, 41, 57, 63, 45, 64, \
68, 49, 73, 74, 55, 86, 85, 64, 96, 94, \
71, 102, 100, 76, 103, 103, 77, 85, 86, 60, \
75, 75, 52, 67, 67, 44, 58, 57, 35, 57, \
54, 29, 57, 52, 25, 58, 51, 24, 56, 50, \
24, 53, 49, 25, 48, 46, 25, 53, 90, 42, \
60, 91, 41, 53, 83, 38, 59, 88, 39, 48, \
82, 38, 29, 71, 33, 9, 58, 24, 11, 53, \
24, 25, 55, 30, 36, 53, 32, 26, 36, 19, \
19, 28, 16, 18, 27, 18, 22, 33, 23, 29, \
40, 27, 42, 51, 36, 56, 62, 46, 69, 73, \
56, 82, 84, 65, 100, 100, 78, 114, 113, 88, \
123, 120, 92, 125, 123, 94, 135, 132, 104, 140, \
137, 109, 131, 127, 99, 131, 123, 89, 130, 118, \
81, 130, 115, 74, 131, 115, 74, 100, 87, 48, \
71, 64, 30, 25, 77, 32, 33, 81, 32, 41, \
85, 37, 45, 85, 34, 32, 76, 31, 17, 67, \
29, 6, 62, 28, 7, 56, 26, 11, 49, 23, \
14, 41, 19, 9, 29, 11, 7, 25, 10, 9, \
25, 13, 16, 30, 19, 27, 40, 29, 38, 49, \
37, 46, 55, 42, 51, 59, 44, 59, 64, 47, \
75, 78, 59, 89, 89, 68, 94, 92, 67, 100, \
98, 71, 105, 103, 75, 111, 109, 80, 117, 115, \
85, 130, 124, 91, 137, 129, 92, 139, 127, 88, \
132, 120, 80, 99, 89, 53, 76, 68, 37, 9, \
78, 45, 18, 84, 46, 36, 90, 45, 30, 88, \
44, 18, 84, 45, 10, 81, 46, 10, 79, 47, \
8, 74, 42, 7, 69, 38, 7, 64, 33, 8, \
57, 29, 7, 49, 23, 7, 41, 19, 8, 35, \
17, 10, 32, 17, 15, 35, 20, 20, 38, 23, \
26, 40, 25, 30, 41, 25, 38, 46, 28, 49, \
54, 36, 63, 66, 46, 65, 67, 46, 65, 68, \
45, 67, 70, 46, 74, 77, 52, 71, 73, 48, \
72, 74, 48, 72, 73, 47, 58, 62, 37, 37, \
46, 23, 22, 41, 17, 11, 88, 55, 13, 91, \
55, 16, 92, 55, 15, 91, 54, 13, 92, 56, \
11, 92, 58, 12, 92, 59, 11, 91, 58, 10, \
90, 57, 10, 89, 55, 10, 88, 54, 12, 86, \
52, 12, 82, 50, 12, 78, 47, 12, 73, 44, \
11, 70, 41, 11, 65, 36, 10, 59, 31, 12, \
54, 29, 16, 53, 30, 22, 56, 33, 27, 61, \
37, 25, 59, 35, 25, 59, 35, 26, 61, 36, \
28, 63, 38, 25, 65, 38, 22, 65, 37, 19, \
65, 37, 16, 65, 38, 15, 68, 41, 15, 76, \
48, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '7754';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1ae58c145fbc7a07e082c6e7f2c78ed1e8';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_horse7';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{55, 43, 57, 57, 45, 61, 58, 45, 65, 58, 44, \
66, 57, 44, 66, 56, 44, 64, 56, 44, 64, \
58, 46, 66, 56, 44, 65, 53, 42, 61, 50, \
42, 58, 50, 43, 59, 49, 41, 60, 46, 38, \
61, 44, 36, 60, 42, 33, 58, 40, 32, 57, \
41, 32, 57, 41, 32, 57, 40, 33, 57, 41, \
32, 56, 43, 31, 54, 42, 29, 52, 41, 28, \
51, 41, 28, 51, 41, 28, 51, 40, 28, 48, \
39, 28, 45, 37, 26, 44, 36, 25, 42, 35, \
24, 42, 35, 24, 41, 45, 33, 44, 46, 34, \
47, 50, 38, 54, 54, 41, 59, 53, 41, 59, \
52, 41, 58, 52, 41, 58, 53, 42, 58, 52, \
41, 58, 50, 40, 56, 48, 40, 56, 47, 40, \
56, 46, 39, 58, 46, 38, 60, 44, 36, 60, \
42, 34, 58, 41, 33, 57, 40, 32, 56, 40, \
32, 56, 40, 32, 56, 40, 32, 55, 42, 31, \
53, 41, 29, 51, 40, 28, 50, 40, 28, 50, \
39, 27, 49, 39, 27, 46, 38, 27, 44, 37, \
27, 44, 36, 25, 42, 36, 25, 42, 36, 25, \
41, 37, 26, 34, 41, 29, 39, 47, 35, 48, \
52, 40, 56, 52, 40, 56, 50, 39, 54, 50, \
39, 54, 52, 40, 56, 52, 41, 56, 52, 41, \
56, 48, 40, 55, 45, 37, 53, 42, 34, 53, \
41, 33, 55, 42, 34, 57, 42, 34, 59, 42, \
34, 59, 41, 33, 57, 40, 32, 56, 40, 32, \
56, 41, 32, 56, 42, 31, 53, 41, 29, 51, \
41, 28, 51, 41, 29, 51, 39, 27, 49, 38, \
26, 46, 38, 27, 44, 38, 27, 44, 37, 26, \
43, 37, 26, 43, 37, 26, 42, 37, 27, 32, \
38, 28, 35, 41, 30, 39, 42, 31, 42, 42, \
29, 43, 43, 29, 44, 41, 30, 44, 43, 35, \
47, 47, 39, 50, 49, 40, 52, 47, 42, 59, \
42, 38, 57, 40, 35, 56, 41, 35, 58, 41, \
34, 59, 43, 36, 56, 43, 37, 55, 41, 34, \
56, 41, 33, 57, 41, 33, 55, 41, 33, 53, \
40, 32, 52, 38, 30, 51, 38, 30, 50, 38, \
30, 50, 36, 28, 48, 37, 27, 46, 38, 27, \
46, 38, 27, 46, 37, 26, 44, 36, 25, 44, \
36, 24, 42, 45, 42, 44, 47, 44, 46, 50, \
46, 48, 52, 49, 51, 57, 48, 54, 63, 50, \
58, 60, 55, 60, 67, 65, 68, 75, 69, 72, \
79, 68, 74, 73, 68, 78, 63, 61, 72, 63, \
62, 73, 68, 68, 79, 69, 69, 80, 71, 73, \
76, 71, 73, 75, 71, 70, 81, 70, 68, 82, \
68, 66, 75, 66, 64, 69, 62, 62, 72, 60, \
60, 72, 58, 59, 70, 57, 57, 68, 55, 55, \
66, 55, 52, 64, 54, 48, 62, 51, 45, 59, \
50, 44, 57, 46, 41, 54, 43, 37, 50, 69, \
77, 69, 72, 80, 73, 76, 84, 77, 78, 86, \
79, 79, 86, 77, 82, 88, 77, 83, 90, 79, \
94, 95, 87, 98, 85, 84, 87, 64, 67, 101, \
82, 88, 116, 103, 108, 92, 85, 88, 79, 80, \
81, 95, 102, 100, 100, 110, 104, 102, 112, 104, \
104, 114, 107, 104, 116, 108, 102, 116, 105, 101, \
115, 101, 103, 111, 104, 103, 109, 103, 100, 107, \
101, 98, 104, 98, 96, 102, 96, 93, 100, 94, \
88, 96, 90, 84, 92, 85, 82, 89, 83, 79, \
87, 81, 76, 83, 77, 78, 90, 76, 80, 91, \
77, 80, 92, 78, 80, 92, 78, 80, 92, 75, \
79, 94, 73, 81, 95, 77, 94, 98, 88, 129, \
118, 117, 139, 114, 123, 158, 131, 156, 140, 118, \
146, 141, 124, 150, 124, 114, 138, 95, 90, 112, \
97, 98, 107, 109, 116, 110, 109, 121, 106, 110, \
127, 106, 106, 128, 104, 105, 127, 105, 111, 124, \
107, 110, 122, 105, 106, 118, 102, 104, 116, 100, \
101, 113, 97, 99, 111, 95, 97, 109, 92, 94, \
106, 89, 90, 102, 85, 88, 100, 84, 86, 97, \
81, 87, 95, 77, 88, 96, 77, 89, 97, 78, \
91, 99, 81, 92, 101, 83, 91, 102, 84, 92, \
104, 90, 143, 149, 143, 223, 218, 221, 207, 190, \
203, 145, 124, 149, 116, 96, 124, 120, 100, 127, \
127, 108, 135, 131, 112, 139, 118, 106, 126, 118, \
115, 122, 117, 122, 113, 113, 126, 104, 108, 128, \
103, 105, 126, 103, 108, 124, 104, 107, 122, 103, \
102, 117, 98, 99, 114, 95, 96, 110, 91, 97, \
107, 90, 96, 103, 88, 93, 100, 84, 89, 96, \
80, 84, 92, 76, 81, 87, 72, 85, 93, 70, \
86, 94, 71, 89, 98, 75, 93, 101, 78, 93, \
103, 83, 92, 105, 88, 95, 105, 89, 175, 178, \
168, 238, 232, 236, 149, 135, 153, 91, 77, 97, \
113, 99, 116, 101, 87, 100, 80, 64, 80, 105, \
89, 109, 133, 119, 148, 130, 121, 152, 129, 125, \
143, 115, 118, 118, 106, 116, 98, 104, 117, 89, \
102, 116, 93, 101, 114, 95, 96, 108, 92, 94, \
107, 88, 94, 108, 83, 95, 105, 85, 95, 100, \
85, 91, 97, 82, 87, 93, 78, 83, 89, 74, \
81, 85, 71, 83, 89, 66, 83, 88, 66, 84, \
90, 68, 87, 93, 70, 87, 96, 73, 87, 98, \
76, 91, 98, 80, 181, 181, 174, 222, 214, 225, \
142, 128, 154, 123, 109, 130, 113, 101, 114, 90, \
79, 87, 82, 71, 81, 73, 60, 77, 103, 90, \
122, 133, 122, 165, 153, 144, 184, 142, 137, 166, \
130, 131, 142, 168, 172, 169, 181, 187, 180, 172, \
178, 177, 141, 147, 148, 101, 108, 104, 89, 97, \
84, 89, 99, 82, 87, 98, 81, 86, 97, 79, \
83, 94, 77, 80, 91, 74, 78, 87, 70, 79, \
78, 61, 77, 76, 60, 78, 76, 60, 81, 79, \
63, 85, 87, 64, 73, 78, 52, 114, 114, 102, \
221, 216, 220, 183, 173, 193, 133, 119, 148, 111, \
99, 115, 88, 77, 83, 60, 50, 52, 66, 55, \
58, 73, 61, 71, 72, 58, 83, 114, 100, 138, \
148, 135, 181, 157, 145, 195, 158, 150, 196, 182, \
176, 213, 224, 220, 244, 230, 225, 251, 196, 191, \
220, 147, 144, 164, 104, 103, 112, 81, 88, 79, \
77, 89, 71, 78, 90, 72, 79, 90, 73, 78, \
90, 72, 78, 86, 69, 69, 61, 50, 65, 57, \
46, 67, 58, 48, 71, 63, 53, 71, 64, 49, \
70, 66, 49, 165, 160, 159, 177, 169, 183, 128, \
119, 140, 107, 97, 118, 76, 65, 75, 65, 55, \
55, 68, 58, 54, 53, 43, 40, 57, 47, 50, \
69, 56, 71, 93, 78, 106, 130, 115, 155, 143, \
130, 178, 149, 139, 187, 149, 139, 185, 165, 151, \
199, 180, 166, 215, 179, 166, 211, 159, 147, 181, \
117, 107, 127, 80, 79, 75, 71, 75, 60, 72, \
76, 61, 72, 76, 61, 73, 77, 62, 74, 75, \
61, 75, 62, 50, 68, 55, 44, 68, 55, 43, \
68, 55, 44, 60, 48, 36, 78, 65, 58, 157, \
140, 144, 131, 113, 125, 95, 80, 90, 66, 56, \
61, 55, 46, 45, 55, 46, 39, 64, 55, 45, \
79, 70, 64, 67, 57, 59, 62, 49, 60, 77, \
62, 83, 110, 94, 126, 134, 119, 158, 134, 122, \
160, 149, 136, 174, 146, 131, 178, 141, 125, 174, \
140, 124, 170, 141, 127, 164, 126, 113, 139, 77, \
67, 70, 59, 51, 40, 58, 49, 39, 60, 52, \
41, 59, 51, 41, 58, 49, 39, 95, 81, 62, \
93, 78, 60, 92, 77, 59, 93, 78, 59, 91, \
78, 62, 96, 81, 69, 103, 80, 71, 96, 69, \
61, 94, 73, 63, 85, 73, 60, 81, 73, 58, \
83, 76, 59, 89, 81, 66, 142, 133, 126, 130, \
119, 125, 70, 57, 71, 70, 56, 78, 104, 89, \
120, 133, 117, 154, 130, 114, 150, 127, 112, 145, \
129, 116, 150, 119, 108, 142, 115, 103, 137, 110, \
98, 132, 117, 105, 137, 91, 77, 85, 83, 67, \
58, 82, 66, 58, 82, 65, 57, 76, 59, 52, \
68, 54, 45, 106, 93, 74, 106, 93, 74, 108, \
96, 77, 109, 97, 77, 107, 99, 76, 106, 100, \
75, 106, 97, 73, 105, 95, 71, 111, 103, 78, \
114, 109, 84, 114, 108, 87, 115, 108, 89, 128, \
120, 104, 209, 200, 196, 194, 183, 192, 114, 102, \
119, 101, 87, 110, 120, 106, 136, 135, 119, 153, \
122, 108, 137, 106, 91, 117, 115, 101, 127, 108, \
94, 121, 104, 91, 117, 100, 86, 113, 101, 87, \
113, 102, 89, 92, 106, 93, 82, 105, 92, 81, \
101, 87, 77, 96, 83, 72, 91, 79, 68, 95, \
86, 65, 92, 83, 62, 97, 88, 67, 101, 91, \
71, 100, 93, 68, 101, 97, 67, 101, 99, 69, \
99, 100, 69, 106, 103, 73, 113, 108, 79, 112, \
106, 81, 110, 104, 80, 128, 121, 104, 225, 216, \
214, 222, 210, 224, 151, 137, 158, 149, 135, 159, \
163, 148, 178, 137, 122, 151, 102, 88, 111, 89, \
76, 93, 107, 92, 109, 98, 82, 100, 90, 75, \
93, 83, 68, 86, 88, 72, 89, 88, 75, 73, \
93, 83, 67, 91, 81, 66, 90, 79, 64, 87, \
76, 61, 84, 75, 59, 86, 80, 58, 85, 79, \
57, 90, 83, 62, 95, 88, 67, 100, 89, 68, \
104, 91, 69, 97, 93, 68, 93, 92, 67, 105, \
98, 75, 114, 101, 79, 108, 100, 74, 106, 101, \
75, 121, 114, 96, 207, 198, 197, 207, 195, 212, \
170, 156, 180, 211, 197, 221, 201, 186, 214, 123, \
109, 135, 83, 71, 88, 86, 74, 84, 94, 79, \
89, 80, 64, 74, 71, 55, 66, 66, 49, 60, \
71, 55, 64, 74, 63, 56, 84, 77, 58, 83, \
76, 57, 85, 77, 59, 85, 78, 59, 83, 76, \
57, 82, 75, 56, 83, 76, 57, 86, 79, 60, \
89, 82, 63, 93, 85, 67, 98, 89, 70, 93, \
87, 68, 92, 88, 68, 100, 93, 74, 104, 95, \
76, 101, 95, 73, 105, 100, 77, 109, 103, 87, \
166, 157, 155, 223, 212, 224, 225, 212, 231, 226, \
212, 232, 202, 188, 210, 119, 105, 126, 85, 72, \
87, 86, 74, 82, 79, 64, 67, 63, 48, 49, \
60, 45, 47, 61, 46, 48, 56, 41, 42, 70, \
60, 50, 82, 77, 58, 81, 75, 56, 82, 77, \
58, 82, 77, 57, 80, 74, 55, 79, 72, 54, \
80, 73, 55, 83, 76, 58, 86, 79, 61, 88, \
82, 64, 91, 86, 67, 91, 86, 67, 92, 87, \
68, 96, 91, 72, 100, 95, 76, 103, 98, 79, \
105, 100, 80, 103, 98, 81, 125, 118, 112, 213, \
204, 210, 184, 173, 183, 122, 111, 120, 125, 113, \
125, 98, 85, 100, 106, 93, 112, 98, 84, 101, \
64, 50, 51, 52, 38, 35, 55, 41, 38, 50, \
37, 34, 47, 34, 31, 79, 71, 58, 85, 80, \
61, 80, 75, 56, 79, 74, 55, 78, 73, 54, \
76, 71, 52, 82, 75, 57, 83, 76, 58, 85, \
78, 60, 89, 82, 64, 89, 83, 65, 91, 86, \
67, 93, 88, 69, 94, 89, 70, 92, 87, 68, \
91, 86, 67, 97, 91, 74, 100, 95, 75, 100, \
95, 76, 105, 99, 87, 174, 166, 166, 173, 163, \
168, 91, 81, 83, 72, 62, 63, 111, 100, 107, \
149, 135, 156, 84, 69, 92, 44, 31, 30, 39, \
26, 19, 49, 36, 29, 41, 28, 21, 60, 47, \
40, 95, 88, 73, 91, 86, 67, 86, 81, 62, \
80, 75, 56, 76, 71, 52, 74, 69, 50, 83, \
76, 58, 84, 77, 59, 87, 80, 62, 90, 83, \
65, 88, 82, 63, 88, 83, 65, 92, 87, 68, \
93, 88, 70, 90, 85, 67, 90, 84, 67, 96, \
90, 75, 100, 95, 76, 100, 95, 74, 100, 94, \
77, 120, 113, 104, 130, 119, 125, 98, 87, 94, \
75, 65, 62, 130, 120, 117, 156, 144, 157, 71, \
57, 76, 69, 55, 52, 68, 55, 45, 65, 53, \
44, 49, 36, 27, 66, 53, 44, 94, 86, 71, \
89, 84, 65, 84, 79, 60, 80, 75, 56, 76, \
71, 52, 74, 69, 50, 83, 76, 59, 84, 77, \
60, 87, 81, 63, 88, 82, 66, 86, 81, 62, \
87, 82, 59, 90, 86, 63, 96, 91, 67, 96, \
91, 67, 96, 92, 69, 97, 94, 74, 97, 94, \
74, 95, 93, 72, 96, 93, 74, 98, 94, 77, \
89, 81, 82, 88, 77, 88, 92, 83, 82, 126, \
118, 112, 129, 119, 123, 59, 47, 56, 64, 50, \
45, 82, 67, 57, 74, 61, 51, 43, 30, 21, \
66, 54, 44, 92, 84, 69, 86, 81, 62, 82, \
77, 58, 80, 75, 56, 80, 75, 56, 78, 72, \
53, 85, 79, 65, 82, 77, 59, 83, 79, 60, \
86, 83, 64, 87, 83, 66, 92, 85, 69, 97, \
90, 74, 103, 97, 79, 105, 99, 80, 104, 99, \
80, 98, 99, 79, 94, 96, 80, 96, 96, 85, \
100, 99, 86, 107, 106, 86, 105, 102, 91, 88, \
82, 83, 89, 82, 84, 125, 118, 122, 133, 126, \
131, 113, 103, 107, 99, 82, 77, 104, 86, 78, \
82, 65, 58, 36, 21, 13, 69, 55, 46, 96, \
86, 72, 91, 84, 66, 90, 83, 65, 87, 80, \
62, 82, 75, 57, 79, 72, 54, 84, 81, 65, \
84, 81, 60, 89, 86, 56, 96, 94, 54, 102, \
97, 60, 100, 90, 64, 101, 91, 66, 105, 95, \
71, 106, 95, 73, 104, 94, 72, 104, 99, 73, \
106, 103, 71, 105, 104, 69, 110, 109, 80, 115, \
112, 95, 120, 114, 105, 106, 98, 93, 94, 85, \
83, 145, 135, 138, 137, 127, 134, 154, 143, 147, \
120, 106, 99, 114, 99, 89, 100, 84, 74, 46, \
29, 20, 67, 49, 40, 97, 86, 71, 94, 87, \
69, 92, 84, 67, 87, 80, 62, 78, 71, 53, \
76, 69, 51, 75, 76, 57, 80, 78, 53, 108, \
106, 61, 156, 154, 91, 139, 137, 54, 172, 170, \
60, 164, 161, 52, 158, 154, 50, 166, 161, 61, \
157, 152, 57, 161, 155, 67, 167, 165, 64, 174, \
176, 70, 135, 138, 57, 103, 102, 64, 116, 109, \
94, 117, 106, 96, 83, 72, 66, 123, 110, 112, \
95, 81, 90, 117, 105, 111, 106, 97, 86, 108, \
98, 82, 129, 114, 100, 86, 67, 55, 81, 60, \
48, 103, 90, 74, 94, 87, 69, 93, 86, 68, \
85, 78, 60, 79, 72, 54, 81, 74, 56, 67, \
72, 50, 73, 73, 45, 113, 112, 55, 165, 164, \
87, 143, 143, 39, 231, 232, 73, 224, 224, 67, \
211, 209, 60, 207, 204, 61, 200, 196, 59, 205, \
199, 64, 213, 212, 60, 228, 232, 80, 151, 155, \
48, 87, 84, 48, 99, 91, 79, 109, 97, 80, \
77, 63, 54, 89, 74, 74, 88, 71, 80, 110, \
96, 103, 95, 89, 74, 86, 79, 60, 135, 121, \
105, 120, 100, 85, 98, 74, 61, 107, 92, 76, \
86, 79, 61, 86, 79, 61, 87, 80, 62, 82, \
75, 57, 78, 71, 53, 71, 69, 46, 74, 71, \
41, 92, 90, 44, 140, 138, 76, 153, 151, 71, \
153, 151, 60, 150, 148, 59, 154, 152, 66, 151, \
148, 65, 149, 145, 64, 153, 149, 67, 154, 153, \
65, 156, 156, 73, 119, 118, 61, 87, 81, 59, \
83, 75, 62, 109, 99, 83, 123, 110, 103, 110, \
95, 95, 144, 126, 130, 120, 106, 104, 86, 80, \
64, 73, 65, 46, 130, 114, 99, 130, 111, 97, \
107, 89, 74, 99, 88, 71, 89, 82, 64, 87, \
80, 62, 85, 78, 60, 82, 75, 57, 76, 69, \
51, 70, 62, 44, 71, 65, 42, 76, 71, 43, \
76, 72, 39, 73, 68, 39, 68, 62, 39, 72, \
67, 44, 72, 66, 42, 77, 71, 47, 84, 79, \
54, 81, 78, 46, 82, 79, 48, 82, 78, 54, \
83, 78, 58, 84, 78, 61, 78, 72, 54, 95, \
87, 73, 133, 121, 117, 118, 103, 103, 138, 121, \
120, 106, 92, 84, 73, 69, 51, 80, 71, 53, \
153, 136, 121, 131, 114, 100, 92, 81, 64, 84, \
76, 58, 80, 73, 55, 78, 71, 53, 70, 63, \
45, 71, 64, 46, 71, 65, 47, 57, 49, 36, \
58, 50, 35, 65, 58, 39, 71, 64, 43, 74, \
68, 46, 70, 63, 43, 66, 60, 40, 69, 63, \
43, 74, 67, 47, 77, 71, 50, 73, 68, 46, \
71, 67, 45, 75, 69, 50, 73, 67, 52, 73, \
67, 54, 68, 62, 46, 84, 76, 62, 140, 128, \
123, 137, 123, 123, 145, 127, 126, 74, 60, 52, \
54, 53, 35, 68, 62, 44, 140, 127, 111, 146, \
133, 117, 78, 69, 52, 71, 64, 46, 70, 63, \
45, 67, 60, 42, 67, 60, 42, 67, 60, 42, \
65, 59, 40, 59, 52, 35, 58, 51, 33, 59, \
52, 34, 60, 53, 35, 59, 52, 30, 58, 53, \
26, 58, 53, 26, 59, 53, 26, 63, 58, 31, \
66, 61, 35, 65, 60, 40, 64, 59, 40, 68, \
63, 44, 67, 62, 43, 71, 66, 48, 58, 52, \
34, 101, 93, 79, 159, 147, 143, 136, 122, 122, \
151, 134, 133, 57, 44, 37, 43, 44, 25, 52, \
49, 29, 89, 79, 62, 100, 89, 73, 65, 59, \
41, 60, 55, 36, 55, 48, 30, 59, 52, 34, \
60, 53, 35, 57, 50, 32, 58, 51, 33, 67, \
61, 38, 65, 59, 37, 63, 56, 35, 59, 52, \
33, 55, 48, 30, 63, 55, 38, 71, 64, 47, \
67, 60, 43, 60, 52, 36, 60, 53, 36, 60, \
55, 36, 51, 46, 27, 53, 48, 27, 67, 62, \
39, 64, 60, 36, 65, 59, 37, 107, 99, 84, \
104, 93, 86, 119, 106, 103, 144, 129, 125, 60, \
49, 39, 44, 46, 26, 52, 51, 31, 56, 48, \
30, 56, 47, 30, 55, 49, 31, 51, 45, 27, \
51, 44, 26, 55, 48, 30, 54, 47, 29, 49, \
42, 24, 58, 51, 33, 57, 50, 31, 52, 45, \
27, 59, 53, 34, 63, 56, 37, 65, 58, 39, \
68, 61, 41, 67, 60, 39, 64, 58, 37, 63, \
57, 36, 56, 50, 30, 53, 48, 29, 50, 45, \
26, 41, 36, 17, 52, 47, 28, 64, 59, 39, \
72, 65, 47, 78, 69, 52, 68, 59, 43, 74, \
65, 49, 67, 57, 41, 53, 45, 28, 52, 49, \
30, 52, 48, 29, 51, 44, 26, 53, 42, 26, \
53, 41, 25, 51, 42, 25, 52, 45, 27, 55, \
48, 30, 50, 43, 25, 52, 45, 27, 53, 46, \
29, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '8064';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a706c5e8acfdd9db4d90fef4ce4f0aea9';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_bird4';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{184, 212, 222, 177, 213, 222, 183, 213, 225, 184, 213, \
224, 183, 213, 223, 184, 214, 225, 185, 215, 225, \
185, 216, 226, 186, 216, 226, 186, 216, 226, 186, \
216, 226, 187, 215, 227, 187, 215, 227, 187, 215, \
227, 187, 216, 228, 184, 213, 222, 168, 171, 172, \
155, 144, 142, 169, 177, 179, 178, 178, 185, 130, \
115, 111, 131, 116, 112, 107, 88, 82, 95, 84, \
72, 90, 93, 77, 142, 149, 144, 171, 194, 204, \
139, 161, 171, 94, 92, 95, 95, 73, 66, 83, \
77, 76, 90, 95, 94, 180, 212, 220, 179, 211, \
221, 184, 210, 223, 184, 212, 223, 183, 213, 223, \
183, 213, 223, 184, 213, 223, 184, 214, 224, 185, \
215, 224, 185, 215, 225, 186, 216, 226, 187, 215, \
226, 187, 215, 226, 187, 215, 226, 188, 216, 227, \
187, 209, 216, 150, 142, 136, 122, 95, 83, 136, \
124, 120, 138, 132, 141, 101, 91, 81, 105, 96, \
84, 90, 79, 74, 90, 80, 73, 81, 76, 54, \
144, 160, 162, 172, 199, 210, 143, 169, 179, 137, \
149, 156, 130, 118, 111, 75, 66, 63, 67, 64, \
65, 180, 214, 222, 181, 212, 222, 184, 212, 225, \
184, 214, 225, 184, 214, 224, 185, 215, 225, 185, \
215, 225, 186, 216, 226, 186, 216, 226, 186, 216, \
226, 186, 216, 226, 188, 216, 226, 188, 217, 226, \
188, 216, 226, 189, 218, 227, 185, 207, 211, 142, \
133, 121, 115, 86, 69, 104, 86, 83, 73, 70, \
74, 80, 79, 69, 77, 78, 66, 95, 96, 85, \
120, 113, 109, 103, 103, 87, 117, 132, 132, 171, \
197, 203, 167, 194, 203, 163, 186, 193, 125, 127, \
122, 108, 102, 101, 99, 94, 93, 182, 214, 222, \
180, 212, 222, 181, 214, 225, 183, 214, 225, 184, \
214, 224, 185, 215, 225, 185, 215, 225, 186, 216, \
226, 186, 216, 226, 186, 216, 226, 186, 216, 226, \
188, 217, 225, 188, 217, 225, 188, 217, 225, 188, \
218, 226, 186, 212, 214, 151, 149, 134, 106, 86, \
70, 75, 65, 68, 70, 73, 85, 91, 97, 109, \
99, 107, 121, 154, 162, 158, 154, 150, 151, 145, \
160, 158, 98, 104, 96, 157, 177, 177, 170, 199, \
206, 155, 186, 191, 112, 125, 123, 120, 120, 123, \
136, 134, 129, 183, 215, 222, 180, 213, 221, 180, \
214, 223, 183, 214, 223, 184, 214, 223, 185, 215, \
224, 186, 216, 225, 186, 216, 225, 187, 217, 226, \
187, 217, 226, 187, 217, 226, 188, 217, 225, 186, \
219, 227, 184, 219, 228, 185, 218, 227, 188, 220, \
223, 181, 193, 183, 129, 129, 121, 86, 85, 100, \
82, 82, 100, 61, 68, 90, 129, 146, 166, 173, \
183, 184, 144, 147, 151, 170, 196, 197, 114, 116, \
110, 126, 138, 133, 170, 200, 207, 152, 182, 192, \
111, 129, 130, 137, 144, 156, 138, 137, 139, 182, \
216, 223, 181, 214, 221, 181, 214, 221, 183, 214, \
222, 184, 214, 222, 186, 216, 224, 186, 216, 224, \
187, 217, 225, 187, 217, 225, 188, 218, 226, 188, \
218, 226, 189, 217, 225, 187, 220, 228, 187, 221, \
228, 188, 215, 222, 187, 214, 223, 194, 214, 219, \
181, 202, 201, 129, 134, 141, 89, 83, 90, 69, \
76, 88, 165, 192, 199, 176, 188, 186, 143, 148, \
149, 175, 207, 207, 146, 156, 159, 100, 106, 98, \
157, 188, 190, 154, 178, 190, 113, 128, 129, 149, \
165, 178, 130, 124, 134, 182, 216, 223, 181, 214, \
221, 181, 214, 221, 183, 214, 222, 184, 214, 222, \
186, 216, 224, 186, 216, 224, 187, 217, 225, 187, \
217, 225, 188, 218, 226, 189, 219, 227, 193, 219, \
232, 195, 217, 223, 172, 186, 185, 135, 141, 141, \
120, 126, 135, 150, 167, 181, 188, 216, 220, 144, \
148, 139, 94, 82, 77, 131, 138, 143, 185, 217, \
221, 176, 190, 186, 150, 149, 147, 171, 205, 211, \
167, 191, 201, 105, 110, 100, 134, 161, 155, 155, \
171, 178, 119, 127, 126, 158, 182, 190, 123, 115, \
120, 183, 216, 223, 181, 214, 221, 182, 215, 222, \
184, 214, 222, 185, 215, 223, 187, 217, 225, 187, \
217, 225, 187, 217, 225, 187, 217, 225, 188, 218, \
225, 183, 213, 222, 182, 207, 220, 169, 178, 178, \
131, 127, 114, 99, 90, 79, 78, 71, 59, 78, \
88, 93, 157, 180, 188, 151, 145, 141, 88, 71, \
66, 161, 170, 174, 188, 222, 224, 177, 191, 187, \
156, 152, 149, 173, 205, 213, 173, 208, 219, 131, \
136, 128, 119, 133, 121, 142, 150, 149, 118, 125, \
119, 160, 185, 189, 125, 116, 115, 183, 216, 223, \
181, 214, 221, 182, 215, 222, 184, 215, 222, 186, \
216, 224, 187, 217, 225, 187, 217, 225, 188, 218, \
226, 188, 218, 226, 188, 218, 226, 176, 206, 215, \
144, 166, 176, 117, 118, 108, 107, 93, 70, 90, \
78, 61, 85, 75, 57, 70, 66, 62, 100, 106, \
106, 139, 123, 115, 81, 63, 63, 159, 170, 179, \
189, 223, 227, 179, 190, 188, 154, 153, 153, 180, \
205, 211, 175, 212, 217, 157, 164, 162, 121, 116, \
106, 131, 132, 125, 133, 142, 131, 161, 179, 182, \
107, 98, 92, 184, 216, 223, 182, 214, 221, 183, \
215, 222, 184, 215, 223, 186, 216, 224, 187, 217, \
225, 187, 217, 225, 189, 219, 226, 189, 219, 226, \
188, 219, 226, 188, 218, 226, 180, 198, 205, 151, \
146, 129, 110, 95, 65, 101, 90, 67, 100, 87, \
72, 84, 70, 61, 90, 79, 62, 123, 101, 78, \
76, 62, 63, 152, 167, 179, 190, 223, 230, 179, \
186, 185, 151, 153, 156, 184, 205, 210, 179, 210, \
214, 173, 187, 189, 126, 110, 100, 121, 113, 101, \
153, 170, 160, 152, 156, 158, 100, 89, 81, 185, \
215, 223, 183, 213, 221, 184, 215, 222, 185, 215, \
223, 186, 216, 224, 186, 216, 225, 187, 218, 225, \
188, 219, 225, 189, 220, 226, 189, 220, 225, 173, \
203, 209, 150, 164, 167, 144, 135, 114, 136, 124, \
90, 125, 113, 77, 129, 110, 81, 122, 103, 80, \
123, 102, 69, 119, 89, 62, 69, 58, 57, 148, \
166, 172, 191, 224, 232, 180, 185, 184, 152, 156, \
156, 182, 207, 214, 184, 205, 218, 176, 200, 204, \
132, 118, 104, 122, 104, 88, 158, 183, 185, 127, \
116, 116, 85, 70, 65, 185, 215, 223, 183, 213, \
221, 184, 214, 222, 185, 215, 223, 186, 216, 224, \
186, 216, 224, 187, 218, 225, 188, 219, 225, 190, \
221, 226, 189, 220, 225, 184, 214, 220, 176, 190, \
191, 158, 148, 124, 157, 144, 109, 148, 132, 93, \
146, 123, 85, 142, 118, 88, 134, 107, 69, 109, \
77, 49, 65, 52, 50, 137, 151, 154, 194, 225, \
231, 177, 186, 184, 152, 157, 153, 182, 210, 214, \
182, 207, 220, 178, 206, 211, 148, 137, 127, 134, \
129, 112, 157, 172, 176, 114, 106, 107, 82, 79, \
75, 185, 215, 223, 184, 214, 222, 185, 215, 223, \
185, 215, 223, 186, 216, 224, 187, 217, 225, 188, \
218, 226, 189, 220, 225, 190, 221, 226, 190, 222, \
226, 192, 222, 228, 195, 210, 209, 173, 164, 137, \
156, 141, 103, 148, 129, 87, 144, 117, 73, 136, \
105, 71, 132, 99, 62, 110, 77, 50, 74, 60, \
55, 83, 88, 87, 166, 189, 193, 179, 189, 187, \
148, 154, 149, 182, 212, 213, 181, 210, 220, 181, \
207, 210, 148, 136, 127, 129, 131, 114, 143, 145, \
147, 142, 143, 145, 149, 152, 146, 185, 215, 224, \
184, 214, 222, 185, 215, 223, 185, 215, 223, 186, \
216, 224, 187, 217, 225, 189, 219, 226, 189, 220, \
226, 191, 222, 226, 191, 222, 227, 192, 223, 228, \
189, 205, 200, 162, 154, 123, 157, 141, 99, 154, \
132, 87, 151, 124, 75, 135, 103, 67, 126, 92, \
57, 105, 76, 52, 78, 64, 57, 59, 53, 50, \
93, 101, 106, 164, 165, 167, 148, 151, 150, 181, \
211, 213, 184, 211, 218, 183, 201, 199, 139, 120, \
103, 121, 108, 89, 130, 130, 123, 163, 176, 179, \
162, 174, 171, 185, 215, 224, 184, 214, 222, 185, \
215, 223, 185, 216, 223, 186, 217, 224, 187, 217, \
225, 188, 219, 226, 189, 220, 226, 191, 222, 226, \
191, 222, 227, 193, 223, 228, 185, 201, 194, 164, \
155, 121, 167, 149, 106, 164, 140, 94, 153, 128, \
78, 140, 109, 73, 123, 90, 59, 91, 68, 49, \
63, 50, 42, 83, 70, 64, 63, 58, 63, 95, \
85, 92, 137, 138, 144, 182, 212, 217, 191, 211, \
218, 178, 186, 179, 146, 121, 96, 126, 94, 72, \
134, 136, 121, 172, 194, 200, 155, 181, 189, 185, \
215, 224, 184, 214, 222, 185, 215, 223, 185, 216, \
222, 186, 217, 223, 187, 218, 224, 189, 219, 225, \
189, 220, 225, 191, 222, 227, 191, 222, 228, 193, \
224, 228, 186, 198, 187, 176, 160, 124, 179, 158, \
114, 169, 148, 100, 157, 134, 85, 144, 115, 76, \
121, 88, 58, 72, 58, 46, 55, 48, 42, 88, \
76, 69, 62, 55, 56, 46, 39, 49, 117, 120, \
130, 183, 215, 220, 192, 209, 221, 172, 170, 159, \
160, 144, 122, 139, 112, 88, 156, 160, 151, 173, \
199, 206, 165, 194, 202, 185, 215, 224, 184, 214, \
222, 185, 215, 223, 185, 216, 222, 186, 217, 222, \
187, 218, 223, 189, 220, 224, 189, 220, 225, 191, \
222, 227, 192, 223, 228, 193, 224, 228, 185, 197, \
187, 179, 163, 127, 184, 165, 120, 178, 159, 111, \
163, 141, 95, 134, 113, 81, 107, 80, 55, 78, \
59, 45, 62, 53, 48, 71, 61, 55, 56, 48, \
45, 43, 41, 45, 75, 75, 86, 163, 188, 193, \
194, 207, 215, 164, 158, 144, 165, 163, 151, 134, \
122, 106, 161, 177, 177, 166, 201, 212, 166, 196, \
203, 185, 215, 224, 184, 214, 222, 185, 216, 223, \
186, 216, 222, 187, 218, 223, 187, 218, 223, 188, \
219, 225, 189, 220, 225, 191, 222, 227, 192, 223, \
228, 193, 224, 229, 188, 204, 198, 186, 175, 141, \
189, 172, 127, 182, 164, 119, 164, 145, 103, 99, \
88, 66, 91, 68, 49, 101, 73, 53, 70, 55, \
49, 66, 54, 49, 63, 55, 47, 52, 51, 47, \
44, 40, 48, 103, 114, 121, 184, 191, 188, 163, \
157, 139, 163, 162, 154, 116, 105, 91, 158, 178, \
177, 165, 202, 211, 166, 197, 203, 185, 215, 224, \
184, 214, 222, 185, 216, 223, 186, 217, 223, 187, \
218, 223, 187, 218, 223, 188, 219, 224, 189, 220, \
225, 191, 222, 227, 192, 223, 228, 193, 224, 230, \
193, 213, 213, 194, 188, 156, 195, 181, 135, 183, \
166, 123, 150, 136, 101, 83, 74, 55, 99, 75, \
56, 99, 70, 51, 70, 54, 45, 75, 62, 52, \
67, 58, 47, 51, 49, 42, 45, 42, 45, 51, \
54, 60, 125, 126, 118, 164, 163, 149, 158, 148, \
135, 124, 102, 77, 162, 176, 167, 171, 199, 204, \
167, 195, 200, 185, 215, 224, 184, 214, 222, 186, \
216, 223, 186, 217, 223, 187, 218, 223, 187, 218, \
223, 188, 219, 224, 189, 220, 225, 191, 222, 227, \
192, 223, 228, 192, 223, 230, 194, 217, 221, 200, \
197, 167, 202, 190, 143, 190, 176, 135, 131, 123, \
94, 100, 87, 66, 118, 88, 66, 87, 64, 49, \
78, 65, 52, 83, 70, 55, 73, 63, 52, 54, \
49, 44, 40, 41, 40, 35, 37, 42, 69, 67, \
59, 155, 165, 159, 153, 139, 127, 138, 116, 86, \
158, 172, 164, 171, 198, 208, 167, 194, 201, 185, \
216, 224, 184, 214, 222, 185, 215, 223, 186, 217, \
222, 187, 218, 223, 187, 218, 223, 188, 219, 224, \
190, 221, 226, 191, 222, 227, 192, 223, 227, 192, \
223, 229, 196, 221, 224, 206, 208, 184, 189, 177, \
138, 185, 173, 137, 130, 122, 95, 127, 110, 83, \
116, 90, 63, 75, 59, 46, 72, 64, 56, 66, \
59, 50, 56, 52, 46, 48, 45, 43, 37, 39, \
36, 32, 35, 36, 48, 48, 44, 126, 134, 130, \
149, 142, 135, 149, 132, 106, 152, 169, 163, 170, \
199, 209, 166, 195, 202, 185, 216, 224, 185, 215, \
223, 185, 215, 223, 185, 216, 222, 186, 218, 222, \
188, 219, 224, 188, 219, 224, 189, 220, 225, 191, \
222, 227, 191, 222, 227, 192, 224, 229, 196, 222, \
225, 213, 220, 205, 191, 179, 148, 173, 161, 127, \
148, 139, 109, 146, 127, 96, 106, 83, 57, 67, \
50, 38, 56, 46, 41, 47, 45, 40, 41, 42, \
40, 39, 39, 41, 37, 38, 37, 33, 37, 37, \
33, 36, 37, 68, 66, 64, 144, 144, 140, 160, \
146, 122, 153, 167, 159, 172, 200, 204, 166, 195, \
202, 185, 216, 224, 185, 214, 223, 185, 215, 223, \
185, 216, 222, 186, 217, 222, 188, 219, 224, 188, \
219, 224, 188, 219, 224, 190, 221, 226, 191, 222, \
227, 192, 223, 229, 194, 223, 227, 209, 222, 213, \
213, 206, 179, 177, 163, 127, 154, 143, 111, 141, \
120, 91, 98, 68, 49, 75, 50, 40, 89, 72, \
57, 72, 64, 52, 49, 47, 45, 41, 39, 43, \
37, 40, 38, 32, 40, 40, 31, 35, 38, 49, \
48, 50, 153, 156, 152, 163, 152, 127, 153, 165, \
158, 175, 198, 204, 166, 195, 202, 185, 215, 223, \
184, 214, 222, 185, 215, 223, 186, 216, 222, 186, \
217, 222, 187, 218, 223, 187, 218, 223, 188, 219, \
224, 189, 220, 225, 190, 221, 226, 192, 223, 228, \
193, 223, 228, 198, 221, 218, 214, 220, 202, 199, \
190, 158, 153, 140, 107, 124, 101, 75, 93, 62, \
48, 101, 76, 69, 111, 97, 77, 72, 65, 51, \
50, 48, 46, 43, 40, 40, 41, 39, 35, 37, \
39, 38, 34, 36, 40, 42, 41, 44, 128, 133, \
128, 156, 146, 120, 151, 163, 156, 175, 197, 203, \
167, 195, 202, 185, 215, 224, 183, 213, 221, 185, \
215, 222, 185, 216, 221, 185, 216, 221, 186, 217, \
222, 186, 217, 222, 187, 218, 223, 188, 220, 225, \
190, 221, 226, 192, 223, 227, 192, 223, 228, 191, \
223, 228, 200, 221, 216, 212, 216, 193, 176, 163, \
129, 124, 99, 74, 89, 64, 53, 74, 60, 52, \
68, 63, 50, 52, 51, 46, 49, 46, 44, 67, \
60, 51, 76, 60, 52, 51, 41, 38, 36, 36, \
37, 33, 36, 36, 63, 65, 61, 126, 112, 87, \
154, 167, 159, 171, 197, 203, 165, 194, 201, 185, \
215, 223, 183, 214, 221, 184, 215, 222, 184, 215, \
220, 184, 215, 220, 185, 216, 221, 186, 217, 222, \
187, 217, 222, 188, 218, 224, 190, 220, 226, 192, \
222, 227, 192, 222, 227, 188, 224, 232, 191, 224, \
227, 204, 221, 209, 201, 197, 172, 135, 116, 95, \
81, 59, 48, 50, 44, 37, 50, 50, 43, 58, \
57, 57, 93, 100, 97, 144, 144, 133, 126, 104, \
93, 66, 50, 44, 74, 64, 55, 63, 58, 49, \
39, 37, 30, 82, 71, 52, 154, 169, 164, 168, \
198, 202, 163, 193, 200, 184, 216, 221, 184, 214, \
220, 184, 215, 220, 184, 215, 220, 184, 215, 220, \
184, 215, 220, 186, 216, 222, 187, 217, 222, 188, \
217, 223, 189, 218, 224, 192, 221, 226, 192, 223, \
226, 189, 224, 229, 191, 225, 229, 197, 224, 222, \
203, 221, 212, 147, 145, 135, 85, 66, 52, 59, \
58, 53, 80, 75, 68, 126, 117, 114, 167, 193, \
190, 187, 207, 205, 139, 126, 117, 75, 67, 57, \
123, 97, 74, 119, 95, 74, 68, 62, 49, 50, \
50, 41, 120, 137, 138, 167, 197, 200, 163, 193, \
199, 184, 216, 221, 184, 215, 220, 184, 215, 220, \
184, 215, 220, 184, 215, 220, 184, 215, 220, 186, \
216, 222, 187, 217, 222, 188, 217, 223, 189, 218, \
224, 191, 220, 225, 192, 222, 226, 191, 223, 228, \
196, 222, 229, 186, 205, 208, 178, 195, 195, 164, \
168, 165, 81, 69, 58, 54, 58, 54, 123, 121, \
112, 167, 165, 161, 193, 220, 220, 165, 184, 187, \
128, 125, 122, 147, 149, 145, 141, 117, 96, 130, \
107, 87, 125, 122, 114, 59, 56, 47, 62, 72, \
73, 143, 165, 167, 165, 195, 198, 184, 215, 220, \
183, 214, 219, 184, 215, 220, 184, 215, 220, 183, \
214, 219, 184, 215, 220, 186, 216, 221, 187, 216, \
222, 188, 217, 223, 188, 217, 223, 190, 219, 224, \
191, 222, 225, 192, 221, 227, 199, 221, 229, 152, \
162, 168, 87, 92, 100, 112, 111, 116, 77, 62, \
58, 59, 54, 53, 115, 112, 102, 156, 163, 159, \
193, 218, 222, 168, 186, 190, 155, 166, 168, 187, \
202, 204, 150, 133, 116, 129, 109, 94, 163, 164, \
160, 114, 104, 90, 86, 92, 91, 92, 106, 109, \
155, 180, 180, 183, 215, 220, 182, 213, 218, 184, \
215, 220, 183, 214, 219, 183, 214, 219, 184, 215, \
220, 185, 216, 221, 186, 216, 221, 188, 217, 223, \
188, 217, 223, 190, 219, 224, 192, 220, 224, 191, \
220, 227, 197, 221, 228, 163, 176, 181, 96, 101, \
109, 79, 82, 88, 72, 59, 56, 60, 44, 43, \
78, 67, 58, 145, 159, 156, 191, 217, 224, 187, \
208, 213, 185, 207, 211, 183, 206, 212, 155, 140, \
123, 125, 104, 88, 172, 176, 171, 156, 142, 118, \
148, 156, 153, 88, 103, 110, 107, 121, 121, 182, \
213, 218, 182, 212, 217, 183, 214, 219, 183, 214, \
219, 183, 214, 219, 183, 213, 218, 184, 214, 219, \
185, 215, 221, 187, 216, 222, 188, 217, 223, 189, \
218, 224, 192, 218, 223, 190, 219, 225, 191, 219, \
225, 189, 212, 214, 184, 206, 206, 163, 186, 185, \
86, 87, 78, 56, 44, 37, 87, 71, 62, 152, \
167, 165, 187, 214, 224, 185, 210, 214, 181, 209, \
212, 181, 207, 213, 164, 148, 130, 128, 104, 86, \
172, 175, 168, 160, 145, 114, 158, 172, 167, 134, \
154, 164, 82, 87, 89, 183, 215, 220, 182, 213, \
218, 184, 215, 220, 184, 215, 220, 184, 215, 220, \
185, 216, 221, 185, 216, 221, 186, 216, 222, 188, \
217, 223, 188, 218, 224, 190, 219, 225, 193, 219, \
224, 193, 220, 225, 193, 220, 225, 194, 220, 224, \
193, 222, 226, 186, 213, 213, 101, 102, 100, 57, \
45, 40, 75, 63, 55, 153, 167, 166, 187, 215, \
221, 182, 201, 205, 184, 204, 207, 182, 207, 213, \
169, 153, 136, 131, 106, 87, 170, 172, 164, 156, \
141, 113, 154, 172, 167, 164, 188, 198, 129, 145, \
145, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '8374';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1aa5b40e48252d47c10a9960d1d1c56646';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_frog10';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{154, 128, 110, 142, 120, 99, 102, 93, 58, 118, 116, \
71, 115, 119, 70, 95, 107, 56, 123, 129, 81, \
119, 108, 67, 117, 95, 67, 129, 113, 82, 105, \
102, 61, 119, 128, 78, 135, 158, 94, 133, 132, \
74, 140, 127, 87, 120, 130, 88, 137, 127, 92, \
126, 116, 85, 129, 127, 86, 150, 150, 103, 130, \
132, 88, 89, 96, 59, 112, 121, 93, 116, 124, \
101, 118, 126, 101, 133, 143, 111, 102, 115, 80, \
83, 96, 63, 92, 104, 78, 101, 112, 91, 97, \
105, 78, 103, 104, 77, 150, 119, 107, 120, 89, \
82, 138, 121, 82, 130, 123, 71, 94, 93, 49, \
107, 114, 66, 124, 131, 81, 118, 116, 69, 104, \
99, 62, 94, 94, 54, 91, 102, 52, 118, 139, \
81, 134, 162, 96, 130, 138, 80, 137, 130, 90, \
116, 113, 78, 146, 124, 93, 135, 121, 86, 94, \
87, 56, 103, 99, 67, 136, 138, 92, 86, 88, \
54, 83, 82, 67, 99, 98, 84, 115, 115, 94, \
108, 109, 79, 120, 119, 79, 106, 104, 68, 99, \
95, 69, 121, 116, 97, 103, 104, 77, 103, 109, \
75, 103, 82, 61, 125, 101, 88, 145, 131, 92, \
133, 125, 77, 107, 101, 61, 98, 100, 54, 109, \
117, 64, 118, 126, 73, 116, 120, 74, 96, 103, \
56, 106, 121, 65, 118, 140, 77, 124, 146, 80, \
115, 124, 69, 117, 116, 76, 126, 112, 83, 146, \
119, 92, 150, 131, 100, 114, 101, 73, 111, 106, \
75, 117, 120, 76, 83, 80, 49, 81, 69, 58, \
105, 93, 82, 107, 97, 79, 133, 123, 95, 139, \
126, 91, 133, 120, 88, 134, 120, 94, 130, 115, \
94, 119, 110, 86, 109, 111, 79, 103, 100, 61, \
110, 102, 70, 115, 113, 76, 99, 94, 58, 109, \
98, 63, 105, 102, 60, 124, 132, 78, 134, 149, \
90, 136, 140, 91, 109, 111, 61, 116, 124, 66, \
114, 128, 64, 127, 137, 74, 97, 106, 53, 93, \
96, 57, 125, 106, 80, 139, 111, 89, 146, 122, \
103, 138, 122, 90, 146, 140, 98, 119, 121, 84, \
122, 116, 86, 128, 111, 90, 110, 92, 77, 93, \
75, 58, 119, 101, 80, 145, 124, 104, 161, 140, \
119, 157, 137, 113, 147, 127, 102, 137, 118, 98, \
104, 99, 74, 118, 124, 73, 108, 111, 66, 96, \
101, 65, 79, 74, 40, 97, 86, 47, 106, 110, \
65, 119, 137, 81, 115, 134, 73, 114, 113, 66, \
105, 104, 61, 116, 128, 72, 118, 131, 68, 119, \
115, 60, 118, 114, 66, 123, 118, 83, 140, 120, \
96, 148, 123, 101, 141, 120, 101, 123, 113, 77, \
140, 140, 94, 105, 108, 71, 152, 141, 113, 140, \
120, 96, 139, 119, 100, 145, 125, 106, 120, 100, \
79, 105, 89, 69, 116, 103, 82, 135, 122, 97, \
126, 109, 85, 121, 99, 82, 115, 101, 81, 120, \
126, 67, 118, 123, 71, 91, 98, 51, 97, 91, \
46, 109, 99, 55, 83, 96, 49, 90, 113, 59, \
112, 124, 66, 101, 94, 54, 88, 85, 53, 96, \
116, 65, 102, 114, 60, 113, 101, 58, 112, 97, \
57, 125, 109, 80, 114, 94, 71, 133, 110, 86, \
168, 147, 118, 152, 142, 107, 149, 144, 107, 135, \
126, 91, 147, 129, 104, 127, 106, 87, 154, 133, \
112, 154, 133, 112, 136, 118, 93, 117, 111, 78, \
104, 104, 71, 107, 104, 76, 109, 95, 75, 161, \
138, 119, 163, 138, 118, 116, 125, 57, 113, 121, \
60, 113, 120, 64, 112, 108, 63, 103, 92, 56, \
92, 92, 51, 120, 121, 74, 136, 130, 80, 124, \
110, 74, 108, 94, 62, 108, 110, 68, 104, 99, \
58, 133, 124, 82, 112, 111, 70, 86, 75, 47, \
78, 59, 36, 103, 78, 53, 154, 119, 87, 176, \
146, 113, 176, 149, 121, 167, 137, 114, 129, 102, \
81, 131, 109, 88, 133, 111, 90, 129, 107, 87, \
133, 113, 90, 144, 134, 100, 141, 135, 101, 127, \
118, 88, 123, 107, 82, 165, 135, 116, 185, 151, \
134, 120, 132, 73, 110, 118, 67, 117, 121, 77, \
117, 115, 77, 101, 91, 58, 120, 107, 72, 160, \
141, 102, 159, 140, 101, 172, 151, 119, 164, 137, \
96, 136, 119, 81, 101, 82, 51, 105, 100, 57, \
95, 102, 59, 115, 104, 75, 143, 121, 97, 149, \
122, 93, 157, 123, 85, 154, 120, 85, 148, 116, \
88, 135, 105, 82, 122, 96, 74, 124, 100, 77, \
124, 100, 80, 133, 109, 92, 153, 130, 112, 154, \
136, 107, 151, 134, 105, 152, 135, 106, 133, 115, \
86, 141, 109, 89, 174, 136, 121, 130, 145, 95, \
130, 138, 97, 123, 126, 92, 109, 112, 79, 96, \
94, 59, 147, 130, 96, 171, 149, 117, 163, 146, \
120, 192, 167, 136, 168, 130, 75, 148, 119, 78, \
111, 94, 63, 124, 122, 73, 111, 110, 65, 141, \
117, 86, 168, 135, 105, 181, 151, 114, 167, 137, \
98, 176, 144, 108, 132, 101, 69, 136, 111, 82, \
151, 127, 100, 142, 116, 92, 141, 114, 95, 154, \
126, 113, 165, 138, 126, 155, 128, 111, 168, 139, \
120, 163, 136, 114, 139, 119, 92, 142, 118, 95, \
150, 120, 102, 126, 144, 86, 132, 139, 92, 121, \
121, 81, 116, 123, 83, 126, 133, 91, 162, 150, \
114, 151, 138, 110, 116, 109, 91, 157, 128, 94, \
156, 111, 45, 154, 123, 76, 118, 111, 73, 126, \
122, 67, 128, 109, 64, 134, 95, 61, 147, 103, \
68, 148, 112, 70, 141, 105, 70, 164, 122, 91, \
149, 107, 76, 161, 128, 94, 170, 143, 112, 152, \
126, 100, 162, 135, 115, 183, 154, 141, 172, 142, \
134, 166, 133, 126, 183, 146, 137, 177, 142, 129, \
161, 138, 118, 139, 124, 100, 104, 87, 65, 134, \
141, 95, 135, 115, 88, 149, 128, 102, 151, 147, \
114, 176, 175, 145, 171, 161, 138, 124, 124, 99, \
86, 78, 52, 164, 122, 83, 171, 127, 75, 148, \
123, 77, 127, 121, 73, 120, 105, 56, 128, 94, \
57, 129, 89, 55, 121, 81, 45, 120, 81, 44, \
120, 77, 45, 122, 76, 46, 137, 92, 61, 129, \
89, 56, 141, 110, 79, 161, 138, 110, 172, 150, \
126, 187, 158, 142, 159, 125, 115, 142, 113, 106, \
142, 106, 99, 132, 98, 87, 123, 103, 84, 146, \
134, 110, 103, 87, 66, 121, 121, 85, 153, 125, \
109, 150, 127, 108, 127, 119, 93, 161, 154, 132, \
158, 159, 136, 80, 93, 59, 116, 104, 65, 171, \
127, 82, 186, 147, 103, 149, 125, 83, 134, 116, \
68, 141, 112, 70, 126, 85, 52, 119, 79, 46, \
124, 84, 50, 123, 83, 50, 123, 81, 48, 130, \
89, 55, 124, 83, 50, 117, 76, 43, 115, 76, \
45, 146, 115, 85, 163, 137, 108, 160, 129, 105, \
134, 98, 77, 141, 111, 87, 146, 114, 90, 141, \
116, 88, 127, 116, 83, 150, 140, 110, 150, 133, \
112, 121, 124, 84, 142, 133, 104, 128, 125, 97, \
127, 125, 99, 169, 162, 139, 141, 152, 118, 88, \
108, 63, 137, 124, 80, 170, 137, 88, 168, 137, \
93, 170, 141, 103, 157, 122, 85, 145, 104, 68, \
126, 81, 48, 126, 81, 48, 144, 98, 65, 138, \
93, 60, 129, 90, 54, 128, 88, 53, 117, 75, \
40, 113, 69, 35, 124, 76, 44, 125, 78, 47, \
133, 92, 60, 135, 98, 66, 128, 89, 58, 147, \
107, 73, 141, 111, 75, 145, 130, 92, 126, 121, \
82, 127, 118, 85, 126, 112, 86, 114, 125, 79, \
106, 116, 75, 88, 99, 65, 137, 141, 114, 157, \
148, 124, 120, 120, 86, 96, 107, 65, 126, 115, \
77, 175, 153, 115, 189, 168, 133, 197, 169, 139, \
172, 134, 101, 135, 90, 55, 127, 82, 47, 128, \
83, 48, 144, 99, 64, 126, 83, 48, 127, 91, \
53, 130, 92, 55, 123, 80, 45, 129, 83, 49, \
135, 85, 53, 136, 83, 51, 141, 90, 57, 143, \
98, 62, 144, 100, 65, 170, 121, 94, 125, 97, \
70, 116, 107, 81, 96, 89, 68, 93, 84, 57, \
92, 82, 51, 95, 119, 64, 96, 124, 71, 94, \
113, 74, 130, 140, 112, 144, 131, 106, 164, 135, \
110, 129, 117, 89, 80, 71, 50, 97, 83, 67, \
167, 152, 135, 187, 166, 145, 162, 130, 98, 140, \
101, 63, 136, 97, 57, 121, 82, 43, 129, 90, \
51, 130, 92, 53, 131, 98, 57, 118, 82, 42, \
128, 86, 48, 149, 100, 65, 132, 84, 52, 141, \
90, 60, 152, 96, 65, 146, 93, 58, 152, 102, \
66, 166, 116, 88, 143, 121, 93, 119, 114, 92, \
71, 57, 50, 89, 79, 58, 121, 115, 78, 97, \
116, 66, 93, 121, 68, 87, 108, 66, 86, 99, \
65, 134, 121, 93, 188, 145, 127, 172, 143, 127, \
122, 111, 98, 66, 51, 45, 78, 63, 59, 146, \
134, 115, 151, 126, 90, 141, 104, 65, 142, 105, \
66, 137, 100, 60, 134, 97, 57, 147, 111, 72, \
155, 124, 83, 137, 101, 62, 130, 88, 49, 146, \
101, 60, 135, 98, 64, 162, 124, 102, 189, 142, \
120, 150, 104, 72, 161, 116, 77, 151, 104, 65, \
145, 124, 87, 128, 120, 93, 117, 99, 83, 140, \
128, 101, 150, 142, 104, 108, 104, 67, 105, 114, \
70, 104, 118, 70, 122, 129, 85, 149, 136, 104, \
176, 142, 120, 191, 156, 140, 180, 157, 138, 155, \
130, 116, 113, 91, 89, 88, 83, 60, 136, 115, \
74, 155, 112, 77, 149, 109, 72, 165, 127, 86, \
169, 132, 89, 161, 126, 84, 154, 124, 84, 136, \
99, 64, 136, 96, 59, 159, 126, 77, 152, 130, \
90, 110, 87, 78, 133, 105, 96, 181, 153, 120, \
174, 142, 100, 153, 109, 68, 141, 110, 76, 165, \
145, 116, 179, 159, 129, 158, 144, 107, 154, 137, \
106, 115, 110, 70, 118, 116, 72, 140, 133, 88, \
170, 158, 118, 169, 147, 117, 167, 129, 107, 184, \
142, 124, 184, 151, 129, 183, 157, 135, 164, 142, \
135, 95, 94, 69, 145, 133, 94, 143, 108, 73, \
143, 108, 68, 158, 125, 82, 144, 112, 66, 161, \
131, 84, 169, 139, 99, 137, 102, 69, 140, 103, \
71, 164, 134, 91, 165, 141, 103, 120, 93, 80, \
124, 94, 82, 194, 166, 131, 177, 145, 106, 157, \
118, 86, 143, 110, 82, 179, 152, 125, 191, 164, \
134, 171, 153, 116, 162, 142, 112, 95, 94, 62, \
111, 104, 74, 140, 118, 93, 160, 133, 110, 170, \
141, 118, 174, 134, 115, 154, 109, 92, 171, 133, \
111, 173, 150, 126, 130, 115, 101, 94, 101, 70, \
120, 122, 84, 136, 118, 88, 157, 134, 105, 161, \
134, 108, 166, 138, 105, 170, 141, 99, 172, 142, \
103, 173, 143, 113, 171, 142, 115, 175, 149, 117, \
173, 147, 115, 182, 152, 138, 179, 149, 134, 187, \
160, 129, 201, 173, 147, 167, 139, 121, 143, 115, \
93, 182, 152, 127, 181, 151, 121, 164, 144, 101, \
174, 153, 111, 55, 60, 35, 76, 76, 54, 99, \
87, 72, 119, 98, 84, 133, 109, 93, 160, 129, \
114, 174, 138, 122, 172, 138, 119, 133, 114, 94, \
98, 87, 72, 94, 108, 70, 91, 110, 63, 101, \
104, 73, 86, 80, 61, 124, 108, 94, 175, 148, \
126, 161, 128, 92, 168, 136, 98, 188, 162, 133, \
182, 161, 140, 160, 139, 118, 166, 145, 123, 184, \
161, 152, 168, 148, 138, 149, 133, 114, 144, 130, \
122, 89, 80, 74, 106, 88, 73, 164, 137, 112, \
174, 145, 114, 161, 141, 94, 160, 138, 90, 85, \
100, 58, 75, 93, 55, 66, 79, 45, 68, 66, \
45, 77, 62, 54, 91, 73, 62, 104, 81, 68, \
151, 126, 112, 104, 89, 76, 78, 69, 56, 75, \
94, 52, 93, 124, 67, 107, 129, 83, 58, 73, \
37, 77, 71, 47, 166, 139, 106, 172, 134, 88, \
179, 145, 106, 198, 175, 148, 202, 186, 169, 191, \
173, 160, 125, 111, 99, 83, 74, 73, 66, 60, \
59, 47, 44, 40, 29, 30, 39, 10, 16, 18, \
56, 49, 35, 137, 117, 89, 165, 141, 108, 155, \
132, 99, 149, 121, 95, 108, 128, 69, 113, 139, \
77, 97, 115, 67, 84, 82, 56, 106, 83, 73, \
99, 74, 63, 69, 50, 37, 111, 87, 75, 91, \
78, 67, 69, 70, 51, 76, 97, 54, 82, 114, \
55, 121, 155, 88, 93, 121, 60, 106, 106, 65, \
157, 128, 89, 167, 125, 77, 166, 131, 91, 193, \
168, 143, 193, 176, 164, 179, 167, 161, 110, 111, \
97, 47, 57, 45, 21, 31, 24, 5, 15, 15, \
9, 20, 27, 14, 28, 17, 83, 94, 57, 138, \
137, 91, 145, 130, 96, 166, 136, 116, 180, 146, \
131, 112, 129, 72, 121, 140, 79, 130, 139, 95, \
149, 140, 114, 167, 136, 119, 174, 140, 125, 161, \
140, 121, 159, 130, 116, 142, 126, 112, 85, 83, \
59, 116, 125, 85, 108, 126, 72, 104, 138, 66, \
108, 141, 73, 103, 107, 65, 126, 99, 67, 175, \
132, 95, 151, 115, 75, 144, 117, 88, 114, 99, \
82, 52, 48, 36, 55, 68, 43, 63, 86, 54, \
48, 67, 42, 33, 49, 31, 42, 55, 40, 63, \
79, 49, 105, 123, 68, 126, 134, 75, 139, 127, \
90, 154, 124, 102, 156, 122, 104, 100, 111, 60, \
114, 124, 70, 115, 119, 78, 143, 136, 108, 163, \
138, 118, 181, 152, 132, 170, 153, 127, 159, 134, \
112, 139, 126, 105, 101, 97, 68, 141, 143, 103, \
101, 114, 63, 66, 100, 35, 90, 128, 65, 88, \
99, 60, 109, 88, 64, 161, 123, 96, 173, 138, \
100, 155, 129, 96, 119, 108, 80, 72, 74, 44, \
82, 100, 60, 80, 106, 59, 100, 121, 74, 111, \
127, 78, 91, 104, 57, 102, 114, 71, 97, 110, \
52, 129, 134, 72, 138, 125, 83, 130, 106, 74, \
134, 109, 86, 100, 108, 61, 123, 127, 82, 114, \
116, 78, 118, 114, 84, 154, 136, 111, 166, 148, \
121, 144, 143, 106, 124, 118, 81, 109, 118, 80, \
106, 118, 78, 121, 133, 89, 90, 115, 64, 69, \
109, 47, 75, 114, 55, 73, 90, 52, 78, 72, \
50, 130, 109, 88, 172, 145, 114, 178, 156, 127, \
135, 125, 94, 120, 121, 81, 119, 135, 85, 97, \
121, 64, 106, 127, 62, 121, 140, 66, 119, 133, \
63, 96, 102, 51, 107, 115, 57, 137, 139, 80, \
122, 109, 67, 144, 129, 91, 144, 130, 101, 121, \
134, 88, 135, 139, 100, 111, 118, 81, 132, 134, \
101, 155, 141, 114, 145, 140, 105, 117, 139, 88, \
119, 141, 87, 105, 127, 76, 95, 110, 63, 100, \
113, 67, 99, 125, 76, 106, 145, 86, 85, 121, \
61, 86, 110, 64, 60, 72, 44, 74, 74, 57, \
156, 141, 125, 179, 163, 148, 163, 151, 130, 144, \
135, 102, 149, 153, 105, 117, 131, 72, 119, 138, \
69, 116, 140, 59, 116, 137, 58, 131, 131, 78, \
138, 138, 84, 116, 112, 62, 145, 129, 92, 136, \
127, 89, 117, 114, 80, 105, 115, 72, 107, 110, \
73, 110, 116, 81, 121, 125, 91, 166, 159, 127, \
127, 132, 93, 89, 124, 68, 104, 143, 82, 96, \
121, 67, 86, 90, 46, 91, 87, 48, 80, 95, \
52, 84, 111, 56, 96, 123, 61, 81, 106, 52, \
88, 107, 66, 57, 72, 44, 79, 78, 69, 146, \
134, 130, 155, 141, 127, 177, 161, 136, 185, 179, \
137, 143, 152, 91, 150, 169, 98, 116, 143, 65, \
117, 138, 65, 154, 149, 97, 142, 138, 87, 114, \
109, 61, 146, 135, 94, 133, 127, 90, 101, 98, \
65, 94, 93, 54, 95, 98, 59, 95, 90, 61, \
104, 102, 71, 131, 140, 99, 113, 130, 91, 69, \
102, 55, 71, 114, 58, 87, 116, 65, 87, 84, \
50, 95, 76, 48, 102, 107, 64, 86, 98, 50, \
115, 126, 76, 98, 109, 60, 126, 128, 83, 93, \
106, 60, 46, 55, 36, 80, 67, 62, 104, 93, \
72, 128, 116, 90, 131, 126, 91, 124, 139, 75, \
121, 142, 66, 108, 126, 55, 124, 131, 75, 155, \
147, 95, 143, 135, 81, 122, 123, 66, 120, 129, \
70, 135, 130, 88, 100, 86, 59, 111, 121, 72, \
83, 106, 54, 113, 114, 77, 138, 134, 98, 106, \
119, 75, 102, 125, 83, 77, 113, 65, 54, 95, \
39, 104, 127, 71, 125, 127, 84, 100, 89, 51, \
114, 100, 58, 130, 122, 86, 127, 133, 102, 129, \
132, 100, 131, 118, 89, 104, 104, 68, 80, 88, \
63, 57, 46, 36, 113, 108, 79, 112, 107, 74, \
92, 97, 62, 118, 134, 79, 122, 129, 66, 133, \
139, 83, 114, 125, 77, 138, 140, 86, 151, 149, \
94, 129, 131, 76, 125, 138, 78, 133, 133, 85, \
95, 83, 52, 99, 100, 56, 95, 114, 66, 133, \
124, 89, 151, 130, 97, 120, 117, 76, 97, 108, \
68, 91, 114, 69, 93, 117, 64, 114, 133, 73, \
123, 144, 84, 104, 119, 68, 129, 116, 77, 125, \
110, 87, 83, 90, 74, 67, 67, 50, 85, 66, \
53, 96, 88, 68, 93, 96, 70, 82, 75, 57, \
114, 120, 81, 117, 121, 78, 93, 117, 76, 106, \
136, 88, 107, 114, 68, 123, 134, 91, 104, 131, \
85, 113, 125, 72, 134, 132, 83, 114, 111, 66, \
106, 115, 69, 126, 134, 82, 97, 91, 54, 119, \
99, 73, 150, 141, 117, 163, 137, 118, 139, 104, \
78, 96, 76, 40, 83, 82, 47, 89, 97, 56, \
116, 121, 73, 106, 115, 61, 84, 108, 51, 109, \
135, 85, 121, 122, 91, 73, 66, 50, 34, 43, \
27, 47, 50, 34, 82, 68, 53, 88, 85, 63, \
94, 96, 66, 124, 122, 95, 125, 141, 92, 114, \
129, 76, 84, 116, 72, 74, 113, 69, 96, 113, \
75, 102, 120, 83, 110, 136, 95, 105, 113, 65, \
120, 109, 68, 111, 100, 65, 100, 107, 71, 95, \
111, 61, 97, 97, 58, 132, 109, 101, 161, 134, \
134, 123, 100, 96, 123, 101, 78, 123, 111, 70, \
97, 106, 64, 94, 112, 65, 99, 107, 58, 104, \
88, 51, 94, 85, 50, 88, 91, 59, 53, 54, \
42, 43, 42, 30, 81, 92, 63, 90, 101, 69, \
84, 84, 54, 93, 103, 64, 100, 102, 65, 119, \
120, 87, 99, 124, 67, 99, 124, 62, 101, 118, \
76, 79, 99, 63, 84, 96, 63, 106, 108, 78, \
115, 112, 80, 135, 128, 87, 152, 130, 97, 137, \
117, 91, 78, 83, 54, 65, 87, 43, 110, 113, \
77, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '8684';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a46ef61b34582147fa58ae6a0a8b1c2ad';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_horse2';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{97, 99, 73, 93, 96, 68, 85, 88, 59, 70, 74, \
47, 61, 65, 39, 55, 59, 35, 55, 59, 34, \
63, 67, 39, 73, 79, 46, 89, 95, 60, 101, \
106, 72, 105, 109, 76, 97, 101, 68, 91, 94, \
62, 87, 90, 59, 86, 89, 60, 82, 85, 58, \
79, 84, 54, 78, 83, 53, 79, 82, 58, 77, \
80, 60, 87, 91, 70, 99, 101, 81, 103, 103, \
84, 102, 100, 80, 98, 96, 75, 96, 95, 72, \
98, 97, 73, 96, 99, 72, 93, 97, 68, 93, \
97, 66, 91, 94, 64, 98, 100, 77, 93, 95, \
72, 81, 84, 59, 70, 74, 47, 64, 68, 42, \
63, 67, 43, 62, 66, 42, 66, 70, 42, 71, \
76, 44, 85, 91, 55, 97, 101, 67, 102, 106, \
72, 100, 104, 71, 96, 100, 67, 89, 93, 61, \
85, 88, 58, 80, 82, 54, 78, 82, 53, 78, \
82, 54, 79, 81, 58, 72, 76, 54, 76, 85, \
62, 88, 94, 71, 91, 93, 70, 93, 92, 70, \
93, 92, 70, 95, 93, 69, 95, 94, 69, 94, \
94, 71, 89, 90, 66, 85, 86, 60, 83, 84, \
58, 104, 107, 81, 98, 100, 77, 84, 87, 63, \
72, 76, 49, 65, 69, 44, 64, 68, 44, 64, \
68, 44, 66, 70, 42, 71, 77, 44, 82, 88, \
52, 90, 95, 60, 95, 99, 64, 96, 100, 65, \
94, 98, 63, 93, 97, 63, 92, 95, 64, 79, \
82, 52, 73, 75, 48, 74, 76, 51, 75, 76, \
52, 71, 73, 49, 69, 75, 48, 78, 83, 57, \
81, 84, 60, 86, 88, 65, 89, 91, 67, 89, \
92, 65, 92, 95, 66, 92, 95, 70, 88, 91, \
65, 79, 83, 54, 77, 81, 53, 94, 98, 68, \
85, 87, 61, 74, 77, 51, 67, 70, 44, 62, \
66, 41, 58, 62, 38, 61, 65, 41, 65, 70, \
42, 72, 77, 45, 82, 88, 52, 89, 94, 57, \
91, 95, 59, 88, 92, 56, 84, 88, 52, 84, \
88, 53, 85, 89, 56, 78, 81, 50, 73, 74, \
47, 80, 80, 56, 82, 82, 57, 72, 71, 45, \
63, 62, 30, 65, 66, 37, 63, 67, 44, 74, \
81, 57, 87, 95, 67, 92, 101, 70, 90, 99, \
68, 84, 92, 62, 82, 90, 59, 79, 88, 55, \
80, 87, 54, 87, 90, 61, 80, 83, 56, 68, \
71, 45, 60, 63, 39, 58, 61, 38, 62, 63, \
41, 69, 70, 47, 68, 70, 43, 70, 73, 41, \
78, 83, 48, 87, 92, 55, 89, 94, 55, 84, \
88, 50, 76, 79, 45, 74, 78, 45, 75, 80, \
47, 74, 78, 45, 78, 76, 46, 79, 77, 50, \
82, 79, 50, 86, 73, 40, 96, 72, 33, 85, \
72, 33, 55, 59, 32, 65, 74, 47, 83, 92, \
60, 89, 99, 66, 87, 95, 62, 79, 88, 56, \
79, 88, 55, 83, 94, 59, 85, 94, 59, 80, \
82, 57, 74, 76, 51, 62, 65, 40, 54, 58, \
34, 54, 56, 34, 64, 63, 41, 68, 67, 45, \
66, 66, 40, 66, 68, 37, 72, 76, 42, 78, \
82, 47, 79, 84, 45, 77, 81, 44, 74, 76, \
44, 74, 76, 45, 72, 79, 45, 72, 76, 41, \
86, 81, 48, 83, 79, 51, 80, 71, 44, 91, \
67, 32, 154, 114, 68, 124, 99, 55, 57, 61, \
31, 69, 78, 46, 82, 89, 55, 85, 93, 59, \
79, 86, 52, 72, 77, 47, 74, 80, 49, 79, \
88, 54, 83, 91, 57, 69, 71, 47, 67, 69, \
45, 64, 67, 42, 58, 62, 38, 52, 54, 31, \
54, 54, 31, 54, 53, 30, 58, 57, 32, 62, \
63, 34, 68, 72, 41, 71, 74, 43, 73, 77, \
42, 75, 78, 45, 73, 75, 45, 70, 74, 42, \
73, 79, 45, 75, 77, 43, 77, 71, 42, 60, \
53, 32, 40, 27, 11, 55, 31, 5, 178, 145, \
100, 193, 172, 138, 76, 77, 49, 70, 78, 44, \
80, 85, 54, 80, 86, 54, 71, 77, 45, 66, \
70, 40, 74, 78, 48, 79, 86, 53, 80, 87, \
53, 64, 66, 44, 64, 66, 44, 60, 63, 39, \
53, 57, 32, 52, 54, 29, 54, 55, 30, 52, \
50, 27, 52, 51, 27, 53, 54, 27, 57, 60, \
31, 62, 65, 36, 69, 73, 39, 73, 77, 44, \
72, 74, 45, 69, 73, 41, 70, 75, 41, 72, \
71, 38, 56, 48, 25, 31, 21, 8, 31, 15, \
3, 44, 22, 0, 111, 83, 45, 212, 191, 159, \
117, 116, 88, 62, 68, 35, 68, 72, 43, 66, \
71, 42, 65, 69, 40, 64, 67, 38, 68, 72, \
41, 72, 78, 44, 73, 79, 46, 59, 61, 39, \
56, 58, 36, 50, 53, 30, 47, 51, 25, 57, \
60, 33, 66, 67, 41, 64, 62, 38, 50, 49, \
26, 45, 46, 21, 50, 52, 26, 61, 65, 33, \
70, 75, 37, 72, 77, 41, 72, 75, 43, 69, \
73, 41, 71, 74, 41, 71, 66, 35, 41, 31, \
15, 24, 10, 3, 42, 23, 7, 42, 22, 1, \
63, 40, 9, 163, 139, 102, 143, 139, 111, 62, \
65, 40, 57, 60, 34, 54, 57, 31, 57, 59, \
33, 61, 62, 34, 64, 66, 37, 66, 71, 38, \
69, 75, 41, 51, 53, 32, 47, 50, 29, 45, \
48, 24, 50, 54, 25, 64, 66, 38, 73, 73, \
47, 68, 68, 41, 51, 51, 26, 48, 49, 27, \
51, 54, 31, 62, 64, 30, 72, 75, 34, 75, \
77, 38, 68, 70, 38, 60, 64, 34, 72, 72, \
39, 58, 50, 25, 21, 10, 3, 28, 12, 4, \
46, 27, 6, 43, 21, 1, 58, 36, 7, 97, \
74, 36, 154, 145, 119, 82, 82, 60, 53, 55, \
29, 53, 55, 30, 59, 60, 35, 63, 64, 38, \
66, 68, 39, 66, 70, 39, 67, 72, 39, 48, \
51, 32, 47, 50, 29, 48, 51, 26, 56, 59, \
31, 71, 72, 47, 78, 79, 55, 74, 72, 48, \
59, 56, 33, 52, 55, 28, 54, 58, 26, 65, \
65, 30, 70, 71, 32, 70, 74, 38, 65, 68, \
42, 64, 66, 39, 63, 59, 29, 35, 22, 10, \
15, 1, 0, 36, 17, 4, 47, 29, 3, 45, \
21, 0, 57, 33, 4, 50, 31, 3, 112, 100, \
77, 123, 119, 94, 58, 59, 29, 55, 55, 28, \
56, 56, 30, 59, 59, 35, 61, 62, 37, 64, \
66, 38, 66, 67, 38, 42, 45, 28, 45, 49, \
30, 48, 51, 32, 52, 53, 35, 60, 62, 43, \
65, 68, 49, 66, 65, 46, 59, 59, 34, 90, \
80, 40, 139, 108, 56, 147, 115, 66, 124, 103, \
57, 91, 81, 41, 76, 71, 37, 69, 61, 33, \
36, 24, 10, 18, 3, 0, 23, 5, 1, 43, \
21, 4, 46, 29, 2, 53, 31, 5, 65, 52, \
19, 51, 41, 13, 65, 56, 33, 120, 117, 90, \
63, 64, 33, 53, 53, 26, 48, 48, 22, 50, \
50, 25, 55, 55, 30, 61, 61, 34, 65, 65, \
37, 34, 37, 20, 36, 39, 22, 41, 43, 25, \
43, 44, 24, 44, 46, 23, 50, 52, 25, 59, \
60, 27, 74, 74, 37, 135, 111, 67, 218, 151, \
95, 244, 167, 92, 222, 162, 93, 176, 134, 78, \
132, 108, 61, 68, 50, 24, 24, 6, 0, 24, \
6, 1, 31, 10, 1, 44, 21, 3, 46, 28, \
0, 66, 46, 14, 67, 66, 32, 59, 59, 29, \
65, 63, 37, 90, 89, 62, 54, 55, 25, 52, \
52, 25, 50, 50, 24, 48, 47, 23, 50, 49, \
25, 56, 56, 28, 61, 60, 33, 37, 41, 20, \
32, 35, 17, 33, 36, 15, 37, 40, 14, 53, \
52, 20, 71, 65, 28, 103, 83, 45, 83, 61, \
28, 86, 63, 25, 150, 106, 51, 207, 140, 67, \
188, 134, 74, 125, 92, 48, 84, 63, 31, 44, \
24, 6, 31, 11, 1, 33, 13, 3, 35, 14, \
1, 42, 20, 2, 49, 29, 0, 93, 69, 28, \
71, 73, 39, 64, 68, 38, 60, 63, 36, 52, \
54, 25, 44, 45, 14, 44, 44, 16, 43, 42, \
17, 42, 40, 17, 43, 40, 16, 47, 45, 18, \
51, 50, 23, 43, 47, 21, 40, 43, 22, 40, \
44, 23, 48, 50, 27, 55, 48, 21, 69, 52, \
20, 69, 50, 18, 49, 27, 3, 75, 49, 17, \
112, 81, 26, 161, 117, 54, 127, 91, 46, 52, \
32, 5, 31, 17, 0, 33, 15, 2, 35, 16, \
1, 38, 18, 3, 37, 18, 3, 40, 19, 1, \
65, 41, 4, 124, 93, 42, 68, 69, 36, 62, \
67, 38, 55, 60, 31, 46, 49, 20, 43, 43, \
13, 42, 41, 14, 44, 43, 17, 47, 43, 19, \
50, 45, 21, 54, 50, 23, 59, 57, 28, 43, \
47, 24, 39, 43, 23, 45, 48, 27, 41, 38, \
20, 38, 28, 12, 65, 48, 20, 49, 35, 4, \
45, 29, 1, 87, 63, 25, 118, 88, 38, 110, \
81, 32, 79, 53, 22, 37, 16, 0, 33, 14, \
2, 34, 16, 1, 37, 18, 0, 38, 18, 3, \
33, 16, 4, 53, 29, 7, 109, 75, 26, 147, \
112, 55, 65, 64, 32, 61, 66, 39, 60, 60, \
30, 50, 50, 22, 48, 46, 19, 53, 52, 22, \
59, 57, 27, 62, 59, 29, 67, 64, 34, 72, \
69, 38, 74, 72, 40, 52, 53, 35, 47, 49, \
27, 40, 39, 21, 16, 8, 3, 26, 16, 4, \
44, 33, 10, 49, 34, 6, 50, 30, 1, 61, \
39, 6, 74, 52, 14, 57, 36, 4, 46, 25, \
3, 35, 16, 1, 34, 15, 1, 37, 19, 1, \
40, 22, 1, 39, 20, 3, 38, 19, 1, 96, \
66, 27, 159, 115, 53, 174, 133, 72, 68, 62, \
33, 61, 64, 44, 65, 62, 40, 55, 54, 34, \
53, 51, 27, 60, 59, 32, 66, 65, 37, 69, \
68, 38, 73, 72, 42, 76, 76, 45, 74, 74, \
43, 83, 81, 57, 69, 67, 46, 30, 24, 13, \
24, 15, 9, 61, 58, 29, 67, 66, 34, 65, \
58, 23, 50, 34, 1, 49, 28, 3, 46, 27, \
2, 49, 30, 4, 44, 24, 1, 40, 21, 1, \
39, 20, 1, 42, 25, 2, 44, 26, 1, 43, \
25, 3, 66, 44, 11, 136, 99, 40, 181, 130, \
55, 178, 131, 66, 87, 75, 45, 58, 61, 41, \
51, 52, 34, 42, 44, 29, 39, 40, 22, 41, \
42, 25, 46, 48, 29, 51, 53, 32, 54, 56, \
35, 56, 58, 37, 55, 56, 36, 87, 86, 48, \
51, 48, 31, 12, 7, 0, 73, 71, 39, 144, \
149, 93, 148, 157, 101, 127, 130, 78, 57, 46, \
7, 46, 26, 2, 43, 26, 5, 50, 34, 8, \
48, 32, 3, 44, 26, 0, 44, 25, 0, 47, \
30, 2, 49, 32, 2, 46, 29, 2, 66, 45, \
8, 152, 115, 48, 195, 142, 60, 165, 118, 50, \
115, 108, 63, 78, 89, 52, 68, 75, 42, 55, \
62, 37, 52, 59, 35, 52, 59, 36, 52, 58, \
36, 48, 55, 31, 46, 52, 28, 46, 52, 28, \
47, 54, 30, 76, 79, 33, 30, 31, 6, 58, \
61, 32, 139, 147, 87, 166, 176, 107, 164, 176, \
106, 157, 170, 100, 93, 91, 40, 47, 29, 1, \
44, 26, 3, 47, 33, 2, 51, 38, 1, 48, \
31, 0, 47, 28, 1, 51, 34, 1, 52, 36, \
1, 47, 31, 1, 50, 32, 1, 143, 108, 47, \
209, 159, 78, 184, 143, 73, 147, 151, 84, 123, \
145, 83, 123, 138, 79, 116, 131, 77, 113, 128, \
75, 113, 127, 77, 112, 126, 77, 107, 121, 72, \
104, 118, 68, 104, 118, 68, 105, 120, 70, 112, \
127, 70, 89, 104, 49, 123, 138, 79, 143, 157, \
90, 143, 157, 90, 144, 158, 88, 141, 158, 88, \
125, 135, 74, 66, 59, 18, 46, 29, 2, 66, \
58, 17, 56, 41, 5, 51, 35, 2, 49, 31, \
0, 52, 34, 0, 52, 36, 0, 49, 32, 1, \
49, 30, 0, 113, 85, 32, 162, 117, 52, 161, \
124, 56, 150, 151, 78, 115, 134, 72, 114, 133, \
73, 118, 134, 73, 116, 134, 72, 112, 131, 69, \
112, 131, 69, 116, 134, 73, 117, 136, 73, 116, \
135, 70, 115, 134, 69, 131, 147, 90, 129, 146, \
86, 128, 144, 85, 126, 143, 85, 128, 145, 86, \
128, 146, 84, 126, 146, 81, 129, 149, 82, 96, \
101, 50, 52, 38, 8, 98, 105, 51, 59, 51, \
17, 56, 36, 7, 67, 60, 14, 55, 50, 5, \
51, 43, 2, 52, 35, 3, 81, 55, 17, 81, \
65, 11, 87, 65, 15, 127, 95, 36, 151, 130, \
68, 125, 137, 79, 112, 138, 78, 115, 136, 75, \
112, 134, 74, 111, 133, 71, 110, 132, 68, 110, \
132, 70, 107, 130, 67, 102, 125, 60, 103, 125, \
60, 124, 137, 85, 121, 133, 80, 118, 133, 78, \
115, 135, 79, 116, 136, 79, 118, 139, 80, 120, \
142, 77, 122, 146, 74, 107, 118, 60, 56, 49, \
13, 99, 124, 54, 74, 84, 41, 79, 53, 22, \
117, 129, 62, 93, 118, 53, 85, 96, 42, 53, \
43, 7, 128, 97, 46, 126, 120, 54, 79, 93, \
37, 89, 79, 25, 108, 81, 29, 132, 135, 65, \
120, 145, 67, 111, 143, 68, 110, 141, 68, 112, \
143, 67, 109, 141, 64, 102, 133, 58, 95, 125, \
53, 91, 121, 51, 89, 118, 51, 121, 147, 82, \
117, 144, 77, 115, 141, 73, 114, 140, 72, 117, \
144, 75, 122, 149, 77, 127, 154, 82, 132, 162, \
83, 116, 134, 68, 56, 55, 15, 99, 131, 52, \
92, 116, 55, 115, 91, 39, 127, 143, 59, 90, \
134, 54, 103, 131, 63, 69, 74, 28, 107, 80, \
29, 152, 145, 73, 87, 119, 53, 82, 104, 43, \
72, 78, 20, 119, 104, 37, 144, 149, 71, 106, \
145, 63, 101, 138, 58, 100, 137, 54, 102, 140, \
55, 104, 141, 59, 103, 139, 61, 99, 135, 60, \
93, 129, 54, 120, 156, 81, 119, 155, 79, 120, \
154, 78, 123, 155, 79, 128, 160, 82, 134, 166, \
86, 138, 169, 91, 137, 171, 86, 117, 143, 68, \
46, 50, 12, 77, 97, 36, 88, 117, 47, 122, \
107, 39, 140, 138, 57, 78, 121, 39, 82, 119, \
41, 71, 96, 33, 79, 68, 17, 147, 122, 54, \
87, 108, 33, 76, 114, 45, 85, 119, 49, 102, \
98, 35, 127, 121, 56, 94, 130, 52, 82, 120, \
41, 82, 119, 39, 85, 123, 40, 86, 123, 45, \
84, 121, 45, 84, 121, 44, 85, 123, 43, 93, \
126, 55, 95, 128, 55, 100, 133, 60, 105, 138, \
64, 110, 143, 69, 111, 145, 70, 113, 145, 72, \
112, 147, 66, 109, 140, 65, 74, 88, 41, 53, \
61, 19, 85, 109, 48, 107, 106, 38, 147, 132, \
59, 100, 133, 51, 92, 132, 52, 87, 121, 47, \
81, 91, 33, 138, 112, 47, 113, 117, 41, 72, \
109, 33, 80, 115, 41, 81, 101, 35, 96, 97, \
35, 97, 120, 45, 85, 121, 42, 86, 122, 43, \
85, 119, 42, 81, 115, 41, 75, 109, 34, 72, \
107, 29, 71, 107, 27, 94, 125, 52, 93, 124, \
50, 99, 130, 58, 103, 135, 63, 102, 135, 65, \
96, 128, 60, 91, 122, 57, 91, 123, 57, 94, \
128, 60, 96, 128, 63, 79, 96, 44, 81, 100, \
49, 94, 115, 52, 124, 115, 44, 126, 144, 61, \
110, 147, 68, 111, 146, 69, 103, 133, 60, 107, \
105, 40, 116, 117, 47, 100, 132, 51, 103, 133, \
55, 104, 131, 56, 113, 118, 46, 138, 145, 66, \
119, 150, 64, 112, 146, 64, 111, 138, 63, 105, \
135, 59, 102, 134, 56, 101, 132, 52, 94, 128, \
46, 109, 140, 61, 108, 138, 59, 112, 142, 65, \
115, 145, 68, 110, 140, 65, 104, 134, 60, 101, \
131, 59, 100, 130, 59, 97, 128, 58, 92, 127, \
57, 91, 120, 57, 82, 103, 52, 75, 102, 48, \
103, 101, 41, 136, 125, 54, 115, 137, 59, 104, \
138, 64, 109, 129, 62, 86, 93, 27, 118, 130, \
54, 129, 158, 71, 127, 155, 71, 118, 144, 65, \
114, 120, 47, 135, 138, 62, 123, 147, 64, 113, \
146, 64, 111, 140, 62, 107, 137, 59, 107, 140, \
59, 110, 142, 59, 112, 145, 60, 121, 151, 68, \
123, 153, 68, 127, 155, 74, 130, 155, 76, 128, \
152, 73, 122, 147, 68, 121, 145, 67, 119, 144, \
67, 116, 142, 69, 112, 141, 69, 109, 137, 69, \
108, 122, 68, 82, 99, 52, 100, 107, 56, 129, \
113, 50, 131, 135, 62, 112, 126, 62, 91, 93, \
36, 90, 101, 34, 120, 142, 61, 120, 144, 56, \
120, 145, 58, 117, 141, 59, 117, 126, 54, 138, \
139, 69, 128, 145, 68, 110, 141, 59, 107, 138, \
56, 109, 139, 58, 115, 145, 62, 119, 150, 65, \
118, 149, 62, 128, 157, 73, 125, 154, 68, 125, \
150, 71, 129, 147, 74, 130, 149, 74, 131, 150, \
74, 130, 149, 73, 130, 150, 75, 131, 152, 78, \
132, 155, 80, 137, 155, 84, 134, 145, 83, 94, \
102, 49, 102, 115, 58, 119, 120, 57, 125, 118, \
57, 105, 102, 45, 89, 90, 33, 119, 133, 66, \
132, 153, 76, 130, 151, 69, 129, 151, 69, 126, \
147, 67, 133, 143, 74, 160, 163, 97, 147, 160, \
87, 121, 149, 67, 126, 154, 69, 130, 155, 72, \
133, 158, 74, 135, 161, 75, 136, 163, 74, 135, \
162, 82, 134, 161, 80, 134, 156, 83, 138, 152, \
87, 144, 157, 90, 148, 162, 93, 149, 164, 93, \
146, 161, 90, 143, 161, 86, 142, 159, 84, 143, \
158, 86, 138, 159, 86, 124, 138, 71, 122, 136, \
69, 122, 135, 72, 110, 104, 53, 116, 118, 60, \
121, 136, 72, 142, 154, 90, 145, 160, 91, 146, \
162, 91, 146, 164, 91, 144, 163, 87, 141, 153, \
85, 147, 153, 88, 147, 161, 88, 134, 159, 78, \
137, 160, 76, 143, 163, 80, 145, 164, 82, 145, \
164, 79, 141, 163, 75, 118, 138, 77, 119, 139, \
77, 120, 137, 79, 124, 137, 82, 127, 140, 82, \
131, 145, 85, 140, 154, 90, 143, 157, 88, 143, \
157, 86, 143, 156, 89, 140, 154, 90, 136, 153, \
82, 136, 153, 85, 131, 150, 80, 123, 141, 75, \
120, 131, 69, 135, 148, 82, 140, 159, 88, 146, \
162, 91, 152, 165, 96, 153, 166, 99, 152, 168, \
95, 152, 172, 94, 152, 170, 93, 153, 168, 91, \
150, 168, 90, 142, 163, 85, 137, 156, 80, 138, \
156, 78, 142, 161, 80, 144, 163, 80, 141, 161, \
77, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '8994';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1ab2287c62cdcadcb8f15e82b05242380d';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_dog10';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{179, 136, 61, 173, 130, 55, 181, 139, 64, 187, 145, \
67, 182, 137, 58, 188, 141, 62, 151, 121, 71, \
154, 135, 101, 149, 129, 92, 119, 99, 63, 120, \
90, 54, 138, 105, 65, 149, 114, 70, 132, 105, \
66, 140, 115, 71, 173, 144, 96, 176, 152, 102, \
152, 119, 64, 168, 136, 81, 181, 157, 107, 182, \
143, 84, 184, 148, 94, 215, 199, 158, 246, 231, \
187, 245, 239, 198, 246, 237, 197, 243, 236, 198, \
242, 225, 187, 238, 181, 135, 237, 204, 161, 236, \
230, 194, 231, 225, 188, 180, 137, 60, 176, 132, \
55, 180, 137, 62, 185, 142, 64, 182, 137, 59, \
192, 143, 60, 130, 98, 48, 140, 110, 72, 135, \
106, 68, 103, 79, 49, 147, 98, 64, 146, 99, \
80, 140, 88, 63, 79, 56, 38, 97, 78, 48, \
163, 135, 86, 139, 116, 69, 75, 53, 20, 111, \
95, 61, 152, 139, 113, 137, 123, 92, 185, 172, \
142, 222, 205, 166, 247, 233, 190, 248, 240, 199, \
249, 240, 201, 248, 239, 200, 245, 237, 199, 242, \
231, 180, 242, 227, 166, 241, 229, 183, 239, 224, \
191, 179, 136, 60, 182, 140, 62, 173, 129, 55, \
181, 137, 61, 165, 123, 53, 167, 120, 46, 150, \
114, 60, 166, 132, 89, 158, 125, 88, 96, 81, \
59, 116, 79, 54, 131, 89, 73, 125, 79, 64, \
85, 63, 46, 128, 100, 52, 144, 107, 51, 77, \
54, 22, 31, 24, 9, 97, 80, 55, 162, 150, \
125, 133, 131, 107, 136, 124, 97, 194, 176, 132, \
244, 232, 188, 244, 235, 194, 246, 236, 199, 244, \
235, 200, 245, 235, 201, 243, 231, 183, 242, 219, \
144, 239, 220, 168, 237, 219, 185, 175, 131, 58, \
186, 144, 66, 168, 123, 48, 176, 131, 55, 123, \
89, 35, 93, 62, 19, 135, 101, 51, 164, 131, \
84, 160, 138, 102, 92, 89, 74, 82, 56, 37, \
95, 60, 40, 91, 66, 48, 80, 71, 44, 123, \
88, 38, 77, 50, 17, 42, 30, 16, 36, 30, \
17, 99, 77, 52, 169, 147, 121, 155, 146, 118, \
123, 104, 70, 181, 160, 115, 239, 229, 185, 240, \
227, 186, 242, 223, 185, 242, 228, 189, 242, 235, \
197, 242, 234, 196, 242, 225, 166, 239, 226, 180, \
239, 223, 193, 169, 125, 54, 189, 146, 68, 167, \
123, 48, 173, 128, 53, 108, 79, 32, 35, 25, \
11, 67, 46, 18, 110, 74, 30, 155, 119, 66, \
127, 105, 68, 94, 71, 38, 105, 71, 37, 85, \
65, 40, 92, 70, 40, 77, 49, 18, 38, 26, \
11, 60, 44, 25, 61, 49, 28, 104, 87, 58, \
164, 151, 126, 172, 159, 129, 129, 97, 54, 169, \
135, 89, 230, 216, 173, 229, 208, 170, 232, 206, \
167, 234, 220, 181, 234, 214, 173, 237, 208, 169, \
236, 203, 150, 235, 221, 178, 234, 226, 197, 164, \
119, 52, 181, 139, 65, 169, 125, 51, 163, 118, \
48, 126, 93, 39, 34, 29, 15, 35, 28, 16, \
45, 31, 14, 75, 50, 21, 128, 91, 43, 180, \
132, 59, 181, 126, 52, 164, 111, 44, 158, 104, \
38, 95, 58, 19, 41, 26, 15, 65, 45, 27, \
76, 59, 34, 138, 109, 64, 181, 160, 120, 181, \
163, 132, 136, 93, 39, 153, 109, 53, 207, 186, \
137, 206, 183, 139, 208, 182, 139, 214, 178, 133, \
218, 166, 105, 220, 160, 90, 224, 152, 84, 227, \
198, 162, 227, 218, 180, 152, 106, 42, 164, 121, \
54, 166, 125, 58, 164, 126, 68, 164, 130, 73, \
57, 45, 22, 52, 37, 24, 66, 46, 26, 39, \
24, 12, 109, 69, 26, 191, 128, 48, 190, 124, \
46, 186, 120, 44, 187, 129, 56, 153, 108, 47, \
74, 47, 20, 48, 33, 20, 77, 59, 33, 163, \
127, 70, 205, 170, 113, 186, 161, 119, 155, 116, \
62, 146, 101, 48, 176, 151, 104, 181, 159, 118, \
162, 141, 100, 178, 137, 93, 189, 136, 63, 196, \
152, 77, 202, 148, 76, 208, 179, 143, 217, 199, \
154, 162, 121, 63, 172, 145, 100, 190, 169, 129, \
208, 190, 150, 207, 186, 137, 109, 89, 51, 54, \
37, 20, 69, 43, 25, 61, 38, 16, 138, 94, \
39, 181, 133, 62, 173, 122, 54, 164, 115, 48, \
155, 114, 56, 163, 122, 63, 137, 97, 43, 59, \
37, 18, 76, 53, 25, 150, 116, 60, 172, 155, \
114, 182, 154, 111, 163, 127, 75, 148, 113, 64, \
180, 158, 117, 184, 174, 147, 143, 134, 105, 170, \
159, 130, 164, 148, 119, 147, 135, 102, 149, 128, \
87, 164, 134, 90, 184, 162, 116, 207, 186, 146, \
217, 200, 160, 223, 206, 166, 225, 207, 167, 227, \
208, 163, 162, 130, 79, 59, 39, 16, 48, 30, \
21, 86, 53, 23, 163, 117, 51, 158, 123, 63, \
147, 110, 51, 148, 104, 41, 143, 106, 49, 157, \
121, 66, 168, 123, 56, 94, 66, 30, 89, 62, \
30, 165, 117, 51, 174, 133, 78, 182, 135, 74, \
167, 123, 64, 167, 141, 95, 177, 163, 121, 175, \
163, 125, 159, 144, 109, 158, 142, 106, 146, 132, \
96, 138, 123, 87, 133, 117, 84, 128, 115, 84, \
132, 119, 88, 221, 205, 167, 225, 209, 169, 230, \
214, 172, 230, 215, 174, 231, 211, 165, 178, 141, \
84, 75, 50, 19, 38, 26, 16, 114, 76, 32, \
179, 133, 62, 164, 126, 66, 146, 110, 53, 142, \
101, 41, 138, 105, 49, 147, 111, 56, 177, 121, \
52, 126, 84, 34, 131, 94, 40, 195, 140, 63, \
198, 140, 64, 204, 147, 65, 196, 136, 57, 185, \
130, 54, 188, 143, 80, 180, 149, 97, 148, 127, \
89, 123, 96, 57, 118, 90, 49, 116, 92, 52, \
112, 94, 57, 110, 95, 63, 107, 92, 63, 227, \
211, 174, 229, 215, 176, 234, 220, 179, 237, 223, \
182, 236, 219, 176, 207, 176, 125, 119, 84, 38, \
52, 34, 14, 122, 84, 34, 191, 136, 58, 169, \
121, 53, 141, 103, 48, 142, 101, 42, 102, 74, \
30, 79, 55, 25, 140, 91, 34, 146, 92, 30, \
154, 102, 36, 197, 149, 74, 214, 168, 92, 215, \
166, 86, 209, 154, 76, 195, 135, 55, 188, 125, \
43, 187, 130, 55, 130, 93, 45, 90, 66, 32, \
98, 71, 34, 94, 64, 27, 98, 70, 32, 108, \
85, 46, 101, 82, 47, 232, 218, 182, 235, 221, \
184, 239, 225, 186, 240, 226, 187, 243, 230, 192, \
233, 212, 167, 169, 123, 58, 98, 59, 17, 130, \
84, 31, 179, 120, 41, 110, 73, 27, 83, 58, \
25, 122, 85, 33, 103, 72, 28, 57, 44, 27, \
84, 61, 34, 147, 96, 33, 161, 103, 34, 184, \
136, 65, 200, 150, 74, 199, 147, 71, 201, 147, \
72, 204, 151, 76, 188, 132, 57, 177, 111, 36, \
156, 103, 36, 133, 103, 55, 125, 103, 64, 99, \
76, 42, 96, 66, 28, 112, 83, 37, 103, 83, \
45, 235, 221, 187, 236, 223, 187, 241, 227, 191, \
243, 229, 193, 248, 234, 199, 240, 224, 180, 176, \
127, 63, 118, 65, 14, 149, 94, 30, 148, 99, \
38, 69, 51, 30, 57, 43, 22, 106, 72, 30, \
110, 76, 31, 69, 51, 30, 100, 75, 43, 166, \
114, 46, 159, 97, 32, 167, 113, 48, 186, 132, \
57, 188, 133, 58, 191, 136, 61, 202, 153, 80, \
207, 162, 93, 182, 122, 52, 149, 85, 21, 147, \
91, 32, 144, 114, 70, 117, 97, 58, 105, 76, \
35, 124, 93, 43, 111, 87, 46, 238, 224, 191, \
240, 226, 192, 244, 231, 196, 245, 232, 196, 249, \
235, 201, 243, 228, 187, 173, 123, 65, 113, 51, \
6, 162, 105, 37, 166, 118, 52, 100, 76, 41, \
63, 46, 26, 94, 64, 26, 100, 68, 29, 90, \
63, 32, 124, 88, 39, 166, 113, 48, 153, 89, \
26, 142, 86, 28, 173, 117, 43, 181, 124, 50, \
186, 131, 55, 193, 146, 74, 206, 162, 92, 194, \
141, 65, 146, 82, 22, 127, 64, 12, 131, 82, \
34, 144, 100, 43, 147, 107, 50, 148, 116, 61, \
122, 99, 54, 239, 225, 192, 242, 228, 194, 245, \
232, 197, 246, 233, 198, 249, 236, 200, 249, 236, \
199, 188, 142, 84, 118, 51, 1, 163, 106, 39, \
172, 126, 56, 135, 94, 40, 92, 67, 31, 76, \
55, 24, 93, 66, 29, 88, 61, 28, 105, 72, \
31, 145, 95, 36, 147, 82, 23, 121, 63, 15, \
149, 91, 26, 166, 108, 38, 177, 123, 49, 184, \
135, 65, 182, 133, 61, 184, 129, 54, 166, 104, \
36, 140, 75, 18, 138, 76, 21, 168, 114, 49, \
169, 129, 67, 151, 120, 66, 133, 110, 65, 239, \
226, 194, 238, 225, 192, 241, 228, 194, 245, 232, \
197, 249, 237, 203, 247, 236, 200, 194, 148, 83, \
133, 66, 6, 156, 97, 31, 153, 112, 49, 108, \
73, 30, 80, 54, 26, 63, 48, 27, 91, 66, \
30, 68, 50, 25, 74, 51, 24, 131, 80, 23, \
135, 72, 14, 106, 50, 10, 127, 71, 15, 154, \
100, 35, 171, 119, 48, 184, 134, 62, 183, 130, \
56, 184, 133, 59, 191, 147, 80, 168, 113, 47, \
160, 104, 37, 177, 138, 76, 154, 126, 77, 146, \
123, 81, 143, 123, 86, 239, 228, 197, 240, 229, \
196, 244, 232, 199, 246, 233, 199, 245, 234, 201, \
231, 217, 174, 183, 128, 56, 150, 83, 17, 144, \
82, 20, 142, 95, 34, 82, 61, 26, 51, 39, \
21, 61, 47, 25, 96, 69, 36, 65, 50, 29, \
68, 51, 27, 140, 85, 27, 140, 77, 15, 107, \
56, 13, 128, 76, 21, 155, 102, 38, 169, 117, \
49, 183, 132, 59, 189, 137, 60, 198, 157, 88, \
214, 184, 129, 202, 162, 102, 181, 137, 72, 140, \
108, 61, 131, 110, 74, 148, 133, 99, 158, 144, \
111, 240, 227, 195, 242, 229, 196, 245, 232, 199, \
245, 233, 197, 246, 238, 206, 224, 205, 161, 169, \
109, 37, 159, 93, 26, 133, 73, 18, 156, 110, \
48, 104, 80, 40, 43, 35, 19, 49, 39, 25, \
72, 53, 29, 59, 46, 27, 64, 49, 26, 147, \
90, 29, 158, 93, 23, 131, 76, 17, 125, 73, \
18, 138, 80, 23, 154, 99, 33, 166, 120, 54, \
177, 135, 67, 210, 177, 115, 211, 184, 132, 202, \
168, 109, 167, 133, 79, 98, 65, 28, 93, 61, \
27, 111, 83, 47, 129, 105, 71, 240, 227, 195, \
241, 228, 195, 242, 230, 197, 242, 231, 197, 223, \
210, 174, 180, 147, 95, 154, 89, 22, 158, 94, \
26, 134, 76, 19, 138, 91, 39, 116, 86, 42, \
48, 38, 20, 40, 34, 22, 51, 41, 24, 53, \
44, 29, 62, 49, 28, 152, 97, 32, 171, 108, \
32, 158, 98, 31, 132, 80, 25, 133, 76, 21, \
139, 81, 22, 136, 97, 39, 152, 118, 61, 204, \
174, 115, 197, 173, 120, 188, 157, 98, 147, 111, \
56, 128, 89, 35, 133, 95, 40, 125, 88, 36, \
115, 78, 32, 236, 225, 194, 238, 226, 194, 236, \
225, 191, 206, 189, 150, 156, 124, 77, 141, 91, \
31, 149, 84, 18, 145, 83, 18, 144, 87, 25, \
116, 67, 20, 110, 74, 29, 67, 50, 26, 40, \
36, 24, 39, 35, 24, 36, 33, 25, 65, 49, \
28, 161, 108, 39, 174, 114, 38, 171, 109, 36, \
156, 101, 35, 141, 87, 30, 147, 87, 25, 123, \
73, 23, 136, 100, 48, 172, 145, 94, 157, 132, \
87, 162, 131, 79, 145, 109, 48, 146, 107, 43, \
151, 115, 51, 151, 116, 49, 149, 113, 49, 235, \
225, 195, 229, 216, 183, 187, 163, 123, 138, 101, \
52, 128, 86, 34, 155, 107, 44, 156, 95, 25, \
132, 69, 13, 139, 81, 23, 128, 81, 27, 117, \
81, 34, 87, 62, 28, 44, 36, 23, 29, 25, \
16, 26, 22, 14, 83, 58, 26, 167, 114, 43, \
167, 108, 36, 170, 111, 39, 176, 122, 48, 145, \
94, 33, 154, 94, 28, 122, 68, 16, 98, 65, \
28, 115, 88, 46, 119, 90, 43, 137, 103, 45, \
147, 110, 47, 153, 117, 52, 153, 116, 52, 152, \
116, 50, 151, 116, 51, 217, 204, 172, 169, 141, \
98, 128, 89, 42, 126, 82, 32, 147, 107, 47, \
166, 120, 53, 161, 104, 32, 132, 68, 12, 122, \
65, 14, 127, 83, 32, 128, 94, 46, 108, 77, \
35, 87, 65, 33, 83, 61, 31, 96, 66, 28, \
130, 84, 30, 161, 108, 39, 157, 99, 30, 171, \
114, 43, 186, 134, 60, 162, 109, 41, 159, 101, \
33, 144, 86, 24, 103, 67, 23, 108, 76, 28, \
131, 97, 38, 145, 109, 45, 152, 117, 51, 157, \
121, 55, 157, 121, 56, 153, 117, 53, 150, 116, \
52, 149, 115, 72, 119, 79, 32, 129, 88, 36, \
152, 112, 50, 160, 118, 51, 160, 117, 51, 156, \
105, 35, 142, 81, 18, 127, 73, 20, 121, 79, \
32, 117, 85, 41, 117, 83, 41, 136, 99, 48, \
149, 106, 48, 148, 97, 35, 147, 93, 31, 135, \
87, 29, 132, 79, 23, 162, 106, 37, 188, 134, \
57, 178, 124, 50, 155, 97, 31, 146, 80, 18, \
136, 89, 30, 136, 101, 42, 147, 111, 47, 152, \
116, 52, 155, 120, 54, 157, 122, 56, 156, 121, \
57, 153, 118, 55, 150, 116, 53, 115, 73, 27, \
131, 89, 39, 152, 113, 51, 158, 120, 50, 159, \
117, 51, 155, 115, 50, 146, 101, 35, 143, 87, \
22, 139, 87, 26, 133, 89, 34, 113, 80, 36, \
116, 84, 41, 141, 102, 48, 139, 95, 38, 121, \
76, 25, 107, 66, 21, 106, 63, 20, 103, 57, \
18, 146, 94, 32, 180, 123, 46, 177, 122, 48, \
135, 81, 27, 119, 63, 14, 135, 91, 32, 151, \
114, 48, 152, 117, 51, 155, 120, 54, 156, 121, \
55, 156, 121, 55, 153, 119, 55, 152, 118, 55, \
147, 115, 52, 134, 95, 43, 156, 116, 52, 157, \
118, 52, 154, 114, 51, 155, 114, 49, 150, 110, \
45, 136, 94, 33, 132, 81, 21, 138, 86, 22, \
141, 92, 31, 124, 81, 34, 120, 81, 38, 107, \
72, 32, 81, 51, 19, 77, 49, 21, 74, 50, \
22, 94, 59, 20, 92, 53, 18, 134, 84, 29, \
171, 109, 35, 175, 120, 49, 131, 91, 36, 127, \
90, 32, 149, 111, 48, 156, 120, 50, 157, 122, \
55, 157, 122, 56, 157, 123, 57, 155, 121, 55, \
152, 118, 54, 148, 116, 52, 144, 113, 50, 151, \
113, 53, 155, 116, 52, 153, 115, 49, 153, 113, \
48, 152, 111, 46, 147, 106, 41, 134, 92, 33, \
120, 78, 24, 125, 76, 22, 129, 73, 20, 125, \
74, 20, 122, 74, 21, 128, 80, 30, 141, 91, \
34, 146, 101, 42, 117, 81, 38, 77, 54, 27, \
50, 35, 17, 119, 74, 24, 159, 95, 22, 166, \
107, 35, 150, 108, 43, 145, 109, 48, 147, 112, \
53, 146, 113, 57, 151, 117, 55, 157, 121, 56, \
156, 121, 57, 153, 119, 55, 151, 117, 53, 148, \
116, 52, 145, 114, 51, 150, 113, 50, 152, 114, \
51, 152, 115, 48, 150, 112, 45, 148, 108, 43, \
143, 102, 39, 136, 94, 34, 125, 85, 31, 121, \
75, 22, 134, 76, 18, 137, 79, 22, 132, 78, \
23, 135, 83, 24, 135, 82, 26, 139, 90, 33, \
136, 94, 39, 87, 59, 27, 66, 40, 15, 116, \
67, 19, 153, 89, 20, 159, 98, 28, 154, 104, \
39, 165, 123, 59, 162, 126, 63, 147, 113, 59, \
142, 109, 51, 153, 117, 53, 153, 118, 55, 152, \
118, 54, 151, 117, 54, 149, 116, 53, 146, 114, \
51, 147, 110, 47, 149, 112, 48, 150, 113, 48, \
148, 110, 45, 147, 107, 43, 144, 104, 40, 138, \
97, 36, 131, 91, 32, 126, 84, 28, 125, 77, \
23, 118, 71, 20, 113, 69, 23, 110, 69, 24, \
111, 71, 25, 116, 75, 27, 118, 81, 31, 107, \
72, 26, 97, 61, 21, 110, 59, 16, 151, 88, \
24, 157, 98, 29, 162, 103, 32, 169, 114, 44, \
157, 110, 44, 142, 104, 45, 142, 108, 49, 151, \
115, 51, 152, 117, 54, 150, 117, 53, 149, 116, \
52, 147, 115, 51, 144, 114, 51, 145, 109, 47, \
145, 108, 45, 148, 111, 47, 147, 109, 45, 146, \
107, 43, 145, 106, 44, 141, 103, 41, 138, 99, \
37, 136, 96, 35, 131, 90, 33, 125, 87, 31, \
127, 89, 34, 132, 93, 35, 137, 98, 37, 140, \
101, 40, 136, 98, 37, 129, 91, 32, 109, 71, \
24, 103, 58, 17, 140, 82, 24, 152, 93, 28, \
149, 92, 27, 132, 84, 25, 125, 85, 29, 130, \
94, 37, 143, 109, 48, 152, 117, 52, 151, 116, \
52, 148, 115, 51, 145, 113, 50, 143, 113, 50, \
141, 111, 49, 143, 107, 46, 142, 106, 44, 143, \
107, 45, 145, 108, 45, 146, 108, 44, 145, 107, \
45, 142, 104, 42, 142, 102, 41, 141, 101, 39, \
141, 101, 40, 139, 100, 40, 139, 100, 39, 142, \
103, 40, 145, 105, 43, 147, 107, 45, 144, 105, \
43, 137, 99, 37, 121, 84, 29, 102, 64, 20, \
112, 65, 20, 121, 72, 20, 121, 77, 24, 121, \
84, 29, 130, 94, 37, 142, 107, 45, 149, 114, \
50, 151, 116, 52, 149, 115, 51, 146, 113, 50, \
142, 111, 48, 140, 109, 47, 137, 107, 47, 142, \
105, 44, 140, 104, 42, 142, 106, 44, 144, 107, \
45, 147, 109, 45, 146, 107, 45, 143, 105, 42, \
144, 104, 42, 145, 105, 42, 144, 104, 43, 144, \
104, 43, 143, 104, 42, 145, 106, 43, 148, 109, \
44, 150, 111, 46, 150, 110, 46, 147, 108, 45, \
140, 101, 39, 127, 89, 32, 120, 80, 28, 126, \
86, 31, 133, 98, 39, 142, 106, 44, 150, 113, \
48, 150, 114, 49, 151, 115, 50, 150, 114, 50, \
148, 113, 50, 145, 112, 49, 142, 110, 48, 140, \
109, 48, 136, 106, 47, 136, 100, 42, 136, 100, \
41, 139, 104, 45, 140, 104, 44, 143, 105, 44, \
142, 104, 43, 142, 104, 42, 143, 104, 43, 144, \
106, 45, 144, 105, 45, 145, 105, 44, 146, 106, \
45, 145, 106, 44, 146, 107, 44, 149, 110, 46, \
150, 111, 47, 150, 110, 47, 149, 109, 46, 145, \
106, 44, 140, 102, 41, 143, 104, 42, 146, 110, \
46, 147, 110, 46, 151, 114, 52, 151, 114, 51, \
149, 113, 49, 145, 110, 47, 144, 109, 47, 141, \
108, 47, 138, 106, 46, 135, 104, 45, 134, 104, \
47, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '9304';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1abcc16e509c8645a2c2b8608397435fc2';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_cat10';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{8, 9, 17, 11, 13, 20, 14, 16, 22, 16, 18, \
23, 13, 16, 21, 11, 14, 19, 13, 15, 21, \
14, 16, 21, 13, 16, 20, 12, 15, 19, 19, \
21, 22, 24, 24, 24, 22, 22, 21, 20, 20, \
19, 18, 18, 17, 15, 16, 13, 12, 12, 10, \
6, 7, 4, 3, 4, 3, 48, 49, 46, 66, \
70, 63, 53, 57, 52, 57, 63, 50, 36, 49, \
23, 33, 48, 18, 36, 51, 22, 41, 55, 26, \
44, 59, 31, 47, 63, 37, 49, 65, 42, 51, \
67, 48, 57, 75, 56, 7, 10, 17, 9, 12, \
19, 11, 14, 20, 13, 16, 21, 12, 15, 20, \
12, 15, 21, 14, 17, 22, 14, 17, 21, 14, \
17, 20, 15, 17, 20, 19, 20, 21, 20, 22, \
21, 19, 21, 19, 18, 19, 18, 16, 17, 15, \
13, 14, 11, 10, 10, 8, 5, 5, 3, 4, \
4, 3, 52, 53, 50, 66, 70, 63, 54, 59, \
53, 58, 65, 51, 34, 48, 20, 29, 44, 15, \
33, 48, 20, 39, 54, 25, 41, 57, 30, 42, \
59, 33, 41, 59, 36, 44, 63, 44, 52, 73, \
54, 7, 8, 15, 7, 10, 16, 8, 11, 17, \
9, 13, 18, 10, 14, 18, 12, 16, 20, 14, \
17, 21, 14, 16, 19, 14, 16, 17, 14, 16, \
16, 13, 15, 14, 13, 15, 14, 14, 16, 15, \
14, 16, 13, 14, 15, 12, 12, 12, 10, 9, \
9, 7, 4, 4, 2, 4, 5, 5, 55, 58, \
54, 65, 71, 64, 56, 62, 57, 61, 67, 53, \
36, 50, 21, 29, 45, 16, 33, 48, 20, 37, \
53, 26, 38, 54, 28, 37, 53, 30, 37, 54, \
34, 41, 59, 41, 50, 71, 52, 5, 7, 12, \
6, 9, 15, 7, 10, 16, 8, 11, 16, 9, \
12, 16, 9, 13, 17, 9, 13, 16, 10, 11, \
14, 10, 11, 13, 10, 11, 13, 10, 11, 11, \
10, 12, 12, 11, 12, 13, 11, 13, 12, 11, \
12, 10, 11, 11, 9, 8, 8, 6, 3, 3, \
1, 5, 5, 5, 59, 61, 58, 64, 71, 64, \
57, 63, 56, 62, 68, 53, 35, 49, 22, 30, \
46, 18, 34, 50, 22, 36, 52, 26, 34, 49, \
26, 33, 47, 28, 34, 50, 34, 37, 56, 39, \
49, 70, 52, 16, 18, 25, 14, 18, 25, 12, \
17, 24, 11, 15, 22, 10, 14, 20, 9, 13, \
18, 7, 11, 15, 8, 11, 13, 8, 10, 13, \
8, 9, 13, 8, 9, 11, 8, 9, 10, 8, \
9, 10, 7, 8, 8, 6, 7, 6, 6, 6, \
4, 6, 6, 4, 2, 2, 1, 7, 7, 7, \
63, 66, 61, 65, 72, 64, 58, 65, 58, 61, \
69, 53, 34, 48, 22, 29, 45, 18, 33, 49, \
22, 33, 49, 23, 30, 45, 23, 30, 45, 27, \
32, 48, 32, 37, 54, 38, 49, 68, 50, 76, \
83, 89, 77, 84, 88, 76, 84, 88, 74, 81, \
85, 67, 75, 78, 62, 69, 73, 62, 68, 72, \
54, 59, 63, 43, 49, 53, 36, 41, 44, 32, \
36, 37, 27, 30, 31, 22, 26, 26, 18, 22, \
22, 15, 17, 17, 13, 13, 13, 9, 9, 9, \
3, 3, 3, 9, 9, 10, 66, 70, 65, 63, \
69, 61, 56, 62, 56, 58, 67, 52, 31, 45, \
19, 27, 43, 17, 30, 45, 19, 28, 43, 19, \
27, 41, 21, 28, 42, 25, 29, 45, 30, 34, \
51, 34, 46, 65, 48, 67, 74, 74, 70, 78, \
80, 71, 78, 81, 67, 74, 76, 73, 81, 82, \
79, 86, 86, 90, 97, 97, 88, 95, 95, 84, \
91, 90, 83, 89, 86, 84, 89, 86, 83, 88, \
84, 80, 86, 82, 77, 83, 79, 74, 79, 75, \
71, 75, 71, 67, 71, 67, 61, 64, 60, 60, \
63, 59, 81, 85, 79, 77, 81, 74, 73, 77, \
71, 61, 69, 54, 26, 41, 16, 23, 39, 14, \
25, 40, 18, 25, 40, 19, 25, 38, 20, 25, \
39, 22, 26, 42, 25, 30, 45, 30, 43, 60, \
44, 87, 64, 35, 91, 74, 48, 83, 71, 50, \
58, 49, 31, 74, 72, 58, 77, 78, 68, 69, \
73, 67, 65, 72, 69, 62, 71, 70, 61, 69, \
68, 60, 67, 67, 61, 68, 65, 62, 68, 63, \
63, 68, 61, 66, 69, 61, 69, 73, 66, 69, \
74, 67, 74, 80, 71, 79, 83, 75, 80, 83, \
75, 82, 86, 77, 87, 90, 81, 65, 72, 55, \
24, 37, 14, 21, 35, 12, 22, 36, 14, 22, \
36, 18, 23, 35, 19, 23, 37, 21, 22, 37, \
22, 26, 39, 24, 39, 56, 38, 85, 45, 13, \
90, 51, 14, 93, 52, 13, 92, 53, 14, 96, \
59, 20, 97, 64, 25, 99, 69, 32, 99, 74, \
38, 101, 80, 45, 100, 83, 51, 94, 80, 54, \
87, 78, 58, 83, 80, 63, 83, 82, 69, 82, \
84, 74, 78, 82, 74, 69, 75, 69, 73, 80, \
73, 76, 81, 74, 78, 82, 76, 77, 82, 76, \
82, 86, 81, 63, 69, 55, 20, 32, 11, 19, \
32, 11, 21, 35, 14, 21, 34, 16, 20, 32, \
19, 18, 31, 19, 14, 27, 14, 20, 31, 17, \
36, 51, 34, 75, 38, 9, 80, 40, 9, 84, \
43, 10, 87, 45, 8, 89, 44, 5, 90, 43, \
3, 89, 41, 2, 86, 39, 1, 86, 39, 1, \
90, 41, 2, 93, 45, 4, 96, 48, 6, 100, \
56, 9, 104, 66, 20, 107, 73, 32, 104, 73, \
39, 94, 78, 54, 95, 89, 76, 101, 101, 90, \
103, 108, 98, 103, 108, 98, 101, 106, 97, 72, \
79, 64, 23, 35, 15, 14, 27, 9, 13, 27, \
9, 13, 27, 15, 16, 31, 18, 30, 37, 22, \
26, 29, 16, 16, 26, 11, 33, 47, 31, 19, \
10, 3, 30, 15, 5, 39, 21, 6, 47, 25, \
6, 55, 28, 5, 61, 31, 5, 66, 33, 5, \
75, 35, 5, 79, 37, 6, 82, 38, 6, 88, \
38, 6, 89, 38, 5, 87, 37, 3, 89, 36, \
2, 89, 36, 3, 86, 36, 4, 84, 35, 7, \
77, 32, 10, 68, 34, 21, 66, 49, 39, 73, \
64, 55, 75, 72, 61, 72, 74, 60, 71, 74, \
57, 72, 77, 58, 63, 67, 46, 39, 40, 18, \
47, 44, 23, 70, 55, 32, 71, 52, 30, 41, \
38, 20, 35, 45, 28, 0, 0, 1, 0, 0, \
1, 0, 0, 1, 0, 0, 1, 0, 0, 1, \
3, 1, 2, 6, 3, 2, 12, 5, 2, 17, \
8, 3, 23, 12, 3, 34, 15, 3, 42, 19, \
5, 48, 20, 5, 59, 25, 4, 67, 28, 6, \
69, 27, 5, 73, 28, 4, 78, 29, 4, 77, \
25, 3, 68, 18, 2, 51, 12, 1, 40, 10, \
3, 37, 15, 11, 37, 22, 20, 54, 43, 36, \
72, 51, 35, 74, 45, 17, 65, 46, 25, 64, \
41, 21, 69, 45, 24, 48, 32, 21, 34, 39, \
24, 5, 6, 6, 3, 3, 3, 2, 2, 3, \
2, 1, 2, 2, 1, 1, 3, 3, 3, 1, \
1, 2, 0, 0, 2, 0, 0, 2, 0, 0, \
2, 0, 0, 2, 0, 0, 1, 1, 0, 0, \
3, 2, 2, 6, 3, 3, 10, 5, 3, 16, \
7, 2, 21, 8, 4, 32, 15, 8, 41, 18, \
7, 42, 15, 4, 40, 11, 3, 37, 10, 5, \
29, 4, 3, 32, 9, 7, 53, 19, 9, 65, \
39, 24, 50, 37, 25, 64, 44, 30, 63, 47, \
38, 43, 27, 21, 35, 31, 18, 6, 8, 7, \
3, 4, 3, 2, 3, 3, 1, 1, 2, 3, \
3, 3, 9, 9, 10, 3, 3, 4, 0, 0, \
1, 2, 1, 0, 2, 2, 1, 9, 6, 5, \
20, 11, 9, 7, 4, 6, 2, 3, 3, 4, \
2, 2, 0, 1, 2, 1, 2, 3, 0, 0, \
1, 4, 6, 7, 0, 2, 4, 0, 0, 1, \
0, 1, 2, 4, 4, 4, 13, 10, 9, 23, \
18, 19, 45, 34, 30, 49, 40, 33, 45, 32, \
25, 64, 47, 38, 57, 45, 41, 45, 26, 18, \
43, 27, 13, 0, 0, 0, 0, 1, 1, 0, \
1, 1, 0, 1, 1, 1, 2, 2, 3, 3, \
3, 1, 1, 1, 0, 0, 1, 3, 1, 1, \
3, 2, 1, 18, 6, 7, 48, 13, 15, 34, \
24, 18, 44, 36, 20, 36, 26, 17, 24, 21, \
17, 20, 19, 16, 28, 26, 21, 22, 21, 16, \
12, 11, 9, 8, 6, 4, 6, 4, 3, 4, \
4, 4, 18, 18, 19, 38, 39, 38, 56, 56, \
53, 44, 41, 36, 49, 40, 34, 50, 38, 32, \
37, 26, 23, 41, 19, 12, 54, 28, 10, 12, \
5, 3, 7, 3, 2, 6, 2, 1, 4, 2, \
2, 2, 2, 2, 0, 1, 2, 0, 1, 1, \
0, 0, 2, 0, 0, 3, 0, 0, 1, 0, \
1, 3, 8, 5, 7, 51, 35, 20, 76, 48, \
23, 63, 38, 19, 42, 27, 18, 34, 26, 19, \
45, 39, 28, 39, 37, 28, 29, 28, 24, 48, \
44, 37, 79, 77, 70, 118, 121, 124, 116, 121, \
125, 78, 79, 78, 75, 74, 66, 54, 51, 44, \
54, 48, 39, 53, 47, 39, 37, 30, 26, 37, \
20, 14, 48, 24, 12, 74, 38, 7, 67, 33, \
5, 64, 29, 5, 60, 27, 6, 53, 25, 5, \
48, 23, 5, 45, 21, 4, 37, 16, 4, 30, \
14, 4, 28, 13, 3, 22, 11, 4, 21, 12, \
8, 44, 24, 14, 59, 32, 17, 70, 40, 21, \
55, 32, 20, 35, 24, 19, 31, 26, 20, 37, \
35, 31, 72, 74, 75, 152, 159, 163, 195, 203, \
205, 208, 216, 219, 178, 180, 182, 99, 93, 90, \
45, 39, 33, 24, 21, 20, 33, 28, 24, 55, \
46, 36, 48, 42, 33, 40, 35, 28, 33, 28, \
24, 90, 52, 8, 91, 49, 6, 89, 47, 7, \
86, 43, 6, 87, 42, 6, 91, 45, 7, 94, \
46, 6, 94, 46, 5, 95, 50, 5, 97, 48, \
6, 88, 39, 5, 84, 36, 5, 77, 34, 10, \
48, 22, 14, 69, 43, 29, 70, 47, 31, 42, \
27, 19, 56, 50, 42, 56, 51, 42, 91, 85, \
78, 189, 189, 191, 208, 209, 213, 200, 199, 202, \
168, 164, 163, 75, 70, 64, 16, 11, 4, 27, \
21, 7, 39, 28, 13, 52, 41, 31, 40, 33, \
25, 42, 36, 29, 39, 35, 29, 88, 49, 7, \
92, 51, 7, 92, 50, 7, 83, 41, 6, 84, \
43, 6, 88, 49, 7, 61, 35, 10, 72, 41, \
8, 87, 44, 6, 71, 27, 5, 91, 41, 5, \
100, 50, 6, 96, 50, 8, 61, 27, 8, 53, \
21, 14, 53, 32, 21, 52, 40, 31, 55, 49, \
40, 47, 40, 32, 61, 49, 38, 161, 153, 148, \
211, 211, 216, 207, 204, 211, 191, 188, 191, 90, \
87, 87, 49, 41, 31, 94, 83, 59, 102, 92, \
78, 82, 75, 69, 70, 62, 54, 71, 63, 53, \
61, 55, 46, 91, 48, 8, 92, 49, 7, 92, \
49, 7, 91, 49, 5, 94, 52, 6, 88, 48, \
7, 59, 28, 7, 71, 36, 8, 74, 33, 6, \
48, 14, 4, 80, 37, 4, 63, 32, 7, 67, \
38, 9, 89, 47, 8, 60, 21, 6, 51, 28, \
21, 69, 60, 44, 46, 41, 30, 44, 37, 24, \
37, 24, 6, 133, 127, 126, 233, 224, 226, 230, \
203, 204, 226, 204, 204, 190, 180, 181, 177, 168, \
171, 196, 188, 189, 196, 193, 192, 174, 172, 170, \
146, 140, 133, 111, 104, 97, 81, 74, 68, 95, \
57, 9, 97, 57, 8, 98, 56, 7, 97, 55, \
7, 95, 53, 7, 91, 48, 6, 92, 46, 4, \
94, 48, 4, 70, 32, 6, 43, 12, 6, 77, \
35, 5, 79, 35, 6, 81, 41, 7, 101, 53, \
8, 73, 39, 13, 57, 43, 35, 75, 60, 44, \
73, 59, 39, 94, 79, 41, 108, 89, 62, 190, \
180, 180, 253, 230, 206, 249, 196, 155, 226, 156, \
136, 219, 175, 165, 226, 205, 200, 216, 201, 199, \
206, 196, 192, 195, 190, 185, 182, 179, 173, 144, \
139, 135, 101, 91, 83, 99, 62, 11, 101, 62, \
9, 101, 60, 8, 99, 59, 8, 99, 59, 8, \
101, 60, 6, 99, 57, 5, 98, 55, 5, 71, \
35, 6, 44, 13, 5, 83, 41, 5, 93, 48, \
6, 97, 52, 6, 91, 48, 7, 62, 41, 22, \
52, 45, 35, 63, 52, 42, 107, 100, 92, 179, \
170, 160, 225, 219, 213, 248, 229, 213, 244, 183, \
137, 243, 163, 105, 223, 138, 94, 227, 170, 138, \
222, 187, 170, 210, 185, 176, 208, 191, 186, 201, \
190, 185, 185, 176, 169, 163, 154, 145, 153, 142, \
133, 91, 45, 6, 92, 45, 5, 91, 45, 5, \
92, 47, 5, 94, 50, 5, 96, 51, 5, 96, \
50, 4, 96, 49, 4, 64, 28, 4, 46, 15, \
3, 90, 46, 5, 97, 52, 4, 100, 54, 5, \
60, 30, 8, 42, 36, 30, 67, 61, 48, 80, \
74, 69, 174, 169, 170, 242, 234, 231, 252, 248, \
239, 251, 242, 224, 246, 205, 161, 248, 149, 97, \
255, 183, 120, 253, 202, 156, 226, 181, 158, 208, \
176, 160, 212, 184, 172, 205, 185, 176, 182, 166, \
158, 168, 151, 139, 171, 155, 141, 86, 34, 5, \
89, 35, 5, 89, 35, 4, 89, 34, 4, 88, \
35, 5, 88, 33, 4, 87, 31, 4, 86, 29, \
5, 56, 16, 5, 49, 14, 4, 90, 35, 6, \
96, 39, 5, 94, 42, 8, 51, 27, 13, 49, \
44, 40, 88, 78, 68, 117, 104, 99, 193, 179, \
175, 235, 218, 207, 251, 239, 219, 250, 230, 196, \
252, 215, 167, 233, 163, 118, 193, 126, 92, 201, \
145, 117, 199, 151, 135, 197, 161, 146, 202, 169, \
154, 189, 164, 151, 172, 153, 140, 178, 157, 140, \
185, 165, 147, 79, 29, 6, 84, 30, 5, 86, \
31, 5, 85, 30, 5, 84, 30, 6, 83, 27, \
5, 80, 24, 5, 78, 22, 5, 48, 12, 4, \
48, 11, 4, 89, 28, 6, 89, 28, 5, 86, \
27, 7, 50, 24, 14, 48, 42, 39, 84, 72, \
65, 148, 127, 117, 204, 180, 169, 235, 214, 198, \
253, 227, 193, 250, 207, 166, 239, 181, 143, 164, \
103, 76, 113, 54, 29, 145, 80, 42, 163, 110, \
87, 163, 124, 114, 162, 132, 120, 168, 142, 127, \
170, 148, 127, 183, 156, 131, 177, 150, 128, 73, \
24, 5, 78, 27, 6, 81, 29, 6, 81, 27, \
5, 84, 27, 6, 85, 27, 6, 81, 25, 5, \
75, 21, 4, 43, 9, 3, 47, 11, 3, 89, \
29, 6, 87, 29, 5, 86, 31, 11, 66, 40, \
32, 70, 64, 61, 133, 119, 112, 191, 163, 150, \
216, 184, 166, 228, 196, 174, 235, 197, 164, 238, \
186, 151, 215, 153, 126, 206, 143, 96, 226, 143, \
63, 237, 150, 55, 237, 169, 108, 219, 167, 140, \
201, 158, 132, 186, 148, 122, 179, 142, 109, 169, \
129, 92, 155, 118, 85, 69, 26, 6, 76, 29, \
7, 75, 30, 7, 73, 27, 6, 74, 25, 6, \
77, 24, 6, 79, 25, 5, 71, 20, 5, 36, \
7, 4, 46, 12, 4, 81, 25, 5, 86, 33, \
14, 97, 52, 34, 100, 78, 69, 139, 132, 132, \
185, 171, 163, 197, 173, 158, 206, 175, 154, 212, \
178, 153, 216, 178, 151, 222, 174, 143, 228, 176, \
139, 251, 202, 149, 252, 195, 124, 250, 187, 108, \
253, 195, 132, 244, 182, 132, 223, 161, 117, 205, \
151, 107, 180, 130, 85, 164, 115, 72, 177, 138, \
100, 66, 31, 9, 69, 29, 6, 71, 27, 4, \
70, 25, 4, 69, 23, 4, 69, 23, 4, 70, \
22, 4, 63, 18, 5, 34, 8, 5, 48, 13, \
4, 78, 30, 16, 84, 47, 34, 89, 55, 41, \
114, 95, 91, 177, 176, 181, 192, 183, 176, 187, \
167, 153, 201, 172, 152, 211, 176, 148, 219, 177, \
144, 229, 179, 140, 240, 185, 139, 247, 189, 136, \
245, 188, 127, 238, 180, 114, 222, 157, 93, 212, \
139, 79, 206, 137, 79, 195, 131, 77, 181, 121, \
67, 192, 141, 91, 216, 182, 155, 113, 107, 101, \
100, 86, 75, 82, 58, 43, 75, 45, 28, 72, \
39, 21, 68, 35, 17, 66, 29, 10, 54, 15, \
1, 40, 13, 5, 60, 29, 14, 80, 44, 29, \
78, 48, 37, 76, 41, 27, 90, 61, 52, 140, \
133, 135, 179, 173, 169, 181, 167, 155, 189, 166, \
146, 203, 170, 144, 217, 173, 140, 225, 174, 134, \
228, 170, 124, 226, 161, 104, 225, 158, 96, 224, \
165, 102, 222, 185, 127, 227, 197, 134, 231, 185, \
120, 231, 178, 121, 236, 181, 133, 234, 193, 157, \
221, 195, 175, 180, 198, 213, 180, 195, 205, 165, \
174, 182, 155, 163, 168, 148, 152, 151, 132, 132, \
128, 121, 114, 109, 102, 91, 81, 92, 79, 70, \
107, 95, 87, 100, 85, 75, 86, 66, 54, 75, \
52, 42, 106, 89, 82, 128, 121, 120, 159, 158, \
160, 183, 179, 177, 197, 184, 176, 210, 193, 181, \
221, 197, 179, 224, 193, 169, 228, 188, 155, 235, \
192, 147, 241, 214, 175, 249, 239, 208, 254, 253, \
223, 255, 248, 210, 253, 228, 186, 252, 215, 179, \
245, 211, 189, 227, 199, 179, 213, 191, 174, 172, \
183, 196, 183, 197, 212, 192, 211, 228, 200, 219, \
237, 204, 222, 237, 204, 222, 235, 204, 218, 232, \
198, 211, 222, 193, 203, 210, 188, 201, 207, 187, \
198, 202, 185, 195, 197, 174, 182, 186, 192, 202, \
208, 202, 214, 220, 206, 216, 224, 214, 222, 231, \
219, 228, 235, 218, 228, 236, 221, 229, 238, 224, \
229, 234, 232, 231, 231, 240, 238, 234, 238, 244, \
243, 237, 240, 242, 236, 236, 236, 236, 233, 229, \
237, 228, 226, 231, 222, 221, 224, 216, 213, 218, \
210, 206, 209, 199, 193, 151, 154, 162, 162, 170, \
180, 175, 187, 198, 184, 197, 208, 189, 203, 215, \
194, 210, 224, 198, 217, 233, 202, 220, 238, 207, \
226, 244, 211, 230, 247, 213, 232, 248, 216, 236, \
252, 221, 238, 253, 222, 239, 252, 223, 240, 253, \
226, 243, 254, 226, 242, 253, 224, 239, 250, 218, \
234, 248, 218, 233, 249, 221, 236, 250, 220, 235, \
249, 218, 233, 247, 218, 233, 244, 217, 229, 241, \
215, 225, 238, 215, 226, 237, 217, 225, 238, 214, \
220, 228, 211, 216, 221, 206, 208, 213, 197, 197, \
198, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '9614';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1addacde4567f089cdc740d58cd6d9712f';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_bird5';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{165, 170, 176, 162, 167, 173, 159, 165, 171, 156, 164, \
172, 157, 165, 173, 159, 167, 175, 160, 167, 174, \
162, 168, 173, 166, 172, 177, 166, 172, 177, 166, \
172, 178, 163, 170, 176, 160, 167, 173, 160, 167, \
173, 165, 170, 175, 167, 171, 176, 165, 169, 174, \
165, 169, 175, 165, 170, 176, 166, 171, 177, 166, \
171, 177, 166, 171, 175, 164, 169, 172, 159, 164, \
169, 153, 158, 166, 151, 158, 166, 148, 157, 164, \
143, 152, 159, 139, 148, 155, 139, 148, 155, 140, \
150, 157, 142, 151, 158, 163, 168, 174, 160, 165, \
171, 158, 164, 170, 158, 164, 172, 159, 165, 172, \
159, 165, 173, 159, 166, 173, 158, 166, 172, 160, \
168, 174, 160, 168, 174, 161, 168, 174, 162, 169, \
175, 161, 168, 174, 161, 168, 174, 162, 167, 174, \
161, 166, 173, 160, 166, 172, 162, 168, 174, 163, \
168, 174, 160, 165, 171, 160, 165, 171, 163, 168, \
172, 162, 167, 171, 155, 160, 166, 147, 151, 160, \
145, 153, 160, 144, 153, 160, 139, 148, 155, 138, \
147, 154, 140, 148, 155, 142, 151, 158, 144, 152, \
159, 163, 168, 174, 162, 167, 173, 164, 169, 175, \
165, 170, 176, 163, 168, 174, 160, 165, 171, 157, \
163, 170, 153, 162, 169, 154, 162, 169, 156, 165, \
172, 158, 166, 172, 161, 168, 174, 162, 169, 175, \
160, 167, 173, 158, 165, 173, 157, 164, 172, 157, \
165, 172, 159, 166, 173, 161, 166, 172, 159, 164, \
170, 160, 165, 171, 162, 167, 172, 162, 167, 170, \
157, 162, 167, 148, 153, 161, 142, 150, 158, 140, \
149, 156, 137, 146, 153, 138, 147, 154, 143, 150, \
156, 146, 153, 158, 147, 154, 159, 165, 170, 176, \
164, 169, 175, 168, 173, 178, 170, 173, 178, 168, \
171, 176, 164, 167, 173, 159, 165, 171, 152, 161, \
169, 153, 162, 169, 151, 160, 166, 155, 162, 167, \
158, 165, 170, 158, 165, 171, 157, 164, 171, 157, \
166, 173, 159, 168, 176, 158, 167, 174, 157, 164, \
171, 158, 163, 169, 160, 165, 171, 163, 168, 174, \
162, 167, 171, 161, 166, 170, 161, 166, 172, 155, \
159, 167, 144, 152, 160, 139, 148, 155, 140, 149, \
156, 143, 152, 159, 147, 152, 157, 146, 151, 155, \
147, 152, 157, 170, 173, 179, 168, 172, 178, 172, \
175, 181, 176, 178, 183, 174, 176, 181, 172, 174, \
179, 168, 172, 179, 158, 165, 174, 116, 122, 121, \
94, 95, 83, 125, 120, 110, 153, 150, 147, 155, \
162, 166, 156, 165, 175, 159, 168, 177, 162, 172, \
177, 159, 168, 175, 154, 161, 170, 156, 162, 167, \
158, 167, 169, 162, 169, 173, 162, 167, 172, 160, \
165, 169, 162, 167, 171, 159, 164, 169, 149, 157, \
162, 145, 154, 160, 149, 156, 163, 152, 158, 166, \
149, 156, 161, 144, 150, 154, 145, 150, 153, 173, \
176, 181, 173, 176, 181, 176, 179, 184, 180, 183, \
188, 177, 180, 185, 175, 177, 182, 172, 176, 178, \
112, 116, 120, 42, 41, 34, 68, 56, 36, 103, \
82, 56, 124, 110, 87, 152, 149, 140, 161, 160, \
162, 161, 162, 168, 168, 171, 174, 164, 168, 174, \
158, 162, 171, 158, 166, 170, 156, 167, 174, 155, \
164, 173, 155, 162, 170, 154, 162, 167, 157, 164, \
170, 156, 163, 169, 152, 161, 164, 152, 160, 164, \
154, 159, 165, 155, 160, 166, 150, 158, 163, 146, \
153, 156, 146, 151, 154, 176, 179, 184, 175, 178, \
183, 176, 179, 184, 179, 182, 187, 174, 177, 182, \
171, 174, 179, 166, 171, 170, 71, 75, 71, 49, \
43, 28, 97, 76, 47, 108, 81, 41, 156, 133, \
90, 179, 160, 129, 139, 121, 103, 129, 115, 104, \
137, 127, 118, 149, 142, 139, 160, 158, 157, 164, \
169, 169, 157, 165, 179, 149, 160, 173, 148, 159, \
166, 150, 159, 166, 154, 164, 171, 155, 164, 171, \
156, 164, 169, 156, 163, 166, 154, 159, 162, 157, \
162, 165, 151, 160, 164, 149, 157, 160, 151, 156, \
158, 177, 180, 185, 175, 178, 183, 172, 176, 181, \
171, 176, 180, 168, 172, 177, 170, 174, 179, 136, \
141, 142, 50, 52, 48, 81, 75, 44, 145, 125, \
67, 167, 142, 90, 187, 162, 114, 179, 151, 106, \
148, 120, 83, 123, 100, 66, 112, 92, 63, 115, \
99, 75, 129, 119, 97, 137, 132, 119, 154, 152, \
155, 156, 162, 169, 150, 159, 165, 154, 162, 168, \
159, 167, 174, 158, 165, 172, 159, 166, 170, 161, \
166, 169, 160, 164, 164, 160, 164, 163, 152, 161, \
165, 152, 160, 163, 154, 159, 162, 170, 173, 178, \
169, 172, 177, 165, 169, 173, 162, 169, 172, 162, \
169, 173, 163, 170, 174, 87, 93, 94, 16, 17, \
14, 77, 72, 44, 134, 116, 64, 90, 73, 35, \
132, 113, 72, 195, 168, 119, 174, 145, 100, 134, \
108, 67, 112, 87, 51, 112, 88, 54, 118, 97, \
62, 118, 100, 70, 122, 109, 86, 151, 148, 142, \
159, 163, 167, 160, 164, 168, 165, 168, 172, 161, \
164, 168, 160, 165, 169, 162, 166, 168, 167, 169, \
166, 161, 164, 160, 151, 159, 163, 153, 161, 164, \
154, 159, 162, 163, 167, 171, 158, 162, 167, 159, \
163, 170, 160, 166, 172, 162, 169, 173, 153, 160, \
162, 66, 72, 67, 40, 43, 28, 115, 108, 74, \
168, 147, 91, 121, 104, 60, 94, 79, 43, 177, \
156, 105, 189, 161, 111, 139, 111, 71, 113, 88, \
56, 113, 88, 58, 135, 110, 75, 162, 138, 100, \
137, 117, 81, 126, 113, 93, 159, 154, 149, 163, \
164, 162, 161, 163, 164, 161, 165, 168, 164, 168, \
168, 160, 165, 162, 165, 168, 163, 163, 164, 161, \
153, 158, 164, 154, 159, 162, 152, 155, 159, 162, \
165, 168, 150, 156, 161, 154, 160, 171, 162, 166, \
175, 166, 170, 175, 131, 137, 137, 62, 68, 58, \
71, 71, 45, 131, 117, 69, 207, 182, 105, 218, \
195, 118, 128, 109, 62, 162, 141, 86, 186, 152, \
102, 136, 107, 67, 117, 96, 65, 135, 113, 85, \
156, 131, 96, 147, 121, 84, 138, 114, 79, 130, \
107, 76, 140, 125, 102, 154, 148, 135, 155, 154, \
149, 159, 163, 163, 175, 176, 171, 171, 174, 168, \
166, 168, 163, 167, 165, 160, 162, 162, 161, 162, \
163, 159, 152, 154, 152, 163, 165, 167, 148, 154, \
161, 150, 157, 168, 159, 162, 169, 161, 164, 168, \
104, 108, 109, 43, 45, 39, 50, 46, 30, 84, \
71, 40, 155, 135, 82, 203, 182, 109, 195, 172, \
114, 180, 152, 97, 158, 122, 80, 118, 95, 62, \
118, 99, 70, 118, 96, 66, 125, 99, 64, 130, \
101, 65, 138, 110, 73, 145, 118, 80, 143, 118, \
84, 144, 123, 97, 157, 144, 126, 139, 133, 121, \
146, 139, 130, 149, 145, 138, 151, 148, 140, 166, \
161, 149, 155, 151, 138, 157, 157, 141, 156, 158, \
145, 161, 163, 168, 144, 151, 159, 144, 152, 159, \
148, 150, 155, 141, 142, 146, 88, 90, 92, 40, \
43, 44, 13, 16, 15, 25, 22, 12, 51, 44, \
19, 111, 98, 55, 152, 132, 85, 151, 126, 76, \
153, 126, 82, 121, 101, 69, 106, 85, 56, 125, \
102, 69, 136, 111, 75, 151, 122, 87, 174, 146, \
107, 158, 130, 88, 161, 130, 88, 167, 136, 99, \
156, 133, 102, 138, 121, 93, 116, 100, 79, 99, \
87, 71, 118, 109, 94, 160, 149, 132, 152, 143, \
126, 153, 147, 132, 161, 159, 150, 150, 154, 162, \
147, 151, 159, 146, 150, 153, 146, 148, 149, 131, \
132, 134, 79, 80, 82, 57, 61, 62, 35, 41, \
41, 46, 45, 40, 66, 61, 45, 97, 86, 61, \
135, 113, 76, 159, 130, 86, 173, 147, 104, 178, \
154, 119, 163, 135, 103, 167, 140, 105, 164, 141, \
104, 151, 127, 90, 175, 150, 111, 174, 147, 107, \
176, 146, 106, 166, 136, 97, 149, 123, 84, 147, \
124, 85, 152, 129, 91, 152, 134, 104, 140, 126, \
103, 149, 134, 113, 165, 151, 133, 160, 150, 135, \
152, 148, 141, 149, 151, 159, 157, 156, 161, 160, \
160, 158, 159, 161, 160, 137, 139, 139, 76, 77, \
78, 59, 62, 58, 60, 61, 52, 80, 75, 63, \
112, 101, 80, 141, 125, 97, 155, 127, 89, 157, \
121, 83, 163, 132, 95, 180, 150, 113, 185, 153, \
115, 182, 153, 114, 185, 162, 121, 187, 166, 125, \
193, 170, 131, 204, 178, 141, 197, 172, 133, 176, \
151, 110, 170, 145, 103, 183, 160, 118, 195, 172, \
126, 175, 156, 115, 159, 140, 111, 155, 134, 107, \
161, 144, 117, 155, 143, 119, 142, 134, 120, 143, \
142, 145, 154, 151, 151, 159, 159, 156, 156, 157, \
155, 135, 136, 133, 78, 79, 75, 61, 60, 52, \
59, 58, 46, 63, 61, 47, 91, 82, 63, 134, \
117, 88, 145, 118, 85, 136, 105, 70, 152, 123, \
87, 169, 138, 100, 176, 145, 106, 176, 146, 106, \
183, 156, 114, 192, 168, 125, 197, 172, 131, 203, \
178, 138, 196, 173, 132, 187, 163, 121, 194, 170, \
131, 227, 209, 176, 222, 205, 171, 187, 172, 136, \
175, 156, 130, 170, 149, 119, 156, 142, 115, 142, \
130, 106, 140, 129, 109, 144, 144, 146, 147, 145, \
145, 153, 153, 151, 154, 152, 148, 149, 146, 140, \
93, 91, 83, 63, 60, 50, 52, 50, 38, 54, \
51, 38, 86, 78, 60, 126, 108, 80, 128, 101, \
69, 130, 99, 64, 154, 123, 85, 174, 139, 102, \
174, 140, 103, 170, 139, 102, 172, 142, 105, 176, \
149, 108, 185, 158, 118, 189, 162, 124, 185, 157, \
119, 200, 172, 135, 223, 200, 167, 218, 202, 177, \
184, 170, 144, 173, 163, 135, 153, 143, 127, 148, \
137, 118, 156, 150, 130, 152, 146, 128, 157, 150, \
133, 181, 175, 169, 171, 164, 157, 167, 162, 157, \
157, 152, 146, 150, 146, 138, 115, 112, 101, 71, \
66, 55, 54, 51, 39, 59, 55, 42, 89, 79, \
62, 105, 86, 60, 107, 81, 50, 131, 101, 65, \
161, 131, 91, 175, 141, 97, 185, 151, 108, 182, \
151, 108, 163, 134, 92, 169, 139, 98, 181, 150, \
111, 185, 154, 117, 198, 166, 125, 216, 188, 145, \
216, 195, 160, 178, 163, 133, 163, 143, 113, 169, \
152, 123, 145, 133, 116, 138, 126, 106, 137, 127, \
104, 143, 132, 110, 163, 150, 129, 163, 157, 146, \
162, 154, 142, 154, 149, 142, 130, 128, 121, 121, \
119, 110, 111, 109, 98, 79, 75, 63, 66, 61, \
50, 64, 59, 47, 87, 75, 58, 89, 72, 50, \
110, 88, 62, 143, 117, 85, 176, 151, 112, 190, \
162, 119, 193, 164, 119, 190, 162, 114, 187, 157, \
109, 197, 164, 119, 205, 172, 128, 209, 176, 134, \
212, 180, 136, 218, 192, 149, 187, 169, 130, 159, \
142, 104, 153, 127, 91, 149, 126, 90, 139, 120, \
95, 132, 112, 82, 131, 110, 78, 130, 110, 82, \
142, 124, 99, 99, 103, 99, 100, 102, 98, 84, \
88, 89, 76, 79, 77, 69, 72, 68, 73, 77, \
70, 74, 73, 64, 73, 67, 57, 70, 64, 52, \
77, 65, 49, 84, 71, 53, 117, 101, 79, 155, \
135, 106, 187, 168, 133, 213, 193, 161, 223, 200, \
165, 209, 181, 141, 201, 169, 125, 204, 172, 123, \
212, 180, 132, 218, 186, 140, 220, 190, 149, 205, \
182, 148, 135, 116, 86, 128, 109, 76, 125, 102, \
68, 115, 96, 61, 99, 82, 55, 112, 94, 62, \
141, 119, 85, 118, 99, 70, 124, 110, 87, 66, \
83, 96, 62, 78, 93, 61, 76, 92, 59, 73, \
85, 59, 72, 87, 67, 80, 92, 70, 76, 77, \
70, 66, 56, 70, 63, 48, 74, 65, 50, 79, \
70, 56, 111, 102, 83, 156, 143, 116, 189, 175, \
143, 209, 195, 167, 217, 199, 169, 211, 188, 155, \
218, 191, 156, 218, 191, 152, 227, 201, 158, 234, \
209, 168, 235, 216, 179, 201, 187, 155, 106, 91, \
68, 83, 70, 50, 98, 82, 60, 105, 85, 55, \
97, 82, 60, 87, 80, 60, 121, 106, 80, 123, \
106, 76, 130, 116, 89, 46, 65, 88, 51, 68, \
94, 57, 76, 100, 56, 76, 97, 56, 74, 98, \
55, 72, 93, 52, 64, 71, 56, 58, 50, 66, \
61, 44, 73, 66, 45, 79, 71, 53, 104, 94, \
74, 151, 138, 111, 186, 171, 140, 196, 183, 150, \
195, 179, 147, 210, 190, 157, 227, 206, 173, 231, \
210, 174, 237, 217, 180, 240, 222, 189, 216, 201, \
173, 168, 154, 129, 132, 117, 97, 114, 104, 88, \
116, 103, 86, 129, 110, 83, 118, 102, 81, 104, \
97, 78, 121, 108, 86, 128, 112, 82, 119, 103, \
76, 39, 53, 64, 29, 43, 54, 32, 50, 64, \
35, 55, 74, 40, 57, 78, 39, 53, 69, 31, \
43, 52, 38, 42, 42, 53, 49, 39, 64, 58, \
42, 75, 66, 48, 97, 84, 63, 131, 115, 89, \
166, 149, 118, 175, 160, 126, 183, 168, 134, 192, \
176, 144, 213, 196, 163, 211, 194, 161, 217, 202, \
171, 210, 195, 169, 161, 146, 126, 132, 116, 98, \
135, 119, 98, 117, 106, 89, 114, 103, 88, 128, \
113, 88, 120, 103, 82, 115, 102, 80, 109, 93, \
72, 125, 106, 79, 107, 89, 64, 56, 58, 48, \
33, 35, 24, 41, 51, 46, 26, 40, 47, 32, \
42, 51, 23, 29, 32, 16, 21, 22, 26, 27, \
27, 34, 28, 23, 45, 39, 33, 58, 49, 36, \
74, 62, 41, 102, 87, 63, 119, 101, 74, 139, \
121, 88, 164, 148, 117, 163, 149, 123, 156, 142, \
115, 168, 153, 123, 182, 166, 141, 181, 167, 143, \
152, 137, 118, 130, 112, 93, 126, 109, 86, 114, \
101, 83, 112, 100, 84, 138, 124, 101, 131, 116, \
95, 120, 105, 82, 96, 79, 56, 112, 92, 63, \
98, 79, 52, 85, 72, 54, 92, 79, 59, 68, \
67, 53, 33, 38, 31, 45, 46, 40, 62, 58, \
46, 69, 65, 48, 64, 59, 41, 57, 49, 32, \
51, 46, 36, 55, 49, 35, 68, 58, 40, 80, \
67, 47, 98, 83, 61, 130, 112, 82, 123, 107, \
80, 99, 87, 66, 107, 95, 73, 178, 161, 134, \
188, 172, 148, 163, 148, 121, 166, 151, 125, 163, \
146, 120, 141, 123, 95, 123, 109, 90, 132, 116, \
99, 140, 126, 101, 129, 115, 96, 136, 123, 99, \
112, 94, 68, 100, 80, 47, 109, 90, 58, 125, \
105, 79, 130, 112, 88, 112, 100, 80, 107, 96, \
75, 104, 94, 73, 99, 94, 75, 61, 58, 40, \
95, 83, 59, 124, 106, 74, 106, 92, 61, 105, \
90, 61, 102, 86, 59, 99, 84, 63, 112, 99, \
79, 123, 107, 81, 114, 96, 68, 108, 93, 68, \
130, 117, 93, 164, 148, 121, 170, 153, 127, 143, \
125, 99, 156, 136, 106, 167, 146, 110, 143, 123, \
87, 146, 126, 96, 157, 132, 105, 125, 104, 78, \
122, 105, 82, 139, 122, 94, 111, 93, 65, 114, \
92, 60, 110, 90, 56, 152, 134, 101, 100, 84, \
56, 102, 89, 64, 117, 98, 70, 102, 83, 53, \
90, 78, 52, 53, 46, 26, 89, 74, 51, 153, \
130, 94, 144, 125, 87, 128, 106, 70, 129, 106, \
73, 145, 125, 98, 144, 127, 104, 135, 118, 90, \
139, 119, 88, 146, 128, 99, 108, 93, 65, 129, \
109, 78, 142, 120, 89, 134, 111, 81, 125, 100, \
68, 141, 117, 79, 148, 128, 90, 148, 130, 98, \
125, 103, 77, 119, 100, 77, 131, 115, 92, 108, \
91, 64, 96, 79, 55, 117, 97, 71, 109, 92, \
61, 150, 135, 106, 117, 103, 78, 135, 124, 105, \
104, 91, 69, 106, 88, 60, 110, 92, 61, 93, \
78, 51, 101, 85, 57, 139, 117, 85, 132, 112, \
82, 100, 81, 53, 137, 118, 90, 175, 157, 131, \
158, 141, 115, 157, 136, 106, 161, 138, 106, 153, \
134, 106, 134, 118, 94, 133, 115, 88, 142, 122, \
95, 134, 113, 85, 121, 98, 67, 153, 130, 93, \
170, 151, 117, 123, 111, 86, 123, 114, 96, 156, \
147, 130, 159, 149, 130, 109, 97, 76, 78, 66, \
46, 74, 60, 41, 92, 79, 54, 142, 123, 103, \
140, 122, 105, 143, 133, 122, 120, 117, 106, 130, \
119, 99, 137, 121, 95, 128, 112, 85, 129, 112, \
83, 132, 112, 83, 101, 82, 56, 85, 73, 53, \
130, 121, 102, 167, 156, 134, 153, 140, 115, 134, \
114, 83, 141, 119, 88, 144, 126, 103, 130, 119, \
103, 139, 131, 115, 150, 140, 123, 148, 137, 117, \
144, 127, 101, 180, 155, 119, 185, 164, 128, 134, \
121, 97, 149, 142, 124, 165, 156, 138, 154, 144, \
127, 129, 121, 103, 121, 109, 92, 97, 88, 73, \
100, 91, 70, 144, 121, 93, 130, 109, 84, 118, \
106, 89, 106, 101, 90, 123, 110, 90, 121, 102, \
76, 132, 113, 86, 119, 100, 74, 108, 90, 64, \
107, 89, 62, 113, 101, 80, 138, 126, 106, 167, \
151, 125, 144, 125, 95, 113, 95, 64, 117, 99, \
72, 109, 97, 80, 83, 76, 66, 102, 94, 83, \
118, 109, 94, 129, 119, 100, 130, 115, 91, 152, \
126, 91, 174, 148, 109, 162, 145, 118, 141, 128, \
105, 143, 128, 105, 136, 123, 104, 126, 117, 102, \
131, 119, 101, 120, 110, 97, 130, 120, 100, 167, \
140, 101, 131, 107, 71, 107, 89, 61, 96, 79, \
59, 92, 73, 49, 95, 74, 44, 131, 108, 77, \
136, 115, 87, 106, 87, 61, 108, 90, 65, 128, \
109, 84, 146, 127, 99, 170, 147, 112, 151, 127, \
89, 131, 113, 79, 123, 103, 77, 116, 101, 78, \
66, 55, 40, 65, 52, 34, 79, 68, 52, 88, \
76, 58, 111, 91, 67, 124, 98, 65, 159, 130, \
90, 147, 124, 91, 118, 98, 67, 138, 119, 89, \
145, 128, 106, 125, 112, 91, 115, 101, 81, 113, \
102, 92, 114, 102, 83, 178, 148, 110, 151, 123, \
89, 103, 81, 52, 105, 83, 55, 109, 90, 63, \
102, 84, 56, 125, 103, 72, 127, 105, 74, 112, \
92, 66, 95, 76, 53, 110, 88, 61, 123, 102, \
69, 165, 142, 101, 160, 136, 95, 145, 124, 85, \
133, 108, 79, 140, 118, 84, 93, 77, 52, 80, \
65, 42, 62, 53, 38, 72, 62, 47, 110, 87, \
63, 119, 93, 60, 152, 125, 83, 153, 129, 91, \
124, 99, 68, 118, 98, 67, 127, 110, 86, 119, \
100, 70, 115, 100, 73, 93, 83, 71, 96, 84, \
64, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '9924';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1afb3face961328ad57a29814ccb220fea';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_frog6';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{122, 117, 108, 114, 110, 100, 95, 89, 88, 54, 51, \
51, 35, 34, 32, 42, 41, 39, 51, 50, 48, \
42, 41, 38, 40, 39, 37, 32, 30, 32, 20, \
20, 18, 23, 23, 13, 55, 51, 33, 87, 81, \
54, 101, 93, 60, 114, 103, 70, 115, 103, 73, \
133, 125, 91, 142, 138, 103, 111, 107, 82, 105, \
100, 84, 88, 83, 71, 57, 53, 47, 46, 43, \
44, 39, 36, 38, 46, 42, 40, 63, 60, 55, \
86, 82, 78, 92, 89, 86, 78, 77, 75, 78, \
77, 73, 92, 91, 86, 120, 115, 105, 98, 93, \
84, 78, 73, 71, 41, 38, 38, 29, 28, 26, \
47, 46, 44, 60, 59, 57, 54, 52, 47, 45, \
41, 35, 37, 31, 28, 60, 55, 47, 84, 76, \
59, 101, 86, 57, 107, 90, 50, 132, 115, 69, \
139, 121, 77, 129, 118, 72, 165, 160, 108, 157, \
152, 99, 126, 123, 71, 132, 123, 83, 128, 116, \
86, 105, 96, 74, 77, 72, 58, 49, 44, 36, \
52, 48, 43, 74, 69, 66, 92, 87, 85, 74, \
69, 66, 78, 76, 73, 82, 80, 76, 96, 94, \
88, 90, 86, 76, 58, 54, 44, 30, 25, 23, \
23, 20, 20, 29, 28, 26, 50, 49, 47, 56, \
55, 54, 50, 48, 43, 49, 44, 36, 68, 60, \
52, 99, 89, 76, 72, 60, 45, 72, 55, 34, \
111, 96, 61, 110, 95, 60, 81, 66, 41, 118, \
109, 69, 188, 181, 130, 177, 170, 118, 148, 141, \
86, 152, 140, 88, 128, 113, 68, 122, 110, 73, \
113, 104, 76, 90, 83, 62, 66, 60, 48, 79, \
72, 69, 93, 86, 84, 68, 62, 56, 83, 78, \
74, 91, 87, 82, 92, 88, 80, 78, 74, 64, \
49, 45, 36, 27, 21, 19, 41, 38, 37, 42, \
41, 39, 49, 47, 46, 42, 41, 39, 40, 39, \
34, 43, 41, 33, 56, 50, 42, 40, 30, 17, \
51, 39, 17, 122, 109, 68, 152, 143, 90, 123, \
115, 70, 55, 47, 25, 94, 87, 52, 186, 178, \
133, 189, 177, 138, 177, 165, 122, 201, 190, 141, \
147, 137, 88, 133, 122, 78, 120, 107, 68, 111, \
101, 67, 98, 92, 69, 83, 75, 67, 94, 86, \
79, 88, 81, 70, 83, 76, 71, 101, 94, 89, \
96, 90, 81, 81, 77, 67, 49, 45, 36, 47, \
42, 39, 63, 60, 60, 39, 38, 37, 45, 44, \
42, 40, 39, 37, 48, 48, 44, 44, 46, 40, \
34, 31, 24, 43, 35, 20, 129, 118, 78, 184, \
173, 77, 189, 182, 74, 178, 172, 83, 140, 133, \
74, 121, 116, 64, 168, 159, 114, 200, 186, 151, \
158, 142, 105, 196, 189, 145, 190, 187, 141, 168, \
158, 113, 137, 121, 77, 114, 102, 58, 111, 105, \
72, 93, 85, 70, 93, 85, 72, 88, 81, 64, \
74, 67, 60, 104, 97, 89, 94, 87, 77, 76, \
72, 69, 49, 46, 40, 71, 69, 60, 51, 48, \
50, 35, 33, 36, 54, 51, 54, 43, 40, 37, \
51, 51, 39, 55, 54, 45, 50, 44, 31, 120, \
112, 78, 182, 172, 95, 210, 204, 44, 215, 215, \
59, 206, 201, 101, 194, 184, 110, 169, 160, 94, \
152, 141, 94, 190, 177, 136, 164, 153, 109, 150, \
143, 103, 208, 203, 162, 190, 179, 136, 149, 133, \
87, 137, 121, 72, 117, 106, 61, 97, 87, 58, \
84, 76, 59, 70, 63, 52, 79, 75, 68, 94, \
89, 79, 92, 85, 72, 68, 68, 60, 48, 47, \
44, 63, 61, 64, 40, 41, 37, 53, 55, 42, \
66, 64, 59, 60, 57, 44, 102, 101, 65, 78, \
75, 40, 102, 95, 53, 179, 171, 99, 179, 171, \
58, 194, 187, 27, 211, 210, 71, 232, 222, 163, \
206, 189, 141, 169, 154, 91, 120, 105, 61, 166, \
154, 110, 175, 168, 121, 135, 128, 84, 182, 172, \
127, 204, 190, 149, 176, 160, 123, 151, 133, 91, \
132, 117, 66, 106, 95, 52, 84, 76, 53, 73, \
67, 60, 89, 88, 79, 114, 112, 96, 138, 133, \
111, 59, 60, 44, 30, 28, 32, 51, 51, 41, \
74, 85, 17, 120, 129, 57, 90, 90, 59, 85, \
83, 55, 92, 90, 45, 92, 86, 44, 116, 106, \
58, 123, 112, 44, 116, 103, 14, 166, 152, 38, \
203, 192, 87, 216, 200, 144, 197, 179, 124, 152, \
138, 71, 88, 74, 29, 152, 139, 92, 166, 155, \
112, 154, 146, 98, 146, 137, 84, 169, 155, 115, \
185, 167, 141, 166, 147, 115, 142, 126, 79, 124, \
111, 68, 91, 82, 50, 88, 81, 62, 80, 78, \
63, 118, 115, 97, 158, 153, 130, 52, 49, 42, \
53, 52, 29, 121, 133, 32, 174, 197, 31, 160, \
175, 44, 143, 143, 89, 160, 154, 122, 111, 106, \
58, 101, 94, 40, 125, 117, 54, 126, 116, 41, \
109, 98, 13, 141, 129, 24, 188, 176, 67, 188, \
174, 85, 189, 175, 84, 172, 162, 76, 137, 126, \
62, 147, 136, 72, 161, 149, 93, 174, 163, 119, \
146, 136, 92, 138, 125, 84, 169, 153, 116, 166, \
148, 110, 155, 139, 95, 124, 111, 65, 92, 82, \
40, 95, 86, 56, 80, 75, 61, 93, 87, 77, \
99, 93, 81, 64, 62, 38, 131, 142, 33, 189, \
210, 40, 193, 214, 34, 163, 176, 34, 180, 178, \
114, 150, 138, 118, 109, 99, 59, 92, 88, 20, \
147, 145, 60, 154, 152, 59, 127, 123, 32, 140, \
133, 38, 152, 141, 43, 159, 145, 50, 164, 153, \
58, 171, 163, 72, 173, 164, 83, 162, 151, 67, \
163, 150, 77, 177, 163, 122, 165, 153, 118, 130, \
117, 71, 141, 128, 71, 152, 137, 83, 158, 144, \
96, 136, 123, 72, 108, 95, 46, 97, 85, 47, \
90, 83, 66, 82, 74, 71, 70, 63, 65, 132, \
139, 51, 183, 201, 45, 150, 162, 41, 190, 195, \
96, 181, 182, 90, 143, 135, 83, 112, 96, 76, \
69, 58, 27, 95, 93, 36, 170, 172, 93, 159, \
162, 76, 136, 140, 57, 158, 159, 69, 154, 145, \
57, 150, 137, 50, 147, 137, 61, 143, 135, 59, \
166, 156, 81, 179, 167, 82, 171, 154, 77, 152, \
139, 89, 146, 136, 91, 141, 129, 76, 118, 105, \
44, 134, 120, 62, 156, 143, 90, 152, 139, 83, \
141, 125, 74, 106, 91, 47, 101, 95, 59, 66, \
59, 46, 61, 55, 56, 185, 193, 78, 207, 215, \
109, 187, 190, 134, 201, 199, 155, 174, 169, 119, \
112, 106, 56, 73, 62, 24, 72, 65, 22, 130, \
132, 65, 168, 175, 82, 154, 162, 65, 140, 149, \
56, 152, 160, 56, 149, 146, 51, 158, 149, 58, \
162, 154, 77, 159, 148, 84, 172, 159, 96, 171, \
156, 84, 182, 165, 98, 150, 138, 74, 136, 130, \
60, 146, 138, 77, 141, 128, 75, 124, 107, 55, \
131, 116, 61, 153, 139, 80, 146, 131, 77, 115, \
101, 50, 119, 114, 57, 88, 83, 50, 60, 56, \
47, 204, 199, 121, 237, 232, 179, 208, 210, 172, \
190, 194, 134, 178, 179, 106, 155, 158, 77, 128, \
129, 55, 132, 132, 70, 151, 155, 82, 163, 171, \
73, 159, 167, 69, 133, 140, 52, 142, 146, 54, \
128, 125, 45, 136, 128, 54, 162, 150, 79, 164, \
147, 86, 178, 160, 101, 177, 162, 99, 196, 182, \
124, 179, 166, 97, 165, 159, 73, 136, 133, 63, \
130, 118, 67, 127, 109, 57, 128, 110, 55, 137, \
122, 62, 143, 131, 74, 130, 119, 65, 123, 113, \
51, 111, 104, 57, 63, 59, 46, 178, 168, 100, \
210, 201, 152, 201, 201, 156, 186, 191, 118, 189, \
194, 101, 187, 195, 89, 173, 179, 85, 163, 166, \
93, 164, 168, 91, 172, 179, 82, 151, 159, 61, \
124, 130, 45, 115, 116, 37, 110, 106, 39, 124, \
113, 53, 148, 133, 73, 159, 141, 80, 175, 158, \
93, 184, 171, 104, 210, 198, 138, 194, 182, 114, \
175, 169, 84, 122, 118, 49, 113, 102, 51, 125, \
110, 54, 146, 133, 72, 125, 113, 53, 119, 105, \
52, 142, 125, 78, 129, 113, 52, 122, 111, 62, \
62, 57, 45, 160, 156, 47, 139, 132, 54, 155, \
152, 97, 177, 178, 109, 178, 178, 107, 152, 155, \
68, 151, 151, 79, 158, 159, 96, 174, 179, 96, \
181, 188, 88, 152, 160, 61, 125, 131, 44, 114, \
116, 37, 109, 105, 35, 126, 116, 53, 134, 119, \
60, 147, 130, 66, 153, 137, 65, 188, 175, 103, \
207, 195, 134, 184, 172, 110, 166, 159, 82, 129, \
121, 57, 118, 106, 55, 126, 117, 56, 120, 115, \
47, 112, 102, 41, 88, 72, 27, 121, 99, 63, \
138, 116, 62, 125, 110, 65, 61, 54, 44, 134, \
133, 25, 146, 149, 19, 132, 135, 44, 160, 161, \
90, 189, 186, 122, 148, 146, 75, 127, 124, 59, \
144, 143, 76, 168, 174, 87, 175, 183, 85, 163, \
170, 74, 132, 138, 51, 136, 139, 54, 134, 132, \
50, 134, 126, 52, 142, 128, 61, 141, 123, 57, \
156, 140, 65, 181, 169, 95, 180, 168, 111, 169, \
158, 104, 164, 155, 86, 135, 123, 64, 110, 98, \
47, 120, 114, 50, 113, 110, 41, 112, 103, 42, \
90, 75, 33, 73, 52, 25, 98, 78, 39, 88, \
75, 42, 38, 32, 26, 77, 73, 28, 155, 163, \
25, 164, 178, 38, 128, 131, 45, 184, 180, 110, \
189, 183, 125, 132, 128, 58, 117, 118, 35, 148, \
154, 67, 154, 161, 69, 155, 161, 72, 129, 134, \
51, 133, 136, 51, 142, 140, 55, 153, 145, 67, \
153, 140, 73, 138, 120, 57, 175, 160, 85, 188, \
176, 103, 175, 162, 112, 185, 175, 129, 172, 162, \
100, 137, 121, 67, 93, 81, 29, 107, 101, 37, \
108, 102, 38, 110, 102, 43, 91, 81, 36, 64, \
52, 24, 38, 26, 9, 29, 22, 6, 20, 15, \
15, 28, 22, 30, 99, 103, 23, 158, 178, 20, \
133, 140, 36, 141, 133, 88, 151, 139, 116, 126, \
118, 71, 101, 100, 24, 122, 127, 43, 133, 138, \
52, 119, 123, 40, 120, 124, 46, 113, 113, 40, \
116, 112, 36, 145, 136, 67, 151, 135, 79, 137, \
118, 60, 174, 157, 85, 204, 191, 120, 193, 178, \
134, 196, 186, 146, 175, 164, 107, 145, 127, 74, \
103, 90, 39, 107, 99, 40, 104, 93, 35, 106, \
97, 41, 105, 98, 50, 88, 83, 52, 33, 31, \
24, 10, 10, 4, 26, 23, 25, 42, 35, 44, \
31, 31, 9, 113, 131, 17, 137, 149, 38, 93, \
88, 53, 101, 89, 78, 81, 70, 45, 79, 73, \
18, 128, 126, 47, 132, 130, 47, 89, 87, 11, \
109, 104, 38, 116, 107, 49, 103, 92, 33, 126, \
112, 53, 148, 130, 75, 141, 121, 61, 176, 157, \
87, 198, 182, 114, 215, 198, 154, 196, 182, 140, \
160, 149, 89, 136, 122, 60, 106, 92, 42, 101, \
88, 44, 101, 88, 41, 109, 98, 44, 102, 91, \
40, 96, 87, 48, 63, 63, 43, 19, 21, 14, \
43, 40, 44, 70, 64, 56, 15, 12, 6, 50, \
58, 9, 124, 135, 35, 78, 78, 26, 47, 36, \
28, 47, 34, 20, 61, 52, 11, 109, 101, 39, \
122, 115, 47, 101, 94, 31, 106, 96, 41, 108, \
97, 45, 105, 92, 40, 120, 104, 50, 132, 114, \
58, 140, 119, 60, 170, 151, 83, 178, 161, 94, \
206, 188, 139, 180, 165, 116, 142, 130, 72, 111, \
98, 42, 92, 79, 30, 100, 85, 40, 104, 89, \
39, 109, 94, 37, 118, 102, 47, 127, 113, 65, \
118, 113, 78, 55, 53, 40, 61, 58, 59, 74, \
68, 50, 22, 18, 12, 27, 26, 19, 61, 64, \
17, 98, 98, 38, 70, 64, 24, 48, 36, 18, \
52, 38, 20, 66, 53, 18, 80, 69, 26, 91, \
80, 35, 95, 85, 39, 96, 86, 37, 101, 89, \
39, 117, 103, 51, 116, 99, 47, 127, 107, 52, \
146, 128, 65, 152, 137, 71, 167, 152, 97, 156, \
143, 87, 134, 121, 71, 98, 83, 41, 93, 79, \
29, 102, 87, 29, 125, 107, 47, 144, 127, 64, \
171, 153, 93, 171, 153, 97, 164, 149, 104, 102, \
95, 73, 73, 69, 66, 78, 71, 55, 33, 28, \
18, 30, 24, 28, 42, 36, 35, 59, 56, 22, \
101, 99, 34, 66, 57, 22, 47, 32, 22, 73, \
58, 36, 58, 43, 17, 49, 36, 7, 60, 49, \
12, 71, 62, 18, 88, 77, 31, 109, 96, 47, \
113, 97, 47, 111, 91, 40, 119, 101, 45, 126, \
111, 53, 118, 105, 50, 118, 106, 51, 93, 79, \
34, 78, 62, 27, 96, 83, 32, 132, 118, 51, \
176, 157, 90, 192, 172, 110, 178, 158, 99, 157, \
137, 77, 156, 137, 84, 113, 103, 75, 70, 67, \
61, 90, 81, 63, 35, 29, 13, 30, 24, 21, \
46, 39, 37, 66, 58, 45, 79, 72, 39, 64, \
56, 19, 51, 40, 11, 69, 55, 30, 55, 40, \
17, 53, 39, 12, 60, 48, 13, 77, 69, 27, \
77, 68, 24, 79, 67, 21, 89, 75, 28, 90, \
73, 23, 104, 87, 37, 110, 96, 48, 85, 72, \
28, 68, 54, 12, 56, 41, 7, 73, 58, 20, \
144, 131, 77, 194, 181, 115, 199, 183, 118, 184, \
166, 111, 147, 128, 77, 131, 113, 57, 145, 130, \
76, 107, 101, 71, 60, 60, 51, 91, 84, 51, \
65, 58, 39, 39, 31, 28, 45, 38, 34, 59, \
51, 39, 74, 65, 42, 68, 58, 32, 65, 54, \
23, 75, 63, 27, 62, 48, 20, 53, 39, 11, \
62, 50, 15, 88, 81, 40, 76, 67, 25, 85, \
73, 30, 90, 76, 31, 99, 83, 34, 96, 80, \
34, 82, 67, 30, 68, 54, 22, 67, 51, 24, \
82, 67, 35, 134, 121, 70, 195, 183, 127, 199, \
187, 128, 175, 161, 102, 141, 126, 80, 112, 96, \
54, 109, 95, 47, 122, 114, 64, 89, 88, 61, \
39, 41, 32, 85, 80, 46, 75, 68, 48, 39, \
33, 29, 46, 43, 41, 50, 46, 35, 43, 38, \
20, 71, 62, 49, 92, 81, 60, 80, 68, 32, \
68, 53, 21, 63, 48, 16, 65, 54, 15, 76, \
67, 21, 70, 59, 14, 88, 73, 36, 92, 76, \
34, 97, 81, 31, 99, 84, 37, 104, 91, 51, \
108, 96, 60, 119, 105, 68, 172, 156, 115, 201, \
188, 142, 198, 188, 142, 174, 164, 112, 143, 130, \
76, 102, 87, 49, 89, 73, 43, 99, 86, 53, \
87, 81, 51, 45, 44, 27, 32, 34, 28, 88, \
83, 61, 50, 43, 24, 44, 40, 35, 33, 33, \
30, 46, 46, 42, 31, 27, 24, 57, 49, 41, \
115, 106, 88, 96, 83, 53, 74, 57, 16, 84, \
68, 19, 119, 107, 55, 112, 99, 40, 85, 72, \
20, 74, 56, 25, 75, 59, 22, 94, 78, 29, \
151, 137, 87, 174, 162, 114, 138, 129, 82, 170, \
159, 106, 230, 217, 169, 210, 198, 161, 166, 156, \
118, 149, 138, 90, 127, 113, 63, 81, 65, 31, \
86, 71, 44, 120, 107, 83, 66, 61, 48, 24, \
21, 13, 39, 38, 36, 79, 72, 57, 68, 58, \
45, 63, 56, 56, 31, 29, 30, 41, 39, 39, \
42, 36, 39, 52, 45, 42, 98, 89, 78, 117, \
103, 70, 138, 122, 52, 145, 131, 48, 165, 151, \
79, 173, 156, 85, 128, 113, 53, 56, 41, 14, \
57, 45, 17, 140, 126, 78, 194, 180, 130, 164, \
152, 104, 170, 162, 115, 208, 199, 149, 206, 196, \
147, 176, 163, 119, 148, 133, 88, 127, 111, 62, \
97, 81, 35, 77, 63, 26, 109, 97, 63, 105, \
96, 67, 44, 39, 28, 22, 19, 13, 33, 32, \
31, 88, 78, 67, 108, 96, 85, 75, 67, 67, \
46, 42, 42, 49, 44, 45, 53, 47, 52, 51, \
46, 46, 70, 62, 58, 103, 91, 58, 142, 129, \
45, 184, 171, 70, 165, 149, 66, 175, 157, 80, \
150, 135, 70, 62, 48, 22, 86, 76, 51, 189, \
175, 127, 179, 165, 115, 154, 142, 94, 215, 206, \
160, 195, 187, 139, 164, 154, 105, 148, 134, 84, \
130, 112, 62, 105, 86, 39, 84, 67, 26, 101, \
88, 50, 113, 106, 68, 74, 69, 40, 25, 23, \
15, 19, 18, 14, 33, 31, 31, 109, 99, 84, \
130, 118, 100, 88, 79, 70, 71, 65, 60, 57, \
50, 48, 63, 58, 62, 62, 59, 60, 57, 53, \
50, 93, 85, 60, 125, 114, 44, 156, 143, 54, \
160, 144, 69, 166, 147, 77, 151, 136, 75, 99, \
85, 54, 144, 133, 99, 208, 194, 144, 164, 150, \
100, 179, 167, 119, 197, 188, 141, 154, 143, 98, \
126, 113, 65, 119, 103, 53, 111, 91, 44, 88, \
67, 26, 93, 75, 39, 112, 101, 64, 96, 91, \
58, 40, 38, 20, 13, 12, 9, 22, 21, 20, \
48, 45, 45, 135, 123, 99, 125, 112, 82, 100, \
92, 70, 99, 92, 79, 74, 66, 59, 66, 62, \
60, 69, 68, 65, 65, 66, 62, 105, 103, 87, \
142, 132, 91, 145, 130, 75, 135, 118, 65, 121, \
105, 51, 120, 105, 54, 111, 96, 61, 167, 154, \
110, 195, 180, 129, 164, 150, 100, 160, 148, 100, \
138, 129, 82, 129, 113, 70, 106, 86, 39, 103, \
86, 37, 85, 67, 27, 89, 69, 37, 122, 103, \
70, 91, 80, 46, 81, 77, 52, 25, 25, 18, \
12, 13, 14, 37, 35, 37, 68, 63, 65, 125, \
117, 91, 117, 108, 76, 107, 97, 67, 111, 102, \
80, 82, 75, 63, 74, 69, 65, 83, 81, 77, \
75, 76, 70, 71, 70, 62, 72, 63, 48, 108, \
95, 72, 124, 112, 82, 87, 74, 39, 69, 55, \
20, 78, 60, 30, 158, 140, 93, 163, 146, 94, \
131, 117, 68, 117, 104, 57, 111, 99, 54, 106, \
88, 47, 97, 76, 34, 86, 67, 25, 92, 75, \
41, 131, 113, 83, 119, 101, 72, 61, 50, 27, \
37, 31, 20, 39, 37, 34, 45, 46, 47, 60, \
59, 60, 72, 68, 69, 103, 100, 84, 111, 107, \
84, 130, 119, 87, 113, 103, 74, 83, 76, 60, \
88, 82, 76, 90, 86, 83, 86, 83, 79, 73, \
69, 66, 79, 73, 69, 69, 62, 57, 73, 66, \
56, 90, 81, 57, 103, 90, 65, 104, 87, 57, \
149, 131, 85, 152, 132, 85, 121, 106, 61, 108, \
95, 52, 105, 87, 48, 90, 72, 39, 85, 67, \
37, 116, 99, 66, 136, 120, 86, 133, 118, 87, \
72, 59, 38, 32, 21, 15, 53, 45, 45, 74, \
70, 68, 82, 81, 80, 87, 86, 85, 77, 75, \
74, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '10234';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a9ec66295414685d9eb7ec21fafac27c3';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_deer10';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{71, 83, 14, 54, 65, 13, 52, 52, 19, 66, 58, \
16, 64, 67, 6, 61, 66, 6, 69, 66, 20, \
71, 67, 25, 80, 79, 27, 71, 71, 10, 62, \
58, 8, 61, 56, 15, 66, 70, 13, 92, 108, \
23, 77, 81, 20, 55, 62, 9, 61, 67, 12, \
61, 55, 15, 56, 59, 12, 58, 79, 5, 73, \
93, 14, 64, 71, 16, 57, 50, 11, 73, 62, \
9, 76, 72, 9, 66, 69, 14, 52, 61, 16, \
56, 74, 26, 80, 106, 45, 123, 153, 85, 98, \
129, 57, 97, 129, 54, 80, 88, 13, 75, 85, \
11, 78, 84, 21, 70, 67, 25, 71, 70, 26, \
55, 61, 17, 63, 71, 34, 84, 89, 45, 66, \
63, 11, 82, 74, 18, 65, 59, 14, 53, 55, \
12, 101, 116, 44, 115, 137, 36, 55, 64, 5, \
33, 40, 0, 56, 58, 12, 67, 58, 15, 70, \
78, 16, 81, 111, 11, 88, 115, 19, 50, 60, \
10, 52, 43, 12, 81, 64, 22, 72, 62, 9, \
56, 54, 7, 58, 68, 18, 85, 110, 47, 110, \
148, 66, 108, 141, 67, 68, 94, 33, 79, 106, \
42, 73, 83, 27, 75, 84, 30, 74, 85, 28, \
66, 73, 38, 64, 66, 38, 55, 71, 24, 92, \
122, 57, 82, 104, 39, 79, 80, 30, 111, 98, \
56, 82, 78, 27, 85, 98, 27, 142, 166, 71, \
122, 148, 47, 102, 123, 38, 76, 96, 19, 69, \
78, 11, 68, 66, 12, 83, 103, 26, 99, 132, \
32, 100, 125, 36, 60, 73, 27, 31, 31, 15, \
53, 46, 26, 47, 37, 13, 45, 40, 3, 62, \
69, 10, 82, 100, 34, 94, 121, 58, 93, 120, \
61, 77, 100, 46, 65, 88, 38, 58, 70, 29, \
65, 82, 43, 74, 90, 47, 75, 83, 50, 48, \
57, 24, 55, 77, 25, 83, 122, 44, 81, 114, \
36, 145, 146, 90, 168, 155, 107, 139, 140, 71, \
132, 151, 57, 133, 161, 62, 129, 155, 70, 114, \
138, 48, 127, 150, 45, 125, 133, 48, 87, 84, \
33, 78, 97, 32, 113, 131, 57, 107, 116, 60, \
52, 62, 30, 34, 40, 29, 32, 34, 23, 41, \
33, 17, 51, 42, 21, 42, 42, 14, 41, 54, \
17, 76, 97, 53, 101, 128, 69, 92, 118, 61, \
71, 92, 49, 50, 60, 23, 48, 66, 27, 52, \
64, 30, 60, 63, 33, 47, 57, 20, 77, 97, \
46, 84, 118, 50, 79, 110, 42, 159, 155, 105, \
152, 144, 90, 150, 160, 83, 145, 170, 76, 112, \
145, 53, 86, 117, 44, 73, 94, 39, 94, 109, \
44, 157, 155, 91, 163, 148, 96, 132, 137, 66, \
151, 160, 89, 100, 103, 58, 53, 61, 35, 27, \
34, 23, 20, 22, 15, 31, 28, 17, 33, 32, \
19, 16, 23, 6, 63, 83, 46, 115, 146, 82, \
102, 135, 67, 87, 114, 60, 58, 79, 39, 52, \
58, 28, 59, 68, 40, 63, 70, 46, 62, 65, \
43, 54, 62, 36, 63, 78, 39, 61, 88, 36, \
67, 88, 37, 161, 147, 111, 151, 147, 95, 121, \
140, 69, 111, 140, 62, 112, 146, 67, 79, 111, \
38, 78, 102, 45, 86, 100, 54, 155, 145, 105, \
184, 157, 113, 165, 155, 94, 143, 154, 87, 75, \
86, 40, 33, 39, 18, 21, 24, 18, 22, 25, \
22, 20, 25, 19, 26, 37, 19, 52, 73, 35, \
102, 133, 73, 110, 148, 71, 86, 119, 53, 76, \
102, 53, 49, 71, 32, 67, 81, 42, 77, 89, \
53, 81, 94, 59, 79, 91, 59, 64, 74, 48, \
67, 78, 44, 71, 92, 45, 88, 101, 55, 186, \
163, 133, 139, 133, 83, 93, 113, 51, 84, 109, \
50, 84, 113, 50, 94, 122, 52, 110, 135, 59, \
101, 116, 64, 147, 137, 105, 183, 156, 118, 130, \
120, 78, 81, 97, 47, 47, 62, 26, 22, 26, \
11, 21, 22, 15, 20, 25, 16, 21, 33, 13, \
57, 76, 37, 97, 123, 64, 93, 125, 57, 88, \
122, 56, 86, 116, 58, 67, 93, 42, 48, 74, \
27, 81, 104, 48, 72, 93, 41, 75, 95, 50, \
79, 100, 56, 64, 73, 48, 75, 81, 58, 84, \
98, 51, 111, 116, 71, 193, 170, 135, 146, 144, \
84, 104, 122, 57, 82, 103, 43, 110, 133, 65, \
141, 160, 88, 136, 154, 79, 108, 127, 71, 136, \
131, 95, 154, 142, 95, 100, 104, 50, 60, 75, \
27, 54, 67, 37, 63, 70, 51, 67, 73, 51, \
40, 46, 23, 30, 44, 13, 71, 92, 45, 73, \
96, 37, 78, 104, 40, 104, 131, 72, 100, 128, \
70, 77, 104, 47, 70, 96, 43, 90, 118, 42, \
80, 107, 36, 76, 101, 41, 86, 110, 45, 78, \
87, 45, 84, 89, 61, 117, 128, 68, 150, 148, \
101, 191, 174, 133, 158, 165, 91, 117, 140, 66, \
134, 158, 85, 149, 174, 87, 142, 160, 77, 146, \
161, 78, 121, 150, 74, 143, 142, 94, 161, 156, \
114, 118, 132, 76, 87, 95, 51, 82, 93, 64, \
76, 93, 56, 104, 123, 67, 92, 105, 57, 81, \
94, 56, 76, 94, 50, 70, 91, 38, 117, 141, \
79, 125, 152, 83, 94, 126, 57, 83, 115, 51, \
73, 100, 45, 103, 128, 56, 96, 121, 54, 95, \
118, 56, 112, 137, 60, 126, 148, 68, 148, 168, \
95, 141, 162, 74, 169, 172, 113, 183, 168, 128, \
159, 167, 94, 127, 151, 78, 116, 145, 73, 107, \
139, 50, 124, 151, 59, 158, 179, 82, 136, 166, \
80, 158, 153, 106, 161, 154, 116, 113, 128, 76, \
66, 80, 42, 42, 59, 28, 67, 89, 35, 101, \
126, 50, 104, 126, 59, 114, 130, 75, 102, 119, \
62, 116, 137, 77, 125, 151, 87, 95, 125, 58, \
81, 118, 46, 87, 125, 55, 78, 110, 53, 73, \
90, 51, 62, 79, 43, 58, 75, 37, 99, 121, \
55, 142, 172, 77, 136, 168, 76, 148, 177, 75, \
182, 189, 124, 180, 165, 123, 143, 145, 78, 92, \
110, 50, 72, 95, 38, 101, 132, 51, 144, 173, \
80, 165, 190, 95, 129, 158, 80, 151, 141, 99, \
148, 139, 96, 104, 126, 54, 62, 83, 24, 22, \
37, 6, 37, 49, 18, 84, 100, 49, 82, 103, \
44, 81, 104, 44, 70, 93, 33, 58, 79, 26, \
66, 86, 38, 74, 94, 50, 76, 107, 49, 91, \
127, 62, 81, 111, 58, 33, 46, 22, 38, 50, \
29, 39, 53, 24, 88, 109, 47, 133, 163, 77, \
107, 141, 61, 140, 172, 76, 163, 174, 101, 191, \
178, 131, 150, 145, 91, 63, 71, 30, 61, 82, \
33, 111, 139, 65, 122, 146, 66, 86, 107, 31, \
90, 112, 54, 154, 140, 109, 158, 147, 99, 147, \
170, 78, 143, 164, 80, 114, 121, 87, 53, 51, \
48, 30, 32, 19, 50, 62, 28, 51, 77, 24, \
67, 97, 42, 49, 72, 30, 67, 81, 52, 83, \
92, 71, 51, 70, 32, 68, 95, 44, 62, 84, \
38, 27, 40, 20, 36, 45, 30, 44, 57, 28, \
82, 102, 46, 106, 129, 58, 83, 109, 43, 108, \
137, 58, 129, 145, 64, 175, 167, 124, 206, 191, \
168, 87, 92, 57, 76, 105, 36, 111, 145, 58, \
82, 98, 39, 93, 101, 52, 96, 100, 60, 143, \
127, 104, 185, 164, 131, 157, 164, 96, 171, 176, \
116, 202, 196, 165, 77, 73, 59, 41, 43, 31, \
56, 65, 42, 63, 86, 36, 77, 104, 50, 56, \
77, 37, 63, 79, 49, 80, 93, 66, 69, 82, \
55, 60, 76, 37, 67, 85, 31, 28, 43, 12, \
30, 40, 18, 55, 68, 39, 85, 104, 58, 98, \
118, 57, 79, 100, 42, 65, 87, 33, 71, 84, \
39, 76, 73, 51, 163, 143, 126, 188, 177, 146, \
154, 163, 104, 130, 146, 72, 115, 121, 70, 136, \
131, 99, 139, 132, 100, 140, 123, 89, 180, 156, \
124, 147, 143, 104, 194, 195, 153, 136, 131, 98, \
49, 50, 28, 48, 56, 36, 47, 61, 35, 69, \
86, 45, 76, 90, 49, 53, 65, 33, 54, 63, \
35, 71, 80, 51, 73, 83, 52, 82, 94, 50, \
112, 128, 63, 42, 59, 18, 46, 58, 25, 71, \
85, 50, 78, 96, 54, 82, 97, 54, 72, 87, \
44, 57, 72, 40, 43, 56, 36, 44, 55, 27, \
81, 74, 41, 167, 151, 119, 199, 186, 147, 185, \
176, 128, 135, 125, 90, 109, 87, 68, 128, 108, \
81, 146, 124, 90, 173, 146, 114, 174, 164, 132, \
136, 143, 102, 76, 85, 45, 53, 62, 30, 47, \
58, 32, 48, 60, 35, 53, 61, 33, 57, 62, \
36, 57, 63, 40, 47, 55, 30, 56, 66, 35, \
72, 86, 42, 87, 105, 47, 107, 126, 62, 53, \
70, 25, 68, 81, 40, 82, 98, 54, 79, 101, \
50, 81, 100, 49, 82, 100, 41, 70, 87, 35, \
83, 105, 56, 123, 154, 72, 147, 164, 87, 184, \
178, 135, 189, 168, 141, 174, 148, 123, 133, 108, \
93, 135, 102, 87, 163, 135, 112, 115, 89, 66, \
138, 111, 80, 138, 129, 83, 72, 90, 40, 62, \
87, 41, 59, 77, 37, 44, 55, 25, 50, 54, \
34, 55, 59, 40, 46, 52, 32, 38, 47, 28, \
43, 56, 31, 56, 73, 38, 71, 92, 47, 86, \
111, 54, 92, 118, 52, 88, 108, 42, 70, 82, \
36, 66, 82, 39, 97, 124, 57, 116, 149, 70, \
107, 135, 59, 92, 115, 43, 108, 133, 57, 127, \
161, 68, 151, 177, 95, 206, 206, 168, 190, 166, \
156, 150, 118, 108, 132, 103, 93, 158, 127, 112, \
124, 97, 76, 90, 71, 46, 117, 111, 71, 101, \
110, 55, 62, 84, 32, 71, 98, 48, 59, 86, \
36, 47, 66, 29, 46, 57, 35, 46, 58, 35, \
31, 44, 22, 29, 40, 22, 45, 61, 33, 58, \
83, 37, 76, 102, 47, 84, 109, 50, 83, 112, \
48, 80, 101, 32, 72, 85, 40, 72, 84, 47, \
90, 112, 45, 108, 141, 52, 100, 130, 45, 111, \
134, 56, 105, 127, 48, 108, 132, 51, 122, 136, \
76, 153, 146, 125, 156, 130, 129, 141, 111, 102, \
103, 76, 63, 107, 74, 63, 98, 64, 50, 100, \
80, 54, 107, 110, 62, 90, 114, 46, 82, 106, \
39, 112, 137, 65, 93, 125, 48, 88, 118, 51, \
58, 82, 31, 37, 55, 21, 20, 34, 11, 36, \
46, 25, 47, 63, 30, 64, 89, 38, 81, 112, \
43, 74, 104, 36, 65, 92, 35, 44, 71, 12, \
63, 89, 42, 59, 83, 41, 82, 109, 41, 106, \
141, 51, 92, 128, 42, 97, 127, 53, 91, 114, \
46, 106, 123, 57, 132, 128, 91, 139, 119, 116, \
134, 108, 111, 127, 100, 91, 97, 72, 62, 87, \
52, 48, 125, 85, 78, 127, 97, 78, 129, 126, \
82, 102, 127, 57, 97, 124, 52, 111, 137, 62, \
109, 141, 58, 88, 118, 42, 80, 103, 44, 56, \
73, 34, 46, 57, 29, 56, 65, 36, 42, 56, \
21, 59, 81, 34, 81, 112, 49, 84, 114, 51, \
45, 67, 23, 92, 96, 46, 85, 99, 53, 64, \
82, 35, 76, 96, 25, 101, 118, 43, 94, 110, \
44, 75, 86, 35, 96, 96, 58, 136, 123, 92, \
153, 129, 112, 141, 114, 117, 123, 97, 102, 109, \
85, 81, 104, 79, 81, 98, 68, 68, 120, 83, \
80, 123, 87, 78, 108, 93, 65, 78, 94, 43, \
89, 120, 55, 90, 124, 48, 103, 137, 55, 104, \
130, 55, 82, 96, 39, 72, 84, 38, 81, 92, \
53, 80, 88, 50, 49, 60, 26, 42, 60, 28, \
49, 70, 31, 58, 76, 37, 24, 36, 12, 217, \
182, 144, 207, 180, 145, 202, 179, 145, 192, 170, \
130, 187, 164, 127, 183, 160, 126, 176, 151, 122, \
172, 141, 121, 164, 128, 116, 141, 112, 104, 121, \
97, 98, 116, 95, 101, 105, 87, 92, 90, 72, \
78, 91, 73, 72, 89, 62, 58, 108, 75, 69, \
104, 84, 66, 94, 96, 63, 60, 83, 38, 80, \
111, 49, 118, 149, 72, 107, 132, 55, 96, 112, \
48, 82, 94, 41, 102, 116, 64, 107, 126, 65, \
98, 119, 57, 63, 82, 39, 37, 52, 23, 34, \
47, 20, 37, 50, 24, 223, 179, 146, 224, 182, \
154, 229, 189, 165, 219, 181, 159, 213, 176, 157, \
212, 177, 154, 209, 175, 149, 195, 160, 139, 169, \
134, 119, 139, 112, 105, 120, 98, 98, 107, 88, \
95, 94, 78, 89, 80, 68, 73, 71, 62, 62, \
58, 41, 41, 82, 57, 55, 110, 89, 81, 129, \
119, 103, 75, 84, 50, 56, 77, 29, 66, 91, \
38, 61, 85, 32, 69, 87, 38, 106, 118, 71, \
101, 116, 68, 103, 127, 62, 103, 130, 54, 67, \
87, 35, 55, 74, 33, 59, 81, 33, 56, 79, \
31, 199, 159, 125, 204, 167, 137, 221, 185, 159, \
230, 195, 171, 216, 181, 160, 206, 172, 148, 199, \
165, 139, 184, 149, 127, 168, 133, 118, 148, 118, \
112, 129, 104, 106, 110, 89, 97, 90, 76, 85, \
74, 66, 70, 56, 51, 50, 39, 29, 28, 56, \
37, 39, 87, 66, 69, 106, 88, 88, 109, 103, \
80, 73, 84, 43, 64, 89, 36, 101, 131, 62, \
111, 136, 56, 122, 135, 78, 70, 83, 47, 61, \
83, 31, 88, 114, 47, 63, 83, 33, 53, 76, \
31, 59, 88, 33, 65, 92, 38, 208, 171, 136, \
202, 167, 136, 220, 186, 159, 236, 204, 180, 236, \
202, 181, 233, 199, 175, 214, 180, 154, 176, 141, \
120, 162, 126, 112, 148, 115, 110, 126, 98, 100, \
103, 82, 90, 77, 65, 74, 63, 58, 61, 45, \
38, 30, 32, 22, 11, 36, 25, 19, 41, 29, \
27, 60, 46, 46, 88, 71, 62, 90, 90, 51, \
120, 149, 72, 124, 162, 69, 121, 149, 62, 112, \
126, 68, 51, 64, 29, 80, 101, 52, 94, 119, \
54, 76, 97, 40, 57, 80, 29, 84, 110, 52, \
85, 107, 49, 208, 172, 135, 193, 158, 124, 181, \
147, 115, 199, 165, 136, 224, 190, 164, 240, 206, \
180, 243, 209, 183, 227, 192, 170, 188, 153, 135, \
149, 114, 106, 112, 83, 91, 82, 66, 71, 53, \
46, 50, 76, 70, 60, 117, 108, 66, 112, 105, \
61, 100, 100, 68, 46, 48, 25, 49, 51, 26, \
80, 78, 42, 109, 121, 57, 112, 143, 53, 96, \
133, 48, 80, 107, 48, 85, 100, 56, 69, 83, \
41, 91, 111, 59, 98, 122, 56, 92, 116, 50, \
88, 114, 42, 104, 130, 52, 104, 125, 55, 188, \
152, 114, 197, 162, 124, 193, 158, 120, 181, 146, \
108, 180, 145, 112, 202, 167, 138, 226, 191, 163, \
245, 211, 185, 233, 198, 173, 166, 130, 115, 89, \
64, 72, 51, 47, 40, 59, 59, 46, 110, 104, \
68, 157, 153, 81, 142, 146, 78, 122, 134, 78, \
84, 100, 46, 92, 107, 47, 105, 126, 58, 100, \
128, 52, 86, 117, 33, 100, 133, 54, 80, 111, \
47, 77, 100, 52, 78, 96, 48, 83, 105, 46, \
99, 125, 56, 106, 135, 58, 121, 152, 66, 116, \
145, 63, 93, 118, 49, 163, 128, 89, 188, 153, \
115, 197, 162, 124, 186, 151, 113, 175, 139, 103, \
172, 136, 102, 176, 140, 108, 197, 160, 131, 234, \
197, 168, 195, 161, 142, 65, 45, 40, 59, 61, \
31, 93, 98, 62, 98, 96, 47, 113, 117, 55, \
94, 104, 49, 101, 113, 55, 117, 131, 62, 116, \
132, 51, 101, 122, 46, 79, 105, 30, 101, 130, \
46, 115, 146, 61, 100, 131, 52, 85, 112, 49, \
77, 102, 46, 82, 110, 48, 87, 119, 46, 94, \
129, 43, 122, 155, 69, 94, 123, 46, 92, 118, \
45, 192, 156, 118, 194, 159, 122, 189, 154, 117, \
179, 144, 106, 187, 150, 111, 201, 162, 124, 184, \
146, 109, 160, 121, 88, 202, 163, 130, 190, 158, \
132, 81, 66, 47, 102, 111, 58, 88, 98, 50, \
80, 79, 34, 108, 109, 55, 87, 90, 37, 91, \
94, 33, 134, 143, 69, 143, 160, 75, 128, 151, \
62, 130, 155, 65, 150, 177, 87, 130, 159, 69, \
129, 160, 71, 100, 128, 51, 82, 107, 44, 73, \
99, 41, 62, 92, 28, 92, 124, 48, 125, 157, \
72, 131, 161, 72, 135, 163, 75, 193, 161, 118, \
194, 161, 119, 179, 145, 104, 178, 142, 102, 181, \
145, 101, 161, 126, 81, 154, 120, 76, 133, 98, \
55, 133, 99, 55, 136, 109, 69, 117, 106, 71, \
110, 118, 64, 61, 72, 27, 104, 108, 62, 136, \
132, 73, 123, 116, 56, 158, 153, 88, 138, 141, \
71, 103, 118, 45, 102, 122, 45, 127, 147, 70, \
88, 108, 39, 55, 76, 14, 95, 116, 54, 124, \
143, 75, 85, 101, 38, 52, 67, 18, 56, 74, \
29, 57, 78, 25, 82, 108, 32, 136, 165, 71, \
124, 152, 55, 227, 224, 153, 221, 213, 145, 219, \
204, 143, 214, 196, 141, 201, 189, 127, 193, 186, \
119, 203, 198, 128, 207, 206, 131, 199, 199, 122, \
196, 192, 118, 214, 209, 149, 205, 205, 155, 177, \
183, 128, 203, 215, 137, 208, 212, 135, 221, 220, \
148, 218, 222, 144, 186, 194, 114, 179, 190, 112, \
176, 187, 116, 190, 199, 131, 162, 170, 103, 154, \
158, 98, 147, 149, 97, 135, 135, 86, 178, 179, \
118, 170, 174, 112, 171, 178, 127, 150, 161, 107, \
153, 168, 99, 151, 167, 91, 157, 174, 93, 230, \
250, 162, 226, 243, 155, 229, 241, 158, 231, 239, \
163, 224, 232, 153, 228, 239, 155, 228, 241, 155, \
229, 245, 157, 229, 246, 157, 229, 240, 157, 234, \
241, 160, 232, 237, 157, 237, 241, 164, 233, 235, \
164, 227, 228, 160, 169, 171, 104, 188, 192, 121, \
236, 242, 164, 232, 240, 156, 231, 238, 156, 234, \
239, 156, 233, 237, 154, 245, 245, 170, 189, 186, \
123, 82, 75, 30, 200, 199, 134, 235, 242, 161, \
220, 230, 154, 228, 240, 160, 228, 237, 161, 224, \
231, 160, 234, 241, 167, 224, 236, 149, 226, 236, \
146, 230, 240, 150, 229, 237, 152, 228, 232, 146, \
233, 236, 149, 232, 238, 151, 231, 238, 153, 228, \
237, 152, 228, 239, 156, 228, 239, 152, 223, 231, \
140, 226, 229, 146, 229, 228, 156, 234, 236, 170, \
185, 189, 131, 117, 119, 69, 183, 184, 127, 227, \
229, 162, 227, 231, 156, 224, 229, 151, 228, 231, \
154, 238, 238, 168, 204, 200, 142, 75, 60, 27, \
167, 160, 110, 228, 236, 158, 219, 231, 152, 224, \
232, 152, 221, 227, 147, 225, 231, 154, 228, 234, \
156, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '10544';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a211b77cfe28a05d92145cfa793963890';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_airplane10';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{122, 232, 193, 118, 229, 189, 117, 230, 189, 120, 228, \
189, 123, 227, 189, 130, 223, 189, 126, 225, 189, \
124, 226, 189, 126, 225, 189, 123, 226, 189, 123, \
226, 189, 123, 226, 189, 123, 226, 189, 123, 226, \
189, 123, 226, 189, 123, 226, 189, 123, 226, 189, \
123, 226, 189, 123, 226, 189, 123, 226, 189, 123, \
226, 189, 122, 226, 189, 124, 226, 189, 124, 226, \
188, 118, 229, 190, 121, 227, 191, 124, 225, 193, \
122, 225, 193, 154, 233, 207, 173, 236, 216, 137, \
224, 195, 121, 231, 194, 123, 234, 194, 122, 228, \
190, 118, 231, 190, 115, 232, 191, 122, 229, 191, \
131, 224, 191, 128, 226, 191, 126, 227, 191, 127, \
226, 191, 123, 228, 190, 123, 228, 190, 123, 228, \
190, 123, 228, 190, 123, 228, 190, 123, 228, 190, \
123, 228, 190, 123, 228, 190, 123, 228, 190, 123, \
228, 190, 123, 228, 190, 123, 228, 190, 123, 228, \
190, 123, 228, 190, 119, 230, 190, 115, 232, 191, \
127, 227, 193, 141, 222, 197, 138, 221, 196, 185, \
237, 221, 239, 251, 249, 189, 242, 225, 130, 233, \
198, 127, 230, 193, 130, 223, 189, 127, 225, 190, \
117, 230, 190, 119, 229, 191, 126, 227, 192, 120, \
230, 192, 119, 229, 191, 124, 226, 191, 123, 227, \
190, 123, 227, 190, 123, 227, 190, 123, 227, 190, \
123, 227, 190, 123, 227, 190, 123, 227, 190, 123, \
227, 190, 123, 227, 190, 123, 227, 190, 123, 227, \
190, 123, 227, 190, 123, 227, 190, 123, 227, 189, \
118, 230, 189, 116, 229, 189, 147, 231, 203, 187, \
236, 223, 185, 231, 219, 211, 240, 233, 255, 246, \
253, 231, 248, 246, 147, 236, 208, 121, 233, 193, \
126, 226, 190, 128, 225, 190, 117, 231, 191, 129, \
228, 194, 164, 234, 211, 162, 235, 211, 127, 228, \
195, 120, 229, 191, 123, 227, 190, 123, 227, 190, \
123, 227, 190, 123, 227, 190, 123, 227, 190, 123, \
227, 190, 123, 227, 190, 123, 227, 190, 123, 227, \
190, 123, 227, 190, 123, 227, 190, 123, 227, 190, \
123, 227, 190, 123, 227, 190, 121, 229, 189, 122, \
226, 189, 173, 238, 218, 234, 253, 251, 241, 252, \
252, 240, 253, 252, 253, 248, 254, 245, 244, 248, \
165, 234, 213, 113, 238, 194, 117, 230, 189, 130, \
227, 192, 122, 227, 190, 163, 232, 210, 235, 249, \
247, 235, 249, 247, 155, 232, 208, 117, 229, 191, \
123, 227, 190, 123, 227, 190, 123, 227, 190, 123, \
227, 190, 123, 227, 190, 123, 227, 190, 123, 227, \
190, 123, 227, 190, 123, 227, 190, 123, 227, 190, \
123, 227, 190, 123, 227, 190, 123, 227, 190, 123, \
227, 190, 123, 228, 189, 124, 225, 189, 164, 223, \
204, 234, 244, 243, 254, 248, 254, 247, 252, 254, \
249, 250, 254, 253, 244, 253, 203, 245, 235, 137, \
240, 203, 134, 229, 195, 169, 232, 209, 170, 230, \
208, 209, 239, 231, 247, 248, 251, 229, 247, 244, \
156, 231, 209, 121, 226, 191, 123, 227, 190, 123, \
227, 190, 123, 227, 190, 123, 227, 190, 123, 227, \
190, 123, 227, 190, 123, 227, 190, 123, 227, 190, \
123, 227, 190, 123, 227, 190, 123, 227, 190, 123, \
227, 190, 123, 227, 190, 124, 227, 190, 119, 228, \
188, 122, 228, 190, 167, 230, 210, 231, 242, 240, \
255, 246, 254, 252, 248, 255, 250, 249, 255, 255, \
247, 255, 235, 252, 250, 176, 241, 219, 169, 228, \
208, 233, 249, 244, 240, 250, 247, 248, 251, 253, \
228, 250, 246, 165, 237, 214, 130, 226, 196, 126, \
225, 193, 121, 228, 190, 124, 226, 191, 126, 225, \
191, 125, 226, 192, 124, 227, 191, 123, 227, 190, \
121, 228, 190, 122, 228, 190, 125, 226, 190, 124, \
227, 190, 121, 228, 189, 123, 227, 190, 131, 224, \
194, 129, 226, 192, 116, 230, 188, 119, 229, 190, \
167, 235, 213, 234, 251, 247, 255, 248, 254, 254, \
245, 255, 254, 246, 255, 254, 248, 254, 250, 253, \
255, 191, 240, 227, 192, 231, 222, 248, 246, 250, \
250, 249, 253, 252, 249, 255, 227, 247, 242, 156, \
234, 204, 126, 227, 192, 125, 226, 191, 121, 228, \
190, 136, 222, 196, 143, 222, 200, 132, 224, 195, \
126, 226, 191, 123, 228, 190, 119, 229, 189, 122, \
229, 188, 127, 226, 189, 125, 226, 191, 117, 231, \
187, 126, 226, 190, 159, 219, 207, 149, 223, 201, \
116, 230, 189, 123, 227, 190, 166, 233, 210, 227, \
247, 240, 251, 247, 251, 252, 246, 254, 251, 248, \
255, 247, 248, 252, 247, 254, 255, 239, 254, 254, \
235, 247, 247, 253, 245, 253, 250, 248, 254, 251, \
248, 253, 251, 244, 249, 216, 245, 233, 147, 233, \
206, 128, 224, 192, 135, 208, 179, 143, 192, 176, \
163, 208, 195, 167, 228, 205, 138, 228, 193, 124, \
227, 188, 125, 226, 188, 123, 228, 188, 121, 229, \
189, 123, 227, 192, 119, 230, 186, 133, 224, 193, \
182, 220, 218, 167, 222, 209, 121, 227, 190, 125, \
227, 190, 151, 233, 204, 185, 236, 217, 217, 245, \
236, 222, 246, 242, 219, 247, 242, 208, 243, 235, \
199, 243, 231, 255, 253, 255, 251, 249, 253, 251, \
250, 254, 249, 250, 253, 250, 249, 253, 251, 243, \
249, 220, 245, 239, 148, 236, 212, 135, 224, 197, \
160, 202, 184, 154, 169, 163, 183, 190, 187, 229, \
241, 231, 191, 239, 216, 144, 225, 193, 128, 224, \
187, 119, 229, 188, 116, 231, 190, 123, 227, 191, \
122, 228, 187, 141, 222, 197, 193, 219, 222, 177, \
221, 211, 126, 225, 190, 123, 227, 190, 124, 226, \
190, 133, 224, 191, 152, 230, 202, 158, 229, 208, \
154, 230, 207, 145, 228, 202, 138, 228, 199, 255, \
251, 255, 252, 247, 251, 248, 252, 253, 251, 248, \
252, 254, 249, 254, 232, 245, 243, 164, 230, 211, \
129, 223, 197, 163, 222, 208, 223, 234, 233, 246, \
243, 248, 250, 243, 249, 250, 247, 247, 242, 249, \
243, 197, 236, 220, 139, 225, 193, 117, 230, 189, \
120, 229, 190, 123, 227, 191, 121, 228, 188, 143, \
222, 200, 197, 220, 226, 180, 223, 213, 127, 225, \
190, 122, 227, 190, 118, 229, 189, 119, 229, 190, \
123, 227, 191, 125, 226, 192, 123, 228, 193, 119, \
229, 192, 119, 235, 196, 247, 254, 255, 246, 247, \
249, 241, 250, 248, 249, 247, 251, 246, 249, 251, \
203, 242, 233, 129, 226, 197, 133, 221, 194, 171, \
208, 200, 205, 212, 219, 237, 236, 246, 247, 243, \
252, 248, 248, 254, 253, 245, 253, 237, 241, 243, \
167, 217, 202, 136, 223, 193, 127, 226, 190, 122, \
227, 190, 119, 229, 189, 142, 221, 202, 193, 217, \
224, 178, 225, 213, 124, 226, 190, 121, 228, 190, \
120, 229, 190, 121, 228, 190, 122, 228, 190, 122, \
228, 192, 120, 229, 192, 118, 230, 191, 118, 236, \
195, 199, 247, 234, 202, 241, 229, 194, 239, 225, \
207, 244, 233, 194, 241, 227, 160, 234, 213, 117, \
231, 194, 130, 225, 188, 133, 173, 157, 147, 157, \
163, 193, 200, 211, 202, 208, 222, 214, 221, 231, \
233, 236, 246, 231, 228, 239, 164, 171, 177, 159, \
200, 189, 144, 222, 193, 126, 226, 190, 122, 227, \
190, 145, 219, 205, 190, 213, 223, 175, 226, 213, \
122, 227, 189, 122, 228, 190, 123, 227, 190, 124, \
227, 190, 125, 227, 190, 125, 227, 190, 124, 227, \
190, 122, 228, 190, 123, 233, 194, 141, 233, 202, \
144, 229, 200, 138, 227, 196, 141, 230, 200, 136, \
226, 197, 126, 225, 195, 112, 233, 191, 131, 226, \
182, 138, 170, 146, 144, 143, 146, 169, 175, 185, \
156, 169, 184, 160, 177, 191, 181, 201, 214, 189, \
200, 215, 160, 157, 173, 158, 168, 170, 148, 191, \
174, 139, 220, 189, 130, 223, 190, 154, 218, 210, \
197, 214, 227, 177, 226, 213, 122, 227, 189, 123, \
228, 190, 122, 227, 190, 121, 228, 190, 121, 228, \
190, 123, 227, 189, 123, 228, 189, 122, 228, 189, \
124, 232, 193, 125, 232, 195, 124, 227, 189, 123, \
228, 188, 122, 229, 187, 129, 225, 190, 127, 226, \
193, 116, 230, 189, 144, 226, 183, 171, 196, 161, \
150, 153, 134, 164, 176, 168, 148, 161, 164, 158, \
162, 178, 161, 170, 189, 164, 181, 198, 168, 179, \
196, 157, 167, 179, 139, 155, 158, 155, 201, 187, \
166, 225, 208, 165, 215, 215, 201, 222, 233, 178, \
227, 214, 123, 226, 188, 122, 228, 190, 121, 228, \
189, 119, 229, 189, 118, 230, 189, 118, 231, 189, \
119, 230, 189, 118, 230, 188, 121, 234, 192, 123, \
233, 192, 121, 228, 188, 123, 228, 189, 122, 229, \
189, 123, 227, 189, 124, 227, 194, 116, 231, 191, \
136, 230, 180, 161, 202, 150, 101, 113, 73, 138, \
159, 132, 139, 156, 143, 143, 143, 144, 155, 151, \
156, 165, 172, 180, 156, 170, 183, 170, 184, 198, \
147, 159, 170, 169, 185, 186, 217, 231, 234, 182, \
214, 221, 196, 218, 225, 180, 226, 213, 129, 223, \
189, 124, 226, 188, 122, 226, 188, 123, 228, 189, \
123, 228, 189, 123, 229, 190, 122, 229, 189, 120, \
228, 188, 122, 233, 192, 125, 232, 189, 122, 228, \
188, 122, 227, 191, 119, 229, 193, 113, 232, 195, \
118, 229, 196, 114, 231, 189, 123, 233, 176, 153, \
213, 150, 83, 91, 48, 85, 99, 75, 123, 139, \
121, 129, 139, 123, 132, 141, 132, 133, 139, 140, \
147, 146, 154, 157, 162, 166, 133, 149, 145, 150, \
157, 155, 195, 187, 197, 175, 187, 197, 175, 182, \
190, 171, 195, 188, 132, 194, 172, 128, 199, 175, \
126, 201, 175, 121, 200, 173, 122, 199, 172, 131, \
202, 177, 136, 210, 184, 131, 212, 184, 127, 216, \
185, 123, 232, 194, 121, 228, 191, 122, 228, 191, \
121, 228, 191, 122, 228, 189, 129, 218, 187, 126, \
212, 180, 120, 210, 169, 139, 196, 144, 104, 111, \
61, 53, 53, 31, 70, 71, 62, 115, 125, 108, \
143, 160, 147, 133, 140, 141, 148, 138, 146, 118, \
113, 116, 83, 96, 88, 84, 93, 87, 113, 108, \
114, 136, 141, 148, 142, 143, 148, 130, 140, 135, \
107, 133, 124, 113, 138, 131, 102, 126, 120, 124, \
148, 141, 132, 157, 150, 136, 163, 155, 138, 171, \
162, 129, 170, 158, 108, 158, 143, 125, 227, 197, \
118, 209, 181, 113, 194, 169, 108, 183, 159, 107, \
172, 151, 109, 154, 139, 104, 138, 126, 89, 134, \
118, 106, 146, 117, 139, 153, 99, 112, 110, 57, \
92, 81, 48, 81, 75, 58, 113, 120, 107, 130, \
140, 132, 145, 148, 145, 109, 109, 111, 53, 54, \
58, 27, 34, 30, 40, 45, 43, 67, 69, 72, \
70, 73, 73, 67, 74, 69, 61, 71, 68, 72, \
77, 78, 53, 54, 55, 83, 85, 85, 103, 108, \
108, 104, 113, 112, 111, 121, 120, 101, 110, 109, \
73, 82, 81, 122, 187, 193, 82, 129, 129, 73, \
103, 95, 76, 99, 95, 85, 112, 134, 88, 105, \
124, 61, 65, 74, 62, 80, 79, 86, 122, 105, \
113, 145, 96, 109, 121, 52, 122, 117, 60, 120, \
115, 59, 113, 116, 70, 87, 102, 73, 102, 127, \
99, 117, 133, 120, 94, 90, 94, 56, 55, 55, \
30, 34, 30, 45, 38, 40, 30, 32, 29, 36, \
43, 37, 50, 51, 50, 72, 75, 74, 40, 52, \
47, 71, 104, 92, 84, 123, 109, 46, 69, 61, \
56, 70, 65, 72, 78, 76, 64, 60, 61, 85, \
108, 168, 58, 67, 111, 66, 60, 89, 76, 66, \
98, 58, 66, 134, 66, 76, 133, 54, 52, 90, \
73, 81, 110, 108, 153, 159, 108, 174, 142, 94, \
144, 101, 106, 139, 103, 144, 174, 107, 145, 167, \
100, 108, 131, 91, 119, 151, 113, 106, 131, 108, \
110, 115, 113, 103, 107, 105, 50, 62, 55, 52, \
50, 49, 30, 44, 35, 35, 53, 43, 57, 65, \
59, 75, 89, 81, 50, 84, 68, 96, 167, 139, \
114, 198, 166, 71, 131, 106, 73, 121, 99, 81, \
121, 104, 75, 104, 91, 78, 104, 123, 61, 75, \
108, 72, 76, 120, 66, 62, 122, 47, 48, 126, \
44, 52, 122, 56, 50, 120, 63, 61, 141, 75, \
104, 171, 111, 165, 185, 97, 148, 144, 70, 107, \
124, 105, 133, 152, 138, 165, 159, 125, 149, 136, \
127, 145, 134, 106, 124, 121, 119, 138, 145, 128, \
157, 154, 91, 132, 118, 77, 104, 93, 89, 142, \
122, 96, 160, 136, 106, 164, 138, 111, 170, 141, \
105, 173, 141, 120, 212, 172, 123, 229, 184, 117, \
211, 169, 117, 205, 166, 115, 198, 162, 112, 191, \
154, 99, 147, 85, 89, 130, 92, 90, 125, 109, \
80, 108, 107, 88, 105, 111, 77, 96, 108, 70, \
79, 110, 54, 61, 117, 47, 65, 121, 71, 96, \
120, 75, 99, 108, 49, 60, 103, 66, 63, 142, \
90, 93, 153, 76, 83, 120, 88, 88, 121, 77, \
79, 115, 93, 103, 143, 111, 134, 154, 98, 135, \
132, 97, 131, 119, 137, 192, 171, 144, 210, 184, \
139, 206, 164, 135, 200, 155, 134, 198, 153, 134, \
205, 159, 132, 209, 156, 133, 209, 153, 135, 207, \
164, 135, 206, 164, 133, 205, 148, 139, 182, 111, \
140, 181, 120, 139, 179, 126, 134, 170, 124, 138, \
165, 124, 130, 154, 123, 116, 136, 122, 87, 104, \
109, 76, 95, 102, 78, 96, 95, 84, 97, 98, \
68, 69, 96, 62, 52, 113, 65, 58, 110, 61, \
59, 88, 79, 77, 98, 71, 68, 92, 80, 78, \
110, 105, 107, 136, 95, 105, 118, 97, 114, 109, \
115, 144, 129, 128, 162, 146, 126, 160, 128, 129, \
162, 125, 137, 169, 133, 136, 169, 132, 139, 173, \
137, 136, 169, 138, 133, 165, 138, 136, 167, 138, \
140, 172, 135, 180, 200, 167, 180, 198, 170, 179, \
197, 173, 178, 194, 174, 183, 193, 178, 182, 190, \
178, 178, 185, 177, 169, 176, 170, 155, 164, 161, \
138, 148, 147, 132, 139, 135, 131, 132, 137, 133, \
128, 151, 136, 133, 150, 146, 147, 146, 157, 159, \
150, 154, 156, 148, 157, 156, 159, 168, 163, 181, \
162, 160, 172, 163, 167, 164, 164, 174, 166, 168, \
179, 174, 170, 179, 167, 173, 181, 168, 179, 187, \
174, 177, 185, 172, 179, 187, 179, 177, 184, 183, \
176, 185, 170, 176, 186, 167, 182, 188, 183, 201, \
200, 199, 197, 196, 198, 196, 195, 200, 196, 194, \
202, 198, 194, 205, 200, 196, 204, 198, 195, 198, \
194, 191, 189, 187, 185, 186, 182, 184, 188, 185, \
187, 183, 186, 188, 181, 187, 187, 186, 190, 188, \
195, 192, 192, 197, 194, 194, 193, 195, 195, 195, \
195, 193, 200, 196, 192, 202, 196, 193, 196, 197, \
196, 192, 196, 196, 193, 196, 196, 198, 198, 195, \
198, 198, 194, 198, 198, 195, 199, 198, 195, 199, \
198, 195, 197, 198, 196, 191, 197, 197, 187, 194, \
194, 186, 200, 199, 201, 202, 198, 202, 198, 194, \
200, 198, 193, 201, 196, 191, 199, 195, 191, 199, \
194, 191, 197, 197, 194, 197, 197, 195, 196, 196, \
193, 195, 197, 193, 197, 199, 197, 194, 197, 196, \
193, 196, 196, 196, 196, 195, 202, 197, 196, 203, \
196, 196, 199, 196, 196, 200, 197, 196, 203, 195, \
198, 199, 195, 199, 194, 196, 198, 192, 196, 196, \
195, 197, 196, 200, 198, 196, 201, 197, 194, 198, \
197, 195, 199, 197, 195, 199, 196, 193, 195, 198, \
196, 191, 196, 195, 196, 192, 191, 199, 193, 194, \
204, 199, 199, 196, 195, 194, 191, 196, 196, 193, \
197, 197, 194, 195, 197, 190, 194, 197, 191, 195, \
197, 196, 195, 196, 199, 197, 196, 199, 199, 196, \
196, 197, 195, 196, 195, 194, 199, 194, 193, 203, \
195, 195, 201, 197, 197, 197, 197, 197, 196, 197, \
197, 196, 197, 197, 197, 194, 201, 195, 191, 201, \
193, 193, 200, 194, 193, 197, 196, 193, 196, 198, \
195, 198, 196, 193, 195, 193, 195, 197, 195, 196, \
199, 196, 196, 197, 198, 196, 196, 201, 194, 198, \
194, 192, 199, 198, 156, 163, 177, 200, 201, 196, \
196, 197, 192, 197, 198, 193, 196, 198, 191, 195, \
198, 190, 195, 198, 192, 196, 198, 196, 195, 197, \
199, 194, 195, 197, 195, 194, 194, 195, 195, 198, \
196, 195, 202, 196, 195, 204, 197, 196, 202, 197, \
196, 200, 197, 196, 200, 197, 196, 200, 197, 196, \
199, 195, 199, 195, 195, 201, 196, 193, 197, 197, \
192, 196, 198, 194, 197, 199, 195, 198, 196, 195, \
197, 193, 196, 198, 195, 192, 194, 190, 179, 180, \
183, 179, 179, 188, 177, 181, 179, 174, 182, 180, \
106, 116, 128, 202, 199, 203, 198, 195, 198, 198, \
196, 198, 199, 197, 199, 198, 197, 200, 198, 196, \
200, 197, 196, 198, 195, 193, 195, 193, 194, 195, \
193, 197, 198, 194, 197, 199, 196, 197, 197, 197, \
197, 195, 197, 197, 195, 197, 197, 196, 197, 197, \
197, 197, 197, 197, 197, 197, 195, 199, 197, 196, \
199, 196, 198, 194, 192, 196, 196, 195, 200, 197, \
197, 200, 197, 196, 197, 196, 195, 196, 201, 199, \
200, 169, 167, 168, 70, 66, 73, 69, 61, 86, \
79, 72, 112, 73, 71, 115, 41, 45, 77, 201, \
200, 203, 198, 196, 199, 198, 197, 199, 199, 197, \
199, 197, 195, 199, 196, 195, 198, 198, 196, 198, \
198, 196, 196, 197, 197, 197, 196, 198, 199, 196, \
198, 198, 197, 198, 196, 195, 196, 193, 195, 196, \
193, 197, 197, 195, 195, 195, 194, 195, 195, 193, \
198, 198, 195, 199, 197, 197, 198, 195, 197, 197, \
195, 197, 197, 197, 199, 197, 197, 198, 198, 197, \
198, 197, 196, 197, 202, 200, 202, 162, 160, 161, \
45, 42, 46, 61, 57, 71, 79, 74, 99, 78, \
75, 103, 54, 54, 71, 200, 200, 200, 197, 197, \
197, 196, 195, 196, 193, 193, 193, 195, 195, 195, \
195, 195, 195, 197, 196, 197, 197, 197, 197, 197, \
197, 197, 197, 197, 197, 197, 197, 197, 197, 197, \
197, 196, 196, 196, 196, 196, 196, 196, 196, 196, \
195, 195, 194, 196, 196, 196, 197, 197, 197, 197, \
197, 197, 197, 197, 197, 197, 197, 197, 197, 197, \
197, 197, 197, 197, 197, 197, 197, 197, 197, 197, \
200, 200, 200, 160, 159, 159, 65, 65, 65, 82, \
82, 83, 82, 82, 83, 85, 85, 85, 77, 77, \
78, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '10854';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a51b83ddaf8717b059e806bf602805544';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_airplane2';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{85, 115, 159, 85, 115, 161, 91, 120, 168, 90, 119, \
167, 85, 118, 169, 90, 121, 177, 94, 124, 182, \
94, 124, 178, 96, 126, 181, 99, 129, 183, 107, \
136, 184, 121, 148, 194, 123, 149, 195, 115, 141, \
192, 123, 150, 201, 127, 154, 204, 110, 140, 192, \
106, 137, 194, 108, 139, 197, 109, 140, 194, 117, \
148, 201, 117, 147, 201, 110, 140, 196, 113, 143, \
200, 112, 143, 200, 107, 137, 196, 107, 137, 198, \
106, 138, 199, 107, 139, 198, 108, 140, 198, 110, \
141, 198, 110, 140, 199, 86, 112, 158, 84, 113, \
161, 89, 117, 165, 91, 119, 167, 84, 115, 169, \
87, 117, 174, 91, 120, 179, 100, 130, 177, 102, \
129, 178, 97, 123, 178, 108, 135, 184, 123, 145, \
191, 138, 158, 200, 124, 149, 191, 114, 139, 191, \
121, 146, 195, 117, 146, 190, 105, 135, 186, 105, \
134, 189, 105, 134, 191, 112, 141, 194, 118, 147, \
201, 109, 137, 193, 110, 139, 194, 111, 142, 194, \
109, 139, 194, 106, 136, 192, 105, 135, 195, 104, \
134, 194, 104, 135, 194, 105, 135, 194, 107, 136, \
196, 93, 116, 161, 84, 111, 159, 84, 112, 160, \
89, 115, 165, 91, 118, 168, 96, 119, 164, 95, \
119, 169, 106, 131, 178, 110, 136, 185, 99, 124, \
178, 113, 139, 190, 117, 139, 187, 124, 143, 187, \
129, 153, 193, 112, 136, 186, 114, 138, 188, 122, \
148, 194, 123, 150, 198, 111, 137, 190, 106, 132, \
190, 106, 133, 188, 108, 135, 190, 109, 135, 192, \
116, 144, 198, 115, 145, 197, 110, 140, 194, 111, \
140, 196, 110, 140, 198, 104, 134, 194, 104, 133, \
194, 104, 133, 194, 105, 134, 196, 98, 119, 160, \
82, 108, 153, 82, 111, 156, 85, 111, 160, 103, \
124, 164, 131, 145, 168, 104, 122, 158, 102, 122, \
175, 111, 137, 189, 98, 126, 176, 110, 133, 187, \
114, 137, 189, 111, 133, 184, 119, 142, 189, 124, \
148, 193, 111, 133, 185, 116, 139, 192, 121, 146, \
193, 121, 145, 195, 111, 135, 191, 113, 138, 193, \
107, 133, 189, 107, 132, 189, 108, 134, 191, 116, \
144, 198, 110, 137, 194, 107, 134, 192, 109, 138, \
195, 107, 136, 196, 104, 132, 195, 103, 131, 195, \
103, 131, 194, 96, 117, 159, 85, 110, 153, 90, \
115, 159, 86, 110, 159, 96, 117, 157, 138, 152, \
171, 133, 143, 161, 102, 114, 160, 97, 121, 177, \
111, 139, 182, 104, 127, 181, 97, 121, 182, 98, \
124, 178, 114, 136, 185, 122, 143, 187, 99, 125, \
176, 104, 125, 183, 110, 133, 185, 117, 140, 191, \
115, 138, 191, 117, 140, 193, 119, 142, 193, 114, \
139, 193, 103, 130, 186, 102, 130, 187, 107, 134, \
194, 107, 135, 194, 102, 131, 189, 103, 132, 190, \
102, 130, 194, 100, 128, 194, 99, 128, 192, 82, \
105, 149, 87, 110, 154, 104, 125, 168, 88, 111, \
159, 85, 109, 157, 101, 120, 156, 154, 162, 177, \
131, 139, 159, 98, 116, 161, 106, 129, 175, 103, \
126, 178, 93, 119, 176, 93, 118, 173, 110, 131, \
178, 110, 129, 178, 93, 124, 178, 99, 122, 181, \
101, 125, 184, 103, 128, 184, 107, 132, 186, 114, \
137, 189, 126, 146, 193, 124, 147, 195, 105, 133, \
185, 101, 129, 189, 101, 129, 191, 103, 132, 190, \
105, 133, 193, 102, 131, 188, 99, 127, 189, 98, \
126, 191, 95, 126, 189, 79, 101, 144, 82, 105, \
148, 94, 116, 158, 85, 108, 154, 84, 108, 159, \
95, 113, 162, 119, 134, 173, 153, 167, 171, 126, \
137, 155, 98, 113, 160, 98, 122, 172, 98, 125, \
172, 95, 118, 174, 108, 129, 173, 100, 119, 174, \
94, 123, 183, 96, 123, 183, 93, 120, 180, 95, \
122, 181, 96, 123, 180, 100, 126, 185, 107, 130, \
182, 125, 147, 193, 110, 136, 186, 99, 126, 186, \
99, 125, 187, 100, 127, 184, 102, 128, 187, 114, \
141, 197, 108, 135, 190, 96, 124, 182, 96, 125, \
185, 83, 104, 144, 83, 106, 150, 84, 106, 148, \
80, 104, 149, 81, 104, 155, 95, 114, 167, 96, \
119, 164, 125, 137, 154, 165, 169, 174, 126, 136, \
156, 96, 116, 158, 94, 117, 173, 101, 124, 169, \
104, 125, 159, 99, 116, 165, 109, 129, 180, 98, \
126, 180, 91, 120, 178, 91, 119, 180, 90, 119, \
177, 90, 118, 179, 94, 119, 175, 112, 135, 182, \
117, 140, 190, 96, 121, 182, 97, 122, 182, 99, \
125, 180, 98, 124, 181, 102, 128, 183, 112, 139, \
190, 104, 130, 183, 97, 122, 180, 100, 119, 159, \
83, 105, 148, 80, 102, 144, 79, 103, 145, 78, \
103, 149, 86, 106, 155, 87, 112, 154, 110, 117, \
147, 133, 134, 138, 156, 162, 164, 123, 133, 158, \
93, 110, 163, 102, 124, 160, 94, 113, 137, 128, \
139, 162, 132, 137, 157, 108, 128, 170, 93, 120, \
175, 93, 118, 179, 93, 119, 174, 95, 120, 176, \
89, 117, 175, 95, 121, 176, 102, 125, 180, 98, \
121, 182, 98, 122, 180, 116, 141, 193, 112, 137, \
191, 99, 122, 181, 102, 125, 182, 114, 137, 191, \
108, 131, 185, 91, 109, 148, 75, 98, 141, 77, \
100, 143, 77, 101, 143, 79, 104, 145, 87, 108, \
151, 83, 104, 149, 102, 108, 136, 94, 98, 104, \
136, 140, 151, 168, 172, 179, 116, 130, 156, 97, \
116, 153, 122, 137, 164, 123, 129, 131, 79, 70, \
58, 115, 126, 155, 106, 132, 182, 93, 116, 173, \
107, 130, 181, 110, 132, 180, 91, 119, 175, 88, \
116, 177, 93, 116, 177, 96, 118, 178, 96, 118, \
176, 106, 130, 181, 108, 131, 185, 105, 127, 188, \
97, 118, 180, 95, 117, 174, 107, 129, 183, 78, \
98, 135, 73, 96, 137, 73, 96, 142, 76, 99, \
142, 83, 105, 145, 84, 106, 148, 78, 101, 146, \
94, 108, 146, 112, 125, 146, 107, 119, 155, 144, \
152, 167, 162, 166, 172, 123, 134, 155, 115, 130, \
168, 102, 110, 122, 99, 87, 68, 105, 105, 123, \
107, 129, 169, 118, 136, 174, 114, 134, 176, 116, \
137, 176, 99, 124, 177, 88, 115, 175, 89, 114, \
173, 90, 113, 173, 89, 113, 173, 89, 113, 171, \
90, 114, 174, 96, 120, 179, 101, 125, 181, 92, \
117, 173, 89, 114, 172, 92, 110, 145, 93, 111, \
146, 78, 96, 138, 73, 95, 136, 80, 102, 141, \
81, 103, 145, 81, 104, 148, 105, 121, 165, 124, \
140, 170, 96, 112, 160, 100, 113, 151, 155, 163, \
172, 164, 170, 167, 129, 142, 160, 104, 114, 145, \
117, 115, 124, 121, 124, 128, 144, 154, 172, 157, \
165, 179, 121, 137, 164, 120, 141, 180, 94, 118, \
171, 88, 113, 173, 85, 110, 168, 86, 110, 170, \
86, 110, 170, 86, 110, 170, 86, 110, 171, 88, \
113, 170, 103, 128, 181, 108, 133, 186, 88, 112, \
169, 88, 105, 139, 112, 124, 155, 108, 122, 154, \
91, 111, 148, 83, 104, 144, 78, 99, 141, 83, \
106, 149, 97, 114, 156, 107, 125, 159, 104, 122, \
164, 97, 116, 156, 117, 133, 160, 176, 178, 182, \
166, 170, 166, 130, 139, 150, 128, 133, 150, 154, \
165, 166, 157, 162, 167, 108, 104, 96, 89, 91, \
96, 112, 132, 173, 91, 113, 167, 85, 109, 168, \
82, 106, 166, 82, 106, 165, 83, 107, 166, 83, \
107, 166, 83, 107, 166, 84, 109, 166, 87, 112, \
167, 98, 121, 174, 103, 124, 178, 81, 98, 132, \
128, 139, 168, 134, 147, 174, 101, 118, 150, 84, \
104, 144, 73, 95, 137, 75, 98, 140, 84, 103, \
145, 88, 108, 148, 100, 120, 164, 88, 108, 160, \
103, 122, 159, 113, 118, 124, 150, 149, 146, 177, \
184, 171, 166, 169, 167, 157, 169, 175, 135, 145, \
149, 101, 91, 79, 101, 95, 96, 97, 117, 159, \
98, 120, 169, 85, 108, 161, 79, 104, 161, 79, \
104, 161, 80, 105, 162, 80, 105, 162, 80, 105, \
162, 81, 106, 162, 80, 105, 161, 84, 108, 161, \
97, 119, 172, 71, 89, 124, 94, 109, 140, 122, \
136, 161, 109, 125, 154, 80, 99, 139, 72, 95, \
137, 81, 103, 144, 94, 113, 155, 81, 102, 146, \
81, 105, 148, 81, 102, 153, 87, 102, 146, 68, \
81, 99, 113, 122, 144, 146, 156, 170, 175, 178, \
171, 156, 161, 167, 117, 121, 126, 115, 110, 111, \
106, 114, 140, 91, 116, 163, 116, 139, 180, 103, \
125, 171, 79, 104, 159, 78, 103, 160, 77, 102, \
158, 76, 101, 158, 77, 102, 158, 78, 103, 159, \
78, 103, 160, 76, 102, 157, 77, 103, 157, 64, \
83, 119, 67, 86, 120, 88, 105, 135, 93, 110, \
143, 73, 95, 134, 73, 95, 137, 100, 121, 156, \
123, 139, 170, 83, 104, 142, 69, 96, 135, 73, \
98, 138, 81, 100, 144, 106, 122, 161, 104, 122, \
166, 85, 103, 149, 143, 153, 161, 152, 155, 159, \
81, 77, 75, 78, 78, 87, 86, 105, 143, 78, \
104, 153, 96, 119, 162, 102, 122, 167, 80, 103, \
154, 80, 105, 160, 79, 103, 157, 76, 100, 155, \
76, 99, 156, 76, 100, 157, 76, 102, 158, 73, \
101, 157, 73, 101, 156, 61, 82, 117, 67, 88, \
123, 76, 94, 130, 68, 88, 126, 64, 89, 127, \
71, 94, 134, 108, 125, 156, 154, 166, 188, 103, \
120, 152, 69, 94, 138, 69, 96, 138, 75, 100, \
140, 100, 118, 158, 97, 115, 159, 83, 104, 149, \
137, 152, 165, 153, 157, 159, 81, 75, 67, 61, \
63, 65, 111, 126, 150, 90, 111, 150, 81, 103, \
147, 96, 117, 165, 90, 114, 163, 74, 101, 150, \
82, 106, 156, 82, 104, 156, 74, 96, 152, 74, \
98, 154, 73, 99, 154, 71, 99, 154, 72, 99, \
154, 61, 81, 116, 67, 87, 121, 76, 94, 129, \
68, 89, 125, 63, 88, 124, 70, 92, 131, 112, \
126, 159, 144, 153, 181, 106, 120, 154, 71, 92, \
134, 67, 93, 134, 70, 95, 136, 88, 107, 147, \
109, 125, 163, 101, 117, 152, 160, 170, 180, 170, \
173, 172, 130, 126, 118, 59, 61, 59, 103, 111, \
118, 144, 154, 173, 107, 122, 151, 96, 115, 154, \
90, 114, 159, 74, 100, 148, 81, 104, 153, 95, \
116, 166, 77, 98, 152, 72, 95, 148, 71, 96, \
149, 71, 96, 149, 72, 97, 149, 62, 82, 115, \
64, 84, 117, 72, 90, 124, 66, 87, 121, 62, \
87, 122, 65, 87, 124, 94, 108, 141, 112, 123, \
155, 107, 120, 156, 84, 102, 142, 65, 90, 130, \
69, 94, 135, 84, 104, 146, 117, 133, 169, 124, \
138, 167, 146, 154, 165, 128, 131, 128, 114, 113, \
110, 83, 88, 92, 90, 93, 95, 179, 179, 183, \
167, 171, 184, 135, 143, 166, 116, 132, 166, 91, \
112, 157, 77, 96, 146, 89, 108, 161, 84, 104, \
156, 72, 94, 144, 70, 94, 144, 71, 95, 144, \
72, 94, 144, 60, 81, 113, 63, 84, 115, 65, \
84, 117, 64, 84, 117, 60, 85, 119, 71, 93, \
128, 95, 112, 144, 88, 103, 139, 102, 116, 154, \
88, 105, 142, 66, 89, 129, 66, 92, 132, 73, \
95, 139, 94, 112, 150, 119, 133, 161, 110, 118, \
137, 43, 47, 46, 50, 50, 55, 77, 88, 107, \
72, 79, 94, 126, 131, 144, 162, 167, 180, 177, \
180, 191, 169, 175, 191, 134, 145, 170, 95, 111, \
147, 84, 103, 149, 92, 112, 163, 76, 97, 147, \
74, 98, 146, 77, 99, 145, 72, 93, 139, 62, \
83, 115, 60, 81, 112, 61, 81, 113, 63, 85, \
117, 57, 82, 116, 67, 89, 125, 84, 104, 137, \
71, 90, 127, 82, 99, 136, 79, 98, 133, 67, \
90, 129, 63, 89, 130, 67, 90, 134, 84, 105, \
146, 125, 140, 171, 119, 128, 155, 52, 56, 64, \
48, 51, 65, 89, 104, 138, 69, 80, 110, 82, \
99, 130, 94, 110, 137, 126, 136, 154, 163, 167, \
171, 172, 176, 180, 143, 155, 173, 113, 131, 158, \
86, 105, 147, 81, 102, 149, 76, 99, 147, 97, \
118, 164, 88, 107, 151, 63, 83, 115, 56, 78, \
110, 59, 80, 112, 60, 83, 116, 56, 82, 116, \
60, 81, 118, 67, 87, 123, 74, 94, 129, 71, \
92, 126, 70, 93, 129, 68, 92, 132, 63, 87, \
128, 65, 88, 130, 75, 96, 136, 105, 122, 159, \
113, 125, 161, 64, 72, 96, 72, 83, 110, 109, \
127, 165, 121, 133, 164, 117, 132, 165, 81, 102, \
140, 78, 98, 134, 117, 126, 139, 145, 149, 161, \
151, 162, 182, 167, 174, 189, 127, 138, 166, 76, \
99, 142, 69, 94, 142, 82, 103, 149, 85, 105, \
149, 59, 79, 111, 53, 75, 107, 55, 76, 109, \
55, 78, 110, 54, 79, 113, 59, 79, 116, 69, \
87, 123, 80, 100, 135, 62, 85, 119, 65, 87, \
125, 67, 87, 127, 66, 87, 127, 65, 86, 126, \
66, 88, 129, 74, 95, 135, 84, 101, 140, 78, \
92, 126, 74, 92, 128, 80, 100, 142, 126, 139, \
173, 155, 166, 192, 115, 133, 163, 74, 95, 128, \
129, 141, 160, 117, 124, 148, 93, 108, 139, 128, \
139, 163, 142, 153, 183, 74, 96, 138, 68, 92, \
140, 66, 88, 133, 79, 100, 144, 55, 75, 107, \
51, 73, 105, 54, 76, 108, 53, 76, 107, 50, \
76, 108, 57, 77, 112, 70, 86, 121, 66, 85, \
120, 58, 82, 116, 63, 84, 122, 66, 84, 124, \
79, 97, 137, 78, 96, 136, 63, 86, 127, 66, \
89, 130, 74, 95, 136, 85, 106, 147, 69, 92, \
135, 66, 88, 133, 84, 99, 139, 106, 115, 146, \
129, 142, 174, 93, 111, 146, 98, 113, 142, 100, \
114, 148, 88, 108, 149, 77, 97, 134, 84, 99, \
134, 71, 92, 133, 67, 90, 135, 66, 88, 132, \
67, 89, 133, 50, 71, 102, 48, 71, 103, 59, \
80, 112, 55, 79, 109, 48, 75, 105, 55, 75, \
109, 68, 83, 117, 66, 85, 119, 55, 79, 115, \
58, 82, 119, 66, 86, 124, 74, 94, 132, 76, \
96, 134, 61, 84, 122, 64, 87, 127, 66, 88, \
129, 66, 88, 131, 61, 85, 127, 63, 86, 127, \
68, 86, 129, 79, 93, 134, 105, 118, 158, 103, \
119, 162, 71, 89, 128, 66, 86, 128, 71, 94, \
138, 69, 91, 136, 74, 91, 131, 71, 91, 131, \
68, 89, 132, 64, 87, 130, 62, 85, 128, 50, \
70, 102, 48, 70, 102, 53, 74, 105, 51, 75, \
103, 47, 73, 103, 64, 84, 117, 81, 96, 129, \
67, 85, 118, 52, 76, 113, 52, 78, 115, 56, \
81, 117, 59, 84, 119, 59, 83, 119, 67, 88, \
122, 67, 88, 124, 64, 85, 124, 66, 86, 126, \
80, 100, 135, 69, 91, 126, 63, 86, 129, 67, \
88, 131, 82, 98, 136, 96, 111, 149, 67, 89, \
129, 61, 86, 131, 64, 86, 126, 65, 85, 128, \
76, 96, 137, 79, 98, 138, 65, 85, 126, 62, \
85, 127, 60, 84, 127, 51, 71, 103, 52, 72, \
104, 49, 70, 100, 48, 72, 99, 48, 71, 101, \
61, 81, 113, 85, 100, 130, 82, 96, 130, 57, \
78, 114, 48, 75, 112, 48, 79, 114, 53, 83, \
118, 53, 78, 115, 70, 92, 126, 65, 87, 123, \
60, 82, 120, 66, 86, 124, 82, 102, 137, 75, \
94, 131, 64, 85, 125, 64, 86, 125, 81, 100, \
134, 105, 122, 156, 71, 92, 130, 60, 84, 127, \
62, 85, 125, 61, 84, 125, 65, 88, 128, 67, \
89, 128, 65, 85, 125, 65, 86, 126, 63, 85, \
126, 46, 68, 99, 54, 76, 106, 50, 73, 103, \
46, 71, 99, 46, 70, 100, 54, 77, 108, 79, \
97, 126, 82, 95, 128, 62, 80, 116, 57, 78, \
115, 62, 86, 121, 59, 83, 118, 73, 91, 128, \
62, 84, 118, 55, 78, 114, 58, 80, 118, 59, \
82, 120, 60, 82, 121, 65, 84, 124, 65, 83, \
123, 63, 83, 119, 73, 92, 128, 85, 102, 138, \
69, 88, 126, 60, 83, 123, 60, 84, 123, 57, \
82, 121, 58, 83, 121, 64, 87, 125, 70, 89, \
129, 67, 86, 126, 68, 87, 127, 42, 66, 94, \
47, 71, 99, 47, 71, 100, 43, 68, 98, 43, \
69, 100, 47, 73, 105, 65, 85, 115, 65, 82, \
114, 58, 77, 111, 66, 83, 118, 85, 102, 135, \
65, 82, 115, 84, 97, 131, 67, 87, 120, 56, \
78, 113, 56, 78, 115, 57, 79, 117, 58, 80, \
118, 63, 82, 121, 64, 83, 121, 63, 82, 118, \
71, 90, 126, 68, 85, 121, 66, 84, 122, 60, \
81, 121, 59, 82, 120, 56, 80, 118, 55, 78, \
116, 60, 82, 119, 66, 86, 124, 63, 83, 121, \
61, 81, 120, 42, 65, 92, 43, 66, 92, 45, \
67, 95, 42, 65, 95, 41, 67, 97, 43, 70, \
100, 54, 75, 106, 58, 79, 111, 63, 82, 115, \
70, 88, 121, 66, 87, 117, 53, 77, 105, 64, \
84, 115, 82, 100, 133, 68, 87, 121, 55, 77, \
112, 55, 78, 114, 57, 79, 115, 68, 87, 124, \
70, 88, 125, 60, 80, 116, 62, 80, 116, 71, \
88, 124, 78, 95, 133, 62, 81, 120, 60, 82, \
121, 58, 81, 118, 65, 85, 122, 68, 88, 125, \
61, 81, 118, 58, 79, 115, 58, 78, 115, 53, \
71, 98, 62, 79, 106, 62, 79, 105, 60, 79, \
105, 49, 72, 99, 42, 68, 96, 46, 69, 100, \
46, 71, 101, 54, 74, 106, 66, 81, 114, 55, \
75, 107, 46, 72, 102, 56, 79, 110, 78, 93, \
126, 67, 84, 118, 53, 75, 109, 52, 76, 110, \
55, 77, 111, 61, 80, 116, 63, 82, 117, 58, \
78, 113, 60, 79, 115, 64, 81, 118, 68, 85, \
122, 60, 79, 117, 58, 79, 116, 57, 78, 115, \
78, 95, 131, 74, 92, 128, 59, 79, 115, 60, \
82, 117, 56, 77, 112, 56, 73, 100, 61, 78, \
105, 61, 77, 104, 86, 102, 128, 65, 84, 109, \
47, 69, 96, 53, 75, 107, 41, 66, 97, 53, \
75, 107, 78, 94, 128, 66, 83, 118, 49, 71, \
105, 56, 76, 110, 66, 81, 115, 78, 94, 127, \
55, 77, 110, 50, 74, 108, 52, 75, 109, 55, \
75, 110, 57, 75, 111, 57, 77, 112, 61, 79, \
114, 65, 79, 112, 62, 78, 115, 59, 78, 115, \
56, 76, 113, 56, 77, 113, 64, 81, 117, 62, \
80, 116, 59, 79, 113, 67, 85, 117, 63, 80, \
113, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '11164';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a966185af2b53a37bfb5fe5f8ea11372f';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_airplane8';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{110, 122, 44, 124, 136, 62, 118, 130, 59, 113, 123, \
59, 99, 110, 44, 101, 113, 41, 114, 125, 56, \
112, 123, 59, 99, 114, 46, 108, 123, 58, 119, \
134, 72, 101, 115, 53, 92, 104, 37, 116, 127, \
61, 120, 130, 68, 111, 121, 61, 110, 123, 58, \
105, 120, 56, 110, 124, 66, 114, 128, 65, 110, \
124, 52, 106, 118, 42, 127, 138, 66, 118, 130, \
62, 136, 147, 82, 126, 136, 76, 98, 107, 48, \
100, 110, 49, 105, 115, 54, 106, 116, 54, 134, \
144, 82, 105, 115, 51, 105, 117, 40, 108, 120, \
47, 106, 118, 48, 115, 125, 59, 95, 106, 40, \
102, 113, 47, 93, 103, 41, 101, 112, 51, 105, \
120, 53, 119, 134, 67, 115, 129, 69, 98, 110, \
57, 84, 95, 31, 111, 122, 56, 126, 136, 74, \
100, 110, 51, 101, 113, 51, 111, 125, 63, 109, \
122, 67, 120, 133, 83, 119, 132, 73, 112, 124, \
47, 123, 135, 58, 117, 129, 54, 119, 131, 57, \
131, 143, 72, 107, 117, 52, 96, 105, 49, 87, \
95, 45, 81, 91, 31, 109, 120, 51, 117, 128, \
63, 126, 138, 61, 109, 121, 47, 95, 106, 36, \
109, 120, 50, 109, 120, 53, 94, 103, 44, 92, \
101, 46, 100, 111, 53, 109, 123, 58, 118, 134, \
63, 116, 130, 71, 107, 119, 74, 94, 105, 44, \
110, 121, 54, 127, 137, 76, 109, 119, 59, 85, \
96, 42, 95, 107, 55, 113, 126, 74, 124, 135, \
92, 118, 129, 79, 104, 115, 44, 123, 135, 61, \
114, 127, 50, 92, 104, 27, 101, 113, 39, 104, \
114, 48, 90, 99, 43, 81, 89, 42, 95, 104, \
48, 118, 129, 60, 128, 139, 73, 118, 130, 53, \
127, 139, 66, 102, 113, 44, 113, 125, 51, 127, \
138, 70, 105, 113, 61, 103, 111, 61, 117, 127, \
72, 116, 130, 66, 102, 118, 45, 118, 131, 74, \
115, 124, 87, 107, 117, 59, 107, 118, 52, 119, \
129, 68, 118, 128, 68, 78, 87, 45, 49, 60, \
22, 86, 98, 50, 113, 124, 81, 131, 141, 96, \
105, 115, 54, 105, 116, 50, 131, 142, 71, 94, \
106, 33, 91, 103, 34, 85, 96, 33, 82, 91, \
34, 80, 88, 36, 113, 121, 71, 122, 133, 71, \
133, 144, 76, 108, 119, 46, 116, 127, 58, 103, \
116, 48, 122, 134, 66, 127, 137, 75, 111, 119, \
65, 101, 110, 57, 125, 136, 79, 109, 124, 63, \
91, 103, 36, 113, 127, 64, 104, 120, 81, 98, \
111, 53, 116, 128, 60, 118, 129, 65, 120, 131, \
69, 110, 119, 69, 46, 53, 20, 33, 39, 17, \
62, 67, 45, 119, 126, 96, 141, 149, 103, 118, \
123, 61, 137, 142, 71, 115, 124, 54, 105, 117, \
49, 96, 107, 40, 101, 111, 48, 96, 106, 46, \
127, 135, 81, 107, 114, 62, 115, 124, 59, 116, \
126, 54, 99, 110, 45, 78, 91, 30, 116, 127, \
68, 132, 141, 82, 111, 121, 62, 107, 116, 57, \
129, 142, 80, 114, 130, 68, 90, 99, 37, 101, \
117, 49, 94, 115, 73, 95, 108, 56, 118, 128, \
66, 124, 134, 72, 124, 134, 71, 127, 139, 75, \
68, 77, 40, 11, 13, 13, 9, 10, 11, 67, \
72, 57, 159, 166, 132, 161, 164, 105, 153, 160, \
89, 120, 136, 71, 110, 127, 68, 106, 122, 66, \
111, 126, 74, 105, 120, 71, 117, 129, 85, 99, \
108, 76, 73, 83, 33, 123, 133, 58, 103, 114, \
49, 68, 81, 25, 113, 124, 67, 154, 164, 103, \
140, 150, 89, 108, 118, 58, 126, 138, 73, 120, \
135, 69, 77, 89, 28, 88, 106, 41, 99, 117, \
79, 98, 108, 74, 105, 113, 71, 130, 140, 90, \
127, 138, 80, 111, 127, 67, 85, 100, 64, 45, \
54, 51, 25, 33, 37, 23, 30, 25, 145, 151, \
135, 168, 178, 143, 145, 166, 121, 108, 137, 98, \
114, 139, 114, 114, 137, 118, 114, 137, 120, 110, \
133, 117, 109, 129, 118, 90, 105, 101, 55, 70, \
37, 118, 128, 54, 102, 113, 48, 80, 93, 35, \
115, 127, 67, 148, 158, 94, 137, 147, 84, 120, \
130, 67, 126, 137, 69, 145, 157, 94, 80, 96, \
44, 75, 93, 41, 97, 111, 85, 96, 106, 94, \
128, 139, 120, 139, 152, 124, 122, 136, 99, 99, \
119, 80, 81, 101, 80, 70, 86, 89, 67, 82, \
90, 12, 21, 30, 98, 103, 118, 144, 158, 164, \
117, 141, 143, 107, 135, 142, 104, 130, 146, 107, \
133, 150, 103, 129, 146, 103, 130, 145, 115, 140, \
152, 100, 119, 131, 68, 85, 61, 123, 132, 65, \
101, 113, 46, 99, 113, 45, 124, 137, 70, 138, \
149, 83, 139, 150, 83, 136, 148, 80, 135, 145, \
76, 152, 160, 103, 82, 99, 62, 46, 65, 30, \
89, 100, 90, 92, 109, 113, 139, 160, 162, 132, \
154, 152, 109, 132, 126, 108, 131, 129, 99, 121, \
129, 79, 100, 115, 107, 129, 141, 40, 56, 66, \
48, 56, 73, 133, 151, 169, 114, 133, 155, 120, \
134, 163, 111, 132, 171, 163, 188, 216, 142, 167, \
195, 102, 128, 160, 131, 157, 173, 129, 149, 158, \
98, 113, 87, 126, 134, 74, 107, 117, 50, 115, \
131, 54, 131, 144, 67, 144, 151, 80, 149, 156, \
90, 143, 151, 90, 155, 163, 107, 149, 158, 118, \
86, 105, 86, 22, 40, 24, 86, 95, 95, 103, \
126, 137, 131, 160, 172, 126, 154, 168, 105, 133, \
150, 97, 122, 144, 101, 126, 150, 95, 122, 144, \
106, 133, 149, 74, 96, 104, 40, 59, 63, 114, \
137, 146, 134, 152, 170, 139, 148, 176, 114, 134, \
178, 147, 170, 206, 137, 159, 189, 121, 142, 168, \
138, 158, 162, 132, 147, 138, 118, 129, 91, 128, \
137, 74, 140, 148, 83, 132, 150, 74, 120, 138, \
64, 148, 158, 97, 150, 158, 111, 140, 149, 119, \
143, 154, 136, 132, 148, 139, 107, 130, 133, 39, \
56, 61, 86, 95, 99, 125, 149, 159, 129, 158, \
173, 122, 151, 169, 107, 135, 156, 68, 92, 115, \
84, 113, 133, 96, 132, 149, 82, 113, 130, 84, \
110, 127, 72, 103, 117, 107, 134, 151, 137, 158, \
182, 123, 139, 171, 126, 149, 183, 134, 156, 181, \
146, 163, 171, 155, 168, 160, 123, 132, 110, 88, \
95, 58, 105, 115, 59, 128, 139, 71, 144, 154, \
96, 157, 175, 122, 119, 145, 111, 122, 149, 134, \
120, 145, 142, 117, 138, 145, 116, 133, 148, 116, \
134, 152, 111, 134, 152, 76, 94, 106, 87, 100, \
105, 132, 157, 168, 118, 147, 164, 111, 140, 160, \
107, 135, 158, 56, 81, 103, 80, 107, 126, 103, \
136, 153, 92, 121, 139, 87, 114, 136, 91, 123, \
148, 117, 143, 167, 139, 159, 181, 153, 169, 186, \
162, 180, 181, 161, 178, 166, 139, 152, 125, 117, \
126, 87, 82, 89, 48, 97, 105, 56, 110, 120, \
55, 135, 144, 88, 143, 152, 119, 139, 155, 150, \
113, 134, 142, 110, 133, 149, 103, 128, 152, 122, \
140, 165, 143, 157, 183, 106, 127, 165, 128, 149, \
178, 121, 141, 157, 106, 126, 134, 135, 162, 176, \
118, 147, 167, 113, 141, 164, 112, 140, 166, 61, \
87, 110, 60, 85, 105, 105, 130, 150, 107, 131, \
151, 98, 126, 149, 103, 134, 164, 127, 151, 177, \
141, 157, 168, 148, 161, 150, 132, 145, 106, 126, \
138, 88, 114, 123, 65, 112, 121, 54, 70, 78, \
24, 100, 109, 55, 114, 125, 57, 127, 136, 83, \
119, 130, 106, 109, 128, 146, 120, 129, 153, 135, \
143, 165, 106, 126, 159, 156, 173, 200, 190, 206, \
228, 109, 138, 177, 119, 142, 172, 120, 142, 159, \
121, 148, 161, 127, 156, 175, 110, 138, 161, 112, \
140, 166, 113, 140, 169, 78, 105, 129, 44, 66, \
87, 107, 124, 147, 127, 148, 169, 110, 139, 161, \
109, 142, 170, 136, 160, 182, 100, 114, 107, 97, \
108, 66, 103, 114, 52, 120, 131, 64, 116, 127, \
57, 114, 125, 52, 87, 96, 40, 78, 87, 35, \
104, 115, 50, 126, 138, 65, 111, 127, 80, 104, \
129, 125, 136, 146, 160, 156, 164, 187, 122, 151, \
187, 113, 144, 178, 133, 162, 191, 119, 152, 184, \
133, 157, 176, 135, 158, 171, 134, 163, 179, 116, \
144, 164, 103, 130, 153, 107, 134, 162, 107, 135, \
164, 97, 125, 148, 47, 67, 88, 69, 81, 104, \
106, 124, 144, 121, 151, 172, 122, 155, 178, 136, \
159, 172, 76, 90, 66, 92, 102, 40, 110, 120, \
53, 123, 134, 68, 121, 134, 68, 113, 128, 61, \
96, 107, 54, 67, 75, 26, 80, 90, 34, 136, \
149, 73, 122, 134, 73, 117, 130, 97, 142, 153, \
142, 140, 154, 152, 138, 159, 161, 143, 166, 167, \
139, 160, 163, 137, 157, 161, 145, 164, 151, 162, \
181, 162, 145, 166, 151, 111, 133, 124, 92, 116, \
121, 99, 128, 147, 101, 134, 156, 108, 138, 157, \
51, 67, 93, 17, 26, 43, 61, 76, 88, 121, \
146, 171, 141, 169, 191, 124, 145, 147, 85, 99, \
65, 96, 106, 44, 103, 113, 50, 128, 138, 77, \
130, 141, 77, 112, 125, 59, 104, 113, 58, 65, \
73, 26, 58, 66, 22, 130, 141, 69, 107, 118, \
50, 117, 125, 72, 118, 129, 82, 99, 114, 65, \
112, 126, 78, 134, 148, 99, 111, 124, 81, 86, \
98, 62, 96, 111, 61, 150, 165, 109, 121, 136, \
82, 96, 115, 62, 91, 113, 74, 116, 141, 132, \
98, 122, 150, 110, 137, 166, 57, 77, 104, 20, \
29, 45, 64, 72, 80, 121, 135, 161, 156, 180, \
199, 102, 121, 114, 83, 97, 57, 102, 112, 52, \
97, 107, 46, 112, 122, 62, 130, 141, 77, 119, \
130, 62, 108, 118, 58, 87, 94, 48, 65, 72, \
32, 120, 132, 60, 102, 114, 40, 109, 121, 49, \
127, 138, 66, 107, 118, 45, 118, 130, 57, 132, \
143, 70, 112, 123, 55, 104, 112, 57, 81, 90, \
29, 133, 143, 77, 122, 132, 67, 83, 94, 33, \
98, 113, 47, 126, 143, 94, 92, 104, 107, 104, \
127, 144, 67, 91, 113, 19, 31, 46, 31, 33, \
40, 94, 98, 119, 152, 171, 182, 87, 105, 86, \
78, 93, 44, 99, 111, 48, 97, 107, 47, 101, \
111, 51, 150, 160, 97, 126, 137, 70, 101, 111, \
50, 86, 94, 46, 74, 82, 38, 119, 131, 61, \
113, 125, 55, 121, 133, 56, 122, 133, 59, 118, \
126, 59, 118, 126, 59, 142, 151, 83, 130, 137, \
74, 114, 120, 67, 61, 66, 19, 103, 109, 59, \
116, 122, 70, 69, 75, 34, 115, 125, 65, 109, \
122, 52, 110, 120, 71, 100, 119, 95, 77, 99, \
103, 15, 30, 35, 13, 15, 18, 69, 67, 84, \
123, 136, 140, 80, 96, 64, 84, 99, 41, 88, \
101, 38, 94, 104, 44, 98, 108, 48, 110, 120, \
57, 132, 143, 76, 100, 111, 48, 99, 107, 54, \
81, 89, 40, 127, 138, 71, 113, 123, 62, 122, \
133, 64, 132, 144, 73, 135, 147, 80, 114, 127, \
59, 111, 124, 56, 147, 159, 92, 121, 132, 73, \
59, 68, 23, 84, 93, 47, 104, 115, 58, 76, \
86, 36, 105, 115, 64, 93, 102, 46, 117, 126, \
65, 106, 120, 65, 73, 92, 70, 19, 37, 30, \
28, 35, 32, 87, 87, 100, 96, 105, 102, 70, \
83, 42, 108, 123, 57, 92, 106, 42, 91, 101, \
42, 100, 110, 50, 95, 105, 42, 119, 130, 62, \
106, 116, 52, 101, 110, 55, 83, 92, 41, 138, \
150, 79, 123, 133, 69, 116, 126, 60, 158, 170, \
103, 146, 159, 90, 123, 136, 65, 90, 103, 35, \
103, 116, 48, 145, 158, 89, 111, 122, 68, 67, \
77, 30, 112, 124, 64, 93, 105, 44, 76, 86, \
33, 107, 116, 64, 105, 114, 59, 113, 120, 60, \
77, 89, 46, 27, 45, 21, 31, 41, 33, 59, \
61, 71, 68, 74, 78, 56, 67, 35, 122, 138, \
68, 113, 128, 60, 91, 101, 43, 106, 116, 54, \
104, 115, 49, 115, 126, 59, 121, 132, 67, 110, \
120, 59, 91, 101, 43, 122, 134, 61, 130, 141, \
71, 123, 134, 65, 133, 143, 80, 120, 131, 66, \
117, 128, 59, 104, 114, 52, 81, 91, 30, 119, \
131, 58, 128, 137, 81, 45, 53, 11, 99, 107, \
58, 108, 117, 64, 77, 86, 32, 111, 121, 60, \
97, 107, 47, 106, 112, 50, 100, 110, 51, 55, \
72, 32, 26, 35, 25, 27, 30, 40, 69, 75, \
89, 68, 78, 61, 112, 128, 59, 120, 134, 66, \
87, 97, 42, 100, 111, 47, 101, 112, 43, 117, \
127, 62, 113, 124, 58, 127, 138, 71, 104, 115, \
52, 129, 140, 72, 139, 150, 82, 117, 128, 59, \
122, 133, 66, 114, 125, 59, 104, 115, 48, 112, \
122, 62, 112, 122, 60, 118, 130, 52, 117, 127, \
63, 65, 74, 24, 71, 79, 33, 106, 114, 60, \
104, 113, 57, 112, 122, 64, 109, 119, 56, 101, \
110, 39, 104, 115, 45, 100, 115, 64, 65, 75, \
60, 74, 80, 91, 132, 143, 157, 98, 111, 99, \
108, 123, 62, 119, 131, 66, 104, 113, 58, 113, \
123, 60, 98, 109, 40, 108, 119, 53, 100, 111, \
46, 109, 120, 53, 122, 132, 70, 132, 142, 79, \
140, 151, 84, 123, 134, 64, 112, 123, 53, 140, \
151, 81, 137, 148, 80, 96, 105, 50, 80, 89, \
36, 110, 123, 46, 110, 122, 51, 83, 92, 35, \
78, 86, 37, 95, 104, 47, 83, 91, 39, 115, \
124, 72, 115, 126, 61, 101, 113, 39, 90, 103, \
26, 102, 114, 50, 76, 86, 60, 104, 116, 121, \
163, 181, 197, 122, 137, 134, 95, 111, 58, 109, \
120, 57, 111, 121, 66, 120, 131, 68, 108, 119, \
51, 97, 107, 42, 104, 114, 49, 87, 97, 32, \
109, 119, 56, 116, 125, 68, 121, 132, 67, 136, \
148, 76, 110, 122, 49, 122, 134, 60, 129, 140, \
70, 71, 79, 28, 55, 63, 22, 79, 90, 25, \
104, 116, 43, 110, 121, 51, 113, 123, 62, 113, \
123, 62, 61, 69, 22, 113, 121, 74, 128, 139, \
72, 117, 131, 59, 80, 93, 18, 107, 117, 43, \
84, 96, 53, 76, 97, 89, 145, 169, 186, 140, \
158, 164, 79, 94, 49, 107, 118, 56, 117, 126, \
71, 108, 119, 56, 116, 127, 58, 103, 114, 49, \
90, 101, 35, 96, 107, 40, 99, 109, 46, 108, \
117, 61, 115, 125, 63, 148, 160, 88, 103, 115, \
42, 116, 127, 55, 134, 146, 76, 80, 90, 33, \
98, 107, 56, 90, 99, 42, 78, 90, 26, 130, \
141, 69, 111, 122, 56, 131, 142, 78, 94, 103, \
50, 101, 110, 61, 130, 141, 77, 134, 147, 81, \
93, 104, 35, 110, 118, 45, 93, 105, 50, 65, \
85, 65, 131, 153, 168, 157, 172, 177, 74, 88, \
47, 108, 113, 55, 120, 128, 71, 111, 122, 58, \
110, 121, 53, 113, 124, 59, 100, 112, 46, 102, \
114, 47, 107, 118, 54, 106, 115, 58, 116, 125, \
67, 153, 165, 94, 111, 122, 52, 117, 128, 62, \
104, 115, 50, 98, 109, 44, 100, 110, 48, 92, \
102, 46, 112, 122, 61, 116, 127, 64, 123, 133, \
71, 119, 129, 66, 117, 127, 67, 88, 97, 42, \
93, 102, 47, 128, 139, 76, 98, 109, 42, 104, \
114, 50, 100, 111, 50, 91, 94, 57, 146, 122, \
121, 194, 163, 149, 101, 97, 50, 112, 115, 51, \
130, 138, 73, 112, 123, 57, 104, 115, 49, 118, \
129, 63, 111, 124, 57, 106, 120, 54, 94, 109, \
45, 100, 110, 51, 115, 124, 67, 124, 135, 68, \
132, 144, 74, 107, 118, 51, 74, 85, 24, 126, \
137, 71, 95, 105, 45, 52, 62, 14, 126, 136, \
75, 120, 131, 64, 125, 136, 66, 107, 118, 52, \
108, 119, 56, 98, 107, 48, 79, 88, 33, 108, \
118, 53, 111, 122, 50, 101, 112, 44, 107, 119, \
53, 129, 118, 61, 179, 96, 60, 232, 116, 87, \
143, 91, 36, 99, 112, 33, 120, 134, 64, 105, \
115, 50, 102, 113, 48, 111, 122, 56, 97, 110, \
46, 101, 115, 54, 76, 90, 32, 100, 110, 49, \
110, 119, 62, 100, 111, 47, 128, 139, 69, 126, \
138, 68, 101, 112, 46, 120, 131, 68, 101, 111, \
53, 84, 93, 39, 117, 128, 65, 125, 137, 65, \
102, 115, 37, 105, 117, 46, 106, 116, 50, 102, \
112, 50, 92, 102, 43, 87, 98, 28, 113, 125, \
48, 99, 110, 38, 106, 118, 49, 128, 129, 56, \
178, 110, 48, 244, 109, 76, 156, 78, 34, 103, \
110, 43, 116, 132, 64, 98, 109, 45, 87, 98, \
34, 105, 116, 50, 99, 112, 47, 87, 101, 40, \
82, 95, 40, 115, 125, 61, 107, 116, 62, 70, \
80, 23, 111, 122, 51, 131, 143, 70, 102, 113, \
46, 64, 74, 21, 79, 88, 34, 84, 94, 33, \
98, 109, 43, 125, 137, 64, 102, 115, 39, 112, \
123, 51, 110, 121, 52, 97, 107, 42, 103, 113, \
51, 91, 102, 34, 106, 118, 45, 107, 119, 50, \
102, 113, 47, 105, 120, 50, 148, 133, 67, 196, \
124, 84, 131, 87, 45, 93, 93, 39, 115, 126, \
61, 104, 115, 51, 91, 102, 39, 104, 115, 49, \
113, 127, 56, 92, 107, 39, 92, 106, 47, 111, \
122, 55, 85, 94, 44, 56, 66, 13, 99, 111, \
40, 110, 122, 49, 101, 112, 45, 68, 78, 24, \
107, 117, 57, 83, 95, 25, 62, 73, 9, 100, \
112, 43, 117, 129, 59, 101, 113, 42, 109, 120, \
50, 91, 102, 35, 89, 100, 36, 91, 102, 38, \
108, 118, 53, 106, 116, 53, 101, 111, 52, 101, \
111, 53, 127, 125, 68, 124, 111, 56, 95, 102, \
40, 94, 102, 39, 107, 117, 51, 115, 126, 60, \
78, 90, 26, 94, 105, 41, 120, 135, 60, 87, \
103, 28, 95, 110, 44, 110, 121, 47, 89, 99, \
43, 77, 90, 28, 102, 115, 43, 99, 111, 43, \
117, 128, 58, 119, 130, 61, 131, 143, 71, 90, \
102, 30, 69, 79, 18, 71, 81, 21, 104, 114, \
50, 109, 119, 54, 108, 120, 50, 97, 111, 39, \
90, 106, 39, 82, 94, 34, 100, 110, 47, 110, \
121, 54, 99, 109, 48, 90, 98, 45, 114, 121, \
63, 111, 122, 51, 96, 110, 46, 97, 107, 41, \
93, 105, 40, 114, 129, 59, 87, 101, 31, 81, \
94, 28, 120, 135, 63, 83, 98, 32, 99, 114, \
45, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '11474';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a896298f119436a7b76ae1656975fe33f';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_deer4';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{172, 188, 213, 174, 191, 215, 173, 190, 214, 172, 191, \
213, 171, 191, 213, 171, 192, 214, 172, 193, 216, \
172, 193, 217, 172, 193, 217, 170, 192, 216, 170, \
192, 216, 171, 192, 216, 172, 193, 214, 174, 193, \
211, 174, 193, 211, 175, 192, 211, 175, 191, 211, \
175, 190, 210, 177, 190, 211, 177, 189, 211, 175, \
190, 212, 172, 192, 213, 171, 192, 213, 173, 191, \
212, 179, 191, 212, 179, 191, 211, 175, 192, 213, \
173, 193, 215, 172, 194, 218, 173, 194, 217, 175, \
193, 212, 178, 192, 209, 172, 191, 213, 174, 193, \
217, 173, 193, 217, 173, 193, 219, 172, 192, 219, \
172, 193, 218, 173, 195, 217, 174, 195, 219, 174, \
195, 220, 171, 192, 220, 171, 192, 222, 172, 192, \
224, 176, 193, 220, 179, 193, 216, 179, 193, 216, \
179, 193, 215, 178, 192, 214, 178, 192, 212, 179, \
193, 213, 179, 192, 215, 176, 192, 215, 173, 193, \
214, 172, 193, 214, 173, 194, 214, 176, 192, 215, \
176, 190, 213, 174, 191, 211, 174, 194, 216, 172, \
195, 220, 172, 196, 220, 175, 195, 218, 177, 195, \
215, 169, 190, 210, 172, 192, 214, 173, 190, 214, \
174, 189, 214, 176, 190, 216, 176, 189, 210, 176, \
187, 198, 176, 184, 195, 175, 183, 198, 175, 182, \
202, 177, 184, 209, 181, 187, 214, 181, 189, 217, \
179, 190, 218, 178, 190, 217, 177, 192, 218, 176, \
193, 218, 175, 194, 217, 175, 194, 217, 177, 191, \
215, 176, 190, 212, 174, 191, 210, 172, 191, 209, \
172, 191, 212, 173, 191, 215, 170, 185, 207, 168, \
181, 198, 171, 188, 208, 172, 194, 217, 170, 194, \
219, 171, 194, 219, 173, 193, 217, 170, 191, 211, \
175, 192, 212, 179, 190, 208, 182, 187, 203, 176, \
176, 191, 167, 162, 170, 159, 150, 143, 154, 142, \
135, 150, 137, 135, 149, 136, 138, 160, 146, 152, \
174, 161, 170, 177, 173, 191, 177, 183, 207, 181, \
190, 214, 179, 192, 217, 176, 193, 218, 172, 194, \
219, 171, 193, 218, 175, 188, 211, 174, 184, 203, \
174, 185, 200, 172, 187, 201, 177, 193, 211, 174, \
192, 216, 171, 185, 206, 159, 167, 179, 163, 173, \
188, 175, 193, 213, 170, 193, 216, 170, 193, 218, \
171, 193, 217, 172, 191, 214, 180, 191, 208, 182, \
183, 193, 171, 161, 163, 145, 126, 122, 135, 111, \
100, 133, 106, 85, 129, 101, 78, 119, 90, 70, \
110, 81, 64, 115, 86, 72, 130, 101, 89, 139, \
120, 118, 147, 139, 145, 165, 160, 169, 175, 176, \
187, 178, 185, 201, 178, 191, 210, 176, 191, 212, \
178, 186, 205, 170, 174, 189, 162, 167, 177, 169, \
176, 185, 182, 193, 207, 175, 191, 213, 176, 186, \
204, 150, 149, 156, 140, 143, 152, 176, 188, 203, \
175, 193, 213, 171, 192, 215, 172, 193, 215, 172, \
189, 215, 187, 192, 207, 175, 165, 166, 137, 111, \
99, 131, 94, 71, 134, 94, 66, 126, 90, 62, \
116, 82, 54, 109, 74, 46, 103, 68, 40, 104, \
69, 42, 112, 77, 51, 115, 82, 58, 113, 83, \
63, 121, 96, 81, 136, 117, 109, 154, 142, 141, \
166, 160, 165, 167, 165, 174, 177, 176, 189, 157, \
156, 165, 131, 129, 133, 144, 144, 148, 167, 173, \
182, 176, 188, 208, 181, 186, 201, 151, 143, 144, \
106, 102, 106, 151, 157, 169, 178, 192, 209, 174, \
192, 212, 174, 192, 214, 174, 188, 211, 193, 193, \
201, 163, 142, 132, 130, 94, 69, 134, 93, 61, \
127, 88, 58, 114, 80, 53, 105, 72, 45, 104, \
70, 42, 103, 68, 39, 101, 66, 36, 107, 71, \
41, 118, 77, 43, 119, 75, 41, 114, 74, 44, \
112, 76, 53, 121, 90, 74, 134, 108, 96, 133, \
111, 102, 142, 127, 124, 131, 120, 115, 103, 93, \
85, 105, 99, 93, 126, 123, 123, 152, 153, 163, \
173, 167, 172, 146, 129, 122, 85, 74, 72, 124, \
124, 133, 178, 187, 204, 178, 191, 212, 176, 192, \
212, 178, 189, 206, 182, 176, 176, 143, 114, 93, \
129, 86, 53, 124, 88, 60, 109, 82, 60, 103, \
73, 50, 102, 70, 45, 106, 74, 48, 109, 74, \
47, 108, 73, 45, 112, 76, 47, 124, 81, 50, \
131, 83, 50, 126, 80, 49, 122, 78, 49, 124, \
81, 54, 126, 85, 60, 119, 80, 56, 113, 83, \
59, 110, 86, 63, 112, 93, 71, 104, 89, 71, \
100, 87, 75, 106, 92, 87, 130, 110, 100, 123, \
98, 81, 81, 64, 57, 119, 114, 123, 182, 186, \
206, 181, 192, 214, 177, 191, 211, 179, 188, 204, \
160, 151, 150, 128, 94, 73, 129, 83, 50, 114, \
78, 51, 99, 73, 53, 102, 72, 48, 106, 73, \
47, 113, 79, 53, 121, 86, 58, 123, 86, 57, \
123, 85, 55, 128, 84, 54, 133, 84, 52, 128, \
80, 48, 125, 78, 46, 125, 78, 47, 125, 78, \
47, 118, 73, 42, 114, 77, 46, 108, 78, 47, \
109, 85, 56, 110, 90, 66, 101, 82, 63, 93, \
71, 57, 91, 65, 49, 95, 68, 49, 79, 61, \
53, 105, 98, 107, 174, 179, 198, 181, 192, 215, \
176, 192, 213, 180, 187, 206, 150, 140, 144, 120, \
87, 69, 129, 81, 50, 112, 72, 46, 99, 69, \
48, 105, 72, 47, 113, 78, 51, 123, 88, 59, \
131, 94, 65, 125, 87, 56, 120, 80, 48, 124, \
80, 48, 124, 77, 44, 117, 70, 38, 122, 74, \
41, 126, 78, 44, 126, 77, 43, 122, 74, 41, \
121, 79, 46, 114, 79, 47, 106, 76, 46, 108, \
82, 55, 108, 84, 61, 111, 84, 66, 101, 73, \
55, 85, 60, 42, 76, 59, 50, 79, 73, 77, \
149, 153, 168, 179, 191, 212, 175, 191, 214, 180, \
189, 209, 156, 149, 156, 119, 87, 73, 123, 75, \
46, 118, 75, 48, 108, 74, 52, 109, 75, 50, \
115, 81, 53, 125, 89, 61, 128, 91, 62, 123, \
84, 53, 119, 78, 47, 118, 76, 44, 116, 73, \
41, 112, 67, 35, 119, 73, 40, 129, 81, 47, \
129, 81, 45, 123, 74, 38, 120, 74, 42, 118, \
77, 46, 113, 78, 47, 113, 83, 54, 117, 89, \
63, 125, 94, 72, 111, 81, 61, 92, 67, 49, \
83, 65, 53, 69, 60, 58, 119, 119, 128, 176, \
186, 203, 176, 192, 216, 179, 190, 212, 169, 166, \
175, 123, 97, 85, 118, 73, 45, 122, 79, 51, \
110, 75, 52, 106, 74, 50, 110, 78, 52, 118, \
84, 58, 121, 86, 58, 120, 84, 55, 119, 82, \
52, 115, 78, 48, 109, 72, 44, 107, 68, 38, \
116, 74, 43, 128, 83, 50, 129, 82, 47, 120, \
73, 37, 118, 71, 41, 120, 77, 48, 121, 84, \
55, 124, 92, 63, 121, 91, 65, 134, 102, 78, \
125, 94, 73, 109, 82, 63, 93, 72, 55, 72, \
58, 47, 91, 87, 86, 156, 162, 174, 179, 193, \
215, 175, 191, 213, 177, 181, 192, 140, 120, 110, \
127, 88, 61, 127, 86, 57, 105, 72, 48, 96, \
68, 46, 106, 77, 55, 117, 87, 64, 112, 80, \
55, 112, 79, 53, 113, 79, 53, 109, 77, 51, \
101, 70, 46, 101, 68, 42, 108, 72, 43, 121, \
82, 50, 129, 87, 53, 120, 76, 42, 117, 71, \
44, 116, 73, 48, 121, 85, 58, 129, 98, 71, \
125, 95, 70, 136, 105, 81, 139, 107, 85, 131, \
100, 79, 115, 88, 65, 89, 68, 48, 78, 67, \
57, 118, 119, 125, 169, 179, 198, 170, 191, 214, \
181, 189, 200, 152, 136, 126, 136, 100, 72, 130, \
93, 61, 100, 70, 44, 100, 75, 54, 112, 87, \
67, 102, 77, 57, 103, 75, 54, 105, 76, 54, \
103, 73, 50, 98, 71, 49, 92, 67, 46, 94, \
67, 45, 99, 67, 42, 117, 81, 52, 130, 92, \
59, 122, 81, 49, 118, 74, 49, 115, 73, 50, \
121, 84, 60, 131, 100, 76, 124, 97, 74, 120, \
93, 71, 125, 96, 76, 133, 102, 81, 141, 111, \
87, 118, 94, 70, 82, 68, 54, 86, 84, 86, \
148, 156, 172, 170, 193, 214, 181, 187, 194, 153, \
134, 117, 132, 97, 64, 118, 87, 55, 94, 71, \
45, 106, 83, 60, 99, 79, 59, 82, 65, 48, \
90, 71, 55, 96, 73, 55, 97, 68, 47, 94, \
68, 46, 87, 68, 49, 87, 67, 51, 93, 65, \
44, 119, 81, 53, 132, 91, 61, 125, 87, 59, \
122, 83, 57, 120, 78, 48, 126, 84, 56, 129, \
100, 82, 122, 111, 104, 136, 136, 135, 158, 156, \
159, 167, 160, 165, 167, 160, 159, 147, 144, 137, \
107, 107, 104, 107, 111, 120, 161, 168, 189, 173, \
193, 214, 175, 178, 182, 142, 121, 103, 127, 93, \
63, 97, 73, 47, 93, 77, 57, 101, 83, 62, \
72, 57, 39, 65, 55, 43, 80, 70, 61, 83, \
68, 57, 84, 63, 49, 82, 63, 46, 77, 65, \
52, 73, 62, 53, 86, 65, 48, 120, 82, 57, \
138, 95, 68, 128, 90, 67, 118, 83, 55, 117, \
76, 46, 120, 81, 57, 121, 101, 93, 164, 168, \
177, 177, 194, 207, 177, 193, 211, 178, 189, 213, \
180, 191, 208, 175, 187, 196, 166, 179, 187, 170, \
181, 197, 180, 190, 215, 176, 192, 213, 168, 170, \
177, 133, 114, 103, 107, 78, 57, 82, 66, 53, \
113, 106, 99, 106, 95, 83, 69, 59, 49, 116, \
111, 106, 149, 146, 145, 124, 120, 121, 100, 95, \
94, 86, 81, 78, 82, 81, 80, 84, 83, 83, \
98, 84, 76, 120, 89, 69, 129, 90, 67, 111, \
75, 54, 101, 66, 43, 108, 74, 53, 101, 76, \
65, 134, 129, 137, 178, 192, 213, 176, 193, 211, \
175, 189, 208, 176, 190, 216, 178, 193, 213, 177, \
193, 206, 176, 192, 205, 177, 192, 211, 177, 191, \
217, 178, 191, 212, 168, 169, 180, 125, 109, 105, \
90, 68, 58, 115, 108, 109, 167, 170, 177, 146, \
144, 144, 86, 83, 82, 149, 149, 151, 188, 191, \
198, 177, 184, 196, 169, 179, 194, 168, 177, 190, \
166, 177, 190, 171, 181, 193, 162, 158, 158, 126, \
102, 89, 108, 76, 55, 95, 64, 46, 94, 64, \
47, 84, 57, 46, 95, 83, 86, 163, 173, 195, \
172, 195, 227, 173, 191, 214, 178, 191, 211, 174, \
191, 217, 171, 190, 213, 171, 191, 209, 173, 192, \
211, 171, 190, 213, 173, 191, 218, 177, 190, 211, \
176, 178, 192, 123, 111, 112, 111, 94, 93, 171, \
170, 183, 180, 192, 211, 173, 179, 190, 113, 115, \
121, 115, 116, 122, 182, 185, 197, 182, 193, 212, \
174, 193, 218, 177, 195, 219, 176, 194, 216, 177, \
194, 215, 172, 174, 183, 131, 114, 107, 95, 69, \
54, 98, 74, 61, 120, 99, 88, 76, 59, 54, \
102, 98, 108, 169, 185, 213, 168, 196, 231, 174, \
193, 218, 179, 193, 213, 174, 193, 219, 173, 194, \
219, 173, 195, 217, 173, 195, 217, 173, 194, 219, \
173, 194, 221, 172, 189, 210, 182, 188, 202, 134, \
125, 129, 134, 121, 123, 186, 189, 206, 175, 193, \
218, 180, 193, 212, 153, 158, 170, 100, 98, 107, \
163, 162, 174, 181, 190, 210, 172, 190, 220, 172, \
191, 221, 173, 192, 218, 173, 192, 218, 178, 185, \
198, 148, 137, 135, 94, 74, 65, 118, 102, 95, \
152, 143, 139, 88, 79, 79, 122, 119, 128, 172, \
185, 209, 168, 193, 224, 173, 195, 218, 176, 193, \
212, 175, 194, 218, 174, 194, 219, 174, 194, 219, \
174, 194, 218, 174, 194, 219, 174, 194, 219, 170, \
191, 211, 181, 191, 205, 143, 137, 141, 136, 125, \
128, 185, 190, 206, 175, 195, 222, 175, 192, 215, \
178, 184, 198, 131, 126, 134, 137, 130, 138, 180, \
183, 200, 177, 191, 219, 177, 192, 222, 177, 193, \
221, 174, 192, 219, 183, 190, 206, 166, 158, 159, \
105, 91, 86, 131, 123, 120, 169, 170, 172, 113, \
110, 111, 138, 132, 134, 180, 185, 198, 172, 193, \
215, 172, 196, 217, 174, 194, 213, 176, 194, 216, \
176, 194, 217, 176, 194, 218, 176, 194, 218, 176, \
194, 217, 176, 194, 216, 169, 191, 212, 182, 193, \
208, 155, 151, 156, 135, 125, 128, 182, 187, 202, \
175, 195, 222, 174, 191, 218, 184, 190, 207, 168, \
163, 170, 121, 113, 118, 157, 156, 169, 179, 188, \
211, 178, 189, 217, 177, 191, 218, 175, 192, 217, \
183, 193, 210, 176, 174, 181, 120, 112, 110, 130, \
126, 124, 179, 187, 196, 149, 149, 154, 157, 148, \
148, 184, 185, 193, 176, 194, 213, 171, 196, 217, \
173, 194, 214, 176, 194, 214, 177, 194, 216, 177, \
193, 217, 177, 193, 217, 177, 194, 216, 177, 194, \
215, 171, 190, 214, 183, 191, 212, 167, 160, 171, \
135, 123, 129, 178, 182, 196, 178, 196, 221, 174, \
191, 219, 183, 192, 211, 183, 184, 193, 126, 123, \
128, 118, 117, 125, 169, 172, 186, 182, 190, 213, \
177, 191, 216, 176, 194, 213, 178, 194, 212, 179, \
187, 203, 149, 148, 150, 147, 145, 139, 180, 190, \
208, 168, 168, 184, 145, 135, 139, 170, 173, 183, \
176, 197, 220, 171, 194, 219, 176, 193, 215, 176, \
194, 215, 176, 194, 216, 176, 194, 216, 176, 194, \
216, 176, 194, 216, 176, 194, 216, 173, 191, 215, \
183, 191, 213, 174, 167, 180, 126, 115, 122, 167, \
171, 184, 179, 197, 219, 174, 193, 219, 180, 193, \
215, 185, 191, 207, 155, 155, 166, 111, 111, 118, \
144, 145, 151, 180, 186, 205, 177, 191, 216, 175, \
194, 211, 175, 194, 212, 179, 191, 210, 168, 170, \
174, 171, 170, 163, 178, 187, 207, 175, 176, 196, \
131, 124, 130, 154, 158, 169, 178, 198, 221, 172, \
193, 219, 177, 194, 217, 176, 194, 216, 176, 194, \
216, 176, 194, 216, 176, 194, 216, 176, 194, 216, \
176, 194, 216, 173, 190, 214, 182, 192, 214, 174, \
171, 185, 117, 109, 116, 152, 156, 168, 177, 195, \
215, 173, 195, 218, 175, 193, 218, 181, 190, 217, \
180, 182, 204, 164, 164, 174, 153, 154, 154, 166, \
172, 186, 178, 192, 217, 174, 194, 211, 174, 194, \
213, 180, 193, 213, 161, 164, 171, 136, 135, 130, \
170, 179, 197, 182, 186, 205, 139, 137, 144, 145, \
149, 158, 180, 196, 215, 174, 192, 217, 176, 193, \
218, 176, 194, 216, 176, 194, 216, 176, 194, 216, \
176, 194, 216, 176, 194, 216, 176, 194, 216, 172, \
191, 213, 180, 193, 216, 177, 177, 192, 122, 117, \
125, 142, 147, 158, 175, 193, 210, 172, 195, 216, \
173, 193, 221, 177, 190, 223, 180, 187, 215, 191, \
194, 208, 163, 166, 166, 146, 154, 166, 176, 192, \
216, 174, 195, 212, 172, 193, 213, 180, 194, 216, \
164, 168, 178, 113, 112, 110, 165, 174, 188, 183, \
191, 209, 145, 148, 156, 133, 136, 143, 180, 189, \
202, 176, 192, 216, 174, 193, 219, 175, 194, 216, \
176, 194, 216, 176, 194, 216, 175, 193, 215, 175, \
193, 215, 175, 193, 215, 172, 192, 213, 178, 194, \
217, 183, 187, 204, 164, 162, 170, 159, 164, 174, \
175, 192, 209, 174, 195, 217, 174, 194, 222, 173, \
191, 223, 175, 188, 216, 182, 192, 208, 167, 174, \
180, 156, 167, 182, 174, 192, 214, 172, 194, 211, \
171, 193, 214, 178, 193, 217, 171, 176, 189, 122, \
122, 122, 159, 167, 179, 180, 192, 209, 150, 159, \
169, 125, 128, 133, 176, 179, 186, 179, 192, 213, \
172, 192, 219, 175, 194, 217, 176, 194, 216, 176, \
194, 216, 175, 193, 215, 174, 192, 214, 174, 192, \
214, 172, 193, 213, 175, 194, 217, 183, 191, 208, \
180, 180, 189, 156, 162, 171, 169, 183, 201, 177, \
193, 219, 175, 193, 220, 172, 193, 217, 171, 192, \
212, 176, 193, 210, 178, 190, 207, 175, 188, 210, \
173, 192, 214, 171, 195, 211, 170, 194, 214, 174, \
190, 216, 176, 181, 197, 131, 131, 132, 145, 153, \
162, 175, 191, 207, 166, 180, 192, 150, 152, 155, \
173, 170, 173, 179, 189, 208, 170, 191, 220, 175, \
194, 217, 176, 194, 216, 176, 194, 216, 174, 192, \
214, 174, 192, 214, 174, 192, 214, 172, 193, 213, \
174, 195, 219, 180, 192, 210, 165, 167, 178, 141, \
148, 157, 167, 179, 198, 178, 189, 219, 175, 191, \
215, 172, 195, 210, 170, 196, 209, 172, 194, 213, \
175, 192, 219, 175, 191, 219, 173, 194, 214, 170, \
196, 212, 168, 193, 214, 171, 188, 214, 180, 187, \
205, 169, 170, 174, 157, 165, 173, 173, 191, 207, \
179, 196, 209, 182, 185, 187, 163, 157, 158, 173, \
183, 202, 172, 193, 222, 174, 193, 217, 176, 194, \
216, 176, 194, 216, 175, 193, 215, 174, 192, 214, \
174, 192, 214, 172, 192, 213, 175, 195, 218, 178, \
193, 213, 172, 184, 200, 167, 180, 196, 174, 189, \
210, 176, 190, 216, 175, 192, 214, 173, 194, 211, \
172, 195, 211, 173, 194, 215, 174, 192, 218, 172, \
191, 218, 170, 193, 215, 170, 194, 214, 170, 193, \
214, 171, 188, 211, 176, 188, 206, 184, 192, 204, \
166, 178, 193, 170, 187, 207, 176, 194, 212, 169, \
179, 192, 133, 138, 150, 163, 176, 196, 173, 192, \
218, 173, 192, 214, 174, 192, 214, 174, 192, 214, \
174, 192, 214, 173, 191, 213, 174, 191, 213, 175, \
193, 214, 177, 195, 218, 177, 195, 217, 177, 195, \
216, 178, 195, 217, 177, 195, 217, 177, 194, 217, \
177, 195, 217, 176, 195, 216, 176, 195, 216, 176, \
195, 217, 176, 195, 217, 173, 194, 218, 171, 194, \
218, 172, 194, 217, 173, 194, 215, 175, 193, 213, \
178, 193, 212, 155, 170, 187, 131, 147, 168, 166, \
182, 205, 177, 193, 215, 173, 188, 210, 166, 181, \
203, 173, 188, 211, 175, 192, 215, 175, 193, 215, \
175, 193, 215, 175, 193, 215, 175, 193, 215, 175, \
193, 215, 175, 193, 215, 172, 190, 211, 175, 193, \
214, 175, 192, 214, 174, 192, 214, 174, 191, 213, \
174, 192, 214, 175, 193, 215, 175, 193, 215, 175, \
193, 215, 175, 193, 215, 175, 193, 215, 175, 193, \
215, 172, 192, 215, 170, 192, 215, 170, 191, 214, \
172, 192, 213, 174, 192, 212, 176, 193, 211, 167, \
183, 201, 158, 174, 195, 172, 188, 211, 175, 191, \
214, 175, 190, 213, 175, 190, 213, 174, 190, 213, \
174, 191, 214, 173, 191, 213, 173, 191, 213, 173, \
191, 213, 173, 191, 213, 173, 191, 213, 173, 191, \
213, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '11784';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a53fa70ff504e8db30eea1710dc5f7960';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_airplane6';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{144, 151, 157, 142, 149, 155, 142, 149, 155, 142, 149, \
155, 142, 149, 155, 142, 149, 155, 142, 149, 155, \
142, 149, 155, 142, 149, 155, 142, 149, 155, 142, \
149, 155, 143, 149, 155, 145, 148, 155, 145, 148, \
155, 142, 149, 155, 142, 149, 155, 142, 149, 155, \
142, 149, 155, 142, 149, 155, 142, 149, 155, 142, \
149, 155, 142, 149, 155, 142, 149, 155, 142, 149, \
155, 142, 149, 155, 142, 149, 155, 142, 149, 155, \
142, 149, 155, 142, 149, 155, 142, 149, 155, 142, \
149, 155, 142, 149, 155, 143, 150, 156, 141, 148, \
154, 141, 148, 154, 141, 148, 154, 141, 148, 154, \
141, 148, 154, 141, 148, 154, 141, 148, 154, 141, \
148, 154, 141, 148, 154, 141, 148, 154, 142, 148, \
154, 144, 147, 154, 144, 148, 154, 142, 148, 154, \
141, 148, 154, 141, 148, 154, 141, 148, 154, 141, \
148, 154, 141, 148, 154, 141, 148, 154, 141, 148, \
154, 141, 148, 154, 141, 148, 154, 141, 148, 154, \
141, 148, 154, 141, 148, 154, 141, 148, 154, 141, \
148, 154, 141, 148, 154, 141, 148, 154, 141, 148, \
154, 144, 151, 157, 142, 149, 155, 142, 149, 155, \
142, 149, 155, 142, 149, 155, 142, 149, 155, 142, \
149, 155, 142, 149, 155, 142, 149, 155, 142, 149, \
155, 142, 149, 155, 142, 149, 155, 143, 149, 155, \
142, 149, 155, 141, 148, 154, 141, 148, 154, 141, \
148, 154, 141, 148, 154, 141, 148, 154, 141, 148, \
154, 141, 148, 154, 141, 148, 154, 141, 148, 154, \
141, 148, 154, 141, 148, 154, 141, 148, 154, 141, \
148, 154, 141, 148, 154, 141, 148, 154, 141, 148, \
154, 141, 148, 154, 141, 148, 154, 144, 151, 157, \
142, 149, 155, 142, 149, 155, 142, 149, 155, 142, \
149, 155, 142, 149, 155, 142, 149, 155, 142, 149, \
155, 142, 149, 155, 142, 149, 155, 142, 149, 155, \
142, 149, 155, 142, 149, 155, 142, 149, 155, 141, \
148, 154, 141, 148, 154, 141, 148, 154, 141, 148, \
154, 141, 148, 154, 141, 148, 154, 141, 148, 154, \
141, 148, 154, 141, 148, 154, 141, 148, 154, 141, \
148, 154, 141, 148, 154, 141, 148, 154, 141, 148, \
154, 141, 148, 154, 141, 148, 154, 141, 148, 154, \
141, 148, 154, 143, 150, 156, 141, 148, 154, 142, \
149, 155, 142, 149, 155, 142, 149, 155, 142, 149, \
155, 142, 149, 155, 142, 149, 155, 142, 149, 155, \
142, 149, 155, 142, 149, 155, 142, 149, 155, 142, \
149, 155, 142, 149, 155, 141, 148, 154, 141, 148, \
154, 141, 148, 154, 141, 148, 154, 141, 148, 154, \
141, 148, 154, 141, 148, 154, 141, 148, 154, 141, \
148, 154, 141, 148, 154, 141, 148, 154, 141, 148, \
154, 141, 148, 154, 141, 148, 154, 141, 148, 154, \
141, 148, 154, 141, 148, 154, 141, 148, 154, 143, \
150, 156, 141, 148, 154, 141, 148, 154, 142, 149, \
155, 142, 149, 155, 141, 148, 154, 141, 148, 154, \
142, 149, 155, 142, 149, 155, 142, 149, 155, 142, \
149, 155, 142, 149, 155, 141, 148, 154, 141, 148, \
154, 141, 148, 154, 141, 148, 154, 141, 148, 154, \
141, 148, 154, 141, 148, 154, 141, 148, 154, 141, \
148, 154, 141, 148, 154, 141, 148, 154, 141, 148, \
154, 141, 148, 154, 141, 148, 154, 141, 148, 154, \
140, 147, 153, 140, 147, 153, 140, 147, 153, 140, \
147, 153, 140, 147, 153, 143, 150, 156, 141, 148, \
154, 141, 148, 154, 142, 149, 155, 142, 149, 155, \
138, 145, 151, 137, 144, 150, 142, 149, 155, 142, \
149, 155, 142, 149, 155, 142, 149, 155, 142, 149, \
155, 141, 148, 154, 141, 148, 154, 141, 148, 154, \
141, 148, 154, 141, 148, 154, 141, 148, 154, 141, \
148, 154, 141, 148, 154, 141, 148, 154, 141, 148, \
154, 141, 148, 154, 141, 148, 154, 141, 148, 154, \
141, 148, 154, 140, 147, 153, 140, 147, 153, 140, \
147, 153, 140, 147, 153, 140, 147, 153, 140, 147, \
153, 143, 150, 156, 141, 148, 154, 141, 148, 154, \
141, 148, 154, 142, 149, 155, 140, 147, 153, 139, \
146, 152, 141, 148, 154, 142, 149, 155, 142, 149, \
155, 142, 149, 155, 142, 149, 155, 141, 148, 154, \
141, 148, 154, 141, 148, 154, 141, 148, 154, 141, \
148, 154, 141, 148, 154, 141, 148, 154, 141, 148, \
154, 141, 148, 154, 141, 148, 154, 140, 147, 153, \
140, 147, 153, 140, 147, 153, 140, 147, 153, 140, \
147, 153, 140, 147, 153, 140, 147, 153, 140, 147, \
153, 140, 147, 153, 140, 147, 153, 143, 150, 156, \
141, 148, 154, 141, 148, 154, 141, 148, 154, 141, \
148, 154, 141, 148, 154, 141, 148, 154, 141, 148, \
154, 141, 148, 154, 141, 148, 154, 141, 148, 154, \
141, 148, 154, 140, 147, 153, 140, 147, 153, 140, \
147, 153, 140, 147, 153, 140, 147, 153, 140, 147, \
153, 140, 147, 153, 140, 147, 153, 140, 147, 153, \
140, 147, 153, 140, 147, 153, 140, 147, 153, 140, \
147, 153, 140, 147, 153, 140, 147, 153, 140, 147, \
153, 140, 147, 153, 140, 147, 153, 140, 147, 153, \
139, 146, 152, 143, 150, 156, 141, 148, 154, 141, \
148, 154, 141, 148, 154, 141, 148, 154, 141, 148, \
154, 141, 148, 154, 141, 148, 154, 141, 148, 154, \
141, 148, 154, 141, 148, 154, 141, 148, 154, 139, \
146, 152, 139, 146, 152, 140, 147, 153, 140, 147, \
153, 140, 147, 153, 140, 147, 153, 140, 147, 153, \
140, 147, 153, 140, 147, 153, 140, 147, 153, 140, \
147, 153, 140, 147, 153, 140, 147, 153, 140, 147, \
153, 140, 147, 153, 140, 147, 153, 140, 147, 153, \
140, 147, 153, 140, 147, 153, 139, 146, 152, 142, \
149, 155, 140, 147, 153, 140, 147, 153, 140, 147, \
153, 141, 148, 154, 140, 147, 153, 140, 147, 153, \
140, 147, 153, 140, 147, 153, 140, 147, 153, 141, \
148, 154, 140, 147, 153, 139, 146, 152, 139, 146, \
152, 140, 147, 153, 140, 147, 153, 140, 147, 153, \
140, 147, 153, 139, 147, 154, 138, 146, 153, 139, \
147, 153, 140, 147, 153, 139, 146, 152, 139, 146, \
152, 139, 146, 152, 139, 146, 152, 139, 146, 152, \
139, 146, 152, 139, 146, 152, 139, 146, 152, 139, \
146, 152, 137, 144, 150, 142, 149, 155, 140, 147, \
153, 140, 147, 153, 140, 147, 153, 140, 147, 153, \
140, 147, 153, 140, 147, 153, 140, 147, 153, 140, \
147, 153, 138, 145, 151, 137, 144, 150, 141, 148, \
154, 140, 147, 153, 139, 146, 151, 139, 146, 152, \
140, 147, 153, 139, 146, 152, 139, 146, 152, 140, \
147, 154, 139, 147, 154, 139, 146, 153, 140, 147, \
153, 139, 146, 152, 138, 145, 151, 138, 145, 151, \
138, 145, 151, 138, 145, 151, 138, 145, 151, 138, \
145, 151, 138, 145, 151, 138, 145, 151, 138, 145, \
151, 142, 149, 155, 140, 147, 153, 140, 147, 153, \
140, 147, 153, 140, 147, 153, 140, 147, 153, 140, \
147, 153, 122, 129, 135, 110, 117, 123, 104, 111, \
117, 107, 114, 120, 110, 117, 123, 128, 135, 141, \
142, 149, 155, 141, 148, 155, 141, 148, 155, 140, \
147, 154, 139, 145, 151, 136, 141, 145, 136, 141, \
144, 140, 146, 151, 140, 147, 153, 139, 146, 152, \
138, 145, 151, 138, 145, 151, 138, 145, 151, 138, \
145, 151, 138, 145, 151, 138, 145, 151, 138, 145, \
151, 138, 145, 151, 138, 145, 151, 140, 147, 153, \
139, 146, 152, 139, 146, 152, 140, 147, 153, 141, \
148, 154, 140, 147, 153, 140, 147, 153, 94, 100, \
105, 61, 64, 66, 58, 60, 60, 65, 69, 70, \
56, 60, 61, 82, 85, 87, 116, 117, 117, 126, \
128, 130, 131, 134, 137, 126, 128, 129, 120, 115, \
111, 113, 105, 95, 111, 104, 97, 126, 125, 125, \
140, 147, 152, 139, 146, 151, 138, 145, 151, 138, \
145, 151, 138, 145, 151, 138, 145, 151, 138, 145, \
151, 138, 145, 151, 138, 145, 151, 138, 145, 151, \
137, 144, 150, 140, 147, 153, 138, 145, 151, 139, \
146, 152, 139, 146, 152, 140, 147, 153, 140, 147, \
153, 139, 146, 152, 116, 123, 128, 84, 89, 90, \
49, 49, 47, 35, 35, 31, 26, 27, 23, 41, \
41, 33, 60, 55, 43, 76, 66, 51, 80, 70, \
55, 76, 67, 53, 74, 67, 56, 78, 72, 61, \
92, 82, 72, 116, 111, 108, 139, 146, 151, 138, \
145, 150, 138, 145, 151, 138, 145, 151, 138, 145, \
151, 138, 145, 151, 138, 145, 151, 138, 145, 151, \
138, 145, 151, 138, 145, 151, 137, 144, 150, 140, \
147, 153, 137, 144, 150, 138, 145, 151, 138, 145, \
151, 138, 145, 151, 139, 146, 152, 140, 146, 152, \
139, 148, 153, 123, 131, 134, 95, 99, 100, 97, \
101, 101, 89, 94, 95, 103, 108, 106, 106, 107, \
103, 109, 107, 103, 109, 107, 103, 106, 105, 101, \
103, 105, 104, 98, 102, 101, 85, 82, 78, 117, \
114, 112, 140, 147, 152, 138, 144, 150, 138, 145, \
151, 138, 145, 151, 138, 145, 151, 138, 145, 151, \
138, 145, 151, 138, 145, 151, 138, 145, 151, 138, \
145, 151, 137, 144, 150, 140, 147, 153, 137, 144, \
150, 138, 145, 151, 138, 145, 151, 138, 145, 151, \
138, 145, 151, 138, 145, 151, 139, 147, 154, 129, \
133, 139, 73, 71, 69, 75, 76, 73, 130, 138, \
144, 143, 151, 158, 141, 148, 154, 140, 148, 155, \
141, 149, 156, 142, 149, 156, 143, 150, 156, 138, \
145, 150, 125, 130, 134, 135, 139, 143, 138, 145, \
150, 138, 144, 150, 138, 145, 151, 138, 145, 151, \
135, 142, 148, 137, 144, 150, 138, 145, 151, 138, \
145, 151, 138, 145, 151, 138, 145, 151, 137, 144, \
150, 139, 146, 152, 137, 144, 150, 137, 144, 150, \
137, 144, 150, 137, 144, 150, 137, 144, 150, 137, \
144, 150, 137, 144, 151, 136, 140, 148, 105, 105, \
106, 93, 97, 94, 134, 141, 147, 137, 144, 150, \
137, 144, 150, 136, 143, 149, 136, 143, 149, 136, \
143, 149, 137, 144, 150, 137, 144, 150, 138, 145, \
151, 137, 145, 151, 137, 144, 150, 137, 144, 150, \
137, 144, 150, 137, 144, 150, 135, 142, 148, 136, \
143, 149, 137, 144, 150, 137, 144, 150, 137, 144, \
150, 137, 144, 150, 137, 144, 150, 138, 145, 151, \
136, 143, 149, 136, 143, 149, 136, 143, 149, 136, \
143, 149, 136, 143, 149, 136, 143, 149, 136, 143, \
150, 138, 145, 153, 140, 149, 155, 140, 149, 151, \
137, 144, 149, 136, 143, 150, 136, 143, 149, 133, \
140, 146, 136, 143, 149, 137, 144, 150, 137, 144, \
150, 137, 144, 150, 137, 144, 150, 137, 144, 150, \
137, 144, 150, 136, 143, 149, 136, 143, 149, 137, \
144, 150, 136, 143, 149, 136, 143, 149, 136, 143, \
149, 136, 143, 149, 136, 143, 149, 136, 143, 149, \
137, 144, 150, 138, 145, 151, 137, 144, 149, 137, \
144, 150, 136, 143, 149, 136, 143, 149, 136, 143, \
149, 137, 144, 150, 137, 144, 150, 137, 144, 150, \
136, 144, 150, 136, 143, 149, 136, 143, 149, 136, \
143, 149, 136, 143, 149, 135, 142, 148, 136, 143, \
149, 137, 144, 150, 137, 144, 150, 136, 143, 149, \
136, 143, 149, 136, 143, 149, 136, 143, 149, 136, \
143, 149, 134, 141, 147, 130, 137, 143, 136, 143, \
149, 136, 143, 149, 136, 143, 149, 136, 143, 149, \
135, 142, 148, 135, 142, 148, 135, 142, 148, 139, \
146, 152, 137, 144, 150, 137, 144, 150, 136, 143, \
149, 136, 143, 149, 137, 144, 150, 137, 144, 150, \
137, 144, 150, 137, 144, 150, 137, 144, 150, 136, \
143, 149, 136, 143, 149, 136, 143, 149, 136, 143, \
149, 136, 143, 149, 136, 143, 149, 137, 144, 150, \
137, 144, 150, 136, 143, 149, 136, 143, 149, 136, \
143, 149, 136, 143, 149, 135, 143, 149, 134, 141, \
147, 130, 137, 143, 136, 143, 149, 136, 143, 149, \
136, 143, 149, 136, 143, 149, 135, 142, 148, 135, \
142, 148, 135, 142, 148, 138, 146, 152, 137, 144, \
150, 137, 144, 150, 136, 143, 149, 136, 143, 149, \
136, 143, 149, 137, 144, 150, 137, 144, 150, 137, \
144, 150, 137, 144, 150, 136, 143, 149, 136, 143, \
149, 136, 143, 149, 136, 143, 149, 137, 143, 149, \
137, 143, 149, 137, 143, 150, 138, 144, 150, 137, \
143, 149, 137, 143, 149, 137, 143, 149, 137, 143, \
149, 136, 143, 149, 136, 143, 149, 136, 143, 149, \
136, 143, 149, 136, 143, 149, 136, 143, 149, 136, \
143, 149, 135, 142, 148, 135, 142, 148, 135, 142, \
148, 137, 146, 153, 136, 144, 150, 137, 144, 150, \
136, 143, 149, 136, 143, 149, 136, 143, 149, 136, \
143, 149, 136, 143, 149, 136, 143, 149, 136, 143, \
149, 136, 143, 149, 136, 143, 149, 136, 143, 149, \
136, 143, 149, 138, 142, 149, 139, 142, 149, 138, \
142, 149, 138, 142, 149, 139, 142, 149, 139, 142, \
149, 139, 142, 149, 139, 142, 149, 137, 143, 149, \
136, 143, 149, 136, 143, 149, 136, 143, 149, 136, \
143, 149, 136, 143, 149, 136, 143, 149, 135, 142, \
148, 135, 142, 148, 135, 142, 148, 138, 147, 154, \
137, 144, 150, 137, 144, 150, 136, 143, 149, 136, \
143, 149, 136, 143, 149, 136, 143, 149, 136, 143, \
149, 136, 143, 149, 136, 143, 149, 136, 143, 149, \
136, 143, 149, 136, 143, 149, 136, 143, 149, 139, \
142, 149, 139, 142, 149, 138, 141, 148, 135, 138, \
145, 137, 140, 147, 139, 142, 149, 139, 142, 149, \
139, 142, 149, 137, 143, 149, 136, 143, 149, 136, \
143, 149, 136, 143, 149, 136, 143, 149, 136, 143, \
149, 136, 143, 149, 135, 142, 148, 135, 142, 148, \
135, 142, 148, 138, 147, 154, 136, 144, 150, 137, \
144, 150, 136, 144, 150, 136, 143, 149, 136, 143, \
149, 136, 143, 149, 136, 143, 149, 136, 143, 149, \
136, 143, 149, 136, 143, 149, 136, 143, 149, 136, \
143, 149, 136, 143, 149, 138, 143, 149, 138, 143, \
149, 137, 142, 149, 136, 141, 147, 137, 142, 148, \
138, 142, 149, 139, 142, 149, 139, 142, 149, 137, \
143, 149, 136, 143, 149, 136, 143, 149, 136, 143, \
149, 136, 143, 149, 136, 143, 149, 136, 143, 149, \
135, 142, 148, 135, 142, 148, 135, 142, 148, 138, \
147, 152, 136, 145, 150, 136, 145, 150, 137, 144, \
150, 137, 144, 150, 137, 144, 150, 137, 144, 150, \
137, 144, 150, 137, 144, 150, 137, 144, 150, 136, \
143, 149, 136, 143, 149, 136, 143, 149, 136, 143, \
149, 133, 140, 146, 134, 141, 147, 136, 143, 149, \
136, 143, 149, 136, 143, 149, 136, 143, 149, 138, \
142, 149, 139, 142, 149, 137, 143, 149, 136, 143, \
149, 136, 143, 149, 136, 143, 149, 136, 143, 149, \
136, 143, 149, 136, 143, 149, 135, 142, 148, 135, \
142, 148, 135, 142, 148, 138, 147, 152, 136, 145, \
150, 136, 145, 150, 137, 144, 150, 137, 144, 150, \
137, 144, 150, 137, 144, 150, 137, 144, 150, 137, \
144, 150, 137, 144, 150, 136, 143, 149, 136, 143, \
149, 136, 143, 149, 136, 143, 149, 132, 139, 145, \
134, 141, 147, 136, 143, 149, 136, 143, 149, 136, \
143, 149, 136, 143, 149, 138, 142, 149, 139, 142, \
149, 137, 143, 149, 136, 143, 149, 136, 143, 149, \
136, 143, 149, 136, 143, 149, 136, 143, 149, 136, \
143, 149, 135, 142, 148, 135, 142, 148, 135, 142, \
148, 138, 146, 152, 136, 144, 149, 136, 144, 149, \
136, 144, 149, 136, 143, 149, 136, 143, 149, 136, \
143, 149, 137, 144, 150, 137, 144, 150, 137, 144, \
150, 137, 144, 150, 137, 144, 150, 137, 144, 150, \
136, 143, 149, 136, 143, 149, 136, 143, 149, 136, \
143, 149, 136, 143, 149, 136, 143, 149, 136, 143, \
149, 137, 143, 149, 138, 142, 149, 137, 143, 149, \
136, 143, 149, 136, 143, 149, 136, 143, 149, 136, \
143, 149, 136, 143, 149, 136, 143, 149, 135, 142, \
148, 135, 142, 148, 135, 142, 148, 139, 146, 152, \
136, 143, 149, 136, 143, 149, 136, 143, 149, 136, \
143, 149, 136, 143, 149, 136, 143, 149, 136, 143, \
149, 137, 144, 150, 137, 144, 150, 137, 144, 150, \
137, 144, 150, 137, 144, 150, 137, 144, 150, 136, \
143, 149, 136, 143, 149, 136, 143, 149, 136, 143, \
149, 136, 143, 149, 136, 143, 149, 136, 143, 149, \
136, 143, 149, 136, 143, 149, 136, 143, 149, 136, \
143, 149, 136, 143, 149, 136, 143, 149, 136, 143, \
149, 136, 143, 149, 135, 142, 148, 135, 142, 148, \
135, 142, 148, 138, 146, 152, 136, 143, 149, 136, \
143, 149, 136, 143, 149, 136, 143, 149, 136, 143, \
149, 136, 143, 149, 136, 143, 149, 137, 144, 150, \
137, 144, 150, 137, 144, 150, 137, 144, 150, 137, \
144, 150, 137, 144, 150, 136, 143, 149, 136, 143, \
149, 136, 143, 149, 136, 143, 149, 136, 143, 149, \
136, 143, 149, 136, 143, 149, 136, 143, 149, 136, \
143, 149, 136, 143, 149, 136, 143, 149, 136, 143, \
149, 136, 143, 149, 136, 143, 149, 136, 143, 149, \
135, 142, 148, 135, 142, 148, 135, 142, 148, 138, \
145, 151, 136, 143, 149, 136, 143, 149, 136, 143, \
149, 136, 143, 149, 136, 143, 149, 136, 143, 149, \
136, 143, 149, 136, 143, 149, 137, 143, 149, 138, \
143, 149, 138, 143, 149, 139, 143, 150, 139, 143, \
150, 136, 143, 149, 136, 143, 149, 136, 143, 149, \
136, 143, 149, 136, 143, 149, 136, 143, 149, 136, \
143, 149, 136, 143, 149, 136, 143, 149, 136, 143, \
149, 136, 143, 149, 135, 142, 148, 135, 142, 148, \
136, 143, 149, 136, 143, 149, 136, 143, 149, 135, \
142, 148, 136, 143, 149, 138, 145, 151, 136, 143, \
149, 136, 143, 149, 136, 143, 149, 136, 143, 149, \
136, 143, 149, 136, 143, 149, 136, 143, 149, 136, \
143, 149, 137, 143, 149, 139, 142, 149, 139, 142, \
149, 139, 142, 149, 139, 142, 149, 136, 143, 149, \
136, 143, 149, 136, 143, 149, 136, 143, 149, 136, \
143, 149, 136, 143, 149, 136, 143, 149, 136, 143, \
149, 136, 143, 149, 136, 143, 149, 135, 142, 148, \
134, 141, 147, 135, 142, 148, 137, 144, 150, 137, \
144, 150, 138, 145, 151, 137, 144, 150, 136, 143, \
149, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '12094';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a02f9e6087bcd7623c6b135ac47730155';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_cat7';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{113, 93, 59, 121, 101, 69, 122, 105, 77, 123, 107, \
82, 123, 108, 87, 120, 107, 89, 121, 112, 96, \
142, 137, 122, 164, 157, 141, 149, 139, 119, 92, \
78, 55, 86, 69, 42, 88, 69, 39, 90, 74, \
48, 98, 91, 76, 114, 110, 99, 135, 130, 117, \
154, 147, 133, 162, 153, 138, 150, 139, 124, 131, \
118, 101, 135, 116, 92, 144, 124, 101, 156, 142, \
124, 165, 157, 143, 162, 157, 145, 161, 156, 143, \
162, 155, 140, 159, 152, 142, 159, 155, 151, 165, \
162, 158, 166, 163, 157, 112, 93, 60, 121, 102, \
70, 122, 105, 77, 123, 107, 83, 122, 108, 87, \
116, 104, 85, 99, 91, 72, 85, 82, 62, 79, \
76, 56, 68, 62, 46, 52, 44, 31, 56, 46, \
35, 66, 53, 45, 62, 52, 45, 56, 51, 46, \
50, 48, 43, 57, 53, 46, 75, 70, 62, 100, \
93, 83, 129, 121, 111, 132, 123, 111, 138, 121, \
101, 151, 134, 112, 157, 147, 130, 162, 157, 145, \
154, 152, 143, 148, 146, 136, 151, 148, 136, 156, \
150, 138, 163, 154, 144, 172, 164, 153, 173, 165, \
152, 116, 96, 63, 121, 102, 71, 122, 105, 77, \
122, 106, 82, 105, 90, 69, 74, 62, 43, 50, \
42, 26, 42, 39, 26, 43, 40, 29, 51, 48, \
40, 61, 58, 52, 65, 61, 58, 72, 68, 67, \
71, 68, 68, 69, 68, 69, 70, 70, 70, 67, \
65, 64, 64, 60, 57, 65, 60, 55, 72, 66, \
60, 70, 62, 55, 69, 62, 51, 74, 69, 58, \
68, 67, 58, 63, 63, 56, 79, 78, 69, 119, \
113, 99, 157, 145, 127, 170, 155, 135, 176, 160, \
139, 188, 171, 150, 190, 173, 150, 118, 96, 61, \
121, 100, 68, 120, 102, 75, 102, 87, 66, 66, \
53, 37, 43, 32, 19, 41, 35, 26, 43, 41, \
35, 51, 50, 45, 63, 62, 58, 64, 64, 61, \
57, 57, 54, 46, 48, 45, 38, 39, 37, 37, \
37, 36, 48, 48, 47, 64, 64, 62, 72, 71, \
69, 65, 63, 61, 44, 42, 39, 21, 19, 16, \
15, 16, 12, 18, 20, 16, 33, 33, 28, 67, \
65, 58, 119, 112, 100, 159, 145, 127, 175, 155, \
132, 175, 155, 135, 176, 161, 145, 186, 173, 157, \
187, 175, 159, 114, 90, 55, 121, 99, 69, 106, \
89, 66, 72, 59, 43, 44, 36, 26, 33, 28, \
22, 35, 33, 29, 36, 36, 32, 50, 51, 46, \
59, 59, 54, 44, 45, 40, 34, 35, 30, 30, \
31, 26, 24, 24, 19, 22, 20, 14, 23, 21, \
15, 31, 31, 26, 44, 45, 41, 52, 53, 51, \
47, 50, 49, 25, 28, 29, 12, 12, 12, 28, \
25, 24, 85, 79, 74, 146, 136, 126, 171, 156, \
140, 171, 153, 131, 174, 153, 128, 176, 154, 132, \
179, 158, 143, 187, 169, 156, 187, 174, 162, 109, \
89, 61, 102, 85, 61, 71, 59, 40, 50, 42, \
29, 34, 31, 22, 23, 23, 18, 23, 25, 20, \
28, 29, 24, 37, 38, 33, 35, 36, 31, 33, \
34, 29, 28, 29, 24, 25, 26, 21, 27, 27, \
21, 47, 44, 38, 50, 48, 42, 31, 30, 25, \
22, 22, 18, 29, 30, 28, 43, 46, 45, 35, \
39, 40, 15, 18, 21, 19, 20, 21, 69, 65, \
62, 140, 131, 121, 164, 149, 132, 161, 141, 117, \
165, 140, 113, 167, 143, 118, 170, 149, 131, 179, \
162, 146, 186, 173, 159, 91, 75, 57, 64, 52, \
36, 49, 41, 28, 46, 44, 34, 32, 36, 28, \
15, 21, 15, 15, 19, 14, 21, 22, 17, 30, \
31, 26, 28, 29, 24, 26, 27, 22, 24, 25, \
20, 28, 29, 24, 74, 74, 69, 116, 114, 107, \
99, 97, 90, 61, 60, 55, 45, 45, 41, 32, \
33, 31, 20, 23, 22, 32, 36, 37, 30, 36, \
41, 15, 20, 24, 39, 38, 36, 104, 96, 87, \
155, 139, 121, 163, 140, 114, 166, 138, 106, 169, \
143, 113, 171, 151, 126, 180, 164, 143, 189, 176, \
161, 53, 41, 30, 40, 32, 22, 47, 44, 35, \
49, 51, 43, 38, 45, 39, 18, 29, 23, 14, \
20, 15, 18, 20, 15, 22, 24, 19, 23, 24, \
19, 20, 21, 16, 16, 17, 13, 26, 27, 22, \
84, 85, 80, 140, 138, 132, 135, 133, 127, 108, \
108, 103, 84, 85, 82, 47, 48, 47, 17, 19, \
19, 14, 18, 19, 21, 29, 36, 19, 26, 33, \
35, 36, 35, 80, 73, 63, 137, 120, 102, 164, \
139, 112, 168, 137, 105, 169, 142, 109, 170, 150, \
122, 180, 164, 141, 190, 177, 161, 29, 26, 18, \
26, 25, 18, 38, 38, 32, 45, 46, 43, 44, \
47, 45, 36, 39, 38, 22, 25, 24, 15, 18, \
16, 15, 18, 16, 15, 18, 16, 17, 20, 18, \
15, 18, 16, 13, 16, 14, 28, 30, 28, 65, \
67, 63, 94, 96, 93, 113, 114, 112, 106, 106, \
106, 79, 79, 80, 48, 46, 48, 25, 24, 28, \
11, 17, 25, 17, 24, 30, 34, 33, 31, 83, \
73, 63, 149, 132, 114, 175, 154, 130, 176, 153, \
127, 175, 156, 128, 177, 162, 137, 184, 172, 153, \
193, 183, 173, 27, 28, 20, 24, 26, 19, 30, \
31, 26, 41, 41, 39, 46, 46, 46, 43, 43, \
44, 26, 27, 27, 12, 15, 15, 17, 21, 21, \
18, 22, 21, 18, 22, 21, 15, 19, 18, 11, \
15, 14, 8, 12, 12, 7, 11, 11, 26, 29, \
29, 65, 67, 65, 88, 89, 84, 85, 85, 78, \
71, 69, 60, 43, 42, 33, 14, 19, 21, 18, \
22, 26, 45, 42, 39, 128, 116, 105, 184, 168, \
151, 188, 171, 150, 183, 168, 145, 182, 169, 145, \
186, 175, 151, 187, 176, 160, 197, 189, 181, 32, \
33, 25, 35, 36, 29, 39, 39, 35, 39, 40, \
38, 41, 41, 41, 42, 42, 43, 27, 28, 28, \
9, 12, 11, 15, 19, 18, 21, 25, 24, 15, \
19, 18, 12, 16, 15, 10, 14, 13, 11, 15, \
14, 12, 15, 17, 10, 14, 13, 14, 16, 12, \
43, 45, 36, 78, 80, 65, 98, 98, 78, 69, \
69, 49, 29, 32, 27, 32, 33, 34, 75, 69, \
63, 169, 157, 145, 193, 178, 161, 196, 182, 163, \
191, 179, 159, 190, 178, 156, 197, 185, 161, 192, \
181, 165, 210, 202, 194, 32, 32, 25, 42, 43, \
36, 48, 48, 44, 44, 44, 43, 39, 39, 39, \
40, 40, 40, 35, 36, 37, 18, 21, 21, 10, \
14, 13, 15, 19, 18, 14, 18, 17, 13, 17, \
16, 10, 14, 13, 8, 12, 11, 11, 15, 14, \
14, 17, 17, 16, 17, 16, 23, 24, 20, 37, \
37, 31, 60, 58, 50, 62, 59, 51, 37, 35, \
34, 64, 61, 60, 108, 100, 93, 182, 169, 156, \
196, 180, 164, 197, 185, 168, 194, 185, 169, 194, \
184, 164, 201, 189, 165, 196, 185, 168, 218, 209, \
201, 37, 39, 33, 43, 45, 40, 43, 45, 42, \
36, 38, 36, 27, 28, 27, 27, 29, 29, 34, \
36, 35, 26, 30, 27, 15, 20, 16, 11, 15, \
12, 11, 15, 13, 14, 18, 17, 17, 21, 20, \
20, 23, 23, 25, 27, 27, 27, 29, 28, 25, \
27, 25, 24, 26, 23, 26, 27, 25, 38, 36, \
37, 44, 41, 43, 36, 43, 36, 83, 75, 65, \
141, 119, 109, 184, 170, 156, 187, 179, 164, 192, \
183, 169, 190, 186, 167, 186, 187, 162, 194, 191, \
168, 196, 189, 173, 222, 214, 207, 40, 44, 43, \
40, 44, 43, 30, 34, 33, 17, 21, 20, 9, \
13, 12, 9, 13, 12, 16, 20, 18, 21, 26, \
22, 23, 27, 23, 21, 26, 20, 18, 23, 18, \
24, 28, 23, 27, 31, 26, 46, 49, 43, 77, \
76, 67, 62, 62, 53, 30, 34, 27, 31, 37, \
30, 43, 48, 41, 45, 46, 39, 59, 57, 48, \
109, 112, 92, 170, 146, 128, 199, 166, 149, 191, \
185, 164, 193, 181, 166, 213, 160, 154, 212, 146, \
132, 199, 152, 132, 193, 161, 148, 204, 179, 171, \
232, 216, 212, 21, 25, 24, 29, 33, 32, 25, \
29, 28, 11, 15, 14, 5, 9, 8, 3, 7, \
7, 5, 8, 11, 11, 14, 19, 20, 23, 26, \
24, 28, 27, 25, 30, 23, 25, 31, 19, 30, \
36, 21, 61, 67, 42, 101, 105, 65, 71, 75, \
45, 31, 35, 28, 32, 36, 43, 35, 37, 43, \
38, 39, 31, 71, 69, 46, 162, 140, 122, 192, \
167, 153, 189, 174, 155, 194, 162, 140, 197, 101, \
86, 210, 39, 38, 227, 24, 28, 229, 41, 48, \
209, 61, 71, 203, 105, 111, 234, 194, 194, 9, \
13, 12, 15, 19, 18, 21, 25, 24, 15, 19, \
18, 7, 11, 10, 5, 9, 8, 5, 8, 11, \
6, 9, 14, 12, 15, 18, 22, 26, 25, 32, \
37, 31, 24, 30, 18, 24, 31, 16, 74, 79, \
54, 93, 97, 57, 45, 48, 20, 23, 27, 21, \
25, 29, 36, 25, 28, 33, 23, 24, 16, 51, \
50, 26, 131, 129, 93, 170, 162, 135, 192, 147, \
136, 195, 89, 77, 207, 58, 30, 230, 53, 22, \
237, 23, 9, 245, 9, 15, 241, 22, 37, 217, \
64, 75, 238, 180, 184, 15, 19, 18, 18, 22, \
21, 22, 26, 25, 16, 20, 19, 9, 13, 12, \
8, 12, 11, 8, 13, 11, 12, 16, 13, 17, \
21, 18, 23, 27, 23, 26, 30, 25, 18, 23, \
17, 15, 20, 14, 34, 37, 30, 42, 40, 31, \
21, 21, 12, 18, 22, 15, 22, 28, 22, 25, \
30, 23, 51, 53, 45, 103, 101, 88, 151, 143, \
101, 176, 147, 112, 189, 112, 103, 175, 66, 41, \
225, 146, 72, 249, 182, 93, 243, 93, 49, 247, \
18, 14, 245, 18, 22, 224, 59, 65, 242, 178, \
184, 25, 29, 28, 29, 33, 32, 28, 32, 31, \
15, 19, 18, 9, 13, 12, 13, 17, 16, 27, \
31, 29, 37, 41, 38, 29, 33, 30, 21, 25, \
22, 19, 23, 21, 12, 16, 14, 13, 17, 16, \
14, 16, 17, 11, 10, 14, 14, 12, 14, 29, \
28, 26, 49, 50, 44, 104, 107, 98, 186, 194, \
183, 227, 237, 224, 227, 226, 192, 211, 167, 137, \
203, 100, 90, 178, 46, 31, 197, 73, 34, 223, \
88, 44, 237, 45, 25, 250, 11, 9, 239, 18, \
19, 217, 68, 74, 243, 192, 199, 22, 26, 25, \
33, 37, 36, 34, 38, 37, 19, 23, 22, 9, \
13, 12, 30, 34, 33, 82, 86, 85, 68, 72, \
71, 24, 28, 27, 19, 23, 22, 30, 34, 33, \
23, 27, 26, 25, 29, 28, 24, 28, 27, 18, \
23, 21, 59, 65, 62, 134, 138, 133, 192, 192, \
185, 238, 234, 226, 255, 247, 241, 250, 228, 222, \
222, 174, 162, 171, 93, 80, 152, 37, 29, 184, \
16, 15, 223, 6, 12, 239, 0, 2, 245, 0, \
0, 249, 4, 2, 238, 17, 23, 212, 75, 86, \
245, 206, 213, 10, 14, 13, 23, 27, 26, 31, \
35, 34, 21, 25, 24, 11, 15, 14, 29, 33, \
32, 63, 67, 66, 48, 52, 51, 26, 30, 29, \
21, 25, 24, 32, 36, 35, 43, 47, 46, 34, \
38, 37, 17, 22, 20, 49, 57, 51, 168, 177, \
168, 243, 249, 236, 254, 250, 237, 237, 215, 204, \
209, 153, 150, 178, 91, 91, 147, 52, 48, 135, \
21, 19, 160, 7, 11, 201, 20, 24, 220, 25, \
24, 224, 17, 11, 235, 11, 6, 244, 9, 9, \
223, 20, 27, 199, 87, 96, 243, 220, 224, 10, \
14, 13, 12, 16, 15, 25, 29, 28, 30, 34, \
33, 15, 19, 18, 13, 17, 16, 18, 22, 21, \
17, 21, 20, 16, 20, 19, 15, 19, 18, 17, \
21, 20, 20, 24, 23, 15, 19, 18, 48, 53, \
50, 149, 153, 145, 236, 233, 223, 238, 222, 211, \
189, 153, 141, 150, 97, 82, 151, 81, 64, 151, \
74, 56, 152, 81, 60, 145, 49, 35, 170, 37, \
33, 191, 59, 53, 190, 82, 66, 186, 84, 64, \
201, 73, 59, 208, 58, 47, 182, 55, 46, 185, \
124, 122, 242, 235, 236, 21, 26, 24, 13, 18, \
16, 26, 30, 29, 28, 31, 31, 13, 16, 15, \
13, 15, 15, 13, 16, 15, 9, 13, 12, 14, \
17, 16, 18, 22, 20, 9, 12, 11, 8, 11, \
10, 63, 66, 64, 174, 179, 175, 239, 239, 229, \
227, 202, 193, 165, 117, 109, 128, 73, 61, 144, \
88, 70, 154, 104, 74, 140, 100, 58, 135, 86, \
51, 127, 69, 42, 125, 68, 44, 137, 83, 59, \
151, 100, 74, 158, 112, 86, 156, 113, 90, 156, \
104, 76, 163, 111, 81, 195, 168, 151, 246, 239, \
237, 46, 49, 40, 28, 30, 23, 27, 29, 24, \
18, 18, 17, 7, 8, 9, 8, 9, 12, 12, \
12, 13, 15, 16, 14, 34, 35, 32, 47, 48, \
45, 10, 11, 9, 24, 25, 23, 154, 155, 152, \
242, 242, 236, 224, 203, 191, 175, 106, 95, 144, \
63, 48, 135, 84, 63, 131, 90, 71, 128, 82, \
60, 107, 72, 34, 120, 86, 51, 136, 96, 74, \
129, 88, 73, 129, 86, 65, 133, 88, 54, 139, \
93, 56, 142, 94, 65, 139, 95, 58, 159, 118, \
71, 184, 144, 110, 227, 203, 187, 133, 127, 105, \
79, 74, 56, 25, 23, 10, 8, 10, 1, 5, \
11, 5, 17, 25, 22, 44, 48, 45, 61, 62, \
57, 104, 104, 99, 132, 131, 126, 72, 71, 67, \
31, 30, 26, 78, 77, 72, 148, 130, 126, 168, \
92, 88, 166, 39, 30, 161, 42, 20, 135, 65, \
35, 108, 63, 43, 81, 38, 29, 79, 48, 33, \
107, 73, 47, 124, 80, 62, 125, 79, 72, 128, \
81, 69, 131, 86, 60, 128, 82, 51, 115, 67, \
40, 115, 73, 31, 174, 136, 69, 179, 138, 81, \
189, 156, 124, 175, 163, 143, 139, 131, 112, 72, \
68, 53, 45, 45, 32, 53, 58, 46, 100, 107, \
97, 149, 152, 143, 166, 164, 156, 174, 170, 163, \
176, 173, 165, 153, 150, 143, 117, 113, 105, 88, \
84, 76, 98, 77, 71, 151, 75, 71, 181, 57, \
53, 177, 65, 50, 152, 91, 64, 108, 71, 47, \
72, 34, 14, 102, 72, 35, 109, 74, 24, 104, \
59, 23, 110, 63, 46, 110, 63, 51, 108, 62, \
43, 101, 58, 33, 91, 47, 26, 102, 65, 22, \
182, 148, 70, 194, 151, 84, 181, 141, 103, 148, \
140, 135, 161, 153, 146, 153, 146, 137, 143, 138, \
126, 144, 140, 126, 154, 151, 136, 162, 158, 145, \
165, 159, 149, 168, 162, 153, 170, 164, 155, 174, \
168, 159, 176, 170, 161, 171, 165, 155, 171, 167, \
155, 185, 167, 154, 206, 150, 146, 205, 148, 146, \
177, 152, 140, 126, 109, 82, 113, 80, 28, 190, \
159, 58, 194, 160, 59, 126, 83, 18, 103, 57, \
19, 107, 61, 37, 99, 55, 32, 89, 47, 27, \
75, 34, 21, 84, 51, 15, 162, 132, 58, 191, \
147, 85, 190, 145, 112, 136, 135, 133, 149, 147, \
144, 155, 153, 147, 154, 152, 144, 158, 156, 147, \
162, 159, 149, 165, 162, 153, 166, 164, 156, 167, \
166, 158, 169, 168, 160, 172, 170, 163, 173, 172, \
164, 175, 173, 166, 171, 178, 164, 167, 182, 166, \
181, 180, 176, 190, 179, 169, 179, 167, 156, 155, \
136, 103, 201, 178, 67, 248, 227, 64, 238, 218, \
86, 169, 137, 80, 145, 105, 69, 188, 155, 68, \
200, 170, 66, 141, 108, 49, 71, 37, 12, 116, \
78, 27, 190, 129, 52, 189, 101, 46, 196, 114, \
88, 144, 145, 138, 146, 147, 141, 148, 149, 143, \
152, 153, 147, 153, 154, 149, 153, 154, 148, 153, \
155, 149, 158, 159, 153, 162, 164, 158, 164, 165, \
159, 168, 169, 163, 172, 173, 167, 177, 178, 172, \
183, 184, 170, 188, 186, 175, 196, 182, 202, 203, \
183, 180, 195, 176, 113, 212, 197, 71, 241, 231, \
71, 242, 228, 111, 223, 215, 154, 211, 196, 194, \
189, 164, 146, 208, 190, 64, 241, 227, 58, 183, \
161, 53, 129, 100, 48, 182, 91, 53, 222, 47, \
25, 217, 19, 19, 219, 62, 74, 128, 129, 123, \
134, 135, 129, 135, 136, 130, 143, 144, 138, 150, \
151, 145, 153, 154, 148, 155, 156, 150, 157, 158, \
152, 159, 160, 154, 165, 166, 160, 167, 168, 162, \
167, 168, 162, 168, 168, 162, 164, 159, 142, 175, \
157, 119, 204, 176, 127, 218, 191, 102, 224, 208, \
52, 238, 231, 46, 233, 226, 96, 215, 205, 168, \
204, 210, 203, 195, 199, 201, 152, 143, 110, 183, \
172, 44, 243, 233, 62, 230, 214, 98, 213, 191, \
149, 217, 172, 160, 220, 145, 137, 223, 141, 141, \
238, 177, 184, 58, 59, 53, 70, 71, 65, 76, \
77, 71, 88, 89, 83, 99, 100, 94, 107, 108, \
102, 114, 115, 109, 129, 130, 124, 149, 150, 144, \
148, 149, 142, 148, 149, 143, 155, 156, 150, 161, \
162, 155, 141, 136, 120, 153, 135, 72, 221, 201, \
67, 252, 233, 57, 255, 240, 53, 251, 238, 95, \
220, 209, 157, 197, 196, 192, 190, 205, 196, 183, \
192, 176, 134, 125, 79, 165, 149, 37, 244, 230, \
75, 243, 234, 112, 208, 200, 157, 174, 169, 169, \
196, 195, 195, 222, 222, 221, 225, 225, 224, 50, \
51, 44, 54, 55, 48, 52, 53, 46, 45, 46, \
40, 55, 56, 50, 69, 70, 64, 55, 56, 50, \
58, 59, 54, 86, 87, 81, 69, 70, 64, 66, \
67, 61, 82, 83, 76, 87, 88, 80, 80, 77, \
68, 95, 84, 46, 154, 141, 49, 184, 167, 55, \
205, 186, 73, 204, 188, 106, 178, 168, 150, 172, \
174, 174, 173, 179, 176, 155, 149, 140, 131, 111, \
66, 188, 161, 56, 246, 229, 68, 246, 242, 78, \
210, 212, 103, 150, 148, 110, 169, 163, 163, 198, \
199, 201, 199, 203, 200, 63, 65, 53, 69, 71, \
60, 68, 69, 62, 58, 59, 53, 70, 71, 66, \
84, 84, 82, 61, 61, 59, 56, 56, 53, 65, \
66, 62, 52, 52, 47, 49, 50, 42, 67, 69, \
59, 55, 57, 45, 47, 48, 38, 61, 58, 50, \
65, 61, 47, 59, 55, 36, 70, 66, 44, 80, \
76, 57, 84, 80, 69, 102, 99, 94, 116, 112, \
109, 102, 92, 70, 142, 125, 56, 234, 214, 85, \
252, 237, 64, 251, 241, 65, 238, 231, 85, 202, \
201, 123, 183, 189, 168, 188, 195, 186, 186, 193, \
185, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '12404';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a3b3d7547a83c0f113a87525ea2f14cbd';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_horse10';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{42, 43, 24, 37, 38, 22, 45, 45, 32, 52, 52, \
38, 57, 54, 36, 60, 57, 39, 56, 53, 35, \
63, 60, 42, 71, 71, 48, 60, 62, 38, 54, \
56, 34, 52, 54, 34, 49, 51, 32, 47, 52, \
28, 37, 43, 19, 35, 40, 19, 43, 47, 29, \
31, 35, 20, 23, 27, 13, 30, 35, 16, 43, \
49, 24, 42, 48, 20, 35, 39, 16, 33, 36, \
15, 37, 40, 19, 35, 38, 17, 35, 38, 17, \
35, 39, 18, 40, 43, 22, 38, 41, 20, 32, \
35, 14, 35, 38, 17, 40, 42, 22, 37, 38, \
22, 41, 42, 29, 48, 47, 33, 51, 49, 32, \
54, 51, 34, 52, 49, 32, 60, 58, 40, 68, \
69, 44, 64, 67, 38, 57, 59, 34, 48, 50, \
28, 42, 45, 23, 35, 39, 17, 28, 33, 12, \
37, 41, 22, 44, 48, 32, 33, 36, 23, 22, \
26, 14, 26, 30, 13, 35, 41, 18, 46, 52, \
26, 44, 48, 25, 37, 40, 20, 36, 39, 18, \
39, 42, 21, 36, 39, 18, 35, 37, 16, 38, \
41, 20, 40, 42, 21, 34, 36, 15, 31, 33, \
12, 39, 40, 21, 34, 35, 18, 41, 42, 29, \
46, 45, 32, 51, 48, 33, 52, 49, 34, 51, \
48, 33, 55, 52, 37, 66, 66, 42, 64, 67, \
39, 53, 55, 31, 42, 44, 23, 34, 36, 16, \
32, 37, 16, 29, 34, 15, 49, 53, 37, 67, \
71, 57, 62, 65, 54, 49, 52, 42, 43, 47, \
32, 48, 53, 32, 55, 60, 36, 39, 43, 20, \
41, 44, 23, 42, 45, 24, 41, 44, 23, 37, \
39, 18, 38, 38, 18, 37, 36, 16, 41, 40, \
20, 41, 40, 20, 36, 37, 17, 40, 41, 22, \
38, 39, 22, 40, 41, 28, 46, 45, 33, 51, \
47, 35, 55, 51, 39, 47, 43, 31, 41, 37, \
25, 60, 60, 41, 59, 61, 39, 55, 56, 38, \
51, 52, 36, 39, 40, 25, 37, 41, 23, 37, \
42, 25, 49, 52, 38, 65, 69, 57, 47, 50, \
41, 41, 44, 35, 54, 57, 44, 58, 62, 43, \
56, 61, 38, 35, 38, 16, 45, 48, 27, 50, \
53, 32, 40, 43, 22, 40, 42, 21, 38, 35, \
16, 38, 35, 16, 48, 45, 26, 43, 40, 21, \
41, 41, 21, 45, 46, 27, 48, 48, 32, 46, \
47, 34, 49, 47, 36, 53, 49, 38, 52, 48, \
36, 41, 37, 25, 35, 31, 20, 51, 50, 36, \
72, 72, 58, 66, 67, 55, 50, 50, 41, 39, \
39, 30, 34, 37, 21, 29, 33, 18, 38, 42, \
29, 56, 59, 48, 52, 55, 47, 45, 48, 41, \
50, 54, 42, 53, 58, 40, 56, 61, 39, 35, \
38, 17, 46, 49, 28, 48, 51, 30, 36, 39, \
18, 39, 41, 20, 42, 40, 20, 44, 41, 22, \
56, 53, 34, 45, 43, 24, 35, 36, 16, 42, \
40, 23, 42, 40, 26, 45, 42, 30, 50, 47, \
36, 56, 52, 40, 56, 52, 36, 41, 38, 23, \
23, 19, 9, 42, 41, 33, 89, 90, 83, 76, \
76, 70, 52, 52, 47, 26, 27, 21, 33, 34, \
24, 33, 35, 23, 24, 28, 16, 29, 34, 23, \
62, 66, 58, 61, 63, 56, 33, 36, 24, 44, \
48, 29, 48, 53, 29, 32, 35, 13, 43, 45, \
24, 47, 49, 28, 42, 44, 23, 43, 45, 24, \
42, 43, 23, 48, 44, 25, 61, 57, 38, 43, \
42, 22, 30, 32, 11, 71, 72, 42, 61, 61, \
35, 64, 64, 40, 66, 65, 45, 68, 65, 49, \
64, 61, 43, 54, 51, 38, 31, 26, 22, 54, \
52, 49, 93, 95, 89, 76, 77, 72, 55, 56, \
51, 27, 28, 22, 46, 45, 36, 57, 57, 47, \
44, 46, 35, 26, 31, 19, 63, 68, 57, 69, \
70, 61, 28, 30, 17, 36, 39, 22, 40, 44, \
24, 35, 36, 17, 39, 39, 22, 45, 45, 28, \
44, 44, 27, 45, 46, 29, 42, 43, 26, 45, \
39, 24, 62, 55, 40, 42, 41, 25, 32, 35, \
15, 130, 137, 89, 117, 124, 80, 111, 117, 76, \
107, 110, 74, 104, 102, 74, 95, 94, 66, 79, \
76, 58, 60, 55, 49, 80, 78, 74, 81, 82, \
74, 69, 70, 63, 78, 79, 72, 44, 45, 37, \
60, 57, 49, 67, 65, 56, 50, 52, 41, 50, \
53, 42, 72, 75, 63, 63, 65, 50, 31, 32, \
18, 35, 36, 22, 43, 44, 31, 40, 39, 26, \
39, 37, 24, 47, 46, 33, 48, 46, 33, 38, \
37, 24, 40, 38, 25, 45, 37, 26, 53, 44, \
34, 41, 37, 25, 34, 36, 18, 131, 139, 84, \
126, 132, 82, 128, 134, 86, 129, 134, 87, 136, \
138, 92, 133, 134, 90, 120, 120, 85, 87, 85, \
65, 76, 76, 65, 61, 63, 53, 88, 89, 79, \
124, 126, 116, 75, 75, 66, 59, 55, 46, 67, \
63, 55, 48, 47, 38, 46, 47, 37, 76, 76, \
63, 73, 72, 57, 52, 50, 37, 34, 32, 20, \
37, 35, 25, 44, 40, 29, 46, 43, 31, 49, \
45, 34, 42, 39, 27, 29, 26, 14, 33, 29, \
16, 44, 34, 23, 49, 38, 27, 40, 34, 22, \
34, 34, 16, 100, 99, 57, 97, 97, 58, 105, \
103, 67, 105, 104, 67, 104, 104, 64, 104, 105, \
64, 102, 102, 67, 87, 85, 62, 110, 110, 97, \
119, 121, 110, 156, 158, 146, 178, 181, 169, 133, \
133, 122, 75, 68, 60, 57, 51, 43, 54, 50, \
41, 43, 43, 33, 49, 48, 38, 72, 68, 57, \
83, 79, 67, 50, 47, 34, 45, 42, 27, 55, \
50, 36, 60, 54, 41, 58, 52, 39, 50, 44, \
31, 43, 38, 24, 48, 43, 25, 51, 40, 24, \
53, 42, 26, 44, 38, 20, 39, 39, 19, 120, \
112, 85, 147, 140, 116, 176, 169, 147, 182, 177, \
159, 163, 161, 144, 125, 124, 103, 80, 78, 60, \
96, 92, 82, 175, 175, 164, 214, 216, 203, 222, \
223, 211, 209, 211, 198, 144, 145, 133, 77, 70, \
62, 51, 44, 36, 52, 47, 38, 47, 45, 36, \
47, 44, 37, 51, 46, 41, 66, 62, 52, 88, \
84, 69, 93, 90, 70, 85, 79, 60, 83, 76, \
58, 87, 80, 62, 86, 79, 61, 83, 77, 57, \
83, 77, 53, 84, 73, 50, 79, 67, 45, 69, \
62, 39, 59, 58, 35, 201, 196, 175, 237, 233, \
215, 255, 251, 236, 253, 249, 236, 255, 254, 241, \
234, 233, 220, 115, 115, 104, 115, 115, 105, 213, \
214, 204, 251, 252, 241, 228, 230, 218, 167, 169, \
158, 120, 120, 109, 75, 70, 62, 46, 41, 32, \
46, 41, 32, 46, 42, 33, 44, 39, 33, 50, \
44, 39, 59, 53, 44, 78, 73, 60, 106, 101, \
85, 105, 98, 76, 100, 92, 67, 96, 88, 61, \
101, 93, 65, 101, 93, 64, 102, 95, 64, 98, \
89, 59, 94, 84, 54, 99, 91, 60, 92, 86, \
60, 205, 203, 182, 203, 200, 182, 212, 209, 194, \
244, 241, 224, 255, 254, 235, 247, 247, 230, 134, \
136, 121, 100, 102, 89, 196, 198, 186, 255, 255, \
246, 209, 211, 200, 101, 103, 92, 104, 105, 94, \
81, 77, 68, 42, 37, 28, 41, 37, 28, 43, \
39, 30, 39, 33, 26, 40, 33, 27, 57, 50, \
42, 63, 57, 46, 77, 71, 58, 99, 93, 74, \
108, 102, 80, 110, 105, 79, 110, 105, 77, 109, \
104, 74, 113, 106, 75, 110, 104, 72, 110, 104, \
72, 110, 104, 72, 103, 94, 66, 202, 200, 179, \
191, 188, 170, 178, 175, 160, 229, 226, 210, 255, \
254, 236, 246, 243, 223, 170, 169, 152, 86, 88, \
74, 138, 141, 129, 241, 242, 232, 215, 216, 206, \
100, 102, 91, 76, 77, 66, 64, 61, 52, 39, \
34, 25, 37, 33, 24, 39, 35, 26, 37, 31, \
25, 36, 28, 23, 45, 38, 31, 57, 50, 39, \
67, 61, 48, 78, 74, 60, 91, 88, 72, 96, \
94, 76, 89, 88, 67, 92, 89, 64, 96, 91, \
62, 93, 88, 59, 97, 92, 63, 101, 96, 67, \
101, 94, 65, 211, 209, 188, 223, 220, 202, 190, \
187, 172, 193, 190, 175, 243, 240, 221, 247, 240, \
217, 221, 215, 194, 107, 109, 94, 129, 133, 122, \
241, 243, 232, 212, 214, 203, 110, 112, 101, 90, \
91, 81, 69, 66, 57, 37, 33, 24, 35, 31, \
22, 39, 35, 26, 40, 34, 28, 36, 29, 24, \
41, 34, 26, 51, 45, 34, 59, 53, 41, 67, \
63, 53, 70, 67, 57, 77, 75, 62, 78, 77, \
62, 72, 69, 50, 86, 81, 56, 82, 77, 51, \
83, 77, 52, 88, 82, 57, 88, 81, 53, 192, \
190, 169, 226, 223, 206, 210, 207, 191, 174, 171, \
156, 205, 202, 182, 234, 223, 197, 215, 205, 181, \
124, 125, 110, 159, 163, 153, 247, 248, 238, 181, \
182, 172, 115, 117, 106, 107, 108, 98, 73, 69, \
60, 36, 32, 23, 34, 30, 21, 40, 37, 27, \
40, 34, 27, 40, 33, 28, 46, 39, 31, 53, \
47, 36, 56, 50, 38, 61, 55, 46, 59, 53, \
45, 62, 57, 45, 76, 71, 58, 83, 77, 61, \
92, 81, 63, 96, 84, 66, 98, 86, 68, 100, \
88, 70, 100, 89, 68, 167, 164, 144, 192, 189, \
172, 202, 199, 184, 184, 182, 167, 182, 178, 159, \
224, 210, 183, 210, 198, 172, 157, 157, 142, 198, \
202, 192, 241, 242, 231, 171, 172, 161, 142, 144, \
133, 113, 114, 103, 64, 61, 51, 31, 27, 18, \
37, 33, 24, 43, 39, 30, 39, 34, 27, 42, \
35, 29, 46, 39, 32, 48, 42, 31, 55, 48, \
36, 62, 54, 44, 61, 51, 42, 66, 57, 46, \
71, 63, 49, 86, 74, 59, 103, 85, 70, 104, \
86, 71, 114, 96, 82, 124, 106, 92, 126, 111, \
96, 163, 160, 143, 164, 161, 145, 180, 177, 162, \
186, 185, 169, 173, 172, 152, 212, 203, 181, 216, \
207, 186, 175, 175, 156, 209, 211, 197, 239, 240, \
227, 185, 187, 172, 155, 156, 141, 112, 113, 97, \
56, 53, 42, 28, 24, 15, 36, 32, 23, 41, \
37, 28, 39, 34, 26, 42, 35, 28, 48, 41, \
34, 43, 36, 27, 46, 40, 30, 52, 46, 37, \
56, 49, 40, 69, 60, 51, 72, 61, 52, 78, \
65, 54, 106, 88, 73, 103, 85, 70, 107, 88, \
73, 117, 98, 83, 125, 108, 92, 171, 168, 153, \
164, 161, 146, 168, 165, 150, 180, 178, 162, 182, \
182, 162, 188, 182, 164, 194, 188, 170, 173, 172, \
152, 197, 199, 182, 235, 235, 220, 198, 198, 182, \
158, 158, 141, 93, 92, 76, 49, 46, 36, 30, \
26, 18, 33, 29, 20, 37, 33, 24, 39, 34, \
25, 41, 34, 26, 41, 34, 26, 40, 33, 25, \
46, 39, 31, 46, 43, 33, 47, 43, 34, 56, \
48, 40, 63, 53, 46, 77, 64, 55, 104, 87, \
71, 103, 86, 70, 102, 85, 69, 110, 93, 77, \
112, 95, 78, 166, 163, 148, 169, 166, 151, 171, \
168, 153, 174, 173, 156, 185, 185, 164, 175, 169, \
150, 172, 166, 148, 175, 175, 155, 203, 203, 185, \
240, 239, 223, 196, 195, 179, 149, 147, 132, 86, \
83, 70, 42, 38, 28, 32, 28, 19, 31, 27, \
18, 36, 32, 23, 39, 34, 25, 39, 32, 24, \
36, 29, 21, 40, 33, 25, 46, 39, 31, 45, \
42, 31, 50, 47, 36, 54, 47, 37, 63, 54, \
46, 81, 68, 58, 102, 85, 70, 105, 88, 72, \
101, 84, 68, 103, 86, 70, 107, 90, 73, 161, \
157, 142, 176, 173, 158, 181, 178, 163, 179, 178, \
161, 182, 182, 162, 170, 164, 145, 162, 156, 137, \
171, 170, 150, 195, 195, 174, 235, 233, 214, 189, \
186, 170, 131, 128, 115, 74, 71, 61, 27, 23, \
14, 28, 24, 15, 28, 24, 15, 36, 32, 23, \
38, 33, 24, 38, 31, 23, 37, 30, 22, 41, \
34, 26, 44, 38, 29, 42, 39, 27, 56, 53, \
41, 56, 49, 38, 66, 57, 47, 80, 68, 56, \
92, 75, 59, 98, 81, 65, 100, 83, 67, 97, \
80, 64, 101, 84, 67, 148, 145, 130, 166, 163, \
148, 180, 177, 162, 178, 177, 160, 175, 175, 155, \
178, 172, 153, 165, 159, 141, 166, 166, 146, 196, \
195, 173, 229, 224, 204, 171, 165, 150, 104, 98, \
88, 50, 43, 37, 19, 15, 6, 26, 22, 13, \
27, 23, 14, 33, 29, 20, 33, 28, 19, 37, \
30, 22, 37, 30, 22, 40, 33, 25, 40, 34, \
25, 42, 39, 26, 59, 57, 41, 63, 57, 43, \
80, 72, 59, 90, 78, 65, 92, 75, 60, 92, \
75, 59, 87, 70, 54, 88, 71, 55, 98, 81, \
64, 138, 135, 120, 153, 150, 135, 172, 168, 154, \
167, 166, 149, 170, 170, 150, 181, 175, 157, 159, \
153, 135, 158, 157, 137, 209, 207, 184, 220, 213, \
193, 173, 166, 151, 112, 104, 95, 49, 41, 35, \
21, 16, 8, 24, 20, 11, 28, 24, 15, 31, \
27, 18, 33, 28, 19, 38, 31, 23, 40, 33, \
25, 39, 32, 24, 40, 33, 24, 45, 42, 27, \
51, 48, 31, 58, 52, 36, 69, 61, 46, 81, \
70, 55, 93, 76, 60, 88, 71, 55, 78, 61, \
46, 81, 64, 48, 87, 70, 53, 114, 110, 93, \
148, 143, 128, 169, 164, 151, 159, 156, 143, 161, \
161, 144, 174, 172, 155, 148, 146, 129, 157, 158, \
140, 214, 214, 195, 217, 213, 195, 191, 186, 170, \
147, 140, 125, 75, 68, 55, 33, 30, 21, 19, \
16, 8, 26, 22, 13, 33, 29, 18, 36, 32, \
23, 40, 35, 28, 41, 34, 26, 39, 31, 22, \
43, 35, 25, 48, 41, 29, 46, 39, 26, 51, \
43, 30, 60, 51, 39, 66, 54, 42, 78, 61, \
48, 76, 59, 47, 72, 55, 43, 73, 56, 44, \
75, 59, 44, 114, 108, 91, 152, 146, 131, 171, \
164, 153, 157, 153, 141, 149, 149, 134, 169, 169, \
153, 138, 139, 123, 139, 139, 124, 195, 194, 179, \
241, 239, 224, 181, 177, 160, 140, 133, 114, 94, \
87, 68, 59, 55, 45, 22, 19, 10, 28, 24, \
14, 34, 30, 18, 35, 31, 23, 41, 37, 31, \
41, 35, 27, 40, 31, 21, 49, 39, 28, 52, \
42, 32, 50, 40, 30, 55, 45, 35, 63, 53, \
43, 67, 55, 45, 75, 59, 49, 72, 56, 45, \
64, 48, 38, 68, 51, 41, 68, 54, 41, 129, \
123, 106, 162, 156, 142, 170, 163, 152, 158, 152, \
141, 135, 133, 118, 161, 159, 144, 141, 140, 124, \
120, 119, 104, 143, 141, 126, 196, 193, 178, 133, \
127, 111, 97, 89, 71, 91, 83, 64, 70, 64, \
51, 35, 30, 19, 29, 25, 14, 35, 31, 20, \
35, 32, 24, 40, 36, 30, 42, 35, 28, 43, \
35, 25, 54, 44, 33, 53, 43, 33, 53, 43, \
33, 58, 48, 38, 66, 56, 46, 67, 56, 46, \
72, 59, 47, 69, 55, 44, 58, 45, 33, 58, \
45, 34, 59, 47, 34, 133, 127, 110, 160, 154, \
140, 167, 160, 149, 151, 145, 134, 129, 126, 112, \
153, 150, 135, 139, 136, 121, 132, 130, 115, 97, \
93, 78, 95, 89, 75, 89, 81, 65, 97, 87, \
69, 95, 83, 65, 87, 77, 61, 54, 45, 32, \
29, 23, 12, 35, 32, 22, 37, 34, 27, 38, \
34, 28, 38, 31, 24, 47, 38, 28, 54, 44, \
33, 53, 42, 32, 55, 45, 35, 60, 50, 40, \
63, 53, 43, 60, 50, 39, 59, 48, 36, 58, \
48, 36, 57, 46, 34, 55, 44, 32, 55, 46, \
33, 142, 136, 119, 148, 142, 128, 148, 142, 130, \
126, 119, 108, 134, 129, 115, 144, 139, 125, 120, \
114, 100, 127, 122, 108, 88, 81, 67, 62, 53, \
41, 76, 66, 51, 98, 85, 68, 94, 79, 61, \
98, 84, 66, 77, 65, 49, 37, 29, 17, 35, \
32, 22, 37, 35, 28, 36, 32, 26, 39, 33, \
25, 48, 40, 30, 54, 44, 33, 55, 45, 35, \
59, 49, 39, 64, 54, 44, 61, 51, 41, 53, \
43, 32, 52, 42, 30, 52, 42, 30, 53, 44, \
32, 55, 45, 33, 53, 45, 33, 134, 128, 111, \
121, 115, 100, 113, 107, 95, 104, 97, 86, 130, \
123, 110, 135, 127, 114, 104, 96, 83, 100, 92, \
79, 92, 83, 70, 68, 58, 45, 80, 68, 53, \
96, 81, 65, 98, 82, 64, 99, 82, 62, 88, \
74, 56, 42, 34, 21, 35, 32, 23, 39, 38, \
31, 37, 34, 27, 42, 35, 27, 51, 43, 33, \
59, 49, 38, 58, 48, 38, 62, 52, 42, 64, \
54, 44, 63, 53, 43, 58, 48, 37, 54, 45, \
32, 49, 40, 27, 50, 41, 28, 53, 45, 32, \
49, 43, 31, 100, 93, 74, 109, 102, 84, 107, \
99, 82, 98, 90, 75, 114, 106, 93, 114, 105, \
91, 88, 77, 62, 83, 71, 55, 85, 72, 57, \
82, 68, 53, 90, 75, 59, 104, 87, 71, 104, \
87, 70, 94, 78, 61, 83, 71, 54, 52, 43, \
30, 38, 33, 23, 44, 40, 30, 42, 37, 27, \
46, 39, 29, 54, 47, 36, 60, 52, 41, 61, \
51, 40, 63, 52, 40, 64, 52, 41, 65, 53, \
42, 60, 49, 38, 54, 45, 34, 49, 39, 28, \
46, 36, 25, 46, 37, 26, 47, 40, 29, 102, \
94, 74, 112, 104, 84, 110, 102, 83, 102, 94, \
76, 123, 115, 102, 78, 68, 55, 77, 65, 49, \
84, 69, 52, 83, 66, 49, 85, 68, 52, 88, \
71, 55, 93, 76, 60, 98, 81, 65, 105, 91, \
76, 109, 98, 83, 76, 68, 55, 39, 32, 21, \
41, 36, 25, 42, 36, 23, 47, 41, 29, 56, \
50, 38, 60, 54, 42, 61, 51, 39, 63, 50, \
38, 65, 53, 41, 65, 53, 41, 57, 45, 34, \
49, 39, 29, 47, 37, 27, 42, 32, 22, 40, \
30, 20, 45, 37, 26, 111, 103, 84, 110, 101, \
83, 99, 90, 72, 111, 103, 86, 140, 131, 119, \
73, 64, 51, 79, 67, 51, 94, 79, 62, 90, \
73, 56, 91, 74, 58, 86, 69, 53, 84, 67, \
52, 128, 112, 96, 146, 132, 117, 107, 97, 82, \
78, 70, 57, 39, 32, 22, 36, 30, 19, 39, \
33, 21, 44, 38, 26, 52, 46, 34, 56, 50, \
38, 60, 50, 38, 61, 49, 37, 60, 49, 37, \
66, 54, 42, 55, 44, 32, 45, 35, 25, 43, \
33, 23, 39, 29, 20, 37, 27, 17, 40, 33, \
21, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '12714';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a1094af4810405a6ee12cb6cbef0cfafb';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_airplane1';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{162, 193, 251, 164, 195, 250, 168, 198, 252, 169, 200, \
251, 171, 203, 251, 173, 204, 251, 173, 205, 251, \
174, 205, 252, 174, 205, 252, 174, 205, 252, 174, \
206, 252, 174, 206, 252, 174, 206, 252, 174, 206, \
252, 174, 206, 252, 174, 206, 252, 174, 206, 252, \
174, 205, 252, 174, 206, 251, 174, 207, 251, 174, \
207, 251, 174, 207, 251, 174, 207, 251, 174, 207, \
252, 174, 207, 252, 174, 207, 252, 174, 206, 252, \
174, 206, 252, 173, 205, 251, 172, 204, 251, 170, \
202, 252, 169, 199, 252, 167, 198, 255, 170, 200, \
254, 173, 203, 255, 174, 205, 254, 176, 207, 254, \
177, 208, 254, 177, 208, 255, 177, 208, 255, 177, \
209, 255, 177, 209, 255, 178, 209, 255, 178, 209, \
255, 177, 209, 255, 177, 209, 255, 177, 209, 255, \
178, 209, 255, 178, 209, 255, 178, 209, 255, 177, \
209, 255, 177, 209, 255, 178, 210, 255, 178, 210, \
255, 178, 210, 255, 178, 210, 255, 178, 210, 255, \
178, 210, 255, 178, 210, 255, 178, 209, 255, 177, \
209, 255, 176, 208, 255, 175, 206, 255, 173, 204, \
255, 169, 199, 253, 171, 200, 252, 174, 202, 253, \
176, 205, 253, 176, 207, 253, 177, 206, 253, 178, \
207, 254, 178, 207, 254, 177, 207, 254, 178, 207, \
254, 177, 208, 254, 177, 208, 254, 177, 207, 254, \
178, 207, 254, 178, 208, 254, 178, 208, 255, 178, \
209, 254, 178, 209, 254, 177, 208, 254, 177, 208, \
254, 177, 208, 254, 177, 208, 254, 178, 209, 255, \
178, 209, 254, 178, 209, 254, 178, 208, 254, 178, \
208, 254, 177, 208, 254, 178, 208, 254, 177, 208, \
254, 175, 206, 254, 174, 204, 254, 173, 201, 254, \
175, 203, 253, 178, 206, 254, 179, 206, 252, 179, \
208, 253, 179, 207, 255, 179, 207, 255, 179, 207, \
254, 179, 207, 254, 179, 208, 254, 178, 207, 254, \
178, 207, 254, 178, 207, 254, 179, 207, 254, 180, \
208, 255, 179, 208, 255, 178, 209, 255, 178, 209, \
255, 178, 209, 255, 178, 209, 255, 178, 209, 255, \
178, 209, 255, 178, 209, 255, 179, 209, 254, 178, \
209, 254, 179, 208, 253, 178, 208, 252, 178, 209, \
254, 178, 209, 254, 179, 208, 255, 178, 207, 254, \
176, 205, 254, 172, 197, 248, 167, 196, 249, 172, \
201, 251, 175, 204, 252, 175, 204, 252, 178, 206, \
255, 179, 207, 255, 180, 207, 255, 180, 208, 255, \
180, 207, 254, 180, 208, 255, 180, 208, 255, 180, \
208, 255, 180, 208, 255, 180, 208, 255, 180, 208, \
255, 180, 208, 255, 180, 209, 255, 180, 208, 255, \
180, 208, 255, 180, 208, 255, 180, 208, 255, 180, \
209, 255, 180, 208, 254, 179, 208, 253, 180, 210, \
253, 182, 210, 253, 181, 209, 253, 180, 209, 253, \
180, 208, 254, 179, 207, 255, 178, 206, 254, 232, \
238, 254, 213, 226, 254, 195, 214, 250, 182, 206, \
247, 186, 210, 253, 182, 208, 255, 179, 207, 254, \
181, 208, 255, 181, 208, 255, 181, 208, 255, 181, \
208, 255, 181, 208, 255, 181, 208, 255, 180, 208, \
255, 180, 208, 255, 180, 208, 255, 180, 208, 255, \
181, 209, 255, 181, 209, 255, 181, 209, 255, 181, \
209, 255, 181, 209, 255, 181, 209, 255, 179, 208, \
254, 183, 211, 255, 165, 194, 237, 130, 159, 208, \
164, 193, 236, 182, 211, 254, 180, 208, 254, 180, \
208, 255, 179, 207, 254, 186, 183, 195, 186, 184, \
196, 159, 161, 181, 119, 125, 156, 166, 174, 198, \
187, 211, 249, 180, 208, 253, 181, 208, 254, 181, \
208, 255, 181, 208, 255, 180, 207, 254, 181, 208, \
255, 181, 208, 255, 181, 208, 255, 181, 208, 255, \
181, 209, 255, 181, 209, 255, 181, 209, 255, 181, \
209, 255, 181, 209, 255, 181, 209, 255, 180, 209, \
254, 180, 209, 254, 180, 208, 252, 187, 215, 255, \
126, 158, 202, 69, 103, 152, 154, 182, 224, 184, \
211, 255, 180, 208, 254, 180, 208, 255, 180, 207, \
255, 139, 143, 163, 137, 140, 160, 132, 135, 154, \
111, 114, 133, 149, 155, 170, 184, 208, 242, 182, \
208, 255, 181, 207, 253, 180, 207, 255, 180, 207, \
254, 180, 207, 254, 181, 208, 255, 181, 208, 255, \
181, 208, 255, 181, 208, 255, 181, 208, 255, 181, \
209, 255, 181, 209, 255, 181, 209, 255, 181, 209, \
255, 181, 209, 255, 181, 210, 254, 180, 209, 254, \
182, 211, 253, 176, 203, 244, 99, 132, 179, 83, \
117, 161, 166, 193, 234, 182, 210, 255, 180, 208, \
255, 180, 208, 255, 180, 208, 255, 153, 158, 182, \
149, 154, 177, 146, 151, 170, 141, 145, 165, 145, \
150, 170, 178, 198, 230, 182, 209, 255, 180, 208, \
254, 181, 208, 255, 181, 208, 255, 181, 209, 255, \
182, 209, 255, 182, 209, 255, 182, 209, 255, 182, \
209, 255, 182, 209, 255, 181, 210, 255, 181, 209, \
255, 181, 209, 255, 181, 209, 255, 181, 210, 255, \
181, 210, 254, 180, 209, 254, 183, 212, 254, 147, \
176, 221, 90, 115, 163, 107, 135, 177, 173, 200, \
242, 181, 208, 255, 181, 208, 254, 180, 209, 255, \
180, 208, 255, 178, 183, 199, 170, 178, 193, 173, \
179, 192, 158, 164, 181, 164, 172, 187, 183, 202, \
236, 181, 207, 252, 181, 204, 243, 179, 205, 246, \
180, 207, 252, 178, 205, 250, 178, 205, 250, 178, \
206, 251, 179, 206, 251, 178, 206, 251, 179, 206, \
251, 178, 207, 251, 180, 207, 252, 182, 209, 253, \
181, 209, 253, 181, 208, 253, 181, 209, 253, 180, \
209, 253, 177, 205, 248, 115, 137, 183, 95, 87, \
122, 125, 138, 176, 178, 207, 250, 182, 207, 254, \
181, 208, 255, 181, 209, 255, 181, 209, 255, 201, \
205, 219, 187, 194, 211, 206, 210, 225, 184, 191, \
210, 190, 197, 214, 197, 215, 249, 184, 211, 255, \
178, 196, 229, 178, 199, 235, 189, 215, 255, 189, \
214, 255, 190, 216, 255, 189, 216, 255, 188, 216, \
255, 187, 215, 255, 187, 215, 255, 188, 215, 255, \
185, 213, 255, 180, 208, 253, 183, 209, 254, 186, \
212, 255, 182, 210, 254, 187, 213, 255, 157, 186, \
231, 91, 102, 142, 96, 56, 70, 135, 132, 157, \
179, 209, 250, 182, 207, 253, 182, 209, 254, 182, \
209, 255, 182, 209, 255, 121, 133, 160, 112, 124, \
154, 130, 138, 166, 114, 125, 156, 133, 144, 170, \
161, 177, 205, 164, 184, 214, 190, 205, 224, 176, \
195, 225, 158, 182, 222, 160, 183, 221, 161, 184, \
225, 162, 186, 225, 162, 186, 227, 164, 188, 228, \
165, 190, 229, 168, 191, 232, 175, 197, 235, 190, \
211, 247, 186, 209, 245, 176, 199, 239, 177, 203, \
245, 181, 204, 244, 132, 163, 212, 90, 116, 161, \
99, 71, 85, 146, 151, 184, 185, 213, 255, 182, \
208, 252, 183, 209, 254, 183, 209, 254, 183, 208, \
254, 103, 112, 126, 106, 115, 128, 132, 138, 149, \
150, 157, 167, 153, 161, 178, 138, 150, 174, 146, \
153, 173, 193, 202, 217, 173, 185, 214, 140, 153, \
188, 137, 151, 180, 136, 150, 177, 137, 150, 173, \
140, 153, 177, 142, 155, 178, 143, 156, 180, 145, \
161, 190, 164, 175, 196, 218, 225, 239, 202, 212, \
229, 163, 176, 202, 164, 183, 216, 152, 173, 214, \
116, 147, 204, 96, 131, 182, 105, 117, 149, 159, \
175, 209, 173, 194, 233, 182, 206, 250, 185, 209, \
254, 184, 208, 254, 184, 207, 253, 105, 112, 130, \
117, 124, 142, 161, 163, 174, 170, 175, 184, 156, \
166, 193, 130, 147, 186, 130, 139, 178, 132, 146, \
188, 133, 146, 189, 135, 147, 187, 137, 148, 186, \
138, 149, 189, 135, 143, 174, 136, 147, 176, 138, \
146, 174, 137, 146, 177, 140, 157, 199, 146, 167, \
209, 166, 184, 223, 163, 182, 220, 152, 172, 210, \
150, 170, 212, 137, 160, 205, 117, 146, 201, 100, \
133, 193, 97, 130, 183, 141, 164, 204, 154, 174, \
211, 180, 204, 247, 181, 205, 248, 181, 206, 247, \
183, 206, 247, 189, 193, 201, 174, 177, 190, 162, \
164, 175, 120, 128, 147, 108, 123, 157, 107, 127, \
173, 115, 135, 179, 108, 128, 173, 107, 125, 172, \
105, 125, 172, 108, 127, 174, 107, 126, 174, 102, \
119, 167, 95, 116, 167, 93, 111, 164, 89, 110, \
165, 87, 114, 174, 89, 116, 177, 92, 118, 178, \
96, 123, 183, 103, 128, 185, 108, 135, 189, 115, \
139, 193, 119, 143, 194, 122, 146, 195, 115, 136, \
179, 131, 147, 188, 144, 159, 193, 152, 167, 200, \
144, 159, 191, 149, 165, 201, 161, 177, 213, 251, \
251, 251, 203, 207, 219, 152, 162, 191, 128, 142, \
173, 135, 149, 181, 142, 155, 186, 146, 160, 190, \
149, 161, 191, 147, 163, 193, 144, 162, 193, 143, \
163, 196, 140, 160, 196, 123, 146, 190, 111, 135, \
180, 109, 133, 178, 109, 132, 180, 107, 130, 178, \
115, 135, 181, 139, 155, 193, 143, 159, 194, 169, \
181, 207, 180, 190, 213, 188, 195, 216, 203, 208, \
222, 212, 216, 225, 210, 213, 218, 209, 210, 214, \
178, 183, 196, 162, 170, 191, 147, 157, 181, 116, \
129, 159, 90, 105, 137, 224, 226, 233, 156, 163, \
185, 143, 151, 175, 161, 168, 188, 166, 174, 192, \
159, 165, 183, 148, 158, 174, 146, 157, 178, 144, \
158, 179, 141, 154, 177, 141, 157, 185, 128, 150, \
189, 99, 120, 167, 142, 156, 189, 171, 178, 202, \
146, 156, 188, 132, 140, 166, 157, 161, 177, 181, \
182, 191, 172, 172, 178, 176, 178, 185, 170, 172, \
177, 163, 163, 165, 163, 163, 168, 147, 150, 161, \
131, 136, 153, 116, 120, 138, 84, 94, 128, 57, \
71, 121, 49, 64, 115, 64, 80, 121, 55, 73, \
115, 241, 240, 241, 207, 206, 210, 198, 198, 200, \
182, 182, 185, 162, 163, 169, 156, 160, 167, 143, \
148, 159, 133, 139, 151, 131, 137, 151, 129, 134, \
147, 128, 137, 153, 119, 130, 149, 100, 109, 127, \
122, 125, 136, 148, 151, 169, 139, 155, 196, 98, \
102, 124, 75, 71, 76, 72, 71, 76, 77, 80, \
87, 98, 103, 114, 97, 103, 118, 83, 92, 117, \
65, 76, 117, 58, 74, 118, 45, 62, 115, 27, \
41, 102, 18, 37, 102, 15, 35, 100, 14, 32, \
94, 49, 65, 113, 44, 63, 116, 223, 224, 228, \
222, 222, 225, 241, 240, 241, 194, 192, 198, 151, \
142, 149, 169, 169, 169, 136, 136, 135, 108, 112, \
120, 165, 168, 175, 184, 182, 183, 116, 120, 128, \
121, 127, 141, 132, 135, 146, 92, 91, 98, 76, \
79, 91, 145, 159, 192, 111, 120, 143, 80, 85, \
99, 103, 110, 126, 146, 152, 161, 146, 153, 163, \
68, 80, 123, 35, 53, 112, 22, 40, 100, 51, \
69, 117, 42, 62, 116, 17, 35, 98, 21, 39, \
103, 21, 41, 103, 20, 38, 99, 47, 65, 113, \
39, 58, 113, 166, 156, 164, 158, 152, 158, 193, \
188, 190, 166, 161, 169, 131, 123, 129, 166, 161, \
152, 117, 112, 106, 102, 104, 115, 169, 170, 181, \
174, 171, 173, 64, 66, 72, 105, 112, 124, 162, \
160, 174, 146, 138, 148, 125, 121, 126, 155, 157, \
166, 77, 81, 91, 65, 71, 87, 135, 141, 160, \
165, 170, 181, 152, 161, 173, 94, 103, 134, 81, \
92, 129, 76, 86, 125, 87, 98, 131, 80, 91, \
129, 62, 74, 119, 61, 74, 120, 59, 73, 120, \
59, 71, 116, 75, 86, 121, 68, 81, 123, 166, \
154, 154, 161, 151, 150, 169, 159, 157, 151, 142, \
144, 119, 114, 118, 160, 151, 150, 154, 144, 144, \
150, 144, 146, 157, 148, 152, 135, 128, 132, 66, \
65, 69, 106, 104, 106, 152, 142, 142, 155, 142, \
142, 151, 142, 144, 138, 134, 137, 66, 64, 67, \
61, 60, 64, 132, 128, 132, 139, 136, 140, 139, \
138, 143, 140, 137, 140, 140, 135, 139, 141, 136, \
142, 140, 137, 143, 138, 136, 143, 136, 134, 141, \
136, 133, 142, 134, 130, 141, 132, 128, 139, 134, \
130, 138, 137, 132, 141, 205, 200, 207, 206, 202, \
205, 209, 202, 205, 205, 197, 202, 199, 194, 198, \
203, 197, 201, 202, 197, 201, 199, 195, 199, 201, \
196, 201, 201, 197, 201, 196, 192, 198, 197, 193, \
197, 198, 192, 197, 196, 189, 195, 193, 188, 193, \
193, 190, 195, 188, 185, 190, 186, 181, 186, 192, \
186, 191, 193, 188, 193, 190, 186, 192, 190, 186, \
191, 191, 185, 191, 191, 185, 190, 190, 185, 190, \
190, 186, 190, 191, 187, 189, 191, 186, 189, 190, \
184, 188, 187, 183, 188, 186, 182, 188, 190, 183, \
185, 174, 158, 141, 171, 157, 139, 171, 158, 137, \
174, 161, 140, 177, 163, 142, 174, 160, 139, 171, \
158, 139, 171, 158, 140, 172, 159, 139, 172, 160, \
139, 174, 160, 142, 173, 159, 142, 170, 158, 141, \
170, 158, 139, 170, 157, 138, 170, 156, 138, 171, \
157, 139, 173, 159, 141, 172, 159, 140, 171, 158, \
139, 172, 159, 141, 171, 157, 139, 169, 155, 138, \
169, 155, 138, 171, 157, 139, 169, 156, 137, 169, \
155, 136, 171, 156, 138, 169, 154, 136, 169, 155, \
135, 172, 156, 136, 172, 158, 137, 155, 137, 117, \
152, 135, 114, 154, 139, 115, 153, 138, 116, 152, \
136, 113, 154, 139, 115, 155, 140, 117, 156, 140, \
117, 155, 140, 115, 153, 137, 115, 151, 134, 113, \
151, 136, 111, 152, 137, 112, 153, 136, 112, 154, \
137, 113, 155, 138, 115, 152, 135, 113, 153, 136, \
112, 152, 136, 112, 150, 134, 110, 152, 136, 113, \
152, 135, 112, 151, 135, 111, 150, 135, 110, 149, \
135, 112, 150, 135, 112, 152, 137, 113, 156, 141, \
116, 155, 140, 115, 155, 139, 113, 158, 140, 114, \
159, 142, 117, 160, 145, 124, 157, 143, 121, 159, \
144, 123, 157, 142, 123, 157, 143, 123, 158, 144, \
124, 159, 144, 124, 160, 145, 125, 160, 144, 124, \
158, 143, 123, 157, 142, 124, 158, 143, 124, 159, \
145, 125, 158, 144, 124, 158, 145, 124, 161, 147, \
127, 161, 146, 127, 160, 145, 127, 158, 144, 126, \
155, 141, 124, 155, 141, 124, 155, 141, 124, 157, \
142, 124, 155, 142, 123, 153, 140, 121, 152, 139, \
121, 155, 142, 123, 156, 142, 123, 156, 143, 123, \
153, 141, 120, 154, 142, 120, 155, 142, 122, 139, \
130, 115, 139, 130, 117, 139, 130, 118, 140, 131, \
118, 142, 132, 118, 144, 133, 118, 145, 135, 120, \
143, 132, 118, 140, 129, 116, 143, 133, 118, 139, \
130, 115, 142, 132, 117, 142, 132, 115, 137, 129, \
112, 137, 130, 112, 141, 132, 114, 144, 134, 117, \
144, 134, 116, 145, 135, 117, 143, 132, 114, 140, \
130, 111, 144, 132, 114, 146, 135, 116, 144, 133, \
113, 142, 131, 111, 142, 131, 110, 144, 132, 111, \
148, 136, 114, 145, 134, 112, 142, 132, 108, 145, \
135, 111, 151, 139, 116, 128, 115, 98, 129, 116, \
100, 134, 120, 103, 137, 123, 105, 137, 122, 105, \
140, 125, 108, 143, 128, 110, 144, 129, 112, 143, \
129, 110, 151, 137, 116, 151, 135, 115, 153, 137, \
117, 149, 132, 111, 151, 135, 113, 156, 141, 118, \
159, 143, 119, 164, 147, 122, 166, 149, 123, 164, \
148, 122, 165, 149, 122, 165, 149, 122, 168, 152, \
125, 171, 155, 127, 169, 153, 125, 173, 156, 128, \
171, 154, 126, 172, 155, 127, 174, 157, 128, 174, \
157, 128, 175, 159, 130, 173, 156, 127, 177, 160, \
130, 147, 130, 107, 149, 131, 109, 159, 142, 118, \
164, 146, 122, 160, 140, 118, 165, 146, 122, 165, \
145, 121, 162, 143, 119, 162, 144, 119, 164, 146, \
120, 168, 148, 124, 167, 146, 124, 167, 147, 123, \
170, 152, 124, 172, 154, 128, 171, 152, 126, 175, \
154, 130, 175, 155, 130, 171, 153, 129, 166, 148, \
125, 166, 148, 126, 163, 145, 124, 163, 146, 123, \
168, 151, 127, 168, 152, 126, 168, 152, 127, 170, \
153, 127, 168, 151, 125, 171, 154, 129, 168, 151, \
126, 165, 148, 123, 168, 152, 124, 146, 129, 110, \
152, 135, 116, 157, 140, 120, 161, 142, 122, 159, \
139, 119, 161, 142, 118, 164, 145, 119, 165, 145, \
118, 165, 145, 119, 165, 144, 119, 162, 142, 116, \
162, 142, 117, 166, 146, 120, 164, 146, 120, 160, \
142, 117, 160, 141, 116, 162, 142, 117, 163, 143, \
118, 164, 146, 119, 161, 143, 115, 159, 141, 114, \
161, 144, 117, 160, 143, 116, 166, 148, 121, 163, \
146, 121, 161, 143, 118, 163, 144, 117, 160, 141, \
114, 159, 141, 114, 160, 142, 115, 160, 143, 116, \
162, 145, 118, 145, 129, 112, 149, 132, 115, 155, \
138, 119, 155, 137, 117, 154, 136, 117, 154, 137, \
118, 157, 139, 118, 164, 144, 120, 165, 145, 121, \
162, 141, 120, 159, 139, 117, 159, 139, 116, 162, \
141, 119, 164, 144, 122, 162, 141, 118, 161, 141, \
118, 162, 142, 120, 163, 144, 122, 167, 147, 123, \
166, 146, 122, 162, 142, 117, 164, 146, 120, 165, \
146, 121, 167, 147, 124, 163, 145, 124, 159, 141, \
119, 163, 143, 121, 164, 145, 123, 170, 151, 127, \
171, 153, 127, 170, 153, 127, 169, 152, 127, 149, \
133, 117, 155, 139, 121, 163, 145, 126, 166, 148, \
127, 166, 148, 127, 165, 147, 127, 165, 147, 127, \
166, 148, 127, 166, 148, 127, 164, 146, 127, 164, \
145, 126, 165, 145, 126, 168, 149, 130, 170, 151, \
131, 168, 149, 129, 167, 147, 127, 168, 149, 129, \
170, 152, 132, 170, 151, 131, 170, 150, 131, 170, \
151, 131, 169, 150, 130, 170, 152, 131, 171, 152, \
131, 168, 149, 128, 167, 148, 126, 168, 148, 127, \
169, 150, 130, 170, 152, 133, 168, 150, 130, 168, \
150, 128, 168, 150, 128, 153, 137, 123, 155, 138, \
123, 160, 143, 127, 164, 146, 130, 165, 147, 129, \
161, 144, 125, 164, 146, 127, 163, 144, 126, 163, \
144, 125, 165, 146, 128, 166, 148, 128, 166, 148, \
128, 165, 147, 128, 164, 146, 128, 165, 147, 129, \
166, 147, 127, 168, 150, 130, 168, 151, 132, 168, \
151, 131, 171, 153, 133, 170, 152, 132, 172, 154, \
136, 172, 155, 135, 171, 154, 135, 169, 151, 134, \
170, 152, 133, 172, 154, 135, 168, 150, 133, 164, \
147, 131, 163, 146, 130, 160, 143, 127, 158, 141, \
125, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '13024';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1ad06f7e96c468e7545cf81d099577bcb2';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_dog7';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{11, 12, 14, 13, 14, 16, 13, 14, 16, 12, 13, \
15, 17, 21, 20, 29, 32, 32, 37, 39, 45, \
30, 45, 48, 33, 51, 49, 43, 48, 47, 41, \
45, 44, 40, 45, 45, 37, 42, 42, 30, 36, \
36, 28, 34, 34, 36, 39, 40, 45, 45, 47, \
39, 40, 42, 39, 40, 42, 40, 41, 43, 44, \
46, 47, 39, 41, 40, 30, 32, 31, 29, 31, \
30, 37, 39, 38, 41, 43, 42, 36, 37, 36, \
20, 22, 21, 14, 16, 15, 14, 16, 15, 14, \
16, 15, 13, 15, 15, 12, 13, 15, 13, 14, \
16, 13, 14, 16, 11, 11, 13, 35, 41, 42, \
82, 89, 92, 94, 100, 109, 74, 94, 100, 86, \
108, 109, 104, 113, 114, 104, 109, 110, 105, 111, \
111, 102, 108, 108, 78, 84, 84, 66, 72, 72, \
92, 95, 96, 115, 116, 118, 103, 104, 106, 103, \
104, 106, 107, 108, 110, 119, 120, 121, 96, 98, \
97, 76, 78, 77, 78, 80, 79, 97, 99, 98, \
113, 115, 114, 91, 93, 92, 33, 35, 34, 12, \
14, 13, 13, 15, 14, 13, 15, 14, 12, 14, \
14, 12, 13, 15, 12, 13, 15, 12, 13, 15, \
13, 13, 15, 25, 32, 33, 49, 58, 62, 51, \
60, 69, 39, 62, 69, 44, 69, 72, 48, 59, \
61, 55, 61, 62, 54, 60, 60, 54, 60, 60, \
46, 52, 52, 35, 41, 40, 51, 54, 55, 62, \
63, 65, 59, 60, 62, 58, 59, 61, 56, 57, \
59, 64, 66, 67, 52, 54, 53, 46, 48, 47, \
51, 53, 52, 57, 59, 58, 62, 64, 63, 52, \
54, 53, 22, 24, 23, 12, 14, 13, 14, 16, \
15, 14, 16, 15, 14, 15, 15, 12, 13, 15, \
12, 13, 15, 12, 13, 15, 17, 18, 20, 13, \
19, 20, 9, 17, 21, 26, 33, 42, 38, 59, \
65, 17, 40, 42, 6, 16, 18, 12, 17, 18, \
10, 16, 16, 10, 16, 16, 11, 17, 17, 10, \
16, 16, 13, 16, 17, 14, 15, 17, 14, 15, \
17, 14, 15, 17, 12, 13, 16, 13, 14, 15, \
13, 15, 14, 12, 14, 13, 13, 15, 14, 13, \
15, 14, 12, 14, 13, 11, 13, 12, 12, 14, \
13, 13, 15, 14, 13, 15, 14, 13, 15, 14, \
13, 15, 15, 13, 14, 16, 13, 14, 16, 12, \
13, 15, 15, 16, 18, 13, 18, 17, 17, 21, \
22, 27, 30, 36, 24, 42, 45, 10, 29, 28, \
15, 21, 20, 16, 21, 21, 15, 21, 21, 16, \
21, 22, 15, 20, 21, 14, 20, 20, 17, 20, \
21, 19, 20, 22, 19, 19, 21, 18, 19, 21, \
18, 19, 21, 18, 19, 21, 16, 18, 17, 16, \
18, 17, 16, 18, 17, 16, 18, 17, 17, 19, \
18, 16, 18, 17, 14, 16, 15, 13, 15, 14, \
13, 15, 14, 13, 15, 14, 13, 15, 14, 14, \
15, 17, 14, 15, 17, 14, 15, 17, 15, 16, \
18, 12, 16, 15, 14, 15, 14, 13, 14, 17, \
5, 18, 19, 6, 21, 19, 16, 19, 17, 14, \
19, 18, 12, 20, 19, 12, 20, 18, 12, 20, \
19, 12, 20, 19, 14, 18, 19, 15, 17, 20, \
15, 17, 20, 15, 18, 20, 15, 18, 21, 15, \
17, 20, 14, 16, 16, 14, 16, 15, 14, 15, \
15, 13, 15, 15, 13, 15, 15, 13, 15, 14, \
13, 15, 14, 13, 15, 14, 13, 15, 14, 13, \
15, 14, 13, 15, 15, 12, 15, 16, 12, 16, \
17, 12, 16, 17, 13, 17, 18, 13, 17, 17, \
13, 16, 16, 14, 16, 18, 12, 18, 19, 13, \
20, 19, 15, 19, 18, 12, 21, 19, 11, 23, \
20, 11, 22, 20, 12, 23, 20, 12, 23, 21, \
14, 21, 23, 17, 19, 25, 16, 20, 25, 15, \
20, 26, 14, 19, 26, 14, 18, 24, 16, 18, \
20, 16, 17, 18, 15, 16, 17, 14, 16, 17, \
15, 16, 17, 15, 17, 17, 15, 17, 16, 14, \
16, 15, 14, 16, 15, 14, 16, 15, 14, 15, \
15, 12, 16, 17, 13, 17, 18, 13, 18, 18, \
13, 18, 18, 13, 18, 18, 13, 18, 18, 13, \
18, 18, 14, 19, 19, 14, 19, 20, 14, 19, \
20, 13, 21, 24, 14, 22, 26, 13, 22, 25, \
14, 23, 26, 14, 23, 26, 16, 22, 26, 18, \
21, 25, 17, 21, 26, 16, 21, 26, 15, 20, \
25, 15, 19, 24, 16, 19, 21, 16, 18, 20, \
15, 17, 19, 15, 17, 18, 15, 17, 18, 15, \
18, 18, 15, 18, 17, 14, 17, 16, 13, 16, \
15, 13, 16, 15, 13, 16, 16, 11, 19, 18, \
12, 20, 19, 12, 20, 19, 12, 20, 19, 13, \
20, 19, 13, 20, 19, 13, 20, 20, 13, 21, \
20, 14, 21, 21, 14, 21, 21, 15, 21, 25, \
16, 22, 28, 16, 22, 27, 17, 23, 28, 17, \
23, 28, 17, 23, 27, 17, 23, 26, 18, 23, \
25, 18, 23, 25, 17, 21, 23, 16, 20, 22, \
17, 20, 21, 16, 19, 21, 15, 19, 20, 15, \
18, 19, 15, 18, 19, 15, 19, 19, 15, 19, \
18, 14, 18, 17, 12, 16, 15, 12, 16, 15, \
12, 16, 16, 10, 20, 19, 11, 21, 20, 12, \
21, 20, 11, 20, 19, 12, 22, 21, 12, 22, \
21, 12, 22, 21, 13, 22, 21, 12, 21, 20, \
14, 24, 23, 14, 25, 24, 15, 25, 25, 15, \
26, 26, 15, 25, 25, 15, 26, 26, 15, 27, \
29, 12, 25, 28, 14, 25, 26, 16, 25, 24, \
15, 22, 20, 14, 20, 18, 16, 21, 21, 14, \
20, 20, 14, 19, 20, 14, 19, 19, 13, 18, \
19, 14, 20, 19, 14, 19, 17, 13, 18, 16, \
12, 18, 16, 13, 18, 16, 12, 18, 17, 10, \
20, 19, 12, 22, 21, 12, 22, 21, 12, 22, \
21, 13, 23, 22, 13, 23, 22, 13, 23, 22, \
12, 22, 21, 12, 22, 21, 12, 24, 23, 7, \
27, 26, 10, 31, 31, 12, 33, 33, 11, 32, \
32, 9, 31, 30, 11, 33, 36, 12, 34, 40, \
12, 31, 35, 14, 30, 30, 13, 25, 24, 14, \
24, 22, 14, 22, 21, 13, 21, 20, 13, 21, \
20, 12, 20, 20, 11, 19, 18, 12, 21, 19, \
12, 20, 18, 11, 19, 17, 12, 20, 17, 12, \
20, 17, 12, 20, 18, 11, 22, 21, 12, 23, \
22, 14, 25, 24, 14, 26, 24, 14, 25, 23, \
14, 25, 23, 13, 25, 23, 13, 24, 22, 13, \
25, 22, 16, 30, 31, 28, 57, 70, 42, 76, \
93, 54, 87, 104, 51, 84, 101, 34, 67, 84, \
31, 64, 78, 11, 43, 53, 10, 38, 46, 14, \
37, 41, 15, 33, 34, 11, 26, 25, 14, 23, \
22, 13, 22, 21, 13, 23, 22, 12, 22, 21, \
11, 21, 20, 13, 22, 20, 13, 22, 19, 11, \
21, 18, 12, 21, 18, 12, 22, 18, 12, 21, \
18, 12, 23, 22, 12, 24, 23, 14, 26, 25, \
15, 28, 27, 14, 26, 25, 14, 24, 26, 14, \
24, 29, 13, 26, 23, 12, 27, 22, 23, 41, \
49, 85, 117, 147, 121, 155, 188, 133, 163, 192, \
136, 166, 193, 129, 159, 186, 120, 152, 171, 86, \
116, 127, 91, 116, 126, 83, 106, 115, 43, 69, \
76, 15, 39, 44, 14, 27, 26, 15, 23, 23, \
13, 23, 24, 11, 24, 23, 12, 22, 22, 13, \
22, 21, 12, 23, 21, 12, 23, 20, 12, 23, \
21, 12, 23, 21, 12, 23, 20, 14, 22, 26, \
14, 24, 27, 14, 26, 28, 14, 28, 30, 15, \
27, 27, 14, 22, 30, 14, 23, 37, 12, 29, \
24, 8, 31, 23, 26, 51, 70, 111, 139, 176, \
168, 191, 224, 195, 210, 233, 206, 219, 237, 209, \
225, 241, 210, 229, 241, 203, 220, 230, 210, 221, \
231, 198, 212, 223, 126, 154, 170, 32, 67, 81, \
10, 28, 28, 17, 23, 24, 13, 25, 26, 8, \
28, 27, 13, 24, 25, 15, 23, 24, 12, 24, \
24, 13, 25, 24, 13, 25, 24, 13, 25, 24, \
12, 24, 23, 15, 24, 29, 15, 28, 31, 16, \
30, 33, 15, 31, 34, 16, 29, 29, 18, 27, \
32, 14, 27, 39, 11, 34, 32, 6, 36, 35, \
43, 73, 95, 145, 168, 198, 207, 223, 244, 231, \
239, 252, 236, 242, 251, 236, 243, 251, 234, 245, \
253, 236, 245, 253, 240, 243, 252, 237, 244, 253, \
193, 217, 230, 64, 96, 109, 6, 25, 27, 16, \
22, 25, 15, 27, 28, 9, 31, 29, 13, 26, \
28, 18, 28, 30, 13, 27, 27, 13, 26, 27, \
13, 26, 26, 13, 27, 27, 15, 28, 28, 15, \
28, 33, 17, 32, 36, 18, 35, 39, 17, 36, \
39, 15, 31, 31, 18, 31, 32, 14, 35, 41, \
9, 39, 42, 30, 65, 75, 114, 147, 168, 207, \
224, 241, 234, 243, 253, 240, 245, 251, 243, 245, \
248, 244, 246, 248, 242, 245, 251, 241, 243, 251, \
242, 242, 248, 241, 245, 250, 229, 243, 251, 138, \
163, 173, 25, 45, 51, 14, 20, 26, 20, 30, \
32, 11, 33, 30, 13, 29, 30, 18, 30, 33, \
16, 30, 33, 16, 31, 33, 15, 30, 32, 16, \
31, 34, 18, 32, 36, 14, 30, 37, 15, 33, \
39, 18, 39, 44, 18, 42, 46, 16, 36, 38, \
15, 34, 34, 11, 39, 41, 13, 49, 60, 94, \
128, 148, 201, 229, 245, 236, 245, 251, 241, 245, \
249, 242, 246, 249, 245, 245, 248, 247, 246, 247, \
245, 243, 248, 246, 244, 251, 247, 247, 251, 244, \
246, 250, 244, 252, 255, 192, 210, 220, 44, 65, \
76, 5, 12, 21, 18, 27, 29, 11, 34, 30, \
11, 31, 31, 15, 31, 35, 15, 32, 36, 16, \
33, 37, 19, 36, 40, 17, 34, 38, 14, 31, \
36, 11, 31, 38, 13, 35, 41, 16, 40, 45, \
13, 40, 44, 14, 38, 45, 16, 39, 43, 8, \
42, 44, 19, 53, 74, 127, 153, 182, 226, 242, \
255, 242, 245, 247, 243, 246, 249, 242, 247, 253, \
244, 246, 253, 245, 244, 251, 246, 244, 252, 232, \
231, 240, 207, 208, 214, 229, 233, 237, 243, 248, \
255, 206, 219, 231, 61, 83, 98, 2, 10, 21, \
17, 26, 26, 12, 36, 30, 11, 34, 35, 17, \
35, 41, 15, 33, 38, 13, 31, 36, 18, 36, \
40, 14, 33, 37, 12, 30, 35, 14, 37, 44, \
13, 38, 44, 12, 39, 45, 10, 40, 44, 14, \
40, 52, 15, 43, 53, 12, 48, 52, 60, 92, \
119, 164, 181, 217, 233, 237, 251, 247, 246, 248, \
242, 244, 250, 216, 223, 235, 225, 230, 242, 234, \
234, 246, 219, 217, 231, 212, 214, 226, 160, 165, \
173, 196, 202, 208, 243, 249, 255, 212, 224, 238, \
76, 100, 119, 5, 13, 25, 20, 28, 27, 15, \
39, 32, 12, 37, 37, 19, 39, 45, 16, 35, \
41, 13, 32, 38, 15, 34, 39, 12, 30, 36, \
10, 29, 34, 13, 40, 49, 14, 43, 51, 15, \
45, 52, 12, 44, 50, 14, 43, 56, 12, 42, \
55, 31, 68, 79, 130, 161, 193, 195, 210, 242, \
233, 236, 244, 248, 247, 251, 231, 232, 241, 161, \
164, 178, 201, 205, 221, 186, 190, 207, 107, 114, \
134, 159, 167, 185, 182, 185, 200, 197, 197, 209, \
243, 244, 251, 221, 231, 240, 84, 107, 124, 4, \
13, 21, 19, 29, 28, 15, 42, 40, 13, 41, \
42, 19, 41, 45, 18, 37, 42, 17, 36, 41, \
15, 35, 40, 12, 31, 37, 11, 32, 36, 13, \
45, 55, 18, 50, 60, 18, 50, 60, 13, 46, \
55, 13, 44, 56, 10, 42, 54, 53, 90, 108, \
161, 193, 227, 202, 221, 247, 230, 238, 241, 244, \
246, 253, 233, 232, 241, 172, 171, 183, 215, 219, \
232, 157, 168, 188, 40, 60, 81, 108, 125, 146, \
207, 209, 229, 199, 193, 210, 231, 228, 236, 233, \
242, 249, 96, 116, 130, 2, 12, 16, 20, 34, \
34, 18, 47, 53, 12, 44, 47, 18, 43, 46, \
21, 42, 48, 18, 40, 45, 16, 38, 43, 15, \
36, 42, 15, 38, 43, 13, 46, 57, 16, 50, \
60, 17, 51, 61, 17, 50, 61, 19, 51, 63, \
13, 47, 58, 40, 79, 96, 147, 180, 214, 202, \
222, 249, 229, 238, 244, 243, 245, 251, 242, 241, \
249, 222, 223, 233, 232, 239, 251, 168, 184, 204, \
61, 88, 108, 102, 126, 144, 209, 217, 235, 218, \
217, 234, 229, 230, 243, 232, 243, 255, 122, 140, \
161, 8, 18, 27, 22, 39, 45, 18, 50, 60, \
12, 45, 49, 17, 45, 50, 14, 41, 49, 14, \
41, 50, 18, 45, 53, 15, 42, 51, 13, 40, \
49, 12, 48, 60, 14, 50, 61, 15, 51, 62, \
18, 54, 65, 21, 55, 69, 18, 53, 66, 18, \
59, 74, 97, 133, 165, 178, 200, 229, 224, 234, \
245, 233, 238, 246, 236, 239, 247, 229, 232, 242, \
230, 239, 250, 192, 210, 229, 141, 168, 187, 165, \
191, 205, 209, 218, 233, 233, 232, 248, 221, 222, \
238, 209, 219, 240, 143, 159, 182, 21, 31, 44, \
17, 37, 49, 19, 56, 69, 15, 51, 56, 16, \
49, 55, 14, 47, 59, 16, 49, 61, 20, 53, \
65, 19, 52, 64, 19, 51, 64, 14, 51, 65, \
17, 54, 67, 19, 56, 70, 20, 57, 71, 19, \
54, 70, 18, 56, 69, 20, 62, 76, 63, 101, \
131, 154, 177, 210, 222, 233, 250, 217, 224, 238, \
222, 226, 237, 237, 239, 249, 232, 237, 249, 217, \
228, 244, 209, 227, 242, 217, 231, 242, 236, 236, \
245, 233, 223, 232, 190, 179, 194, 191, 191, 211, \
139, 151, 168, 29, 40, 50, 12, 37, 49, 17, \
59, 75, 17, 56, 63, 22, 57, 65, 22, 59, \
71, 16, 53, 65, 17, 54, 66, 19, 57, 69, \
23, 58, 72, 14, 52, 67, 16, 54, 69, 21, \
59, 74, 19, 57, 72, 19, 56, 73, 19, 58, \
71, 17, 62, 73, 49, 89, 117, 145, 169, 204, \
215, 227, 251, 203, 213, 235, 198, 203, 221, 227, \
225, 238, 235, 231, 242, 238, 237, 249, 237, 238, \
251, 240, 236, 246, 234, 216, 219, 202, 173, 172, \
192, 163, 167, 183, 167, 175, 85, 94, 97, 17, \
31, 31, 15, 44, 53, 16, 62, 80, 21, 61, \
73, 26, 61, 69, 19, 57, 67, 16, 53, 63, \
16, 54, 64, 20, 58, 68, 20, 57, 68, 15, \
54, 68, 16, 55, 69, 16, 55, 70, 19, 58, \
72, 20, 58, 75, 19, 59, 73, 12, 58, 69, \
38, 79, 105, 130, 155, 192, 199, 212, 242, 200, \
213, 242, 200, 205, 231, 218, 212, 229, 214, 202, \
213, 215, 200, 210, 219, 201, 214, 221, 195, 205, \
215, 176, 173, 199, 152, 141, 213, 167, 159, 175, \
146, 142, 51, 57, 47, 12, 29, 19, 22, 56, \
61, 21, 70, 89, 22, 63, 77, 22, 57, 65, \
19, 55, 63, 20, 56, 64, 20, 56, 64, 19, \
55, 63, 18, 54, 63, 16, 54, 66, 16, 54, \
66, 14, 53, 64, 19, 57, 68, 16, 56, 71, \
14, 58, 73, 11, 59, 71, 25, 67, 88, 117, \
143, 176, 183, 197, 233, 195, 209, 240, 209, 218, \
243, 233, 231, 249, 229, 216, 229, 203, 183, 194, \
202, 170, 176, 217, 170, 168, 220, 165, 154, 214, \
157, 142, 210, 161, 148, 189, 158, 149, 66, 67, \
60, 15, 34, 34, 26, 62, 74, 20, 69, 87, \
18, 63, 73, 19, 59, 65, 19, 57, 65, 20, \
58, 67, 22, 60, 70, 23, 60, 72, 22, 61, \
73, 12, 50, 59, 15, 53, 62, 16, 54, 63, \
20, 58, 66, 18, 57, 69, 13, 56, 70, 13, \
59, 72, 14, 56, 73, 103, 133, 163, 181, 199, \
238, 192, 209, 235, 215, 228, 246, 235, 239, 253, \
245, 239, 250, 232, 220, 227, 212, 188, 192, 208, \
170, 170, 197, 153, 150, 192, 152, 148, 187, 160, \
160, 152, 140, 142, 44, 49, 51, 21, 44, 54, \
27, 66, 84, 12, 60, 76, 17, 62, 71, 23, \
65, 72, 17, 59, 68, 15, 57, 68, 17, 58, \
72, 20, 61, 78, 24, 65, 82, 9, 45, 55, \
13, 50, 59, 15, 52, 61, 17, 54, 63, 17, \
52, 63, 14, 49, 60, 16, 55, 65, 11, 50, \
66, 72, 105, 135, 166, 192, 229, 198, 217, 241, \
212, 227, 244, 225, 235, 248, 234, 239, 247, 236, \
237, 241, 222, 224, 235, 201, 199, 220, 180, 171, \
193, 190, 183, 204, 177, 183, 206, 112, 128, 148, \
32, 53, 58, 24, 55, 64, 18, 60, 76, 15, \
59, 76, 24, 63, 74, 23, 63, 72, 16, 59, \
69, 19, 61, 74, 19, 61, 76, 18, 60, 77, \
23, 65, 82, 10, 44, 54, 12, 46, 56, 13, \
47, 57, 12, 46, 56, 13, 44, 53, 12, 41, \
49, 13, 46, 54, 16, 51, 64, 40, 76, 101, \
121, 154, 189, 168, 189, 221, 191, 208, 236, 208, \
224, 246, 215, 230, 247, 211, 225, 240, 178, 199, \
219, 139, 161, 191, 160, 173, 207, 184, 197, 232, \
149, 173, 208, 63, 96, 124, 25, 61, 68, 23, \
63, 71, 16, 59, 74, 22, 62, 78, 25, 59, \
73, 19, 58, 69, 14, 59, 71, 21, 65, 78, \
17, 61, 76, 18, 62, 79, 23, 66, 84, 13, \
45, 56, 12, 44, 55, 15, 47, 58, 14, 46, \
57, 12, 42, 52, 13, 42, 49, 14, 43, 50, \
16, 47, 58, 18, 55, 74, 53, 90, 119, 120, \
146, 184, 153, 175, 213, 163, 186, 220, 163, 186, \
217, 133, 156, 184, 73, 102, 126, 64, 94, 118, \
154, 173, 205, 184, 200, 235, 149, 176, 209, 61, \
99, 123, 21, 66, 75, 21, 67, 77, 16, 61, \
75, 21, 61, 76, 24, 59, 73, 20, 61, 73, \
18, 65, 77, 18, 65, 79, 19, 65, 82, 19, \
65, 84, 20, 64, 83, 13, 44, 55, 16, 47, \
58, 18, 49, 60, 16, 47, 57, 13, 44, 56, \
13, 43, 54, 16, 43, 51, 17, 43, 51, 15, \
48, 60, 22, 60, 79, 89, 125, 155, 128, 161, \
194, 109, 141, 172, 73, 102, 132, 43, 72, 100, \
21, 55, 74, 52, 85, 102, 161, 181, 210, 201, \
217, 248, 187, 212, 238, 96, 134, 154, 19, 67, \
80, 21, 69, 81, 20, 66, 78, 17, 59, 72, \
20, 61, 75, 18, 63, 77, 15, 62, 77, 18, \
65, 81, 23, 70, 88, 20, 67, 88, 19, 64, \
84, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '13334';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a161a471151eb73fa8f601e71a5861a77';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_deer5';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{147, 133, 91, 146, 134, 94, 127, 122, 82, 129, 123, \
76, 146, 141, 84, 151, 149, 84, 136, 135, 72, \
128, 127, 73, 144, 144, 99, 111, 125, 81, 82, \
115, 73, 91, 117, 80, 139, 145, 101, 165, 153, \
107, 164, 155, 101, 180, 177, 115, 180, 174, 118, \
192, 185, 131, 179, 175, 117, 145, 149, 90, 117, \
123, 69, 114, 117, 72, 108, 110, 73, 141, 132, \
101, 141, 135, 101, 110, 111, 76, 98, 110, 76, \
96, 116, 77, 74, 90, 60, 79, 95, 62, 74, \
90, 51, 74, 83, 54, 136, 114, 72, 128, 107, \
67, 129, 114, 75, 130, 116, 68, 134, 123, 66, \
131, 125, 60, 120, 119, 52, 141, 139, 76, 130, \
130, 73, 86, 112, 53, 66, 116, 54, 70, 110, \
53, 118, 129, 81, 156, 142, 97, 140, 126, 73, \
151, 150, 86, 147, 150, 82, 151, 153, 84, 155, \
160, 86, 159, 172, 98, 132, 146, 73, 102, 111, \
40, 97, 98, 38, 140, 127, 77, 143, 135, 82, \
110, 110, 55, 85, 96, 47, 74, 95, 46, 57, \
76, 38, 67, 82, 51, 52, 68, 32, 45, 62, \
29, 140, 113, 67, 123, 96, 53, 131, 109, 67, \
146, 126, 77, 139, 126, 71, 126, 120, 61, 128, \
129, 68, 141, 145, 86, 115, 119, 68, 107, 125, \
78, 84, 121, 71, 82, 114, 63, 115, 124, 81, \
125, 118, 76, 120, 121, 66, 109, 121, 54, 138, \
151, 74, 155, 169, 83, 153, 169, 80, 168, 192, \
103, 170, 195, 108, 130, 150, 68, 112, 118, 49, \
148, 138, 79, 150, 146, 83, 121, 127, 60, 91, \
107, 51, 76, 99, 48, 57, 78, 37, 64, 82, \
47, 58, 81, 35, 80, 109, 51, 132, 105, 56, \
120, 91, 45, 135, 111, 66, 163, 137, 82, 149, \
125, 67, 128, 113, 56, 130, 123, 66, 122, 127, \
70, 109, 121, 73, 125, 126, 93, 99, 108, 74, \
95, 104, 63, 138, 132, 91, 122, 118, 69, 135, \
148, 82, 140, 156, 80, 154, 163, 81, 175, 185, \
96, 157, 169, 77, 156, 175, 82, 181, 208, 117, \
170, 202, 114, 145, 162, 85, 146, 144, 74, 150, \
156, 79, 120, 136, 56, 87, 111, 44, 94, 123, \
61, 72, 96, 42, 62, 87, 34, 99, 132, 66, \
137, 175, 100, 119, 94, 56, 111, 82, 47, 129, \
107, 69, 153, 131, 78, 157, 135, 80, 130, 112, \
63, 127, 109, 64, 127, 117, 75, 123, 121, 85, \
126, 105, 71, 132, 111, 77, 125, 113, 78, 129, \
116, 84, 134, 124, 88, 150, 153, 93, 171, 180, \
101, 171, 180, 99, 181, 192, 110, 175, 187, 105, \
152, 167, 87, 164, 185, 105, 187, 217, 131, 176, \
204, 118, 156, 172, 87, 159, 172, 84, 121, 145, \
56, 123, 157, 70, 158, 198, 114, 121, 155, 81, \
125, 163, 96, 169, 209, 142, 116, 152, 93, 115, \
94, 61, 110, 85, 56, 106, 89, 55, 121, 107, \
55, 145, 131, 71, 132, 120, 61, 126, 109, 60, \
119, 97, 66, 114, 84, 66, 138, 94, 61, 152, \
110, 70, 128, 102, 62, 116, 98, 69, 126, 109, \
78, 154, 146, 86, 189, 194, 107, 191, 206, 119, \
182, 201, 116, 177, 198, 110, 172, 195, 105, 167, \
189, 98, 173, 196, 104, 179, 210, 119, 179, 206, \
120, 153, 172, 91, 132, 162, 65, 168, 211, 103, \
177, 225, 120, 170, 210, 120, 179, 214, 142, 143, \
165, 114, 72, 84, 50, 118, 102, 67, 126, 107, \
77, 92, 82, 49, 120, 111, 61, 154, 144, 77, \
139, 132, 59, 123, 109, 55, 87, 60, 31, 113, \
67, 46, 144, 89, 57, 140, 91, 51, 108, 75, \
36, 115, 83, 59, 115, 88, 59, 139, 126, 64, \
172, 173, 84, 195, 204, 114, 199, 211, 122, 178, \
191, 103, 180, 196, 108, 195, 213, 123, 176, 196, \
104, 162, 189, 101, 182, 210, 128, 159, 185, 108, \
144, 179, 89, 181, 225, 126, 181, 226, 132, 162, \
195, 119, 122, 140, 80, 83, 80, 43, 65, 52, \
35, 127, 115, 71, 140, 126, 85, 117, 113, 67, \
167, 167, 107, 189, 187, 116, 148, 144, 70, 104, \
88, 36, 111, 80, 46, 135, 90, 47, 143, 92, \
49, 126, 80, 43, 107, 72, 42, 126, 90, 67, \
129, 98, 65, 137, 121, 55, 151, 145, 59, 176, \
172, 82, 202, 197, 110, 197, 194, 120, 166, 165, \
103, 153, 155, 97, 139, 151, 87, 143, 163, 90, \
155, 181, 98, 168, 195, 107, 161, 192, 100, 173, \
212, 116, 166, 205, 116, 117, 146, 75, 83, 96, \
38, 86, 80, 36, 74, 63, 30, 133, 117, 79, \
148, 134, 93, 167, 164, 114, 212, 221, 152, 211, \
220, 147, 165, 163, 99, 114, 93, 50, 136, 99, \
65, 140, 93, 47, 144, 91, 46, 137, 87, 47, \
133, 92, 56, 134, 97, 66, 137, 109, 69, 146, \
130, 60, 148, 136, 53, 156, 143, 69, 168, 157, \
91, 161, 153, 97, 121, 116, 70, 90, 90, 48, \
83, 89, 43, 93, 103, 46, 114, 129, 57, 146, \
166, 81, 179, 201, 105, 173, 203, 102, 133, 167, \
72, 101, 126, 51, 103, 113, 60, 115, 109, 63, \
101, 99, 47, 129, 112, 78, 146, 134, 87, 195, \
196, 138, 221, 236, 160, 217, 230, 158, 159, 154, \
105, 113, 88, 55, 115, 76, 46, 137, 90, 53, \
148, 94, 52, 157, 105, 57, 141, 98, 49, 130, \
95, 60, 150, 126, 80, 165, 150, 82, 155, 144, \
74, 131, 119, 69, 117, 112, 67, 111, 116, 64, \
116, 127, 70, 117, 128, 72, 110, 123, 68, 113, \
131, 66, 130, 150, 75, 145, 163, 84, 150, 163, \
84, 141, 162, 83, 97, 132, 62, 77, 104, 51, \
73, 75, 38, 96, 84, 46, 81, 75, 27, 119, \
106, 64, 139, 134, 69, 186, 196, 123, 201, 220, \
142, 194, 205, 142, 134, 126, 92, 89, 63, 44, \
99, 66, 43, 128, 90, 60, 146, 99, 62, 153, \
106, 60, 134, 94, 47, 114, 82, 49, 122, 101, \
57, 149, 138, 80, 146, 144, 86, 129, 130, 78, \
127, 141, 82, 137, 167, 95, 148, 182, 101, 156, \
186, 107, 161, 191, 116, 158, 196, 109, 159, 196, \
102, 165, 191, 103, 139, 149, 78, 110, 124, 61, \
74, 115, 59, 69, 105, 59, 69, 69, 36, 87, \
74, 42, 99, 87, 49, 124, 117, 67, 145, 144, \
76, 158, 167, 96, 154, 171, 103, 161, 172, 121, \
102, 95, 70, 79, 55, 42, 84, 55, 38, 92, \
60, 39, 132, 89, 60, 133, 88, 51, 131, 93, \
53, 114, 87, 53, 96, 78, 45, 126, 122, 79, \
165, 173, 115, 171, 192, 116, 170, 205, 117, 160, \
206, 113, 148, 195, 100, 153, 196, 104, 165, 207, \
118, 157, 202, 105, 153, 192, 95, 156, 179, 96, \
117, 119, 67, 110, 116, 67, 84, 119, 60, 75, \
110, 56, 71, 72, 39, 90, 78, 49, 102, 91, \
56, 118, 116, 63, 130, 133, 65, 140, 149, 82, \
181, 196, 130, 177, 185, 133, 94, 87, 58, 83, \
62, 40, 94, 67, 42, 111, 82, 54, 132, 92, \
59, 129, 87, 47, 128, 93, 50, 111, 88, 53, \
94, 79, 56, 119, 114, 88, 137, 146, 96, 152, \
171, 98, 164, 189, 110, 164, 195, 116, 146, 177, \
100, 151, 182, 104, 162, 202, 113, 153, 194, 99, \
146, 176, 87, 128, 141, 72, 92, 88, 50, 102, \
98, 60, 97, 122, 58, 82, 107, 49, 70, 66, \
37, 79, 66, 38, 91, 76, 43, 107, 109, 59, \
142, 149, 83, 195, 205, 139, 218, 228, 166, 169, \
172, 121, 92, 81, 51, 94, 72, 46, 112, 83, \
52, 121, 86, 52, 128, 85, 49, 126, 84, 46, \
117, 85, 47, 101, 80, 47, 86, 69, 48, 85, \
75, 56, 87, 84, 53, 95, 95, 50, 112, 111, \
63, 125, 123, 79, 118, 116, 74, 137, 140, 93, \
139, 157, 92, 131, 153, 76, 119, 131, 62, 105, \
102, 51, 99, 88, 53, 107, 93, 57, 123, 133, \
66, 101, 107, 54, 69, 54, 31, 74, 56, 27, \
95, 73, 40, 92, 99, 54, 119, 133, 72, 163, \
177, 118, 183, 189, 138, 132, 127, 89, 93, 75, \
51, 102, 74, 51, 111, 78, 48, 120, 81, 46, \
120, 74, 41, 116, 71, 42, 112, 76, 50, 101, \
76, 52, 92, 71, 53, 86, 69, 54, 84, 69, \
53, 89, 75, 52, 104, 88, 61, 109, 91, 64, \
109, 92, 63, 109, 96, 62, 107, 103, 57, 116, \
116, 61, 119, 112, 65, 115, 101, 67, 114, 104, \
68, 121, 108, 67, 130, 134, 61, 110, 107, 52, \
74, 58, 35, 75, 60, 28, 97, 76, 39, 95, \
108, 61, 86, 108, 55, 93, 113, 65, 108, 114, \
78, 97, 87, 63, 105, 78, 57, 116, 82, 57, \
127, 93, 60, 127, 88, 46, 118, 73, 34, 120, \
74, 42, 121, 80, 55, 120, 87, 72, 116, 89, \
77, 102, 80, 67, 93, 71, 59, 102, 81, 67, \
113, 90, 74, 108, 85, 62, 118, 101, 69, 125, \
113, 71, 121, 106, 61, 124, 103, 66, 111, 87, \
62, 93, 72, 51, 80, 73, 41, 87, 88, 39, \
133, 151, 63, 126, 135, 61, 77, 78, 41, 70, \
72, 35, 97, 93, 47, 123, 133, 82, 95, 117, \
65, 77, 99, 52, 80, 86, 56, 86, 76, 58, \
117, 92, 69, 133, 101, 72, 136, 104, 69, 122, \
84, 44, 117, 76, 34, 123, 82, 42, 127, 88, \
55, 125, 87, 67, 122, 89, 71, 114, 87, 66, \
110, 82, 62, 115, 88, 71, 116, 89, 73, 112, \
87, 64, 124, 107, 75, 118, 104, 69, 104, 84, \
52, 110, 83, 58, 107, 79, 59, 92, 68, 48, \
75, 64, 32, 83, 95, 36, 140, 177, 76, 140, \
162, 71, 82, 92, 38, 77, 89, 40, 87, 92, \
40, 105, 121, 77, 88, 120, 76, 57, 89, 49, \
59, 70, 43, 81, 74, 54, 124, 104, 75, 129, \
105, 68, 108, 86, 49, 109, 88, 54, 111, 84, \
43, 116, 79, 41, 130, 85, 57, 130, 88, 64, \
122, 86, 60, 117, 85, 56, 126, 91, 61, 122, \
89, 66, 122, 90, 71, 117, 87, 66, 103, 81, \
55, 90, 73, 49, 94, 73, 55, 98, 72, 55, \
98, 71, 52, 94, 70, 49, 77, 62, 30, 96, \
115, 45, 148, 199, 87, 155, 189, 85, 99, 114, \
44, 110, 128, 65, 99, 114, 53, 64, 91, 53, \
78, 119, 81, 68, 104, 68, 57, 73, 43, 87, \
89, 58, 128, 119, 78, 117, 104, 59, 94, 84, \
43, 116, 108, 72, 106, 94, 48, 112, 88, 46, \
115, 77, 50, 123, 82, 60, 123, 86, 60, 123, \
89, 59, 131, 93, 61, 121, 83, 56, 124, 87, \
65, 114, 79, 60, 98, 72, 51, 86, 68, 49, \
82, 64, 50, 81, 59, 43, 77, 55, 35, 80, \
61, 38, 77, 67, 31, 124, 141, 64, 165, 213, \
101, 162, 201, 93, 110, 127, 50, 125, 146, 74, \
128, 154, 78, 53, 80, 41, 61, 98, 59, 83, \
109, 70, 87, 101, 62, 91, 102, 59, 102, 103, \
51, 108, 106, 53, 117, 109, 63, 129, 114, 68, \
109, 104, 43, 106, 105, 46, 87, 77, 36, 109, \
76, 52, 120, 85, 61, 120, 86, 58, 120, 83, \
54, 125, 84, 57, 126, 85, 62, 109, 73, 53, \
89, 62, 45, 73, 56, 40, 62, 50, 33, 61, \
45, 27, 60, 43, 21, 63, 50, 24, 80, 78, \
37, 149, 164, 84, 182, 219, 114, 171, 210, 107, \
133, 149, 73, 100, 118, 46, 134, 165, 79, 57, \
87, 46, 64, 99, 61, 77, 93, 56, 94, 100, \
57, 95, 105, 53, 91, 100, 40, 114, 115, 55, \
129, 116, 66, 124, 106, 58, 117, 115, 53, 93, \
101, 40, 66, 67, 21, 89, 66, 35, 97, 76, \
44, 101, 76, 45, 106, 72, 45, 120, 79, 53, \
126, 82, 55, 103, 67, 41, 79, 53, 34, 62, \
43, 29, 50, 38, 21, 46, 38, 19, 52, 37, \
16, 62, 50, 24, 87, 87, 45, 130, 145, 70, \
181, 212, 116, 163, 201, 108, 110, 127, 59, 77, \
91, 30, 128, 154, 75, 78, 112, 77, 75, 111, \
78, 71, 91, 57, 97, 107, 50, 117, 123, 54, \
118, 118, 53, 108, 104, 47, 93, 82, 34, 113, \
97, 54, 96, 95, 42, 68, 72, 21, 73, 72, \
31, 69, 66, 32, 86, 88, 53, 91, 77, 48, \
91, 57, 34, 108, 71, 44, 125, 84, 54, 120, \
78, 50, 106, 73, 49, 84, 60, 40, 54, 38, \
20, 42, 35, 16, 53, 39, 20, 72, 62, 36, \
85, 84, 47, 92, 107, 45, 136, 167, 86, 125, \
159, 84, 77, 99, 43, 81, 104, 47, 119, 154, \
72, 98, 121, 83, 82, 107, 68, 71, 88, 41, \
123, 138, 61, 144, 150, 66, 151, 142, 76, 112, \
101, 50, 81, 71, 30, 104, 91, 55, 85, 86, \
44, 77, 78, 37, 95, 90, 54, 69, 84, 50, \
71, 93, 59, 80, 72, 47, 89, 52, 31, 89, \
55, 25, 105, 71, 40, 116, 76, 50, 113, 79, \
50, 109, 83, 53, 78, 61, 38, 55, 44, 27, \
59, 44, 29, 65, 59, 34, 79, 80, 45, 79, \
97, 46, 85, 115, 54, 77, 103, 50, 54, 71, \
32, 85, 108, 56, 132, 167, 83, 154, 161, 111, \
112, 119, 68, 95, 100, 39, 138, 151, 68, 122, \
131, 52, 130, 122, 64, 123, 107, 64, 98, 84, \
47, 98, 92, 58, 80, 88, 53, 88, 91, 56, \
99, 90, 55, 70, 82, 48, 68, 86, 56, 79, \
66, 42, 108, 66, 41, 96, 58, 26, 80, 52, \
25, 76, 53, 31, 77, 55, 27, 115, 93, 60, \
103, 89, 61, 59, 46, 32, 58, 41, 30, 59, \
54, 30, 78, 86, 46, 79, 103, 55, 69, 99, \
52, 62, 75, 40, 57, 58, 33, 70, 82, 41, \
129, 154, 78, 127, 129, 74, 102, 102, 48, 98, \
101, 36, 96, 108, 36, 83, 96, 35, 85, 86, \
39, 105, 88, 52, 96, 75, 41, 70, 73, 36, \
64, 80, 46, 76, 84, 49, 91, 81, 42, 117, \
111, 77, 104, 102, 73, 94, 70, 44, 132, 85, \
51, 123, 76, 44, 83, 60, 38, 61, 63, 45, \
67, 65, 43, 120, 107, 76, 94, 86, 53, 54, \
41, 26, 58, 37, 29, 68, 60, 37, 97, 112, \
64, 90, 123, 70, 67, 96, 54, 73, 74, 46, \
69, 60, 39, 63, 70, 36, 103, 128, 59, 81, \
94, 39, 125, 129, 56, 118, 116, 48, 94, 98, \
36, 122, 131, 68, 115, 114, 66, 88, 72, 41, \
69, 60, 27, 50, 67, 29, 59, 83, 49, 84, \
90, 55, 132, 124, 78, 160, 156, 115, 109, 99, \
75, 108, 77, 49, 136, 88, 48, 136, 87, 55, \
94, 72, 52, 64, 72, 53, 64, 69, 48, 65, \
60, 38, 56, 54, 25, 57, 44, 25, 57, 37, \
29, 71, 64, 41, 116, 138, 85, 93, 131, 75, \
68, 97, 51, 78, 74, 43, 86, 66, 46, 70, \
70, 42, 90, 117, 49, 90, 98, 52, 134, 137, \
71, 109, 107, 48, 103, 104, 51, 136, 143, 83, \
106, 101, 56, 82, 66, 39, 71, 71, 37, 57, \
77, 39, 59, 81, 49, 74, 76, 42, 112, 98, \
54, 110, 102, 62, 88, 72, 52, 110, 79, 51, \
125, 83, 40, 176, 134, 91, 131, 106, 74, 94, \
82, 55, 103, 96, 66, 65, 63, 34, 60, 58, \
28, 60, 48, 28, 55, 41, 28, 83, 84, 46, \
140, 167, 101, 99, 133, 72, 79, 95, 52, 91, \
75, 48, 112, 88, 74, 133, 131, 110, 102, 128, \
64, 82, 75, 34, 74, 75, 30, 68, 73, 27, \
81, 85, 42, 69, 76, 33, 62, 57, 24, 88, \
72, 48, 81, 79, 44, 56, 72, 35, 46, 57, \
30, 80, 77, 47, 152, 126, 89, 117, 90, 60, \
100, 72, 52, 117, 85, 58, 155, 122, 79, 175, \
137, 89, 117, 98, 58, 103, 96, 60, 119, 104, \
69, 93, 82, 47, 86, 77, 43, 59, 46, 28, \
55, 47, 27, 104, 114, 55, 155, 186, 104, 110, \
137, 73, 91, 95, 58, 121, 98, 79, 153, 126, \
116, 134, 128, 109, 103, 125, 61, 135, 125, 74, \
78, 81, 38, 56, 66, 25, 59, 58, 22, 49, \
48, 18, 59, 47, 26, 77, 58, 39, 81, 79, \
43, 65, 74, 38, 56, 59, 35, 72, 70, 42, \
159, 129, 97, 146, 108, 80, 104, 69, 43, 104, \
70, 44, 130, 98, 61, 143, 108, 66, 98, 104, \
66, 94, 116, 79, 108, 94, 65, 108, 81, 57, \
84, 64, 37, 61, 43, 25, 63, 55, 28, 134, \
143, 77, 168, 196, 113, 129, 146, 88, 115, 112, \
82, 165, 148, 129, 149, 121, 104, 104, 84, 63, \
120, 129, 68, 116, 109, 57, 80, 88, 45, 46, \
56, 27, 59, 47, 22, 62, 50, 27, 61, 43, \
29, 72, 50, 34, 79, 77, 41, 74, 77, 43, \
79, 75, 55, 72, 77, 48, 115, 90, 59, 129, \
90, 61, 104, 68, 33, 98, 60, 37, 98, 58, \
32, 113, 91, 50, 96, 119, 81, 101, 112, 83, \
108, 80, 58, 92, 64, 47, 83, 55, 39, 81, \
59, 36, 112, 99, 65, 179, 177, 116, 195, 202, \
135, 172, 164, 123, 160, 141, 121, 129, 114, 93, \
103, 88, 62, 146, 128, 108, 157, 147, 106, 67, \
59, 23, 68, 68, 37, 49, 44, 26, 68, 41, \
21, 89, 61, 39, 91, 65, 47, 81, 58, 40, \
79, 67, 39, 87, 75, 47, 89, 81, 57, 80, \
81, 53, 125, 101, 70, 131, 93, 62, 107, 71, \
39, 103, 64, 40, 102, 71, 41, 91, 94, 46, \
95, 114, 74, 105, 92, 72, 113, 78, 62, 89, \
60, 45, 86, 56, 47, 77, 55, 35, 113, 94, \
66, 147, 135, 94, 161, 146, 105, 148, 122, 96, \
113, 84, 68, 98, 78, 58, 136, 124, 101, 176, \
158, 141, 130, 107, 81, 73, 59, 36, 74, 61, \
39, 73, 51, 34, 103, 66, 44, 111, 73, 48, \
107, 75, 52, 97, 71, 50, 89, 63, 43, 101, \
70, 46, 84, 69, 39, 85, 76, 51, 128, 100, \
73, 116, 82, 52, 103, 71, 46, 111, 76, 53, \
101, 82, 43, 81, 94, 43, 88, 96, 58, 90, \
71, 53, 100, 69, 56, 100, 66, 52, 94, 63, \
51, 77, 59, 39, 77, 56, 34, 83, 67, 42, \
106, 85, 60, 112, 84, 64, 112, 84, 66, 149, \
127, 110, 182, 158, 139, 136, 107, 87, 101, 73, \
49, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '13644';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a4ecd8989c83bc1f9723fc04b19e261f1';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_cat4';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{161, 170, 155, 159, 169, 159, 163, 176, 155, 165, 182, \
147, 154, 173, 134, 148, 167, 130, 171, 189, 160, \
187, 202, 178, 187, 200, 175, 184, 202, 179, 196, \
215, 191, 188, 205, 178, 191, 206, 173, 190, 208, \
167, 180, 202, 154, 190, 216, 166, 179, 210, 156, \
178, 209, 162, 175, 201, 166, 176, 198, 164, 176, \
201, 157, 159, 192, 139, 159, 192, 139, 162, 195, \
144, 163, 195, 147, 179, 209, 168, 183, 213, 171, \
161, 194, 138, 139, 171, 116, 141, 169, 135, 146, \
157, 165, 115, 110, 141, 159, 163, 153, 114, 118, \
112, 117, 125, 109, 115, 125, 102, 120, 132, 108, \
115, 128, 105, 119, 129, 110, 125, 132, 114, 126, \
134, 113, 122, 134, 118, 134, 146, 132, 134, 145, \
129, 131, 139, 119, 124, 131, 103, 123, 131, 95, \
139, 148, 109, 134, 150, 119, 130, 149, 122, 128, \
146, 116, 132, 147, 119, 119, 135, 108, 113, 135, \
102, 119, 141, 107, 116, 137, 102, 111, 134, 97, \
122, 143, 109, 122, 142, 116, 109, 130, 95, 104, \
127, 84, 104, 120, 100, 102, 103, 121, 65, 58, \
85, 155, 159, 138, 108, 112, 96, 113, 120, 99, \
105, 113, 91, 112, 122, 102, 114, 126, 109, 117, \
123, 110, 124, 125, 111, 129, 133, 118, 117, 126, \
115, 114, 124, 115, 113, 121, 110, 115, 125, 109, \
121, 133, 109, 119, 130, 99, 127, 137, 105, 124, \
133, 115, 125, 137, 120, 124, 136, 110, 123, 134, \
109, 125, 134, 115, 126, 132, 118, 127, 134, 119, \
129, 135, 120, 119, 126, 108, 115, 128, 104, 111, \
125, 108, 110, 124, 100, 105, 121, 89, 104, 112, \
105, 92, 90, 112, 55, 50, 69, 152, 159, 128, \
106, 113, 92, 109, 118, 98, 102, 111, 86, 113, \
126, 100, 118, 132, 114, 115, 121, 108, 134, 132, \
121, 138, 141, 130, 127, 136, 127, 123, 133, 123, \
119, 127, 114, 123, 134, 115, 126, 139, 115, 131, \
144, 117, 136, 149, 124, 128, 138, 119, 133, 141, \
125, 129, 138, 118, 124, 134, 109, 132, 141, 115, \
133, 141, 119, 130, 138, 116, 127, 134, 115, 129, \
137, 119, 119, 129, 112, 110, 121, 105, 113, 126, \
100, 105, 118, 95, 103, 109, 113, 88, 89, 110, \
53, 52, 65, 151, 161, 129, 102, 112, 92, 106, \
116, 103, 108, 119, 92, 115, 131, 97, 127, 142, \
120, 123, 130, 117, 134, 136, 123, 126, 133, 118, \
128, 139, 128, 124, 137, 123, 127, 137, 118, 132, \
139, 119, 125, 133, 111, 126, 136, 111, 134, 145, \
123, 130, 139, 117, 133, 141, 121, 143, 152, 135, \
141, 153, 128, 126, 141, 110, 125, 142, 119, 128, \
144, 126, 113, 129, 115, 109, 124, 111, 111, 124, \
110, 111, 124, 105, 105, 119, 91, 114, 126, 109, \
107, 115, 124, 80, 86, 104, 48, 51, 60, 163, \
172, 138, 109, 122, 96, 119, 130, 113, 122, 137, \
103, 120, 132, 95, 135, 140, 124, 126, 134, 124, \
122, 136, 116, 121, 135, 102, 122, 134, 114, 129, \
139, 125, 134, 143, 125, 133, 137, 118, 131, 138, \
123, 123, 135, 107, 125, 134, 107, 135, 141, 123, \
132, 141, 126, 133, 143, 131, 127, 141, 118, 125, \
142, 110, 119, 137, 112, 121, 136, 124, 117, 132, \
123, 110, 126, 110, 110, 125, 105, 118, 131, 116, \
117, 128, 112, 119, 128, 120, 101, 108, 121, 79, \
86, 100, 48, 51, 58, 168, 174, 138, 110, 122, \
96, 121, 132, 116, 126, 139, 109, 120, 129, 96, \
135, 136, 121, 133, 140, 130, 130, 142, 122, 133, \
140, 110, 127, 129, 113, 132, 132, 122, 131, 131, \
117, 134, 139, 121, 129, 138, 124, 118, 130, 106, \
122, 130, 107, 132, 139, 126, 134, 143, 134, 138, \
146, 137, 130, 140, 121, 128, 141, 112, 122, 137, \
111, 127, 140, 125, 126, 138, 126, 114, 128, 109, \
106, 120, 99, 107, 120, 102, 109, 121, 103, 109, \
115, 116, 94, 98, 116, 78, 83, 96, 48, 49, \
56, 149, 152, 118, 105, 116, 91, 121, 132, 118, \
129, 139, 117, 129, 135, 109, 135, 137, 122, 136, \
142, 128, 132, 142, 123, 137, 140, 120, 144, 144, \
134, 145, 143, 138, 139, 137, 130, 126, 134, 120, \
134, 142, 131, 146, 152, 141, 136, 142, 128, 129, \
138, 129, 133, 143, 138, 138, 144, 138, 138, 143, \
128, 126, 134, 110, 129, 142, 117, 131, 142, 125, \
126, 137, 121, 115, 127, 109, 111, 125, 107, 108, \
122, 101, 105, 117, 95, 105, 111, 118, 92, 93, \
116, 76, 78, 91, 46, 47, 53, 147, 153, 121, \
108, 120, 96, 118, 129, 115, 121, 130, 113, 115, \
123, 103, 110, 117, 100, 121, 130, 111, 123, 136, \
113, 126, 137, 119, 139, 146, 138, 138, 142, 141, \
143, 146, 149, 148, 154, 153, 177, 176, 178, 182, \
178, 184, 150, 155, 151, 132, 143, 134, 131, 142, \
136, 130, 139, 130, 126, 133, 119, 125, 134, 114, \
122, 134, 114, 124, 136, 118, 123, 134, 118, 111, \
124, 106, 103, 116, 102, 102, 114, 99, 102, 113, \
99, 104, 108, 121, 89, 88, 112, 74, 73, 85, \
44, 44, 49, 137, 150, 120, 106, 121, 96, 115, \
126, 108, 119, 128, 115, 116, 127, 113, 112, 125, \
106, 117, 132, 107, 121, 136, 110, 128, 139, 122, \
132, 140, 133, 145, 149, 155, 170, 171, 187, 180, \
176, 195, 188, 175, 193, 166, 152, 176, 149, 153, \
158, 126, 140, 126, 125, 137, 125, 123, 137, 123, \
120, 135, 119, 127, 141, 126, 115, 129, 115, 118, \
132, 117, 117, 131, 115, 103, 117, 102, 97, 109, \
102, 90, 100, 100, 92, 101, 101, 104, 108, 122, \
87, 84, 106, 72, 70, 82, 44, 44, 48, 138, \
158, 130, 103, 121, 98, 113, 127, 109, 119, 132, \
117, 118, 134, 116, 115, 133, 110, 118, 136, 109, \
120, 136, 109, 129, 138, 123, 151, 153, 152, 196, \
194, 205, 191, 188, 209, 187, 178, 203, 185, 168, \
193, 163, 146, 177, 153, 154, 165, 126, 141, 126, \
121, 139, 117, 115, 135, 116, 117, 136, 121, 122, \
138, 125, 121, 134, 122, 115, 128, 115, 118, 129, \
118, 115, 127, 116, 119, 130, 122, 114, 123, 124, \
107, 114, 121, 99, 104, 119, 81, 80, 97, 71, \
69, 79, 44, 42, 47, 145, 170, 143, 104, 122, \
105, 111, 131, 116, 90, 110, 89, 84, 105, 77, \
98, 121, 92, 116, 138, 107, 122, 140, 110, 132, \
144, 127, 166, 164, 166, 217, 212, 218, 210, 209, \
221, 206, 199, 214, 203, 191, 213, 180, 170, 195, \
148, 146, 160, 128, 142, 132, 106, 130, 102, 110, \
133, 113, 118, 135, 128, 109, 120, 113, 104, 109, \
102, 102, 105, 102, 121, 121, 122, 129, 130, 130, \
121, 128, 118, 124, 130, 124, 120, 124, 131, 95, \
100, 116, 77, 78, 91, 70, 68, 75, 45, 41, \
47, 147, 171, 141, 97, 115, 96, 112, 132, 116, \
94, 113, 91, 86, 108, 79, 97, 123, 90, 111, \
136, 100, 119, 140, 105, 119, 131, 112, 169, 168, \
168, 226, 222, 223, 217, 216, 222, 213, 206, 220, \
211, 199, 221, 181, 172, 195, 143, 141, 156, 126, \
137, 132, 108, 128, 104, 106, 124, 108, 130, 139, \
142, 114, 115, 125, 82, 79, 94, 94, 88, 102, \
117, 107, 122, 124, 111, 126, 116, 110, 113, 111, \
110, 114, 107, 109, 120, 90, 94, 109, 74, 76, \
86, 67, 66, 72, 47, 41, 49, 142, 164, 129, \
93, 112, 88, 101, 120, 100, 113, 132, 108, 104, \
126, 97, 99, 124, 93, 102, 125, 94, 107, 125, \
99, 123, 130, 124, 187, 184, 194, 219, 214, 222, \
216, 212, 225, 211, 203, 220, 210, 198, 219, 196, \
187, 209, 171, 169, 184, 141, 149, 150, 116, 130, \
111, 120, 131, 119, 141, 141, 153, 104, 96, 120, \
88, 78, 103, 103, 93, 110, 108, 93, 109, 126, \
105, 123, 111, 95, 109, 101, 93, 108, 105, 104, \
120, 86, 87, 102, 71, 73, 80, 65, 63, 69, \
51, 44, 53, 142, 162, 121, 89, 110, 81, 103, \
122, 98, 120, 139, 111, 122, 145, 114, 111, 132, \
111, 110, 123, 112, 126, 131, 130, 137, 138, 153, \
154, 149, 175, 162, 154, 176, 187, 178, 202, 202, \
193, 214, 206, 195, 214, 207, 198, 218, 202, 200, \
216, 158, 164, 171, 118, 130, 115, 122, 132, 119, \
123, 120, 135, 79, 65, 94, 83, 70, 92, 108, \
101, 110, 97, 88, 94, 109, 90, 103, 104, 87, \
103, 99, 91, 110, 102, 101, 120, 84, 82, 96, \
68, 70, 76, 60, 58, 64, 58, 48, 59, 139, \
157, 112, 86, 106, 75, 110, 128, 102, 111, 131, \
98, 109, 132, 100, 123, 137, 128, 140, 139, 154, \
144, 137, 161, 124, 122, 145, 114, 109, 141, 112, \
105, 130, 127, 115, 142, 161, 151, 172, 196, 185, \
204, 206, 197, 215, 213, 210, 227, 174, 180, 192, \
113, 127, 114, 107, 118, 101, 132, 129, 140, 128, \
113, 141, 115, 103, 123, 133, 133, 138, 117, 117, \
121, 100, 90, 102, 78, 67, 78, 96, 92, 108, \
97, 97, 116, 81, 76, 91, 65, 67, 72, 59, \
57, 63, 72, 60, 74, 144, 160, 121, 103, 120, \
92, 105, 121, 96, 94, 107, 83, 111, 122, 108, \
137, 141, 150, 139, 134, 162, 132, 122, 154, 115, \
107, 136, 110, 101, 132, 110, 100, 125, 110, 98, \
123, 118, 107, 131, 166, 155, 177, 193, 186, 204, \
203, 202, 217, 192, 201, 212, 116, 130, 120, 118, \
129, 112, 171, 168, 180, 141, 128, 161, 107, 98, \
117, 140, 144, 143, 119, 127, 123, 103, 104, 112, \
65, 60, 70, 99, 97, 113, 92, 92, 111, 75, \
74, 85, 60, 63, 64, 61, 62, 66, 78, 71, \
84, 160, 174, 143, 111, 125, 103, 100, 114, 93, \
111, 116, 109, 138, 135, 145, 133, 128, 154, 121, \
117, 147, 112, 105, 135, 113, 100, 133, 117, 103, \
134, 119, 106, 133, 120, 108, 132, 111, 98, 126, \
132, 122, 147, 177, 172, 192, 186, 185, 201, 198, \
205, 216, 139, 149, 147, 167, 173, 167, 190, 187, \
205, 101, 91, 127, 61, 54, 72, 102, 108, 99, \
88, 100, 86, 88, 96, 96, 72, 71, 82, 102, \
100, 118, 87, 87, 105, 70, 73, 80, 55, 57, \
55, 68, 69, 72, 70, 68, 81, 141, 159, 128, \
97, 112, 91, 110, 124, 109, 141, 145, 149, 139, \
136, 156, 119, 115, 144, 102, 98, 128, 97, 91, \
120, 106, 95, 128, 110, 100, 130, 114, 104, 130, \
119, 109, 134, 126, 114, 142, 122, 113, 139, 163, \
157, 179, 180, 176, 196, 195, 194, 208, 203, 202, \
214, 202, 198, 212, 164, 159, 180, 101, 92, 118, \
73, 64, 78, 73, 78, 67, 66, 79, 60, 78, \
90, 82, 93, 97, 104, 102, 103, 118, 81, 84, \
99, 66, 71, 78, 58, 56, 57, 75, 72, 76, \
63, 62, 72, 133, 154, 123, 94, 111, 91, 121, \
135, 129, 167, 172, 188, 136, 134, 163, 115, 111, \
143, 104, 99, 130, 96, 90, 119, 98, 90, 122, \
103, 96, 125, 114, 107, 132, 125, 119, 142, 144, \
137, 161, 128, 123, 145, 149, 145, 163, 156, 154, \
168, 161, 157, 168, 159, 152, 169, 130, 123, 145, \
119, 116, 132, 89, 84, 95, 92, 87, 91, 82, \
90, 73, 76, 92, 68, 85, 100, 86, 99, 107, \
113, 96, 100, 112, 74, 78, 89, 63, 68, 74, \
58, 55, 57, 86, 81, 82, 72, 74, 76, 127, \
151, 120, 88, 107, 88, 133, 146, 149, 182, 187, \
212, 126, 128, 157, 113, 112, 142, 118, 113, 143, \
122, 117, 147, 114, 108, 139, 100, 95, 124, 113, \
109, 133, 126, 123, 144, 144, 144, 163, 135, 137, \
151, 117, 121, 126, 110, 115, 112, 114, 116, 113, \
103, 104, 107, 84, 85, 92, 92, 95, 97, 87, \
91, 86, 101, 108, 95, 94, 111, 85, 84, 104, \
76, 93, 110, 94, 103, 111, 115, 92, 96, 106, \
67, 70, 78, 56, 59, 64, 61, 61, 59, 104, \
108, 99, 85, 93, 83, 128, 155, 124, 85, 105, \
87, 140, 152, 162, 182, 188, 216, 125, 130, 155, \
121, 121, 147, 122, 117, 146, 132, 126, 157, 142, \
138, 169, 127, 123, 150, 139, 136, 158, 136, 135, \
155, 131, 138, 151, 118, 129, 131, 95, 107, 97, \
106, 118, 97, 112, 125, 106, 114, 127, 111, 108, \
119, 105, 109, 120, 106, 106, 118, 102, 90, 108, \
83, 88, 112, 79, 91, 115, 86, 109, 126, 112, \
106, 112, 118, 86, 88, 97, 72, 72, 78, 66, \
65, 71, 78, 83, 76, 114, 126, 108, 79, 95, \
74, 131, 153, 124, 88, 104, 91, 129, 144, 152, \
159, 172, 190, 116, 123, 145, 121, 121, 150, 136, \
133, 160, 130, 128, 155, 133, 131, 160, 154, 156, \
169, 165, 169, 174, 141, 147, 153, 103, 118, 114, \
94, 112, 93, 96, 111, 83, 113, 127, 97, 98, \
115, 86, 98, 113, 93, 105, 117, 100, 109, 123, \
101, 97, 112, 93, 80, 96, 75, 103, 124, 94, \
106, 125, 103, 117, 129, 125, 105, 112, 123, 86, \
91, 94, 71, 74, 73, 56, 54, 61, 70, 78, \
64, 98, 111, 90, 68, 81, 62, 139, 159, 127, \
94, 109, 88, 108, 127, 112, 112, 132, 120, 119, \
131, 131, 132, 136, 152, 137, 139, 158, 123, 125, \
141, 106, 110, 117, 121, 129, 116, 121, 132, 111, \
116, 129, 114, 109, 128, 110, 112, 132, 102, 110, \
127, 90, 121, 134, 101, 109, 125, 96, 103, 118, \
97, 104, 117, 94, 110, 126, 98, 106, 121, 102, \
110, 122, 105, 116, 133, 106, 122, 138, 118, 117, \
127, 125, 104, 112, 118, 91, 99, 96, 69, 73, \
68, 44, 44, 46, 72, 80, 58, 102, 115, 91, \
70, 79, 62, 126, 147, 110, 86, 103, 73, 88, \
110, 80, 87, 112, 78, 108, 125, 101, 105, 114, \
107, 97, 105, 103, 93, 102, 95, 94, 103, 84, \
100, 113, 79, 98, 113, 77, 108, 123, 95, 120, \
139, 116, 113, 133, 103, 114, 132, 94, 126, 142, \
106, 125, 143, 114, 116, 133, 106, 114, 131, 90, \
106, 125, 87, 114, 131, 110, 120, 135, 113, 113, \
132, 103, 121, 137, 116, 116, 126, 117, 91, 98, \
92, 80, 87, 78, 71, 74, 67, 50, 51, 44, \
79, 91, 58, 100, 115, 86, 72, 84, 61, 114, \
135, 96, 81, 97, 73, 85, 105, 86, 79, 102, \
75, 98, 117, 90, 98, 112, 91, 91, 107, 79, \
96, 113, 81, 100, 112, 85, 102, 116, 81, 103, \
119, 85, 107, 123, 97, 108, 126, 103, 104, 124, \
94, 109, 128, 93, 113, 132, 95, 121, 141, 114, \
121, 140, 112, 112, 131, 84, 104, 125, 83, 108, \
126, 105, 118, 135, 111, 113, 133, 104, 114, 130, \
109, 109, 119, 108, 88, 96, 82, 79, 88, 70, \
70, 77, 62, 53, 59, 45, 72, 89, 49, 89, \
107, 74, 64, 77, 53, 136, 157, 118, 94, 110, \
89, 97, 117, 99, 102, 125, 101, 114, 132, 111, \
105, 121, 101, 95, 115, 83, 104, 125, 89, 107, \
120, 99, 110, 124, 100, 106, 121, 98, 106, 122, \
103, 101, 119, 99, 99, 119, 95, 103, 124, 94, \
105, 126, 91, 104, 126, 100, 112, 131, 109, 98, \
116, 79, 92, 113, 76, 102, 123, 100, 110, 130, \
107, 106, 128, 103, 113, 129, 112, 99, 108, 99, \
77, 89, 74, 76, 90, 62, 69, 83, 55, 61, \
73, 58, 67, 88, 48, 84, 105, 70, 65, 78, \
56, 123, 143, 108, 78, 95, 67, 80, 101, 67, \
95, 119, 86, 108, 127, 105, 101, 117, 101, 93, \
113, 91, 94, 114, 88, 107, 118, 101, 103, 115, \
95, 100, 114, 93, 99, 114, 95, 104, 123, 103, \
107, 127, 105, 104, 124, 98, 106, 127, 97, 102, \
124, 100, 108, 128, 111, 97, 116, 89, 91, 112, \
81, 94, 117, 94, 93, 116, 93, 88, 111, 88, \
99, 114, 100, 91, 100, 93, 71, 85, 72, 72, \
91, 56, 66, 86, 49, 72, 90, 74, 70, 94, \
58, 79, 101, 67, 61, 75, 55, 112, 132, 107, \
64, 81, 51, 74, 88, 61, 87, 103, 80, 97, \
113, 91, 103, 118, 97, 92, 109, 83, 90, 107, \
78, 96, 107, 83, 101, 112, 87, 106, 117, 92, \
108, 120, 97, 105, 125, 101, 108, 132, 103, 107, \
129, 99, 104, 119, 100, 112, 129, 113, 107, 128, \
105, 99, 121, 91, 94, 116, 89, 87, 111, 88, \
79, 106, 77, 79, 102, 72, 77, 92, 71, 83, \
93, 83, 77, 94, 80, 60, 82, 52, 58, 80, \
46, 67, 88, 65, 67, 90, 61, 74, 93, 64, \
54, 69, 47, 117, 135, 112, 82, 96, 74, 93, \
104, 84, 94, 106, 87, 95, 108, 88, 99, 112, \
92, 99, 113, 89, 98, 113, 85, 100, 117, 90, \
105, 123, 96, 100, 117, 90, 104, 122, 95, 98, \
118, 92, 96, 120, 89, 108, 129, 100, 116, 128, \
112, 109, 122, 110, 90, 109, 86, 90, 109, 81, \
80, 99, 76, 88, 106, 88, 83, 104, 80, 80, \
98, 69, 77, 91, 66, 79, 90, 77, 86, 102, \
89, 64, 83, 61, 64, 83, 57, 71, 89, 68, \
70, 89, 66, 71, 89, 64, 54, 68, 47, 116, \
134, 106, 82, 93, 79, 87, 98, 79, 82, 95, \
74, 91, 104, 86, 92, 104, 90, 92, 104, 89, \
85, 100, 79, 84, 104, 79, 84, 103, 81, 88, \
107, 85, 83, 102, 78, 88, 105, 83, 89, 108, \
84, 93, 110, 86, 108, 119, 104, 95, 106, 94, \
69, 84, 66, 69, 85, 63, 71, 86, 68, 75, \
88, 74, 78, 88, 73, 74, 85, 64, 77, 88, \
65, 73, 85, 68, 83, 96, 85, 74, 89, 73, \
55, 70, 52, 56, 70, 56, 66, 81, 64, 62, \
77, 57, 45, 58, 41, 78, 94, 63, 47, 53, \
44, 47, 57, 43, 49, 60, 44, 52, 63, 49, \
52, 63, 53, 55, 66, 54, 53, 64, 47, 52, \
62, 43, 54, 64, 50, 54, 64, 50, 47, 57, \
38, 50, 61, 43, 54, 68, 49, 51, 66, 46, \
58, 67, 53, 57, 66, 55, 43, 54, 42, 39, \
50, 35, 45, 56, 44, 44, 53, 44, 47, 52, \
42, 49, 55, 40, 48, 57, 38, 42, 52, 35, \
40, 51, 40, 41, 52, 40, 29, 40, 29, 32, \
43, 34, 33, 44, 33, 30, 42, 29, 28, 39, \
27, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '13954';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a57a264fe96829d66f1997b41a42c4a99';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_dog8';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{132, 111, 89, 138, 119, 97, 145, 129, 106, 154, 139, \
117, 161, 146, 128, 163, 148, 129, 166, 151, 132, \
172, 157, 138, 177, 163, 143, 179, 167, 145, 181, \
169, 147, 181, 169, 147, 179, 167, 146, 177, 165, \
145, 177, 165, 141, 175, 163, 139, 178, 166, 147, \
181, 166, 150, 178, 161, 143, 175, 158, 140, 176, \
159, 142, 175, 158, 140, 170, 152, 135, 164, 145, \
128, 159, 141, 124, 153, 134, 117, 145, 125, 108, \
127, 104, 90, 102, 84, 74, 56, 50, 38, 61, \
72, 49, 109, 124, 93, 138, 116, 95, 144, 125, \
104, 154, 138, 115, 162, 146, 125, 169, 154, 135, \
169, 154, 135, 172, 157, 138, 176, 161, 142, 179, \
169, 150, 181, 173, 154, 183, 174, 155, 182, 174, \
155, 183, 174, 156, 182, 172, 157, 180, 172, 151, \
177, 170, 142, 176, 169, 142, 181, 169, 148, 181, \
164, 146, 177, 160, 142, 180, 163, 145, 178, 161, \
143, 172, 153, 136, 166, 147, 130, 164, 145, 128, \
158, 139, 122, 148, 129, 112, 131, 112, 95, 112, \
94, 81, 78, 71, 55, 50, 60, 33, 84, 98, \
60, 143, 121, 100, 149, 130, 108, 159, 143, 119, \
168, 153, 131, 175, 160, 141, 175, 160, 141, 176, \
161, 142, 177, 162, 143, 181, 171, 152, 183, 175, \
157, 181, 174, 156, 180, 172, 154, 183, 176, 159, \
185, 177, 163, 184, 177, 156, 179, 173, 144, 176, \
170, 142, 181, 170, 147, 181, 164, 146, 178, 161, \
143, 179, 162, 144, 177, 160, 142, 173, 154, 137, \
168, 149, 132, 165, 146, 129, 160, 141, 124, 149, \
131, 113, 137, 119, 101, 119, 103, 87, 104, 97, \
76, 70, 78, 45, 38, 49, 16, 146, 124, 103, \
150, 131, 110, 160, 144, 121, 171, 156, 134, 174, \
159, 140, 173, 158, 139, 176, 161, 142, 173, 158, \
139, 175, 162, 142, 182, 171, 151, 179, 168, 148, \
178, 167, 147, 180, 170, 150, 182, 171, 153, 181, \
171, 148, 181, 171, 144, 176, 165, 143, 177, 164, \
145, 176, 159, 141, 173, 157, 139, 175, 158, 140, \
173, 156, 138, 171, 153, 136, 167, 148, 131, 164, \
145, 128, 158, 139, 122, 150, 133, 114, 139, 125, \
104, 119, 105, 86, 103, 96, 71, 108, 115, 76, \
61, 69, 37, 147, 125, 104, 151, 133, 111, 156, \
140, 117, 165, 150, 129, 173, 158, 139, 170, 155, \
136, 173, 158, 139, 174, 159, 140, 171, 156, 135, \
178, 164, 141, 176, 162, 139, 177, 162, 139, 177, \
163, 140, 177, 162, 140, 165, 150, 125, 140, 126, \
103, 148, 133, 119, 181, 163, 149, 187, 168, 149, \
172, 153, 133, 170, 151, 132, 175, 157, 138, 174, \
155, 137, 166, 147, 130, 162, 143, 127, 157, 138, \
120, 151, 133, 114, 139, 126, 105, 120, 107, 86, \
83, 77, 50, 66, 72, 32, 56, 62, 29, 140, \
121, 101, 150, 133, 112, 152, 138, 116, 151, 139, \
117, 164, 150, 132, 168, 152, 134, 171, 153, 134, \
177, 157, 138, 170, 154, 132, 172, 158, 135, 176, \
160, 136, 178, 160, 136, 162, 144, 121, 127, 109, \
88, 118, 95, 72, 123, 106, 92, 191, 178, 175, \
222, 197, 184, 207, 171, 143, 182, 141, 106, 167, \
131, 97, 166, 138, 113, 161, 133, 112, 163, 139, \
121, 159, 141, 126, 156, 138, 119, 153, 134, 111, \
139, 123, 101, 123, 107, 91, 73, 64, 44, 29, \
33, 1, 37, 42, 12, 140, 122, 101, 144, 128, \
106, 153, 140, 118, 154, 141, 118, 153, 138, 115, \
165, 147, 125, 170, 149, 127, 175, 152, 131, 171, \
151, 127, 169, 152, 127, 174, 156, 132, 179, 161, \
137, 141, 123, 101, 77, 55, 37, 108, 79, 58, \
187, 168, 156, 240, 227, 221, 199, 167, 143, 172, \
121, 77, 175, 121, 68, 166, 117, 72, 121, 83, \
54, 120, 87, 60, 153, 127, 101, 145, 126, 107, \
139, 121, 101, 142, 122, 98, 137, 121, 97, 129, \
112, 95, 81, 71, 52, 34, 37, 7, 32, 38, \
10, 140, 120, 97, 143, 126, 102, 148, 133, 109, \
160, 146, 119, 160, 144, 114, 158, 141, 111, 162, \
142, 115, 169, 148, 122, 176, 153, 128, 170, 147, \
123, 169, 148, 124, 172, 153, 129, 117, 99, 78, \
66, 39, 24, 120, 87, 68, 222, 202, 186, 237, \
218, 201, 172, 133, 94, 174, 119, 59, 182, 123, \
59, 159, 106, 55, 120, 78, 46, 113, 79, 44, \
137, 110, 75, 132, 110, 84, 131, 112, 90, 135, \
118, 95, 137, 121, 95, 132, 117, 93, 81, 72, \
48, 42, 45, 15, 34, 42, 12, 137, 116, 92, \
137, 118, 94, 131, 114, 90, 130, 115, 88, 142, \
125, 95, 140, 123, 94, 137, 121, 95, 136, 119, \
96, 135, 115, 95, 142, 120, 101, 148, 128, 107, \
141, 122, 99, 81, 62, 40, 60, 31, 15, 110, \
77, 58, 207, 187, 171, 232, 208, 185, 162, 120, \
76, 168, 115, 54, 179, 121, 55, 160, 105, 51, \
130, 85, 50, 95, 59, 22, 123, 91, 52, 151, \
125, 93, 145, 126, 101, 142, 126, 104, 146, 131, \
104, 136, 121, 94, 78, 69, 43, 54, 57, 31, \
68, 77, 50, 131, 108, 83, 129, 108, 83, 126, \
108, 81, 121, 105, 79, 117, 104, 79, 109, 97, \
76, 88, 78, 62, 61, 51, 38, 43, 32, 25, \
54, 40, 33, 105, 89, 75, 140, 122, 100, 82, \
61, 37, 76, 49, 30, 93, 65, 46, 154, 136, \
124, 218, 192, 172, 155, 117, 83, 167, 128, 86, \
195, 145, 92, 162, 110, 60, 123, 77, 41, 84, \
44, 13, 105, 68, 35, 154, 123, 91, 155, 136, \
109, 144, 131, 109, 145, 129, 106, 137, 121, 97, \
86, 76, 54, 71, 72, 55, 102, 111, 92, 133, \
111, 86, 128, 108, 84, 111, 93, 70, 98, 84, \
64, 67, 58, 44, 51, 43, 30, 30, 22, 14, \
14, 11, 7, 12, 12, 15, 13, 9, 11, 46, \
36, 28, 127, 109, 88, 85, 63, 35, 81, 57, \
35, 96, 72, 55, 125, 110, 103, 154, 127, 113, \
148, 115, 96, 142, 116, 96, 188, 148, 111, 185, \
137, 92, 132, 85, 48, 84, 42, 19, 92, 51, \
27, 137, 103, 73, 158, 139, 111, 149, 137, 116, \
145, 129, 111, 135, 119, 98, 107, 97, 80, 112, \
112, 103, 112, 121, 110, 48, 41, 33, 42, 39, \
30, 23, 19, 13, 15, 12, 10, 8, 10, 5, \
53, 33, 17, 76, 50, 36, 23, 22, 17, 2, \
9, 10, 11, 12, 14, 22, 16, 13, 113, 98, \
81, 115, 94, 66, 74, 55, 36, 130, 111, 101, \
133, 116, 115, 113, 92, 89, 149, 124, 115, 101, \
76, 60, 158, 125, 93, 199, 152, 110, 152, 98, \
57, 86, 44, 23, 87, 47, 24, 125, 93, 66, \
157, 138, 117, 156, 138, 118, 149, 131, 112, 133, \
118, 102, 105, 96, 86, 104, 101, 98, 100, 101, \
95, 3, 4, 6, 0, 5, 5, 0, 5, 6, \
4, 5, 4, 7, 10, 0, 92, 72, 67, 142, \
119, 119, 23, 27, 19, 2, 6, 1, 8, 11, \
13, 12, 11, 12, 97, 87, 75, 131, 113, 88, \
79, 57, 39, 147, 126, 118, 150, 131, 132, 180, \
165, 166, 215, 202, 197, 171, 152, 134, 197, 163, \
127, 206, 160, 115, 168, 118, 78, 112, 74, 49, \
120, 81, 51, 138, 109, 81, 162, 144, 125, 162, \
140, 119, 151, 132, 111, 134, 119, 104, 78, 67, \
59, 29, 23, 19, 32, 28, 25, 3, 4, 6, \
0, 5, 4, 11, 15, 15, 24, 27, 27, 20, \
14, 6, 124, 106, 97, 111, 110, 111, 10, 14, \
15, 6, 5, 4, 6, 10, 14, 5, 8, 12, \
60, 57, 52, 124, 110, 91, 84, 57, 37, 138, \
112, 102, 200, 181, 179, 216, 204, 204, 242, 237, \
234, 224, 210, 190, 211, 168, 120, 208, 155, 101, \
187, 143, 101, 171, 134, 102, 177, 137, 99, 159, \
134, 101, 161, 146, 124, 163, 142, 118, 153, 133, \
110, 134, 117, 99, 71, 58, 45, 21, 10, 1, \
21, 14, 11, 2, 3, 5, 0, 5, 4, 4, \
8, 9, 32, 34, 37, 76, 44, 41, 112, 116, \
89, 78, 123, 113, 52, 36, 49, 22, 4, 5, \
7, 8, 11, 3, 9, 16, 21, 24, 24, 72, \
61, 50, 112, 87, 68, 163, 139, 128, 214, 198, \
196, 237, 230, 228, 242, 238, 231, 231, 209, 181, \
210, 155, 95, 200, 136, 70, 196, 145, 96, 187, \
146, 105, 182, 142, 97, 164, 141, 108, 160, 147, \
125, 163, 141, 117, 147, 127, 102, 125, 107, 85, \
86, 69, 51, 48, 32, 19, 36, 25, 17, 3, \
3, 5, 0, 6, 5, 0, 4, 5, 18, 11, \
11, 98, 48, 38, 88, 113, 97, 62, 146, 149, \
118, 82, 85, 85, 29, 19, 9, 5, 6, 5, \
10, 14, 7, 10, 11, 56, 45, 39, 174, 156, \
145, 225, 209, 204, 227, 216, 215, 238, 234, 230, \
248, 243, 233, 236, 212, 185, 205, 155, 104, 184, \
123, 64, 176, 119, 69, 176, 128, 82, 175, 133, \
87, 164, 145, 114, 161, 151, 133, 155, 134, 111, \
136, 116, 88, 129, 110, 83, 127, 107, 84, 118, \
97, 76, 106, 89, 71, 3, 3, 6, 0, 5, \
5, 1, 6, 7, 7, 5, 5, 55, 38, 20, \
113, 105, 90, 89, 143, 150, 126, 114, 104, 121, \
54, 41, 14, 5, 4, 5, 9, 11, 7, 9, \
9, 64, 53, 50, 196, 187, 184, 234, 226, 228, \
233, 228, 229, 235, 233, 228, 241, 236, 226, 246, \
231, 214, 219, 189, 159, 211, 169, 130, 188, 138, \
97, 175, 126, 81, 165, 124, 79, 162, 144, 118, \
176, 165, 154, 149, 128, 109, 144, 123, 92, 146, \
124, 95, 146, 123, 96, 141, 117, 92, 128, 106, \
79, 3, 3, 8, 0, 4, 7, 0, 4, 7, \
0, 6, 11, 33, 50, 21, 125, 69, 26, 98, \
108, 92, 76, 131, 124, 89, 59, 62, 8, 5, \
3, 3, 9, 9, 4, 3, 2, 60, 55, 49, \
201, 197, 195, 232, 227, 227, 232, 228, 227, 226, \
223, 219, 231, 224, 217, 240, 229, 220, 236, 223, \
211, 241, 223, 207, 234, 210, 191, 201, 169, 139, \
158, 128, 97, 153, 136, 117, 202, 191, 182, 174, \
158, 145, 147, 125, 95, 155, 128, 96, 150, 122, \
94, 141, 116, 95, 127, 104, 79, 3, 2, 8, \
1, 3, 8, 0, 4, 8, 6, 2, 8, 31, \
33, 7, 103, 62, 7, 97, 87, 56, 67, 125, \
119, 65, 65, 73, 5, 4, 5, 3, 9, 13, \
4, 4, 5, 47, 49, 41, 183, 180, 175, 232, \
226, 224, 231, 226, 223, 222, 217, 214, 225, 218, \
213, 234, 225, 217, 240, 231, 224, 241, 232, 225, \
241, 231, 223, 214, 198, 179, 150, 132, 112, 161, \
148, 135, 212, 204, 197, 201, 191, 181, 147, 126, \
97, 143, 116, 84, 145, 117, 88, 138, 115, 94, \
132, 112, 89, 3, 2, 7, 1, 3, 7, 0, \
4, 7, 7, 2, 4, 13, 17, 2, 60, 62, \
16, 113, 80, 35, 117, 99, 77, 78, 58, 57, \
11, 5, 6, 3, 8, 15, 5, 8, 13, 18, \
23, 17, 151, 148, 144, 225, 219, 217, 223, 218, \
215, 222, 217, 214, 223, 217, 212, 237, 229, 222, \
248, 240, 233, 248, 240, 234, 243, 235, 227, 216, \
205, 191, 142, 132, 118, 182, 175, 167, 216, 213, \
210, 213, 208, 200, 180, 162, 135, 135, 113, 82, \
124, 101, 72, 144, 123, 97, 139, 120, 97, 3, \
3, 6, 1, 3, 5, 0, 4, 6, 0, 6, \
5, 0, 10, 5, 32, 46, 14, 103, 79, 12, \
152, 86, 26, 112, 56, 30, 27, 10, 6, 2, \
4, 10, 4, 8, 15, 0, 6, 1, 115, 112, \
109, 213, 208, 205, 220, 216, 212, 226, 221, 218, \
227, 221, 218, 235, 229, 224, 249, 243, 238, 252, \
247, 242, 239, 234, 229, 213, 208, 199, 182, 179, \
170, 211, 209, 205, 218, 218, 218, 215, 211, 207, \
206, 191, 170, 169, 153, 129, 111, 93, 67, 127, \
106, 79, 153, 134, 111, 3, 3, 4, 1, 4, \
3, 0, 5, 3, 1, 5, 7, 7, 1, 7, \
37, 31, 15, 59, 66, 17, 117, 87, 21, 163, \
97, 40, 64, 32, 11, 5, 2, 2, 6, 8, \
12, 1, 7, 3, 61, 58, 55, 184, 178, 176, \
215, 210, 207, 229, 224, 221, 236, 231, 228, 236, \
232, 228, 248, 244, 240, 253, 249, 245, 237, 233, \
229, 219, 217, 210, 224, 223, 217, 228, 227, 223, \
223, 222, 221, 223, 218, 215, 206, 194, 183, 195, \
184, 172, 129, 115, 97, 104, 83, 58, 152, 129, \
106, 3, 4, 3, 1, 4, 2, 0, 5, 2, \
1, 5, 7, 4, 5, 5, 25, 21, 14, 19, \
26, 27, 51, 39, 18, 165, 98, 34, 126, 80, \
29, 40, 29, 13, 12, 9, 9, 7, 8, 5, \
31, 26, 23, 155, 149, 146, 208, 203, 200, 228, \
222, 220, 237, 231, 229, 237, 233, 230, 245, 241, \
238, 245, 241, 238, 241, 238, 234, 237, 236, 229, \
239, 238, 231, 232, 229, 224, 230, 226, 223, 241, \
235, 232, 207, 197, 195, 181, 173, 171, 120, 108, \
99, 94, 72, 51, 143, 118, 94, 1, 5, 4, \
2, 3, 1, 4, 3, 1, 1, 5, 5, 0, \
8, 4, 2, 7, 5, 2, 4, 16, 10, 4, \
9, 90, 50, 14, 151, 102, 36, 132, 84, 40, \
68, 27, 17, 39, 11, 11, 49, 19, 16, 142, \
125, 123, 202, 198, 197, 227, 217, 219, 235, 224, \
224, 233, 227, 225, 242, 236, 233, 243, 237, 235, \
249, 243, 241, 248, 244, 239, 242, 238, 234, 231, \
227, 224, 235, 230, 228, 247, 239, 237, 196, 185, \
183, 135, 126, 128, 75, 63, 58, 81, 59, 39, \
139, 109, 82, 4, 4, 5, 2, 3, 2, 4, \
2, 2, 1, 6, 5, 0, 4, 5, 0, 4, \
5, 1, 4, 5, 0, 4, 5, 14, 15, 4, \
100, 77, 29, 138, 77, 29, 123, 39, 24, 121, \
38, 39, 105, 44, 40, 109, 80, 76, 171, 167, \
163, 220, 216, 212, 241, 232, 229, 230, 222, 220, \
234, 226, 224, 241, 233, 231, 244, 237, 235, 240, \
234, 231, 234, 228, 226, 238, 232, 231, 237, 231, \
232, 237, 231, 230, 181, 174, 174, 73, 66, 69, \
50, 37, 32, 86, 61, 39, 137, 104, 75, 10, \
2, 3, 2, 2, 3, 2, 4, 3, 0, 7, \
4, 0, 4, 5, 0, 4, 5, 1, 4, 5, \
2, 6, 7, 4, 0, 3, 86, 70, 49, 142, \
107, 74, 129, 67, 52, 110, 35, 31, 80, 30, \
29, 48, 26, 24, 91, 88, 84, 198, 199, 194, \
230, 226, 222, 217, 209, 207, 221, 213, 211, 229, \
221, 219, 230, 223, 221, 229, 222, 222, 226, 220, \
220, 233, 227, 226, 231, 226, 224, 213, 209, 209, \
138, 137, 140, 42, 36, 40, 56, 41, 35, 107, \
81, 58, 142, 110, 81, 18, 2, 3, 2, 2, \
5, 1, 4, 3, 0, 7, 2, 0, 4, 5, \
0, 4, 5, 1, 5, 5, 3, 7, 8, 23, \
4, 10, 97, 76, 66, 111, 104, 85, 56, 49, \
40, 30, 17, 13, 18, 13, 16, 14, 14, 17, \
33, 32, 35, 144, 137, 142, 195, 186, 188, 193, \
185, 183, 201, 193, 191, 212, 204, 202, 215, 207, \
206, 223, 217, 219, 231, 225, 227, 226, 221, 220, \
220, 215, 211, 182, 179, 176, 88, 87, 90, 42, \
32, 33, 71, 52, 42, 122, 96, 72, 137, 105, \
77, 25, 6, 6, 2, 2, 6, 1, 3, 4, \
0, 5, 1, 0, 4, 5, 0, 4, 5, 1, \
5, 6, 3, 7, 8, 19, 19, 16, 40, 43, \
30, 17, 25, 18, 4, 10, 19, 9, 14, 20, \
7, 18, 24, 15, 17, 22, 29, 18, 21, 97, \
76, 82, 167, 151, 155, 196, 188, 187, 198, 190, \
188, 199, 191, 189, 205, 197, 195, 227, 220, 224, \
245, 239, 243, 228, 222, 221, 208, 203, 198, 162, \
157, 150, 80, 70, 66, 53, 34, 27, 87, 62, \
47, 119, 93, 70, 130, 99, 72, 36, 16, 14, \
1, 1, 5, 3, 2, 4, 1, 4, 1, 0, \
4, 5, 0, 4, 5, 2, 5, 6, 3, 7, \
8, 4, 11, 13, 5, 11, 9, 10, 9, 14, \
12, 11, 23, 11, 14, 13, 28, 13, 16, 50, \
22, 21, 85, 55, 45, 120, 95, 82, 147, 132, \
125, 188, 180, 178, 203, 195, 193, 198, 190, 188, \
195, 187, 185, 229, 221, 227, 241, 235, 241, 219, \
214, 213, 202, 197, 191, 135, 126, 115, 75, 54, \
40, 70, 39, 24, 98, 66, 48, 117, 91, 68, \
125, 96, 69, 55, 25, 21, 6, 0, 1, 2, \
2, 3, 2, 2, 1, 0, 3, 3, 1, 4, \
3, 2, 5, 5, 3, 6, 6, 3, 6, 11, \
9, 9, 16, 15, 6, 17, 19, 8, 13, 35, \
23, 13, 79, 46, 36, 117, 80, 65, 138, 108, \
86, 145, 125, 100, 145, 133, 116, 166, 159, 154, \
191, 185, 181, 197, 189, 186, 193, 184, 181, 226, \
218, 220, 224, 220, 221, 213, 210, 206, 198, 188, \
181, 147, 127, 116, 137, 104, 86, 109, 72, 52, \
106, 71, 48, 117, 93, 66, 118, 92, 63, 68, \
32, 27, 14, 1, 0, 1, 3, 2, 2, 2, \
2, 1, 2, 1, 1, 3, 2, 2, 4, 3, \
4, 6, 5, 4, 8, 6, 5, 7, 9, 19, \
11, 15, 54, 33, 31, 105, 74, 63, 138, 106, \
86, 149, 121, 99, 153, 131, 107, 155, 138, 112, \
175, 163, 142, 192, 182, 171, 186, 177, 169, 166, \
156, 149, 193, 181, 175, 227, 218, 217, 213, 210, \
208, 207, 202, 195, 192, 173, 160, 182, 147, 131, \
184, 141, 124, 153, 110, 94, 130, 94, 77, 120, \
95, 75, 118, 93, 68, 70, 33, 28, 18, 2, \
3, 1, 2, 2, 1, 2, 2, 1, 2, 1, \
1, 3, 2, 2, 4, 3, 4, 6, 5, 6, \
8, 4, 29, 25, 20, 75, 58, 53, 121, 95, \
84, 158, 128, 110, 170, 140, 119, 163, 136, 113, \
162, 140, 116, 161, 143, 117, 177, 161, 139, 193, \
176, 160, 175, 158, 143, 138, 121, 109, 192, 176, \
168, 221, 212, 211, 203, 199, 198, 199, 188, 178, \
174, 144, 121, 163, 118, 88, 150, 104, 80, 138, \
92, 74, 134, 94, 83, 120, 91, 83, 114, 90, \
74, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '14264';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1ad6894d6f6ce5b6ecb244e1259a3f50fc';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_ship10';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{197, 224, 245, 196, 223, 244, 196, 223, 244, 195, 223, \
243, 191, 222, 241, 188, 219, 240, 186, 217, 239, \
184, 214, 238, 183, 214, 238, 182, 212, 236, 180, \
211, 235, 177, 210, 233, 174, 210, 232, 173, 210, \
232, 172, 210, 233, 172, 210, 233, 172, 210, 233, \
172, 210, 233, 172, 209, 233, 172, 208, 232, 172, \
208, 232, 171, 207, 231, 171, 207, 231, 172, 208, \
231, 173, 209, 231, 175, 211, 233, 176, 212, 234, \
177, 213, 235, 183, 216, 238, 182, 214, 237, 183, \
215, 238, 183, 216, 239, 198, 223, 243, 197, 223, \
243, 197, 222, 242, 196, 223, 242, 193, 222, 241, \
191, 219, 240, 188, 217, 239, 186, 215, 238, 186, \
214, 238, 184, 213, 237, 181, 212, 236, 179, 211, \
234, 176, 211, 233, 175, 210, 234, 174, 211, 234, \
174, 211, 234, 174, 211, 234, 174, 210, 234, 174, \
209, 234, 174, 209, 233, 174, 208, 233, 173, 208, \
232, 174, 208, 232, 175, 210, 232, 176, 211, 233, \
177, 212, 234, 178, 213, 235, 180, 214, 236, 184, \
216, 239, 183, 215, 238, 184, 215, 239, 184, 216, \
239, 198, 223, 243, 197, 222, 242, 197, 222, 242, \
197, 222, 242, 195, 222, 241, 192, 220, 240, 190, \
217, 239, 188, 214, 237, 187, 214, 237, 185, 213, \
236, 183, 213, 235, 181, 213, 234, 178, 212, 233, \
176, 211, 233, 176, 211, 234, 176, 211, 234, 176, \
211, 234, 176, 211, 234, 177, 209, 233, 177, 208, \
233, 177, 209, 233, 176, 208, 232, 177, 208, 232, \
178, 210, 232, 179, 211, 233, 180, 212, 234, 182, \
214, 235, 183, 215, 236, 186, 216, 238, 185, 214, \
237, 186, 215, 238, 187, 216, 238, 199, 223, 242, \
199, 223, 242, 199, 223, 241, 197, 222, 240, 195, \
221, 239, 193, 219, 238, 191, 217, 239, 190, 215, \
238, 189, 214, 237, 186, 214, 235, 184, 213, 234, \
182, 213, 234, 180, 213, 233, 178, 211, 233, 178, \
210, 233, 178, 210, 233, 178, 210, 233, 178, 209, \
233, 179, 209, 233, 180, 209, 233, 180, 209, 233, \
180, 209, 233, 181, 210, 234, 182, 211, 232, 182, \
211, 232, 183, 212, 233, 184, 213, 234, 186, 214, \
235, 188, 216, 237, 188, 215, 236, 189, 217, 238, \
188, 216, 237, 201, 224, 242, 201, 224, 242, 201, \
224, 242, 199, 222, 240, 196, 221, 237, 195, 219, \
237, 194, 217, 238, 193, 216, 239, 191, 215, 238, \
188, 215, 236, 186, 214, 235, 184, 214, 234, 182, \
214, 233, 180, 212, 232, 181, 210, 233, 181, 210, \
233, 181, 210, 233, 180, 209, 232, 181, 209, 232, \
182, 209, 233, 182, 209, 232, 183, 210, 233, 184, \
211, 234, 184, 212, 233, 184, 212, 233, 185, 212, \
233, 186, 213, 234, 188, 215, 236, 190, 216, 237, \
190, 216, 237, 191, 218, 239, 190, 216, 237, 202, \
225, 242, 203, 225, 243, 202, 225, 242, 201, 223, \
241, 199, 221, 238, 198, 220, 238, 196, 218, 239, \
195, 217, 239, 193, 216, 238, 190, 216, 236, 188, \
215, 235, 186, 215, 235, 184, 215, 234, 183, 212, \
233, 183, 210, 233, 184, 211, 233, 184, 211, 233, \
183, 210, 232, 184, 209, 233, 184, 209, 233, 184, \
209, 233, 184, 209, 232, 185, 210, 234, 186, 212, \
233, 186, 213, 233, 187, 213, 234, 188, 214, 235, \
190, 215, 236, 193, 216, 238, 193, 216, 238, 193, \
217, 239, 192, 216, 237, 204, 225, 242, 205, 226, \
243, 204, 225, 242, 203, 224, 241, 202, 222, 239, \
200, 221, 238, 199, 219, 239, 198, 217, 240, 195, \
216, 239, 192, 217, 237, 190, 216, 236, 188, 217, \
235, 186, 216, 234, 185, 213, 234, 185, 211, 234, \
185, 212, 234, 186, 212, 235, 185, 211, 234, 186, \
211, 234, 186, 210, 234, 186, 210, 233, 185, 209, \
233, 186, 211, 234, 188, 213, 233, 188, 213, 233, \
189, 214, 234, 190, 215, 235, 192, 216, 236, 195, \
217, 238, 196, 218, 239, 195, 217, 238, 194, 215, \
237, 206, 226, 242, 207, 227, 243, 207, 227, 243, \
206, 225, 242, 204, 222, 240, 203, 221, 240, 201, \
220, 240, 199, 219, 240, 197, 218, 239, 195, 217, \
238, 192, 217, 236, 190, 217, 236, 186, 217, 234, \
186, 215, 233, 187, 213, 234, 188, 212, 235, 188, \
213, 235, 186, 213, 233, 184, 212, 231, 186, 212, \
232, 189, 211, 232, 187, 210, 230, 188, 213, 232, \
189, 214, 232, 192, 215, 233, 192, 215, 233, 192, \
216, 234, 192, 218, 235, 196, 218, 239, 197, 218, \
239, 196, 218, 238, 194, 216, 237, 209, 227, 241, \
209, 227, 241, 211, 228, 243, 209, 226, 242, 206, \
222, 242, 204, 222, 242, 201, 221, 240, 197, 221, \
239, 197, 220, 239, 199, 218, 239, 196, 217, 236, \
193, 218, 234, 188, 218, 232, 188, 217, 232, 190, \
214, 233, 191, 212, 237, 191, 213, 236, 189, 214, \
231, 183, 216, 230, 186, 213, 229, 193, 209, 229, \
192, 210, 230, 188, 212, 229, 191, 214, 229, 194, \
213, 229, 197, 215, 231, 196, 216, 232, 194, 219, \
234, 198, 219, 238, 197, 218, 237, 197, 218, 237, \
198, 219, 238, 210, 228, 242, 210, 228, 242, 211, \
229, 243, 210, 227, 243, 207, 223, 243, 205, 223, \
243, 202, 222, 241, 199, 222, 240, 198, 221, 239, \
199, 220, 238, 197, 219, 237, 194, 219, 234, 191, \
219, 233, 191, 218, 233, 191, 215, 234, 192, 214, \
237, 193, 215, 237, 190, 216, 232, 187, 216, 233, \
189, 215, 235, 193, 212, 234, 192, 210, 232, 192, \
211, 233, 192, 214, 231, 199, 217, 235, 199, 215, \
233, 197, 217, 234, 197, 220, 236, 201, 220, 239, \
201, 219, 238, 201, 219, 238, 201, 220, 239, 211, \
229, 243, 211, 229, 243, 212, 230, 244, 211, 228, \
243, 209, 225, 243, 207, 225, 242, 204, 224, 241, \
202, 223, 240, 200, 223, 239, 199, 222, 238, 197, \
222, 237, 194, 220, 235, 193, 219, 234, 194, 218, \
233, 192, 217, 234, 191, 217, 238, 192, 218, 238, \
192, 217, 233, 181, 205, 226, 169, 196, 219, 180, \
209, 230, 187, 212, 234, 197, 216, 240, 199, 220, \
239, 206, 224, 243, 201, 216, 237, 200, 217, 237, \
200, 221, 240, 204, 223, 240, 203, 222, 239, 203, \
222, 239, 204, 223, 240, 211, 229, 243, 211, 229, \
243, 212, 230, 244, 211, 229, 244, 210, 227, 244, \
208, 225, 243, 206, 225, 242, 205, 224, 241, 203, \
223, 239, 201, 224, 238, 197, 223, 236, 197, 224, \
238, 197, 220, 237, 197, 220, 235, 192, 218, 234, \
189, 217, 237, 189, 216, 235, 192, 217, 232, 153, \
178, 198, 70, 102, 123, 87, 126, 144, 111, 146, \
166, 133, 158, 181, 157, 179, 198, 195, 213, 231, \
199, 214, 234, 202, 217, 238, 204, 222, 241, 206, \
224, 241, 205, 223, 240, 206, 223, 241, 206, 224, \
241, 212, 230, 244, 213, 231, 245, 213, 231, 245, \
213, 230, 245, 211, 228, 245, 210, 227, 244, 208, \
225, 242, 207, 224, 240, 206, 223, 238, 202, 225, \
237, 196, 224, 236, 181, 210, 223, 193, 217, 234, \
194, 216, 232, 182, 208, 223, 104, 134, 151, 141, \
170, 187, 185, 210, 224, 148, 175, 192, 46, 82, \
99, 43, 87, 101, 51, 91, 106, 45, 77, 95, \
65, 89, 104, 156, 174, 190, 194, 207, 225, 203, \
217, 235, 204, 221, 237, 207, 224, 241, 207, 224, \
240, 207, 224, 240, 207, 224, 240, 212, 230, 244, \
213, 231, 245, 213, 231, 245, 212, 230, 245, 210, \
229, 243, 210, 227, 242, 209, 226, 241, 210, 224, \
240, 207, 220, 235, 203, 222, 232, 180, 207, 218, \
111, 143, 155, 147, 174, 190, 120, 142, 157, 166, \
193, 206, 60, 93, 108, 102, 134, 148, 188, 213, \
226, 159, 185, 198, 59, 88, 100, 54, 86, 97, \
60, 93, 104, 60, 93, 104, 64, 91, 101, 163, \
181, 193, 201, 214, 228, 215, 228, 243, 214, 229, \
244, 212, 229, 244, 208, 225, 240, 208, 225, 240, \
209, 225, 240, 211, 229, 243, 212, 230, 244, 212, \
230, 244, 211, 229, 243, 208, 227, 241, 208, 226, \
240, 208, 223, 238, 208, 221, 237, 208, 217, 231, \
192, 205, 215, 142, 170, 178, 121, 156, 167, 142, \
172, 188, 85, 109, 124, 164, 192, 204, 73, 109, \
122, 72, 107, 120, 177, 202, 214, 156, 175, 185, \
74, 84, 95, 74, 78, 91, 69, 81, 91, 59, \
84, 90, 57, 85, 90, 117, 136, 145, 135, 148, \
159, 141, 152, 163, 152, 165, 177, 183, 199, 213, \
207, 223, 238, 208, 224, 238, 208, 224, 239, 211, \
229, 243, 211, 229, 243, 211, 229, 243, 210, 229, \
243, 207, 226, 240, 208, 225, 240, 208, 222, 238, \
188, 199, 216, 155, 162, 176, 153, 162, 172, 136, \
164, 171, 123, 160, 169, 142, 176, 190, 88, 113, \
127, 168, 196, 207, 74, 112, 124, 64, 100, 112, \
177, 201, 213, 153, 163, 171, 83, 73, 85, 82, \
58, 75, 70, 59, 71, 54, 67, 72, 38, 64, \
66, 36, 56, 61, 41, 53, 61, 48, 58, 66, \
55, 67, 77, 96, 111, 126, 200, 216, 231, 206, \
222, 237, 205, 221, 236, 212, 228, 242, 213, 229, \
243, 212, 228, 242, 212, 227, 241, 208, 223, 236, \
202, 219, 232, 180, 198, 212, 145, 164, 179, 135, \
153, 168, 149, 169, 179, 131, 164, 171, 119, 157, \
165, 141, 176, 185, 88, 114, 126, 175, 201, 212, \
84, 112, 124, 70, 95, 108, 116, 133, 147, 75, \
83, 91, 53, 48, 57, 53, 39, 50, 53, 47, \
56, 43, 52, 56, 36, 56, 57, 33, 51, 53, \
37, 50, 54, 38, 50, 55, 47, 60, 67, 126, \
141, 155, 207, 222, 236, 205, 220, 234, 205, 220, \
234, 214, 228, 241, 214, 228, 241, 213, 227, 240, \
212, 227, 239, 209, 226, 235, 195, 214, 225, 152, \
172, 185, 99, 121, 136, 145, 168, 183, 150, 174, \
187, 130, 159, 168, 126, 154, 162, 149, 173, 180, \
99, 114, 124, 186, 197, 208, 105, 116, 127, 65, \
76, 86, 50, 61, 71, 35, 46, 52, 36, 46, \
51, 34, 44, 49, 34, 45, 49, 37, 48, 52, \
34, 48, 49, 35, 49, 50, 36, 50, 52, 36, \
50, 53, 67, 81, 86, 183, 197, 209, 207, 221, \
234, 207, 221, 234, 206, 220, 233, 213, 228, 241, \
213, 227, 240, 213, 227, 240, 212, 227, 240, 209, \
225, 237, 191, 208, 221, 146, 166, 178, 98, 121, \
132, 127, 142, 156, 154, 155, 172, 161, 167, 180, \
153, 157, 169, 161, 160, 173, 106, 96, 107, 133, \
122, 130, 79, 78, 82, 47, 57, 58, 32, 49, \
48, 35, 49, 50, 39, 50, 53, 40, 51, 55, \
47, 58, 61, 36, 47, 50, 38, 51, 53, 40, \
54, 55, 36, 50, 52, 36, 50, 53, 116, 130, \
135, 204, 218, 231, 206, 220, 233, 206, 220, 233, \
206, 220, 233, 213, 227, 239, 212, 226, 238, 212, \
226, 239, 205, 218, 232, 148, 158, 175, 151, 163, \
177, 147, 161, 173, 103, 119, 128, 126, 131, 142, \
164, 152, 169, 149, 138, 153, 110, 98, 111, 88, \
69, 83, 83, 58, 68, 78, 56, 60, 63, 56, \
54, 39, 49, 42, 31, 53, 42, 34, 49, 47, \
59, 70, 72, 60, 71, 73, 59, 70, 72, 39, \
50, 52, 65, 79, 79, 70, 84, 84, 35, 49, \
51, 33, 46, 51, 139, 152, 160, 208, 221, 234, \
206, 220, 233, 206, 220, 233, 206, 220, 233, 214, \
225, 237, 213, 225, 237, 214, 226, 238, 183, 201, \
212, 92, 123, 132, 139, 156, 167, 162, 158, 173, \
126, 103, 121, 129, 108, 124, 103, 97, 107, 84, \
81, 89, 76, 69, 77, 70, 56, 65, 63, 46, \
52, 56, 43, 45, 46, 44, 42, 37, 47, 41, \
32, 51, 42, 33, 48, 46, 45, 57, 58, 54, \
65, 67, 54, 66, 67, 43, 55, 56, 61, 76, \
73, 61, 76, 75, 35, 48, 51, 59, 72, 78, \
159, 171, 180, 209, 221, 234, 207, 219, 233, 207, \
219, 233, 207, 219, 233, 214, 224, 236, 215, 225, \
237, 215, 225, 237, 192, 202, 214, 119, 125, 140, \
143, 141, 157, 137, 127, 142, 103, 85, 99, 96, \
89, 97, 94, 109, 110, 83, 99, 98, 59, 71, \
71, 51, 55, 56, 41, 45, 46, 38, 45, 47, \
37, 47, 48, 36, 47, 47, 35, 48, 47, 35, \
47, 47, 36, 48, 48, 39, 51, 51, 39, 51, \
51, 36, 48, 48, 38, 53, 49, 46, 61, 58, \
39, 53, 55, 132, 145, 151, 191, 203, 213, 208, \
218, 232, 208, 217, 232, 209, 218, 233, 209, 218, \
233, 214, 224, 234, 215, 225, 235, 214, 225, 235, \
184, 182, 196, 147, 112, 136, 146, 123, 143, 115, \
115, 125, 117, 136, 137, 122, 152, 149, 97, 131, \
125, 58, 93, 86, 38, 67, 61, 37, 57, 52, \
31, 51, 48, 30, 51, 52, 32, 49, 52, 34, \
46, 51, 37, 45, 50, 36, 47, 47, 36, 48, \
47, 36, 48, 46, 35, 47, 45, 35, 47, 45, \
40, 54, 48, 46, 61, 57, 57, 71, 72, 173, \
186, 193, 189, 201, 212, 209, 218, 233, 209, 217, \
232, 209, 218, 233, 209, 218, 233, 215, 223, 234, \
214, 223, 234, 215, 223, 234, 164, 168, 179, 155, \
149, 159, 181, 181, 189, 183, 192, 197, 169, 185, \
190, 160, 188, 188, 82, 123, 117, 43, 84, 76, \
31, 66, 58, 34, 58, 53, 32, 52, 49, 31, \
50, 50, 31, 48, 49, 34, 47, 49, 35, 47, \
49, 35, 47, 47, 36, 48, 46, 40, 53, 51, \
42, 55, 53, 41, 53, 50, 51, 66, 59, 48, \
63, 59, 82, 96, 98, 187, 200, 208, 184, 195, \
208, 210, 218, 233, 210, 217, 233, 210, 218, 234, \
211, 218, 234, 211, 220, 230, 211, 220, 230, 210, \
219, 228, 167, 182, 187, 146, 176, 170, 174, 200, \
196, 163, 179, 181, 154, 163, 171, 134, 150, 156, \
63, 97, 95, 43, 77, 73, 34, 61, 57, 35, \
52, 50, 41, 49, 48, 42, 47, 45, 37, 46, \
43, 36, 47, 43, 34, 48, 43, 36, 48, 45, \
38, 49, 47, 42, 52, 50, 47, 57, 55, 42, \
52, 50, 43, 56, 48, 64, 77, 72, 105, 118, \
120, 180, 192, 201, 170, 182, 195, 198, 206, 221, \
198, 205, 221, 197, 204, 220, 197, 204, 219, 185, \
203, 211, 182, 201, 210, 182, 202, 212, 164, 185, \
192, 145, 166, 163, 153, 160, 162, 142, 136, 141, \
140, 126, 133, 126, 111, 116, 104, 90, 91, 100, \
84, 85, 86, 67, 68, 84, 59, 62, 98, 61, \
64, 107, 64, 66, 106, 63, 66, 99, 56, 59, \
100, 56, 59, 103, 59, 64, 104, 59, 64, 108, \
59, 66, 113, 61, 69, 120, 65, 74, 144, 84, \
87, 156, 107, 110, 156, 134, 139, 156, 165, 169, \
110, 134, 140, 176, 190, 204, 178, 190, 206, 177, \
189, 205, 177, 190, 205, 157, 182, 192, 156, 183, \
194, 155, 183, 195, 154, 181, 192, 150, 169, 176, \
156, 159, 169, 156, 145, 157, 154, 137, 148, 136, \
117, 125, 120, 98, 104, 125, 100, 107, 109, 81, \
89, 110, 80, 89, 123, 83, 91, 137, 89, 97, \
143, 93, 102, 147, 95, 105, 146, 91, 101, 150, \
94, 103, 157, 98, 108, 167, 103, 114, 174, 105, \
118, 189, 116, 129, 207, 126, 135, 200, 133, 141, \
181, 145, 153, 146, 149, 154, 118, 144, 149, 157, \
177, 190, 156, 174, 189, 153, 172, 186, 151, 169, \
183, 136, 165, 176, 135, 164, 177, 132, 163, 177, \
129, 162, 177, 126, 159, 174, 136, 157, 175, 137, \
148, 167, 134, 143, 160, 120, 132, 145, 101, 115, \
126, 107, 119, 131, 98, 107, 120, 99, 106, 119, \
108, 111, 124, 125, 122, 134, 131, 126, 139, 138, \
131, 145, 146, 138, 152, 161, 147, 157, 172, 154, \
163, 181, 159, 169, 182, 155, 167, 186, 156, 168, \
189, 157, 164, 191, 163, 170, 172, 156, 166, 161, \
163, 174, 143, 159, 170, 143, 166, 178, 139, 162, \
175, 138, 161, 173, 137, 160, 172, 132, 164, 177, \
130, 164, 179, 127, 162, 178, 121, 159, 177, 116, \
159, 179, 121, 158, 179, 121, 153, 174, 120, 151, \
172, 123, 159, 177, 110, 152, 168, 109, 149, 166, \
107, 146, 163, 103, 142, 159, 104, 141, 158, 111, \
147, 163, 115, 149, 165, 119, 152, 169, 121, 153, \
169, 126, 152, 164, 131, 153, 163, 137, 154, 167, \
138, 152, 165, 140, 152, 165, 146, 158, 166, 154, \
163, 172, 156, 164, 177, 169, 180, 194, 146, 161, \
176, 144, 172, 183, 141, 169, 180, 140, 168, 179, \
141, 169, 180, 139, 174, 189, 137, 174, 191, 133, \
171, 189, 121, 162, 180, 117, 162, 180, 117, 161, \
180, 117, 161, 180, 114, 158, 176, 114, 161, 178, \
106, 157, 175, 101, 152, 169, 100, 150, 167, 96, \
146, 164, 90, 141, 158, 87, 139, 155, 87, 140, \
156, 90, 142, 158, 89, 140, 157, 91, 139, 155, \
95, 141, 156, 99, 143, 159, 102, 144, 161, 108, \
148, 165, 115, 152, 166, 123, 156, 170, 133, 163, \
177, 143, 170, 184, 143, 169, 183, 139, 171, 183, \
136, 169, 180, 135, 169, 180, 136, 169, 180, 134, \
171, 186, 131, 169, 186, 129, 169, 187, 119, 160, \
177, 114, 154, 167, 115, 158, 171, 116, 161, 175, \
114, 158, 174, 115, 159, 174, 109, 154, 170, 109, \
155, 170, 107, 154, 169, 103, 150, 165, 95, 144, \
160, 89, 140, 156, 88, 140, 156, 86, 140, 155, \
85, 139, 154, 83, 138, 157, 86, 141, 161, 90, \
144, 164, 92, 144, 165, 95, 145, 166, 102, 146, \
166, 107, 151, 169, 111, 156, 170, 125, 169, 181, \
130, 170, 181, 132, 169, 181, 131, 167, 179, 132, \
167, 179, 133, 169, 181, 135, 172, 186, 128, 166, \
181, 126, 166, 182, 122, 161, 177, 122, 159, 169, \
121, 163, 173, 119, 163, 174, 119, 159, 174, 122, \
160, 176, 118, 157, 173, 114, 155, 170, 110, 154, \
168, 101, 147, 161, 101, 147, 162, 98, 145, 161, \
91, 140, 155, 89, 140, 154, 86, 138, 153, 84, \
138, 157, 86, 140, 161, 88, 142, 163, 87, 142, \
163, 90, 143, 164, 97, 143, 164, 101, 149, 166, \
103, 155, 168, 117, 167, 178, 126, 171, 182, 133, \
169, 182, 133, 169, 181, 133, 169, 181, 132, 168, \
180, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '14574';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a281d916e15701142187587f04f051d65';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_dog3';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{252, 211, 215, 248, 213, 213, 251, 211, 211, 251, 199, \
203, 251, 191, 197, 251, 189, 194, 251, 188, 191, \
244, 180, 182, 237, 172, 173, 241, 174, 177, 245, \
176, 179, 240, 170, 171, 232, 161, 160, 233, 162, \
161, 237, 166, 167, 236, 164, 165, 240, 166, 167, \
246, 170, 173, 245, 169, 169, 243, 170, 167, 240, \
168, 167, 229, 159, 160, 219, 151, 152, 220, 155, \
157, 219, 156, 157, 215, 152, 153, 211, 147, 148, \
204, 140, 141, 194, 133, 134, 194, 134, 135, 203, \
143, 143, 216, 155, 155, 253, 214, 218, 251, 216, \
216, 254, 214, 214, 253, 202, 206, 253, 195, 200, \
253, 192, 196, 253, 191, 194, 246, 181, 183, 242, \
176, 177, 248, 180, 183, 248, 179, 181, 242, 171, \
172, 235, 164, 163, 238, 167, 165, 241, 169, 170, \
242, 169, 170, 247, 173, 174, 251, 174, 177, 250, \
173, 173, 248, 174, 172, 244, 172, 170, 233, 162, \
163, 227, 157, 159, 228, 162, 163, 221, 157, 158, \
214, 150, 151, 209, 145, 146, 202, 138, 139, 202, \
139, 140, 213, 151, 152, 221, 159, 160, 229, 166, \
167, 253, 218, 221, 250, 216, 217, 254, 214, 214, \
251, 203, 206, 251, 196, 200, 251, 194, 197, 251, \
190, 192, 243, 179, 181, 244, 177, 179, 250, 183, \
185, 249, 179, 182, 240, 170, 171, 237, 165, 165, \
238, 166, 165, 239, 167, 168, 247, 174, 175, 250, \
175, 177, 251, 175, 177, 252, 175, 175, 250, 176, \
173, 244, 171, 170, 233, 162, 163, 230, 160, 162, \
223, 157, 158, 211, 147, 148, 206, 142, 143, 205, \
141, 142, 206, 142, 143, 213, 150, 151, 219, 156, \
157, 225, 162, 163, 229, 165, 166, 253, 223, 224, \
249, 216, 216, 251, 212, 212, 249, 205, 206, 249, \
198, 201, 251, 196, 198, 249, 189, 192, 243, 178, \
180, 246, 179, 181, 250, 182, 184, 248, 179, 181, \
240, 169, 170, 241, 170, 169, 240, 169, 168, 239, \
167, 169, 248, 175, 176, 253, 178, 180, 254, 177, \
180, 254, 177, 177, 249, 175, 172, 242, 169, 168, \
233, 162, 163, 228, 158, 160, 213, 147, 148, 206, \
142, 143, 205, 141, 142, 207, 143, 144, 213, 149, \
150, 223, 159, 160, 225, 161, 162, 225, 161, 162, \
231, 166, 167, 253, 226, 225, 251, 218, 218, 250, \
211, 211, 251, 208, 209, 250, 202, 204, 251, 198, \
200, 249, 190, 192, 245, 180, 182, 250, 183, 184, \
251, 184, 186, 245, 176, 179, 240, 170, 170, 245, \
174, 173, 244, 173, 172, 242, 170, 171, 244, 171, \
172, 249, 174, 175, 251, 174, 176, 250, 173, 173, \
248, 173, 171, 243, 171, 169, 232, 161, 162, 218, \
149, 151, 211, 145, 146, 213, 149, 150, 218, 154, \
155, 224, 160, 161, 232, 168, 169, 238, 173, 174, \
239, 174, 175, 239, 174, 176, 245, 179, 180, 252, \
226, 225, 252, 219, 219, 251, 212, 212, 253, 211, \
211, 250, 205, 205, 251, 200, 201, 249, 190, 193, \
247, 182, 186, 253, 186, 190, 251, 185, 187, 243, \
174, 176, 244, 173, 173, 249, 176, 175, 247, 173, \
172, 244, 171, 172, 242, 169, 171, 242, 168, 172, \
242, 167, 172, 244, 169, 170, 247, 172, 170, 238, \
165, 163, 226, 154, 155, 225, 155, 157, 232, 163, \
166, 235, 167, 171, 236, 169, 172, 237, 172, 175, \
237, 172, 174, 233, 170, 172, 229, 166, 168, 231, \
169, 171, 237, 175, 176, 252, 225, 224, 251, 218, \
218, 252, 212, 213, 254, 211, 212, 248, 205, 204, \
251, 199, 201, 249, 188, 193, 249, 184, 192, 254, \
189, 196, 247, 182, 184, 243, 175, 177, 249, 177, \
178, 253, 176, 177, 250, 172, 171, 247, 170, 169, \
247, 169, 171, 244, 167, 171, 243, 167, 173, 248, \
172, 176, 246, 171, 171, 237, 162, 164, 242, 170, \
172, 245, 175, 177, 243, 172, 177, 238, 166, 173, \
233, 164, 169, 226, 160, 164, 216, 152, 156, 201, \
140, 143, 193, 133, 135, 195, 137, 139, 198, 142, \
142, 250, 222, 222, 250, 216, 216, 253, 214, 214, \
254, 211, 212, 251, 206, 206, 252, 200, 202, 249, \
188, 192, 250, 187, 193, 253, 190, 196, 243, 177, \
183, 246, 177, 181, 250, 176, 181, 250, 172, 177, \
250, 170, 171, 250, 169, 165, 246, 165, 162, 245, \
164, 164, 251, 170, 172, 254, 175, 180, 247, 172, \
179, 249, 177, 182, 253, 182, 187, 249, 179, 182, \
242, 174, 178, 235, 168, 173, 230, 163, 167, 221, \
157, 160, 212, 150, 153, 208, 148, 150, 204, 144, \
146, 201, 143, 145, 208, 152, 152, 250, 221, 221, \
249, 216, 216, 253, 216, 216, 253, 213, 213, 253, \
207, 208, 253, 199, 202, 249, 188, 191, 252, 191, \
194, 247, 187, 189, 242, 175, 180, 251, 182, 187, \
253, 182, 185, 251, 177, 180, 247, 173, 174, 241, \
169, 165, 242, 168, 165, 250, 175, 173, 253, 176, \
176, 245, 170, 174, 240, 167, 176, 236, 166, 173, \
224, 156, 159, 218, 152, 153, 213, 149, 151, 207, \
145, 146, 205, 142, 144, 208, 147, 148, 219, 158, \
159, 226, 166, 168, 213, 153, 155, 212, 153, 155, \
220, 163, 164, 251, 220, 221, 249, 216, 216, 254, \
219, 218, 254, 215, 215, 254, 206, 208, 252, 197, \
199, 249, 189, 190, 253, 195, 194, 242, 183, 181, \
229, 165, 163, 226, 162, 158, 215, 150, 145, 193, \
127, 120, 174, 110, 104, 157, 99, 92, 164, 105, \
98, 187, 124, 118, 208, 142, 136, 218, 150, 146, \
220, 152, 151, 214, 148, 147, 208, 143, 141, 206, \
143, 141, 206, 144, 143, 206, 145, 145, 209, 147, \
147, 221, 158, 159, 230, 166, 167, 225, 162, 164, \
220, 159, 162, 222, 162, 164, 219, 159, 161, 237, \
205, 206, 244, 210, 210, 255, 220, 219, 252, 215, \
214, 253, 204, 207, 252, 195, 199, 252, 193, 193, \
242, 186, 182, 187, 132, 123, 146, 89, 75, 142, \
85, 68, 140, 84, 65, 129, 74, 53, 114, 61, \
40, 102, 52, 33, 113, 60, 39, 122, 65, 43, \
135, 74, 51, 159, 96, 75, 183, 120, 103, 196, \
135, 120, 200, 139, 129, 202, 142, 135, 208, 148, \
145, 213, 151, 150, 222, 157, 158, 232, 166, 167, \
234, 165, 167, 230, 164, 167, 231, 168, 172, 232, \
172, 174, 228, 168, 169, 185, 152, 154, 213, 180, \
180, 255, 222, 219, 247, 210, 208, 253, 203, 207, \
255, 200, 202, 234, 174, 172, 168, 111, 103, 115, \
63, 47, 118, 67, 42, 133, 82, 53, 144, 96, \
64, 146, 98, 65, 138, 89, 55, 147, 96, 59, \
152, 96, 58, 141, 81, 41, 147, 82, 41, 139, \
76, 37, 136, 77, 43, 139, 80, 52, 139, 81, \
61, 154, 96, 83, 191, 131, 124, 219, 155, 152, \
235, 169, 168, 242, 173, 174, 246, 175, 177, 238, \
171, 174, 232, 167, 171, 229, 166, 169, 231, 168, \
171, 130, 100, 102, 152, 123, 122, 251, 218, 214, \
250, 211, 208, 241, 194, 195, 210, 154, 148, 149, \
89, 72, 121, 65, 44, 136, 84, 61, 151, 98, \
70, 156, 103, 68, 158, 105, 67, 155, 101, 63, \
163, 108, 70, 178, 123, 80, 151, 91, 46, 160, \
95, 48, 179, 110, 63, 169, 101, 53, 155, 92, \
44, 148, 86, 44, 133, 71, 37, 128, 67, 39, \
156, 93, 70, 195, 131, 114, 235, 172, 163, 247, \
183, 183, 247, 182, 188, 245, 177, 183, 243, 174, \
179, 233, 165, 172, 239, 174, 180, 126, 97, 100, \
99, 74, 72, 215, 186, 183, 219, 184, 182, 165, \
122, 118, 132, 78, 63, 127, 67, 39, 144, 89, \
57, 160, 109, 79, 158, 103, 73, 156, 101, 65, \
162, 105, 64, 162, 103, 63, 178, 119, 78, 172, \
113, 68, 153, 89, 44, 168, 101, 53, 177, 106, \
58, 179, 109, 58, 176, 111, 56, 169, 105, 53, \
162, 99, 53, 146, 84, 42, 141, 78, 41, 155, \
92, 63, 200, 139, 121, 248, 190, 185, 249, 192, \
196, 251, 189, 194, 242, 180, 183, 230, 172, 176, \
245, 193, 196, 142, 112, 116, 63, 39, 40, 96, \
75, 76, 93, 68, 69, 90, 51, 42, 130, 79, \
58, 152, 93, 60, 162, 106, 69, 165, 113, 78, \
157, 102, 70, 160, 104, 66, 172, 114, 71, 175, \
115, 73, 182, 121, 78, 157, 95, 49, 166, 102, \
57, 166, 100, 55, 174, 103, 56, 187, 118, 69, \
169, 103, 53, 148, 84, 34, 148, 86, 37, 146, \
85, 36, 135, 74, 28, 143, 82, 42, 164, 104, \
74, 215, 159, 144, 248, 195, 191, 250, 194, 196, \
232, 177, 178, 233, 187, 187, 255, 219, 218, 173, \
144, 147, 65, 40, 43, 32, 13, 16, 29, 10, \
11, 76, 41, 28, 138, 89, 62, 160, 102, 65, \
165, 108, 66, 161, 108, 69, 157, 101, 66, 168, \
111, 70, 180, 121, 76, 190, 130, 85, 182, 120, \
76, 150, 88, 44, 167, 108, 68, 161, 100, 61, \
179, 114, 72, 166, 99, 58, 135, 70, 32, 122, \
59, 20, 134, 73, 31, 148, 89, 46, 141, 83, \
35, 146, 86, 37, 161, 101, 60, 158, 102, 76, \
198, 149, 136, 242, 185, 184, 236, 179, 180, 249, \
206, 205, 255, 217, 216, 223, 202, 204, 104, 78, \
79, 48, 23, 24, 41, 17, 15, 76, 42, 27, \
128, 81, 53, 154, 97, 58, 159, 100, 59, 153, \
97, 59, 159, 101, 64, 178, 119, 77, 197, 137, \
89, 204, 142, 94, 173, 113, 69, 139, 84, 46, \
130, 80, 49, 116, 67, 39, 120, 66, 35, 116, \
57, 24, 134, 74, 43, 134, 76, 43, 134, 79, \
43, 146, 93, 55, 164, 109, 65, 155, 96, 46, \
160, 100, 53, 149, 96, 60, 152, 109, 87, 219, \
163, 159, 243, 185, 187, 251, 205, 205, 253, 206, \
208, 255, 242, 242, 192, 163, 163, 101, 66, 64, \
65, 31, 25, 95, 59, 44, 120, 73, 47, 150, \
92, 55, 160, 100, 61, 155, 97, 60, 170, 111, \
73, 192, 132, 88, 210, 150, 99, 209, 147, 97, \
169, 110, 68, 117, 69, 40, 111, 73, 52, 93, \
56, 39, 69, 25, 6, 119, 68, 37, 162, 110, \
69, 163, 112, 72, 147, 98, 57, 143, 96, 55, \
159, 108, 66, 153, 93, 47, 159, 98, 50, 161, \
110, 68, 148, 110, 79, 180, 133, 124, 234, 186, \
184, 249, 209, 206, 255, 211, 212, 255, 244, 242, \
247, 217, 214, 178, 131, 121, 114, 68, 49, 128, \
87, 67, 128, 81, 57, 143, 88, 58, 156, 97, \
61, 159, 99, 61, 179, 120, 82, 199, 138, 92, \
220, 157, 105, 217, 151, 103, 162, 103, 65, 95, \
53, 30, 134, 99, 84, 109, 74, 61, 86, 43, \
23, 158, 109, 73, 198, 145, 98, 202, 147, 99, \
189, 136, 89, 179, 132, 86, 173, 122, 80, 161, \
101, 59, 164, 103, 58, 158, 107, 67, 143, 106, \
76, 139, 102, 90, 199, 163, 159, 251, 217, 212, \
255, 212, 212, 254, 244, 241, 241, 211, 204, 181, \
125, 108, 142, 89, 58, 145, 101, 75, 135, 92, \
70, 132, 88, 61, 147, 95, 59, 156, 98, 59, \
180, 122, 85, 205, 144, 96, 230, 165, 111, 224, \
158, 108, 164, 106, 69, 100, 57, 34, 116, 77, \
62, 111, 70, 55, 143, 95, 70, 186, 134, 96, \
215, 157, 112, 220, 154, 106, 219, 156, 106, 212, \
158, 108, 200, 149, 103, 189, 132, 90, 168, 108, \
69, 152, 102, 69, 132, 96, 72, 100, 72, 60, \
124, 96, 90, 191, 160, 154, 239, 194, 193, 254, \
245, 241, 221, 192, 184, 164, 113, 97, 146, 100, \
72, 138, 103, 79, 127, 92, 69, 134, 96, 67, \
151, 105, 69, 157, 105, 64, 187, 131, 94, 213, \
152, 105, 230, 165, 109, 225, 160, 105, 185, 127, \
82, 115, 66, 39, 87, 42, 23, 129, 85, 68, \
180, 134, 110, 159, 111, 78, 197, 142, 102, 220, \
156, 109, 227, 161, 107, 224, 165, 107, 217, 164, \
112, 222, 168, 123, 174, 120, 83, 131, 87, 59, \
104, 75, 55, 69, 48, 36, 64, 41, 33, 81, \
53, 47, 153, 113, 110, 241, 228, 223, 171, 143, \
135, 139, 99, 85, 124, 83, 65, 113, 77, 61, \
108, 72, 54, 134, 93, 69, 161, 115, 84, 164, \
113, 80, 178, 121, 91, 202, 139, 100, 222, 154, \
106, 230, 163, 110, 205, 144, 97, 134, 81, 50, \
100, 51, 28, 124, 78, 60, 145, 102, 82, 105, \
64, 38, 135, 88, 55, 187, 128, 85, 211, 147, \
93, 232, 171, 111, 240, 187, 131, 234, 183, 138, \
168, 120, 85, 102, 65, 42, 79, 55, 39, 59, \
41, 31, 59, 38, 32, 69, 41, 37, 117, 80, \
78, 198, 178, 173, 113, 82, 75, 107, 73, 63, \
142, 104, 96, 143, 103, 96, 131, 88, 78, 158, \
112, 97, 188, 142, 124, 198, 151, 133, 190, 136, \
118, 186, 126, 102, 192, 128, 96, 209, 146, 107, \
204, 146, 108, 157, 106, 76, 133, 83, 59, 127, \
81, 62, 112, 72, 54, 91, 56, 35, 101, 60, \
34, 134, 80, 45, 180, 120, 75, 226, 169, 118, \
240, 190, 139, 219, 172, 130, 141, 97, 68, 93, \
58, 40, 104, 78, 66, 74, 53, 45, 80, 54, \
50, 115, 82, 81, 174, 134, 135, 176, 146, 143, \
123, 86, 81, 162, 132, 127, 225, 187, 188, 221, \
181, 179, 212, 171, 164, 221, 181, 172, 234, 200, \
193, 241, 212, 207, 238, 206, 197, 228, 189, 178, \
210, 167, 152, 193, 150, 128, 185, 143, 118, 170, \
125, 100, 132, 85, 64, 104, 60, 42, 117, 80, \
64, 118, 87, 69, 130, 94, 72, 134, 86, 59, \
146, 93, 62, 196, 146, 113, 216, 171, 132, 201, \
157, 121, 119, 78, 55, 107, 70, 56, 132, 98, \
87, 100, 70, 65, 147, 112, 113, 205, 161, 165, \
235, 186, 191, 212, 177, 174, 220, 181, 178, 244, \
216, 214, 248, 213, 218, 244, 213, 211, 248, 221, \
214, 252, 231, 225, 254, 242, 242, 253, 247, 248, \
249, 241, 235, 255, 243, 237, 255, 240, 235, 244, \
229, 219, 237, 218, 203, 223, 191, 173, 140, 98, \
82, 88, 46, 32, 105, 70, 56, 85, 57, 41, \
105, 74, 55, 133, 90, 71, 120, 73, 54, 104, \
61, 43, 153, 112, 84, 181, 139, 109, 122, 81, \
62, 118, 77, 66, 140, 99, 90, 184, 146, 145, \
231, 189, 193, 247, 196, 203, 254, 201, 209, 251, \
225, 223, 249, 226, 223, 247, 231, 227, 249, 235, \
233, 252, 241, 239, 254, 246, 244, 255, 250, 248, \
253, 249, 249, 250, 244, 244, 248, 236, 232, 246, \
231, 227, 247, 230, 228, 248, 232, 228, 251, 235, \
229, 255, 236, 228, 179, 145, 140, 93, 55, 50, \
83, 53, 45, 78, 54, 44, 80, 55, 44, 78, \
48, 33, 130, 96, 78, 109, 73, 53, 121, 83, \
61, 159, 118, 94, 161, 118, 95, 173, 129, 115, \
203, 164, 161, 247, 212, 215, 247, 208, 213, 250, \
205, 212, 255, 210, 218, 254, 237, 237, 251, 239, \
238, 253, 247, 244, 254, 251, 248, 253, 250, 249, \
251, 248, 247, 249, 246, 245, 247, 243, 242, 245, \
238, 237, 249, 235, 235, 250, 235, 235, 250, 236, \
236, 251, 239, 238, 251, 240, 238, 255, 243, 238, \
196, 169, 168, 97, 63, 63, 72, 43, 39, 81, \
57, 52, 88, 64, 57, 81, 54, 43, 110, 80, \
64, 140, 106, 86, 129, 94, 77, 143, 105, 88, \
185, 145, 125, 219, 181, 168, 243, 209, 209, 248, \
216, 221, 250, 213, 218, 248, 207, 214, 247, 204, \
212, 255, 249, 252, 254, 249, 251, 254, 253, 253, \
251, 250, 250, 249, 247, 246, 248, 245, 244, 248, \
245, 244, 250, 248, 246, 251, 248, 247, 252, 246, \
248, 253, 246, 248, 253, 247, 249, 254, 248, 250, \
250, 246, 245, 249, 244, 239, 228, 209, 208, 130, \
102, 102, 76, 46, 44, 82, 55, 53, 85, 59, \
56, 85, 57, 51, 91, 60, 50, 118, 86, 72, \
106, 74, 64, 160, 128, 119, 229, 199, 188, 248, \
219, 214, 249, 222, 226, 250, 222, 227, 251, 216, \
222, 242, 202, 210, 246, 205, 213, 255, 255, 255, \
254, 254, 255, 250, 251, 253, 247, 249, 250, 250, \
250, 248, 251, 250, 248, 252, 251, 249, 252, 251, \
249, 250, 249, 248, 248, 247, 249, 250, 248, 251, \
249, 247, 250, 248, 245, 248, 246, 246, 246, 244, \
245, 241, 250, 241, 239, 207, 187, 188, 127, 101, \
101, 94, 68, 69, 79, 53, 54, 67, 40, 39, \
85, 57, 52, 100, 72, 64, 136, 110, 106, 226, \
203, 201, 254, 233, 230, 251, 233, 234, 251, 232, \
239, 252, 230, 235, 250, 221, 226, 248, 214, 220, \
254, 219, 226, 255, 255, 255, 253, 254, 254, 251, \
252, 253, 251, 252, 253, 252, 252, 250, 251, 250, \
248, 248, 248, 246, 247, 247, 245, 248, 247, 246, \
250, 250, 251, 252, 252, 253, 251, 251, 252, 250, \
250, 251, 250, 251, 252, 251, 252, 251, 254, 251, \
250, 255, 246, 246, 238, 223, 224, 180, 159, 161, \
127, 106, 109, 100, 78, 80, 114, 92, 91, 148, \
126, 124, 214, 196, 195, 254, 241, 241, 249, 239, \
239, 248, 240, 242, 253, 242, 248, 251, 238, 242, \
248, 229, 233, 249, 225, 230, 255, 229, 235, 255, \
255, 255, 253, 254, 252, 253, 255, 252, 253, 253, \
251, 250, 250, 248, 250, 250, 248, 250, 250, 248, \
251, 251, 249, 253, 253, 251, 254, 254, 252, 254, \
254, 252, 255, 255, 253, 254, 254, 252, 254, 254, \
253, 254, 254, 254, 253, 252, 252, 252, 248, 247, \
253, 244, 243, 245, 231, 232, 228, 211, 215, 210, \
193, 196, 211, 197, 198, 236, 222, 222, 252, 241, \
241, 251, 244, 245, 249, 248, 249, 251, 251, 253, \
254, 250, 252, 251, 244, 245, 249, 238, 240, 250, \
235, 238, 253, 237, 240, 253, 254, 252, 249, 250, \
247, 250, 250, 248, 249, 249, 247, 248, 248, 247, \
249, 249, 248, 251, 251, 250, 252, 252, 251, 251, \
251, 250, 251, 251, 249, 252, 252, 250, 252, 252, \
250, 251, 250, 248, 251, 250, 249, 250, 250, 251, \
248, 248, 248, 246, 245, 244, 246, 242, 241, 248, \
241, 242, 249, 241, 244, 247, 240, 242, 246, 239, \
241, 246, 240, 240, 247, 242, 243, 249, 247, 247, \
248, 249, 250, 248, 250, 250, 251, 250, 251, 250, \
248, 248, 248, 244, 245, 247, 241, 242, 250, 244, \
245, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '14884';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1af31bdcc2e9dbde0848533625a627bea0';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_airplane5';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{213, 237, 243, 213, 233, 241, 214, 233, 242, 219, 234, \
243, 226, 239, 246, 227, 240, 247, 223, 236, 244, \
216, 231, 241, 212, 232, 244, 209, 234, 245, 212, \
234, 244, 215, 233, 245, 213, 234, 247, 212, 234, \
247, 212, 234, 247, 212, 234, 247, 214, 233, 247, \
214, 233, 247, 214, 233, 247, 214, 233, 247, 215, \
233, 248, 215, 234, 248, 215, 234, 248, 215, 234, \
248, 213, 235, 247, 209, 236, 245, 209, 236, 245, \
209, 236, 245, 209, 235, 244, 207, 234, 243, 207, \
234, 243, 207, 234, 242, 217, 241, 247, 216, 235, \
242, 223, 240, 247, 239, 249, 253, 246, 253, 255, \
246, 253, 255, 244, 251, 253, 231, 241, 248, 217, \
235, 245, 214, 237, 247, 215, 237, 247, 218, 236, \
248, 216, 237, 250, 216, 238, 250, 216, 238, 250, \
216, 238, 250, 217, 237, 250, 218, 237, 250, 218, \
237, 250, 218, 237, 250, 218, 237, 250, 217, 237, \
250, 217, 237, 250, 218, 237, 250, 215, 237, 249, \
212, 238, 248, 212, 238, 248, 212, 238, 248, 212, \
238, 247, 210, 237, 247, 210, 237, 246, 209, 236, \
245, 217, 241, 247, 219, 238, 243, 237, 250, 253, \
249, 255, 254, 249, 252, 251, 248, 251, 250, 250, \
252, 251, 244, 250, 252, 225, 240, 246, 215, 236, \
243, 215, 237, 247, 217, 236, 248, 215, 237, 246, \
214, 237, 246, 215, 237, 247, 215, 237, 247, 216, \
237, 247, 217, 237, 247, 217, 237, 247, 217, 237, \
247, 218, 238, 248, 218, 238, 248, 218, 238, 248, \
218, 238, 248, 216, 237, 247, 214, 236, 247, 214, \
237, 247, 214, 237, 248, 214, 237, 248, 211, 238, \
247, 211, 238, 247, 209, 236, 245, 217, 240, 246, \
226, 242, 246, 244, 253, 254, 250, 254, 252, 251, \
252, 249, 250, 251, 248, 249, 251, 248, 250, 253, \
252, 235, 246, 249, 217, 237, 242, 215, 237, 247, \
217, 237, 249, 215, 237, 245, 214, 237, 245, 215, \
238, 246, 216, 238, 246, 217, 237, 246, 217, 237, \
246, 218, 238, 247, 218, 238, 247, 218, 238, 247, \
218, 238, 247, 218, 238, 247, 218, 238, 247, 217, \
237, 247, 216, 236, 247, 216, 236, 247, 217, 237, \
248, 216, 237, 248, 212, 239, 248, 212, 239, 248, \
210, 237, 246, 218, 240, 247, 230, 244, 247, 244, \
251, 251, 249, 252, 251, 250, 253, 252, 251, 253, \
252, 251, 253, 252, 252, 255, 254, 243, 251, 252, \
221, 239, 243, 215, 237, 246, 217, 237, 249, 215, \
238, 245, 215, 238, 245, 216, 239, 246, 217, 239, \
246, 218, 239, 246, 219, 238, 246, 218, 238, 245, \
218, 238, 245, 218, 238, 245, 218, 238, 245, 218, \
238, 245, 218, 238, 245, 218, 238, 247, 217, 237, \
248, 217, 237, 248, 217, 237, 248, 216, 237, 248, \
212, 239, 248, 212, 239, 248, 211, 238, 247, 219, \
240, 248, 230, 243, 247, 243, 249, 250, 247, 251, \
251, 248, 252, 252, 251, 254, 253, 253, 254, 253, \
254, 255, 253, 248, 252, 252, 226, 240, 247, 217, \
237, 249, 218, 237, 251, 217, 238, 246, 217, 238, \
246, 218, 239, 246, 218, 239, 246, 218, 239, 246, \
219, 239, 246, 219, 239, 247, 219, 239, 247, 218, \
238, 246, 218, 238, 246, 218, 238, 246, 218, 238, \
246, 218, 238, 247, 218, 238, 248, 218, 238, 248, \
217, 237, 247, 216, 237, 247, 214, 238, 248, 213, \
238, 248, 213, 238, 248, 221, 239, 250, 229, 241, \
247, 243, 249, 252, 247, 252, 253, 248, 252, 252, \
252, 254, 252, 255, 255, 252, 255, 254, 251, 251, \
252, 253, 229, 240, 250, 219, 237, 252, 220, 238, \
252, 219, 238, 248, 219, 238, 247, 219, 238, 248, \
219, 238, 248, 219, 238, 248, 219, 239, 248, 220, \
240, 249, 221, 241, 250, 219, 239, 248, 219, 239, \
247, 219, 239, 248, 219, 239, 247, 219, 239, 248, \
219, 239, 248, 219, 239, 248, 218, 238, 247, 216, \
237, 246, 215, 237, 248, 215, 237, 248, 214, 237, \
247, 222, 240, 250, 226, 238, 246, 239, 248, 251, \
246, 253, 255, 248, 252, 254, 250, 252, 252, 254, \
254, 252, 255, 255, 252, 250, 253, 254, 228, 241, \
250, 219, 237, 252, 220, 238, 251, 221, 239, 249, \
221, 239, 249, 221, 239, 249, 221, 239, 249, 220, \
239, 249, 220, 240, 249, 221, 241, 250, 221, 241, \
250, 220, 240, 249, 220, 240, 249, 220, 240, 249, \
220, 240, 249, 219, 239, 248, 219, 239, 248, 219, \
239, 248, 219, 239, 248, 217, 238, 247, 216, 238, \
249, 216, 238, 249, 215, 237, 248, 222, 241, 250, \
223, 237, 244, 231, 243, 247, 240, 249, 253, 245, \
251, 253, 246, 250, 251, 252, 254, 252, 255, 255, \
254, 247, 253, 254, 226, 241, 250, 219, 238, 250, \
221, 238, 249, 221, 239, 249, 221, 239, 249, 221, \
239, 249, 221, 239, 249, 220, 240, 249, 220, 240, \
249, 221, 241, 250, 221, 241, 250, 221, 241, 250, \
220, 240, 249, 220, 240, 249, 220, 240, 249, 220, \
240, 249, 219, 239, 248, 219, 239, 248, 219, 239, \
248, 218, 238, 248, 217, 239, 250, 217, 239, 250, \
216, 238, 249, 222, 241, 248, 221, 238, 245, 225, \
241, 247, 234, 246, 250, 241, 249, 252, 245, 251, \
252, 251, 254, 254, 252, 255, 255, 241, 249, 252, \
222, 239, 248, 219, 239, 249, 221, 239, 248, 222, \
240, 250, 222, 240, 250, 222, 240, 250, 222, 240, \
250, 221, 241, 250, 221, 241, 250, 221, 241, 250, \
221, 241, 250, 221, 241, 250, 221, 241, 250, 221, \
241, 250, 221, 241, 250, 220, 240, 249, 219, 239, \
248, 219, 239, 248, 219, 239, 248, 218, 238, 248, \
217, 238, 249, 216, 238, 249, 216, 238, 249, 223, \
242, 248, 220, 239, 245, 221, 240, 247, 230, 244, \
249, 239, 248, 252, 244, 252, 254, 250, 255, 255, \
248, 254, 254, 232, 245, 249, 220, 239, 249, 221, \
240, 250, 223, 240, 247, 222, 240, 249, 222, 240, \
250, 223, 241, 251, 223, 241, 251, 222, 242, 251, \
222, 242, 251, 222, 242, 251, 222, 242, 251, 222, \
242, 251, 222, 242, 251, 222, 242, 251, 221, 241, \
250, 221, 241, 250, 221, 241, 250, 220, 240, 249, \
220, 239, 248, 219, 239, 249, 218, 240, 250, 217, \
239, 250, 216, 238, 249, 224, 243, 249, 220, 240, \
246, 219, 239, 246, 224, 240, 247, 234, 245, 250, \
239, 248, 251, 242, 248, 250, 238, 246, 247, 226, \
241, 245, 221, 241, 250, 221, 241, 250, 223, 241, \
248, 222, 240, 250, 223, 240, 251, 224, 242, 253, \
224, 243, 252, 223, 242, 251, 223, 242, 251, 223, \
242, 251, 223, 243, 251, 222, 243, 252, 221, 242, \
252, 219, 239, 249, 218, 239, 248, 219, 240, 249, \
221, 242, 251, 221, 242, 251, 220, 240, 249, 220, \
241, 250, 218, 240, 251, 218, 240, 251, 216, 238, \
249, 225, 243, 250, 222, 240, 246, 222, 240, 247, \
219, 241, 251, 224, 241, 248, 230, 240, 241, 227, \
240, 243, 224, 241, 246, 225, 241, 246, 226, 240, \
249, 222, 241, 250, 220, 242, 250, 223, 241, 249, \
226, 239, 252, 226, 238, 251, 224, 240, 247, 226, \
241, 244, 225, 242, 248, 223, 243, 250, 223, 242, \
247, 221, 244, 248, 219, 244, 252, 222, 244, 253, \
223, 244, 251, 221, 243, 250, 220, 242, 250, 220, \
241, 249, 220, 240, 248, 220, 239, 248, 219, 239, \
248, 218, 239, 248, 218, 238, 248, 224, 241, 249, \
222, 239, 246, 223, 240, 247, 222, 242, 249, 225, \
241, 245, 227, 238, 238, 223, 239, 243, 220, 243, \
251, 219, 242, 252, 220, 242, 250, 223, 241, 247, \
225, 241, 246, 222, 242, 246, 228, 241, 243, 232, \
241, 240, 228, 240, 237, 221, 237, 240, 223, 242, \
247, 224, 243, 246, 229, 242, 238, 223, 236, 230, \
214, 227, 224, 194, 202, 198, 188, 192, 187, 204, \
207, 202, 221, 228, 224, 225, 236, 235, 224, 239, \
242, 222, 240, 247, 222, 242, 249, 219, 239, 248, \
219, 239, 248, 225, 242, 249, 222, 239, 246, 223, \
240, 247, 224, 241, 246, 224, 236, 237, 195, 200, \
195, 203, 203, 193, 223, 226, 222, 225, 242, 248, \
218, 247, 248, 221, 243, 245, 229, 240, 247, 223, \
244, 247, 208, 222, 207, 177, 183, 162, 152, 157, \
147, 180, 193, 196, 227, 243, 244, 231, 239, 232, \
224, 220, 200, 197, 190, 168, 183, 175, 153, 167, \
152, 126, 167, 146, 119, 171, 148, 123, 166, 150, \
129, 175, 170, 157, 167, 176, 172, 172, 189, 192, \
211, 231, 239, 221, 241, 250, 220, 240, 249, 226, \
243, 250, 223, 240, 247, 224, 240, 247, 222, 242, \
249, 224, 239, 241, 188, 182, 170, 184, 151, 116, \
200, 161, 126, 217, 204, 187, 226, 239, 227, 225, \
246, 245, 225, 239, 251, 230, 243, 251, 159, 165, \
149, 62, 58, 36, 49, 42, 34, 106, 104, 99, \
188, 185, 175, 186, 173, 151, 200, 172, 135, 212, \
186, 150, 193, 171, 135, 154, 126, 83, 152, 117, \
75, 125, 89, 55, 76, 48, 21, 88, 76, 58, \
104, 110, 103, 159, 176, 179, 216, 236, 244, 221, \
241, 250, 220, 240, 249, 226, 243, 250, 224, 241, \
248, 224, 241, 248, 221, 241, 250, 226, 245, 251, \
227, 223, 211, 203, 158, 115, 199, 137, 81, 188, \
142, 99, 200, 176, 147, 221, 218, 208, 232, 237, \
240, 240, 239, 243, 124, 114, 104, 56, 40, 24, \
72, 54, 45, 81, 60, 47, 100, 76, 57, 109, \
79, 52, 172, 131, 91, 202, 170, 133, 186, 163, \
123, 159, 134, 88, 136, 107, 69, 89, 61, 36, \
100, 82, 65, 140, 136, 125, 192, 205, 201, 222, \
243, 246, 224, 244, 253, 220, 240, 249, 221, 241, \
250, 227, 244, 251, 225, 242, 249, 226, 243, 250, \
226, 242, 247, 223, 243, 250, 231, 243, 244, 219, \
200, 178, 197, 151, 104, 199, 139, 87, 193, 130, \
92, 187, 141, 111, 213, 192, 165, 206, 191, 176, \
85, 63, 50, 67, 42, 27, 74, 51, 31, 72, \
42, 24, 78, 48, 32, 84, 56, 37, 85, 52, \
27, 101, 75, 48, 123, 108, 72, 152, 140, 100, \
121, 110, 83, 130, 123, 115, 207, 210, 211, 226, \
238, 239, 225, 247, 248, 220, 246, 250, 221, 242, \
251, 222, 241, 250, 221, 241, 250, 227, 245, 252, \
225, 242, 249, 226, 243, 250, 227, 242, 247, 224, \
243, 250, 224, 244, 252, 228, 235, 234, 202, 181, \
155, 200, 141, 96, 205, 130, 91, 196, 131, 88, \
211, 162, 113, 148, 117, 89, 62, 33, 19, 59, \
32, 18, 62, 37, 16, 52, 30, 15, 66, 44, \
28, 68, 46, 27, 66, 43, 24, 75, 57, 40, \
78, 67, 45, 77, 75, 52, 119, 122, 111, 203, \
213, 215, 228, 244, 252, 223, 243, 249, 220, 243, \
249, 219, 244, 249, 222, 242, 250, 222, 242, 249, \
222, 241, 249, 228, 245, 252, 225, 242, 249, 226, \
243, 250, 225, 243, 250, 225, 243, 250, 227, 242, \
249, 231, 244, 249, 227, 220, 207, 201, 154, 115, \
203, 148, 108, 217, 169, 127, 216, 167, 115, 97, \
62, 35, 56, 32, 16, 61, 40, 27, 57, 35, \
20, 37, 24, 18, 57, 43, 30, 70, 50, 29, \
66, 48, 34, 43, 31, 23, 46, 41, 33, 103, \
106, 101, 198, 209, 208, 229, 245, 249, 224, 243, \
249, 225, 244, 250, 225, 244, 250, 224, 244, 250, \
224, 243, 249, 223, 242, 248, 223, 242, 248, 229, \
247, 254, 226, 243, 250, 227, 244, 251, 227, 244, \
251, 228, 244, 251, 230, 243, 248, 231, 243, 247, \
239, 237, 223, 195, 165, 126, 138, 108, 72, 160, \
141, 108, 139, 115, 73, 61, 43, 12, 62, 51, \
28, 70, 60, 40, 58, 44, 28, 30, 17, 18, \
44, 30, 31, 87, 72, 69, 137, 127, 132, 93, \
92, 93, 122, 128, 124, 201, 210, 210, 232, 244, \
249, 226, 242, 248, 226, 245, 251, 226, 245, 251, \
226, 245, 251, 226, 245, 251, 225, 244, 250, 223, \
242, 249, 223, 242, 248, 229, 246, 254, 226, 243, \
250, 227, 244, 251, 227, 244, 251, 230, 244, 250, \
233, 245, 249, 238, 248, 251, 247, 247, 236, 186, \
166, 135, 64, 48, 23, 57, 53, 35, 73, 60, \
32, 73, 60, 28, 84, 72, 47, 82, 69, 49, \
55, 40, 26, 31, 18, 19, 43, 34, 35, 113, \
109, 112, 222, 225, 235, 215, 226, 232, 223, 239, \
240, 230, 244, 249, 229, 242, 250, 229, 244, 252, \
226, 245, 251, 226, 245, 251, 226, 245, 251, 226, \
245, 251, 225, 244, 250, 224, 243, 249, 224, 243, \
249, 229, 246, 253, 226, 243, 250, 228, 245, 252, \
229, 245, 251, 235, 248, 252, 240, 251, 253, 245, \
254, 255, 248, 249, 244, 161, 145, 129, 63, 51, \
38, 57, 51, 44, 75, 54, 37, 74, 51, 29, \
78, 56, 36, 71, 50, 35, 48, 32, 22, 51, \
43, 38, 115, 116, 112, 192, 201, 200, 230, 242, \
249, 228, 246, 253, 227, 247, 252, 227, 245, 252, \
230, 244, 254, 229, 244, 253, 227, 246, 252, 227, \
246, 252, 227, 246, 252, 227, 246, 252, 225, 244, \
250, 225, 244, 250, 225, 244, 250, 229, 246, 253, \
226, 243, 250, 228, 245, 252, 233, 247, 253, 239, \
250, 253, 241, 251, 252, 243, 250, 250, 241, 246, \
246, 209, 206, 204, 186, 184, 179, 121, 112, 108, \
68, 35, 20, 63, 36, 23, 63, 38, 24, 57, \
41, 28, 76, 70, 64, 154, 156, 153, 218, 229, \
227, 230, 248, 250, 228, 245, 251, 228, 244, 252, \
228, 245, 253, 228, 245, 252, 229, 245, 252, 228, \
245, 252, 227, 246, 252, 227, 246, 252, 227, 246, \
252, 227, 246, 252, 225, 244, 250, 225, 244, 250, \
225, 244, 250, 229, 246, 253, 226, 243, 250, 228, \
245, 252, 232, 246, 251, 234, 245, 248, 235, 244, \
246, 237, 244, 244, 231, 244, 247, 234, 250, 254, \
231, 240, 236, 108, 101, 92, 69, 36, 19, 70, \
49, 40, 75, 59, 47, 116, 113, 101, 192, 203, \
199, 236, 248, 252, 230, 247, 253, 222, 244, 252, \
228, 245, 254, 231, 243, 252, 231, 244, 252, 230, \
245, 251, 228, 246, 250, 227, 246, 250, 227, 246, \
252, 227, 246, 252, 227, 246, 252, 227, 246, 252, \
225, 244, 250, 225, 244, 250, 225, 244, 250, 229, \
247, 251, 226, 243, 248, 227, 244, 249, 229, 245, \
250, 230, 246, 249, 230, 245, 249, 231, 246, 249, \
226, 246, 251, 231, 248, 251, 191, 193, 183, 54, \
47, 33, 44, 32, 20, 50, 45, 36, 112, 111, \
104, 196, 204, 201, 234, 250, 251, 229, 246, 251, \
228, 245, 251, 228, 247, 253, 229, 246, 252, 230, \
246, 252, 230, 246, 251, 229, 246, 251, 228, 246, \
250, 228, 246, 251, 229, 246, 253, 228, 246, 253, \
228, 245, 252, 228, 245, 252, 227, 246, 252, 226, \
245, 251, 225, 244, 250, 229, 248, 252, 226, 244, \
248, 227, 245, 249, 228, 246, 250, 229, 247, 251, \
229, 247, 251, 229, 247, 251, 228, 247, 253, 224, \
238, 241, 151, 151, 143, 60, 58, 47, 70, 74, \
68, 121, 125, 120, 156, 164, 162, 197, 211, 213, \
228, 245, 249, 228, 246, 250, 229, 247, 251, 229, \
247, 251, 229, 247, 251, 229, 247, 251, 229, 247, \
251, 228, 246, 251, 228, 246, 250, 228, 246, 251, \
229, 246, 253, 229, 246, 253, 228, 245, 252, 228, \
245, 252, 227, 246, 252, 227, 246, 252, 225, 244, \
250, 230, 249, 253, 228, 246, 250, 228, 246, 250, \
229, 247, 251, 229, 247, 251, 229, 247, 251, 229, \
247, 251, 229, 248, 252, 220, 235, 237, 191, 198, \
194, 170, 179, 177, 183, 197, 198, 225, 236, 236, \
228, 241, 243, 227, 244, 249, 226, 246, 252, 228, \
247, 251, 229, 247, 251, 229, 247, 251, 229, 247, \
251, 229, 247, 251, 229, 247, 251, 229, 247, 251, \
228, 246, 250, 228, 246, 251, 229, 246, 253, 229, \
246, 253, 228, 245, 252, 228, 245, 252, 227, 246, \
252, 227, 246, 252, 225, 244, 250, 231, 249, 254, \
228, 246, 250, 229, 247, 251, 229, 247, 251, 229, \
247, 251, 229, 247, 251, 229, 247, 251, 229, 247, \
251, 231, 246, 249, 238, 251, 252, 235, 252, 255, \
229, 250, 255, 229, 246, 250, 227, 245, 250, 227, \
246, 253, 227, 248, 255, 229, 248, 253, 230, 248, \
252, 230, 248, 252, 230, 248, 252, 229, 247, 251, \
229, 247, 251, 229, 247, 251, 229, 247, 251, 228, \
246, 251, 228, 245, 252, 228, 245, 252, 229, 246, \
253, 228, 246, 253, 227, 246, 252, 227, 246, 252, \
226, 245, 251, 232, 250, 254, 229, 247, 251, 229, \
247, 251, 229, 247, 251, 229, 247, 251, 229, 247, \
251, 229, 247, 251, 230, 247, 251, 231, 246, 250, \
228, 245, 249, 227, 245, 251, 227, 247, 253, 230, \
247, 253, 230, 248, 254, 230, 248, 254, 230, 248, \
254, 230, 248, 253, 230, 248, 252, 230, 248, 252, \
230, 248, 252, 230, 248, 252, 230, 247, 252, 230, \
248, 252, 230, 248, 251, 229, 247, 252, 228, 245, \
252, 229, 246, 253, 229, 246, 253, 229, 246, 253, \
227, 246, 252, 227, 246, 252, 227, 246, 252, 232, \
250, 254, 229, 247, 251, 230, 247, 252, 230, 247, \
252, 230, 247, 252, 230, 247, 252, 230, 248, 252, \
230, 247, 251, 230, 247, 252, 230, 248, 253, 232, \
248, 252, 233, 248, 250, 232, 248, 252, 232, 248, \
252, 232, 248, 251, 233, 248, 251, 231, 248, 252, \
231, 249, 253, 231, 248, 253, 231, 248, 253, 231, \
249, 253, 231, 249, 253, 231, 249, 253, 231, 249, \
253, 231, 248, 253, 230, 247, 254, 230, 247, 254, \
230, 247, 254, 229, 247, 253, 228, 247, 253, 227, \
247, 253, 227, 247, 253, 231, 247, 252, 228, 244, \
248, 229, 244, 249, 229, 244, 249, 229, 245, 248, \
229, 244, 248, 229, 245, 248, 229, 245, 249, 229, \
245, 250, 229, 245, 251, 231, 245, 249, 233, 245, \
247, 231, 245, 248, 231, 245, 248, 232, 245, 247, \
232, 245, 247, 230, 245, 249, 230, 246, 249, 230, \
246, 250, 231, 246, 250, 231, 246, 251, 231, 247, \
252, 231, 246, 251, 230, 246, 251, 229, 246, 251, \
228, 245, 251, 227, 245, 250, 227, 244, 250, 227, \
244, 250, 226, 244, 251, 226, 244, 251, 226, 244, \
250, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '15194';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a84a3284c6995339842d8de7611d5bf7a';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_bird1';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{168, 167, 165, 167, 165, 163, 167, 166, 164, 168, 167, \
165, 168, 167, 165, 168, 167, 165, 168, 167, 165, \
169, 168, 166, 170, 169, 167, 171, 170, 168, 170, \
169, 167, 170, 169, 166, 170, 169, 164, 171, 170, \
165, 171, 170, 165, 169, 168, 163, 168, 168, 165, \
167, 167, 165, 166, 166, 164, 164, 164, 162, 163, \
163, 161, 164, 164, 162, 163, 163, 161, 163, 163, \
161, 163, 163, 161, 162, 162, 160, 162, 162, 160, \
161, 161, 159, 161, 161, 159, 161, 161, 159, 161, \
161, 159, 160, 160, 158, 168, 167, 165, 166, 165, \
163, 166, 165, 163, 166, 165, 163, 167, 166, 164, \
166, 165, 163, 165, 164, 162, 167, 166, 164, 171, \
170, 168, 169, 168, 166, 169, 168, 166, 169, 168, \
165, 171, 170, 164, 166, 166, 160, 166, 165, 159, \
167, 167, 161, 167, 167, 163, 166, 166, 164, 165, \
165, 163, 163, 163, 161, 162, 162, 160, 161, 161, \
159, 161, 161, 159, 162, 162, 160, 161, 161, 159, \
161, 161, 159, 161, 161, 159, 160, 160, 158, 160, \
160, 158, 160, 160, 158, 160, 160, 158, 160, 160, \
158, 170, 169, 167, 167, 166, 164, 168, 167, 165, \
168, 167, 165, 167, 166, 164, 169, 168, 166, 179, \
178, 176, 186, 185, 183, 182, 181, 179, 194, 193, \
191, 200, 199, 197, 207, 206, 204, 185, 184, 184, \
192, 191, 191, 186, 184, 185, 172, 170, 170, 167, \
167, 165, 167, 167, 165, 167, 167, 165, 166, 166, \
164, 165, 165, 163, 164, 164, 162, 163, 163, 161, \
163, 163, 161, 162, 162, 160, 162, 162, 160, 162, \
162, 160, 161, 161, 159, 161, 161, 159, 161, 161, \
159, 161, 161, 159, 161, 161, 159, 171, 170, 168, \
169, 168, 166, 169, 168, 166, 170, 168, 166, 179, \
177, 175, 187, 185, 184, 192, 190, 188, 177, 174, \
174, 174, 171, 172, 213, 210, 211, 219, 216, 217, \
206, 203, 205, 183, 180, 185, 179, 175, 179, 168, \
164, 166, 173, 168, 170, 165, 163, 160, 166, 165, \
161, 171, 170, 167, 171, 169, 167, 169, 167, 164, \
167, 166, 163, 166, 165, 163, 164, 164, 162, 163, \
163, 161, 162, 162, 160, 162, 162, 160, 161, 161, \
159, 161, 161, 159, 161, 161, 159, 161, 161, 159, \
161, 161, 159, 173, 172, 170, 171, 170, 168, 170, \
169, 167, 192, 189, 189, 236, 233, 233, 203, 199, \
199, 162, 159, 159, 157, 153, 155, 175, 168, 175, \
183, 176, 183, 165, 158, 165, 173, 167, 172, 154, \
149, 150, 140, 133, 131, 151, 142, 137, 170, 160, \
153, 166, 160, 151, 164, 160, 151, 181, 176, 168, \
174, 169, 163, 174, 169, 163, 171, 167, 162, 167, \
165, 162, 164, 164, 162, 163, 164, 162, 162, 162, \
160, 161, 161, 159, 161, 161, 159, 160, 160, 158, \
161, 161, 159, 161, 161, 159, 161, 161, 159, 176, \
175, 172, 173, 172, 170, 172, 171, 169, 203, 202, \
203, 227, 226, 228, 215, 214, 216, 135, 134, 136, \
138, 136, 138, 174, 170, 172, 132, 127, 130, 128, \
124, 127, 141, 138, 138, 144, 142, 135, 152, 148, \
140, 154, 148, 139, 185, 177, 168, 212, 207, 199, \
223, 220, 211, 216, 212, 201, 183, 179, 168, 168, \
163, 154, 169, 166, 158, 168, 166, 161, 165, 165, \
161, 163, 163, 161, 162, 162, 160, 161, 161, 159, \
161, 161, 159, 160, 160, 158, 161, 161, 159, 161, \
161, 159, 161, 161, 159, 176, 175, 173, 175, 174, \
172, 174, 172, 171, 165, 165, 167, 220, 220, 224, \
204, 204, 208, 138, 138, 142, 167, 166, 168, 163, \
162, 162, 137, 136, 135, 163, 162, 161, 181, 180, \
178, 185, 186, 177, 187, 185, 178, 198, 193, 188, \
227, 221, 218, 236, 230, 230, 240, 235, 233, 234, \
231, 225, 228, 224, 215, 198, 194, 183, 178, 175, \
164, 168, 167, 159, 165, 167, 160, 163, 164, 160, \
162, 162, 160, 162, 162, 160, 162, 162, 160, 161, \
161, 159, 161, 161, 159, 161, 161, 159, 161, 161, \
159, 178, 177, 175, 176, 175, 173, 172, 171, 169, \
141, 142, 144, 221, 224, 227, 234, 236, 239, 229, \
232, 235, 226, 227, 228, 169, 170, 166, 202, 203, \
199, 228, 228, 225, 208, 209, 205, 193, 194, 189, \
185, 185, 184, 202, 199, 202, 208, 202, 209, 192, \
185, 196, 206, 199, 208, 200, 194, 197, 199, 194, \
192, 238, 234, 225, 233, 230, 218, 185, 184, 174, \
165, 166, 158, 164, 165, 160, 162, 162, 160, 162, \
162, 160, 162, 162, 160, 162, 162, 160, 161, 161, \
159, 161, 161, 159, 161, 161, 159, 178, 178, 174, \
176, 176, 174, 173, 173, 172, 135, 138, 141, 219, \
222, 227, 252, 251, 255, 245, 240, 254, 223, 215, \
226, 186, 176, 181, 205, 198, 203, 204, 203, 208, \
186, 186, 191, 180, 178, 185, 168, 164, 172, 162, \
157, 165, 122, 116, 125, 100, 95, 108, 113, 108, \
120, 156, 149, 157, 151, 144, 149, 192, 184, 182, \
230, 224, 218, 223, 221, 215, 175, 175, 169, 162, \
163, 158, 162, 162, 160, 162, 162, 160, 162, 162, \
160, 162, 162, 160, 161, 161, 159, 161, 161, 159, \
160, 160, 158, 179, 180, 174, 178, 178, 176, 175, \
175, 176, 188, 188, 192, 221, 218, 224, 213, 201, \
211, 203, 183, 196, 195, 169, 181, 190, 164, 173, \
177, 160, 168, 141, 136, 142, 114, 114, 122, 107, \
103, 116, 106, 101, 112, 107, 103, 111, 88, 85, \
91, 68, 70, 77, 87, 88, 94, 116, 115, 120, \
124, 120, 124, 136, 129, 129, 147, 138, 137, 191, \
187, 184, 192, 191, 187, 164, 164, 161, 162, 162, \
160, 161, 161, 159, 162, 162, 160, 162, 162, 160, \
161, 161, 159, 161, 161, 159, 159, 159, 157, 181, \
182, 177, 179, 179, 177, 181, 181, 182, 196, 193, \
196, 192, 182, 182, 190, 171, 166, 176, 147, 145, \
168, 134, 136, 164, 132, 136, 165, 144, 147, 119, \
112, 112, 85, 85, 87, 83, 82, 90, 83, 82, \
89, 95, 94, 99, 84, 84, 87, 63, 69, 72, \
108, 113, 116, 174, 177, 178, 157, 158, 157, 155, \
152, 150, 141, 136, 133, 138, 133, 130, 184, 180, \
177, 174, 172, 169, 162, 162, 160, 162, 162, 160, \
162, 162, 160, 162, 162, 160, 162, 162, 160, 161, \
161, 159, 160, 160, 158, 184, 185, 179, 180, 180, \
177, 173, 174, 174, 197, 190, 191, 213, 201, 191, \
213, 197, 180, 167, 146, 136, 122, 97, 96, 123, \
100, 101, 135, 119, 120, 131, 122, 123, 112, 108, \
110, 99, 99, 104, 98, 99, 103, 132, 133, 134, \
128, 131, 130, 109, 113, 115, 168, 171, 173, 205, \
206, 206, 188, 187, 184, 192, 191, 187, 186, 184, \
180, 150, 145, 142, 152, 144, 142, 183, 179, 177, \
166, 166, 164, 164, 164, 162, 163, 163, 161, 163, \
163, 161, 162, 162, 160, 161, 161, 159, 161, 161, \
159, 185, 186, 181, 178, 178, 176, 147, 146, 146, \
203, 196, 192, 228, 220, 204, 209, 203, 181, 170, \
164, 153, 136, 127, 126, 128, 118, 117, 98, 89, \
90, 106, 97, 101, 117, 110, 115, 105, 107, 112, \
117, 121, 123, 148, 151, 151, 173, 176, 175, 178, \
179, 180, 191, 189, 191, 198, 194, 194, 193, 188, \
186, 199, 197, 194, 199, 199, 195, 189, 185, 182, \
159, 151, 148, 166, 161, 158, 173, 173, 171, 165, \
165, 163, 164, 164, 162, 164, 164, 162, 163, 163, \
161, 162, 162, 160, 161, 161, 159, 186, 186, 183, \
180, 177, 176, 159, 154, 154, 203, 195, 191, 222, \
212, 200, 224, 213, 198, 209, 194, 186, 202, 185, \
182, 201, 188, 184, 174, 166, 163, 143, 139, 137, \
138, 137, 138, 100, 100, 105, 116, 116, 121, 146, \
146, 151, 168, 168, 173, 167, 165, 167, 168, 166, \
167, 189, 186, 187, 192, 189, 189, 203, 201, 203, \
208, 207, 207, 212, 211, 206, 196, 195, 184, 151, \
151, 142, 161, 161, 159, 168, 168, 166, 166, 166, \
164, 165, 165, 163, 164, 164, 162, 164, 164, 162, \
162, 162, 160, 187, 187, 185, 183, 179, 178, 187, \
182, 181, 202, 192, 188, 216, 201, 189, 219, 198, \
185, 197, 168, 161, 185, 156, 154, 187, 164, 165, \
198, 184, 183, 192, 188, 186, 166, 167, 166, 116, \
115, 120, 97, 96, 102, 114, 113, 118, 128, 127, \
132, 144, 142, 144, 152, 150, 151, 166, 164, 165, \
182, 180, 181, 201, 199, 201, 203, 201, 203, 203, \
202, 198, 211, 211, 202, 177, 177, 170, 147, 147, \
145, 165, 165, 163, 168, 168, 166, 166, 166, 164, \
166, 166, 164, 166, 166, 164, 165, 165, 163, 188, \
188, 186, 180, 177, 176, 176, 171, 171, 178, 167, \
163, 188, 171, 160, 183, 160, 148, 180, 149, 143, \
176, 146, 146, 171, 150, 152, 174, 160, 162, 199, \
194, 196, 173, 173, 175, 141, 141, 143, 112, 112, \
114, 97, 96, 99, 99, 99, 101, 116, 114, 116, \
141, 139, 140, 158, 156, 157, 166, 164, 165, 187, \
185, 187, 199, 197, 198, 178, 177, 175, 200, 199, \
195, 206, 206, 203, 154, 154, 152, 150, 150, 148, \
169, 169, 167, 168, 168, 166, 168, 168, 166, 168, \
168, 166, 167, 167, 165, 189, 188, 186, 174, 170, \
169, 157, 152, 151, 144, 132, 132, 178, 164, 159, \
175, 163, 154, 169, 157, 152, 163, 154, 152, 159, \
153, 152, 152, 147, 148, 160, 157, 160, 165, 163, \
167, 171, 170, 171, 147, 147, 146, 130, 130, 130, \
126, 126, 126, 118, 116, 117, 127, 124, 126, 150, \
148, 149, 167, 165, 166, 181, 179, 180, 185, 184, \
185, 184, 182, 184, 187, 185, 187, 189, 188, 188, \
174, 174, 172, 160, 160, 158, 170, 170, 168, 168, \
168, 167, 168, 168, 166, 168, 168, 166, 168, 168, \
166, 192, 191, 189, 188, 185, 182, 155, 152, 150, \
122, 114, 114, 164, 155, 153, 167, 163, 158, 160, \
158, 153, 152, 152, 149, 146, 147, 146, 140, 141, \
142, 135, 134, 139, 124, 123, 128, 139, 139, 140, \
150, 150, 150, 155, 155, 155, 146, 146, 146, 133, \
132, 132, 129, 128, 128, 134, 133, 133, 144, 143, \
144, 155, 154, 153, 168, 165, 164, 167, 164, 164, \
170, 167, 168, 185, 184, 183, 180, 181, 177, 183, \
184, 180, 181, 182, 178, 168, 168, 164, 167, 167, \
164, 168, 168, 165, 166, 167, 166, 192, 191, 187, \
195, 195, 190, 157, 157, 154, 116, 113, 111, 164, \
159, 156, 175, 170, 167, 167, 162, 159, 162, 158, \
156, 152, 149, 149, 142, 142, 144, 133, 134, 138, \
107, 109, 113, 102, 102, 104, 128, 128, 130, 168, \
168, 170, 165, 165, 167, 151, 151, 151, 148, 148, \
148, 144, 144, 144, 147, 147, 147, 152, 151, 150, \
161, 160, 159, 175, 173, 173, 196, 195, 194, 212, \
212, 210, 200, 201, 197, 195, 196, 192, 198, 199, \
195, 183, 183, 180, 170, 168, 163, 167, 167, 164, \
166, 167, 166, 189, 193, 192, 190, 192, 193, 149, \
150, 150, 122, 119, 117, 179, 174, 171, 182, 177, \
174, 170, 165, 162, 168, 164, 162, 160, 157, 157, \
147, 146, 149, 138, 139, 144, 122, 124, 129, 97, \
97, 100, 104, 104, 106, 150, 150, 152, 180, 180, \
182, 177, 177, 177, 166, 166, 166, 159, 159, 159, \
167, 167, 166, 186, 188, 189, 206, 209, 212, 218, \
222, 224, 217, 220, 223, 213, 214, 216, 212, 210, \
210, 208, 206, 206, 206, 204, 205, 200, 197, 196, \
186, 183, 177, 170, 168, 163, 166, 166, 163, 199, \
208, 223, 193, 197, 212, 152, 155, 157, 150, 147, \
143, 190, 184, 181, 183, 178, 175, 170, 165, 162, \
171, 166, 164, 162, 159, 159, 154, 153, 155, 145, \
146, 151, 134, 137, 141, 110, 110, 112, 107, 107, \
109, 135, 135, 137, 170, 170, 172, 184, 184, 184, \
195, 196, 195, 198, 198, 198, 205, 205, 205, 208, \
210, 211, 213, 215, 217, 191, 194, 196, 188, 190, \
192, 192, 192, 191, 200, 197, 193, 200, 197, 194, \
201, 197, 194, 196, 192, 187, 186, 180, 172, 176, \
172, 165, 167, 166, 161, 210, 221, 254, 208, 214, \
239, 177, 180, 183, 182, 180, 174, 197, 192, 190, \
183, 178, 175, 171, 166, 164, 167, 163, 161, 156, \
153, 153, 156, 155, 158, 154, 155, 159, 146, 148, \
152, 123, 123, 125, 125, 125, 127, 133, 133, 135, \
153, 153, 155, 186, 186, 186, 201, 200, 200, 197, \
196, 196, 209, 208, 208, 197, 196, 194, 183, 181, \
179, 178, 176, 173, 182, 179, 178, 199, 195, 191, \
199, 194, 184, 187, 183, 172, 176, 172, 162, 170, \
166, 156, 198, 190, 181, 179, 173, 165, 164, 160, \
154, 208, 221, 255, 210, 216, 245, 203, 204, 212, \
206, 204, 205, 201, 200, 199, 184, 182, 182, 165, \
164, 163, 153, 152, 152, 153, 152, 152, 159, 159, \
159, 166, 166, 168, 169, 169, 170, 149, 149, 148, \
157, 157, 156, 158, 158, 157, 155, 154, 154, 181, \
179, 179, 179, 174, 175, 165, 159, 158, 176, 169, \
167, 171, 165, 159, 171, 166, 154, 170, 165, 152, \
151, 145, 139, 179, 172, 168, 214, 205, 192, 220, \
209, 191, 196, 190, 172, 149, 149, 135, 182, 175, \
168, 203, 197, 189, 162, 156, 148, 185, 202, 255, \
197, 206, 240, 220, 224, 234, 215, 216, 219, 196, \
196, 196, 181, 181, 181, 163, 163, 163, 155, 156, \
156, 165, 165, 165, 171, 171, 171, 170, 170, 170, \
175, 175, 174, 165, 165, 163, 166, 166, 164, 174, \
174, 172, 167, 167, 164, 169, 166, 162, 165, 160, \
155, 147, 140, 133, 152, 143, 134, 167, 159, 149, \
183, 177, 163, 179, 173, 157, 141, 134, 125, 113, \
107, 104, 153, 146, 139, 217, 205, 192, 231, 221, \
205, 203, 198, 185, 153, 146, 139, 158, 151, 143, \
189, 182, 174, 163, 181, 255, 192, 206, 242, 225, \
235, 238, 219, 222, 222, 191, 191, 191, 172, 172, \
172, 167, 167, 167, 172, 172, 172, 174, 174, 174, \
172, 172, 172, 172, 172, 172, 171, 171, 170, 169, \
169, 167, 160, 160, 158, 152, 152, 150, 158, 158, \
155, 164, 162, 154, 175, 171, 160, 183, 177, 164, \
167, 160, 145, 139, 131, 119, 163, 156, 146, 196, \
190, 179, 188, 182, 171, 150, 145, 138, 117, 113, \
111, 154, 146, 142, 186, 174, 166, 214, 201, 191, \
186, 179, 168, 122, 115, 105, 150, 143, 137, 164, \
179, 253, 205, 216, 244, 223, 230, 225, 201, 203, \
201, 174, 174, 174, 163, 163, 163, 162, 162, 162, \
164, 164, 164, 164, 164, 163, 159, 159, 159, 162, \
161, 161, 158, 158, 158, 154, 154, 152, 143, 144, \
142, 124, 124, 122, 136, 136, 133, 166, 164, 156, \
176, 172, 162, 188, 182, 171, 194, 186, 172, 157, \
149, 137, 119, 111, 104, 162, 154, 148, 197, 191, \
178, 198, 190, 174, 177, 168, 159, 129, 123, 119, \
123, 115, 112, 176, 163, 156, 203, 196, 182, 158, \
152, 141, 114, 107, 102, 174, 184, 246, 213, 219, \
235, 207, 209, 201, 179, 179, 177, 159, 159, 159, \
153, 153, 153, 156, 156, 156, 162, 162, 162, 160, \
160, 160, 149, 150, 150, 131, 131, 132, 130, 130, \
130, 133, 132, 129, 138, 136, 133, 135, 134, 131, \
118, 118, 117, 129, 127, 123, 173, 169, 163, 193, \
187, 179, 198, 189, 181, 187, 180, 170, 148, 142, \
135, 132, 126, 120, 166, 161, 148, 194, 185, 166, \
198, 185, 169, 164, 159, 148, 115, 112, 107, 149, \
143, 139, 203, 196, 185, 190, 183, 172, 119, 112, \
105, 183, 191, 239, 216, 218, 224, 191, 191, 188, \
166, 166, 167, 156, 156, 156, 154, 154, 154, 160, \
160, 160, 164, 165, 166, 161, 162, 164, 143, 144, \
146, 118, 119, 121, 116, 117, 117, 132, 130, 125, \
139, 133, 125, 128, 122, 118, 99, 98, 101, 89, \
89, 89, 138, 136, 134, 195, 190, 185, 203, 196, \
190, 186, 181, 173, 187, 183, 173, 164, 160, 151, \
127, 123, 113, 163, 156, 148, 200, 190, 180, 187, \
182, 162, 121, 119, 107, 83, 80, 82, 125, 117, \
117, 194, 188, 177, 186, 181, 167, 186, 194, 238, \
204, 206, 211, 184, 183, 182, 168, 168, 169, 160, \
160, 160, 159, 159, 159, 155, 155, 155, 151, 151, \
152, 158, 159, 161, 142, 143, 145, 115, 116, 118, \
115, 116, 117, 134, 132, 127, 147, 140, 132, 150, \
142, 136, 132, 127, 127, 103, 102, 101, 106, 104, \
102, 166, 161, 156, 191, 184, 178, 190, 185, 178, \
178, 174, 166, 163, 159, 151, 148, 144, 136, 139, \
132, 126, 171, 163, 152, 190, 184, 166, 175, 170, \
156, 120, 115, 112, 88, 81, 79, 133, 127, 118, \
199, 193, 181, 191, 201, 239, 208, 211, 213, 187, \
186, 186, 174, 174, 176, 166, 166, 165, 162, 162, \
162, 156, 156, 156, 153, 153, 154, 160, 161, 163, \
143, 144, 146, 115, 116, 118, 110, 112, 112, 129, \
129, 124, 143, 135, 127, 145, 133, 125, 137, 128, \
124, 121, 118, 116, 112, 110, 108, 144, 139, 135, \
177, 170, 164, 174, 168, 163, 169, 164, 159, 137, \
132, 128, 131, 126, 122, 149, 142, 136, 164, 156, \
145, 180, 172, 157, 183, 174, 159, 177, 168, 157, \
118, 115, 108, 104, 100, 94, 155, 147, 140, 189, \
199, 234, 205, 208, 209, 191, 190, 190, 169, 168, \
171, 156, 156, 156, 165, 165, 165, 160, 160, 160, \
158, 158, 159, 154, 155, 157, 145, 146, 149, 125, \
126, 128, 109, 111, 112, 123, 123, 120, 141, 132, \
123, 141, 126, 116, 126, 113, 105, 101, 97, 94, \
91, 89, 87, 129, 123, 119, 172, 165, 159, 159, \
153, 149, 134, 129, 126, 118, 113, 109, 118, 113, \
110, 155, 149, 143, 168, 161, 149, 180, 171, 158, \
187, 173, 157, 172, 160, 142, 132, 133, 122, 101, \
97, 94, 155, 145, 141, 188, 196, 224, 194, 194, \
195, 183, 183, 183, 163, 164, 166, 149, 149, 149, \
154, 154, 154, 160, 160, 160, 159, 159, 159, 151, \
152, 153, 143, 143, 144, 124, 124, 125, 102, 103, \
104, 108, 108, 106, 129, 122, 116, 139, 127, 118, \
132, 118, 110, 103, 96, 92, 79, 74, 72, 97, \
90, 87, 147, 139, 136, 146, 141, 139, 125, 122, \
120, 102, 97, 96, 106, 99, 98, 161, 153, 148, \
175, 167, 155, 163, 154, 143, 181, 169, 158, 188, \
178, 165, 130, 127, 117, 84, 81, 78, 129, 121, \
118, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '15504';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1abcf2bd624a2682e4a98c136061d0faba';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_bird3';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{72, 79, 77, 82, 89, 86, 83, 89, 87, 88, 94, \
92, 90, 96, 94, 86, 91, 89, 99, 103, 101, \
90, 94, 92, 105, 109, 107, 95, 100, 98, 104, \
109, 107, 99, 103, 101, 106, 108, 107, 102, 107, \
103, 86, 87, 83, 86, 84, 82, 111, 111, 109, \
110, 112, 109, 101, 102, 99, 98, 103, 99, 106, \
110, 106, 104, 105, 102, 118, 120, 117, 112, 114, \
111, 129, 132, 129, 87, 87, 84, 111, 115, 112, \
114, 117, 114, 125, 128, 127, 119, 123, 122, 118, \
122, 121, 131, 135, 135, 74, 79, 77, 83, 88, \
87, 83, 89, 87, 89, 95, 93, 89, 95, 93, \
86, 92, 89, 99, 104, 99, 89, 94, 90, 104, \
109, 104, 95, 100, 95, 104, 109, 105, 97, 102, \
98, 108, 110, 107, 100, 106, 99, 83, 84, 79, \
96, 94, 92, 114, 115, 113, 111, 115, 112, 112, \
114, 110, 96, 100, 95, 98, 102, 97, 98, 99, \
96, 121, 123, 120, 109, 111, 108, 127, 130, 127, \
91, 91, 89, 108, 112, 109, 115, 118, 115, 123, \
126, 125, 121, 125, 124, 115, 119, 118, 132, 136, \
136, 76, 80, 79, 85, 88, 87, 85, 90, 88, \
90, 96, 94, 88, 94, 92, 88, 94, 90, 99, \
104, 98, 91, 96, 90, 105, 110, 104, 95, 100, \
94, 106, 111, 105, 97, 103, 97, 111, 114, 109, \
96, 102, 95, 80, 81, 74, 99, 99, 96, 116, \
119, 116, 110, 115, 111, 119, 122, 117, 104, 109, \
102, 106, 110, 103, 97, 98, 94, 118, 120, 117, \
108, 110, 107, 126, 130, 126, 99, 98, 96, 108, \
112, 109, 118, 121, 118, 121, 124, 123, 125, 129, \
128, 117, 121, 120, 132, 136, 137, 77, 81, 80, \
85, 89, 88, 85, 90, 88, 92, 98, 94, 87, \
93, 90, 90, 95, 91, 99, 104, 99, 93, 98, \
93, 105, 110, 105, 96, 101, 96, 108, 113, 108, \
97, 102, 98, 113, 116, 111, 92, 93, 85, 74, \
74, 67, 99, 102, 98, 117, 122, 118, 108, 114, \
110, 123, 125, 120, 111, 113, 107, 120, 122, 116, \
96, 97, 93, 108, 113, 109, 97, 100, 97, 124, \
129, 125, 100, 103, 100, 104, 109, 105, 125, 128, \
125, 125, 129, 127, 130, 136, 133, 122, 127, 124, \
133, 139, 137, 76, 82, 80, 83, 89, 87, 84, \
90, 86, 93, 99, 94, 87, 93, 89, 91, 96, \
92, 98, 103, 99, 94, 99, 95, 105, 110, 106, \
97, 102, 98, 109, 114, 110, 97, 102, 99, 113, \
117, 113, 86, 84, 77, 73, 74, 68, 102, 108, \
103, 118, 124, 120, 107, 113, 109, 123, 127, 124, \
110, 113, 110, 126, 129, 126, 104, 106, 103, 113, \
120, 115, 102, 104, 101, 119, 124, 120, 106, 111, \
107, 101, 106, 102, 127, 131, 127, 121, 123, 120, \
123, 128, 124, 102, 104, 101, 112, 117, 115, 75, \
81, 79, 82, 88, 86, 83, 89, 86, 93, 99, \
95, 86, 92, 88, 92, 98, 94, 97, 102, 98, \
95, 100, 96, 104, 109, 105, 98, 103, 99, 109, \
114, 110, 98, 103, 100, 113, 118, 115, 80, 80, \
75, 78, 79, 74, 105, 110, 106, 120, 126, 122, \
109, 115, 111, 124, 130, 128, 115, 121, 121, 128, \
133, 133, 116, 118, 117, 119, 123, 119, 105, 104, \
102, 118, 120, 117, 98, 100, 97, 88, 90, 87, \
98, 99, 96, 89, 88, 86, 97, 99, 96, 82, \
82, 80, 109, 112, 111, 75, 81, 79, 82, 88, \
86, 83, 89, 85, 93, 99, 95, 86, 92, 88, \
93, 99, 95, 96, 101, 97, 96, 101, 97, 103, \
108, 104, 98, 103, 99, 109, 114, 110, 98, 104, \
101, 111, 117, 116, 78, 80, 75, 91, 94, 90, \
112, 118, 114, 122, 128, 124, 115, 121, 117, 126, \
131, 128, 113, 117, 114, 122, 126, 123, 96, 96, \
94, 100, 103, 100, 78, 76, 75, 93, 95, 92, \
79, 80, 78, 84, 84, 82, 105, 105, 103, 101, \
103, 100, 125, 129, 126, 112, 114, 111, 129, 136, \
133, 75, 81, 79, 80, 86, 84, 82, 88, 85, \
93, 99, 96, 85, 91, 88, 94, 100, 97, 93, \
99, 96, 97, 102, 99, 101, 107, 103, 101, 106, \
102, 110, 115, 111, 105, 111, 107, 110, 116, 114, \
77, 78, 74, 104, 108, 104, 107, 112, 108, 114, \
119, 115, 95, 100, 96, 106, 109, 104, 82, 84, \
80, 100, 102, 98, 77, 78, 74, 95, 98, 95, \
86, 86, 84, 108, 110, 107, 110, 112, 110, 95, \
96, 94, 131, 133, 131, 115, 119, 116, 132, 138, \
135, 115, 119, 116, 125, 133, 131, 75, 81, 79, \
79, 85, 83, 81, 87, 85, 92, 98, 96, 85, \
91, 89, 96, 102, 100, 96, 102, 100, 101, 107, \
105, 104, 110, 107, 103, 109, 105, 107, 113, 109, \
97, 103, 99, 99, 102, 99, 69, 68, 66, 93, \
96, 93, 79, 81, 78, 96, 98, 95, 82, 84, \
81, 106, 109, 106, 94, 98, 94, 119, 123, 119, \
105, 109, 105, 111, 116, 112, 104, 109, 105, 113, \
118, 115, 117, 122, 120, 95, 98, 97, 128, 133, \
131, 114, 117, 116, 131, 136, 134, 117, 119, 118, \
125, 130, 130, 84, 90, 88, 78, 84, 82, 87, \
93, 91, 95, 101, 99, 90, 96, 94, 98, 104, \
102, 95, 101, 99, 95, 101, 99, 91, 97, 94, \
82, 88, 84, 84, 90, 86, 70, 76, 72, 81, \
84, 81, 71, 70, 68, 101, 105, 101, 95, 99, \
95, 118, 121, 118, 109, 112, 109, 125, 129, 126, \
112, 118, 114, 124, 129, 125, 110, 116, 112, 108, \
113, 109, 104, 109, 105, 108, 114, 110, 119, 124, \
123, 101, 104, 103, 129, 134, 132, 113, 116, 115, \
130, 135, 133, 118, 121, 120, 122, 127, 127, 75, \
81, 79, 76, 82, 80, 87, 93, 91, 87, 93, \
91, 73, 79, 77, 78, 84, 82, 69, 75, 73, \
71, 77, 75, 75, 81, 78, 80, 86, 82, 92, \
98, 94, 91, 97, 93, 93, 97, 93, 76, 76, \
74, 113, 116, 113, 108, 113, 109, 119, 124, 120, \
109, 114, 111, 121, 127, 123, 111, 118, 114, 120, \
127, 123, 112, 118, 114, 106, 111, 107, 107, 112, \
108, 106, 112, 108, 123, 127, 126, 108, 111, 109, \
129, 135, 133, 115, 118, 117, 128, 134, 132, 120, \
123, 122, 121, 125, 126, 67, 73, 71, 68, 74, \
72, 61, 67, 65, 63, 69, 67, 56, 62, 60, \
78, 84, 82, 77, 83, 81, 96, 102, 100, 94, \
100, 97, 105, 111, 108, 103, 109, 106, 100, 106, \
102, 87, 91, 88, 78, 78, 76, 107, 110, 107, \
106, 113, 108, 116, 123, 118, 109, 115, 111, 119, \
127, 122, 112, 120, 115, 117, 125, 120, 117, 123, \
118, 105, 110, 106, 109, 114, 111, 104, 109, 107, \
125, 130, 129, 109, 113, 112, 129, 135, 133, 115, \
119, 117, 127, 133, 131, 123, 126, 125, 119, 123, \
123, 67, 73, 71, 68, 74, 72, 73, 79, 77, \
81, 87, 85, 81, 87, 85, 94, 100, 98, 87, \
93, 91, 100, 106, 104, 92, 98, 96, 105, 111, \
109, 101, 107, 105, 100, 106, 104, 84, 89, 85, \
82, 87, 83, 100, 105, 101, 108, 116, 110, 114, \
123, 117, 110, 118, 113, 117, 124, 120, 121, 126, \
121, 134, 138, 131, 151, 156, 148, 135, 140, 134, \
128, 132, 127, 115, 117, 115, 126, 133, 130, 131, \
135, 139, 130, 137, 135, 114, 121, 118, 126, 132, \
130, 123, 129, 127, 116, 122, 122, 68, 74, 72, \
70, 76, 74, 80, 86, 84, 83, 89, 87, 81, \
87, 85, 91, 97, 95, 85, 91, 89, 100, 106, \
104, 91, 97, 95, 105, 111, 109, 99, 105, 103, \
102, 108, 105, 87, 92, 88, 90, 95, 91, 92, \
97, 94, 111, 117, 114, 114, 120, 117, 114, 121, \
117, 120, 126, 119, 149, 153, 145, 166, 169, 160, \
143, 145, 138, 97, 99, 91, 148, 147, 133, 132, \
129, 117, 130, 135, 130, 138, 141, 148, 135, 142, \
143, 117, 124, 121, 127, 132, 130, 127, 133, 131, \
116, 122, 122, 68, 74, 72, 70, 76, 74, 81, \
87, 85, 82, 88, 86, 82, 88, 86, 91, 97, \
95, 85, 91, 89, 101, 107, 105, 90, 96, 94, \
105, 111, 109, 97, 103, 102, 103, 109, 106, 89, \
94, 90, 97, 102, 98, 84, 89, 85, 115, 120, \
115, 120, 125, 119, 135, 140, 134, 145, 150, 140, \
170, 174, 161, 182, 183, 172, 156, 157, 148, 117, \
116, 105, 153, 143, 126, 138, 125, 108, 134, 136, \
128, 148, 152, 161, 141, 146, 150, 120, 126, 124, \
124, 130, 128, 130, 136, 134, 115, 121, 120, 69, \
75, 73, 70, 76, 74, 82, 88, 86, 81, 87, \
85, 84, 90, 88, 90, 96, 94, 86, 92, 90, \
102, 108, 106, 90, 96, 94, 105, 112, 110, 96, \
102, 100, 104, 110, 108, 89, 94, 91, 103, 108, \
104, 91, 95, 90, 139, 143, 132, 152, 157, 144, \
161, 167, 154, 167, 172, 156, 170, 172, 158, 181, \
181, 170, 178, 178, 167, 168, 164, 152, 144, 129, \
116, 131, 112, 100, 132, 132, 124, 155, 160, 171, \
139, 144, 150, 122, 129, 126, 119, 125, 123, 130, \
136, 135, 112, 118, 118, 70, 76, 74, 72, 78, \
76, 82, 88, 86, 80, 86, 84, 85, 91, 89, \
90, 96, 94, 88, 94, 92, 104, 110, 108, 89, \
96, 94, 104, 113, 110, 95, 103, 99, 107, 112, \
109, 91, 94, 92, 119, 122, 116, 142, 146, 136, \
171, 175, 159, 179, 184, 167, 182, 188, 170, 184, \
187, 170, 175, 177, 162, 172, 175, 162, 174, 176, \
164, 149, 149, 139, 112, 110, 103, 101, 98, 95, \
129, 130, 121, 162, 163, 172, 137, 142, 147, 125, \
130, 126, 116, 122, 120, 130, 137, 137, 111, 117, \
117, 75, 81, 79, 79, 85, 83, 83, 89, 87, \
80, 86, 84, 87, 93, 91, 89, 95, 93, 89, \
95, 93, 107, 113, 111, 90, 97, 95, 107, 116, \
114, 95, 102, 99, 112, 117, 112, 118, 121, 112, \
154, 158, 145, 177, 181, 165, 187, 191, 174, 193, \
195, 178, 193, 191, 176, 185, 184, 169, 179, 181, \
166, 178, 181, 167, 177, 182, 171, 134, 139, 132, \
98, 100, 95, 110, 108, 102, 144, 141, 120, 163, \
157, 153, 142, 141, 139, 127, 131, 127, 114, 119, \
117, 130, 138, 137, 111, 117, 117, 79, 85, 83, \
78, 84, 82, 85, 91, 89, 83, 89, 87, 92, \
98, 96, 91, 97, 95, 90, 96, 94, 103, 109, \
107, 91, 98, 96, 109, 116, 114, 102, 107, 101, \
132, 136, 125, 161, 165, 150, 177, 181, 164, 183, \
188, 169, 189, 193, 176, 191, 190, 174, 180, 173, \
159, 173, 170, 155, 181, 183, 168, 179, 183, 169, \
166, 172, 162, 108, 112, 104, 96, 91, 83, 127, \
117, 102, 160, 148, 117, 125, 110, 92, 139, 131, \
120, 130, 134, 129, 112, 117, 116, 130, 138, 137, \
112, 118, 118, 74, 80, 78, 75, 81, 79, 89, \
95, 93, 86, 92, 90, 95, 101, 99, 92, 98, \
96, 91, 97, 95, 100, 106, 104, 93, 99, 96, \
110, 117, 108, 137, 142, 127, 162, 166, 147, 174, \
178, 161, 178, 183, 166, 181, 184, 169, 184, 185, \
169, 180, 180, 164, 173, 172, 157, 179, 179, 163, \
174, 175, 160, 162, 165, 151, 138, 139, 128, 101, \
96, 86, 112, 103, 86, 130, 117, 93, 157, 140, \
116, 142, 124, 100, 149, 139, 120, 131, 134, 130, \
111, 117, 115, 128, 136, 135, 112, 119, 119, 69, \
75, 74, 73, 79, 78, 88, 93, 94, 81, 87, \
87, 92, 98, 96, 88, 94, 91, 92, 96, 97, \
97, 102, 102, 102, 108, 103, 121, 127, 116, 150, \
154, 137, 164, 168, 149, 172, 176, 158, 177, 179, \
162, 179, 184, 169, 186, 190, 175, 185, 189, 174, \
179, 184, 166, 172, 170, 155, 153, 154, 139, 129, \
130, 116, 115, 106, 93, 115, 102, 86, 117, 103, \
84, 117, 103, 80, 145, 129, 106, 160, 145, 122, \
144, 141, 124, 130, 135, 133, 111, 116, 116, 127, \
135, 134, 115, 119, 120, 68, 74, 74, 71, 77, \
77, 80, 85, 88, 80, 85, 87, 91, 97, 95, \
85, 92, 89, 90, 97, 97, 95, 102, 101, 96, \
103, 96, 111, 116, 106, 149, 153, 137, 157, 160, \
144, 163, 166, 150, 163, 162, 148, 167, 171, 155, \
170, 175, 160, 166, 158, 143, 166, 141, 125, 150, \
129, 113, 125, 119, 100, 110, 101, 83, 113, 96, \
78, 113, 96, 76, 107, 92, 74, 95, 82, 67, \
93, 83, 68, 120, 114, 100, 118, 122, 114, 127, \
135, 134, 111, 116, 117, 125, 133, 132, 116, 121, \
122, 68, 74, 74, 70, 76, 76, 77, 83, 85, \
79, 84, 86, 90, 96, 95, 82, 91, 88, 89, \
99, 95, 91, 100, 94, 103, 109, 103, 132, 135, \
126, 147, 149, 134, 143, 144, 129, 141, 142, 129, \
131, 130, 119, 162, 159, 144, 154, 140, 120, 140, \
110, 83, 138, 98, 67, 125, 97, 73, 111, 96, \
73, 109, 92, 69, 108, 89, 69, 99, 82, 65, \
84, 71, 56, 72, 64, 55, 86, 85, 82, 120, \
122, 121, 108, 114, 113, 126, 134, 134, 111, 116, \
117, 122, 130, 130, 117, 123, 123, 68, 74, 74, \
70, 76, 76, 76, 81, 83, 80, 85, 87, 89, \
95, 94, 82, 90, 88, 89, 96, 91, 75, 78, \
71, 80, 81, 77, 116, 117, 108, 127, 127, 112, \
113, 111, 97, 100, 98, 88, 108, 106, 99, 144, \
133, 119, 113, 86, 67, 102, 67, 38, 119, 93, \
58, 108, 91, 67, 102, 86, 67, 96, 80, 61, \
87, 72, 56, 72, 60, 49, 71, 65, 58, 93, \
91, 88, 103, 106, 107, 125, 132, 134, 107, 114, \
112, 124, 132, 131, 112, 117, 117, 120, 128, 127, \
117, 125, 124, 67, 74, 74, 70, 76, 76, 73, \
81, 82, 79, 86, 87, 88, 96, 94, 81, 88, \
87, 86, 89, 86, 56, 54, 47, 51, 48, 43, \
79, 78, 70, 83, 83, 72, 58, 58, 49, 45, \
45, 40, 53, 51, 48, 62, 55, 47, 61, 44, \
34, 92, 67, 46, 102, 82, 61, 92, 78, 62, \
85, 72, 57, 74, 62, 50, 66, 58, 49, 83, \
79, 74, 82, 83, 81, 101, 103, 102, 100, 104, \
103, 120, 128, 127, 108, 113, 110, 123, 130, 129, \
112, 118, 118, 117, 124, 124, 119, 126, 124, 65, \
75, 74, 68, 75, 75, 70, 80, 80, 78, 88, \
87, 87, 95, 94, 81, 88, 84, 76, 77, 72, \
55, 50, 45, 53, 49, 42, 61, 57, 49, 52, \
50, 44, 26, 31, 29, 25, 28, 27, 26, 28, \
27, 28, 29, 28, 58, 51, 44, 88, 70, 50, \
84, 69, 50, 74, 63, 49, 64, 54, 43, 72, \
66, 60, 79, 77, 75, 100, 102, 101, 78, 80, \
79, 91, 92, 92, 97, 99, 99, 117, 124, 122, \
109, 113, 112, 122, 127, 127, 114, 120, 120, 115, \
121, 120, 122, 127, 123, 64, 74, 73, 67, 74, \
74, 70, 78, 78, 79, 88, 86, 87, 94, 88, \
87, 94, 84, 62, 63, 52, 62, 58, 50, 60, \
58, 50, 66, 62, 53, 59, 56, 49, 28, 30, \
28, 27, 29, 28, 28, 30, 29, 30, 31, 30, \
55, 51, 43, 74, 63, 45, 65, 55, 39, 56, \
52, 43, 65, 63, 58, 95, 95, 94, 67, 68, \
69, 58, 58, 58, 49, 50, 49, 72, 72, 72, \
87, 89, 88, 115, 122, 120, 109, 113, 112, 119, \
125, 125, 115, 121, 121, 112, 118, 118, 123, 128, \
126, 63, 73, 72, 65, 73, 72, 68, 76, 75, \
80, 87, 83, 77, 83, 73, 73, 80, 68, 72, \
73, 65, 67, 62, 56, 67, 65, 56, 73, 70, \
59, 68, 62, 54, 33, 31, 30, 27, 29, 28, \
28, 30, 29, 28, 30, 29, 35, 36, 31, 48, \
45, 36, 46, 42, 35, 64, 64, 60, 58, 60, \
58, 52, 53, 54, 33, 33, 34, 30, 28, 29, \
32, 31, 32, 59, 58, 58, 77, 79, 78, 116, \
122, 120, 110, 114, 113, 117, 122, 122, 116, 122, \
122, 109, 115, 115, 124, 128, 128, 61, 71, 70, \
64, 72, 72, 64, 70, 71, 74, 81, 77, 73, \
79, 69, 74, 79, 72, 72, 72, 70, 68, 63, \
57, 70, 67, 57, 74, 70, 58, 77, 70, 61, \
53, 50, 48, 36, 38, 37, 36, 38, 38, 34, \
36, 36, 27, 28, 29, 30, 32, 32, 33, 32, \
35, 37, 37, 37, 30, 31, 29, 29, 29, 28, \
29, 29, 29, 30, 29, 30, 35, 34, 35, 67, \
66, 67, 74, 77, 76, 114, 121, 119, 111, 116, \
115, 113, 119, 119, 117, 123, 123, 106, 112, 112, \
123, 128, 129, 61, 69, 71, 62, 70, 72, 65, \
73, 77, 77, 86, 85, 77, 87, 84, 76, 83, \
82, 59, 56, 54, 67, 59, 53, 67, 62, 52, \
70, 65, 54, 75, 70, 59, 61, 61, 56, 43, \
48, 48, 41, 44, 45, 43, 44, 46, 26, 29, \
30, 28, 32, 33, 26, 30, 31, 28, 30, 30, \
31, 31, 31, 32, 32, 32, 36, 36, 37, 41, \
42, 44, 39, 40, 41, 86, 88, 89, 81, 86, \
86, 113, 119, 119, 112, 117, 117, 110, 116, 116, \
118, 124, 124, 104, 111, 110, 121, 129, 128, 60, \
68, 70, 61, 69, 71, 65, 73, 73, 77, 87, \
84, 67, 76, 77, 67, 70, 70, 56, 52, 46, \
63, 55, 47, 64, 59, 49, 67, 63, 51, 69, \
64, 53, 66, 67, 61, 78, 83, 83, 62, 65, \
66, 53, 54, 56, 25, 28, 29, 26, 30, 31, \
31, 35, 36, 33, 35, 35, 40, 41, 40, 45, \
46, 45, 38, 39, 40, 64, 66, 68, 58, 59, \
61, 104, 107, 108, 99, 105, 105, 112, 118, 118, \
112, 118, 119, 106, 112, 112, 118, 124, 124, 102, \
109, 109, 120, 128, 128, 60, 68, 70, 61, 69, \
71, 65, 72, 72, 72, 83, 81, 50, 56, 55, \
52, 50, 45, 62, 55, 45, 66, 57, 48, 67, \
63, 52, 71, 66, 55, 73, 68, 56, 74, 74, \
69, 102, 107, 107, 75, 78, 80, 53, 55, 57, \
32, 36, 37, 37, 41, 42, 40, 44, 45, 50, \
53, 53, 49, 52, 51, 77, 80, 79, 69, 73, \
73, 105, 109, 110, 95, 99, 100, 116, 120, 121, \
110, 116, 116, 111, 117, 117, 115, 121, 121, 105, \
111, 111, 120, 126, 126, 102, 109, 109, 121, 129, \
128, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '15814';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1ab445b4ac1d6cfcbab2a6c644658dfa61';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_deer2';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{44, 49, 45, 41, 46, 42, 34, 39, 35, 36, 38, \
38, 37, 39, 38, 33, 35, 32, 52, 55, 49, \
58, 60, 57, 50, 52, 52, 41, 43, 40, 50, \
52, 46, 74, 77, 71, 48, 53, 49, 30, 35, \
31, 37, 43, 39, 57, 61, 56, 67, 67, 57, \
55, 53, 48, 36, 34, 29, 81, 81, 60, 84, \
87, 74, 35, 39, 32, 70, 72, 60, 72, 71, \
61, 57, 56, 50, 53, 54, 49, 47, 46, 40, \
107, 105, 88, 119, 117, 94, 52, 55, 47, 33, \
35, 35, 27, 29, 29, 40, 46, 41, 30, 35, \
31, 30, 36, 31, 42, 45, 43, 40, 41, 39, \
37, 39, 34, 54, 57, 49, 44, 46, 41, 40, \
42, 41, 36, 38, 35, 37, 39, 34, 69, 72, \
66, 57, 62, 58, 31, 36, 32, 26, 31, 27, \
43, 48, 43, 67, 69, 60, 39, 40, 33, 31, \
32, 25, 78, 80, 64, 64, 68, 58, 36, 40, \
33, 71, 73, 61, 62, 61, 51, 64, 64, 58, \
55, 58, 52, 50, 51, 45, 121, 121, 108, 118, \
118, 99, 50, 53, 42, 40, 43, 35, 34, 37, \
28, 31, 36, 32, 26, 31, 27, 34, 39, 35, \
41, 44, 40, 42, 44, 39, 41, 44, 36, 63, \
66, 56, 49, 51, 45, 36, 38, 37, 33, 35, \
32, 40, 42, 36, 56, 60, 53, 50, 55, 51, \
29, 34, 30, 24, 29, 26, 44, 49, 44, 58, \
61, 53, 35, 38, 30, 32, 34, 26, 61, 64, \
53, 53, 57, 51, 45, 48, 41, 81, 83, 71, \
68, 67, 57, 63, 64, 57, 54, 60, 52, 50, \
52, 48, 106, 107, 97, 102, 103, 89, 60, 63, \
54, 81, 84, 72, 56, 60, 47, 30, 35, 31, \
30, 35, 31, 40, 45, 41, 42, 45, 40, 43, \
46, 40, 39, 42, 33, 70, 74, 61, 64, 67, \
59, 39, 40, 40, 33, 35, 32, 45, 47, 41, \
58, 61, 55, 43, 48, 44, 34, 38, 35, 31, \
36, 32, 61, 65, 61, 61, 66, 59, 31, 36, \
26, 26, 31, 22, 46, 50, 44, 51, 55, 52, \
49, 53, 46, 86, 88, 76, 73, 72, 62, 55, \
57, 50, 42, 50, 41, 35, 39, 35, 60, 63, \
55, 83, 85, 74, 60, 62, 58, 72, 75, 64, \
53, 56, 45, 39, 42, 37, 38, 42, 37, 42, \
45, 40, 37, 42, 39, 42, 47, 41, 41, 43, \
33, 75, 77, 63, 59, 62, 57, 31, 34, 37, \
31, 35, 32, 29, 31, 28, 43, 45, 45, 35, \
38, 37, 46, 48, 49, 41, 44, 43, 70, 73, \
68, 67, 71, 64, 38, 41, 37, 30, 33, 30, \
49, 52, 47, 41, 45, 41, 49, 51, 46, 71, \
74, 65, 61, 62, 53, 51, 55, 46, 40, 48, \
39, 26, 31, 28, 44, 46, 39, 82, 84, 72, \
58, 60, 58, 39, 41, 37, 31, 33, 28, 39, \
41, 36, 37, 39, 34, 47, 49, 44, 46, 48, \
45, 38, 40, 35, 34, 35, 26, 71, 73, 61, \
54, 57, 53, 31, 34, 38, 43, 46, 43, 26, \
28, 27, 26, 27, 32, 28, 29, 31, 36, 37, \
42, 41, 43, 44, 72, 74, 67, 62, 65, 57, \
37, 38, 37, 39, 40, 42, 57, 59, 55, 41, \
43, 38, 50, 52, 49, 52, 54, 49, 47, 50, \
41, 48, 53, 43, 37, 44, 35, 31, 35, 32, \
61, 63, 55, 86, 88, 75, 45, 47, 45, 32, \
34, 33, 27, 29, 28, 41, 43, 38, 37, 39, \
34, 45, 48, 43, 61, 57, 51, 83, 78, 73, \
38, 38, 33, 52, 54, 46, 46, 46, 41, 33, \
32, 32, 59, 60, 58, 30, 32, 33, 24, 26, \
29, 29, 31, 32, 29, 30, 34, 36, 37, 39, \
65, 67, 61, 60, 63, 55, 35, 37, 36, 35, \
36, 37, 49, 51, 47, 33, 35, 30, 40, 42, \
39, 43, 45, 39, 42, 45, 36, 55, 60, 51, \
43, 49, 42, 39, 43, 37, 71, 73, 63, 62, \
63, 52, 38, 39, 38, 35, 37, 36, 29, 31, \
29, 52, 54, 49, 45, 47, 42, 42, 44, 39, \
50, 44, 39, 126, 119, 117, 112, 111, 110, 78, \
73, 65, 66, 57, 47, 68, 63, 59, 76, 74, \
75, 32, 33, 36, 26, 30, 30, 33, 35, 36, \
29, 30, 34, 33, 34, 36, 57, 60, 53, 57, \
59, 52, 32, 34, 33, 30, 32, 33, 40, 42, \
38, 26, 29, 24, 40, 41, 38, 44, 46, 40, \
47, 50, 41, 70, 75, 68, 56, 62, 55, 46, \
51, 41, 74, 76, 64, 44, 45, 36, 36, 38, \
37, 42, 44, 43, 35, 37, 36, 50, 52, 47, \
49, 51, 46, 50, 53, 47, 41, 36, 34, 80, \
76, 80, 116, 113, 116, 118, 101, 91, 157, 138, \
120, 129, 121, 112, 64, 58, 60, 30, 31, 35, \
34, 38, 37, 37, 38, 39, 31, 31, 36, 32, \
33, 34, 58, 61, 53, 58, 61, 53, 27, 29, \
28, 31, 32, 34, 39, 41, 37, 24, 26, 22, \
48, 51, 48, 60, 63, 57, 69, 73, 64, 63, \
67, 62, 42, 48, 43, 55, 60, 47, 79, 82, \
69, 46, 46, 40, 39, 40, 39, 49, 51, 50, \
40, 42, 41, 44, 45, 40, 48, 50, 48, 43, \
45, 43, 45, 42, 42, 46, 43, 45, 40, 41, \
43, 74, 61, 53, 183, 162, 141, 122, 114, 104, \
26, 24, 33, 32, 34, 40, 33, 37, 36, 29, \
36, 36, 26, 31, 35, 28, 33, 36, 48, 53, \
53, 48, 52, 48, 24, 26, 26, 30, 31, 31, \
63, 64, 56, 65, 68, 58, 51, 51, 46, 53, \
52, 48, 69, 69, 60, 53, 56, 48, 36, 40, \
34, 60, 65, 53, 78, 81, 68, 41, 43, 35, \
35, 37, 36, 51, 54, 53, 39, 42, 41, 38, \
36, 32, 39, 39, 42, 35, 38, 40, 45, 43, \
44, 46, 41, 37, 36, 44, 43, 62, 59, 56, \
183, 160, 137, 131, 116, 101, 21, 19, 31, 32, \
36, 39, 34, 35, 32, 27, 35, 32, 24, 31, \
30, 25, 30, 33, 38, 42, 47, 36, 42, 41, \
24, 28, 28, 31, 32, 29, 83, 84, 71, 89, \
93, 78, 48, 48, 43, 45, 39, 40, 60, 58, \
51, 60, 63, 52, 42, 44, 38, 61, 64, 56, \
73, 77, 65, 38, 42, 31, 26, 30, 28, 43, \
47, 46, 35, 39, 38, 32, 31, 27, 28, 28, \
31, 29, 32, 34, 39, 39, 39, 41, 38, 35, \
32, 39, 41, 84, 80, 77, 187, 159, 131, 136, \
112, 91, 29, 21, 27, 36, 40, 41, 40, 41, \
42, 35, 37, 35, 32, 35, 34, 28, 30, 32, \
34, 37, 41, 31, 38, 36, 22, 28, 27, 33, \
35, 32, 65, 67, 53, 50, 55, 42, 41, 42, \
39, 41, 38, 40, 46, 48, 46, 53, 59, 53, \
43, 45, 40, 53, 56, 49, 66, 69, 59, 45, \
48, 38, 28, 32, 30, 41, 45, 44, 39, 43, \
42, 36, 35, 31, 26, 26, 29, 29, 32, 34, \
32, 34, 33, 35, 34, 34, 25, 32, 38, 112, \
105, 101, 212, 182, 151, 155, 130, 108, 34, 28, \
30, 27, 33, 35, 36, 39, 45, 31, 33, 37, \
38, 41, 46, 26, 33, 40, 31, 39, 46, 32, \
37, 37, 20, 22, 22, 38, 38, 36, 52, 52, \
39, 35, 33, 20, 53, 46, 39, 38, 31, 26, \
45, 44, 41, 49, 53, 51, 38, 40, 37, 47, \
49, 45, 57, 60, 53, 45, 49, 41, 34, 38, \
36, 43, 47, 46, 43, 47, 46, 43, 41, 37, \
26, 26, 29, 30, 33, 35, 24, 29, 27, 23, \
24, 25, 22, 27, 38, 76, 67, 62, 197, 161, \
125, 214, 178, 150, 98, 80, 68, 69, 59, 45, \
73, 58, 53, 59, 45, 42, 61, 50, 47, 52, \
48, 46, 61, 60, 59, 61, 59, 59, 51, 44, \
48, 59, 50, 51, 78, 69, 60, 91, 74, 59, \
109, 86, 68, 82, 61, 45, 54, 41, 31, 43, \
39, 36, 32, 33, 33, 40, 42, 40, 45, 47, \
42, 37, 40, 35, 34, 38, 36, 41, 45, 44, \
43, 47, 46, 44, 43, 39, 28, 28, 31, 25, \
27, 29, 20, 24, 23, 21, 25, 28, 22, 27, \
37, 51, 42, 37, 177, 139, 104, 216, 169, 132, \
155, 115, 87, 146, 108, 77, 148, 107, 85, 148, \
112, 93, 129, 101, 82, 112, 89, 71, 97, 77, \
60, 72, 58, 54, 55, 45, 49, 47, 38, 39, \
78, 65, 57, 114, 90, 72, 151, 116, 90, 157, \
121, 95, 133, 106, 87, 69, 57, 50, 26, 29, \
30, 45, 49, 47, 60, 62, 56, 46, 48, 44, \
35, 40, 38, 46, 50, 47, 50, 55, 52, 42, \
43, 38, 26, 25, 29, 22, 22, 25, 22, 22, \
23, 21, 27, 31, 18, 27, 30, 55, 49, 46, \
146, 123, 106, 152, 116, 88, 154, 105, 77, 155, \
102, 75, 168, 120, 95, 165, 124, 100, 130, 102, \
80, 107, 84, 61, 124, 96, 73, 89, 70, 60, \
39, 37, 36, 31, 35, 32, 60, 53, 42, 111, \
90, 70, 160, 122, 94, 183, 134, 103, 216, 180, \
155, 166, 150, 137, 36, 39, 37, 44, 52, 47, \
73, 74, 62, 53, 58, 55, 36, 39, 39, 42, \
46, 40, 53, 57, 51, 44, 45, 40, 26, 26, \
29, 26, 25, 28, 27, 23, 23, 25, 27, 27, \
25, 33, 34, 41, 42, 42, 73, 65, 59, 106, \
86, 70, 155, 113, 90, 169, 114, 87, 194, 142, \
115, 159, 118, 97, 130, 104, 87, 100, 80, 62, \
140, 114, 96, 124, 108, 99, 45, 47, 45, 31, \
39, 36, 68, 62, 52, 141, 112, 91, 170, 122, \
93, 198, 147, 115, 236, 203, 175, 206, 188, 170, \
63, 55, 50, 35, 41, 33, 58, 61, 45, 50, \
58, 50, 38, 41, 40, 42, 45, 38, 60, 62, \
55, 46, 47, 42, 32, 31, 35, 32, 32, 34, \
35, 30, 30, 32, 30, 28, 30, 37, 35, 25, \
32, 32, 40, 46, 46, 79, 74, 67, 141, 108, \
91, 185, 133, 105, 200, 149, 119, 157, 120, 102, \
134, 114, 102, 93, 81, 71, 121, 105, 95, 109, \
99, 92, 47, 52, 51, 35, 44, 43, 79, 71, \
64, 178, 141, 119, 180, 127, 96, 217, 170, 140, \
243, 215, 188, 214, 192, 170, 86, 69, 61, 41, \
45, 38, 49, 55, 38, 46, 56, 46, 41, 46, \
44, 38, 42, 35, 53, 57, 50, 52, 53, 48, \
35, 35, 38, 38, 38, 41, 41, 39, 43, 34, \
34, 35, 32, 37, 32, 22, 31, 26, 33, 46, \
47, 52, 56, 55, 135, 110, 96, 200, 155, 129, \
189, 146, 118, 129, 102, 87, 110, 102, 92, 84, \
86, 81, 88, 86, 82, 76, 74, 69, 51, 60, \
60, 38, 48, 49, 77, 69, 64, 179, 143, 120, \
180, 133, 104, 227, 187, 164, 242, 218, 196, 216, \
194, 173, 91, 76, 66, 40, 50, 48, 53, 61, \
51, 46, 55, 49, 32, 43, 40, 36, 48, 38, \
49, 61, 51, 59, 60, 54, 38, 38, 41, 38, \
38, 41, 31, 34, 41, 30, 35, 39, 43, 49, \
42, 31, 39, 30, 33, 46, 44, 43, 51, 50, \
99, 81, 70, 177, 141, 120, 183, 146, 122, 133, \
114, 100, 77, 79, 71, 66, 77, 75, 69, 77, \
76, 97, 99, 95, 77, 87, 85, 47, 58, 59, \
62, 56, 53, 180, 151, 129, 212, 176, 148, 229, \
199, 181, 235, 216, 203, 213, 197, 180, 88, 85, \
76, 46, 64, 64, 55, 66, 62, 43, 53, 50, \
36, 55, 49, 42, 62, 50, 45, 65, 53, 62, \
70, 58, 30, 37, 32, 30, 36, 36, 25, 35, \
36, 32, 45, 44, 53, 65, 61, 40, 52, 48, \
38, 55, 53, 42, 54, 50, 47, 45, 39, 100, \
86, 74, 196, 163, 137, 152, 135, 119, 68, 74, \
65, 64, 70, 71, 70, 73, 74, 116, 113, 105, \
108, 116, 105, 70, 89, 80, 57, 66, 63, 139, \
127, 112, 230, 202, 175, 215, 196, 180, 220, 214, \
207, 118, 123, 115, 44, 66, 60, 36, 62, 59, \
37, 56, 54, 39, 54, 53, 35, 59, 52, 36, \
61, 51, 33, 58, 48, 54, 72, 59, 34, 50, \
44, 35, 50, 49, 34, 53, 50, 41, 62, 57, \
46, 68, 63, 42, 63, 58, 41, 65, 61, 41, \
61, 54, 37, 51, 44, 66, 67, 57, 216, 191, \
165, 162, 154, 137, 61, 76, 65, 75, 85, 84, \
78, 88, 86, 84, 95, 82, 81, 100, 84, 70, \
97, 84, 69, 86, 83, 118, 112, 100, 225, 195, \
168, 186, 162, 144, 208, 200, 192, 91, 97, 88, \
31, 55, 47, 32, 60, 53, 30, 55, 51, 36, \
56, 55, 34, 59, 51, 36, 63, 54, 35, 62, \
53, 34, 63, 55, 35, 63, 58, 34, 61, 59, \
31, 61, 56, 30, 62, 53, 33, 64, 56, 34, \
65, 57, 33, 66, 58, 35, 64, 54, 34, 60, \
51, 52, 64, 53, 193, 174, 152, 155, 158, 142, \
46, 73, 61, 52, 75, 71, 52, 76, 69, 45, \
76, 60, 39, 74, 57, 35, 68, 55, 48, 71, \
64, 88, 90, 79, 208, 181, 156, 172, 143, 121, \
155, 142, 129, 138, 136, 119, 72, 86, 68, 37, \
65, 53, 40, 70, 63, 40, 64, 59, 36, 63, \
54, 37, 65, 56, 39, 67, 57, 36, 72, 64, \
41, 76, 69, 40, 76, 69, 33, 70, 61, 36, \
74, 63, 44, 82, 71, 43, 81, 70, 39, 76, \
67, 42, 76, 64, 40, 76, 65, 46, 64, 55, \
154, 138, 120, 139, 147, 134, 38, 71, 61, 41, \
72, 66, 42, 74, 65, 38, 79, 64, 36, 78, \
63, 45, 81, 68, 49, 80, 70, 50, 68, 61, \
155, 141, 120, 177, 154, 130, 107, 99, 84, 136, \
132, 110, 162, 167, 140, 60, 87, 71, 53, 89, \
79, 55, 84, 74, 46, 77, 67, 47, 79, 68, \
47, 78, 68, 55, 94, 82, 58, 95, 83, 55, \
93, 80, 50, 88, 76, 50, 87, 77, 56, 94, \
83, 57, 95, 84, 52, 88, 78, 54, 87, 75, \
52, 90, 79, 58, 78, 71, 160, 142, 128, 135, \
144, 135, 59, 94, 85, 54, 86, 80, 52, 86, \
76, 51, 91, 79, 52, 90, 79, 55, 91, 80, \
55, 93, 80, 46, 81, 76, 94, 97, 81, 171, \
159, 135, 116, 120, 104, 90, 90, 65, 150, 148, \
115, 70, 97, 78, 42, 82, 70, 48, 81, 68, \
47, 79, 68, 42, 75, 64, 44, 77, 66, 57, \
96, 82, 55, 94, 79, 52, 90, 76, 55, 93, \
80, 49, 88, 77, 46, 85, 74, 56, 94, 83, \
53, 91, 81, 50, 84, 76, 45, 85, 76, 58, \
83, 71, 177, 168, 155, 122, 136, 127, 56, 91, \
78, 47, 87, 74, 41, 82, 70, 45, 84, 72, \
48, 86, 73, 48, 85, 72, 51, 90, 76, 40, \
84, 74, 58, 69, 56, 163, 157, 138, 109, 125, \
110, 57, 74, 55, 116, 123, 97, 71, 99, 79, \
39, 81, 67, 44, 77, 68, 40, 73, 63, 42, \
75, 65, 46, 80, 69, 62, 101, 79, 65, 103, \
81, 60, 98, 76, 75, 115, 95, 74, 116, 96, \
62, 103, 84, 67, 109, 90, 67, 109, 89, 67, \
105, 87, 62, 102, 86, 75, 105, 85, 160, 160, \
146, 118, 136, 126, 88, 124, 102, 81, 125, 98, \
71, 115, 91, 78, 118, 96, 79, 118, 96, 74, \
112, 90, 77, 116, 94, 75, 118, 97, 100, 112, \
94, 168, 167, 145, 105, 131, 108, 79, 110, 89, \
119, 135, 112, 106, 135, 110, 77, 121, 95, 77, \
111, 91, 88, 125, 103, 89, 128, 105, 87, 126, \
102, 117, 157, 123, 113, 153, 119, 116, 155, 121, \
122, 162, 130, 126, 167, 135, 119, 161, 129, 118, \
159, 128, 117, 160, 124, 131, 170, 134, 122, 162, \
131, 133, 164, 138, 160, 164, 149, 134, 154, 138, \
139, 175, 143, 130, 174, 133, 124, 167, 126, 129, \
169, 134, 133, 172, 139, 128, 167, 134, 133, 172, \
138, 133, 169, 139, 155, 165, 138, 184, 192, 160, \
130, 165, 129, 116, 152, 122, 118, 136, 110, 146, \
172, 141, 127, 169, 129, 128, 165, 125, 133, 176, \
135, 132, 176, 135, 127, 171, 130, 144, 182, 140, \
144, 181, 140, 140, 178, 136, 141, 180, 140, 148, \
188, 148, 141, 181, 141, 140, 180, 140, 136, 178, \
136, 145, 183, 141, 144, 180, 139, 142, 174, 141, \
155, 165, 146, 135, 159, 133, 145, 182, 141, 138, \
180, 131, 136, 175, 128, 141, 179, 137, 149, 187, \
145, 150, 188, 147, 151, 189, 148, 147, 181, 142, \
157, 172, 137, 174, 193, 155, 137, 176, 133, 135, \
172, 135, 126, 150, 119, 156, 180, 144, 146, 187, \
140, 144, 182, 133, 137, 178, 130, 133, 175, 128, \
137, 179, 131, 137, 174, 130, 139, 176, 132, 136, \
172, 129, 138, 175, 133, 141, 179, 138, 144, 182, \
141, 135, 173, 132, 144, 185, 145, 139, 175, 137, \
142, 175, 133, 144, 176, 140, 161, 176, 153, 143, \
169, 134, 145, 182, 136, 136, 175, 127, 147, 181, \
139, 147, 183, 141, 145, 181, 138, 147, 183, 140, \
148, 184, 141, 142, 179, 135, 153, 176, 138, 158, \
185, 147, 148, 183, 141, 152, 186, 145, 150, 178, \
140, 161, 183, 146, 149, 186, 142, 140, 176, 131, \
148, 183, 139, 140, 175, 132, 154, 189, 146, 142, \
181, 138, 146, 184, 141, 143, 181, 138, 138, 176, \
135, 145, 183, 142, 133, 171, 130, 133, 171, 129, \
151, 190, 152, 147, 184, 147, 154, 189, 147, 150, \
184, 143, 153, 178, 143, 149, 182, 140, 154, 193, \
147, 150, 188, 143, 157, 189, 149, 158, 193, 151, \
145, 182, 139, 145, 183, 139, 147, 186, 142, 145, \
187, 142, 148, 182, 140, 151, 185, 144, 151, 188, \
145, 145, 182, 138, 150, 183, 141, 158, 186, 146, \
156, 191, 148, 148, 184, 142, 152, 187, 146, 140, \
177, 135, 145, 180, 138, 145, 186, 142, 146, 187, \
144, 141, 182, 139, 149, 188, 145, 151, 190, 147, \
142, 181, 138, 144, 182, 139, 147, 187, 145, 151, \
191, 151, 147, 184, 142, 147, 182, 138, 149, 184, \
139, 149, 187, 142, 145, 188, 142, 154, 193, 148, \
162, 194, 152, 163, 199, 155, 147, 187, 141, 139, \
182, 135, 140, 185, 138, 141, 188, 141, 139, 181, \
135, 150, 188, 144, 139, 181, 135, 145, 187, 141, \
147, 184, 140, 141, 178, 134, 147, 184, 140, 153, \
190, 146, 136, 176, 132, 138, 183, 137, 144, 184, \
140, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '16124';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a7ad4ad762e37978b7ea0ab9ae70b32ef';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_automobile5';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{126, 126, 104, 125, 123, 102, 123, 118, 97, 125, 117, \
94, 128, 120, 96, 136, 128, 105, 155, 147, 125, \
172, 163, 145, 175, 166, 149, 174, 165, 148, 175, \
166, 148, 175, 167, 148, 176, 167, 148, 176, 168, \
149, 175, 167, 148, 172, 164, 145, 170, 162, 142, \
170, 162, 143, 171, 163, 145, 167, 160, 142, 163, \
156, 138, 159, 152, 134, 155, 148, 129, 150, 143, \
124, 144, 137, 118, 137, 130, 110, 130, 124, 99, \
125, 119, 94, 121, 115, 90, 115, 111, 87, 106, \
105, 85, 100, 100, 79, 116, 115, 91, 113, 109, \
86, 114, 108, 86, 121, 113, 90, 128, 120, 97, \
139, 131, 108, 161, 153, 132, 178, 169, 151, 181, \
172, 155, 179, 170, 153, 177, 168, 150, 174, 166, \
147, 171, 163, 144, 169, 161, 142, 168, 160, 141, \
165, 157, 138, 153, 145, 127, 140, 132, 113, 135, \
128, 110, 136, 129, 111, 138, 131, 113, 141, 134, \
116, 142, 135, 117, 142, 135, 116, 140, 133, 114, \
135, 129, 109, 130, 124, 101, 125, 119, 96, 122, \
116, 93, 117, 112, 88, 114, 110, 85, 113, 110, \
85, 120, 118, 92, 124, 119, 94, 123, 116, 92, \
126, 118, 95, 134, 126, 103, 144, 136, 113, 164, \
156, 134, 181, 172, 155, 186, 177, 160, 185, 176, \
159, 184, 176, 158, 183, 175, 155, 181, 173, 154, \
180, 172, 153, 177, 169, 150, 174, 166, 147, 166, \
158, 139, 156, 148, 129, 146, 139, 120, 138, 131, \
113, 132, 125, 107, 124, 117, 99, 117, 110, 91, \
110, 103, 84, 107, 100, 81, 107, 100, 81, 107, \
100, 80, 106, 99, 79, 106, 99, 79, 104, 99, \
77, 102, 99, 73, 104, 101, 75, 134, 130, 103, \
133, 127, 101, 126, 119, 94, 127, 119, 96, 136, \
128, 105, 146, 138, 115, 164, 156, 134, 180, 171, \
154, 185, 176, 159, 184, 175, 158, 184, 175, 157, \
183, 175, 156, 182, 174, 155, 181, 174, 154, 179, \
171, 152, 176, 168, 149, 174, 166, 147, 173, 165, \
146, 170, 163, 144, 167, 160, 142, 163, 156, 138, \
158, 151, 133, 152, 145, 127, 146, 139, 120, 138, \
131, 112, 128, 121, 102, 119, 112, 92, 110, 103, \
83, 103, 96, 77, 95, 91, 70, 87, 89, 65, \
86, 88, 64, 136, 131, 106, 135, 129, 104, 126, \
119, 94, 126, 119, 94, 133, 126, 100, 143, 136, \
110, 160, 153, 129, 176, 168, 148, 182, 174, 154, \
183, 174, 155, 183, 175, 155, 182, 175, 155, 181, \
174, 154, 180, 173, 152, 178, 171, 151, 177, 169, \
150, 176, 168, 149, 175, 167, 148, 172, 165, 147, \
168, 161, 143, 166, 159, 141, 163, 156, 138, 159, \
151, 134, 155, 147, 129, 150, 142, 124, 143, 135, \
116, 136, 128, 107, 130, 123, 101, 125, 118, 96, \
119, 113, 91, 114, 112, 87, 114, 111, 86, 118, \
114, 89, 118, 112, 88, 117, 109, 86, 123, 116, \
91, 132, 125, 100, 143, 136, 111, 163, 155, 132, \
178, 170, 151, 182, 174, 155, 182, 174, 154, 180, \
173, 154, 179, 172, 153, 178, 171, 152, 176, 169, \
150, 175, 168, 149, 172, 163, 144, 158, 150, 131, \
145, 137, 118, 140, 133, 114, 142, 135, 117, 144, \
137, 119, 144, 137, 119, 145, 138, 120, 143, 137, \
119, 140, 134, 116, 135, 129, 111, 131, 126, 105, \
127, 121, 101, 123, 117, 97, 120, 114, 92, 120, \
114, 89, 122, 115, 90, 116, 112, 87, 120, 114, \
90, 125, 117, 94, 131, 123, 101, 140, 132, 109, \
150, 142, 119, 168, 160, 139, 181, 173, 155, 185, \
176, 158, 185, 176, 159, 184, 176, 159, 183, 176, \
158, 183, 176, 158, 182, 175, 157, 180, 173, 154, \
176, 168, 149, 166, 158, 139, 153, 145, 126, 142, \
135, 116, 134, 128, 108, 128, 121, 101, 121, 115, \
95, 115, 111, 90, 110, 108, 87, 107, 105, 84, \
106, 103, 83, 105, 101, 83, 101, 97, 80, 98, \
95, 78, 99, 95, 76, 103, 97, 74, 107, 101, \
78, 130, 126, 101, 126, 120, 96, 129, 121, 99, \
135, 127, 106, 142, 134, 114, 150, 142, 122, 168, \
160, 141, 183, 174, 158, 186, 177, 161, 187, 178, \
162, 186, 178, 161, 185, 178, 161, 185, 178, 161, \
184, 177, 161, 183, 176, 158, 180, 172, 153, 177, \
169, 150, 175, 167, 148, 173, 166, 145, 169, 163, \
141, 165, 159, 137, 160, 154, 133, 155, 151, 128, \
147, 144, 121, 140, 137, 114, 134, 130, 108, 126, \
122, 104, 118, 114, 96, 110, 106, 88, 108, 103, \
84, 109, 102, 82, 109, 102, 82, 136, 132, 107, \
127, 121, 97, 125, 117, 94, 134, 126, 106, 142, \
134, 115, 150, 142, 122, 167, 159, 141, 182, 173, \
157, 186, 177, 162, 187, 178, 163, 187, 178, 163, \
186, 179, 163, 187, 180, 164, 185, 178, 162, 183, \
176, 158, 180, 172, 153, 177, 169, 150, 175, 167, \
148, 174, 168, 146, 172, 166, 142, 169, 163, 139, \
164, 158, 135, 161, 155, 132, 157, 151, 128, 152, \
146, 123, 148, 142, 119, 144, 138, 116, 139, 133, \
111, 134, 128, 106, 131, 125, 104, 133, 126, 107, \
136, 129, 110, 122, 116, 92, 115, 107, 84, 112, \
104, 81, 124, 113, 92, 134, 124, 100, 144, 134, \
110, 163, 153, 132, 176, 168, 149, 180, 172, 153, \
181, 173, 154, 182, 173, 154, 182, 175, 155, 182, \
174, 155, 181, 174, 154, 179, 172, 152, 173, 166, \
147, 161, 154, 134, 149, 142, 121, 145, 141, 118, \
145, 141, 118, 146, 140, 120, 144, 140, 121, 144, \
139, 118, 142, 137, 116, 139, 134, 114, 138, 132, \
112, 136, 131, 110, 132, 127, 106, 128, 123, 102, \
127, 122, 101, 132, 127, 107, 137, 133, 112, 121, \
113, 89, 121, 114, 90, 118, 110, 86, 122, 111, \
87, 133, 121, 93, 148, 137, 109, 168, 156, 135, \
180, 172, 154, 183, 174, 156, 182, 174, 156, 182, \
174, 155, 182, 174, 154, 181, 174, 153, 181, 173, \
153, 180, 173, 153, 175, 168, 149, 163, 156, 136, \
149, 141, 121, 139, 135, 114, 132, 129, 108, 126, \
122, 104, 121, 118, 101, 117, 115, 94, 114, 112, \
91, 111, 109, 89, 111, 108, 88, 110, 107, 88, \
107, 104, 85, 102, 99, 80, 102, 99, 80, 107, \
105, 84, 110, 108, 87, 140, 133, 107, 139, 132, \
106, 132, 124, 98, 128, 116, 92, 131, 119, 91, \
148, 136, 109, 169, 157, 137, 182, 172, 159, 184, \
175, 162, 184, 174, 161, 184, 175, 161, 183, 176, \
160, 183, 176, 160, 185, 178, 161, 183, 175, 157, \
172, 165, 145, 165, 158, 140, 164, 158, 140, 173, \
169, 153, 180, 178, 162, 184, 180, 161, 182, 173, \
151, 175, 171, 148, 165, 163, 140, 153, 151, 127, \
144, 142, 118, 138, 136, 115, 131, 129, 108, 123, \
121, 100, 120, 118, 97, 124, 122, 99, 124, 122, \
99, 133, 126, 98, 138, 131, 103, 133, 125, 99, \
134, 123, 99, 134, 123, 94, 143, 131, 104, 167, \
155, 135, 181, 172, 158, 185, 175, 162, 185, 176, \
162, 185, 177, 162, 184, 178, 161, 184, 179, 161, \
179, 173, 156, 160, 155, 135, 142, 138, 117, 140, \
138, 120, 154, 156, 139, 136, 140, 127, 122, 125, \
114, 137, 130, 113, 159, 138, 112, 139, 131, 111, \
133, 131, 112, 160, 158, 135, 158, 157, 131, 154, \
152, 129, 149, 147, 124, 143, 141, 118, 139, 137, \
114, 144, 142, 118, 146, 144, 120, 114, 107, 78, \
118, 112, 83, 123, 115, 87, 132, 120, 96, 135, \
124, 95, 137, 126, 99, 162, 150, 129, 179, 171, \
152, 181, 173, 155, 182, 174, 156, 182, 176, 157, \
183, 180, 158, 178, 175, 153, 157, 154, 132, 150, \
149, 125, 161, 164, 140, 173, 181, 161, 180, 193, \
176, 123, 139, 127, 58, 69, 60, 71, 60, 44, \
132, 97, 70, 63, 49, 37, 81, 78, 67, 174, \
171, 153, 176, 174, 151, 171, 169, 144, 165, 163, \
139, 158, 156, 131, 152, 150, 125, 156, 155, 128, \
158, 156, 129, 118, 110, 81, 119, 111, 82, 127, \
120, 92, 134, 125, 101, 141, 128, 100, 148, 134, \
106, 167, 156, 134, 182, 174, 155, 183, 174, 156, \
184, 174, 157, 179, 170, 152, 160, 154, 133, 141, \
137, 115, 133, 134, 111, 159, 165, 142, 168, 179, \
157, 141, 154, 136, 115, 130, 115, 99, 115, 100, \
85, 97, 87, 111, 106, 93, 153, 124, 101, 105, \
86, 69, 92, 85, 74, 125, 123, 111, 123, 121, \
106, 135, 134, 112, 144, 143, 121, 143, 142, 119, \
142, 142, 118, 149, 147, 123, 153, 150, 123, 151, \
142, 113, 143, 135, 106, 146, 139, 110, 149, 141, \
115, 155, 142, 114, 159, 146, 122, 170, 161, 142, \
180, 171, 153, 180, 170, 153, 178, 167, 152, 165, \
156, 141, 134, 128, 114, 116, 115, 99, 110, 116, \
99, 126, 138, 120, 111, 125, 109, 80, 94, 81, \
93, 105, 95, 77, 85, 71, 93, 103, 93, 130, \
136, 128, 123, 114, 98, 105, 95, 73, 81, 82, \
66, 75, 82, 72, 73, 79, 69, 89, 93, 80, \
114, 119, 103, 121, 125, 107, 115, 120, 101, 137, \
136, 116, 158, 157, 130, 182, 174, 144, 170, 161, \
132, 162, 151, 123, 169, 157, 129, 168, 158, 132, \
147, 143, 126, 138, 138, 126, 137, 135, 122, 136, \
135, 121, 138, 139, 124, 137, 138, 125, 132, 135, \
126, 120, 128, 119, 107, 117, 106, 97, 108, 96, \
100, 110, 102, 111, 121, 115, 120, 130, 126, 124, \
129, 122, 134, 142, 139, 147, 157, 154, 140, 143, \
134, 140, 147, 136, 139, 150, 142, 132, 144, 137, \
137, 147, 139, 145, 155, 150, 142, 153, 146, 132, \
143, 134, 110, 118, 107, 135, 128, 114, 192, 187, \
163, 194, 187, 158, 197, 187, 158, 181, 167, 139, \
176, 164, 136, 129, 125, 105, 98, 102, 91, 93, \
101, 95, 111, 120, 118, 118, 128, 122, 107, 119, \
109, 113, 121, 112, 114, 121, 117, 115, 129, 128, \
109, 120, 115, 117, 124, 117, 144, 151, 146, 189, \
195, 193, 207, 212, 212, 225, 228, 225, 226, 231, \
230, 224, 232, 232, 226, 233, 231, 226, 232, 233, \
225, 229, 229, 209, 210, 208, 207, 210, 209, 208, \
218, 218, 196, 207, 205, 165, 177, 173, 132, 138, \
133, 125, 106, 101, 160, 139, 123, 189, 184, 154, \
199, 187, 159, 188, 173, 146, 150, 143, 119, 74, \
78, 62, 64, 73, 64, 33, 40, 34, 104, 110, \
105, 109, 110, 102, 87, 83, 71, 105, 102, 90, \
128, 136, 132, 150, 166, 167, 128, 137, 134, 107, \
110, 103, 127, 131, 125, 204, 207, 203, 239, 241, \
240, 246, 248, 244, 245, 247, 243, 241, 242, 242, \
237, 239, 242, 234, 236, 240, 233, 231, 231, 229, \
227, 227, 218, 221, 224, 206, 210, 209, 207, 211, \
207, 146, 151, 145, 85, 90, 83, 96, 85, 80, \
122, 102, 87, 180, 175, 146, 184, 174, 147, 175, \
164, 137, 125, 124, 103, 83, 88, 80, 81, 89, \
83, 99, 104, 99, 180, 182, 173, 180, 175, 164, \
159, 148, 133, 128, 125, 112, 161, 173, 169, 151, \
163, 164, 90, 93, 88, 113, 111, 99, 103, 104, \
93, 132, 132, 126, 219, 220, 218, 226, 228, 225, \
228, 229, 225, 227, 226, 225, 224, 224, 227, 218, \
222, 223, 216, 219, 215, 209, 213, 211, 199, 206, \
207, 200, 201, 199, 199, 199, 194, 113, 112, 105, \
121, 123, 114, 84, 83, 75, 111, 103, 87, 173, \
167, 141, 170, 164, 138, 155, 151, 124, 117, 119, \
101, 164, 166, 164, 179, 184, 178, 177, 185, 184, \
226, 234, 236, 255, 255, 255, 206, 213, 210, 147, \
162, 157, 180, 195, 194, 115, 121, 120, 109, 106, \
98, 172, 167, 152, 150, 148, 134, 102, 102, 94, \
179, 180, 177, 206, 208, 207, 208, 210, 208, 207, \
209, 207, 205, 206, 205, 202, 204, 202, 198, 200, \
199, 189, 191, 190, 180, 182, 181, 188, 191, 190, \
151, 152, 148, 127, 127, 119, 174, 172, 161, 118, \
112, 103, 97, 91, 77, 160, 156, 131, 156, 151, \
126, 144, 141, 116, 120, 120, 108, 93, 94, 91, \
105, 110, 98, 113, 120, 116, 154, 160, 164, 171, \
173, 176, 152, 157, 157, 143, 156, 152, 160, 173, \
168, 85, 89, 85, 131, 128, 116, 189, 185, 171, \
163, 161, 152, 117, 117, 109, 160, 161, 154, 193, \
195, 190, 186, 188, 183, 187, 189, 185, 187, 189, \
184, 185, 186, 182, 179, 181, 176, 188, 190, 186, \
200, 202, 198, 199, 202, 198, 114, 116, 109, 137, \
138, 126, 192, 190, 176, 135, 131, 117, 84, 79, \
67, 128, 125, 102, 124, 121, 98, 118, 116, 93, \
99, 98, 87, 40, 40, 33, 28, 31, 16, 79, \
84, 77, 105, 111, 106, 63, 65, 59, 108, 113, \
103, 141, 151, 141, 135, 144, 139, 60, 63, 58, \
135, 133, 119, 205, 201, 189, 178, 175, 170, 124, \
123, 117, 158, 159, 153, 189, 191, 186, 171, 173, \
169, 168, 170, 165, 161, 163, 159, 154, 156, 152, \
146, 148, 144, 148, 150, 145, 145, 148, 143, 132, \
135, 131, 65, 67, 60, 137, 138, 127, 197, 196, \
181, 136, 134, 119, 64, 62, 51, 89, 88, 67, \
87, 86, 65, 85, 83, 62, 80, 77, 63, 78, \
77, 66, 70, 73, 57, 60, 63, 62, 65, 69, \
67, 63, 63, 59, 74, 76, 69, 76, 82, 76, \
66, 69, 70, 33, 33, 32, 125, 122, 111, 190, \
187, 174, 177, 174, 166, 99, 98, 94, 53, 53, \
53, 65, 66, 67, 53, 55, 56, 46, 47, 49, \
39, 40, 41, 31, 33, 34, 26, 27, 29, 20, \
21, 23, 14, 16, 18, 8, 10, 12, 3, 4, \
4, 89, 89, 84, 155, 154, 145, 79, 79, 70, \
20, 20, 14, 105, 102, 81, 102, 100, 79, 99, \
97, 76, 98, 94, 76, 95, 92, 76, 65, 64, \
50, 16, 15, 17, 0, 0, 7, 3, 2, 8, \
2, 1, 6, 0, 1, 5, 0, 0, 5, 4, \
3, 7, 75, 73, 70, 145, 143, 133, 136, 134, \
126, 35, 34, 33, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 2, 0, 0, 4, 3, \
1, 4, 5, 4, 6, 9, 8, 9, 16, 15, \
16, 22, 21, 21, 24, 22, 20, 52, 50, 45, \
92, 89, 81, 59, 56, 48, 57, 54, 46, 137, \
131, 111, 133, 127, 107, 128, 121, 102, 123, 116, \
97, 119, 113, 94, 108, 101, 83, 92, 87, 73, \
73, 71, 66, 59, 57, 52, 49, 46, 42, 41, \
39, 35, 37, 37, 34, 36, 35, 32, 48, 47, \
43, 88, 87, 78, 79, 78, 66, 47, 46, 38, \
54, 52, 48, 62, 60, 55, 71, 69, 63, 76, \
74, 68, 80, 78, 71, 89, 83, 73, 95, 88, \
77, 101, 93, 82, 106, 99, 87, 110, 104, 88, \
111, 105, 89, 112, 105, 89, 115, 108, 91, 121, \
114, 96, 124, 118, 100, 155, 148, 129, 149, 142, \
123, 143, 136, 117, 138, 131, 112, 134, 127, 108, \
133, 126, 107, 134, 128, 107, 131, 127, 104, 128, \
123, 101, 126, 122, 99, 124, 120, 98, 121, 118, \
98, 122, 118, 98, 121, 118, 97, 120, 116, 95, \
122, 118, 95, 125, 119, 99, 125, 120, 102, 127, \
122, 102, 129, 123, 103, 128, 123, 102, 128, 123, \
103, 128, 122, 103, 128, 121, 103, 128, 121, 103, \
127, 120, 102, 124, 117, 99, 124, 117, 99, 124, \
117, 99, 123, 116, 98, 121, 114, 95, 120, 113, \
93, 151, 144, 125, 148, 141, 122, 144, 137, 118, \
141, 134, 115, 137, 130, 111, 135, 128, 109, 134, \
126, 106, 134, 124, 103, 134, 124, 103, 133, 123, \
102, 131, 123, 101, 130, 122, 101, 129, 121, 100, \
128, 121, 99, 128, 119, 101, 128, 117, 100, 126, \
115, 98, 125, 115, 97, 124, 114, 97, 123, 113, \
96, 122, 112, 95, 121, 112, 94, 119, 112, 91, \
118, 112, 90, 117, 111, 89, 117, 110, 89, 116, \
109, 91, 116, 109, 91, 115, 108, 90, 115, 108, \
90, 115, 108, 89, 115, 108, 89, 136, 128, 109, \
133, 126, 107, 131, 124, 105, 129, 122, 103, 127, \
120, 101, 125, 118, 99, 124, 116, 98, 124, 115, \
100, 124, 115, 99, 122, 113, 98, 120, 112, 95, \
119, 113, 94, 119, 113, 94, 118, 112, 93, 117, \
109, 95, 118, 108, 96, 117, 108, 93, 117, 109, \
91, 116, 108, 92, 116, 107, 93, 116, 106, 92, \
115, 106, 91, 114, 107, 87, 113, 107, 86, 112, \
106, 85, 112, 106, 85, 113, 106, 88, 112, 105, \
87, 111, 104, 86, 111, 104, 86, 112, 105, 86, \
111, 104, 85, 121, 114, 95, 119, 112, 93, 118, \
111, 92, 118, 111, 92, 118, 111, 92, 118, 111, \
92, 116, 109, 91, 115, 109, 90, 115, 109, 90, \
113, 108, 89, 112, 107, 87, 112, 108, 86, 112, \
108, 86, 111, 107, 85, 112, 106, 87, 112, 106, \
88, 112, 106, 84, 111, 106, 81, 111, 106, 82, \
110, 105, 83, 110, 105, 82, 110, 104, 82, 110, \
103, 84, 110, 103, 84, 109, 102, 84, 109, 102, \
84, 109, 102, 84, 109, 102, 84, 109, 102, 84, \
109, 102, 83, 108, 101, 82, 108, 101, 82, 119, \
112, 93, 117, 110, 91, 116, 109, 90, 116, 109, \
91, 115, 108, 90, 115, 108, 90, 114, 107, 89, \
114, 107, 88, 113, 107, 88, 113, 106, 87, 112, \
106, 87, 112, 105, 86, 111, 105, 86, 110, 104, \
85, 110, 103, 85, 110, 103, 84, 109, 103, 84, \
109, 103, 83, 109, 102, 83, 108, 102, 82, 108, \
101, 82, 107, 101, 82, 108, 101, 82, 108, 101, \
83, 107, 100, 82, 107, 100, 82, 106, 99, 81, \
106, 99, 81, 106, 99, 81, 106, 99, 81, 105, \
98, 80, 105, 98, 80, 115, 108, 89, 114, 107, \
88, 113, 106, 87, 112, 105, 87, 112, 105, 87, \
111, 104, 86, 110, 103, 85, 110, 103, 85, 110, \
103, 85, 109, 102, 84, 108, 101, 84, 108, 101, \
83, 108, 100, 83, 107, 100, 82, 106, 99, 82, \
106, 99, 81, 106, 99, 81, 106, 99, 81, 105, \
98, 81, 105, 98, 80, 104, 97, 79, 104, 97, \
79, 104, 97, 79, 104, 97, 79, 104, 97, 79, \
104, 97, 79, 103, 96, 78, 103, 96, 78, 102, \
95, 77, 102, 95, 77, 102, 95, 77, 101, 94, \
76, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '16434';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1adeb30d9c2df10db03bb32d0bd5d9c667';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_airplane9';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{157, 180, 209, 155, 177, 206, 155, 177, 206, 155, 177, \
206, 153, 178, 206, 152, 178, 206, 152, 178, 206, \
152, 178, 206, 152, 178, 206, 152, 178, 206, 152, \
178, 206, 152, 178, 206, 151, 177, 205, 151, 177, \
205, 152, 176, 205, 153, 175, 204, 151, 173, 202, \
151, 173, 203, 151, 173, 203, 150, 173, 202, 147, \
172, 200, 145, 170, 199, 144, 169, 198, 144, 169, \
198, 144, 169, 198, 143, 168, 200, 142, 166, 199, \
143, 167, 200, 142, 166, 199, 137, 163, 194, 132, \
160, 189, 131, 159, 188, 108, 150, 196, 108, 148, \
194, 108, 149, 195, 108, 149, 195, 107, 150, 195, \
106, 150, 195, 106, 150, 195, 106, 150, 195, 106, \
150, 195, 106, 150, 195, 106, 150, 195, 106, 150, \
194, 104, 148, 192, 103, 147, 192, 104, 147, 192, \
104, 145, 191, 103, 144, 190, 103, 144, 190, 101, \
142, 188, 98, 140, 185, 94, 139, 183, 92, 138, \
182, 91, 136, 180, 90, 135, 179, 91, 136, 181, \
91, 135, 183, 87, 132, 181, 85, 130, 178, 81, \
126, 174, 76, 121, 170, 71, 119, 168, 68, 117, \
166, 108, 152, 202, 107, 150, 200, 108, 151, 201, \
108, 151, 201, 107, 152, 202, 107, 153, 202, 107, \
153, 202, 107, 153, 202, 107, 153, 202, 107, 153, \
202, 107, 153, 202, 106, 152, 201, 104, 150, 199, \
102, 148, 197, 103, 149, 198, 103, 148, 197, 101, \
147, 196, 101, 146, 195, 98, 143, 193, 94, 142, \
190, 91, 141, 188, 90, 140, 188, 91, 141, 188, \
90, 140, 187, 89, 139, 187, 88, 137, 189, 83, \
132, 184, 80, 129, 181, 77, 126, 178, 74, 124, \
176, 71, 122, 178, 69, 121, 178, 119, 154, 200, \
118, 153, 198, 118, 153, 199, 118, 153, 199, 119, \
156, 201, 120, 157, 202, 119, 157, 202, 119, 157, \
201, 119, 157, 201, 118, 156, 200, 117, 155, 200, \
117, 155, 199, 115, 152, 197, 113, 150, 195, 112, \
151, 195, 112, 151, 196, 110, 150, 194, 108, 147, \
191, 105, 145, 189, 103, 145, 188, 100, 145, 187, \
100, 145, 187, 101, 145, 188, 98, 143, 185, 96, \
140, 183, 93, 137, 183, 90, 133, 180, 87, 131, \
177, 86, 129, 175, 84, 128, 175, 81, 127, 176, \
79, 125, 175, 126, 157, 203, 125, 156, 202, 126, \
157, 203, 126, 157, 203, 125, 159, 204, 125, 159, \
204, 125, 159, 204, 125, 159, 204, 125, 159, 204, \
124, 158, 203, 123, 157, 202, 123, 157, 202, 122, \
156, 201, 120, 154, 199, 118, 155, 199, 117, 155, \
198, 115, 153, 197, 113, 151, 195, 112, 150, 193, \
110, 149, 192, 105, 148, 190, 104, 146, 188, 103, \
145, 187, 100, 143, 185, 100, 142, 185, 99, 141, \
186, 96, 138, 183, 93, 135, 180, 91, 133, 178, \
89, 131, 176, 86, 131, 174, 83, 130, 173, 126, \
161, 213, 126, 160, 211, 128, 163, 213, 128, 162, \
213, 126, 163, 213, 125, 163, 213, 125, 164, 213, \
125, 164, 213, 125, 164, 214, 124, 163, 213, 123, \
162, 212, 123, 162, 212, 123, 162, 212, 121, 160, \
210, 119, 160, 209, 116, 160, 208, 114, 159, 207, \
116, 160, 208, 115, 159, 207, 112, 157, 205, 107, \
153, 200, 103, 150, 197, 102, 148, 196, 101, 148, \
195, 102, 148, 196, 100, 147, 197, 97, 144, 194, \
93, 140, 190, 91, 137, 187, 89, 136, 185, 85, \
136, 181, 83, 135, 180, 131, 166, 215, 131, 165, \
213, 133, 166, 215, 132, 166, 215, 132, 167, 215, \
132, 167, 216, 132, 167, 215, 132, 167, 215, 132, \
167, 215, 128, 166, 215, 126, 166, 216, 126, 166, \
216, 124, 165, 214, 123, 163, 213, 122, 163, 212, \
121, 163, 212, 121, 163, 212, 120, 162, 211, 118, \
160, 209, 115, 158, 207, 112, 158, 205, 110, 156, \
203, 109, 155, 202, 108, 154, 201, 106, 152, 200, \
102, 150, 198, 99, 147, 195, 96, 144, 192, 94, \
142, 190, 91, 139, 187, 88, 138, 184, 86, 136, \
183, 137, 169, 216, 136, 168, 214, 138, 170, 216, \
137, 169, 216, 138, 169, 216, 138, 169, 216, 138, \
169, 216, 138, 169, 216, 138, 169, 216, 134, 169, \
216, 131, 169, 216, 131, 169, 216, 130, 168, 215, \
128, 166, 213, 127, 165, 212, 128, 166, 213, 127, \
165, 212, 125, 163, 210, 123, 161, 208, 121, 161, \
207, 118, 161, 206, 116, 159, 204, 115, 158, 203, \
114, 157, 202, 111, 155, 200, 107, 153, 197, 104, \
150, 194, 102, 148, 193, 100, 146, 190, 97, 143, \
187, 95, 141, 185, 93, 140, 184, 142, 173, 217, \
141, 172, 215, 143, 173, 217, 143, 173, 217, 143, \
173, 217, 143, 173, 217, 143, 173, 217, 143, 173, \
217, 143, 173, 217, 140, 173, 217, 137, 173, 218, \
137, 173, 218, 136, 171, 216, 134, 170, 214, 132, \
168, 213, 132, 167, 212, 132, 167, 212, 131, 166, \
211, 130, 165, 210, 127, 165, 209, 124, 164, 207, \
122, 162, 206, 121, 161, 205, 120, 160, 203, 118, \
158, 201, 114, 157, 199, 110, 154, 196, 110, 153, \
195, 108, 151, 193, 105, 148, 190, 103, 146, 188, \
101, 145, 187, 149, 178, 218, 148, 176, 216, 149, \
177, 217, 148, 177, 217, 149, 177, 217, 149, 177, \
217, 149, 178, 218, 149, 178, 218, 149, 178, 218, \
147, 177, 218, 145, 177, 219, 145, 177, 219, 144, \
176, 218, 143, 175, 217, 141, 173, 215, 139, 171, \
213, 138, 170, 213, 138, 170, 212, 136, 168, 210, \
133, 167, 209, 131, 168, 208, 130, 166, 207, 128, \
164, 205, 127, 162, 203, 124, 161, 201, 120, 160, \
199, 117, 157, 197, 117, 157, 196, 115, 155, 194, \
112, 152, 191, 110, 150, 189, 108, 148, 188, 155, \
182, 219, 154, 181, 218, 156, 183, 220, 156, 183, \
220, 156, 183, 220, 156, 183, 220, 156, 183, 220, \
157, 184, 220, 157, 184, 221, 154, 182, 220, 152, \
180, 220, 152, 180, 220, 152, 180, 220, 152, 180, \
220, 150, 178, 218, 148, 176, 216, 147, 174, 214, \
145, 172, 212, 143, 171, 210, 141, 170, 210, 139, \
171, 209, 137, 169, 208, 136, 168, 206, 134, 166, \
205, 131, 164, 202, 127, 163, 200, 125, 161, 198, \
124, 160, 197, 121, 158, 195, 118, 154, 192, 116, \
152, 189, 114, 151, 189, 160, 186, 219, 159, 185, \
218, 161, 186, 219, 161, 186, 219, 161, 187, 220, \
162, 187, 220, 161, 187, 220, 160, 185, 219, 160, \
185, 219, 159, 184, 220, 159, 184, 221, 159, 184, \
221, 159, 184, 221, 159, 184, 221, 158, 183, 220, \
156, 181, 218, 154, 179, 217, 153, 177, 215, 151, \
175, 213, 148, 175, 211, 145, 174, 210, 143, 172, \
208, 141, 170, 207, 138, 168, 204, 135, 166, 202, \
132, 165, 200, 131, 164, 199, 130, 163, 198, 127, \
161, 196, 124, 158, 192, 122, 156, 190, 121, 155, \
189, 165, 190, 221, 164, 188, 219, 165, 189, 221, \
165, 189, 220, 163, 188, 219, 163, 187, 218, 163, \
187, 218, 163, 187, 218, 163, 187, 218, 164, 187, \
220, 164, 187, 221, 164, 187, 221, 164, 187, 221, \
164, 187, 221, 164, 187, 221, 163, 186, 220, 161, \
184, 218, 159, 182, 216, 157, 180, 214, 154, 179, \
213, 152, 178, 211, 152, 178, 210, 149, 174, 206, \
148, 174, 206, 146, 174, 205, 141, 172, 203, 139, \
170, 201, 136, 168, 199, 134, 165, 197, 130, 162, \
193, 128, 160, 192, 126, 158, 191, 171, 191, 218, \
169, 188, 218, 170, 189, 221, 170, 189, 222, 170, \
189, 218, 170, 190, 215, 170, 190, 215, 170, 190, \
215, 170, 190, 216, 171, 190, 218, 171, 189, 219, \
171, 189, 219, 170, 189, 219, 170, 188, 218, 169, \
189, 219, 167, 188, 219, 165, 186, 217, 164, 185, \
216, 162, 183, 214, 159, 180, 211, 156, 175, 204, \
155, 169, 192, 173, 184, 203, 167, 181, 200, 143, \
163, 184, 133, 161, 185, 131, 160, 186, 133, 161, \
189, 138, 166, 196, 136, 164, 196, 131, 161, 194, \
129, 160, 194, 175, 191, 215, 175, 190, 215, 177, \
192, 218, 177, 192, 219, 179, 194, 217, 177, 193, \
213, 176, 192, 213, 176, 192, 212, 176, 192, 213, \
177, 192, 215, 176, 191, 216, 176, 190, 215, 175, \
190, 215, 176, 190, 216, 173, 190, 216, 171, 189, \
216, 169, 187, 215, 168, 187, 214, 166, 184, 211, \
164, 181, 209, 159, 171, 195, 152, 158, 175, 204, \
208, 219, 183, 190, 202, 132, 149, 164, 125, 150, \
169, 126, 152, 174, 133, 158, 183, 141, 166, 193, \
140, 165, 195, 134, 162, 193, 132, 161, 192, 180, \
192, 211, 179, 191, 208, 181, 193, 208, 181, 193, \
207, 182, 194, 209, 184, 196, 211, 178, 191, 206, \
177, 189, 205, 185, 197, 212, 185, 195, 213, 183, \
193, 212, 181, 190, 210, 181, 190, 210, 183, 193, \
212, 179, 190, 210, 176, 189, 210, 175, 188, 209, \
173, 186, 207, 171, 183, 205, 171, 183, 204, 171, \
177, 195, 186, 187, 198, 232, 233, 239, 214, 220, \
228, 165, 179, 191, 152, 173, 188, 149, 171, 188, \
148, 169, 189, 147, 168, 191, 144, 165, 190, 139, \
163, 187, 136, 161, 185, 184, 190, 200, 183, 190, \
197, 185, 192, 197, 184, 191, 194, 186, 193, 200, \
181, 188, 197, 133, 139, 148, 102, 109, 118, 148, \
155, 164, 207, 212, 222, 214, 217, 228, 208, 211, \
223, 205, 208, 219, 206, 209, 221, 199, 203, 216, \
193, 199, 213, 191, 197, 211, 175, 181, 194, 137, \
143, 157, 148, 152, 165, 207, 205, 215, 219, 214, \
217, 226, 222, 222, 209, 212, 215, 168, 179, 186, \
158, 175, 183, 156, 172, 183, 153, 169, 182, 152, \
167, 184, 151, 166, 184, 144, 163, 179, 142, 162, \
178, 141, 143, 138, 137, 139, 135, 140, 142, 139, \
139, 141, 138, 171, 172, 172, 148, 149, 152, 78, \
78, 81, 58, 59, 62, 113, 114, 117, 227, 225, \
228, 250, 247, 249, 231, 227, 230, 210, 206, 209, \
216, 212, 215, 215, 212, 216, 208, 207, 212, 222, \
221, 226, 191, 191, 196, 84, 84, 90, 114, 111, \
115, 246, 238, 238, 244, 235, 231, 231, 223, 218, \
202, 202, 200, 164, 172, 174, 157, 169, 171, 154, \
166, 170, 151, 162, 169, 149, 159, 169, 149, 159, \
170, 146, 160, 168, 138, 153, 160, 65, 64, 43, \
67, 65, 51, 85, 83, 75, 124, 121, 118, 185, \
182, 180, 199, 196, 193, 191, 188, 186, 195, 192, \
189, 214, 212, 209, 247, 241, 238, 255, 247, 243, \
240, 232, 228, 225, 216, 212, 227, 217, 213, 222, \
214, 212, 214, 207, 206, 224, 217, 216, 215, 208, \
207, 105, 98, 97, 134, 124, 122, 239, 224, 216, \
232, 215, 205, 223, 210, 199, 158, 155, 149, 97, \
103, 101, 92, 101, 97, 82, 90, 88, 80, 88, \
89, 89, 96, 100, 87, 94, 99, 74, 83, 85, \
57, 67, 67, 79, 77, 44, 119, 115, 94, 189, \
183, 174, 226, 219, 217, 242, 234, 231, 245, 236, \
231, 245, 237, 232, 246, 238, 233, 243, 235, 229, \
237, 225, 218, 236, 221, 212, 232, 218, 210, 222, \
208, 200, 219, 203, 195, 216, 203, 197, 222, 212, \
206, 231, 221, 216, 233, 223, 218, 163, 154, 149, \
156, 144, 137, 196, 178, 166, 190, 172, 157, 186, \
173, 159, 82, 80, 72, 27, 31, 26, 29, 31, \
26, 48, 49, 46, 84, 86, 84, 116, 118, 119, \
121, 123, 124, 48, 55, 49, 12, 21, 13, 140, \
135, 112, 227, 221, 205, 244, 237, 228, 237, 228, \
224, 235, 217, 213, 232, 209, 203, 230, 207, 201, \
231, 209, 203, 229, 207, 201, 231, 208, 199, 229, \
205, 195, 233, 209, 199, 234, 210, 200, 236, 211, \
201, 234, 217, 206, 221, 212, 201, 197, 189, 180, \
181, 175, 166, 153, 148, 141, 135, 132, 120, 125, \
125, 106, 116, 118, 98, 120, 125, 107, 87, 98, \
82, 58, 66, 54, 101, 96, 90, 200, 194, 189, \
228, 223, 218, 227, 220, 217, 213, 211, 204, 108, \
125, 101, 37, 58, 30, 96, 90, 79, 160, 154, \
144, 191, 185, 176, 215, 207, 200, 217, 205, 196, \
185, 171, 160, 161, 147, 137, 167, 153, 142, 165, \
151, 140, 160, 146, 133, 169, 156, 140, 169, 155, \
139, 165, 152, 136, 160, 146, 131, 166, 158, 141, \
133, 132, 113, 84, 85, 67, 67, 70, 54, 59, \
65, 52, 69, 74, 53, 73, 78, 44, 70, 77, \
43, 65, 74, 43, 62, 74, 44, 58, 68, 41, \
91, 94, 71, 165, 168, 145, 169, 171, 149, 147, \
149, 127, 116, 122, 98, 54, 80, 46, 30, 60, \
25, 32, 26, 24, 47, 42, 37, 91, 86, 77, \
131, 127, 116, 146, 142, 127, 92, 88, 72, 53, \
49, 35, 63, 60, 44, 63, 60, 44, 59, 56, \
38, 72, 69, 51, 68, 65, 48, 64, 61, 44, \
54, 50, 34, 67, 65, 46, 65, 67, 43, 58, \
62, 39, 57, 64, 43, 48, 57, 40, 78, 83, \
56, 76, 72, 30, 73, 71, 31, 68, 69, 31, \
65, 67, 31, 62, 68, 33, 62, 71, 36, 70, \
80, 45, 70, 80, 45, 62, 72, 37, 55, 67, \
33, 47, 69, 38, 45, 69, 39, 85, 77, 78, \
84, 77, 73, 87, 81, 72, 95, 89, 76, 121, \
112, 95, 111, 100, 83, 102, 91, 76, 102, 92, \
75, 102, 91, 75, 103, 92, 76, 100, 89, 74, \
95, 84, 70, 90, 79, 64, 81, 69, 55, 83, \
71, 53, 87, 75, 52, 90, 80, 59, 85, 77, \
59, 70, 65, 49, 110, 102, 80, 111, 97, 66, \
106, 94, 63, 97, 88, 60, 95, 87, 61, 98, \
93, 68, 97, 96, 71, 97, 96, 71, 98, 96, \
72, 95, 94, 69, 92, 92, 68, 90, 93, 73, \
89, 92, 73, 133, 120, 117, 127, 115, 108, 119, \
107, 98, 112, 100, 87, 139, 119, 105, 151, 126, \
112, 152, 127, 112, 151, 126, 112, 153, 128, 113, \
153, 127, 115, 152, 126, 115, 150, 125, 113, 147, \
121, 110, 144, 118, 107, 145, 117, 104, 145, 115, \
100, 139, 112, 98, 134, 108, 97, 124, 101, 91, \
131, 109, 97, 134, 113, 98, 130, 110, 97, 124, \
107, 96, 116, 101, 91, 109, 95, 87, 111, 94, \
89, 116, 99, 94, 120, 104, 98, 121, 105, 100, \
118, 102, 96, 115, 99, 91, 113, 98, 89, 138, \
119, 106, 137, 118, 106, 137, 118, 107, 135, 115, \
104, 142, 117, 103, 149, 121, 105, 150, 122, 107, \
148, 120, 104, 148, 120, 104, 147, 119, 106, 147, \
118, 107, 147, 118, 108, 147, 118, 108, 146, 117, \
107, 147, 116, 105, 147, 114, 104, 143, 112, 104, \
138, 110, 103, 134, 108, 104, 133, 109, 102, 128, \
105, 94, 125, 104, 94, 123, 104, 97, 119, 103, \
96, 113, 98, 93, 103, 88, 85, 97, 82, 79, \
103, 88, 86, 110, 95, 92, 113, 98, 95, 110, \
95, 90, 107, 91, 85, 128, 104, 85, 128, 105, \
89, 140, 116, 105, 137, 112, 103, 128, 107, 92, \
135, 115, 96, 136, 117, 98, 133, 113, 95, 132, \
113, 94, 133, 112, 97, 133, 112, 99, 133, 112, \
99, 133, 112, 99, 132, 111, 98, 132, 110, 98, \
130, 107, 98, 122, 101, 94, 121, 102, 97, 121, \
106, 103, 122, 105, 97, 123, 103, 86, 120, 102, \
86, 117, 101, 87, 116, 102, 89, 114, 104, 92, \
107, 103, 91, 101, 98, 86, 91, 87, 75, 84, \
81, 68, 90, 87, 75, 95, 93, 85, 96, 94, \
87, 124, 107, 94, 122, 105, 94, 117, 100, 90, \
106, 88, 79, 118, 99, 87, 130, 111, 97, 129, \
110, 96, 125, 106, 92, 125, 106, 92, 124, 107, \
93, 122, 106, 93, 122, 105, 92, 123, 107, 93, \
122, 106, 92, 121, 104, 92, 123, 105, 97, 102, \
87, 79, 88, 74, 69, 110, 99, 96, 114, 102, \
97, 116, 101, 91, 115, 100, 90, 111, 98, 88, \
110, 97, 87, 107, 96, 87, 103, 96, 88, 102, \
96, 88, 100, 93, 85, 90, 84, 76, 79, 74, \
66, 79, 77, 71, 82, 81, 76, 123, 109, 97, \
111, 97, 86, 100, 85, 74, 111, 97, 85, 128, \
109, 97, 131, 109, 97, 130, 109, 96, 128, 107, \
94, 128, 107, 94, 125, 106, 92, 122, 104, 90, \
121, 103, 89, 124, 106, 92, 123, 105, 91, 121, \
103, 90, 122, 103, 93, 115, 98, 89, 78, 63, \
56, 76, 64, 59, 111, 98, 93, 114, 99, 91, \
111, 96, 88, 109, 94, 86, 108, 93, 86, 106, \
92, 85, 102, 90, 85, 101, 89, 83, 100, 88, \
83, 99, 87, 81, 95, 84, 79, 87, 83, 78, \
75, 72, 67, 121, 105, 92, 103, 87, 75, 112, \
96, 84, 125, 109, 97, 127, 108, 95, 129, 107, \
94, 128, 107, 93, 127, 105, 92, 127, 105, 92, \
124, 104, 90, 121, 102, 88, 120, 101, 87, 121, \
102, 88, 120, 101, 87, 120, 101, 87, 119, 99, \
86, 118, 100, 90, 99, 83, 75, 59, 46, 39, \
95, 81, 74, 116, 100, 90, 111, 95, 85, 110, \
93, 84, 107, 91, 81, 104, 88, 79, 101, 86, \
79, 99, 85, 78, 96, 82, 75, 95, 80, 73, \
91, 79, 72, 85, 83, 76, 78, 78, 70, 113, \
98, 87, 110, 96, 84, 115, 101, 90, 117, 103, \
92, 118, 100, 89, 118, 99, 88, 118, 98, 88, \
117, 97, 87, 116, 97, 87, 116, 97, 86, 115, \
97, 86, 114, 96, 85, 113, 95, 84, 112, 94, \
83, 112, 94, 82, 112, 93, 82, 109, 92, 83, \
107, 92, 85, 67, 56, 50, 64, 51, 45, 105, \
90, 82, 103, 88, 79, 100, 85, 76, 98, 83, \
74, 95, 81, 73, 93, 80, 75, 92, 79, 74, \
91, 78, 72, 88, 74, 69, 82, 71, 66, 74, \
72, 66, 67, 68, 62, 139, 130, 122, 138, 129, \
122, 140, 131, 124, 140, 131, 124, 139, 128, 123, \
139, 127, 123, 139, 127, 123, 139, 127, 123, 139, \
127, 123, 140, 127, 123, 140, 126, 123, 140, 126, \
123, 140, 126, 122, 139, 125, 122, 139, 125, 120, \
138, 125, 118, 136, 125, 120, 133, 125, 121, 118, \
111, 110, 92, 85, 83, 122, 112, 108, 131, 121, \
117, 129, 119, 115, 129, 118, 115, 128, 119, 116, \
126, 119, 118, 126, 119, 118, 125, 118, 117, 121, \
114, 113, 116, 110, 109, 108, 108, 107, 103, 104, \
103, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '16744';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a0e8af27ccb83968b3f350ca726c55de2';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_truck9';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{232, 236, 245, 232, 236, 245, 216, 220, 229, 207, 211, \
219, 208, 213, 219, 206, 211, 217, 202, 207, 213, \
199, 204, 211, 197, 203, 211, 195, 201, 209, 193, \
199, 207, 194, 198, 207, 194, 197, 206, 194, 197, \
206, 195, 198, 207, 195, 198, 207, 194, 198, 207, \
193, 199, 207, 196, 202, 210, 199, 205, 213, 207, \
211, 218, 219, 222, 229, 214, 216, 223, 207, 209, \
216, 202, 205, 213, 201, 204, 213, 204, 206, 215, \
206, 209, 218, 209, 212, 221, 210, 213, 222, 217, \
220, 228, 228, 231, 240, 218, 222, 232, 221, 225, \
234, 210, 214, 223, 199, 204, 211, 199, 204, 210, \
196, 201, 207, 191, 195, 202, 187, 193, 200, 183, \
192, 200, 180, 190, 197, 179, 189, 196, 181, 189, \
197, 185, 189, 197, 186, 189, 198, 186, 189, 198, \
189, 192, 201, 174, 183, 188, 123, 133, 138, 124, \
134, 140, 95, 104, 110, 82, 88, 96, 181, 185, \
192, 210, 214, 222, 202, 207, 214, 196, 201, 208, \
194, 199, 206, 196, 201, 208, 200, 205, 212, 206, \
210, 218, 209, 212, 221, 214, 217, 227, 221, 224, \
233, 209, 213, 222, 209, 213, 222, 204, 208, 217, \
196, 200, 209, 195, 199, 207, 191, 195, 203, 183, \
187, 196, 179, 183, 194, 176, 181, 196, 174, 179, \
194, 174, 178, 193, 176, 180, 194, 179, 182, 196, \
180, 183, 198, 183, 186, 201, 187, 191, 206, 172, \
183, 190, 142, 154, 158, 131, 140, 143, 46, 53, \
56, 35, 39, 42, 143, 146, 149, 183, 186, 190, \
174, 177, 181, 172, 175, 181, 175, 178, 186, 179, \
182, 190, 188, 190, 199, 196, 199, 208, 200, 202, \
212, 206, 208, 218, 210, 212, 222, 199, 203, 212, \
198, 202, 211, 196, 200, 209, 192, 196, 205, 191, \
195, 204, 189, 193, 202, 184, 188, 196, 181, 185, \
197, 180, 182, 199, 180, 182, 199, 178, 181, 198, \
174, 178, 197, 172, 175, 198, 170, 173, 193, 167, \
171, 186, 163, 168, 179, 151, 160, 170, 138, 147, \
152, 131, 137, 135, 96, 100, 92, 107, 106, 100, \
139, 135, 131, 148, 144, 141, 147, 143, 139, 146, \
142, 140, 145, 141, 140, 145, 141, 141, 147, 142, \
142, 147, 143, 144, 145, 144, 147, 146, 145, 149, \
148, 147, 150, 208, 212, 221, 204, 207, 215, 204, \
207, 216, 208, 212, 221, 206, 211, 220, 199, 204, \
213, 193, 197, 206, 187, 191, 203, 175, 180, 196, \
162, 167, 183, 151, 154, 168, 152, 151, 164, 151, \
150, 162, 141, 144, 151, 137, 141, 142, 137, 138, \
136, 136, 135, 131, 135, 132, 127, 139, 133, 127, \
145, 135, 130, 141, 134, 130, 129, 125, 122, 129, \
125, 122, 132, 128, 124, 125, 120, 118, 127, 121, \
121, 128, 122, 122, 128, 122, 122, 128, 123, 122, \
127, 124, 121, 130, 127, 124, 130, 127, 124, 218, \
224, 233, 212, 218, 227, 206, 212, 221, 196, 202, \
206, 180, 187, 188, 159, 166, 167, 148, 155, 156, \
141, 147, 146, 136, 142, 141, 136, 143, 143, 134, \
132, 125, 126, 116, 103, 135, 126, 116, 150, 134, \
128, 139, 127, 122, 120, 120, 113, 114, 115, 109, \
116, 114, 109, 119, 114, 110, 125, 116, 114, 129, \
121, 116, 126, 121, 113, 134, 129, 121, 140, 135, \
127, 139, 132, 127, 136, 128, 127, 131, 123, 122, \
130, 122, 121, 127, 118, 117, 127, 112, 113, 125, \
109, 110, 122, 107, 107, 152, 158, 161, 136, 142, \
145, 128, 134, 137, 125, 128, 126, 128, 131, 124, \
127, 130, 123, 123, 126, 120, 124, 122, 118, 157, \
153, 154, 173, 174, 179, 172, 169, 171, 151, 140, \
133, 122, 105, 92, 139, 112, 104, 129, 105, 100, \
127, 116, 110, 137, 122, 119, 145, 125, 124, 153, \
129, 130, 161, 133, 135, 164, 136, 139, 161, 132, \
136, 160, 132, 135, 158, 130, 134, 160, 127, 134, \
161, 122, 133, 159, 120, 130, 156, 118, 128, 156, \
115, 126, 158, 109, 121, 154, 104, 116, 151, 101, \
113, 144, 141, 135, 144, 141, 135, 148, 145, 139, \
149, 148, 144, 153, 153, 151, 124, 124, 121, 100, \
100, 97, 123, 123, 122, 133, 137, 140, 121, 128, \
135, 107, 111, 119, 142, 138, 142, 147, 132, 132, \
116, 109, 105, 121, 99, 102, 150, 97, 111, 156, \
94, 114, 153, 91, 111, 155, 91, 112, 152, 86, \
108, 149, 87, 105, 153, 92, 110, 145, 84, 103, \
151, 90, 108, 149, 87, 107, 147, 85, 108, 140, \
79, 99, 143, 81, 104, 142, 79, 104, 143, 76, \
97, 144, 77, 97, 146, 78, 97, 159, 155, 150, \
156, 153, 147, 156, 153, 147, 154, 154, 149, 156, \
157, 152, 129, 130, 126, 114, 115, 110, 156, 161, \
158, 111, 122, 122, 100, 108, 109, 63, 67, 69, \
111, 111, 115, 131, 130, 135, 126, 125, 127, 147, \
125, 132, 142, 89, 103, 145, 88, 103, 136, 82, \
96, 144, 89, 103, 137, 82, 96, 124, 73, 86, \
138, 91, 102, 127, 79, 91, 135, 87, 99, 130, \
84, 97, 122, 79, 89, 118, 77, 79, 127, 86, \
91, 125, 83, 94, 117, 76, 81, 111, 70, 75, \
109, 69, 73, 156, 153, 148, 154, 151, 146, 154, \
151, 146, 152, 152, 146, 156, 157, 151, 144, 146, \
140, 134, 135, 129, 160, 165, 162, 115, 126, 127, \
98, 105, 107, 76, 79, 82, 121, 123, 127, 136, \
141, 144, 145, 146, 147, 158, 150, 152, 92, 74, \
75, 99, 75, 71, 102, 76, 71, 100, 75, 69, \
100, 74, 69, 77, 57, 58, 69, 54, 50, 82, \
70, 56, 69, 54, 49, 58, 43, 47, 62, 48, \
44, 85, 73, 57, 91, 80, 60, 91, 78, 62, \
90, 76, 59, 71, 60, 45, 55, 50, 39, 158, \
154, 152, 156, 155, 145, 165, 166, 159, 178, 182, \
183, 186, 192, 192, 182, 188, 188, 178, 183, 183, \
170, 176, 178, 144, 152, 154, 135, 142, 144, 138, \
142, 145, 155, 159, 163, 139, 146, 149, 148, 151, \
155, 166, 164, 168, 79, 74, 76, 90, 82, 69, \
96, 81, 66, 79, 55, 47, 81, 49, 45, 75, \
48, 49, 73, 49, 43, 92, 64, 51, 80, 56, \
45, 74, 50, 44, 80, 47, 43, 98, 62, 55, \
87, 60, 49, 93, 80, 67, 111, 103, 90, 82, \
77, 67, 35, 33, 28, 160, 153, 153, 175, 173, \
162, 188, 186, 187, 177, 171, 182, 164, 158, 162, \
156, 150, 154, 144, 137, 141, 146, 144, 149, 168, \
172, 178, 171, 176, 181, 170, 175, 180, 153, 158, \
163, 144, 152, 155, 153, 158, 162, 185, 187, 192, \
122, 122, 126, 113, 111, 101, 118, 107, 97, 70, \
45, 43, 48, 11, 15, 74, 29, 34, 82, 32, \
36, 81, 27, 31, 88, 39, 38, 90, 39, 38, \
90, 26, 30, 95, 32, 38, 94, 52, 53, 121, \
104, 98, 134, 127, 117, 97, 90, 84, 33, 24, \
22, 161, 155, 149, 171, 164, 143, 150, 139, 125, \
151, 141, 138, 158, 152, 141, 169, 163, 153, 159, \
153, 143, 128, 120, 113, 140, 130, 128, 151, 141, \
139, 147, 137, 135, 133, 124, 123, 125, 119, 121, \
127, 124, 126, 153, 153, 153, 155, 157, 157, 157, \
156, 158, 155, 149, 152, 89, 76, 78, 70, 50, \
52, 94, 67, 68, 99, 74, 74, 100, 79, 80, \
101, 75, 81, 99, 69, 78, 101, 74, 81, 128, \
107, 110, 140, 129, 125, 139, 135, 126, 143, 137, \
127, 105, 98, 91, 29, 21, 18, 113, 117, 115, \
176, 178, 164, 185, 182, 174, 198, 197, 201, 202, \
206, 210, 177, 181, 183, 170, 174, 174, 174, 172, \
167, 141, 129, 115, 137, 127, 106, 138, 127, 108, \
141, 129, 120, 105, 98, 96, 119, 115, 113, 119, \
110, 110, 120, 105, 108, 155, 148, 157, 161, 157, \
167, 137, 131, 139, 139, 132, 139, 156, 144, 154, \
154, 143, 150, 155, 147, 151, 157, 146, 156, 139, \
128, 140, 110, 106, 113, 137, 131, 135, 149, 140, \
141, 141, 131, 129, 144, 141, 131, 112, 108, 97, \
61, 55, 38, 113, 123, 124, 162, 169, 169, 188, \
189, 199, 179, 181, 191, 116, 119, 124, 54, 57, \
58, 54, 59, 56, 123, 126, 125, 173, 176, 177, \
162, 164, 164, 157, 160, 160, 170, 171, 173, 132, \
131, 131, 129, 131, 129, 160, 156, 156, 122, 107, \
110, 108, 92, 89, 112, 96, 91, 114, 98, 93, \
114, 99, 94, 104, 89, 84, 101, 87, 77, 111, \
96, 86, 98, 81, 84, 71, 61, 66, 60, 58, \
54, 61, 55, 49, 92, 83, 75, 138, 129, 119, \
144, 143, 134, 122, 118, 111, 99, 92, 77, 159, \
169, 170, 120, 126, 125, 130, 132, 140, 119, 122, \
127, 50, 53, 51, 55, 59, 54, 58, 63, 55, \
59, 64, 56, 137, 141, 139, 162, 165, 170, 151, \
154, 156, 165, 167, 163, 125, 122, 125, 119, 122, \
124, 162, 166, 168, 158, 155, 158, 143, 135, 129, \
137, 128, 119, 140, 131, 122, 141, 132, 123, 140, \
134, 122, 135, 133, 114, 139, 138, 116, 88, 85, \
73, 63, 60, 54, 66, 65, 59, 62, 58, 50, \
84, 76, 66, 125, 118, 107, 124, 122, 115, 120, \
116, 115, 114, 106, 104, 145, 151, 153, 91, 99, \
99, 74, 83, 85, 49, 56, 56, 53, 54, 47, \
114, 113, 102, 110, 112, 104, 59, 63, 59, 107, \
109, 109, 169, 171, 174, 154, 156, 157, 159, 161, \
160, 123, 124, 125, 98, 101, 102, 132, 136, 137, \
128, 130, 131, 138, 136, 137, 133, 131, 131, 122, \
119, 120, 119, 117, 117, 115, 108, 111, 102, 93, \
90, 98, 90, 80, 69, 59, 55, 66, 59, 59, \
72, 69, 65, 72, 69, 64, 53, 49, 44, 92, \
87, 82, 126, 124, 117, 119, 115, 113, 114, 109, \
110, 116, 117, 117, 94, 99, 98, 76, 85, 82, \
45, 51, 49, 60, 61, 53, 108, 105, 93, 100, \
101, 93, 59, 64, 61, 67, 72, 68, 107, 112, \
107, 99, 104, 100, 92, 96, 92, 78, 79, 76, \
53, 54, 51, 63, 64, 60, 74, 75, 71, 123, \
121, 113, 118, 116, 106, 88, 86, 76, 88, 85, \
76, 67, 61, 59, 29, 22, 24, 18, 11, 13, \
33, 24, 27, 65, 58, 58, 86, 82, 77, 93, \
90, 85, 48, 45, 40, 87, 84, 79, 143, 140, \
133, 119, 115, 111, 122, 118, 117, 124, 121, 119, \
119, 120, 117, 111, 115, 111, 85, 91, 87, 63, \
64, 56, 76, 73, 62, 76, 77, 69, 62, 67, \
61, 61, 66, 58, 78, 83, 75, 98, 103, 95, \
88, 91, 84, 82, 80, 75, 80, 78, 72, 81, \
79, 73, 88, 86, 80, 104, 102, 94, 106, 103, \
95, 98, 95, 87, 94, 92, 84, 81, 79, 72, \
35, 32, 33, 6, 3, 9, 14, 11, 12, 48, \
45, 41, 73, 70, 65, 68, 65, 61, 72, 69, \
65, 86, 83, 78, 103, 100, 94, 104, 101, 97, \
111, 107, 107, 124, 123, 127, 113, 116, 118, 104, \
110, 111, 94, 102, 99, 59, 65, 59, 58, 60, \
54, 62, 62, 58, 53, 54, 51, 67, 68, 67, \
75, 76, 74, 76, 77, 75, 73, 74, 72, 71, \
71, 70, 71, 70, 69, 70, 69, 68, 69, 68, \
68, 68, 65, 65, 70, 66, 66, 70, 66, 66, \
70, 66, 66, 72, 69, 68, 69, 65, 66, 64, \
61, 62, 68, 65, 65, 76, 74, 73, 88, 87, \
86, 92, 91, 91, 101, 101, 100, 111, 110, 109, \
117, 113, 113, 119, 115, 115, 121, 117, 118, 108, \
108, 112, 94, 97, 100, 77, 85, 87, 66, 75, \
74, 64, 71, 69, 71, 73, 72, 75, 75, 75, \
75, 74, 74, 73, 73, 73, 80, 80, 80, 82, \
81, 81, 82, 82, 82, 84, 84, 84, 90, 90, \
90, 91, 91, 91, 95, 95, 95, 103, 99, 100, \
108, 103, 105, 110, 106, 107, 113, 109, 110, 116, \
112, 113, 116, 112, 112, 119, 115, 116, 122, 118, \
119, 121, 118, 119, 122, 122, 121, 123, 123, 123, \
122, 122, 121, 122, 122, 121, 126, 122, 123, 126, \
121, 122, 126, 122, 122, 118, 119, 124, 112, 116, \
119, 110, 117, 118, 111, 119, 119, 108, 115, 117, \
108, 111, 116, 111, 112, 116, 112, 112, 115, 113, \
114, 115, 114, 115, 116, 112, 113, 114, 110, 110, \
111, 111, 111, 112, 114, 114, 115, 114, 114, 115, \
116, 116, 117, 120, 117, 118, 121, 118, 119, 120, \
117, 118, 121, 118, 119, 120, 117, 119, 120, 117, \
119, 119, 115, 117, 117, 114, 115, 118, 116, 117, \
118, 118, 119, 118, 119, 120, 124, 124, 126, 125, \
124, 127, 126, 124, 126, 126, 123, 125, 124, 121, \
123, 131, 133, 134, 136, 139, 136, 132, 136, 131, \
125, 130, 123, 118, 121, 120, 114, 116, 120, 115, \
118, 117, 117, 118, 114, 116, 116, 114, 118, 117, \
116, 118, 117, 116, 116, 115, 113, 116, 113, 107, \
119, 117, 110, 120, 117, 111, 121, 118, 112, 121, \
118, 114, 122, 119, 115, 121, 117, 114, 122, 119, \
115, 120, 116, 113, 120, 117, 113, 121, 118, 111, \
117, 115, 105, 114, 113, 100, 115, 116, 101, 115, \
117, 103, 118, 119, 110, 120, 120, 112, 118, 116, \
105, 121, 119, 108, 119, 116, 105, 136, 132, 117, \
130, 127, 108, 125, 122, 100, 118, 116, 93, 122, \
118, 101, 125, 120, 109, 126, 123, 105, 127, 122, \
102, 123, 116, 100, 123, 116, 100, 128, 122, 106, \
128, 121, 103, 127, 118, 96, 134, 125, 103, 133, \
124, 102, 131, 121, 100, 129, 119, 103, 138, 127, \
113, 141, 131, 117, 140, 130, 117, 140, 130, 112, \
138, 129, 106, 139, 130, 103, 132, 124, 93, 126, \
121, 84, 125, 123, 82, 123, 121, 83, 117, 114, \
80, 122, 117, 86, 132, 124, 94, 138, 130, 100, \
142, 134, 104, 134, 125, 98, 136, 128, 99, 130, \
124, 92, 113, 108, 74, 128, 121, 91, 133, 126, \
99, 128, 122, 92, 123, 115, 84, 128, 118, 90, \
127, 117, 90, 135, 125, 97, 125, 114, 87, 126, \
111, 88, 137, 121, 99, 139, 124, 101, 128, 114, \
91, 118, 106, 84, 130, 119, 97, 142, 129, 106, \
144, 129, 106, 142, 130, 102, 135, 125, 94, 139, \
129, 97, 142, 132, 100, 146, 135, 103, 141, 128, \
97, 142, 129, 100, 141, 128, 101, 140, 126, 101, \
148, 133, 111, 149, 134, 112, 151, 136, 114, 136, \
124, 98, 137, 128, 100, 124, 118, 90, 110, 104, \
73, 117, 111, 79, 118, 112, 80, 124, 118, 85, \
119, 112, 81, 120, 111, 83, 124, 114, 87, 134, \
125, 97, 110, 99, 73, 115, 100, 77, 134, 119, \
96, 142, 127, 104, 134, 120, 97, 120, 112, 89, \
128, 120, 96, 138, 128, 102, 138, 124, 97, 139, \
128, 95, 136, 126, 91, 137, 126, 95, 140, 129, \
101, 143, 130, 105, 144, 128, 106, 145, 129, 107, \
145, 129, 107, 145, 129, 107, 141, 126, 107, 147, \
132, 113, 148, 133, 114, 136, 123, 100, 133, 124, \
101, 129, 123, 99, 133, 124, 99, 136, 124, 99, \
129, 117, 92, 133, 121, 96, 133, 122, 98, 128, \
117, 94, 133, 123, 100, 137, 126, 103, 126, 115, \
92, 130, 115, 92, 138, 123, 100, 142, 127, 104, \
140, 125, 102, 141, 127, 107, 142, 130, 109, 138, \
129, 103, 133, 127, 98, 136, 127, 93, 132, 121, \
85, 132, 121, 90, 140, 128, 100, 140, 128, 103, \
137, 126, 101, 135, 123, 99, 132, 121, 96, 133, \
121, 98, 135, 120, 101, 136, 121, 102, 141, 126, \
107, 131, 121, 99, 127, 120, 97, 130, 120, 98, \
137, 125, 104, 137, 124, 104, 131, 119, 98, 134, \
121, 100, 136, 123, 103, 138, 125, 106, 139, 126, \
107, 137, 123, 104, 134, 121, 101, 132, 121, 96, \
135, 122, 97, 138, 123, 99, 136, 120, 96, 139, \
123, 101, 144, 130, 107, 136, 124, 99, 132, 123, \
95, 125, 116, 85, 118, 108, 76, 125, 116, 86, \
136, 126, 98, 140, 129, 101, 132, 124, 95, 120, \
117, 87, 112, 110, 81, 120, 114, 88, 131, 120, \
97, 134, 121, 99, 133, 118, 96, 127, 118, 97, \
118, 112, 90, 128, 115, 96, 131, 118, 99, 130, \
120, 100, 128, 117, 97, 128, 117, 97, 132, 120, \
101, 139, 124, 105, 137, 122, 103, 140, 124, 105, \
136, 123, 103, 126, 116, 93, 134, 122, 99, 142, \
126, 104, 140, 122, 101, 139, 123, 101, 139, 124, \
102, 139, 124, 102, 137, 122, 100, 134, 119, 95, \
133, 118, 93, 141, 127, 102, 140, 125, 100, 131, \
120, 91, 120, 119, 85, 97, 106, 71, 79, 88, \
58, 99, 101, 75, 128, 119, 95, 139, 128, 104, \
138, 122, 100, 122, 113, 98, 114, 108, 92, 131, \
117, 104, 135, 121, 104, 131, 120, 100, 133, 122, \
102, 129, 118, 98, 130, 117, 98, 140, 125, 106, \
142, 127, 108, 144, 129, 110, 141, 127, 108, 129, \
118, 100, 131, 119, 101, 144, 128, 111, 142, 123, \
107, 137, 121, 104, 138, 123, 106, 144, 129, 112, \
141, 125, 108, 137, 121, 102, 137, 122, 101, 140, \
124, 104, 143, 128, 107, 129, 116, 93, 108, 104, \
76, 81, 87, 59, 73, 80, 55, 96, 95, 75, \
125, 115, 96, 136, 123, 105, 143, 126, 110, 122, \
115, 102, 108, 104, 90, 122, 111, 99, 129, 116, \
100, 125, 114, 94, 127, 116, 97, 123, 112, 92, \
127, 115, 96, 135, 120, 101, 140, 125, 106, 143, \
128, 109, 143, 130, 111, 129, 118, 99, 126, 113, \
95, 141, 125, 108, 142, 124, 108, 135, 116, 100, \
147, 129, 113, 149, 131, 115, 146, 128, 112, 144, \
126, 109, 145, 128, 110, 140, 122, 105, 140, 122, \
105, 137, 119, 101, 126, 110, 91, 126, 114, 95, \
134, 121, 103, 136, 121, 105, 135, 118, 104, 138, \
121, 107, 141, 122, 108, 117, 111, 93, 105, 103, \
84, 116, 107, 91, 124, 112, 94, 125, 114, 93, \
122, 111, 92, 121, 110, 90, 128, 115, 96, 138, \
123, 104, 140, 125, 106, 135, 120, 101, 132, 118, \
99, 125, 115, 94, 128, 116, 97, 139, 123, 105, \
141, 122, 105, 138, 119, 102, 148, 129, 112, 147, \
128, 111, 144, 125, 108, 146, 127, 110, 147, 128, \
111, 144, 125, 108, 145, 126, 109, 146, 127, 110, \
141, 122, 105, 141, 121, 105, 140, 121, 104, 138, \
119, 103, 140, 121, 107, 141, 121, 107, 137, 118, \
104, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '17054';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a58f13b92c3b0f5a10a1c559ab8104c5e';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_horse5';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{221, 226, 198, 211, 216, 181, 195, 199, 171, 185, 189, \
155, 184, 190, 142, 177, 182, 146, 193, 198, 166, \
167, 178, 111, 124, 132, 73, 130, 137, 69, 164, \
172, 101, 112, 119, 68, 111, 116, 68, 109, 119, \
74, 64, 79, 61, 50, 66, 64, 53, 69, 61, \
59, 70, 64, 66, 72, 64, 78, 85, 72, 70, \
81, 68, 88, 103, 90, 102, 118, 107, 101, 112, \
105, 124, 137, 131, 150, 161, 158, 210, 212, 216, \
239, 237, 241, 240, 239, 236, 246, 243, 242, 246, \
243, 243, 209, 212, 208, 213, 220, 183, 205, 213, \
166, 201, 210, 166, 181, 191, 140, 181, 193, 127, \
188, 198, 144, 187, 195, 145, 150, 161, 81, 103, \
114, 51, 107, 120, 55, 131, 143, 70, 121, 130, \
70, 159, 170, 103, 123, 138, 79, 61, 78, 53, \
40, 60, 52, 43, 62, 50, 62, 75, 66, 78, \
91, 79, 87, 101, 85, 61, 73, 56, 85, 96, \
75, 96, 108, 83, 85, 104, 79, 109, 128, 111, \
130, 141, 135, 196, 194, 199, 213, 203, 211, 217, \
208, 210, 227, 214, 215, 232, 222, 222, 189, 190, \
187, 208, 220, 174, 194, 211, 155, 197, 215, 162, \
170, 190, 131, 172, 192, 124, 185, 201, 144, 191, \
204, 151, 172, 185, 108, 125, 136, 88, 99, 114, \
74, 96, 105, 55, 93, 97, 51, 143, 152, 96, \
130, 144, 83, 82, 96, 64, 55, 71, 57, 29, \
44, 28, 49, 58, 48, 55, 69, 70, 55, 71, \
72, 54, 67, 54, 78, 90, 56, 115, 130, 80, \
97, 126, 84, 98, 127, 102, 111, 133, 124, 141, \
150, 153, 171, 169, 175, 184, 174, 178, 205, 187, \
187, 213, 196, 195, 184, 181, 180, 175, 197, 145, \
153, 179, 122, 138, 167, 118, 140, 172, 120, 158, \
189, 124, 177, 202, 145, 180, 200, 149, 180, 199, \
129, 134, 150, 108, 79, 95, 53, 131, 135, 83, \
134, 132, 82, 144, 149, 86, 127, 135, 68, 85, \
87, 52, 80, 83, 69, 84, 86, 71, 99, 95, \
88, 64, 60, 71, 66, 63, 79, 83, 78, 82, \
116, 111, 91, 164, 164, 121, 132, 146, 110, 86, \
108, 88, 82, 105, 101, 106, 126, 126, 127, 141, \
141, 138, 138, 141, 186, 171, 168, 208, 190, 186, \
181, 173, 175, 140, 170, 116, 116, 151, 97, 101, \
139, 98, 116, 157, 112, 146, 187, 120, 150, 186, \
122, 151, 181, 123, 178, 204, 132, 144, 161, 125, \
99, 108, 80, 136, 131, 93, 165, 153, 118, 184, \
180, 132, 168, 162, 104, 127, 113, 80, 108, 96, \
83, 141, 128, 117, 168, 149, 145, 138, 109, 116, \
141, 107, 124, 151, 115, 138, 165, 129, 144, 186, \
155, 151, 173, 157, 142, 127, 123, 118, 68, 77, \
82, 65, 82, 82, 79, 100, 97, 96, 107, 107, \
179, 169, 163, 200, 180, 176, 175, 164, 168, 110, \
146, 101, 100, 139, 91, 97, 135, 98, 106, 148, \
113, 125, 170, 114, 125, 173, 111, 128, 169, 113, \
155, 178, 131, 135, 131, 119, 116, 86, 93, 165, \
124, 123, 186, 142, 138, 186, 145, 137, 184, 141, \
124, 176, 132, 122, 164, 128, 130, 189, 154, 159, \
200, 158, 167, 180, 132, 141, 148, 96, 115, 152, \
98, 130, 166, 111, 146, 178, 125, 152, 192, 151, \
162, 201, 165, 182, 141, 119, 133, 63, 64, 68, \
50, 63, 71, 77, 79, 83, 185, 171, 164, 193, \
179, 182, 169, 160, 168, 96, 134, 98, 71, 112, \
69, 68, 103, 68, 98, 138, 109, 116, 155, 115, \
116, 156, 112, 123, 151, 117, 109, 106, 99, 97, \
64, 79, 136, 81, 101, 164, 101, 113, 167, 102, \
109, 169, 105, 111, 182, 115, 121, 191, 129, 136, \
195, 147, 158, 209, 163, 179, 204, 150, 167, 190, \
136, 150, 143, 89, 110, 141, 85, 116, 161, 103, \
139, 181, 124, 157, 186, 136, 162, 206, 158, 185, \
209, 174, 188, 116, 102, 113, 67, 63, 87, 91, \
77, 84, 192, 171, 162, 211, 200, 208, 178, 173, \
185, 90, 129, 96, 73, 114, 73, 65, 101, 68, \
73, 114, 85, 84, 118, 85, 102, 124, 99, 93, \
93, 89, 83, 51, 74, 113, 63, 94, 152, 97, \
118, 159, 96, 108, 164, 97, 102, 177, 111, 114, \
191, 123, 127, 201, 140, 147, 211, 163, 173, 217, \
171, 184, 208, 155, 168, 205, 149, 159, 158, 102, \
119, 145, 88, 117, 149, 92, 126, 169, 112, 144, \
185, 133, 164, 202, 157, 183, 227, 194, 203, 168, \
142, 158, 101, 79, 110, 113, 90, 97, 195, 168, \
159, 215, 201, 210, 180, 176, 190, 93, 134, 102, \
92, 136, 95, 108, 147, 111, 83, 126, 96, 74, \
109, 83, 86, 100, 96, 69, 53, 78, 95, 53, \
98, 140, 87, 129, 156, 102, 123, 153, 89, 100, \
163, 93, 97, 182, 111, 111, 188, 118, 121, 203, \
142, 149, 219, 171, 180, 214, 170, 179, 208, 156, \
164, 216, 157, 163, 181, 121, 134, 157, 98, 123, \
152, 94, 126, 150, 94, 126, 169, 115, 148, 201, \
152, 176, 235, 195, 199, 200, 162, 180, 101, 68, \
106, 97, 71, 79, 186, 159, 151, 188, 175, 186, \
168, 167, 181, 87, 130, 96, 97, 144, 98, 117, \
159, 116, 109, 155, 119, 102, 132, 117, 60, 62, \
80, 63, 38, 85, 111, 75, 129, 156, 114, 155, \
160, 107, 129, 148, 84, 94, 156, 84, 85, 172, \
98, 95, 179, 107, 109, 187, 125, 133, 203, 156, \
164, 209, 165, 171, 212, 161, 164, 210, 149, 149, \
179, 116, 124, 162, 102, 123, 161, 103, 132, 151, \
97, 129, 161, 108, 140, 193, 133, 152, 220, 161, \
159, 195, 149, 163, 82, 53, 93, 97, 77, 94, \
193, 169, 169, 186, 176, 190, 162, 162, 176, 79, \
124, 85, 81, 129, 77, 99, 142, 92, 100, 144, \
104, 61, 72, 71, 49, 29, 67, 93, 54, 116, \
128, 94, 148, 157, 122, 158, 162, 109, 131, 151, \
87, 97, 154, 81, 81, 165, 88, 83, 178, 104, \
106, 180, 119, 127, 194, 146, 153, 214, 170, 174, \
211, 159, 159, 198, 136, 131, 172, 107, 111, 153, \
91, 110, 162, 104, 133, 169, 117, 147, 169, 120, \
148, 187, 114, 129, 202, 121, 114, 186, 137, 145, \
74, 58, 96, 89, 79, 107, 194, 177, 184, 204, \
198, 215, 172, 173, 187, 92, 134, 93, 73, 120, \
65, 89, 128, 82, 95, 121, 98, 31, 26, 40, \
51, 21, 67, 105, 63, 126, 136, 102, 154, 154, \
118, 150, 171, 114, 132, 162, 97, 104, 157, 83, \
81, 172, 92, 87, 178, 102, 101, 181, 117, 121, \
201, 147, 152, 211, 159, 161, 197, 140, 136, 181, \
115, 107, 179, 110, 111, 151, 86, 103, 154, 98, \
125, 168, 122, 153, 169, 117, 149, 168, 94, 103, \
196, 107, 100, 185, 132, 145, 65, 57, 98, 85, \
80, 111, 188, 178, 187, 196, 197, 213, 168, 175, \
186, 106, 134, 98, 105, 139, 90, 130, 150, 123, \
72, 73, 76, 15, 5, 23, 48, 23, 60, 100, \
63, 112, 129, 94, 135, 148, 106, 133, 166, 105, \
117, 161, 95, 95, 160, 88, 79, 180, 101, 91, \
185, 106, 97, 187, 115, 109, 204, 140, 137, 207, \
144, 139, 187, 119, 108, 182, 109, 99, 163, 91, \
92, 147, 83, 97, 137, 82, 108, 144, 93, 128, \
145, 86, 121, 145, 72, 77, 195, 118, 109, 159, \
117, 138, 47, 40, 88, 111, 99, 133, 194, 181, \
191, 182, 183, 200, 166, 172, 182, 164, 171, 147, \
166, 179, 149, 158, 159, 154, 53, 42, 60, 13, \
3, 14, 41, 17, 40, 82, 43, 79, 103, 59, \
91, 106, 56, 80, 128, 68, 85, 168, 105, 108, \
161, 93, 83, 166, 93, 79, 172, 95, 81, 178, \
101, 90, 193, 121, 112, 212, 143, 132, 201, 129, \
116, 182, 110, 105, 135, 79, 80, 131, 88, 96, \
119, 67, 92, 124, 60, 99, 120, 57, 86, 146, \
67, 72, 188, 138, 125, 108, 101, 117, 32, 26, \
81, 107, 84, 129, 180, 159, 176, 154, 146, 167, \
157, 154, 170, 190, 191, 175, 181, 185, 171, 111, \
108, 118, 20, 9, 40, 17, 3, 20, 40, 15, \
40, 80, 40, 76, 108, 56, 93, 102, 45, 81, \
116, 59, 91, 152, 94, 110, 128, 67, 69, 119, \
55, 52, 133, 63, 58, 148, 74, 70, 164, 93, \
90, 183, 114, 112, 176, 108, 107, 153, 100, 102, \
154, 129, 126, 158, 148, 145, 109, 77, 94, 110, \
48, 85, 106, 43, 69, 153, 77, 82, 172, 152, \
137, 66, 86, 102, 26, 21, 85, 82, 62, 114, \
157, 141, 158, 154, 153, 171, 156, 159, 174, 191, \
193, 183, 179, 183, 178, 91, 92, 109, 3, 0, \
32, 24, 6, 36, 43, 17, 50, 82, 46, 86, \
141, 88, 136, 131, 74, 122, 95, 47, 86, 86, \
39, 64, 70, 21, 36, 86, 34, 46, 111, 59, \
67, 111, 57, 62, 119, 64, 69, 130, 77, 86, \
157, 110, 123, 176, 148, 157, 189, 190, 185, 183, \
195, 186, 133, 118, 129, 100, 50, 84, 94, 35, \
65, 147, 93, 101, 161, 162, 152, 47, 68, 93, \
23, 19, 89, 63, 52, 104, 146, 139, 152, 150, \
159, 169, 155, 168, 176, 222, 215, 213, 221, 216, \
218, 117, 114, 132, 6, 0, 31, 52, 30, 62, \
52, 27, 58, 111, 81, 116, 136, 90, 135, 134, \
86, 128, 136, 102, 126, 116, 83, 97, 80, 45, \
54, 139, 102, 112, 195, 167, 172, 168, 144, 143, \
159, 131, 129, 164, 138, 143, 187, 168, 181, 195, \
183, 196, 198, 197, 199, 211, 214, 209, 192, 175, \
186, 131, 83, 119, 110, 55, 93, 136, 112, 123, \
165, 175, 175, 45, 50, 89, 30, 20, 96, 75, \
60, 114, 170, 160, 168, 184, 189, 193, 169, 178, \
183, 213, 202, 203, 195, 183, 192, 125, 111, 131, \
35, 15, 44, 77, 47, 79, 80, 59, 81, 174, \
158, 172, 125, 88, 125, 134, 93, 126, 224, 203, \
210, 213, 192, 193, 123, 97, 107, 156, 127, 139, \
224, 208, 208, 221, 213, 206, 218, 207, 199, 204, \
194, 191, 185, 180, 183, 169, 161, 170, 180, 173, \
178, 220, 211, 210, 206, 183, 193, 146, 101, 137, \
127, 77, 121, 137, 121, 141, 177, 182, 188, 49, \
43, 90, 35, 20, 90, 105, 81, 131, 193, 173, \
190, 203, 196, 205, 180, 179, 184, 223, 221, 220, \
170, 161, 172, 87, 64, 89, 77, 40, 71, 90, \
47, 85, 116, 98, 115, 207, 204, 201, 122, 92, \
130, 137, 101, 135, 236, 224, 224, 242, 232, 229, \
146, 127, 151, 135, 108, 135, 235, 220, 224, 245, \
239, 235, 242, 235, 232, 243, 236, 234, 233, 227, \
225, 207, 203, 201, 226, 223, 224, 237, 231, 228, \
205, 187, 193, 125, 90, 123, 101, 60, 104, 133, \
107, 138, 178, 170, 181, 46, 36, 86, 49, 34, \
89, 153, 128, 165, 213, 194, 217, 209, 198, 211, \
183, 178, 184, 235, 240, 236, 197, 191, 200, 79, \
55, 79, 103, 61, 94, 111, 60, 101, 145, 119, \
142, 220, 213, 216, 120, 92, 139, 145, 117, 151, \
239, 235, 229, 246, 245, 239, 175, 164, 185, 125, \
104, 136, 227, 217, 225, 247, 247, 242, 241, 240, \
236, 241, 240, 236, 236, 235, 230, 220, 219, 214, \
243, 242, 241, 247, 243, 239, 234, 221, 224, 116, \
86, 118, 60, 25, 73, 103, 77, 116, 179, 166, \
182, 58, 41, 92, 78, 59, 104, 166, 146, 167, \
201, 185, 201, 198, 188, 198, 181, 176, 182, 229, \
239, 233, 188, 185, 190, 82, 61, 84, 83, 42, \
76, 118, 65, 108, 146, 113, 144, 205, 191, 204, \
111, 89, 139, 161, 145, 174, 243, 248, 236, 241, \
247, 241, 193, 192, 204, 116, 103, 134, 206, 200, \
214, 238, 245, 238, 235, 241, 234, 232, 239, 232, \
226, 232, 225, 223, 224, 219, 231, 231, 230, 235, \
234, 229, 238, 229, 230, 120, 98, 128, 57, 28, \
80, 87, 65, 109, 168, 154, 172, 96, 75, 120, \
139, 119, 150, 212, 201, 205, 219, 209, 214, 207, \
201, 206, 182, 178, 183, 227, 238, 231, 210, 212, \
212, 109, 94, 114, 62, 29, 64, 93, 47, 91, \
121, 87, 123, 180, 164, 182, 103, 87, 133, 175, \
170, 190, 245, 255, 245, 240, 250, 246, 215, 220, \
223, 122, 115, 142, 195, 194, 210, 240, 249, 241, \
228, 237, 229, 225, 235, 227, 227, 236, 228, 231, \
234, 228, 230, 231, 230, 228, 231, 225, 231, 227, \
227, 124, 108, 137, 78, 56, 109, 83, 66, 112, \
161, 153, 167, 158, 142, 173, 187, 173, 188, 223, \
219, 215, 234, 231, 230, 233, 231, 232, 190, 189, \
191, 224, 234, 226, 227, 232, 228, 157, 150, 166, \
56, 36, 69, 58, 26, 68, 105, 77, 114, 188, \
171, 189, 106, 97, 132, 198, 201, 210, 244, 254, \
250, 238, 249, 250, 237, 244, 238, 156, 150, 170, \
189, 188, 204, 243, 253, 245, 230, 240, 233, 230, \
240, 232, 236, 245, 237, 239, 243, 236, 240, 242, \
241, 233, 240, 233, 238, 239, 237, 135, 124, 150, \
64, 45, 98, 94, 83, 127, 203, 203, 210, 220, \
217, 228, 213, 212, 209, 222, 223, 221, 228, 229, \
229, 228, 229, 229, 188, 188, 188, 229, 234, 229, \
223, 230, 225, 203, 203, 215, 85, 74, 105, 53, \
32, 77, 131, 111, 143, 204, 192, 208, 119, 115, \
142, 213, 219, 222, 235, 244, 242, 232, 241, 243, \
240, 248, 238, 194, 191, 204, 173, 171, 190, 240, \
248, 242, 240, 248, 238, 236, 244, 236, 238, 245, \
239, 241, 245, 239, 236, 240, 236, 234, 241, 232, \
230, 234, 234, 114, 107, 135, 46, 32, 81, 99, \
93, 131, 225, 230, 233, 228, 233, 234, 224, 229, \
220, 227, 230, 231, 228, 230, 232, 226, 228, 228, \
188, 188, 187, 232, 236, 233, 222, 229, 225, 220, \
222, 227, 122, 114, 142, 62, 45, 95, 157, 148, \
166, 194, 190, 208, 125, 126, 154, 221, 229, 227, \
233, 240, 231, 231, 238, 235, 236, 243, 235, 211, \
213, 222, 154, 154, 178, 224, 230, 231, 236, 245, \
228, 233, 241, 231, 234, 240, 238, 235, 240, 236, \
233, 239, 229, 239, 244, 235, 206, 209, 218, 81, \
78, 113, 69, 62, 104, 117, 114, 143, 229, 230, \
239, 227, 230, 231, 227, 230, 227, 229, 230, 231, \
230, 230, 231, 231, 231, 231, 190, 190, 190, 228, \
235, 229, 217, 228, 219, 218, 225, 223, 156, 153, \
169, 90, 78, 110, 166, 160, 172, 161, 157, 183, \
124, 126, 151, 223, 231, 223, 229, 235, 225, 227, \
232, 228, 232, 238, 230, 217, 221, 227, 131, 131, \
160, 198, 201, 212, 234, 241, 228, 231, 237, 230, \
232, 237, 234, 231, 236, 230, 233, 237, 229, 239, \
242, 240, 169, 168, 186, 77, 72, 113, 101, 97, \
135, 141, 139, 164, 238, 238, 248, 230, 231, 233, \
229, 230, 230, 236, 236, 236, 235, 235, 235, 235, \
235, 235, 191, 191, 191, 223, 234, 224, 209, 224, \
211, 204, 215, 207, 181, 184, 186, 152, 147, 153, \
176, 172, 182, 114, 109, 140, 121, 121, 139, 209, \
216, 205, 226, 231, 223, 225, 229, 228, 230, 235, \
228, 219, 222, 227, 122, 121, 152, 186, 188, 205, \
235, 240, 234, 225, 229, 227, 227, 231, 228, 229, \
232, 224, 228, 229, 226, 225, 224, 232, 129, 125, \
151, 120, 114, 152, 135, 131, 164, 164, 163, 184, \
237, 237, 245, 231, 232, 234, 233, 234, 234, 240, \
240, 240, 243, 243, 243, 242, 242, 242, 193, 193, \
193, 231, 241, 234, 211, 226, 213, 200, 211, 201, \
197, 202, 197, 199, 198, 192, 186, 183, 193, 119, \
115, 141, 180, 180, 190, 227, 230, 220, 228, 230, \
226, 227, 228, 229, 228, 231, 224, 212, 213, 216, \
133, 130, 156, 196, 195, 209, 234, 236, 233, 226, \
227, 230, 226, 228, 226, 228, 230, 222, 226, 226, \
228, 198, 195, 210, 110, 105, 131, 162, 157, 184, \
157, 154, 180, 192, 190, 208, 238, 238, 244, 237, \
238, 240, 242, 242, 244, 245, 245, 245, 251, 251, \
251, 248, 248, 248, 194, 194, 194, 239, 245, 244, \
223, 235, 226, 218, 226, 220, 218, 220, 217, 220, \
221, 219, 187, 186, 197, 166, 164, 178, 220, 219, \
223, 227, 227, 224, 225, 225, 225, 225, 224, 226, \
224, 225, 217, 209, 209, 211, 167, 164, 181, 203, \
203, 206, 232, 233, 228, 230, 230, 235, 229, 229, \
230, 231, 230, 226, 225, 221, 229, 170, 164, 185, \
156, 150, 169, 206, 202, 215, 176, 174, 194, 209, \
208, 224, 238, 239, 243, 240, 241, 243, 245, 246, \
248, 250, 250, 250, 254, 254, 253, 248, 248, 248, \
194, 194, 194, 252, 253, 255, 241, 247, 244, 239, \
242, 240, 239, 238, 240, 233, 233, 239, 217, 216, \
228, 212, 211, 214, 226, 225, 224, 225, 223, 226, \
225, 224, 225, 225, 223, 226, 226, 226, 219, 225, \
224, 225, 224, 222, 230, 227, 227, 221, 228, 228, \
221, 229, 227, 233, 230, 229, 232, 232, 229, 228, \
215, 209, 219, 191, 184, 203, 214, 208, 219, 235, \
233, 232, 220, 218, 231, 228, 227, 239, 235, 236, \
239, 241, 242, 244, 248, 249, 250, 252, 252, 252, \
254, 254, 254, 248, 248, 248, 194, 194, 194, 251, \
251, 252, 243, 244, 243, 241, 241, 241, 239, 239, \
239, 237, 237, 239, 234, 234, 238, 234, 234, 233, \
233, 233, 232, 232, 231, 232, 231, 230, 231, 227, \
227, 227, 229, 228, 227, 231, 230, 231, 232, 232, \
234, 231, 231, 229, 228, 228, 226, 228, 228, 229, \
232, 231, 232, 230, 230, 230, 225, 224, 227, 229, \
227, 232, 231, 230, 232, 232, 231, 230, 231, 231, \
234, 234, 234, 238, 239, 239, 240, 243, 244, 244, \
246, 246, 246, 245, 245, 245, 246, 246, 246, 240, \
240, 240, 192, 192, 192, 194, 194, 194, 176, 176, \
176, 178, 178, 178, 178, 178, 178, 177, 177, 177, \
176, 176, 176, 176, 176, 176, 176, 176, 176, 176, \
176, 176, 176, 176, 176, 174, 174, 174, 174, 174, \
174, 175, 175, 175, 175, 175, 175, 175, 175, 175, \
174, 174, 174, 175, 175, 175, 176, 176, 176, 175, \
175, 175, 174, 174, 173, 175, 175, 175, 175, 175, \
175, 173, 173, 173, 174, 174, 174, 176, 176, 176, \
178, 177, 177, 178, 178, 178, 179, 179, 179, 179, \
179, 179, 179, 179, 179, 175, 175, 175, 181, 181, \
181, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '17364';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1ac7a27d46a28b4d45b5ee1202d584e5e9';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_dog4';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{63, 112, 198, 66, 115, 202, 64, 113, 200, 63, 113, \
196, 74, 119, 192, 95, 128, 180, 119, 141, 166, \
144, 156, 157, 155, 163, 154, 152, 161, 153, 154, \
156, 143, 149, 146, 128, 148, 143, 129, 146, 141, \
135, 140, 138, 140, 125, 133, 148, 95, 119, 157, \
74, 111, 173, 63, 109, 192, 53, 105, 195, 49, \
99, 183, 43, 92, 172, 40, 89, 172, 39, 87, \
173, 42, 90, 177, 43, 92, 175, 41, 89, 170, \
36, 81, 163, 34, 74, 149, 25, 62, 131, 23, \
60, 130, 18, 57, 133, 70, 120, 205, 71, 122, \
211, 72, 118, 201, 82, 122, 192, 115, 140, 178, \
154, 160, 156, 170, 170, 147, 184, 180, 144, 196, \
192, 151, 198, 196, 158, 193, 193, 155, 192, 192, \
153, 193, 190, 152, 181, 176, 139, 172, 166, 131, \
162, 154, 122, 147, 142, 127, 111, 125, 152, 78, \
112, 182, 60, 106, 194, 55, 103, 185, 47, 95, \
173, 46, 94, 175, 45, 93, 179, 47, 94, 182, \
48, 95, 181, 43, 91, 174, 38, 83, 166, 38, \
80, 156, 31, 69, 139, 25, 63, 133, 20, 60, \
136, 71, 123, 208, 75, 126, 213, 88, 126, 193, \
116, 138, 174, 148, 154, 150, 180, 176, 139, 193, \
189, 152, 211, 207, 177, 229, 226, 206, 232, 232, \
219, 223, 227, 207, 218, 223, 198, 218, 222, 197, \
211, 213, 184, 200, 198, 166, 191, 182, 142, 174, \
158, 116, 136, 132, 122, 109, 124, 157, 79, 114, \
178, 62, 108, 184, 54, 104, 182, 49, 98, 179, \
50, 97, 184, 49, 96, 187, 47, 94, 184, 44, \
91, 179, 42, 89, 173, 44, 87, 165, 37, 77, \
148, 27, 66, 137, 21, 63, 141, 72, 126, 212, \
80, 130, 211, 104, 135, 181, 134, 136, 131, 163, \
150, 113, 193, 179, 138, 213, 204, 172, 229, 226, \
204, 241, 244, 232, 246, 250, 242, 250, 247, 232, \
247, 243, 225, 243, 242, 224, 238, 236, 214, 222, \
217, 188, 203, 193, 157, 179, 167, 122, 148, 136, \
98, 131, 130, 117, 95, 117, 146, 63, 109, 178, \
57, 110, 190, 57, 105, 186, 53, 101, 189, 52, \
99, 192, 51, 97, 190, 47, 94, 185, 44, 92, \
178, 44, 89, 167, 39, 81, 153, 27, 68, 140, \
24, 67, 146, 78, 130, 218, 96, 134, 204, 117, \
135, 146, 134, 126, 87, 172, 149, 103, 200, 178, \
140, 213, 198, 164, 227, 221, 192, 238, 237, 216, \
248, 249, 233, 249, 254, 239, 250, 253, 244, 244, \
244, 237, 231, 234, 216, 221, 220, 195, 208, 200, \
171, 184, 174, 137, 151, 137, 94, 126, 115, 77, \
101, 108, 108, 66, 103, 163, 61, 111, 193, 63, \
112, 194, 55, 105, 196, 53, 103, 199, 53, 102, \
194, 53, 101, 189, 47, 96, 181, 42, 88, 167, \
40, 84, 157, 26, 70, 144, 25, 71, 152, 98, \
138, 214, 122, 137, 175, 134, 131, 110, 145, 129, \
80, 170, 148, 101, 185, 163, 116, 185, 168, 129, \
190, 180, 150, 201, 194, 170, 234, 229, 207, 239, \
243, 223, 245, 245, 233, 239, 230, 222, 211, 206, \
186, 210, 201, 173, 203, 185, 156, 193, 176, 141, \
166, 147, 112, 124, 104, 64, 105, 97, 78, 75, \
96, 133, 71, 113, 184, 68, 116, 196, 58, 109, \
203, 54, 108, 207, 52, 105, 198, 52, 104, 190, \
53, 102, 188, 52, 99, 179, 45, 90, 164, 30, \
75, 151, 26, 75, 157, 116, 141, 186, 138, 132, \
119, 150, 125, 86, 164, 136, 91, 173, 149, 97, \
168, 144, 91, 123, 104, 72, 82, 69, 55, 111, \
103, 88, 204, 199, 176, 249, 246, 226, 252, 244, \
231, 204, 188, 178, 126, 113, 100, 129, 114, 96, \
169, 147, 118, 184, 162, 123, 166, 140, 108, 132, \
102, 64, 125, 104, 70, 102, 109, 109, 82, 114, \
163, 68, 112, 190, 61, 110, 203, 55, 109, 209, \
51, 108, 204, 52, 108, 198, 57, 109, 194, 56, \
104, 183, 47, 93, 169, 34, 81, 158, 29, 78, \
163, 116, 138, 164, 141, 132, 96, 159, 130, 75, \
172, 143, 89, 178, 152, 99, 160, 129, 87, 77, \
52, 35, 43, 26, 29, 141, 130, 132, 214, 208, \
200, 227, 226, 223, 238, 233, 228, 198, 185, 179, \
82, 72, 73, 28, 16, 12, 108, 85, 59, 176, \
149, 110, 161, 132, 100, 131, 98, 60, 131, 105, \
63, 108, 106, 91, 75, 103, 144, 66, 109, 187, \
61, 110, 203, 57, 112, 212, 54, 112, 209, 55, \
112, 202, 55, 108, 193, 52, 102, 181, 47, 95, \
171, 35, 83, 163, 32, 83, 172, 102, 135, 185, \
124, 130, 132, 151, 138, 95, 165, 142, 92, 175, \
145, 104, 178, 142, 105, 122, 94, 71, 145, 128, \
119, 219, 209, 208, 127, 121, 122, 61, 63, 71, \
113, 109, 107, 214, 201, 191, 169, 153, 157, 57, \
35, 31, 103, 73, 40, 177, 147, 108, 168, 141, \
107, 132, 104, 62, 121, 99, 63, 78, 75, 78, \
35, 65, 117, 49, 96, 176, 60, 110, 204, 60, \
114, 214, 61, 115, 209, 60, 114, 200, 54, 108, \
190, 52, 104, 182, 45, 95, 171, 34, 84, 166, \
32, 85, 177, 90, 135, 220, 93, 119, 178, 117, \
126, 126, 148, 134, 103, 180, 149, 115, 202, 170, \
131, 178, 154, 122, 220, 205, 183, 196, 184, 173, \
52, 43, 40, 0, 0, 0, 34, 24, 20, 166, \
148, 136, 227, 208, 202, 147, 119, 101, 158, 123, \
82, 197, 167, 127, 170, 143, 104, 135, 109, 66, \
111, 96, 71, 58, 63, 90, 47, 83, 150, 59, \
110, 194, 61, 115, 209, 60, 116, 212, 65, 119, \
208, 66, 119, 201, 58, 114, 194, 55, 106, 185, \
47, 94, 173, 38, 85, 169, 38, 90, 182, 88, \
139, 234, 89, 134, 221, 108, 141, 189, 145, 145, \
133, 190, 169, 126, 215, 198, 163, 209, 194, 173, \
217, 203, 193, 151, 134, 127, 71, 51, 44, 31, \
15, 12, 64, 44, 46, 155, 137, 136, 218, 210, \
198, 190, 178, 151, 185, 163, 124, 210, 184, 142, \
173, 140, 99, 131, 101, 65, 88, 81, 72, 42, \
62, 105, 58, 101, 178, 65, 118, 205, 61, 118, \
211, 61, 120, 213, 67, 125, 210, 68, 125, 204, \
62, 117, 195, 58, 106, 186, 53, 94, 176, 45, \
87, 173, 46, 94, 183, 87, 139, 234, 96, 146, \
239, 119, 160, 224, 158, 169, 175, 198, 188, 156, \
216, 210, 177, 211, 205, 183, 197, 187, 175, 125, \
107, 98, 72, 48, 37, 56, 34, 28, 71, 46, \
47, 139, 116, 116, 210, 202, 189, 198, 192, 164, \
196, 182, 146, 212, 196, 155, 175, 153, 117, 127, \
110, 85, 77, 82, 86, 49, 78, 131, 65, 110, \
192, 66, 118, 207, 62, 117, 212, 60, 117, 213, \
63, 120, 209, 67, 123, 206, 66, 119, 199, 61, \
108, 186, 56, 96, 177, 48, 90, 175, 48, 97, \
187, 95, 147, 241, 96, 147, 245, 106, 153, 231, \
142, 167, 199, 189, 194, 184, 214, 215, 189, 207, \
208, 186, 190, 186, 169, 173, 160, 146, 128, 107, \
94, 107, 86, 75, 128, 102, 97, 175, 151, 145, \
192, 184, 168, 194, 191, 165, 214, 206, 174, 209, \
201, 168, 178, 169, 144, 131, 127, 114, 73, 87, \
99, 66, 97, 151, 74, 117, 198, 70, 120, 208, \
63, 116, 212, 59, 114, 212, 61, 115, 209, 69, \
122, 209, 70, 120, 201, 64, 109, 185, 58, 98, \
176, 45, 89, 172, 45, 96, 189, 95, 148, 241, \
93, 147, 250, 96, 149, 242, 102, 142, 200, 151, \
167, 182, 184, 186, 173, 198, 200, 185, 198, 198, \
183, 199, 192, 177, 194, 181, 167, 183, 174, 157, \
192, 177, 162, 200, 181, 168, 192, 186, 166, 210, \
210, 186, 225, 221, 196, 204, 202, 179, 168, 166, \
151, 134, 137, 128, 101, 114, 121, 88, 109, 150, \
72, 109, 179, 69, 118, 201, 60, 113, 204, 57, \
111, 206, 62, 115, 207, 70, 120, 207, 73, 121, \
201, 66, 109, 185, 56, 98, 172, 44, 89, 172, \
39, 93, 189, 92, 144, 238, 89, 144, 250, 92, \
150, 250, 95, 144, 219, 136, 159, 190, 158, 158, \
157, 164, 165, 158, 195, 197, 186, 210, 210, 196, \
209, 204, 190, 199, 202, 181, 199, 196, 175, 210, \
199, 179, 211, 209, 186, 201, 202, 179, 197, 196, \
176, 181, 181, 167, 162, 163, 156, 148, 151, 143, \
124, 130, 127, 99, 106, 126, 78, 106, 157, 67, \
114, 187, 56, 108, 193, 51, 106, 197, 60, 113, \
201, 70, 119, 203, 73, 118, 197, 67, 108, 177, \
59, 97, 163, 50, 94, 171, 39, 92, 189, 98, \
147, 246, 90, 147, 250, 94, 154, 251, 108, 155, \
230, 150, 173, 197, 169, 175, 174, 157, 160, 156, \
162, 164, 155, 184, 183, 170, 198, 193, 178, 198, \
195, 178, 208, 203, 185, 212, 206, 185, 203, 201, \
179, 181, 181, 161, 177, 177, 161, 178, 182, 170, \
176, 182, 176, 168, 171, 167, 143, 144, 135, 119, \
116, 106, 108, 111, 119, 89, 111, 148, 62, 105, \
171, 48, 102, 189, 59, 110, 198, 77, 121, 202, \
85, 123, 186, 96, 122, 154, 98, 116, 131, 72, \
98, 132, 44, 87, 165, 97, 148, 249, 87, 146, \
243, 93, 153, 245, 116, 158, 229, 160, 180, 197, \
182, 187, 179, 170, 173, 163, 174, 174, 163, 189, \
185, 173, 200, 195, 182, 216, 209, 195, 213, 207, \
189, 200, 195, 173, 194, 191, 169, 195, 194, 174, \
208, 209, 193, 213, 218, 205, 205, 212, 205, 190, \
195, 189, 160, 160, 149, 132, 127, 107, 128, 118, \
95, 118, 116, 112, 90, 109, 135, 67, 103, 159, \
66, 112, 184, 80, 126, 197, 101, 130, 173, 130, \
141, 145, 133, 136, 117, 94, 104, 107, 59, 88, \
139, 88, 143, 243, 84, 143, 235, 93, 153, 240, \
115, 158, 230, 156, 175, 196, 179, 180, 171, 183, \
183, 170, 197, 195, 180, 203, 199, 185, 213, 208, \
196, 226, 219, 205, 219, 213, 193, 202, 198, 174, \
201, 199, 175, 210, 209, 187, 222, 222, 204, 225, \
228, 214, 219, 224, 213, 195, 200, 191, 170, 173, \
160, 160, 158, 139, 145, 140, 114, 128, 122, 97, \
121, 116, 103, 117, 122, 128, 103, 124, 153, 93, \
122, 161, 111, 126, 143, 148, 149, 135, 146, 140, \
113, 119, 122, 114, 77, 99, 131, 84, 138, 238, \
85, 143, 233, 95, 155, 243, 111, 158, 241, 146, \
171, 206, 174, 180, 185, 179, 182, 176, 196, 198, \
181, 207, 204, 185, 213, 207, 190, 217, 210, 192, \
213, 207, 186, 205, 201, 175, 203, 202, 175, 208, \
208, 185, 224, 223, 204, 228, 229, 214, 219, 223, \
208, 201, 207, 193, 188, 192, 177, 178, 178, 162, \
152, 156, 140, 127, 128, 106, 128, 117, 87, 145, \
130, 102, 148, 140, 123, 133, 134, 129, 126, 128, \
120, 152, 147, 125, 141, 134, 112, 103, 108, 111, \
55, 81, 121, 87, 137, 237, 86, 141, 231, 90, \
151, 245, 102, 155, 250, 113, 146, 201, 136, 151, \
176, 163, 174, 179, 184, 191, 175, 202, 202, 176, \
207, 202, 175, 213, 206, 184, 217, 211, 189, 210, \
206, 179, 209, 208, 179, 213, 213, 188, 228, 227, \
207, 234, 233, 216, 223, 227, 209, 208, 214, 195, \
196, 201, 183, 181, 182, 168, 159, 157, 146, 139, \
132, 116, 135, 123, 94, 147, 133, 98, 158, 146, \
113, 155, 148, 122, 144, 142, 122, 138, 134, 115, \
112, 113, 109, 67, 86, 114, 37, 77, 144, 88, \
139, 236, 86, 141, 232, 86, 146, 240, 99, 155, \
251, 93, 138, 215, 110, 136, 184, 154, 168, 179, \
177, 188, 174, 196, 202, 181, 207, 203, 179, 210, \
205, 181, 214, 212, 189, 215, 214, 188, 213, 211, \
187, 216, 214, 192, 228, 225, 206, 227, 227, 210, \
221, 225, 206, 211, 218, 196, 204, 207, 187, 179, \
178, 161, 160, 153, 138, 150, 137, 117, 145, 130, \
97, 155, 140, 102, 152, 143, 107, 154, 150, 121, \
154, 152, 129, 137, 133, 122, 86, 93, 112, 45, \
75, 131, 37, 85, 169, 86, 143, 233, 85, 142, \
232, 90, 147, 237, 100, 158, 248, 94, 146, 235, \
107, 141, 206, 153, 165, 181, 173, 180, 168, 180, \
188, 173, 200, 197, 184, 208, 205, 185, 208, 210, \
187, 214, 214, 193, 209, 207, 187, 206, 201, 182, \
222, 218, 200, 222, 223, 206, 218, 222, 202, 213, \
218, 197, 207, 209, 187, 180, 177, 156, 157, 152, \
130, 148, 138, 108, 152, 135, 94, 156, 137, 93, \
149, 136, 98, 151, 146, 116, 150, 148, 126, 135, \
131, 125, 68, 82, 114, 36, 75, 149, 40, 92, \
185, 85, 142, 230, 86, 143, 230, 91, 148, 236, \
97, 154, 241, 93, 148, 236, 93, 135, 207, 130, \
147, 175, 169, 171, 166, 176, 175, 162, 185, 185, \
176, 198, 198, 184, 201, 203, 185, 203, 203, 185, \
201, 199, 181, 198, 194, 176, 211, 207, 189, 216, \
216, 197, 216, 219, 199, 211, 215, 193, 199, 200, \
177, 178, 174, 151, 165, 157, 127, 147, 136, 96, \
150, 135, 89, 156, 140, 95, 158, 146, 112, 154, \
148, 122, 141, 140, 119, 128, 128, 121, 74, 93, \
125, 38, 84, 161, 31, 90, 193, 81, 139, 227, \
81, 138, 226, 83, 140, 228, 88, 145, 233, 90, \
146, 235, 93, 143, 224, 104, 136, 187, 150, 161, \
176, 181, 180, 175, 182, 182, 176, 187, 188, 180, \
194, 194, 183, 196, 195, 182, 194, 191, 176, 187, \
182, 167, 198, 192, 175, 214, 213, 193, 213, 215, \
193, 205, 208, 185, 197, 196, 172, 179, 173, 149, \
161, 150, 117, 144, 131, 88, 158, 143, 99, 171, \
158, 117, 172, 162, 131, 165, 159, 135, 152, 151, \
130, 137, 137, 125, 83, 102, 125, 39, 84, 152, \
28, 85, 181, 75, 131, 224, 75, 131, 224, 79, \
135, 227, 81, 137, 230, 85, 139, 228, 91, 145, \
230, 87, 141, 216, 105, 137, 181, 167, 172, 181, \
183, 182, 177, 176, 176, 171, 184, 184, 178, 187, \
185, 177, 177, 174, 162, 159, 154, 139, 166, 161, \
143, 213, 210, 190, 211, 211, 188, 196, 198, 173, \
195, 193, 168, 177, 169, 144, 144, 128, 98, 147, \
129, 94, 168, 153, 117, 175, 164, 130, 176, 167, \
138, 171, 165, 142, 162, 158, 137, 150, 146, 126, \
98, 111, 117, 52, 87, 132, 44, 88, 159, 68, \
126, 224, 66, 124, 222, 69, 127, 227, 67, 126, \
227, 73, 129, 225, 75, 134, 225, 69, 138, 231, \
78, 128, 201, 126, 142, 172, 181, 179, 173, 180, \
175, 167, 171, 169, 165, 168, 167, 160, 148, 144, \
136, 104, 98, 90, 129, 122, 110, 212, 208, 189, \
218, 216, 194, 205, 204, 180, 191, 187, 162, 152, \
142, 118, 124, 108, 83, 139, 123, 97, 163, 149, \
122, 176, 165, 138, 174, 166, 138, 166, 160, 133, \
158, 153, 126, 152, 147, 122, 117, 124, 120, 79, \
103, 128, 77, 107, 152, 71, 124, 208, 67, 120, \
207, 68, 122, 213, 67, 122, 217, 80, 133, 226, \
87, 141, 228, 85, 144, 230, 85, 134, 218, 104, \
127, 179, 177, 178, 172, 201, 195, 178, 153, 151, \
146, 111, 114, 113, 86, 90, 94, 56, 55, 63, \
99, 94, 95, 204, 199, 183, 220, 215, 195, 209, \
202, 183, 174, 166, 147, 109, 99, 81, 96, 88, \
70, 117, 108, 89, 150, 137, 116, 172, 159, 132, \
166, 156, 125, 154, 147, 113, 154, 149, 114, 141, \
142, 119, 102, 111, 108, 83, 99, 115, 91, 108, \
138, 125, 151, 200, 122, 149, 200, 121, 149, 203, \
115, 145, 202, 125, 150, 209, 134, 157, 211, 126, \
157, 204, 118, 147, 190, 132, 146, 171, 184, 181, \
173, 210, 201, 179, 147, 143, 136, 72, 78, 92, \
66, 77, 97, 63, 72, 87, 110, 113, 112, 203, \
199, 179, 224, 218, 198, 207, 201, 186, 150, 144, \
133, 87, 80, 74, 80, 75, 71, 102, 95, 83, \
127, 115, 87, 149, 133, 96, 157, 140, 106, 142, \
127, 98, 126, 118, 92, 111, 112, 97, 88, 96, \
99, 89, 101, 119, 93, 105, 133, 156, 166, 193, \
155, 167, 194, 155, 169, 197, 151, 166, 195, 149, \
163, 196, 148, 162, 196, 139, 153, 174, 129, 137, \
140, 145, 137, 125, 170, 147, 125, 180, 156, 126, \
142, 128, 115, 97, 96, 111, 100, 104, 125, 106, \
107, 113, 153, 149, 134, 197, 189, 162, 213, 205, \
183, 194, 188, 175, 113, 109, 105, 90, 87, 90, \
97, 94, 103, 103, 97, 93, 126, 115, 86, 155, \
139, 98, 158, 138, 105, 137, 117, 97, 109, 100, \
85, 115, 115, 108, 113, 119, 125, 114, 123, 141, \
113, 122, 147, 161, 171, 197, 160, 172, 197, 159, \
173, 198, 157, 171, 196, 151, 168, 194, 146, 165, \
193, 146, 157, 180, 136, 136, 135, 131, 117, 96, \
134, 107, 87, 128, 102, 81, 129, 116, 106, 132, \
129, 138, 129, 126, 134, 137, 122, 113, 166, 143, \
118, 172, 153, 124, 177, 163, 139, 162, 152, 137, \
118, 114, 109, 124, 122, 124, 130, 129, 135, 135, \
130, 128, 140, 130, 112, 148, 134, 107, 126, 110, \
86, 107, 93, 76, 133, 125, 114, 147, 146, 142, \
140, 144, 151, 134, 141, 154, 131, 138, 154, 166, \
174, 202, 165, 174, 202, 164, 175, 201, 163, 175, \
201, 160, 175, 194, 159, 174, 192, 162, 168, 199, \
158, 160, 176, 152, 152, 150, 154, 151, 154, 158, \
153, 158, 158, 159, 165, 153, 162, 170, 148, 149, \
150, 144, 126, 114, 140, 110, 88, 149, 123, 98, \
140, 120, 99, 135, 122, 107, 148, 142, 134, 155, \
154, 150, 157, 156, 154, 164, 160, 156, 166, 158, \
153, 157, 148, 139, 138, 131, 117, 138, 133, 118, \
161, 155, 146, 160, 158, 155, 152, 155, 158, 145, \
151, 159, 141, 147, 155, 169, 180, 203, 169, 179, \
204, 168, 180, 204, 167, 179, 204, 166, 178, 201, \
167, 178, 199, 165, 174, 199, 164, 171, 192, 168, \
177, 191, 176, 184, 198, 180, 187, 198, 174, 182, \
191, 167, 175, 185, 171, 175, 182, 170, 167, 167, \
161, 152, 149, 163, 155, 152, 168, 161, 159, 166, \
162, 161, 173, 173, 171, 172, 175, 173, 171, 173, \
171, 174, 174, 172, 179, 178, 176, 181, 178, 176, \
179, 177, 171, 178, 177, 169, 174, 174, 167, 168, \
169, 165, 159, 163, 164, 152, 157, 161, 148, 154, \
159, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '17674';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a747e927ed1da786e558dcadd07065e33';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_automobile6';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{236, 237, 239, 242, 243, 246, 245, 246, 248, 245, 246, \
249, 237, 241, 242, 228, 234, 234, 233, 233, 233, \
238, 236, 238, 247, 247, 250, 246, 247, 250, 247, \
248, 250, 247, 247, 250, 246, 248, 250, 246, 247, \
249, 247, 248, 250, 247, 248, 250, 246, 248, 250, \
246, 248, 249, 247, 249, 250, 247, 249, 250, 233, \
231, 232, 237, 235, 238, 248, 250, 252, 249, 251, \
251, 251, 251, 251, 253, 252, 253, 248, 248, 248, \
230, 231, 229, 228, 228, 226, 244, 241, 244, 249, \
248, 249, 245, 246, 244, 124, 130, 137, 178, 184, \
190, 198, 204, 210, 199, 207, 216, 165, 177, 185, \
119, 129, 132, 130, 130, 129, 150, 149, 150, 208, \
214, 220, 208, 213, 220, 211, 216, 223, 211, 217, \
223, 211, 216, 220, 213, 218, 222, 217, 221, 225, \
217, 222, 226, 219, 224, 226, 219, 224, 226, 218, \
223, 225, 222, 227, 229, 127, 125, 126, 149, 148, \
151, 216, 222, 228, 211, 218, 221, 214, 217, 219, \
216, 216, 218, 191, 189, 188, 112, 108, 104, 101, \
96, 91, 155, 152, 153, 163, 162, 162, 144, 146, \
143, 103, 112, 118, 157, 166, 171, 190, 199, 205, \
190, 199, 209, 158, 170, 178, 92, 102, 105, 106, \
106, 106, 126, 125, 127, 190, 198, 204, 189, 198, \
204, 186, 195, 201, 191, 200, 206, 194, 203, 208, \
185, 193, 199, 184, 192, 197, 182, 190, 196, 179, \
187, 191, 174, 182, 186, 160, 168, 172, 165, 173, \
177, 89, 89, 89, 104, 104, 106, 155, 165, 172, \
149, 161, 167, 146, 156, 161, 136, 144, 148, 124, \
125, 126, 79, 73, 70, 69, 62, 58, 96, 98, \
99, 104, 109, 111, 101, 109, 111, 98, 105, 107, \
128, 135, 137, 152, 159, 160, 160, 161, 165, 142, \
145, 147, 97, 102, 102, 108, 107, 107, 101, 101, \
102, 137, 144, 146, 154, 161, 162, 148, 155, 156, \
164, 171, 174, 150, 161, 167, 133, 146, 152, 155, \
168, 174, 161, 173, 179, 145, 158, 162, 140, 153, \
156, 140, 153, 156, 139, 152, 155, 81, 83, 82, \
95, 97, 98, 144, 157, 164, 141, 157, 165, 135, \
154, 161, 132, 149, 158, 120, 129, 134, 80, 77, \
77, 75, 70, 68, 122, 133, 136, 142, 156, 161, \
143, 160, 167, 50, 57, 58, 83, 90, 91, 102, \
113, 118, 124, 133, 138, 125, 130, 135, 107, 118, \
120, 94, 101, 103, 86, 85, 90, 124, 132, 135, \
138, 148, 151, 146, 152, 157, 153, 163, 167, 148, \
163, 170, 143, 155, 163, 149, 158, 166, 152, 162, \
167, 153, 166, 169, 151, 165, 170, 151, 167, 174, \
152, 169, 176, 78, 82, 83, 89, 92, 94, 152, \
169, 177, 148, 170, 181, 149, 171, 183, 151, 175, \
187, 133, 145, 153, 80, 76, 80, 68, 65, 64, \
117, 129, 131, 152, 171, 177, 150, 171, 182, 37, \
52, 56, 92, 103, 105, 124, 145, 157, 118, 149, \
164, 127, 146, 161, 122, 149, 158, 100, 122, 128, \
91, 92, 102, 140, 154, 160, 143, 157, 165, 150, \
154, 165, 149, 157, 165, 161, 165, 175, 173, 165, \
177, 166, 152, 163, 156, 147, 154, 151, 155, 160, \
153, 167, 177, 152, 172, 188, 151, 175, 191, 76, \
83, 88, 82, 82, 85, 151, 171, 180, 150, 176, \
190, 152, 174, 191, 150, 178, 189, 131, 142, 150, \
79, 68, 73, 66, 65, 60, 112, 123, 124, 151, \
171, 180, 148, 172, 184, 32, 60, 62, 91, 100, \
96, 150, 156, 156, 138, 151, 153, 140, 147, 150, \
137, 155, 153, 108, 130, 125, 83, 88, 88, 143, \
145, 144, 165, 159, 158, 176, 157, 156, 176, 157, \
156, 173, 165, 164, 176, 166, 167, 177, 169, 170, \
181, 179, 179, 160, 156, 160, 151, 157, 166, 160, \
180, 192, 156, 182, 192, 78, 84, 88, 76, 74, \
77, 160, 174, 179, 158, 180, 190, 156, 178, 192, \
155, 180, 193, 131, 141, 149, 80, 68, 71, 65, \
65, 62, 123, 144, 153, 151, 177, 191, 152, 176, \
189, 20, 52, 52, 91, 95, 85, 203, 190, 177, \
196, 182, 167, 186, 174, 161, 195, 188, 175, 158, \
157, 144, 83, 79, 70, 142, 122, 117, 204, 167, \
158, 201, 159, 145, 196, 145, 136, 155, 118, 112, \
164, 135, 130, 179, 158, 155, 162, 147, 144, 181, \
148, 145, 163, 141, 139, 185, 184, 180, 189, 191, \
184, 91, 88, 84, 65, 67, 62, 157, 162, 156, \
163, 173, 172, 157, 174, 178, 155, 167, 176, 112, \
118, 122, 78, 65, 65, 71, 69, 65, 132, 147, \
152, 158, 170, 173, 147, 152, 151, 33, 53, 53, \
104, 100, 92, 204, 182, 167, 216, 189, 171, 211, \
189, 169, 233, 197, 182, 215, 171, 159, 140, 110, \
101, 173, 130, 128, 208, 148, 138, 154, 107, 90, \
163, 98, 94, 158, 87, 87, 146, 85, 84, 125, \
71, 72, 107, 51, 52, 155, 87, 82, 153, 102, \
92, 210, 180, 168, 241, 212, 195, 125, 101, 93, \
76, 69, 57, 202, 181, 167, 217, 199, 189, 210, \
204, 198, 206, 197, 194, 127, 122, 117, 69, 55, \
54, 75, 70, 65, 169, 166, 157, 193, 181, 166, \
164, 145, 124, 56, 54, 56, 97, 86, 83, 117, \
95, 88, 141, 117, 105, 145, 121, 105, 164, 100, \
93, 220, 125, 124, 195, 133, 130, 172, 114, 119, \
164, 96, 93, 133, 97, 87, 151, 99, 104, 158, \
101, 103, 166, 116, 113, 162, 109, 105, 164, 98, \
97, 193, 115, 118, 188, 128, 129, 204, 161, 158, \
211, 161, 155, 146, 91, 90, 151, 108, 96, 203, \
128, 114, 208, 128, 121, 213, 166, 154, 236, 207, \
190, 157, 142, 128, 61, 46, 41, 73, 68, 63, \
196, 184, 168, 246, 223, 199, 241, 215, 188, 85, \
72, 71, 94, 78, 75, 109, 89, 82, 131, 108, \
99, 119, 99, 89, 103, 52, 48, 172, 77, 79, \
210, 114, 112, 205, 103, 106, 176, 86, 89, 170, \
95, 86, 206, 105, 95, 219, 115, 105, 229, 137, \
127, 241, 152, 151, 234, 150, 156, 211, 139, 153, \
182, 138, 150, 178, 144, 150, 174, 112, 117, 156, \
84, 93, 193, 138, 140, 186, 120, 115, 166, 79, \
77, 148, 62, 57, 160, 89, 77, 137, 87, 79, \
60, 37, 36, 43, 48, 46, 149, 144, 131, 206, \
188, 166, 206, 190, 165, 161, 150, 138, 165, 153, \
139, 171, 157, 142, 172, 155, 145, 143, 132, 125, \
91, 73, 66, 118, 59, 58, 180, 79, 74, 229, \
94, 92, 214, 102, 102, 218, 93, 82, 240, 79, \
54, 237, 71, 38, 240, 83, 56, 244, 94, 80, \
228, 104, 96, 195, 107, 114, 171, 112, 120, 166, \
110, 113, 162, 75, 76, 172, 97, 105, 170, 111, \
128, 172, 117, 128, 166, 103, 106, 156, 69, 71, \
145, 51, 53, 129, 47, 51, 87, 45, 50, 55, \
52, 55, 96, 91, 83, 149, 135, 117, 147, 138, \
115, 150, 145, 130, 137, 135, 122, 127, 127, 116, \
116, 113, 107, 100, 104, 101, 83, 84, 80, 109, \
80, 78, 125, 66, 60, 157, 64, 56, 158, 71, \
56, 167, 66, 48, 191, 63, 47, 208, 67, 49, \
210, 55, 44, 218, 49, 43, 214, 67, 56, 196, \
85, 80, 186, 83, 84, 163, 57, 55, 165, 53, \
45, 181, 100, 98, 177, 97, 111, 176, 89, 104, \
166, 89, 93, 171, 95, 97, 169, 88, 94, 156, \
71, 76, 122, 51, 58, 123, 77, 82, 125, 103, \
95, 140, 127, 110, 143, 130, 112, 92, 91, 90, \
71, 75, 78, 65, 72, 78, 63, 70, 74, 61, \
75, 76, 71, 86, 85, 102, 99, 96, 102, 65, \
60, 127, 40, 37, 136, 52, 38, 141, 39, 29, \
145, 29, 30, 156, 69, 75, 177, 77, 89, 188, \
60, 74, 174, 54, 53, 165, 61, 57, 174, 61, \
60, 165, 47, 45, 169, 65, 57, 181, 87, 82, \
177, 89, 92, 168, 102, 103, 168, 97, 96, 178, \
96, 99, 169, 92, 98, 164, 71, 75, 137, 38, \
42, 122, 34, 39, 138, 95, 89, 136, 124, 108, \
141, 125, 111, 67, 71, 78, 71, 75, 83, 75, \
79, 89, 69, 77, 83, 58, 72, 76, 64, 76, \
79, 91, 89, 88, 108, 74, 68, 110, 35, 31, \
85, 30, 24, 117, 42, 37, 145, 37, 35, 122, \
36, 34, 117, 46, 46, 164, 69, 71, 164, 53, \
49, 155, 49, 49, 163, 54, 54, 176, 70, 67, \
173, 79, 77, 165, 58, 54, 151, 51, 46, 165, \
103, 95, 162, 92, 87, 168, 74, 76, 163, 70, \
71, 155, 51, 48, 152, 40, 37, 124, 16, 17, \
128, 67, 61, 141, 130, 115, 140, 121, 112, 71, \
78, 78, 73, 77, 74, 89, 90, 85, 72, 77, \
75, 47, 56, 60, 41, 47, 52, 43, 35, 37, \
87, 54, 44, 107, 49, 40, 39, 19, 18, 87, \
51, 44, 140, 45, 35, 127, 31, 26, 89, 32, \
30, 138, 70, 74, 174, 69, 72, 171, 49, 51, \
159, 40, 35, 161, 50, 41, 165, 60, 57, 167, \
55, 48, 155, 35, 30, 162, 61, 59, 162, 79, \
74, 167, 71, 68, 165, 55, 51, 143, 32, 22, \
145, 32, 22, 128, 14, 10, 119, 49, 44, 132, \
121, 108, 147, 124, 118, 84, 83, 79, 103, 102, \
91, 125, 123, 107, 111, 108, 95, 52, 56, 54, \
32, 39, 45, 23, 22, 24, 41, 23, 14, 86, \
31, 28, 56, 37, 37, 88, 69, 62, 136, 48, \
34, 131, 35, 23, 125, 42, 41, 147, 76, 80, \
174, 62, 63, 168, 46, 45, 157, 33, 28, 156, \
33, 23, 157, 40, 35, 157, 46, 43, 165, 46, \
46, 164, 43, 45, 159, 53, 49, 159, 56, 52, \
150, 47, 45, 124, 27, 22, 121, 21, 12, 114, \
7, 3, 93, 34, 32, 107, 98, 83, 149, 121, \
111, 140, 132, 124, 152, 145, 131, 157, 150, 131, \
158, 150, 132, 80, 80, 74, 35, 43, 47, 31, \
35, 37, 28, 22, 17, 43, 14, 11, 53, 38, \
40, 81, 78, 74, 129, 56, 44, 134, 38, 20, \
137, 32, 25, 148, 61, 60, 174, 55, 50, 166, \
41, 39, 156, 28, 26, 154, 23, 18, 152, 25, \
24, 159, 31, 30, 169, 39, 38, 167, 43, 47, \
154, 45, 49, 142, 53, 55, 123, 56, 56, 119, \
59, 61, 87, 21, 22, 84, 7, 9, 70, 28, \
27, 106, 100, 86, 140, 117, 105, 166, 153, 139, \
162, 150, 133, 165, 153, 132, 169, 158, 140, 120, \
117, 108, 45, 50, 51, 37, 40, 42, 31, 31, \
30, 17, 19, 13, 41, 35, 39, 86, 93, 95, \
124, 68, 62, 133, 42, 24, 136, 27, 16, 147, \
53, 51, 163, 56, 51, 159, 48, 36, 149, 44, \
29, 142, 35, 22, 138, 33, 23, 148, 37, 33, \
140, 36, 33, 136, 61, 53, 125, 82, 66, 99, \
70, 54, 82, 54, 47, 81, 56, 57, 67, 35, \
42, 87, 44, 52, 99, 72, 69, 106, 103, 92, \
133, 120, 111, 163, 149, 132, 162, 148, 130, 166, \
152, 133, 169, 156, 139, 153, 146, 134, 74, 74, \
70, 43, 45, 47, 35, 39, 42, 16, 29, 24, \
34, 35, 39, 73, 82, 89, 97, 60, 59, 127, \
47, 31, 136, 27, 14, 137, 49, 45, 135, 57, \
54, 128, 42, 43, 136, 66, 68, 132, 69, 74, \
128, 69, 74, 124, 78, 82, 110, 76, 74, 82, \
55, 40, 79, 55, 29, 78, 60, 32, 101, 91, \
72, 60, 48, 42, 40, 23, 24, 66, 44, 45, \
90, 75, 72, 90, 85, 79, 92, 86, 81, 162, \
149, 133, 158, 145, 130, 164, 151, 136, 168, 155, \
138, 167, 156, 141, 113, 108, 101, 49, 51, 53, \
38, 44, 49, 30, 33, 31, 31, 34, 35, 61, \
62, 73, 55, 32, 33, 112, 42, 30, 132, 27, \
13, 129, 57, 52, 110, 65, 62, 119, 14, 15, \
115, 21, 21, 98, 26, 27, 88, 26, 25, 72, \
23, 28, 58, 26, 32, 59, 42, 38, 55, 44, \
33, 63, 57, 41, 97, 99, 83, 77, 74, 69, \
38, 31, 32, 18, 12, 10, 26, 18, 15, 44, \
33, 33, 62, 59, 59, 161, 151, 135, 157, 147, \
133, 164, 154, 141, 168, 156, 140, 168, 156, 139, \
143, 135, 123, 67, 68, 68, 38, 44, 50, 42, \
37, 39, 31, 33, 34, 71, 68, 79, 44, 33, \
36, 71, 19, 13, 112, 19, 11, 98, 33, 30, \
59, 36, 31, 77, 9, 5, 63, 7, 1, 42, \
6, 0, 31, 6, 0, 27, 5, 1, 21, 10, \
7, 22, 23, 21, 19, 24, 28, 28, 35, 36, \
50, 59, 53, 72, 77, 78, 67, 70, 73, 42, \
46, 44, 25, 19, 17, 20, 6, 8, 22, 16, \
19, 157, 148, 131, 157, 148, 131, 156, 147, 131, \
161, 152, 136, 167, 154, 135, 165, 153, 134, 98, \
96, 91, 44, 48, 54, 42, 43, 48, 33, 36, \
40, 46, 48, 54, 27, 28, 32, 25, 5, 4, \
68, 10, 8, 68, 14, 13, 30, 14, 12, 17, \
10, 9, 15, 11, 10, 14, 13, 12, 14, 15, \
13, 17, 18, 16, 18, 21, 18, 19, 22, 21, \
24, 27, 27, 28, 31, 31, 33, 38, 36, 51, \
56, 54, 70, 75, 74, 77, 81, 78, 66, 63, \
60, 45, 39, 37, 26, 18, 17, 156, 147, 130, \
155, 146, 129, 150, 141, 124, 156, 145, 130, 160, \
146, 127, 162, 151, 131, 130, 125, 117, 59, 59, \
63, 44, 47, 52, 39, 42, 47, 30, 33, 38, \
11, 15, 19, 10, 12, 11, 23, 9, 4, 25, \
11, 5, 14, 14, 12, 14, 18, 18, 17, 20, \
18, 18, 20, 19, 19, 21, 20, 21, 23, 22, \
23, 25, 24, 26, 27, 27, 29, 31, 30, 33, \
36, 35, 37, 41, 40, 43, 46, 46, 56, 60, \
59, 72, 76, 75, 83, 86, 82, 79, 80, 77, \
66, 64, 62, 157, 148, 130, 159, 150, 133, 160, \
151, 134, 153, 143, 128, 146, 137, 119, 144, 136, \
119, 134, 128, 120, 74, 73, 74, 49, 51, 56, \
47, 50, 55, 39, 42, 47, 29, 32, 37, 22, \
28, 29, 16, 26, 20, 13, 23, 17, 17, 23, \
24, 21, 24, 24, 22, 24, 23, 22, 24, 23, \
24, 26, 25, 26, 28, 27, 28, 30, 29, 31, \
33, 32, 35, 37, 36, 40, 42, 42, 45, 49, \
51, 53, 57, 58, 56, 60, 62, 57, 62, 63, \
64, 73, 70, 77, 85, 82, 84, 89, 87, 149, \
140, 123, 149, 140, 123, 151, 142, 125, 134, 127, \
114, 105, 102, 90, 104, 104, 94, 104, 102, 96, \
77, 75, 76, 54, 57, 62, 50, 53, 58, 44, \
47, 52, 41, 43, 48, 37, 37, 42, 26, 34, \
34, 24, 31, 32, 28, 29, 33, 28, 29, 30, \
28, 31, 29, 30, 32, 31, 31, 33, 32, 32, \
34, 33, 36, 38, 37, 39, 41, 40, 42, 44, \
43, 45, 48, 48, 49, 53, 57, 56, 60, 64, \
62, 65, 69, 63, 68, 70, 58, 69, 67, 61, \
72, 70, 70, 77, 76, 157, 148, 131, 149, 141, \
124, 145, 136, 119, 113, 109, 99, 72, 77, 72, \
64, 73, 70, 66, 69, 68, 63, 63, 65, 55, \
58, 63, 50, 53, 58, 48, 51, 56, 43, 47, \
51, 41, 46, 47, 39, 41, 44, 36, 38, 41, \
34, 39, 39, 36, 39, 38, 38, 40, 39, 39, \
41, 40, 45, 47, 46, 45, 47, 46, 43, 45, \
44, 45, 48, 47, 50, 52, 51, 52, 55, 56, \
54, 58, 62, 59, 63, 67, 62, 66, 70, 64, \
68, 72, 62, 71, 72, 61, 70, 71, 63, 68, \
70, 157, 149, 131, 149, 142, 128, 127, 120, 109, \
97, 95, 88, 75, 80, 77, 65, 73, 73, 59, \
64, 65, 56, 59, 62, 54, 59, 63, 53, 58, \
62, 51, 57, 61, 48, 55, 58, 45, 54, 54, \
45, 48, 52, 43, 47, 50, 41, 49, 49, 44, \
49, 48, 49, 51, 50, 50, 53, 52, 61, 63, \
61, 69, 73, 72, 52, 57, 57, 51, 56, 55, \
53, 58, 57, 55, 61, 62, 57, 63, 67, 59, \
65, 69, 61, 66, 71, 62, 68, 72, 61, 70, \
72, 62, 70, 72, 63, 69, 72, 154, 147, 130, \
129, 123, 113, 101, 96, 91, 96, 94, 90, 83, \
84, 81, 69, 72, 71, 60, 64, 66, 57, 64, \
67, 56, 64, 67, 55, 63, 66, 54, 62, 65, \
54, 61, 64, 53, 58, 62, 50, 55, 59, 50, \
55, 59, 53, 57, 61, 56, 58, 59, 57, 59, \
58, 65, 67, 66, 72, 74, 73, 69, 75, 75, \
57, 66, 65, 55, 64, 63, 54, 63, 62, 56, \
65, 65, 60, 68, 70, 59, 68, 70, 59, 67, \
70, 62, 70, 73, 62, 70, 73, 62, 70, 73, \
61, 69, 72, 131, 124, 111, 105, 101, 93, 89, \
86, 82, 89, 88, 83, 84, 85, 82, 65, 67, \
66, 56, 61, 62, 56, 62, 65, 55, 61, 64, \
54, 61, 64, 53, 60, 62, 54, 60, 62, 54, \
58, 62, 54, 58, 61, 54, 58, 61, 58, 61, \
64, 70, 73, 73, 81, 83, 82, 79, 81, 80, \
70, 72, 71, 60, 66, 65, 57, 65, 65, 56, \
63, 63, 56, 63, 63, 55, 63, 63, 57, 64, \
66, 58, 65, 68, 58, 65, 67, 59, 66, 68, \
59, 66, 69, 59, 66, 69, 57, 64, 67, 119, \
114, 107, 97, 94, 89, 94, 93, 89, 90, 90, \
85, 87, 87, 84, 74, 77, 76, 67, 72, 73, \
65, 70, 72, 67, 71, 72, 67, 71, 73, 67, \
72, 73, 68, 72, 74, 69, 71, 73, 70, 72, \
74, 73, 75, 77, 75, 77, 79, 83, 85, 85, \
95, 97, 96, 88, 90, 89, 75, 76, 75, 71, \
74, 74, 73, 77, 78, 72, 76, 77, 71, 75, \
76, 71, 75, 76, 71, 75, 76, 71, 75, 77, \
69, 73, 75, 68, 73, 74, 70, 74, 76, 70, \
74, 75, 68, 72, 74, 194, 190, 188, 181, 180, \
177, 182, 183, 180, 186, 186, 182, 181, 181, 178, \
175, 177, 176, 170, 175, 176, 170, 174, 175, 174, \
176, 175, 175, 177, 176, 174, 176, 176, 175, 176, \
176, 175, 175, 175, 175, 175, 176, 177, 177, 177, \
177, 177, 177, 179, 180, 180, 177, 178, 178, 174, \
176, 175, 175, 177, 176, 174, 176, 177, 175, 176, \
178, 175, 177, 178, 176, 177, 179, 175, 177, 177, \
174, 177, 176, 174, 176, 175, 178, 180, 179, 194, \
196, 196, 195, 197, 197, 195, 197, 197, 195, 197, \
197, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '17984';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a3a907b6811edad49d7fbc53c53a0ea4f';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_dog9';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{184, 186, 146, 179, 181, 142, 184, 185, 146, 185, 187, \
147, 185, 186, 144, 182, 183, 143, 185, 186, 148, \
187, 188, 151, 190, 189, 156, 207, 205, 184, 188, \
185, 182, 151, 149, 159, 146, 145, 160, 121, 121, \
130, 94, 94, 103, 59, 59, 71, 52, 51, 65, \
48, 47, 61, 44, 44, 55, 44, 43, 58, 44, \
43, 58, 108, 111, 98, 186, 189, 152, 191, 192, \
156, 193, 195, 156, 150, 149, 126, 51, 47, 51, \
39, 38, 47, 40, 38, 48, 44, 42, 55, 45, \
43, 57, 44, 42, 54, 171, 177, 132, 167, 173, \
128, 173, 179, 134, 172, 178, 133, 170, 177, 130, \
169, 177, 129, 172, 180, 132, 170, 176, 133, 179, \
182, 152, 197, 197, 182, 207, 206, 205, 220, 218, \
227, 229, 228, 240, 224, 224, 231, 211, 211, 220, \
167, 167, 178, 101, 101, 113, 65, 64, 79, 67, \
66, 82, 70, 69, 85, 51, 51, 64, 105, 109, \
95, 183, 188, 145, 183, 188, 141, 188, 192, 146, \
139, 141, 116, 47, 44, 50, 40, 39, 48, 40, \
38, 48, 43, 41, 54, 46, 44, 58, 45, 43, \
58, 180, 188, 141, 178, 186, 139, 182, 190, 143, \
176, 184, 137, 174, 183, 134, 176, 186, 135, 176, \
186, 137, 177, 185, 145, 185, 190, 167, 193, 195, \
188, 205, 205, 208, 215, 214, 222, 235, 234, 242, \
239, 239, 244, 242, 242, 249, 237, 237, 246, 185, \
185, 196, 140, 139, 156, 154, 153, 170, 171, 170, \
184, 142, 141, 155, 143, 146, 136, 173, 178, 139, \
171, 177, 131, 176, 182, 133, 125, 128, 102, 43, \
41, 48, 41, 39, 49, 40, 39, 49, 42, 40, \
53, 46, 44, 58, 46, 44, 62, 187, 191, 148, \
184, 188, 146, 185, 189, 147, 184, 190, 146, 180, \
188, 142, 180, 189, 141, 182, 190, 151, 189, 194, \
170, 200, 205, 195, 212, 216, 216, 219, 221, 227, \
224, 223, 230, 235, 234, 239, 239, 240, 244, 238, \
239, 244, 237, 237, 244, 233, 233, 242, 222, 221, \
236, 224, 223, 237, 227, 226, 238, 218, 218, 233, \
214, 215, 215, 197, 201, 181, 172, 176, 146, 173, \
180, 136, 121, 125, 98, 41, 40, 45, 42, 40, \
50, 41, 39, 50, 41, 39, 52, 45, 43, 57, \
45, 44, 62, 200, 199, 161, 192, 192, 154, 188, \
187, 150, 186, 186, 148, 180, 184, 143, 180, 185, \
146, 190, 192, 167, 204, 203, 198, 220, 223, 227, \
230, 235, 240, 236, 237, 246, 239, 238, 245, 237, \
236, 239, 238, 238, 241, 238, 239, 244, 239, 239, \
245, 236, 236, 245, 237, 237, 249, 237, 237, 247, \
237, 237, 246, 235, 234, 250, 234, 234, 242, 226, \
226, 227, 203, 204, 194, 192, 198, 164, 126, 130, \
105, 40, 40, 43, 43, 42, 51, 42, 40, 50, \
41, 39, 52, 46, 44, 58, 45, 45, 62, 205, \
206, 167, 197, 197, 162, 192, 192, 160, 192, 193, \
161, 193, 194, 166, 202, 203, 187, 217, 219, 214, \
230, 232, 234, 237, 241, 250, 239, 241, 250, 243, \
238, 245, 238, 233, 238, 232, 228, 233, 238, 233, \
235, 240, 235, 240, 239, 236, 243, 234, 233, 242, \
233, 233, 244, 236, 236, 246, 242, 239, 249, 240, \
238, 251, 239, 239, 247, 238, 237, 246, 232, 231, \
236, 225, 226, 220, 144, 144, 140, 42, 40, 47, \
43, 41, 50, 43, 41, 52, 41, 38, 51, 45, \
43, 57, 46, 47, 63, 187, 192, 146, 183, 187, \
148, 184, 188, 153, 192, 194, 166, 203, 205, 188, \
222, 223, 223, 234, 237, 244, 236, 242, 245, 236, \
238, 245, 236, 230, 237, 237, 225, 227, 233, 221, \
222, 224, 214, 218, 232, 221, 224, 237, 228, 233, \
234, 229, 237, 230, 228, 238, 228, 228, 239, 233, \
233, 244, 242, 237, 248, 244, 240, 249, 241, 242, \
248, 241, 240, 249, 239, 237, 248, 237, 235, 247, \
197, 195, 207, 87, 85, 95, 40, 39, 47, 44, \
42, 53, 41, 39, 52, 45, 43, 56, 48, 48, \
64, 180, 187, 141, 178, 183, 146, 185, 189, 157, \
195, 197, 174, 208, 209, 201, 228, 228, 232, 235, \
236, 246, 236, 238, 244, 235, 230, 231, 225, 211, \
209, 220, 203, 199, 222, 205, 201, 218, 203, 201, \
228, 217, 218, 231, 223, 227, 229, 225, 232, 231, \
229, 239, 218, 218, 229, 222, 221, 233, 235, 229, \
241, 240, 235, 245, 240, 240, 247, 242, 241, 250, \
242, 239, 251, 237, 235, 246, 232, 230, 241, 162, \
160, 170, 51, 50, 58, 44, 42, 53, 43, 41, \
54, 44, 42, 56, 48, 47, 64, 191, 196, 165, \
191, 195, 173, 202, 204, 190, 212, 213, 206, 223, \
223, 224, 233, 231, 240, 235, 233, 243, 233, 231, \
238, 226, 214, 211, 198, 178, 170, 190, 170, 163, \
202, 182, 175, 203, 185, 178, 204, 193, 194, 228, \
219, 224, 236, 232, 239, 237, 235, 245, 212, 211, \
223, 180, 176, 189, 203, 196, 208, 232, 225, 235, \
238, 236, 243, 243, 242, 251, 245, 242, 254, 240, \
238, 249, 239, 237, 249, 209, 207, 217, 84, 83, \
91, 44, 42, 53, 44, 42, 55, 44, 42, 56, \
48, 46, 63, 203, 207, 189, 201, 203, 197, 212, \
212, 215, 219, 219, 227, 228, 228, 235, 231, 229, \
237, 229, 226, 233, 229, 224, 229, 214, 199, 194, \
137, 118, 108, 106, 91, 85, 132, 117, 111, 124, \
108, 102, 119, 108, 108, 180, 172, 176, 234, 230, \
237, 235, 233, 243, 228, 227, 238, 177, 172, 185, \
167, 158, 171, 212, 204, 215, 232, 229, 237, 241, \
239, 249, 244, 242, 253, 242, 241, 251, 242, 240, \
251, 231, 229, 240, 144, 143, 151, 53, 51, 62, \
43, 41, 54, 42, 40, 54, 47, 44, 61, 207, \
212, 194, 206, 209, 202, 211, 212, 217, 220, 221, \
230, 229, 229, 237, 228, 226, 231, 219, 214, 217, \
225, 218, 218, 209, 194, 188, 96, 81, 74, 60, \
52, 50, 78, 70, 68, 66, 55, 51, 84, 73, \
74, 148, 139, 144, 223, 218, 226, 228, 226, 236, \
236, 235, 247, 219, 213, 227, 190, 179, 193, 202, \
193, 204, 225, 221, 228, 237, 235, 245, 243, 241, \
252, 243, 241, 252, 242, 240, 251, 241, 239, 249, \
205, 204, 213, 81, 79, 90, 42, 40, 53, 44, \
42, 56, 47, 44, 61, 200, 208, 180, 206, 211, \
200, 212, 214, 217, 221, 221, 229, 226, 224, 231, \
221, 217, 223, 213, 206, 208, 216, 207, 204, 208, \
191, 185, 104, 89, 85, 55, 49, 50, 48, 45, \
46, 49, 43, 42, 66, 58, 60, 134, 126, 131, \
212, 207, 214, 222, 219, 229, 234, 232, 242, 232, \
228, 241, 212, 205, 220, 205, 198, 211, 221, 217, \
224, 234, 231, 239, 241, 239, 248, 242, 241, 249, \
240, 240, 248, 241, 241, 249, 230, 229, 236, 108, \
106, 116, 43, 41, 53, 45, 43, 56, 46, 44, \
59, 186, 193, 161, 208, 211, 201, 216, 217, 222, \
220, 219, 227, 224, 219, 226, 221, 215, 222, 203, \
194, 198, 189, 180, 175, 191, 173, 167, 102, 85, \
83, 43, 35, 38, 38, 35, 38, 43, 41, 42, \
41, 35, 37, 96, 90, 94, 193, 188, 195, 215, \
209, 219, 229, 226, 234, 229, 227, 237, 221, 217, \
232, 211, 207, 220, 219, 214, 222, 231, 228, 234, \
238, 236, 243, 241, 240, 246, 240, 241, 247, 240, \
241, 247, 241, 240, 246, 140, 139, 147, 48, 46, \
57, 44, 42, 54, 44, 42, 56, 178, 184, 155, \
197, 200, 191, 211, 212, 215, 217, 216, 222, 222, \
217, 222, 212, 205, 213, 165, 156, 161, 159, 149, \
147, 164, 148, 142, 79, 64, 63, 42, 35, 39, \
39, 37, 41, 41, 37, 40, 45, 41, 44, 87, \
82, 87, 176, 171, 178, 211, 205, 214, 222, 217, \
226, 223, 219, 228, 224, 219, 232, 218, 214, 226, \
222, 218, 227, 232, 227, 234, 236, 233, 240, 240, \
238, 244, 240, 240, 246, 239, 240, 245, 244, 243, \
249, 187, 186, 194, 71, 69, 80, 44, 42, 54, \
45, 43, 56, 183, 189, 161, 192, 196, 185, 206, \
208, 208, 212, 211, 215, 212, 208, 210, 199, 192, \
199, 166, 157, 162, 167, 157, 156, 156, 142, 138, \
70, 58, 57, 37, 33, 37, 36, 34, 40, 37, \
33, 38, 41, 38, 44, 92, 88, 94, 182, 176, \
182, 210, 202, 210, 214, 206, 214, 222, 214, 222, \
223, 216, 225, 221, 217, 227, 226, 223, 233, 232, \
227, 236, 237, 232, 239, 240, 236, 243, 240, 239, \
245, 239, 239, 245, 239, 238, 244, 223, 222, 230, \
124, 122, 133, 48, 46, 59, 46, 44, 58, 187, \
192, 165, 191, 194, 184, 201, 203, 202, 206, 206, \
206, 205, 201, 201, 199, 193, 198, 172, 163, 169, \
168, 159, 159, 166, 155, 152, 102, 93, 93, 53, \
50, 55, 38, 34, 41, 51, 47, 53, 98, 96, \
103, 153, 150, 157, 196, 189, 196, 181, 172, 178, \
206, 195, 202, 225, 214, 220, 220, 212, 217, 219, \
214, 222, 227, 224, 235, 234, 228, 238, 238, 232, \
239, 239, 234, 241, 240, 238, 244, 241, 239, 245, \
239, 238, 244, 238, 237, 245, 196, 195, 205, 89, \
87, 99, 46, 44, 57, 179, 185, 159, 189, 192, \
182, 201, 204, 201, 201, 201, 199, 199, 196, 194, \
177, 171, 176, 121, 112, 119, 144, 134, 137, 173, \
163, 160, 148, 142, 142, 100, 99, 104, 67, 64, \
72, 119, 114, 121, 172, 172, 180, 183, 181, 188, \
165, 159, 165, 150, 140, 145, 209, 196, 202, 222, \
208, 213, 212, 203, 205, 217, 212, 218, 224, 220, \
233, 234, 226, 238, 236, 228, 236, 237, 232, 239, \
239, 235, 242, 241, 238, 245, 240, 239, 245, 236, \
235, 243, 229, 228, 238, 136, 134, 147, 46, 44, \
57, 185, 188, 164, 197, 198, 191, 199, 199, 198, \
194, 191, 188, 188, 182, 178, 130, 125, 128, 74, \
67, 73, 137, 128, 131, 173, 166, 167, 160, 157, \
160, 138, 137, 145, 123, 121, 130, 165, 161, 170, \
185, 184, 191, 162, 159, 168, 114, 107, 115, 149, \
138, 144, 208, 195, 200, 214, 201, 205, 206, 195, \
196, 216, 210, 216, 222, 220, 232, 234, 227, 238, \
233, 225, 233, 238, 232, 239, 239, 234, 241, 240, \
237, 244, 240, 239, 247, 237, 236, 245, 228, 226, \
237, 172, 170, 182, 66, 64, 77, 196, 193, 172, \
198, 196, 193, 194, 190, 192, 185, 176, 174, 166, \
156, 151, 83, 78, 79, 68, 66, 70, 155, 149, \
151, 167, 162, 168, 162, 160, 170, 157, 155, 166, \
158, 156, 167, 180, 178, 188, 183, 179, 187, 141, \
135, 145, 83, 74, 85, 141, 131, 137, 200, 190, \
193, 207, 196, 199, 202, 190, 192, 216, 209, 214, \
219, 218, 229, 233, 229, 239, 232, 227, 233, 237, \
232, 239, 239, 234, 241, 240, 236, 244, 240, 238, \
248, 239, 237, 248, 225, 223, 234, 183, 181, 192, \
95, 93, 105, 197, 193, 170, 189, 187, 182, 182, \
177, 178, 169, 160, 159, 137, 126, 123, 59, 53, \
54, 96, 93, 96, 161, 156, 157, 160, 157, 162, \
163, 162, 171, 163, 162, 171, 169, 167, 176, 179, \
178, 186, 178, 174, 181, 123, 117, 126, 64, 55, \
65, 129, 119, 124, 190, 180, 181, 197, 187, 188, \
196, 184, 185, 216, 208, 212, 219, 217, 227, 232, \
229, 238, 233, 227, 234, 236, 231, 238, 239, 234, \
241, 238, 234, 242, 237, 235, 246, 239, 237, 248, \
229, 227, 238, 172, 170, 181, 80, 78, 90, 196, \
192, 167, 181, 180, 170, 170, 166, 165, 154, 145, \
146, 104, 94, 95, 60, 53, 53, 118, 113, 113, \
152, 148, 147, 160, 158, 162, 160, 160, 167, 163, \
162, 169, 175, 174, 182, 181, 179, 186, 172, 167, \
172, 119, 113, 121, 72, 63, 72, 130, 120, 123, \
186, 175, 175, 189, 177, 176, 193, 180, 178, 214, \
206, 207, 220, 218, 225, 233, 229, 237, 233, 228, \
235, 235, 230, 237, 238, 233, 240, 236, 232, 240, \
236, 233, 244, 239, 237, 248, 234, 232, 243, 182, \
180, 191, 70, 68, 81, 182, 179, 151, 167, 166, \
152, 160, 156, 152, 132, 124, 126, 79, 70, 74, \
79, 70, 69, 123, 116, 114, 148, 145, 143, 159, \
159, 162, 159, 158, 164, 164, 163, 169, 178, 177, \
183, 174, 173, 178, 159, 154, 158, 125, 119, 126, \
92, 83, 90, 133, 123, 125, 183, 172, 170, 179, \
166, 162, 192, 178, 174, 206, 196, 195, 221, 218, \
222, 234, 230, 237, 234, 229, 236, 233, 228, 235, \
236, 231, 238, 236, 232, 240, 235, 233, 244, 238, \
236, 247, 235, 233, 244, 190, 188, 199, 79, 77, \
89, 168, 165, 136, 158, 158, 141, 148, 144, 139, \
108, 100, 105, 79, 70, 77, 99, 89, 89, 125, \
116, 113, 146, 144, 141, 158, 158, 161, 158, 157, \
162, 165, 164, 169, 175, 174, 179, 160, 159, 163, \
152, 148, 150, 125, 119, 125, 85, 76, 83, 135, \
126, 126, 174, 163, 159, 167, 153, 147, 192, 177, \
171, 196, 186, 183, 221, 217, 219, 235, 231, 238, \
234, 228, 235, 233, 228, 235, 235, 229, 236, 235, \
231, 240, 234, 232, 243, 235, 233, 245, 236, 234, \
245, 206, 204, 215, 86, 84, 97, 173, 169, 139, \
165, 165, 144, 139, 134, 127, 95, 87, 91, 75, \
68, 74, 104, 93, 92, 127, 118, 114, 143, 140, \
137, 159, 160, 161, 156, 156, 160, 160, 159, 164, \
160, 159, 164, 147, 146, 149, 146, 142, 142, 109, \
103, 107, 75, 66, 71, 136, 127, 126, 157, 146, \
140, 163, 147, 140, 189, 173, 165, 190, 179, 174, \
219, 215, 215, 233, 230, 235, 230, 225, 232, 232, \
227, 234, 233, 228, 235, 235, 230, 238, 234, 231, \
241, 234, 231, 241, 235, 233, 242, 226, 224, 234, \
119, 118, 130, 175, 169, 136, 165, 162, 138, 130, \
124, 114, 92, 84, 86, 65, 60, 64, 96, 88, \
87, 126, 118, 115, 140, 137, 136, 156, 159, 161, \
150, 153, 156, 152, 153, 157, 149, 148, 153, 144, \
143, 146, 132, 129, 127, 92, 87, 87, 70, 63, \
64, 125, 116, 113, 141, 128, 121, 158, 139, 132, \
181, 163, 155, 187, 176, 171, 218, 215, 215, 230, \
228, 230, 227, 223, 227, 230, 226, 230, 230, 226, \
231, 233, 228, 235, 235, 230, 237, 234, 230, 237, \
233, 232, 238, 231, 231, 239, 153, 153, 165, 164, \
163, 124, 146, 148, 118, 115, 113, 97, 105, 101, \
97, 73, 70, 71, 97, 90, 88, 130, 123, 120, \
141, 138, 137, 159, 163, 165, 152, 156, 159, 153, \
155, 158, 146, 145, 150, 146, 145, 148, 122, 119, \
116, 86, 81, 80, 67, 59, 60, 109, 100, 96, \
130, 118, 110, 155, 136, 129, 172, 154, 146, 191, \
179, 174, 219, 216, 215, 228, 223, 224, 228, 221, \
222, 230, 223, 225, 227, 219, 222, 230, 223, 228, \
232, 228, 237, 233, 230, 239, 230, 229, 238, 227, \
229, 238, 187, 186, 194, 139, 145, 101, 119, 129, \
90, 102, 108, 82, 116, 118, 106, 92, 91, 88, \
114, 109, 104, 134, 129, 125, 144, 143, 142, 167, \
170, 173, 162, 166, 169, 156, 157, 161, 141, 140, \
145, 145, 144, 148, 114, 111, 108, 73, 68, 68, \
66, 58, 59, 101, 92, 88, 136, 124, 117, 161, \
145, 137, 170, 154, 146, 192, 181, 176, 216, 212, \
212, 224, 217, 219, 229, 218, 219, 229, 219, 218, \
222, 212, 211, 222, 214, 215, 225, 223, 233, 230, \
228, 240, 228, 226, 238, 221, 221, 229, 208, 204, \
204, 132, 140, 96, 118, 131, 90, 111, 121, 91, \
130, 135, 118, 127, 128, 120, 130, 127, 118, 133, \
130, 124, 152, 152, 152, 169, 173, 176, 165, 168, \
172, 150, 151, 155, 137, 136, 141, 141, 140, 143, \
90, 87, 84, 65, 60, 60, 80, 72, 73, 112, \
104, 100, 139, 129, 121, 160, 147, 139, 169, 155, \
146, 190, 180, 174, 210, 205, 206, 224, 216, 220, \
228, 218, 221, 222, 212, 212, 209, 200, 197, 206, \
199, 197, 215, 212, 216, 225, 221, 231, 224, 219, \
227, 214, 210, 210, 205, 197, 186, 137, 144, 104, \
126, 138, 99, 121, 130, 101, 128, 133, 115, 127, \
131, 119, 119, 118, 106, 123, 121, 114, 152, 153, \
153, 158, 162, 165, 152, 156, 159, 141, 142, 146, \
137, 136, 142, 131, 130, 133, 88, 85, 82, 85, \
80, 80, 98, 90, 91, 115, 106, 103, 132, 124, \
115, 151, 143, 133, 164, 152, 143, 185, 175, 169, \
200, 194, 195, 222, 215, 223, 230, 222, 229, 227, \
219, 222, 216, 209, 207, 203, 197, 192, 205, 201, \
196, 220, 212, 214, 217, 207, 207, 202, 192, 180, \
192, 179, 157, 141, 148, 110, 123, 133, 97, 112, \
119, 90, 101, 106, 86, 92, 96, 80, 91, 91, \
77, 104, 103, 94, 128, 129, 127, 129, 133, 134, \
130, 134, 135, 135, 136, 138, 144, 143, 147, 139, \
138, 141, 130, 128, 124, 126, 122, 120, 119, 112, \
111, 104, 96, 91, 117, 110, 101, 142, 135, 125, \
158, 149, 139, 172, 163, 156, 184, 178, 178, 213, \
208, 217, 226, 221, 230, 230, 226, 230, 228, 224, \
223, 205, 201, 193, 196, 189, 174, 205, 195, 186, \
203, 190, 180, 193, 180, 157, 194, 178, 149, 145, \
157, 114, 137, 145, 105, 136, 143, 106, 133, 139, \
105, 131, 132, 103, 124, 124, 100, 128, 129, 108, \
122, 126, 104, 113, 120, 104, 122, 127, 114, 129, \
129, 116, 133, 132, 122, 135, 135, 128, 134, 134, \
123, 134, 134, 121, 121, 119, 106, 102, 99, 84, \
107, 103, 87, 127, 122, 108, 141, 139, 124, 154, \
152, 137, 163, 159, 147, 184, 182, 173, 200, 200, \
194, 204, 201, 195, 206, 202, 192, 189, 184, 165, \
179, 171, 141, 184, 176, 145, 191, 185, 153, 194, \
188, 157, 202, 193, 164, 155, 164, 121, 160, 164, \
123, 165, 169, 127, 159, 164, 123, 161, 162, 124, \
161, 163, 131, 156, 160, 130, 149, 155, 122, 134, \
145, 110, 133, 141, 108, 138, 139, 107, 131, 132, \
103, 134, 136, 113, 135, 137, 117, 138, 140, 120, \
138, 139, 117, 135, 136, 112, 141, 140, 113, 150, \
149, 119, 150, 154, 122, 156, 160, 128, 165, 164, \
134, 170, 171, 141, 178, 181, 155, 180, 179, 155, \
177, 175, 147, 185, 181, 146, 186, 178, 142, 187, \
181, 141, 187, 183, 144, 190, 187, 153, 196, 191, \
160, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '18294';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a0c7a1adbfb811d3a06ada4d603271a4d';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_horse9';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{58, 65, 72, 44, 44, 43, 67, 65, 58, 67, 69, \
61, 86, 89, 81, 107, 104, 93, 78, 74, 61, \
66, 62, 50, 61, 57, 45, 58, 53, 41, 48, \
45, 37, 31, 30, 30, 23, 25, 25, 39, 43, \
42, 72, 80, 78, 65, 75, 73, 68, 77, 73, \
61, 72, 73, 74, 95, 105, 127, 151, 166, 128, \
145, 156, 83, 88, 94, 69, 79, 91, 93, 98, \
105, 94, 92, 91, 102, 110, 114, 110, 120, 123, \
90, 87, 79, 94, 88, 82, 84, 79, 77, 74, \
68, 68, 78, 72, 74, 63, 71, 69, 61, 61, \
56, 62, 60, 55, 59, 59, 60, 64, 66, 68, \
86, 86, 79, 59, 58, 48, 47, 47, 37, 47, \
47, 37, 51, 51, 41, 45, 43, 36, 27, 25, \
23, 17, 18, 18, 52, 58, 60, 120, 131, 134, \
92, 108, 112, 67, 80, 84, 66, 79, 86, 117, \
140, 154, 155, 182, 199, 138, 158, 168, 95, 104, \
107, 71, 83, 92, 58, 65, 71, 69, 71, 71, \
106, 121, 128, 119, 138, 145, 106, 114, 111, 93, \
91, 91, 79, 76, 80, 51, 48, 54, 61, 57, \
66, 62, 70, 72, 77, 77, 73, 74, 72, 66, \
63, 63, 59, 65, 68, 67, 56, 58, 52, 62, \
63, 56, 73, 74, 67, 54, 55, 48, 35, 37, \
29, 33, 32, 26, 34, 31, 29, 22, 24, 24, \
67, 76, 80, 147, 164, 170, 129, 152, 161, 95, \
106, 111, 69, 72, 76, 99, 118, 132, 121, 152, \
171, 134, 166, 182, 107, 132, 140, 99, 118, 128, \
85, 94, 97, 73, 80, 78, 108, 130, 138, 127, \
155, 165, 118, 135, 136, 93, 97, 93, 62, 62, \
61, 51, 51, 52, 56, 55, 59, 76, 82, 90, \
83, 86, 88, 84, 86, 83, 62, 65, 60, 63, \
69, 61, 73, 79, 72, 78, 84, 77, 88, 93, \
87, 48, 51, 45, 31, 33, 27, 34, 36, 34, \
28, 31, 34, 24, 24, 27, 97, 99, 104, 172, \
182, 194, 150, 168, 190, 115, 128, 143, 85, 89, \
94, 79, 91, 101, 57, 77, 90, 71, 92, 105, \
80, 100, 111, 131, 152, 169, 124, 142, 156, 115, \
133, 138, 155, 181, 186, 156, 186, 195, 139, 164, \
171, 105, 119, 118, 60, 68, 66, 74, 81, 80, \
83, 87, 88, 96, 105, 109, 87, 95, 97, 83, \
89, 90, 57, 61, 60, 52, 57, 55, 57, 64, \
61, 60, 67, 65, 92, 96, 95, 50, 52, 51, \
25, 25, 25, 30, 28, 29, 30, 23, 22, 68, \
48, 42, 161, 133, 125, 169, 141, 141, 117, 98, \
109, 96, 90, 101, 64, 67, 70, 77, 80, 82, \
55, 57, 60, 43, 46, 48, 52, 56, 60, 72, \
86, 104, 112, 134, 155, 150, 175, 185, 186, 214, \
218, 161, 190, 197, 150, 179, 189, 164, 188, 196, \
138, 157, 164, 135, 150, 156, 137, 147, 153, 149, \
166, 164, 112, 125, 125, 118, 126, 127, 82, 85, \
87, 49, 51, 53, 40, 44, 45, 40, 43, 45, \
95, 96, 98, 54, 53, 56, 25, 21, 25, 28, \
24, 28, 38, 28, 30, 128, 103, 96, 218, 179, \
166, 195, 150, 139, 112, 70, 67, 79, 56, 55, \
66, 62, 57, 83, 78, 74, 57, 52, 48, 58, \
53, 49, 78, 74, 71, 73, 76, 85, 86, 99, \
113, 142, 165, 174, 187, 218, 224, 183, 214, 220, \
183, 211, 220, 186, 216, 228, 180, 207, 221, 179, \
200, 212, 161, 176, 184, 175, 198, 203, 162, 179, \
181, 153, 164, 161, 127, 131, 124, 89, 90, 82, \
80, 82, 76, 57, 59, 54, 57, 55, 51, 55, \
51, 48, 49, 42, 39, 25, 23, 23, 40, 40, \
41, 143, 128, 121, 209, 180, 167, 195, 161, 149, \
105, 75, 71, 74, 58, 57, 56, 53, 49, 58, \
54, 51, 56, 52, 48, 51, 47, 44, 82, 78, \
75, 95, 90, 93, 91, 96, 103, 148, 171, 180, \
190, 224, 233, 186, 218, 226, 178, 205, 212, 179, \
209, 221, 186, 214, 227, 185, 204, 214, 152, 162, \
166, 140, 166, 176, 166, 187, 191, 140, 156, 150, \
131, 139, 124, 118, 121, 101, 101, 103, 87, 99, \
98, 85, 74, 75, 61, 82, 83, 69, 82, 77, \
65, 37, 25, 15, 80, 65, 50, 168, 140, 117, \
183, 143, 121, 190, 148, 133, 123, 90, 77, 96, \
79, 70, 65, 64, 58, 37, 40, 34, 48, 49, \
45, 40, 39, 37, 49, 49, 48, 86, 81, 78, \
87, 87, 88, 145, 162, 168, 176, 204, 212, 147, \
173, 179, 128, 148, 152, 136, 158, 165, 171, 189, \
197, 146, 157, 161, 101, 102, 102, 109, 134, 139, \
127, 153, 157, 112, 133, 130, 109, 121, 108, 111, \
117, 98, 112, 114, 99, 108, 104, 92, 89, 92, \
78, 85, 93, 77, 85, 72, 63, 127, 89, 88, \
203, 160, 154, 204, 149, 133, 175, 107, 102, 142, \
74, 82, 175, 120, 115, 164, 125, 113, 102, 85, \
75, 77, 78, 63, 67, 65, 53, 63, 56, 47, \
58, 60, 48, 67, 68, 50, 80, 80, 64, 85, \
93, 85, 79, 91, 88, 73, 83, 82, 82, 90, \
86, 79, 87, 83, 88, 96, 91, 76, 78, 72, \
79, 74, 68, 106, 124, 132, 121, 142, 149, 96, \
114, 116, 87, 98, 91, 83, 90, 77, 93, 99, \
90, 93, 88, 84, 77, 71, 67, 88, 78, 76, \
120, 80, 87, 205, 144, 164, 251, 191, 213, 218, \
145, 159, 176, 91, 116, 150, 64, 102, 173, 99, \
124, 157, 93, 110, 121, 78, 93, 108, 94, 93, \
102, 95, 83, 101, 93, 73, 92, 95, 64, 85, \
90, 46, 90, 94, 52, 72, 81, 53, 46, 56, \
40, 41, 46, 37, 57, 58, 51, 72, 75, 60, \
82, 85, 66, 75, 75, 55, 80, 76, 55, 66, \
77, 86, 78, 94, 104, 62, 78, 85, 43, 54, \
54, 57, 65, 58, 66, 74, 65, 75, 72, 66, \
69, 61, 56, 95, 81, 79, 159, 113, 121, 199, \
132, 156, 237, 180, 208, 196, 128, 149, 159, 78, \
109, 160, 78, 123, 149, 80, 111, 135, 68, 96, \
98, 48, 74, 72, 59, 62, 79, 76, 62, 102, \
95, 69, 111, 108, 70, 97, 101, 49, 89, 96, \
45, 69, 79, 41, 58, 65, 40, 65, 64, 48, \
79, 72, 58, 87, 82, 60, 85, 81, 55, 83, \
78, 50, 80, 76, 45, 38, 45, 57, 38, 51, \
64, 31, 46, 58, 28, 40, 49, 38, 47, 47, \
56, 61, 50, 68, 68, 55, 71, 70, 57, 89, \
83, 72, 148, 114, 111, 195, 147, 158, 241, 201, \
218, 222, 174, 183, 187, 126, 143, 156, 94, 121, \
146, 98, 114, 120, 75, 90, 68, 35, 52, 58, \
58, 55, 83, 89, 72, 115, 109, 85, 119, 109, \
77, 97, 98, 56, 88, 95, 54, 74, 82, 49, \
62, 66, 42, 80, 76, 54, 100, 89, 66, 82, \
72, 49, 77, 69, 45, 87, 81, 53, 76, 71, \
41, 34, 37, 44, 33, 38, 47, 30, 36, 46, \
30, 38, 47, 36, 37, 46, 49, 40, 43, 50, \
57, 46, 70, 75, 56, 91, 71, 58, 130, 100, \
92, 210, 181, 187, 247, 203, 226, 232, 180, 191, \
222, 166, 168, 171, 122, 124, 119, 89, 94, 89, \
71, 76, 71, 59, 61, 70, 67, 59, 86, 84, \
67, 93, 89, 63, 91, 87, 55, 89, 91, 51, \
73, 78, 40, 68, 70, 42, 79, 77, 56, 91, \
85, 63, 89, 81, 56, 65, 58, 32, 56, 50, \
23, 80, 73, 46, 88, 81, 52, 103, 90, 81, \
110, 96, 87, 110, 96, 87, 91, 76, 67, 105, \
90, 84, 118, 106, 103, 116, 108, 85, 139, 114, \
79, 138, 93, 69, 148, 112, 109, 222, 189, 197, \
231, 171, 180, 208, 142, 141, 166, 105, 96, 138, \
90, 78, 129, 97, 88, 114, 92, 83, 119, 100, \
87, 122, 103, 84, 112, 94, 68, 118, 101, 68, \
117, 102, 63, 116, 104, 63, 96, 85, 50, 84, \
72, 48, 100, 88, 70, 103, 91, 74, 88, 76, \
57, 72, 60, 37, 79, 66, 44, 113, 100, 78, \
115, 102, 80, 137, 129, 122, 132, 122, 113, 135, \
122, 111, 116, 101, 87, 132, 116, 101, 157, 138, \
116, 175, 136, 102, 196, 142, 102, 166, 118, 90, \
152, 121, 122, 191, 152, 158, 195, 132, 117, 175, \
114, 96, 105, 52, 35, 110, 62, 39, 139, 92, \
63, 158, 115, 82, 160, 121, 87, 160, 121, 83, \
170, 133, 90, 181, 143, 96, 178, 141, 92, 170, \
133, 86, 157, 121, 83, 141, 108, 82, 127, 99, \
80, 123, 101, 84, 125, 107, 87, 125, 102, 78, \
138, 114, 90, 133, 112, 90, 158, 140, 121, 101, \
98, 91, 96, 88, 78, 101, 88, 73, 102, 86, \
68, 108, 86, 59, 159, 114, 74, 187, 120, 89, \
181, 127, 107, 164, 143, 130, 126, 114, 116, 136, \
100, 99, 160, 111, 89, 118, 77, 57, 107, 70, \
49, 139, 95, 61, 191, 130, 81, 213, 150, 94, \
212, 156, 102, 211, 155, 99, 211, 155, 98, 213, \
157, 98, 214, 158, 99, 207, 149, 91, 196, 139, \
88, 183, 134, 95, 147, 108, 78, 127, 99, 72, \
149, 128, 97, 158, 129, 93, 157, 125, 90, 153, \
126, 95, 169, 148, 121, 116, 102, 83, 120, 104, \
78, 133, 109, 77, 148, 115, 77, 171, 128, 85, \
197, 133, 91, 196, 124, 102, 175, 146, 141, 124, \
138, 136, 88, 68, 68, 133, 70, 66, 114, 64, \
50, 119, 80, 56, 167, 128, 91, 186, 137, 89, \
216, 152, 96, 217, 153, 93, 206, 151, 89, 206, \
150, 88, 211, 153, 92, 211, 151, 90, 198, 137, \
76, 184, 123, 61, 144, 85, 36, 129, 77, 45, \
113, 67, 45, 111, 67, 43, 144, 101, 71, 112, \
77, 50, 133, 103, 76, 158, 133, 102, 154, 135, \
105, 162, 141, 113, 160, 142, 109, 168, 145, 108, \
182, 152, 112, 190, 145, 109, 176, 118, 96, 172, \
141, 130, 153, 155, 156, 120, 118, 124, 113, 69, \
67, 153, 87, 75, 124, 71, 52, 173, 127, 92, \
208, 163, 110, 189, 138, 77, 203, 143, 82, 211, \
153, 92, 213, 161, 99, 214, 160, 98, 214, 158, \
97, 212, 153, 93, 203, 142, 83, 194, 133, 76, \
156, 99, 54, 111, 59, 32, 85, 35, 18, 97, \
44, 24, 112, 58, 33, 103, 69, 49, 143, 119, \
96, 163, 142, 110, 166, 149, 114, 180, 155, 119, \
177, 157, 121, 184, 162, 128, 176, 150, 119, 153, \
112, 89, 156, 114, 109, 151, 165, 169, 130, 149, \
158, 132, 95, 101, 128, 77, 68, 137, 99, 75, \
134, 82, 51, 190, 141, 101, 209, 166, 114, 173, \
125, 64, 195, 140, 74, 212, 155, 90, 209, 154, \
92, 204, 146, 86, 202, 142, 82, 205, 142, 83, \
205, 140, 82, 198, 135, 84, 187, 127, 83, 187, \
130, 92, 158, 105, 74, 122, 72, 46, 88, 43, \
21, 75, 47, 28, 143, 123, 96, 189, 170, 133, \
182, 164, 123, 187, 167, 130, 183, 165, 129, 189, \
167, 133, 170, 139, 109, 146, 105, 80, 173, 144, \
135, 161, 167, 186, 117, 118, 135, 122, 83, 72, \
123, 85, 64, 114, 84, 63, 167, 113, 79, 186, \
134, 97, 205, 161, 119, 173, 125, 74, 192, 140, \
79, 213, 157, 94, 210, 151, 91, 210, 149, 89, \
202, 138, 79, 186, 120, 62, 181, 114, 58, 190, \
126, 81, 190, 128, 85, 198, 137, 89, 166, 110, \
64, 118, 71, 38, 69, 33, 14, 42, 20, 8, \
91, 73, 54, 174, 156, 125, 184, 164, 126, 186, \
170, 136, 187, 170, 134, 196, 171, 134, 189, 149, \
115, 177, 135, 105, 205, 183, 171, 156, 136, 151, \
105, 79, 91, 113, 83, 62, 111, 78, 48, 139, \
93, 65, 203, 140, 103, 203, 146, 113, 197, 149, \
117, 187, 140, 99, 191, 141, 85, 208, 155, 91, \
206, 151, 87, 207, 146, 88, 202, 134, 81, 196, \
127, 71, 194, 125, 67, 181, 114, 69, 182, 118, \
77, 183, 122, 74, 164, 112, 66, 112, 72, 39, \
56, 27, 10, 41, 22, 15, 50, 32, 22, 129, \
110, 88, 195, 174, 143, 185, 166, 131, 185, 165, \
127, 196, 169, 131, 188, 148, 111, 197, 155, 128, \
185, 163, 158, 94, 66, 62, 78, 46, 39, 93, \
61, 50, 139, 91, 59, 189, 122, 70, 212, 144, \
92, 226, 167, 128, 213, 163, 133, 201, 156, 122, \
194, 148, 100, 195, 147, 85, 194, 142, 75, 191, \
130, 70, 198, 130, 75, 194, 127, 75, 168, 104, \
53, 175, 106, 60, 194, 126, 83, 170, 111, 71, \
170, 122, 87, 120, 83, 53, 79, 50, 25, 62, \
40, 29, 55, 35, 25, 135, 114, 97, 190, 168, \
146, 187, 167, 135, 190, 170, 135, 197, 170, 135, \
197, 157, 122, 197, 153, 124, 146, 114, 99, 101, \
63, 50, 72, 34, 28, 65, 34, 28, 110, 68, \
42, 182, 125, 73, 211, 156, 97, 216, 164, 115, \
218, 169, 132, 211, 165, 136, 199, 153, 127, 165, \
111, 77, 165, 103, 52, 179, 117, 53, 179, 120, \
53, 132, 79, 31, 89, 40, 16, 148, 86, 49, \
192, 122, 70, 163, 99, 51, 168, 110, 67, 170, \
119, 78, 158, 112, 74, 120, 85, 60, 93, 65, \
47, 159, 134, 122, 130, 106, 98, 188, 168, 138, \
187, 166, 135, 189, 162, 130, 190, 150, 120, 171, \
123, 94, 166, 121, 90, 184, 132, 110, 114, 69, \
65, 61, 31, 32, 80, 47, 27, 173, 127, 78, \
210, 159, 99, 206, 152, 93, 200, 143, 92, 187, \
129, 93, 185, 129, 108, 174, 122, 103, 120, 70, \
41, 133, 84, 43, 111, 67, 26, 71, 35, 7, \
80, 50, 38, 160, 111, 75, 174, 112, 56, 170, \
108, 56, 159, 99, 49, 185, 125, 79, 188, 130, \
86, 157, 108, 70, 113, 75, 49, 114, 87, 74, \
82, 58, 51, 186, 165, 137, 187, 165, 137, 190, \
161, 133, 183, 143, 117, 158, 109, 81, 170, 115, \
77, 194, 135, 106, 123, 75, 70, 75, 45, 50, \
68, 42, 26, 147, 107, 63, 205, 150, 94, 193, \
131, 66, 194, 127, 62, 191, 125, 75, 147, 87, \
58, 155, 113, 95, 146, 120, 106, 72, 41, 34, \
51, 20, 16, 47, 23, 16, 68, 50, 36, 167, \
133, 95, 175, 127, 76, 161, 110, 60, 155, 100, \
52, 169, 110, 64, 191, 129, 84, 181, 123, 78, \
126, 81, 47, 100, 72, 53, 132, 109, 96, 185, \
165, 134, 185, 161, 134, 189, 159, 134, 170, 135, \
111, 145, 102, 77, 156, 99, 67, 174, 119, 85, \
131, 84, 68, 83, 44, 45, 62, 32, 24, 118, \
80, 47, 189, 133, 82, 181, 118, 54, 190, 126, \
60, 169, 112, 61, 98, 54, 26, 62, 33, 22, \
115, 95, 90, 128, 107, 103, 61, 39, 36, 41, \
21, 14, 49, 30, 18, 137, 114, 89, 185, 156, \
120, 166, 133, 91, 161, 119, 73, 173, 123, 80, \
182, 125, 83, 204, 142, 86, 153, 106, 61, 78, \
53, 33, 118, 100, 89, 181, 162, 137, 184, 161, \
135, 181, 153, 129, 162, 129, 107, 132, 93, 71, \
140, 90, 57, 159, 107, 65, 158, 104, 75, 100, \
45, 36, 82, 31, 21, 121, 73, 45, 162, 108, \
68, 178, 116, 67, 182, 116, 63, 139, 78, 35, \
93, 44, 18, 60, 27, 16, 41, 20, 17, 103, \
83, 78, 120, 100, 93, 71, 51, 42, 52, 32, \
21, 111, 88, 69, 178, 154, 124, 175, 149, 113, \
184, 156, 119, 172, 141, 111, 153, 117, 88, 201, \
156, 107, 154, 119, 76, 60, 43, 24, 83, 70, \
58, 120, 103, 88, 166, 146, 122, 181, 156, 130, \
163, 133, 113, 121, 86, 70, 132, 88, 57, 169, \
117, 72, 162, 100, 64, 133, 67, 50, 136, 74, \
58, 140, 88, 60, 147, 98, 65, 183, 125, 89, \
148, 84, 47, 107, 47, 15, 100, 51, 28, 65, \
32, 21, 45, 24, 21, 40, 19, 14, 64, 44, \
37, 122, 102, 93, 112, 92, 81, 93, 69, 53, \
158, 133, 109, 165, 144, 114, 177, 159, 128, 155, \
138, 114, 144, 126, 104, 182, 156, 120, 117, 95, \
63, 58, 44, 28, 85, 70, 57, 37, 21, 17, \
102, 84, 62, 175, 153, 126, 164, 136, 118, 121, \
88, 78, 122, 78, 59, 167, 113, 76, 156, 92, \
57, 138, 73, 54, 158, 106, 89, 151, 110, 79, \
159, 116, 78, 182, 131, 96, 139, 86, 57, 65, \
21, 3, 57, 28, 15, 48, 27, 20, 38, 17, \
14, 36, 16, 11, 27, 7, 2, 81, 61, 53, \
121, 101, 91, 108, 87, 75, 165, 143, 126, 183, \
163, 136, 181, 160, 128, 154, 133, 102, 151, 129, \
101, 153, 132, 105, 105, 85, 66, 80, 59, 49, \
131, 105, 94, 30, 20, 15, 107, 91, 64, 182, \
160, 128, 170, 144, 124, 127, 96, 91, 111, 70, \
61, 135, 91, 63, 120, 75, 43, 115, 73, 52, \
158, 128, 104, 175, 149, 108, 184, 144, 94, 186, \
131, 84, 150, 97, 65, 69, 33, 19, 78, 55, \
43, 86, 61, 48, 64, 35, 23, 38, 17, 9, \
54, 37, 32, 89, 69, 65, 89, 62, 55, 131, \
105, 89, 175, 151, 127, 183, 158, 129, 181, 153, \
122, 162, 130, 103, 150, 118, 93, 142, 114, 91, \
161, 135, 114, 168, 141, 121, 164, 135, 113, 77, \
66, 54, 163, 146, 114, 184, 161, 126, 169, 145, \
121, 133, 107, 97, 104, 69, 61, 122, 85, 58, \
129, 94, 61, 106, 75, 53, 171, 151, 126, 186, \
165, 124, 187, 143, 90, 195, 129, 72, 172, 111, \
69, 101, 61, 38, 120, 88, 70, 169, 122, 88, \
165, 110, 68, 89, 51, 22, 115, 89, 68, 169, \
143, 121, 165, 134, 106, 178, 155, 118, 172, 155, \
116, 169, 150, 111, 172, 150, 113, 173, 149, 113, \
172, 146, 112, 157, 129, 105, 139, 111, 89, 142, \
114, 90, 160, 133, 106, 114, 97, 83, 186, 163, \
135, 181, 155, 123, 176, 152, 124, 152, 129, 112, \
112, 81, 71, 115, 77, 49, 141, 98, 65, 87, \
49, 30, 116, 95, 79, 159, 137, 108, 179, 129, \
83, 182, 110, 52, 189, 124, 73, 138, 95, 62, \
117, 81, 56, 183, 132, 89, 184, 127, 73, 104, \
67, 35, 118, 98, 81, 134, 121, 103, 127, 113, \
86, 128, 115, 90, 124, 111, 93, 112, 97, 83, \
111, 94, 80, 128, 109, 88, 145, 125, 98, 158, \
131, 109, 144, 115, 95, 139, 111, 89, 163, 135, \
111, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '18604';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1aff39c8f0d75b05f48a5d3e0a1ca06090';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_ship6';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{231, 248, 229, 228, 246, 227, 230, 248, 228, 234, 249, \
230, 238, 250, 231, 241, 251, 229, 243, 251, 228, \
245, 252, 228, 244, 252, 229, 244, 252, 229, 244, \
252, 229, 244, 252, 229, 244, 252, 229, 244, 252, \
229, 243, 251, 228, 243, 251, 228, 242, 252, 228, \
242, 252, 228, 241, 251, 227, 240, 251, 226, 239, \
251, 228, 238, 251, 229, 239, 251, 230, 239, 251, \
230, 238, 250, 228, 236, 249, 226, 234, 249, 227, \
231, 248, 229, 229, 247, 228, 228, 247, 228, 224, \
246, 228, 221, 244, 228, 231, 249, 232, 228, 247, \
230, 230, 249, 232, 233, 250, 233, 236, 251, 232, \
240, 252, 232, 243, 253, 232, 245, 255, 232, 244, \
255, 233, 244, 255, 233, 244, 255, 233, 244, 255, \
233, 244, 255, 233, 244, 255, 233, 243, 254, 232, \
243, 254, 231, 242, 254, 231, 241, 254, 231, 241, \
253, 231, 240, 253, 230, 239, 253, 232, 239, 253, \
234, 239, 253, 234, 238, 253, 233, 237, 251, 231, \
237, 250, 229, 234, 249, 230, 230, 248, 230, 228, \
247, 230, 226, 248, 227, 223, 247, 226, 220, 245, \
227, 225, 245, 231, 224, 243, 230, 226, 245, 232, \
227, 247, 232, 230, 248, 233, 235, 250, 233, 238, \
252, 232, 240, 253, 234, 241, 254, 235, 240, 254, \
235, 239, 252, 233, 240, 253, 234, 240, 254, 234, \
240, 253, 234, 238, 252, 232, 238, 251, 232, 238, \
253, 233, 238, 254, 234, 237, 252, 232, 236, 252, \
232, 235, 252, 233, 234, 252, 234, 234, 252, 234, \
232, 250, 232, 232, 249, 231, 233, 248, 230, 229, \
246, 230, 226, 245, 231, 223, 244, 230, 221, 243, \
224, 218, 242, 223, 216, 242, 226, 219, 241, 229, \
218, 239, 228, 220, 241, 230, 221, 243, 231, 225, \
246, 233, 229, 247, 232, 231, 248, 231, 234, 249, \
232, 235, 251, 234, 234, 250, 234, 232, 249, 232, \
232, 249, 232, 234, 250, 234, 234, 250, 234, 232, \
249, 232, 232, 248, 232, 233, 250, 233, 233, 251, \
234, 232, 250, 233, 232, 250, 233, 229, 249, 233, \
227, 249, 233, 227, 249, 233, 225, 247, 231, 226, \
245, 230, 227, 244, 229, 225, 243, 230, 222, 242, \
231, 219, 241, 230, 218, 241, 226, 213, 238, 225, \
209, 236, 225, 215, 237, 227, 214, 236, 226, 216, \
238, 229, 217, 239, 229, 219, 242, 230, 223, 244, \
231, 226, 245, 230, 228, 246, 231, 229, 247, 233, \
227, 246, 231, 226, 245, 230, 227, 245, 231, 227, \
245, 231, 227, 245, 231, 226, 245, 230, 226, 245, \
230, 226, 246, 231, 226, 247, 231, 225, 245, 230, \
225, 246, 230, 222, 245, 231, 221, 245, 231, 220, \
244, 230, 218, 242, 228, 220, 241, 227, 221, 239, \
227, 218, 238, 227, 215, 236, 227, 212, 235, 227, \
211, 234, 226, 206, 232, 224, 200, 228, 222, 207, \
232, 227, 207, 232, 226, 209, 234, 228, 210, 236, \
228, 213, 238, 229, 217, 240, 229, 219, 241, 228, \
221, 243, 230, 222, 244, 229, 220, 241, 223, 219, \
240, 225, 221, 243, 232, 220, 242, 228, 220, 242, \
228, 220, 242, 228, 221, 242, 229, 220, 242, 229, \
219, 242, 229, 218, 240, 227, 217, 240, 226, 215, \
240, 228, 214, 239, 229, 214, 240, 229, 212, 238, \
227, 212, 236, 225, 213, 235, 225, 210, 233, 225, \
207, 231, 225, 204, 229, 224, 202, 229, 224, 196, \
226, 223, 190, 221, 221, 199, 228, 228, 198, 227, \
225, 199, 229, 224, 202, 230, 225, 205, 231, 227, \
208, 234, 227, 210, 236, 226, 212, 239, 228, 213, \
240, 225, 214, 236, 216, 213, 236, 222, 214, 240, \
234, 213, 237, 227, 214, 237, 226, 214, 238, 226, \
215, 239, 227, 214, 238, 228, 213, 236, 227, 212, \
235, 226, 211, 234, 225, 208, 234, 226, 205, 233, \
226, 206, 234, 227, 205, 233, 225, 203, 231, 224, \
201, 231, 224, 199, 229, 224, 198, 227, 225, 194, \
224, 223, 191, 224, 222, 186, 221, 221, 179, 216, \
219, 189, 222, 225, 188, 221, 222, 190, 223, 222, \
194, 224, 223, 197, 225, 223, 200, 228, 224, 203, \
232, 225, 204, 234, 226, 207, 235, 223, 207, 232, \
212, 205, 231, 218, 206, 234, 232, 207, 233, 226, \
207, 233, 225, 207, 233, 225, 207, 234, 226, 206, \
232, 226, 204, 230, 225, 203, 229, 223, 202, 228, \
223, 202, 231, 225, 198, 229, 224, 198, 229, 224, \
197, 228, 223, 194, 226, 221, 192, 225, 221, 190, \
223, 221, 187, 219, 221, 183, 216, 220, 181, 217, \
222, 176, 214, 220, 169, 210, 218, 178, 215, 224, \
178, 215, 221, 180, 217, 221, 184, 218, 221, 188, \
220, 222, 191, 223, 223, 194, 227, 223, 196, 229, \
224, 199, 230, 220, 201, 228, 212, 198, 226, 216, \
198, 230, 229, 198, 229, 225, 198, 229, 224, 198, \
228, 224, 198, 229, 225, 199, 229, 226, 197, 228, \
225, 195, 226, 223, 194, 224, 222, 193, 227, 224, \
190, 225, 223, 189, 225, 223, 188, 223, 221, 185, \
221, 220, 182, 219, 221, 179, 217, 220, 176, 213, \
219, 172, 210, 218, 170, 210, 223, 165, 206, 221, \
158, 202, 217, 168, 209, 224, 169, 210, 222, 172, \
213, 223, 175, 214, 221, 178, 215, 221, 181, 219, \
222, 183, 221, 221, 185, 223, 221, 191, 225, 217, \
194, 224, 210, 192, 223, 215, 189, 224, 227, 188, \
224, 223, 188, 223, 222, 189, 224, 223, 190, 225, \
224, 190, 224, 225, 188, 223, 224, 187, 222, 223, \
187, 221, 223, 183, 221, 223, 180, 221, 223, 179, \
220, 222, 178, 218, 220, 175, 216, 219, 172, 214, \
220, 170, 211, 220, 167, 208, 220, 163, 204, 219, \
159, 203, 223, 153, 199, 218, 145, 194, 211, 158, \
203, 223, 160, 205, 221, 163, 208, 222, 166, 209, \
220, 170, 211, 220, 173, 215, 221, 175, 218, 221, \
177, 218, 219, 178, 215, 210, 182, 215, 204, 181, \
214, 210, 178, 216, 221, 181, 220, 223, 180, 220, \
222, 180, 219, 222, 182, 221, 224, 181, 220, 224, \
179, 218, 223, 179, 218, 222, 179, 217, 222, 174, \
216, 221, 171, 216, 221, 170, 215, 220, 168, 212, \
217, 165, 210, 218, 163, 209, 220, 159, 205, 219, \
153, 198, 215, 153, 199, 218, 147, 195, 217, 140, \
191, 211, 136, 191, 206, 150, 198, 222, 152, 199, \
220, 155, 202, 221, 158, 204, 218, 161, 205, 215, \
162, 206, 213, 164, 208, 213, 165, 208, 210, 168, \
207, 200, 180, 216, 203, 184, 220, 215, 178, 219, \
224, 172, 214, 217, 173, 214, 215, 171, 213, 214, \
170, 214, 216, 170, 213, 218, 169, 212, 217, 168, \
212, 217, 168, 212, 218, 165, 212, 219, 163, 211, \
219, 161, 209, 218, 159, 206, 215, 157, 204, 216, \
155, 204, 219, 151, 199, 217, 145, 193, 213, 144, \
193, 214, 137, 188, 211, 135, 187, 206, 134, 190, \
203, 143, 192, 219, 146, 194, 219, 149, 196, 222, \
152, 199, 219, 156, 201, 216, 163, 205, 218, 167, \
207, 217, 172, 209, 218, 178, 213, 210, 170, 203, \
196, 139, 173, 186, 144, 183, 199, 186, 218, 208, \
194, 220, 203, 191, 220, 207, 179, 221, 217, 169, \
214, 215, 165, 210, 213, 162, 210, 215, 158, 210, \
216, 152, 206, 219, 153, 205, 222, 154, 202, 218, \
150, 200, 215, 147, 199, 215, 147, 198, 219, 142, \
194, 213, 137, 191, 207, 134, 190, 206, 132, 187, \
206, 139, 188, 203, 142, 189, 197, 137, 191, 207, \
137, 191, 209, 137, 192, 211, 143, 193, 220, 136, \
180, 210, 113, 149, 174, 110, 138, 158, 114, 136, \
153, 136, 156, 157, 144, 163, 159, 89, 108, 128, \
98, 122, 138, 203, 215, 192, 230, 234, 202, 220, \
229, 203, 178, 202, 188, 155, 187, 191, 157, 192, \
202, 148, 186, 198, 149, 189, 204, 156, 200, 210, \
157, 198, 206, 157, 195, 206, 149, 193, 203, 141, \
192, 205, 138, 194, 210, 136, 191, 204, 133, 189, \
199, 133, 187, 195, 136, 185, 191, 138, 190, 191, \
137, 190, 188, 135, 184, 195, 136, 190, 203, 134, \
191, 207, 141, 193, 213, 128, 171, 189, 87, 118, \
125, 82, 100, 97, 90, 100, 90, 126, 133, 105, \
169, 173, 141, 146, 150, 138, 143, 152, 137, 185, \
182, 151, 202, 191, 156, 196, 190, 157, 170, 175, \
153, 170, 185, 173, 162, 181, 172, 151, 171, 163, \
160, 182, 175, 171, 192, 183, 172, 190, 181, 168, \
187, 184, 148, 175, 174, 147, 189, 191, 140, 192, \
196, 143, 190, 194, 116, 157, 161, 96, 131, 134, \
108, 142, 138, 128, 182, 174, 127, 188, 183, 96, \
125, 149, 112, 147, 173, 132, 173, 200, 137, 182, \
197, 147, 186, 184, 163, 187, 171, 194, 202, 172, \
203, 203, 170, 188, 184, 145, 200, 191, 151, 183, \
174, 148, 186, 183, 151, 192, 186, 156, 188, 178, \
146, 187, 180, 150, 187, 186, 160, 194, 198, 167, \
177, 182, 148, 176, 181, 147, 179, 183, 150, 171, \
173, 144, 170, 168, 146, 168, 169, 153, 164, 174, \
162, 165, 188, 177, 156, 184, 176, 157, 179, 174, \
148, 162, 159, 159, 168, 167, 165, 181, 177, 132, \
175, 171, 119, 173, 179, 32, 45, 81, 54, 72, \
106, 60, 83, 116, 57, 86, 113, 69, 95, 110, \
85, 96, 95, 143, 139, 122, 155, 147, 127, 123, \
114, 92, 144, 129, 105, 128, 111, 96, 118, 109, \
83, 123, 119, 92, 134, 130, 103, 139, 136, 109, \
123, 121, 95, 119, 115, 95, 128, 121, 103, 133, \
124, 103, 129, 118, 97, 130, 121, 93, 125, 113, \
86, 128, 117, 94, 128, 125, 104, 114, 117, 95, \
131, 134, 112, 133, 131, 112, 140, 133, 118, 153, \
144, 133, 128, 131, 125, 82, 99, 101, 65, 96, \
110, 35, 53, 83, 55, 75, 99, 62, 83, 101, \
71, 92, 111, 71, 87, 101, 92, 95, 94, 127, \
119, 101, 132, 124, 105, 121, 118, 100, 152, 141, \
123, 157, 144, 131, 146, 138, 112, 156, 151, 120, \
178, 174, 144, 175, 170, 138, 155, 148, 116, 150, \
143, 121, 159, 151, 132, 173, 160, 139, 171, 156, \
132, 162, 151, 124, 157, 146, 120, 156, 141, 116, \
150, 139, 114, 139, 133, 101, 163, 157, 118, 162, \
155, 120, 162, 153, 122, 145, 139, 111, 109, 108, \
88, 76, 69, 64, 74, 78, 86, 110, 140, 152, \
115, 141, 151, 111, 134, 134, 89, 103, 106, 99, \
105, 105, 134, 132, 120, 160, 148, 125, 175, 166, \
136, 167, 165, 129, 175, 167, 129, 170, 161, 126, \
171, 162, 121, 171, 159, 126, 173, 161, 131, 170, \
157, 125, 158, 144, 109, 153, 142, 111, 145, 135, \
106, 162, 149, 119, 162, 147, 116, 158, 146, 118, \
156, 145, 120, 151, 137, 112, 146, 135, 108, 159, \
151, 116, 182, 175, 131, 183, 176, 135, 180, 174, \
136, 169, 164, 131, 156, 153, 126, 140, 129, 109, \
136, 136, 124, 153, 178, 175, 142, 159, 157, 132, \
142, 130, 67, 71, 62, 67, 67, 60, 77, 72, \
58, 108, 96, 77, 148, 137, 109, 135, 128, 94, \
136, 126, 91, 140, 127, 95, 153, 138, 108, 167, \
149, 121, 162, 145, 117, 166, 150, 120, 168, 153, \
119, 171, 158, 124, 168, 155, 122, 176, 162, 131, \
173, 158, 130, 177, 163, 133, 178, 165, 133, 175, \
164, 131, 170, 162, 128, 174, 168, 131, 189, 183, \
143, 185, 180, 142, 180, 174, 138, 180, 173, 141, \
177, 171, 141, 187, 184, 147, 162, 170, 139, 101, \
105, 95, 125, 120, 107, 166, 152, 130, 183, 177, \
148, 190, 189, 158, 188, 186, 152, 197, 194, 157, \
213, 211, 169, 213, 210, 167, 207, 200, 162, 204, \
194, 159, 195, 183, 151, 191, 177, 146, 197, 183, \
148, 205, 193, 154, 207, 195, 155, 205, 194, 148, \
203, 191, 144, 194, 181, 138, 190, 177, 136, 197, \
183, 141, 193, 179, 135, 189, 178, 133, 178, 170, \
124, 159, 153, 110, 178, 175, 136, 147, 143, 106, \
140, 136, 102, 160, 155, 122, 166, 158, 120, 199, \
193, 151, 179, 183, 151, 125, 123, 104, 135, 119, \
91, 164, 140, 107, 185, 165, 123, 201, 187, 141, \
207, 196, 150, 212, 204, 158, 220, 217, 168, 224, \
222, 174, 228, 223, 184, 176, 168, 134, 127, 117, \
83, 125, 115, 83, 153, 144, 105, 175, 166, 123, \
178, 170, 125, 179, 167, 122, 185, 173, 129, 182, \
168, 127, 174, 162, 123, 170, 155, 117, 184, 169, \
130, 192, 179, 140, 194, 183, 142, 186, 176, 138, \
174, 163, 131, 174, 163, 134, 166, 155, 128, 156, \
144, 118, 153, 142, 111, 144, 136, 106, 100, 100, \
82, 157, 165, 138, 153, 142, 106, 125, 104, 70, \
136, 108, 72, 150, 119, 80, 159, 133, 94, 181, \
159, 122, 201, 188, 148, 206, 200, 162, 199, 190, \
162, 183, 172, 145, 168, 155, 124, 159, 148, 116, \
184, 173, 139, 199, 189, 152, 200, 191, 152, 194, \
180, 149, 183, 168, 142, 200, 185, 160, 186, 171, \
149, 165, 149, 128, 150, 134, 112, 167, 153, 131, \
165, 154, 131, 154, 141, 119, 126, 109, 89, 135, \
117, 100, 119, 101, 86, 100, 84, 72, 104, 97, \
82, 91, 86, 75, 62, 66, 63, 172, 190, 161, \
183, 174, 140, 101, 82, 60, 119, 90, 74, 128, \
95, 76, 108, 78, 59, 100, 73, 53, 101, 81, \
59, 96, 82, 64, 89, 71, 63, 119, 100, 85, \
151, 132, 105, 111, 95, 75, 137, 120, 99, 159, \
144, 118, 149, 133, 107, 134, 117, 98, 107, 89, \
75, 124, 106, 93, 117, 99, 89, 110, 93, 83, \
95, 82, 72, 105, 94, 83, 103, 95, 82, 103, \
96, 83, 104, 96, 85, 106, 98, 89, 103, 94, \
88, 103, 96, 91, 97, 100, 93, 102, 107, 103, \
107, 122, 120, 153, 169, 148, 128, 116, 92, 68, \
45, 39, 64, 42, 44, 62, 41, 38, 55, 34, \
29, 46, 26, 20, 42, 24, 17, 47, 26, 23, \
55, 32, 35, 73, 49, 40, 94, 71, 49, 84, \
63, 51, 101, 80, 67, 109, 89, 73, 110, 91, \
74, 112, 95, 78, 108, 91, 76, 103, 87, 74, \
101, 85, 75, 99, 88, 78, 107, 100, 89, 107, \
103, 91, 111, 108, 96, 119, 123, 111, 125, 136, \
125, 128, 138, 130, 128, 139, 133, 124, 135, 129, \
126, 140, 130, 126, 143, 134, 123, 150, 139, 114, \
119, 116, 79, 65, 61, 56, 42, 40, 58, 46, \
45, 65, 51, 48, 68, 54, 47, 79, 65, 53, \
99, 85, 70, 116, 103, 87, 122, 108, 94, 111, \
97, 78, 104, 89, 67, 109, 90, 76, 123, 106, \
87, 126, 111, 91, 126, 112, 95, 129, 115, 100, \
130, 118, 103, 130, 124, 108, 128, 126, 109, 127, \
129, 114, 127, 131, 116, 129, 136, 120, 131, 140, \
123, 136, 149, 132, 140, 158, 142, 136, 155, 141, \
131, 152, 140, 127, 149, 139, 126, 150, 143, 125, \
151, 146, 126, 157, 152, 105, 113, 114, 103, 97, \
98, 95, 93, 88, 93, 90, 85, 93, 84, 79, \
97, 87, 77, 109, 98, 84, 124, 114, 96, 128, \
120, 100, 129, 121, 101, 120, 113, 93, 114, 105, \
86, 121, 109, 92, 132, 122, 100, 136, 129, 105, \
133, 127, 109, 134, 127, 112, 135, 131, 114, 136, \
139, 120, 135, 144, 122, 136, 145, 127, 137, 147, \
130, 135, 148, 130, 138, 152, 134, 142, 159, 140, \
144, 164, 146, 139, 161, 145, 137, 161, 146, 130, \
156, 144, 128, 155, 148, 126, 155, 150, 126, 157, \
154, 120, 138, 136, 127, 134, 130, 120, 130, 121, \
118, 123, 116, 109, 107, 101, 112, 107, 97, 117, \
110, 96, 121, 114, 99, 118, 113, 100, 123, 118, \
104, 123, 118, 104, 122, 117, 103, 131, 126, 109, \
138, 137, 113, 140, 142, 117, 139, 142, 122, 141, \
144, 127, 141, 147, 128, 142, 152, 132, 142, 156, \
135, 143, 155, 138, 142, 154, 139, 142, 156, 140, \
143, 160, 143, 144, 163, 146, 144, 166, 149, 142, \
165, 150, 137, 162, 148, 129, 156, 144, 127, 156, \
146, 125, 157, 148, 124, 157, 150, 133, 160, 155, \
138, 157, 150, 136, 157, 144, 135, 150, 140, 122, \
129, 122, 130, 133, 122, 129, 127, 112, 124, 122, \
109, 119, 120, 110, 127, 128, 118, 133, 133, 123, \
134, 134, 124, 136, 138, 120, 141, 147, 122, 143, \
151, 125, 140, 149, 129, 139, 151, 133, 140, 154, \
135, 141, 157, 138, 140, 159, 138, 144, 160, 143, \
144, 159, 144, 142, 161, 144, 143, 164, 147, 143, \
165, 148, 144, 167, 151, 141, 165, 152, 135, 161, \
149, 128, 157, 146, 125, 156, 145, 124, 156, 147, \
120, 155, 148, 133, 163, 157, 136, 163, 153, 137, \
163, 149, 133, 155, 144, 122, 138, 130, 123, 133, \
121, 130, 133, 119, 127, 129, 116, 121, 126, 116, \
130, 136, 125, 137, 142, 132, 141, 146, 135, 145, \
150, 133, 146, 154, 130, 144, 155, 131, 143, 156, \
136, 141, 158, 140, 142, 161, 142, 143, 162, 143, \
141, 160, 141, 143, 161, 145, 142, 161, 147, 139, \
161, 145, 138, 162, 146, 139, 163, 148, 141, 165, \
151, 136, 162, 150, 129, 157, 147, 123, 153, 144, \
121, 152, 146, 118, 152, 146, 114, 150, 146, 134, \
166, 159, 137, 168, 157, 139, 168, 152, 134, 161, \
150, 124, 147, 138, 119, 134, 122, 129, 136, 122, \
129, 135, 121, 120, 130, 117, 127, 137, 123, 135, \
146, 132, 137, 145, 132, 143, 147, 132, 145, 152, \
130, 146, 156, 133, 145, 158, 140, 143, 161, 143, \
142, 161, 143, 146, 164, 145, 144, 161, 143, 141, \
159, 145, 139, 160, 147, 137, 161, 147, 135, 161, \
146, 135, 161, 147, 136, 161, 147, 131, 158, 146, \
124, 153, 144, 118, 149, 142, 116, 148, 146, 111, \
145, 145, 107, 144, 145, 133, 165, 158, 135, 166, \
156, 138, 167, 153, 134, 161, 149, 119, 147, 136, \
120, 137, 126, 135, 142, 128, 135, 145, 129, 125, \
137, 125, 130, 142, 129, 139, 151, 138, 139, 150, \
137, 146, 154, 138, 149, 156, 139, 148, 158, 140, \
142, 157, 142, 138, 157, 142, 139, 158, 143, 142, \
161, 146, 141, 159, 145, 139, 160, 146, 137, 161, \
147, 134, 159, 148, 132, 160, 149, 132, 160, 150, \
129, 157, 147, 123, 152, 145, 118, 148, 144, 113, \
144, 143, 111, 143, 146, 106, 139, 144, 102, 138, \
145, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '18914';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1aba6579343bc4c518183e61943fbabe25';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_horse8';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{145, 107, 78, 160, 119, 80, 159, 124, 92, 167, 146, \
132, 172, 159, 153, 173, 160, 151, 180, 167, 157, \
172, 159, 150, 143, 130, 121, 131, 118, 109, 129, \
116, 107, 133, 120, 111, 136, 123, 114, 140, 127, \
118, 143, 130, 121, 145, 134, 122, 155, 141, 128, \
168, 149, 140, 194, 176, 168, 198, 188, 180, 192, \
188, 179, 195, 187, 179, 197, 188, 180, 191, 182, \
174, 178, 169, 161, 190, 181, 173, 196, 184, 180, \
196, 182, 180, 197, 184, 179, 180, 167, 159, 168, \
155, 145, 167, 155, 145, 138, 105, 79, 155, 117, \
80, 157, 123, 92, 165, 143, 128, 170, 156, 149, \
170, 158, 149, 177, 164, 155, 170, 157, 148, 142, \
129, 120, 131, 118, 109, 127, 114, 105, 129, 117, \
108, 133, 120, 111, 135, 122, 113, 139, 126, 117, \
139, 128, 116, 149, 135, 122, 161, 142, 134, 187, \
169, 162, 192, 182, 174, 185, 181, 173, 188, 180, \
177, 189, 179, 177, 190, 180, 178, 191, 181, 179, \
188, 178, 176, 191, 178, 177, 190, 176, 175, 192, \
179, 174, 177, 164, 156, 166, 153, 144, 166, 155, \
144, 133, 106, 84, 151, 116, 81, 156, 123, 92, \
162, 140, 124, 168, 153, 146, 166, 153, 144, 172, \
159, 150, 164, 151, 142, 141, 128, 119, 128, 115, \
106, 124, 111, 102, 127, 114, 105, 131, 118, 109, \
134, 121, 112, 138, 125, 115, 136, 125, 113, 143, \
129, 117, 152, 133, 124, 173, 155, 148, 177, 167, \
159, 169, 165, 157, 176, 168, 164, 179, 169, 166, \
181, 171, 168, 182, 172, 169, 176, 166, 163, 177, \
165, 163, 178, 164, 162, 176, 162, 157, 166, 153, \
145, 156, 143, 133, 150, 139, 128, 120, 97, 79, \
140, 108, 75, 146, 114, 83, 145, 122, 106, 146, \
131, 123, 147, 134, 125, 152, 140, 131, 145, 132, \
123, 128, 115, 106, 113, 100, 91, 107, 94, 85, \
112, 99, 90, 113, 100, 91, 115, 102, 93, 118, \
105, 96, 114, 103, 90, 123, 109, 96, 142, 123, \
114, 152, 134, 126, 123, 113, 104, 130, 127, 117, \
159, 152, 142, 162, 153, 143, 165, 156, 147, 167, \
159, 149, 161, 153, 144, 165, 153, 149, 169, 155, \
154, 167, 154, 149, 149, 136, 128, 140, 127, 118, \
135, 124, 113, 112, 92, 74, 143, 109, 80, 157, \
120, 93, 146, 117, 103, 143, 125, 118, 152, 139, \
130, 158, 143, 132, 153, 139, 126, 144, 132, 121, \
128, 119, 109, 131, 121, 112, 142, 130, 121, 144, \
131, 122, 146, 132, 121, 147, 134, 123, 149, 136, \
126, 133, 119, 112, 115, 101, 98, 131, 118, 116, \
118, 107, 104, 132, 124, 117, 161, 155, 142, 162, \
155, 142, 164, 156, 143, 165, 156, 143, 165, 154, \
142, 167, 155, 149, 165, 155, 150, 165, 156, 149, \
145, 136, 127, 151, 140, 130, 161, 150, 140, 110, \
92, 73, 139, 104, 78, 160, 119, 97, 188, 157, \
146, 195, 176, 173, 187, 174, 169, 150, 132, 121, \
138, 120, 106, 134, 124, 112, 120, 116, 108, 132, \
125, 116, 145, 133, 124, 145, 131, 121, 148, 133, \
122, 149, 136, 124, 138, 124, 115, 81, 68, 66, \
35, 27, 29, 69, 63, 66, 113, 102, 102, 125, \
112, 105, 137, 131, 119, 135, 130, 117, 139, 130, \
119, 142, 131, 120, 142, 129, 119, 141, 128, 121, \
138, 130, 123, 134, 132, 122, 123, 120, 109, 134, \
123, 114, 144, 131, 123, 107, 90, 74, 125, 95, \
74, 149, 117, 99, 187, 160, 150, 179, 161, 160, \
152, 137, 138, 131, 112, 108, 124, 105, 98, 121, \
109, 105, 108, 102, 100, 118, 105, 99, 129, 115, \
106, 126, 115, 106, 121, 109, 101, 116, 103, 96, \
122, 108, 99, 74, 64, 56, 37, 32, 29, 58, \
55, 53, 102, 94, 88, 119, 108, 98, 130, 125, \
113, 132, 126, 115, 129, 120, 110, 125, 113, 104, \
138, 124, 116, 120, 103, 97, 110, 97, 91, 133, \
127, 119, 120, 115, 108, 124, 113, 108, 122, 109, \
105, 108, 93, 81, 118, 97, 83, 128, 105, 93, \
116, 95, 86, 155, 139, 138, 162, 146, 150, 114, \
94, 94, 122, 103, 99, 128, 116, 115, 116, 109, \
109, 123, 104, 98, 142, 127, 117, 139, 132, 123, \
116, 111, 105, 98, 86, 85, 136, 123, 118, 113, \
106, 97, 65, 63, 59, 58, 57, 54, 89, 84, \
77, 119, 110, 100, 146, 141, 131, 146, 140, 131, \
126, 116, 109, 105, 93, 87, 138, 124, 117, 104, \
82, 78, 87, 68, 63, 141, 130, 125, 129, 121, \
119, 117, 106, 108, 100, 87, 89, 122, 108, 100, \
149, 135, 128, 96, 83, 75, 65, 51, 44, 100, \
88, 84, 130, 115, 114, 79, 60, 54, 95, 76, \
67, 113, 103, 96, 97, 89, 86, 104, 79, 74, \
113, 95, 87, 117, 114, 106, 99, 97, 94, 89, \
78, 82, 97, 84, 86, 108, 102, 99, 51, 50, \
53, 27, 28, 32, 64, 60, 60, 101, 93, 89, \
126, 121, 115, 116, 109, 104, 91, 82, 78, 82, \
69, 66, 98, 83, 81, 98, 72, 70, 92, 66, \
63, 122, 106, 104, 112, 102, 104, 84, 72, 80, \
77, 63, 74, 146, 133, 130, 145, 136, 134, 65, \
57, 55, 46, 38, 33, 42, 31, 25, 63, 50, \
42, 116, 99, 86, 158, 141, 126, 134, 124, 111, \
156, 148, 138, 140, 114, 106, 94, 75, 66, 72, \
70, 61, 49, 48, 47, 51, 41, 50, 55, 43, \
51, 46, 42, 47, 18, 19, 28, 18, 19, 30, \
45, 41, 47, 69, 61, 62, 119, 113, 109, 104, \
96, 92, 84, 74, 71, 90, 77, 75, 57, 42, \
41, 73, 48, 46, 76, 51, 49, 88, 72, 73, \
97, 87, 92, 60, 50, 61, 54, 42, 57, 86, \
79, 81, 66, 60, 62, 54, 48, 50, 83, 77, \
78, 57, 49, 44, 80, 68, 55, 139, 125, 111, \
157, 144, 129, 141, 129, 115, 198, 187, 174, 197, \
181, 167, 171, 158, 142, 118, 111, 97, 57, 51, \
47, 44, 36, 44, 36, 31, 40, 21, 24, 29, \
17, 22, 29, 18, 20, 26, 46, 41, 40, 73, \
63, 56, 126, 118, 109, 108, 100, 91, 71, 63, \
54, 94, 84, 76, 53, 43, 35, 44, 35, 29, \
39, 32, 31, 50, 45, 48, 84, 80, 87, 71, \
67, 78, 59, 52, 62, 66, 60, 54, 69, 63, \
56, 81, 75, 69, 104, 98, 91, 96, 87, 80, \
117, 104, 95, 148, 135, 126, 105, 92, 83, 139, \
127, 118, 183, 170, 161, 194, 181, 172, 190, 178, \
165, 173, 163, 149, 118, 111, 102, 66, 59, 60, \
31, 30, 34, 15, 21, 25, 14, 21, 27, 20, \
24, 27, 61, 56, 52, 91, 80, 70, 101, 91, \
80, 95, 86, 75, 78, 68, 58, 79, 70, 59, \
75, 65, 55, 66, 58, 49, 65, 58, 52, 69, \
61, 57, 82, 73, 72, 88, 80, 82, 86, 76, \
76, 102, 93, 76, 103, 94, 77, 101, 92, 75, \
100, 90, 73, 107, 96, 84, 142, 128, 124, 131, \
117, 113, 116, 102, 98, 146, 132, 128, 158, 144, \
140, 176, 161, 159, 164, 151, 143, 159, 150, 137, \
150, 143, 132, 86, 80, 75, 43, 42, 43, 21, \
26, 31, 16, 23, 28, 25, 28, 31, 69, 64, \
60, 93, 81, 71, 89, 77, 65, 89, 78, 66, \
85, 73, 61, 82, 70, 58, 80, 69, 56, 82, \
68, 55, 86, 70, 57, 88, 72, 60, 91, 75, \
63, 92, 76, 65, 91, 75, 64, 108, 93, 71, \
108, 93, 71, 108, 93, 71, 109, 94, 72, 102, \
88, 73, 112, 99, 93, 109, 96, 90, 103, 89, \
84, 113, 100, 94, 132, 118, 113, 161, 146, 142, \
184, 171, 162, 199, 189, 176, 175, 168, 158, 94, \
88, 85, 46, 45, 47, 21, 26, 30, 17, 24, \
29, 21, 24, 27, 62, 57, 53, 91, 78, 68, \
100, 86, 72, 118, 105, 90, 129, 116, 101, 119, \
106, 91, 97, 84, 69, 84, 68, 53, 86, 67, \
52, 95, 76, 60, 95, 76, 58, 96, 78, 58, \
96, 80, 60, 102, 84, 62, 101, 83, 61, 101, \
82, 61, 101, 83, 61, 90, 74, 57, 75, 63, \
51, 88, 76, 64, 87, 75, 63, 97, 85, 73, \
153, 141, 129, 198, 185, 172, 214, 203, 187, 209, \
200, 185, 134, 126, 120, 56, 49, 54, 27, 25, \
32, 18, 23, 27, 18, 25, 30, 26, 29, 32, \
68, 64, 60, 133, 120, 109, 174, 159, 144, 203, \
188, 172, 217, 202, 186, 220, 205, 189, 188, 173, \
157, 137, 120, 107, 124, 106, 94, 103, 86, 70, \
88, 71, 51, 89, 72, 49, 89, 74, 50, 102, \
83, 61, 101, 82, 60, 98, 78, 57, 100, 81, \
59, 101, 82, 62, 100, 82, 66, 95, 79, 62, \
91, 76, 58, 98, 84, 66, 165, 152, 134, 213, \
203, 185, 217, 210, 193, 186, 180, 170, 74, 69, \
70, 30, 26, 37, 21, 22, 33, 15, 21, 28, \
13, 20, 23, 33, 37, 34, 127, 127, 116, 192, \
187, 171, 202, 194, 178, 208, 199, 184, 212, 203, \
188, 215, 207, 191, 206, 197, 181, 186, 176, 162, \
196, 184, 170, 164, 151, 135, 118, 104, 85, 114, \
100, 77, 117, 103, 79, 161, 143, 120, 162, 144, \
121, 170, 152, 129, 161, 144, 122, 159, 140, 119, \
163, 141, 123, 163, 143, 125, 160, 143, 124, 158, \
143, 122, 192, 180, 159, 215, 208, 190, 209, 204, \
192, 156, 153, 148, 51, 49, 53, 24, 23, 34, \
20, 23, 35, 21, 27, 35, 13, 19, 20, 51, \
56, 48, 177, 180, 165, 194, 196, 177, 182, 180, \
166, 183, 181, 167, 193, 192, 178, 200, 198, 185, \
194, 192, 178, 157, 152, 138, 156, 148, 133, 187, \
176, 160, 183, 171, 153, 175, 161, 141, 177, 161, \
139, 183, 165, 144, 191, 173, 152, 215, 197, 177, \
184, 167, 146, 177, 158, 139, 169, 149, 133, 163, \
144, 127, 169, 152, 135, 176, 162, 144, 197, 186, \
167, 202, 195, 180, 185, 180, 170, 124, 121, 117, \
31, 30, 32, 29, 29, 36, 27, 30, 38, 22, \
27, 32, 14, 17, 18, 88, 90, 84, 201, 201, \
189, 180, 179, 165, 168, 166, 153, 178, 176, 164, \
187, 185, 173, 190, 188, 176, 182, 180, 168, 141, \
135, 123, 126, 118, 105, 170, 159, 145, 175, 163, \
146, 168, 154, 136, 169, 153, 132, 155, 137, 119, \
153, 134, 117, 182, 163, 146, 163, 145, 127, 163, \
144, 128, 156, 137, 124, 148, 131, 116, 150, 136, \
121, 161, 149, 133, 187, 179, 162, 196, 189, 178, \
181, 176, 168, 130, 127, 123, 40, 39, 39, 26, \
26, 29, 25, 28, 32, 25, 29, 31, 51, 52, \
51, 144, 143, 138, 190, 187, 179, 158, 154, 144, \
160, 157, 148, 184, 181, 171, 186, 183, 174, 172, \
170, 160, 159, 156, 147, 122, 116, 106, 125, 115, \
106, 158, 147, 135, 167, 154, 140, 165, 151, 136, \
164, 148, 130, 107, 88, 73, 90, 71, 57, 103, \
84, 69, 115, 96, 81, 118, 99, 86, 120, 103, \
92, 129, 114, 102, 151, 139, 126, 187, 179, 164, \
201, 194, 180, 191, 184, 177, 166, 160, 156, 140, \
137, 134, 88, 87, 86, 36, 36, 36, 38, 39, \
40, 97, 98, 98, 145, 144, 143, 167, 163, 160, \
148, 143, 138, 122, 116, 111, 124, 121, 115, 168, \
166, 159, 175, 172, 166, 169, 166, 160, 152, 149, \
142, 104, 98, 91, 119, 110, 102, 148, 136, 128, \
152, 138, 128, 113, 98, 85, 87, 70, 57, 77, \
58, 44, 80, 62, 48, 81, 62, 48, 85, 66, \
52, 82, 65, 52, 113, 98, 87, 141, 128, 116, \
155, 143, 131, 168, 159, 146, 163, 155, 143, 158, \
149, 143, 129, 122, 118, 128, 125, 120, 117, 116, \
113, 82, 82, 80, 54, 54, 51, 100, 99, 97, \
143, 140, 137, 133, 128, 125, 114, 107, 104, 90, \
82, 79, 75, 70, 65, 132, 128, 122, 171, 167, \
162, 170, 167, 162, 129, 125, 121, 91, 85, 79, \
113, 104, 97, 141, 129, 121, 144, 131, 120, 101, \
86, 73, 74, 57, 46, 78, 61, 48, 79, 62, \
49, 80, 63, 50, 81, 65, 52, 74, 58, 45, \
100, 84, 72, 100, 85, 72, 95, 79, 67, 95, \
81, 68, 93, 78, 66, 99, 82, 74, 87, 75, \
68, 90, 86, 79, 92, 91, 85, 86, 82, 78, \
59, 52, 48, 61, 55, 49, 86, 79, 74, 86, \
79, 74, 79, 71, 66, 69, 61, 55, 69, 59, \
50, 98, 88, 80, 164, 156, 150, 173, 167, 162, \
113, 108, 104, 97, 90, 83, 110, 101, 91, 138, \
127, 116, 144, 131, 118, 103, 88, 72, 78, 60, \
47, 75, 59, 46, 77, 61, 48, 84, 68, 55, \
106, 90, 77, 66, 51, 38, 70, 54, 41, 76, \
60, 47, 74, 58, 45, 73, 57, 44, 76, 59, \
47, 78, 60, 50, 77, 64, 54, 105, 100, 90, \
96, 92, 84, 75, 66, 62, 71, 58, 51, 73, \
59, 48, 71, 57, 46, 76, 62, 51, 78, 64, \
53, 77, 63, 52, 78, 64, 53, 80, 67, 57, \
142, 132, 124, 179, 171, 165, 121, 115, 110, 110, \
102, 95, 120, 111, 101, 138, 127, 116, 145, 132, \
118, 105, 91, 75, 78, 61, 46, 82, 65, 52, \
80, 64, 51, 90, 74, 61, 120, 104, 91, 88, \
72, 59, 76, 60, 47, 81, 65, 52, 79, 63, \
50, 76, 60, 47, 80, 64, 51, 82, 65, 52, \
82, 71, 57, 128, 121, 109, 109, 100, 92, 80, \
65, 61, 85, 67, 57, 89, 70, 54, 90, 70, \
55, 89, 70, 54, 88, 69, 53, 87, 68, 53, \
86, 69, 56, 84, 69, 57, 104, 92, 82, 167, \
158, 150, 152, 144, 137, 126, 118, 110, 137, 128, \
118, 140, 129, 117, 147, 135, 121, 106, 92, 76, \
77, 60, 45, 83, 67, 54, 81, 65, 52, 84, \
68, 55, 82, 66, 53, 82, 66, 53, 82, 66, \
53, 82, 66, 53, 82, 66, 53, 80, 64, 51, \
81, 65, 52, 80, 65, 50, 85, 74, 58, 135, \
127, 113, 104, 91, 81, 85, 64, 59, 92, 69, \
59, 90, 71, 55, 92, 72, 56, 90, 70, 54, \
89, 69, 54, 89, 70, 54, 88, 69, 55, 85, \
68, 54, 86, 71, 59, 157, 145, 135, 155, 145, \
136, 108, 99, 90, 125, 116, 106, 135, 124, 112, \
147, 135, 120, 101, 87, 71, 72, 54, 40, 81, \
65, 52, 82, 67, 54, 83, 67, 54, 81, 65, \
52, 77, 61, 48, 78, 62, 49, 78, 62, 49, \
79, 63, 50, 82, 66, 53, 84, 68, 54, 84, \
70, 54, 88, 78, 61, 124, 115, 99, 99, 84, \
73, 87, 62, 57, 91, 67, 59, 85, 69, 56, \
83, 66, 53, 82, 66, 53, 83, 66, 53, 85, \
67, 54, 84, 66, 51, 82, 63, 49, 81, 64, \
51, 129, 114, 103, 121, 109, 100, 74, 65, 55, \
92, 83, 73, 123, 112, 101, 133, 121, 107, 92, \
78, 62, 74, 57, 42, 79, 63, 50, 81, 65, \
52, 79, 63, 50, 75, 59, 46, 72, 56, 43, \
72, 56, 43, 77, 61, 48, 76, 60, 47, 77, \
61, 48, 78, 62, 48, 82, 66, 54, 79, 68, \
58, 86, 76, 70, 78, 66, 61, 75, 56, 50, \
78, 60, 52, 77, 64, 54, 76, 62, 53, 74, \
60, 50, 70, 56, 46, 72, 58, 49, 75, 60, \
50, 74, 59, 50, 72, 57, 48, 89, 75, 67, \
85, 72, 65, 58, 50, 42, 45, 39, 30, 87, \
79, 70, 102, 92, 82, 78, 65, 55, 72, 57, \
46, 79, 63, 50, 76, 60, 47, 74, 58, 45, \
71, 55, 42, 72, 56, 43, 76, 60, 47, 77, \
61, 48, 73, 57, 44, 72, 56, 43, 73, 56, \
44, 71, 55, 45, 66, 53, 48, 46, 37, 36, \
61, 51, 48, 71, 56, 49, 70, 55, 45, 67, \
54, 45, 65, 52, 43, 61, 48, 40, 63, 50, \
41, 66, 53, 44, 65, 52, 45, 64, 51, 45, \
58, 45, 38, 37, 24, 17, 52, 40, 33, 60, \
53, 45, 44, 39, 29, 60, 53, 45, 69, 59, \
52, 67, 55, 48, 68, 53, 45, 81, 65, 52, \
78, 62, 49, 76, 60, 47, 75, 59, 46, 78, \
62, 49, 79, 63, 50, 76, 60, 47, 72, 56, \
43, 72, 56, 43, 70, 54, 41, 81, 64, 52, \
109, 97, 89, 65, 57, 53, 62, 52, 48, 69, \
54, 44, 67, 52, 41, 66, 53, 44, 64, 51, \
42, 61, 48, 39, 62, 49, 40, 62, 49, 40, \
62, 49, 40, 62, 48, 40, 87, 74, 66, 77, \
64, 55, 57, 45, 36, 78, 69, 59, 89, 82, \
71, 63, 54, 44, 62, 50, 41, 67, 52, 44, \
70, 53, 44, 80, 64, 51, 78, 62, 49, 78, \
62, 49, 79, 63, 50, 79, 63, 50, 79, 63, \
50, 77, 61, 48, 77, 61, 48, 76, 60, 47, \
75, 59, 46, 79, 63, 49, 88, 76, 66, 70, \
62, 55, 65, 56, 48, 72, 58, 45, 73, 58, \
46, 70, 57, 48, 68, 55, 46, 66, 53, 44, \
65, 52, 43, 63, 50, 41, 63, 50, 40, 67, \
54, 44, 101, 88, 78, 92, 79, 69, 64, 51, \
41, 72, 62, 51, 81, 73, 61, 66, 55, 44, \
68, 53, 44, 71, 53, 45, 72, 54, 44, 80, \
64, 51, 78, 62, 49, 79, 63, 50, 81, 65, \
52, 79, 63, 50, 78, 62, 49, 80, 64, 51, \
81, 65, 52, 79, 63, 50, 78, 62, 48, 77, \
61, 46, 74, 62, 49, 70, 63, 54, 72, 64, \
53, 79, 66, 51, 80, 66, 53, 77, 64, 55, \
75, 62, 53, 73, 60, 51, 72, 60, 51, 71, \
58, 48, 72, 60, 47, 72, 60, 47, 70, 58, \
45, 71, 59, 46, 75, 63, 50, 75, 64, 50, \
73, 61, 48, 74, 60, 48, 78, 60, 49, 79, \
60, 50, 79, 60, 49, 83, 67, 55, 81, 65, \
53, 82, 66, 53, 80, 64, 51, 79, 63, 49, \
81, 65, 52, 84, 68, 55, 85, 69, 56, 82, \
66, 53, 82, 66, 52, 80, 65, 49, 79, 67, \
52, 77, 67, 56, 76, 66, 53, 82, 67, 52, \
81, 66, 52, 79, 66, 55, 82, 68, 57, 81, \
67, 56, 80, 66, 56, 78, 64, 53, 78, 65, \
51, 75, 62, 48, 75, 61, 48, 79, 65, 53, \
80, 67, 55, 81, 68, 56, 83, 69, 57, 82, \
66, 54, 82, 65, 52, 83, 64, 52, 83, 64, \
52, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '19224';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a559baa35f6edfc3db5159cc04fcd264f';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_dog5';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{255, 255, 251, 252, 252, 249, 253, 254, 253, 255, 255, \
255, 255, 255, 255, 255, 255, 255, 255, 255, 254, \
255, 255, 252, 255, 255, 246, 253, 252, 239, 249, \
252, 235, 254, 255, 236, 255, 255, 231, 255, 255, \
226, 255, 254, 218, 253, 251, 213, 255, 253, 218, \
255, 254, 221, 255, 253, 224, 255, 253, 229, 255, \
254, 231, 255, 253, 226, 255, 254, 228, 255, 254, \
230, 255, 254, 232, 254, 254, 232, 254, 253, 230, \
251, 247, 220, 248, 238, 208, 248, 233, 199, 244, \
227, 190, 243, 229, 197, 250, 250, 247, 247, 247, \
244, 248, 246, 246, 245, 242, 243, 253, 249, 247, \
252, 247, 240, 252, 247, 236, 252, 248, 232, 252, \
244, 224, 246, 237, 213, 239, 238, 206, 246, 246, \
209, 248, 245, 204, 250, 245, 198, 245, 238, 187, \
243, 234, 182, 247, 238, 187, 249, 240, 192, 248, \
240, 196, 249, 241, 202, 251, 244, 205, 250, 242, \
201, 250, 241, 204, 251, 243, 209, 251, 248, 216, \
252, 250, 221, 253, 252, 222, 252, 247, 217, 249, \
240, 210, 246, 234, 201, 238, 222, 187, 232, 219, \
189, 255, 255, 255, 251, 249, 249, 254, 249, 248, \
254, 250, 245, 252, 241, 232, 255, 240, 225, 255, \
238, 216, 255, 239, 211, 255, 237, 204, 252, 233, \
195, 249, 237, 190, 252, 242, 190, 253, 238, 183, \
253, 236, 176, 249, 229, 164, 243, 222, 156, 246, \
225, 159, 248, 229, 166, 248, 231, 173, 251, 235, \
180, 254, 238, 183, 253, 236, 181, 251, 234, 182, \
252, 237, 188, 255, 243, 198, 255, 250, 208, 254, \
248, 209, 254, 247, 211, 255, 248, 214, 255, 246, \
212, 248, 234, 200, 238, 226, 198, 253, 251, 254, \
251, 247, 249, 255, 249, 245, 251, 241, 231, 250, \
230, 213, 250, 222, 199, 249, 219, 187, 251, 220, \
180, 254, 221, 177, 255, 223, 173, 255, 231, 175, \
255, 232, 173, 255, 225, 162, 255, 221, 153, 253, \
215, 143, 247, 208, 134, 248, 211, 137, 251, 217, \
146, 252, 220, 153, 254, 226, 161, 255, 231, 167, \
255, 231, 166, 251, 226, 163, 246, 224, 164, 250, \
230, 175, 253, 236, 187, 254, 238, 194, 253, 238, \
197, 253, 239, 201, 254, 241, 207, 251, 236, 204, \
249, 237, 210, 255, 254, 255, 252, 244, 243, 250, \
234, 227, 245, 220, 206, 244, 213, 190, 236, 198, \
167, 226, 185, 145, 237, 195, 148, 240, 197, 144, \
247, 204, 148, 254, 216, 159, 255, 217, 159, 245, \
198, 136, 249, 197, 129, 249, 194, 124, 245, 189, \
116, 251, 197, 124, 249, 199, 129, 250, 205, 137, \
253, 214, 149, 255, 223, 158, 253, 223, 154, 245, \
214, 146, 248, 220, 154, 232, 205, 144, 239, 213, \
158, 253, 230, 180, 250, 229, 184, 252, 232, 193, \
254, 237, 202, 253, 235, 203, 255, 242, 216, 255, \
250, 250, 250, 239, 234, 246, 225, 214, 239, 210, \
190, 227, 188, 160, 211, 166, 130, 196, 150, 104, \
220, 172, 120, 226, 178, 121, 241, 192, 136, 244, \
194, 144, 214, 162, 112, 209, 150, 96, 245, 183, \
126, 238, 172, 110, 220, 152, 89, 232, 167, 104, \
231, 172, 110, 226, 174, 114, 247, 199, 142, 255, \
216, 156, 255, 225, 157, 248, 215, 146, 241, 205, \
139, 229, 193, 132, 228, 193, 136, 247, 214, 163, \
253, 224, 177, 253, 228, 186, 254, 230, 195, 252, \
231, 198, 255, 240, 213, 254, 247, 243, 245, 230, \
220, 240, 215, 198, 226, 191, 166, 211, 168, 136, \
196, 147, 107, 187, 136, 90, 216, 165, 113, 223, \
172, 117, 215, 164, 115, 193, 144, 106, 134, 82, \
50, 114, 57, 26, 199, 135, 92, 202, 135, 89, \
174, 106, 58, 190, 126, 77, 205, 149, 100, 160, \
111, 67, 178, 136, 93, 229, 189, 140, 237, 198, \
139, 245, 207, 146, 241, 200, 140, 222, 179, 120, \
206, 164, 109, 232, 192, 140, 253, 216, 169, 246, \
213, 171, 241, 211, 174, 248, 221, 187, 251, 233, \
204, 255, 249, 238, 239, 222, 207, 227, 199, 177, \
220, 181, 152, 197, 150, 115, 166, 115, 74, 171, \
117, 72, 209, 157, 109, 210, 159, 108, 160, 113, \
71, 93, 54, 31, 43, 5, 1, 52, 9, 0, \
146, 92, 63, 167, 108, 76, 164, 104, 69, 170, \
116, 81, 137, 92, 60, 47, 12, 0, 57, 28, \
9, 123, 91, 53, 183, 141, 93, 210, 164, 114, \
237, 190, 139, 218, 170, 118, 196, 147, 97, 215, \
167, 119, 242, 198, 153, 239, 198, 156, 230, 193, \
156, 239, 206, 171, 244, 221, 193, 252, 244, 227, \
226, 207, 187, 218, 188, 164, 221, 181, 150, 201, \
153, 116, 174, 121, 81, 176, 122, 78, 187, 135, \
89, 170, 118, 72, 97, 55, 20, 41, 14, 4, \
62, 36, 34, 123, 89, 77, 129, 86, 71, 84, \
40, 26, 70, 29, 16, 89, 52, 36, 112, 81, \
59, 73, 53, 43, 33, 21, 7, 31, 12, 0, \
93, 53, 22, 177, 129, 87, 226, 176, 134, 208, \
155, 110, 220, 166, 120, 221, 169, 122, 241, 192, \
147, 245, 200, 158, 233, 191, 153, 232, 193, 157, \
237, 211, 183, 243, 230, 210, 215, 192, 168, 220, \
186, 157, 224, 180, 146, 206, 157, 119, 183, 131, \
91, 179, 127, 87, 168, 116, 74, 135, 83, 39, \
93, 50, 19, 91, 67, 56, 112, 92, 86, 86, \
62, 56, 48, 21, 17, 26, 0, 0, 29, 5, \
0, 25, 4, 0, 47, 29, 19, 116, 102, 85, \
107, 96, 82, 51, 30, 19, 94, 51, 20, 112, \
60, 24, 181, 127, 85, 189, 132, 86, 215, 160, \
113, 234, 181, 136, 244, 197, 154, 254, 212, 170, \
240, 199, 159, 228, 188, 149, 232, 206, 174, 228, \
209, 188, 213, 183, 154, 227, 186, 151, 220, 174, \
134, 201, 154, 113, 159, 113, 73, 188, 141, 102, \
183, 135, 93, 180, 128, 82, 160, 112, 72, 104, \
72, 52, 58, 34, 24, 19, 2, 0, 15, 7, \
4, 13, 8, 6, 18, 13, 12, 20, 14, 10, \
10, 0, 0, 35, 15, 11, 105, 78, 63, 136, \
98, 71, 187, 134, 91, 181, 122, 74, 150, 87, \
37, 179, 117, 63, 196, 141, 90, 225, 179, 134, \
244, 206, 165, 252, 218, 179, 243, 208, 168, 224, \
187, 143, 224, 199, 162, 223, 202, 182, 207, 176, \
145, 218, 176, 138, 216, 168, 127, 192, 146, 106, \
179, 136, 98, 197, 153, 114, 189, 141, 100, 189, \
137, 91, 109, 60, 20, 65, 30, 10, 39, 15, \
5, 19, 4, 0, 12, 9, 7, 3, 5, 7, \
1, 3, 7, 2, 5, 6, 9, 2, 1, 23, \
4, 0, 33, 7, 2, 102, 63, 39, 148, 98, \
56, 202, 145, 95, 198, 137, 84, 173, 112, 59, \
207, 155, 105, 205, 163, 119, 242, 208, 168, 245, \
215, 177, 246, 212, 172, 222, 185, 139, 212, 185, \
147, 223, 202, 181, 206, 174, 145, 210, 168, 132, \
205, 159, 119, 182, 138, 100, 165, 124, 88, 185, \
142, 106, 200, 153, 114, 175, 122, 78, 124, 75, \
35, 76, 43, 24, 45, 23, 13, 16, 4, 0, \
4, 2, 2, 1, 6, 10, 0, 6, 12, 0, \
3, 8, 3, 1, 2, 26, 15, 10, 52, 33, \
27, 88, 58, 39, 124, 80, 43, 144, 93, 49, \
206, 152, 103, 175, 119, 69, 193, 143, 97, 202, \
161, 119, 234, 200, 161, 240, 208, 170, 249, 216, \
176, 238, 200, 154, 212, 184, 145, 219, 195, 175, \
208, 175, 147, 209, 167, 133, 196, 152, 114, 152, \
110, 74, 133, 94, 60, 171, 129, 96, 173, 128, \
91, 156, 104, 61, 120, 71, 32, 63, 32, 14, \
31, 12, 5, 12, 2, 0, 1, 0, 0, 0, \
3, 6, 1, 9, 14, 0, 4, 10, 4, 7, \
11, 10, 6, 6, 45, 33, 31, 68, 48, 33, \
98, 63, 31, 152, 108, 67, 196, 148, 103, 176, \
127, 80, 158, 112, 69, 180, 142, 103, 227, 194, \
157, 237, 205, 168, 247, 213, 173, 251, 210, 166, \
222, 193, 155, 215, 190, 170, 208, 174, 146, 202, \
161, 129, 175, 132, 98, 105, 65, 33, 116, 80, \
50, 137, 98, 67, 136, 92, 58, 130, 80, 38, \
91, 43, 5, 50, 19, 1, 20, 1, 0, 9, \
0, 0, 2, 0, 0, 0, 2, 4, 1, 5, \
9, 1, 7, 12, 2, 6, 10, 3, 3, 4, \
10, 4, 4, 23, 9, 4, 42, 13, 0, 91, \
53, 22, 117, 75, 35, 129, 84, 40, 126, 85, \
43, 139, 104, 66, 200, 168, 133, 226, 194, 158, \
235, 199, 159, 246, 203, 158, 232, 202, 164, 219, \
192, 171, 206, 171, 145, 189, 148, 118, 145, 104, \
73, 92, 54, 26, 99, 65, 38, 126, 90, 63, \
165, 122, 90, 179, 129, 90, 145, 97, 61, 96, \
64, 43, 44, 22, 12, 16, 2, 0, 7, 3, \
0, 1, 2, 1, 0, 3, 3, 1, 6, 7, \
0, 3, 4, 5, 4, 4, 6, 1, 1, 16, \
3, 0, 60, 35, 16, 110, 76, 44, 122, 82, \
44, 111, 68, 25, 116, 76, 35, 111, 77, 41, \
170, 138, 105, 219, 186, 153, 210, 173, 135, 240, \
196, 152, 236, 205, 167, 220, 191, 170, 200, 164, \
139, 175, 136, 107, 127, 89, 61, 75, 41, 16, \
77, 45, 23, 142, 108, 83, 210, 169, 140, 214, \
165, 129, 196, 147, 111, 150, 116, 92, 90, 64, \
45, 47, 28, 12, 19, 9, 0, 12, 8, 0, \
13, 12, 4, 14, 12, 6, 11, 7, 2, 10, \
3, 0, 24, 12, 6, 60, 42, 27, 127, 101, \
70, 174, 141, 103, 187, 147, 105, 191, 147, 104, \
170, 130, 89, 103, 68, 33, 125, 92, 62, 207, \
174, 142, 200, 163, 126, 227, 183, 141, 227, 195, \
160, 213, 183, 161, 192, 156, 130, 166, 129, 101, \
121, 85, 58, 62, 29, 9, 62, 33, 14, 151, \
120, 98, 200, 162, 135, 204, 156, 121, 196, 147, \
111, 168, 129, 101, 130, 100, 74, 88, 62, 39, \
64, 45, 24, 61, 47, 28, 69, 57, 40, 73, \
60, 44, 78, 63, 46, 93, 72, 56, 105, 81, \
64, 108, 82, 58, 141, 112, 78, 200, 165, 124, \
205, 162, 118, 197, 153, 107, 198, 157, 114, 127, \
92, 57, 93, 61, 35, 193, 160, 128, 196, 158, \
123, 210, 166, 127, 223, 193, 158, 212, 181, 158, \
189, 152, 127, 160, 123, 97, 112, 77, 53, 51, \
21, 6, 62, 36, 20, 143, 114, 93, 182, 145, \
119, 192, 145, 111, 176, 127, 90, 173, 132, 98, \
161, 125, 94, 125, 93, 63, 128, 99, 70, 116, \
91, 63, 122, 100, 72, 153, 129, 102, 174, 146, \
119, 186, 152, 126, 187, 150, 123, 181, 145, 113, \
170, 136, 96, 193, 154, 109, 219, 175, 126, 203, \
156, 107, 188, 145, 101, 148, 111, 74, 98, 65, \
35, 181, 148, 117, 188, 150, 117, 200, 156, 118, \
220, 191, 156, 213, 180, 158, 188, 152, 128, 154, \
117, 92, 101, 66, 43, 37, 11, 1, 43, 19, \
7, 115, 87, 67, 185, 148, 124, 198, 151, 119, \
188, 137, 101, 203, 158, 122, 194, 153, 119, 172, \
134, 100, 170, 135, 100, 154, 121, 86, 158, 126, \
90, 190, 156, 120, 207, 170, 134, 206, 164, 129, \
211, 166, 129, 224, 181, 142, 217, 178, 134, 216, \
175, 126, 234, 186, 134, 213, 164, 111, 196, 151, \
104, 167, 129, 90, 114, 80, 47, 151, 118, 88, \
176, 140, 107, 199, 155, 120, 217, 187, 154, 209, \
177, 156, 185, 153, 124, 150, 120, 90, 91, 64, \
41, 32, 9, 1, 27, 4, 0, 93, 65, 42, \
194, 158, 129, 206, 160, 128, 219, 167, 133, 224, \
177, 142, 211, 169, 134, 205, 166, 130, 189, 154, \
116, 180, 147, 109, 194, 160, 121, 202, 167, 127, \
210, 171, 132, 226, 183, 144, 228, 182, 143, 226, \
182, 143, 235, 198, 157, 249, 207, 163, 252, 206, \
159, 235, 186, 138, 213, 167, 121, 190, 148, 108, \
126, 89, 54, 98, 64, 33, 142, 108, 77, 186, \
149, 118, 205, 180, 151, 202, 171, 149, 175, 151, \
112, 142, 124, 85, 82, 64, 43, 26, 8, 3, \
24, 0, 0, 97, 67, 39, 189, 151, 112, 194, \
146, 113, 219, 168, 140, 221, 176, 143, 214, 173, \
138, 205, 168, 132, 191, 159, 121, 185, 155, 117, \
194, 165, 126, 199, 167, 129, 204, 170, 132, 227, \
188, 152, 233, 190, 155, 237, 197, 164, 242, 207, \
177, 246, 208, 176, 252, 211, 174, 249, 203, 163, \
219, 171, 130, 190, 143, 102, 147, 104, 67, 95, \
59, 25, 107, 77, 48, 170, 144, 118, 179, 162, \
139, 193, 161, 136, 163, 139, 96, 134, 116, 77, \
82, 63, 46, 31, 9, 7, 27, 1, 0, 98, \
67, 38, 163, 124, 82, 182, 134, 97, 218, 167, \
137, 223, 177, 144, 216, 175, 140, 205, 168, 131, \
196, 162, 124, 194, 163, 124, 194, 163, 124, 187, \
154, 116, 204, 169, 131, 228, 190, 153, 240, 198, \
163, 249, 210, 176, 247, 213, 183, 245, 210, 178, \
250, 209, 173, 249, 204, 165, 230, 182, 141, 195, \
148, 106, 159, 114, 75, 129, 90, 55, 92, 60, \
31, 155, 128, 103, 153, 135, 113, 186, 154, 123, \
151, 126, 79, 125, 102, 65, 79, 55, 41, 34, \
6, 9, 30, 1, 0, 104, 71, 43, 165, 126, \
82, 190, 145, 102, 215, 166, 130, 220, 175, 139, \
218, 176, 139, 207, 168, 130, 205, 169, 130, 207, \
173, 134, 199, 165, 125, 181, 146, 107, 202, 165, \
127, 221, 181, 144, 238, 195, 159, 247, 208, 172, \
246, 214, 181, 248, 215, 180, 252, 214, 175, 249, \
206, 165, 232, 184, 143, 219, 171, 130, 165, 118, \
80, 134, 91, 57, 106, 68, 39, 120, 87, 62, \
132, 111, 89, 169, 137, 101, 135, 107, 60, 113, \
86, 49, 72, 42, 33, 36, 3, 8, 43, 8, \
6, 114, 79, 52, 185, 147, 100, 201, 159, 110, \
204, 159, 117, 212, 167, 130, 217, 175, 136, 209, \
169, 130, 214, 176, 137, 219, 182, 143, 201, 164, \
125, 181, 143, 104, 198, 159, 120, 211, 169, 131, \
236, 193, 155, 237, 198, 162, 237, 207, 170, 247, \
215, 178, 252, 215, 176, 246, 204, 164, 225, 180, \
138, 219, 171, 131, 184, 137, 100, 158, 112, 80, \
125, 82, 54, 85, 45, 20, 117, 92, 70, 164, \
131, 94, 129, 99, 52, 106, 77, 41, 66, 31, \
24, 36, 1, 7, 63, 24, 25, 125, 88, 61, \
192, 155, 108, 193, 155, 102, 189, 148, 102, 203, \
160, 122, 214, 172, 135, 212, 169, 132, 221, 180, \
142, 226, 187, 149, 209, 170, 132, 194, 155, 116, \
198, 157, 119, 201, 159, 121, 231, 188, 151, 220, \
183, 146, 225, 196, 159, 238, 208, 170, 244, 209, \
170, 241, 203, 162, 225, 182, 141, 226, 179, 141, \
203, 156, 121, 168, 122, 91, 132, 87, 59, 95, \
52, 28, 97, 69, 47, 159, 128, 93, 123, 93, \
47, 94, 62, 27, 52, 14, 7, 48, 7, 15, \
76, 35, 36, 129, 92, 64, 171, 137, 88, 183, \
150, 98, 157, 123, 78, 190, 151, 113, 209, 169, \
134, 212, 171, 136, 225, 184, 149, 228, 186, 151, \
215, 173, 138, 217, 175, 140, 208, 167, 132, 207, \
166, 131, 221, 180, 145, 205, 170, 134, 208, 179, \
142, 221, 191, 153, 231, 198, 159, 234, 198, 159, \
220, 181, 142, 232, 189, 153, 212, 167, 134, 174, \
130, 101, 140, 95, 68, 103, 59, 35, 87, 57, \
36, 161, 132, 105, 112, 83, 40, 74, 42, 6, \
58, 19, 8, 59, 16, 19, 93, 52, 47, 122, \
87, 57, 144, 114, 68, 141, 113, 68, 134, 106, \
69, 182, 148, 113, 200, 163, 130, 212, 174, 141, \
221, 181, 149, 225, 182, 151, 216, 173, 142, 214, \
173, 142, 217, 177, 145, 208, 170, 138, 218, 180, \
148, 210, 177, 143, 206, 177, 143, 207, 179, 144, \
222, 192, 155, 222, 189, 154, 214, 178, 145, 232, \
195, 163, 225, 186, 156, 197, 157, 129, 160, 120, \
94, 168, 128, 104, 126, 99, 77, 152, 126, 108, \
103, 77, 38, 88, 56, 18, 76, 39, 20, 80, \
38, 34, 104, 65, 53, 117, 85, 53, 113, 87, \
45, 105, 84, 47, 126, 103, 76, 160, 130, 101, \
180, 146, 117, 200, 164, 135, 200, 161, 133, 213, \
172, 146, 214, 173, 147, 208, 168, 141, 207, 169, \
141, 213, 178, 149, 203, 169, 141, 116, 85, 63, \
113, 85, 68, 135, 108, 92, 206, 177, 148, 127, \
96, 76, 119, 90, 76, 205, 174, 149, 165, 133, \
114, 157, 124, 107, 219, 185, 159, 145, 114, 101, \
163, 141, 121, 170, 147, 139, 119, 95, 60, 108, \
78, 38, 105, 68, 43, 146, 106, 93, 149, 112, \
95, 144, 116, 84, 90, 69, 30, 74, 58, 30, \
80, 63, 44, 110, 83, 58, 150, 120, 93, 181, \
148, 122, 183, 146, 121, 201, 161, 138, 194, 153, \
130, 194, 155, 131, 204, 168, 143, 187, 156, 129, \
177, 148, 124, 80, 52, 44, 119, 90, 76, 222, \
193, 167, 138, 111, 95, 93, 67, 50, 116, 91, \
77, 102, 76, 67, 118, 92, 81, 84, 60, 54, \
180, 154, 136, 102, 77, 68, 164, 146, 127, 234, \
214, 214, 183, 162, 130, 148, 120, 79, 156, 121, \
91, 143, 105, 86, 150, 115, 93, 142, 115, 82, \
102, 84, 50, 122, 110, 90, 151, 137, 126, 143, \
122, 100, 145, 118, 94, 147, 115, 92, 154, 118, \
97, 170, 132, 112, 161, 122, 102, 162, 124, 104, \
168, 134, 112, 125, 95, 72, 151, 125, 103, 87, \
61, 52, 146, 115, 99, 198, 166, 140, 119, 92, \
79, 122, 98, 82, 149, 126, 111, 82, 62, 55, \
113, 92, 82, 159, 139, 122, 145, 125, 111, 59, \
39, 29, 187, 171, 150, 255, 255, 254, 242, 231, \
211, 202, 184, 157, 177, 154, 131, 159, 134, 117, \
194, 172, 155, 204, 188, 165, 237, 229, 207, 253, \
250, 239, 255, 251, 246, 249, 239, 226, 217, 200, \
184, 176, 157, 142, 160, 138, 124, 154, 131, 115, \
147, 122, 105, 126, 101, 82, 107, 82, 62, 119, \
94, 73, 179, 157, 137, 155, 132, 117, 182, 154, \
129, 149, 121, 96, 160, 135, 117, 166, 143, 122, \
186, 164, 142, 158, 139, 126, 155, 137, 122, 185, \
167, 148, 215, 198, 176, 131, 114, 101, 220, 208, \
192, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '19534';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1aa7eca2c51797fa4c0b826d6d57c005ba';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_cat9';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{201, 201, 199, 198, 199, 196, 199, 199, 197, 199, 199, \
196, 199, 199, 195, 199, 199, 199, 198, 198, 203, \
198, 198, 198, 197, 199, 187, 196, 199, 177, 200, \
205, 179, 205, 209, 182, 206, 211, 183, 207, 212, \
184, 206, 209, 184, 206, 207, 185, 206, 208, 185, \
209, 210, 187, 210, 212, 190, 214, 214, 187, 215, \
212, 182, 207, 204, 183, 197, 195, 186, 194, 191, \
194, 192, 190, 196, 192, 192, 190, 192, 192, 189, \
191, 190, 188, 190, 190, 187, 190, 190, 187, 193, \
188, 185, 192, 186, 183, 197, 197, 195, 195, 195, \
193, 196, 196, 194, 195, 196, 193, 195, 196, 189, \
195, 195, 193, 194, 193, 198, 192, 192, 189, 197, \
201, 177, 201, 207, 178, 197, 204, 180, 192, 199, \
178, 192, 198, 182, 193, 198, 187, 195, 198, 191, \
197, 197, 194, 197, 197, 193, 195, 196, 192, 195, \
196, 193, 197, 198, 188, 201, 203, 182, 209, 210, \
190, 214, 215, 196, 205, 206, 189, 192, 192, 177, \
189, 188, 179, 191, 189, 182, 190, 187, 183, 189, \
186, 184, 188, 185, 184, 190, 185, 183, 189, 185, \
181, 197, 197, 195, 196, 196, 193, 196, 196, 194, \
196, 196, 194, 195, 196, 193, 193, 195, 184, 193, \
196, 178, 199, 202, 183, 196, 198, 183, 190, 194, \
187, 190, 196, 193, 193, 198, 197, 194, 199, 201, \
195, 199, 204, 196, 199, 206, 197, 199, 206, 197, \
199, 206, 196, 198, 205, 196, 198, 205, 195, 198, \
205, 194, 198, 202, 196, 199, 196, 201, 202, 189, \
211, 212, 190, 215, 214, 191, 200, 197, 183, 191, \
188, 178, 191, 187, 182, 191, 186, 184, 190, 184, \
186, 191, 186, 184, 191, 186, 183, 197, 197, 195, \
195, 195, 194, 196, 196, 194, 196, 196, 192, 197, \
194, 189, 197, 197, 179, 197, 204, 172, 187, 196, \
173, 185, 190, 191, 189, 193, 200, 188, 194, 197, \
189, 195, 199, 190, 196, 201, 194, 197, 202, 195, \
199, 201, 195, 201, 200, 196, 200, 200, 194, 198, \
198, 195, 198, 198, 195, 197, 199, 195, 198, 200, \
198, 199, 200, 198, 199, 197, 197, 197, 193, 203, \
203, 193, 214, 215, 194, 203, 202, 187, 191, 188, \
181, 192, 186, 186, 191, 185, 187, 190, 186, 184, \
189, 185, 182, 197, 198, 195, 195, 195, 194, 195, \
196, 193, 195, 196, 186, 199, 195, 179, 201, 200, \
180, 187, 195, 176, 183, 194, 185, 181, 189, 195, \
183, 188, 194, 183, 189, 194, 181, 191, 199, 184, \
193, 201, 191, 195, 200, 193, 198, 198, 194, 200, \
198, 196, 200, 199, 195, 198, 197, 196, 196, 196, \
196, 194, 195, 197, 194, 195, 197, 196, 196, 197, \
198, 197, 196, 198, 198, 194, 198, 193, 198, 201, \
186, 212, 214, 194, 202, 202, 184, 191, 187, 180, \
191, 186, 187, 188, 186, 184, 186, 185, 181, 197, \
198, 195, 196, 196, 194, 195, 196, 189, 194, 196, \
181, 201, 201, 176, 193, 193, 179, 191, 194, 198, \
189, 193, 200, 178, 180, 176, 163, 164, 161, 174, \
178, 183, 178, 187, 194, 178, 190, 195, 187, 195, \
197, 192, 197, 196, 194, 198, 196, 196, 198, 197, \
196, 196, 196, 195, 193, 194, 195, 191, 193, 197, \
192, 194, 197, 193, 194, 196, 195, 195, 195, 196, \
195, 195, 196, 199, 195, 195, 199, 199, 201, 184, \
216, 218, 187, 200, 199, 179, 190, 185, 182, 189, \
187, 184, 186, 185, 181, 198, 198, 196, 196, 196, \
192, 193, 195, 183, 198, 202, 179, 194, 197, 175, \
195, 198, 191, 194, 196, 205, 196, 194, 203, 179, \
171, 167, 155, 147, 133, 158, 155, 144, 175, 179, \
175, 183, 190, 191, 188, 193, 195, 193, 195, 196, \
193, 195, 194, 194, 194, 194, 195, 192, 193, 195, \
190, 192, 195, 189, 191, 196, 188, 191, 195, 189, \
191, 194, 190, 191, 193, 191, 192, 195, 194, 197, \
196, 196, 201, 193, 194, 184, 198, 199, 177, 214, \
212, 190, 194, 191, 176, 188, 186, 181, 186, 185, \
181, 198, 198, 197, 194, 194, 188, 196, 199, 181, \
196, 199, 177, 194, 197, 187, 195, 198, 198, 193, \
196, 196, 198, 194, 194, 181, 168, 165, 169, 153, \
133, 165, 154, 126, 157, 152, 136, 181, 179, 175, \
198, 196, 200, 197, 196, 199, 195, 195, 195, 193, \
191, 192, 193, 189, 190, 193, 186, 188, 194, 185, \
187, 194, 184, 187, 193, 184, 187, 192, 186, 187, \
195, 191, 191, 193, 192, 188, 183, 184, 174, 173, \
172, 168, 165, 162, 159, 203, 202, 185, 208, 208, \
182, 188, 187, 178, 187, 185, 181, 197, 196, 198, \
196, 193, 180, 202, 202, 172, 195, 195, 185, 199, \
198, 200, 195, 195, 196, 193, 193, 194, 196, 191, \
188, 180, 168, 160, 167, 151, 136, 176, 162, 139, \
169, 160, 133, 164, 157, 138, 188, 181, 178, 200, \
197, 198, 198, 199, 198, 194, 193, 192, 195, 190, \
189, 194, 186, 186, 192, 183, 184, 190, 181, 183, \
192, 184, 183, 194, 187, 183, 188, 182, 177, 181, \
176, 165, 178, 174, 155, 169, 165, 156, 166, 162, \
160, 193, 196, 183, 207, 214, 191, 195, 193, 179, \
187, 183, 177, 197, 194, 192, 199, 195, 177, 199, \
198, 171, 196, 197, 191, 197, 197, 200, 193, 194, \
194, 190, 191, 192, 194, 190, 186, 180, 169, 159, \
165, 149, 137, 173, 157, 140, 177, 165, 138, 163, \
152, 125, 143, 132, 114, 150, 142, 128, 181, 176, \
163, 197, 191, 181, 196, 186, 181, 195, 183, 181, \
194, 182, 182, 193, 183, 183, 191, 181, 176, 179, \
170, 159, 166, 157, 141, 169, 161, 141, 174, 167, \
148, 163, 158, 149, 173, 172, 170, 194, 198, 189, \
197, 202, 185, 201, 199, 182, 187, 183, 173, 199, \
195, 184, 202, 198, 176, 196, 195, 180, 196, 200, \
196, 196, 200, 198, 193, 196, 195, 189, 192, 193, \
194, 193, 188, 184, 175, 164, 160, 145, 131, 155, \
138, 118, 156, 139, 112, 164, 147, 116, 142, 125, \
95, 115, 99, 70, 124, 108, 82, 141, 125, 104, \
143, 126, 111, 144, 126, 117, 155, 139, 131, 151, \
136, 128, 151, 137, 123, 155, 142, 122, 166, 154, \
129, 171, 159, 134, 173, 163, 146, 163, 160, 154, \
184, 187, 189, 194, 197, 196, 193, 194, 185, 204, \
202, 181, 192, 189, 173, 201, 196, 176, 202, 198, \
173, 195, 194, 190, 195, 202, 200, 193, 200, 195, \
192, 197, 196, 189, 195, 194, 193, 194, 189, 177, \
171, 160, 141, 128, 105, 130, 113, 83, 140, 120, \
90, 148, 126, 95, 152, 129, 95, 146, 119, 88, \
125, 96, 70, 110, 84, 58, 112, 88, 62, 128, \
106, 81, 123, 104, 78, 111, 95, 67, 148, 131, \
105, 169, 153, 127, 170, 153, 129, 171, 154, 132, \
170, 157, 143, 169, 168, 164, 188, 195, 200, 190, \
193, 200, 195, 192, 189, 202, 200, 175, 197, 195, \
175, 199, 197, 170, 198, 199, 170, 194, 195, 195, \
194, 200, 200, 194, 200, 195, 193, 200, 198, 194, \
202, 200, 196, 197, 191, 164, 157, 144, 154, 138, \
111, 170, 150, 114, 156, 134, 100, 139, 114, 82, \
144, 117, 84, 154, 125, 93, 132, 105, 74, 133, \
108, 77, 129, 106, 75, 137, 114, 82, 134, 113, \
79, 151, 135, 98, 175, 158, 124, 167, 149, 118, \
148, 130, 100, 143, 126, 97, 148, 136, 114, 177, \
174, 170, 192, 195, 200, 190, 190, 197, 194, 190, \
198, 196, 197, 179, 199, 199, 172, 196, 199, 169, \
194, 198, 169, 195, 196, 197, 196, 199, 197, 197, \
198, 188, 186, 187, 180, 176, 178, 170, 155, 151, \
140, 114, 102, 84, 164, 145, 118, 168, 148, 116, \
143, 122, 90, 156, 135, 103, 150, 128, 96, 151, \
129, 96, 155, 134, 100, 134, 114, 81, 111, 92, \
59, 132, 112, 79, 152, 132, 98, 166, 145, 112, \
168, 148, 115, 165, 148, 114, 175, 160, 125, 172, \
160, 124, 154, 148, 122, 172, 170, 167, 189, 193, \
195, 185, 189, 188, 187, 189, 197, 189, 193, 182, \
196, 197, 167, 201, 201, 172, 195, 197, 171, 199, \
199, 198, 192, 194, 184, 171, 166, 144, 140, 129, \
110, 114, 103, 86, 108, 94, 74, 138, 120, 94, \
175, 158, 131, 148, 132, 105, 166, 152, 124, 161, \
149, 121, 148, 138, 109, 145, 133, 105, 166, 149, \
120, 152, 132, 99, 116, 96, 61, 150, 134, 99, \
156, 137, 105, 157, 135, 105, 142, 124, 92, 148, \
133, 100, 172, 162, 127, 180, 174, 140, 165, 164, \
145, 179, 183, 185, 180, 190, 191, 177, 189, 183, \
180, 188, 190, 185, 190, 178, 195, 196, 165, 204, \
202, 174, 197, 196, 174, 198, 196, 195, 186, 188, \
171, 171, 164, 130, 153, 135, 106, 106, 84, 61, \
115, 94, 69, 171, 153, 122, 131, 115, 86, 126, \
110, 85, 143, 131, 104, 117, 110, 81, 90, 86, \
56, 122, 116, 91, 177, 163, 141, 164, 143, 111, \
146, 125, 88, 175, 162, 127, 166, 156, 124, 142, \
128, 97, 141, 127, 96, 149, 136, 104, 163, 150, \
119, 177, 167, 136, 153, 152, 133, 173, 177, 180, \
174, 184, 188, 173, 185, 184, 177, 185, 192, 183, \
188, 177, 194, 195, 164, 206, 201, 175, 197, 194, \
171, 192, 189, 183, 176, 174, 150, 161, 152, 115, \
135, 117, 86, 97, 74, 50, 123, 102, 77, 124, \
110, 79, 97, 81, 50, 145, 127, 99, 159, 146, \
117, 121, 113, 82, 95, 92, 58, 99, 95, 70, \
142, 130, 111, 158, 137, 105, 149, 127, 90, 165, \
152, 119, 137, 134, 103, 92, 91, 59, 106, 101, \
69, 121, 107, 78, 147, 127, 100, 169, 152, 124, \
155, 151, 129, 160, 162, 162, 171, 179, 187, 171, \
179, 186, 175, 178, 192, 182, 184, 175, 193, 194, \
164, 206, 200, 176, 194, 190, 163, 166, 167, 143, \
126, 115, 83, 116, 96, 63, 105, 85, 60, 83, \
63, 41, 128, 111, 87, 145, 131, 101, 142, 125, \
94, 153, 135, 108, 164, 152, 126, 147, 138, 110, \
128, 118, 85, 99, 88, 59, 120, 105, 77, 148, \
125, 89, 152, 128, 91, 136, 119, 92, 100, 90, \
65, 110, 108, 76, 111, 110, 76, 144, 129, 100, \
138, 116, 87, 121, 107, 78, 152, 146, 127, 160, \
166, 161, 163, 177, 183, 165, 176, 182, 174, 176, \
180, 185, 182, 174, 195, 194, 169, 203, 197, 174, \
194, 191, 164, 162, 163, 138, 114, 101, 69, 137, \
113, 80, 124, 103, 76, 83, 63, 40, 122, 104, \
81, 153, 138, 109, 146, 126, 93, 154, 133, 102, \
169, 155, 127, 170, 158, 129, 161, 146, 115, 132, \
117, 83, 117, 100, 62, 157, 131, 90, 167, 140, \
100, 116, 96, 64, 114, 99, 69, 144, 136, 99, \
139, 135, 96, 138, 121, 88, 135, 112, 80, 130, \
117, 88, 145, 139, 126, 167, 173, 170, 163, 176, \
180, 166, 177, 182, 174, 178, 179, 187, 184, 172, \
196, 194, 170, 202, 195, 175, 198, 194, 170, 184, \
184, 162, 151, 138, 108, 135, 111, 74, 132, 108, \
76, 103, 81, 55, 106, 86, 62, 148, 129, 102, \
143, 123, 89, 157, 138, 104, 181, 167, 139, 181, \
169, 142, 169, 155, 127, 166, 152, 118, 143, 127, \
90, 160, 134, 98, 169, 141, 108, 134, 115, 84, \
140, 125, 94, 146, 136, 100, 150, 145, 109, 141, \
125, 96, 139, 119, 93, 158, 148, 127, 164, 161, \
156, 171, 173, 174, 169, 176, 181, 169, 179, 184, \
173, 180, 180, 187, 187, 169, 196, 194, 168, 200, \
193, 176, 199, 194, 173, 192, 192, 172, 175, 161, \
133, 135, 110, 70, 133, 108, 71, 116, 91, 63, \
92, 69, 45, 127, 106, 81, 174, 157, 124, 171, \
159, 127, 168, 161, 136, 179, 173, 152, 174, 165, \
145, 183, 175, 150, 173, 162, 135, 145, 123, 103, \
143, 119, 103, 177, 163, 144, 178, 168, 146, 167, \
158, 134, 161, 160, 137, 159, 147, 134, 144, 130, \
121, 160, 157, 151, 184, 183, 186, 175, 175, 179, \
171, 175, 178, 171, 180, 185, 173, 183, 183, 190, \
191, 167, 194, 192, 165, 195, 193, 176, 196, 195, \
170, 194, 193, 170, 185, 177, 155, 141, 121, 89, \
137, 114, 79, 125, 103, 73, 114, 92, 65, 100, \
79, 52, 123, 103, 75, 159, 141, 116, 156, 143, \
123, 164, 156, 140, 175, 169, 155, 174, 172, 156, \
180, 176, 160, 134, 126, 113, 142, 134, 120, 177, \
174, 156, 170, 167, 150, 174, 168, 156, 159, 157, \
147, 159, 152, 147, 176, 169, 168, 186, 183, 184, \
188, 186, 191, 181, 182, 190, 174, 180, 187, 173, \
183, 184, 176, 186, 177, 192, 193, 166, 190, 187, \
166, 190, 192, 178, 193, 195, 169, 193, 193, 166, \
191, 188, 169, 156, 143, 117, 140, 122, 89, 158, \
140, 108, 149, 131, 99, 123, 105, 74, 125, 101, \
72, 113, 88, 61, 127, 107, 82, 137, 124, 102, \
145, 138, 118, 158, 155, 137, 155, 153, 138, 105, \
104, 87, 121, 122, 104, 163, 167, 146, 162, 163, \
148, 164, 160, 153, 177, 172, 167, 182, 178, 174, \
182, 177, 176, 182, 177, 177, 184, 182, 186, 182, \
185, 195, 178, 186, 195, 178, 187, 185, 185, 191, \
174, 196, 195, 170, 187, 183, 170, 193, 194, 185, \
191, 192, 173, 195, 195, 172, 191, 188, 167, 177, \
170, 144, 138, 128, 98, 154, 144, 113, 176, 164, \
131, 144, 131, 97, 129, 109, 75, 126, 103, 70, \
133, 115, 82, 154, 140, 108, 152, 142, 111, 159, \
151, 125, 166, 159, 139, 155, 150, 132, 152, 152, \
136, 155, 158, 144, 170, 171, 161, 180, 178, 173, \
181, 179, 175, 181, 178, 176, 182, 179, 180, 186, \
183, 184, 180, 180, 182, 179, 182, 188, 183, 189, \
193, 186, 191, 183, 195, 198, 178, 194, 192, 173, \
185, 181, 172, 193, 194, 191, 191, 190, 179, 196, \
194, 175, 191, 189, 165, 188, 189, 167, 162, 162, \
142, 147, 144, 121, 181, 173, 148, 170, 159, 131, \
127, 109, 77, 136, 114, 80, 135, 115, 81, 170, \
152, 117, 157, 141, 106, 163, 149, 118, 183, 171, \
146, 186, 178, 158, 174, 172, 159, 173, 176, 168, \
183, 186, 180, 182, 182, 178, 180, 180, 178, 180, \
180, 180, 180, 179, 182, 184, 183, 186, 187, 188, \
189, 179, 183, 187, 181, 185, 185, 191, 192, 177, \
202, 200, 175, 189, 184, 173, 184, 180, 174, 191, \
191, 192, 191, 190, 185, 192, 191, 175, 193, 193, \
167, 185, 187, 170, 187, 190, 181, 187, 188, 177, \
189, 186, 171, 184, 177, 156, 155, 140, 114, 136, \
115, 85, 140, 119, 88, 130, 110, 78, 147, 127, \
96, 110, 91, 59, 133, 116, 87, 176, 166, 144, \
179, 176, 163, 188, 190, 186, 187, 189, 189, 184, \
186, 185, 182, 183, 182, 184, 186, 185, 183, 184, \
186, 183, 184, 188, 184, 186, 190, 185, 189, 190, \
186, 189, 181, 198, 197, 179, 197, 193, 170, 185, \
181, 174, 185, 180, 177, 192, 192, 191, 190, 190, \
192, 190, 191, 184, 189, 192, 169, 192, 191, 168, \
189, 189, 179, 190, 195, 194, 188, 194, 190, 188, \
191, 176, 185, 183, 159, 159, 150, 122, 151, 135, \
103, 135, 114, 82, 135, 113, 85, 149, 126, 94, \
147, 125, 91, 154, 144, 118, 180, 178, 164, 191, \
191, 190, 190, 190, 195, 189, 190, 195, 186, 188, \
185, 185, 187, 181, 185, 186, 185, 181, 183, 190, \
182, 186, 194, 186, 191, 179, 194, 199, 172, 195, \
196, 175, 184, 181, 173, 183, 181, 177, 183, 181, \
177, 191, 191, 189, 189, 189, 190, 191, 192, 186, \
188, 190, 173, 192, 191, 163, 190, 189, 167, 186, \
189, 180, 191, 194, 192, 192, 193, 191, 188, 192, \
181, 183, 184, 164, 164, 154, 126, 149, 132, 100, \
128, 109, 77, 131, 112, 76, 135, 120, 81, 136, \
130, 101, 178, 179, 165, 191, 192, 193, 190, 191, \
197, 190, 191, 194, 189, 190, 191, 184, 186, 186, \
187, 188, 194, 183, 184, 189, 186, 189, 179, 186, \
190, 167, 192, 196, 169, 185, 185, 170, 182, 180, \
176, 181, 180, 176, 181, 180, 176, 191, 191, 188, \
189, 189, 188, 189, 190, 186, 189, 190, 182, 189, \
188, 170, 192, 189, 167, 190, 187, 168, 189, 187, \
177, 191, 192, 191, 188, 193, 192, 186, 190, 181, \
184, 179, 162, 175, 164, 142, 173, 162, 138, 156, \
145, 118, 160, 152, 124, 161, 161, 140, 172, 176, \
166, 180, 183, 185, 183, 184, 189, 188, 189, 190, \
190, 191, 194, 188, 189, 192, 188, 190, 192, 186, \
187, 180, 184, 184, 159, 186, 185, 162, 187, 185, \
170, 182, 182, 174, 182, 181, 177, 181, 180, 176, \
181, 180, 176, 191, 191, 188, 189, 190, 185, 189, \
189, 187, 189, 189, 189, 191, 188, 190, 191, 185, \
177, 193, 186, 164, 189, 185, 161, 183, 185, 169, \
185, 189, 188, 191, 191, 193, 192, 188, 184, 189, \
186, 179, 186, 187, 181, 188, 186, 181, 191, 186, \
181, 177, 179, 175, 160, 167, 165, 166, 172, 174, \
176, 178, 181, 188, 190, 191, 190, 191, 195, 189, \
191, 189, 182, 186, 172, 176, 178, 155, 183, 178, \
154, 187, 181, 169, 185, 180, 178, 182, 180, 178, \
180, 180, 175, 180, 179, 175, 180, 179, 175, 189, \
189, 185, 188, 187, 183, 189, 188, 185, 188, 188, \
187, 190, 186, 192, 192, 185, 186, 192, 186, 173, \
190, 186, 164, 185, 185, 159, 179, 180, 162, 182, \
182, 171, 189, 187, 180, 190, 189, 189, 189, 189, \
197, 189, 190, 198, 189, 191, 196, 185, 189, 193, \
180, 186, 188, 183, 188, 190, 188, 190, 191, 191, \
191, 189, 183, 184, 172, 170, 173, 153, 165, 168, \
146, 177, 178, 160, 186, 182, 172, 185, 181, 176, \
183, 180, 180, 180, 179, 177, 179, 178, 174, 181, \
177, 174, 181, 177, 174, 190, 189, 185, 188, 187, \
183, 188, 187, 183, 188, 187, 183, 190, 186, 186, \
191, 186, 185, 191, 187, 182, 190, 187, 178, 189, \
186, 173, 183, 183, 160, 174, 177, 149, 171, 173, \
150, 171, 173, 155, 176, 177, 163, 179, 180, 167, \
181, 184, 168, 182, 184, 169, 181, 184, 167, 176, \
179, 162, 169, 170, 158, 163, 163, 152, 162, 164, \
142, 169, 171, 147, 180, 181, 166, 182, 181, 176, \
181, 180, 177, 181, 181, 177, 181, 180, 176, 179, \
178, 174, 179, 177, 173, 182, 177, 174, 182, 177, \
174, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '19844';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1ae6d7f9ca9984d294ee462b7322266f87';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_cat1';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{92, 71, 57, 107, 87, 72, 113, 97, 85, 122, 105, \
93, 134, 123, 119, 142, 150, 161, 143, 156, 178, \
166, 179, 204, 117, 136, 158, 75, 84, 91, 79, \
85, 90, 122, 142, 155, 141, 170, 197, 141, 166, \
196, 142, 168, 197, 140, 167, 195, 143, 170, 198, \
139, 159, 184, 121, 120, 127, 118, 98, 86, 124, \
102, 80, 127, 110, 88, 127, 108, 85, 131, 124, \
123, 146, 168, 194, 144, 169, 197, 145, 166, 192, \
144, 165, 192, 143, 164, 190, 143, 163, 188, 141, \
161, 185, 139, 158, 184, 87, 68, 51, 105, 84, \
68, 116, 97, 85, 123, 103, 91, 126, 108, 100, \
139, 128, 128, 147, 150, 164, 166, 183, 201, 124, \
145, 162, 74, 80, 89, 83, 86, 89, 125, 139, \
152, 146, 167, 192, 143, 161, 186, 143, 169, 196, \
143, 173, 200, 144, 169, 193, 128, 129, 138, 116, \
95, 85, 124, 98, 84, 126, 100, 85, 122, 97, \
79, 123, 98, 77, 140, 138, 144, 152, 178, 206, \
147, 172, 198, 148, 171, 197, 148, 169, 196, 147, \
168, 195, 146, 167, 192, 144, 165, 190, 143, 162, \
188, 70, 58, 45, 98, 78, 64, 105, 87, 77, \
114, 97, 89, 117, 103, 94, 122, 101, 91, 135, \
120, 117, 158, 169, 178, 133, 149, 163, 97, 94, \
98, 114, 111, 106, 137, 137, 137, 150, 150, 156, \
150, 148, 154, 150, 155, 165, 151, 161, 175, 136, \
142, 150, 113, 96, 90, 112, 85, 73, 118, 91, \
82, 116, 86, 78, 115, 79, 65, 120, 91, 78, \
143, 150, 162, 152, 178, 204, 148, 171, 197, 148, \
170, 196, 146, 169, 193, 146, 168, 192, 145, 166, \
191, 142, 165, 188, 140, 163, 185, 48, 47, 37, \
90, 71, 60, 96, 73, 65, 101, 80, 74, 105, \
91, 86, 110, 94, 84, 118, 90, 82, 138, 126, \
123, 148, 152, 152, 145, 138, 133, 145, 140, 129, \
146, 137, 128, 152, 143, 134, 155, 148, 141, 156, \
149, 145, 150, 146, 147, 133, 124, 122, 109, 86, \
77, 105, 76, 67, 105, 76, 68, 103, 74, 65, \
109, 72, 60, 116, 98, 94, 148, 169, 187, 153, \
178, 203, 154, 175, 200, 154, 175, 198, 152, 174, \
196, 150, 172, 194, 148, 169, 192, 145, 168, 189, \
141, 167, 185, 29, 36, 28, 71, 55, 47, 89, \
63, 57, 93, 69, 65, 104, 85, 81, 105, 89, \
84, 107, 81, 75, 128, 104, 89, 152, 146, 136, \
157, 148, 141, 153, 145, 134, 148, 136, 128, 149, \
138, 129, 160, 152, 143, 157, 148, 143, 147, 144, \
140, 144, 136, 130, 115, 91, 82, 104, 73, 65, \
99, 70, 62, 97, 68, 60, 108, 78, 66, 125, \
118, 115, 146, 171, 194, 142, 170, 198, 143, 168, \
192, 141, 165, 189, 137, 161, 186, 134, 158, 183, \
130, 155, 179, 128, 152, 172, 126, 148, 167, 21, \
34, 31, 48, 44, 37, 84, 62, 52, 85, 62, \
57, 93, 72, 69, 95, 81, 78, 103, 88, 81, \
120, 98, 84, 149, 138, 131, 152, 144, 139, 155, \
146, 138, 151, 140, 132, 150, 136, 128, 160, 149, \
140, 154, 145, 137, 145, 140, 131, 144, 137, 126, \
121, 102, 93, 105, 82, 72, 94, 67, 58, 84, \
56, 47, 114, 91, 79, 128, 119, 114, 116, 124, \
139, 110, 123, 141, 108, 118, 131, 106, 114, 126, \
105, 112, 125, 103, 110, 124, 100, 110, 121, 101, \
108, 118, 101, 106, 117, 20, 36, 33, 34, 38, \
34, 83, 63, 50, 87, 63, 56, 78, 55, 51, \
88, 73, 67, 102, 90, 82, 116, 97, 84, 143, \
129, 118, 154, 144, 138, 153, 145, 137, 152, 144, \
135, 153, 139, 132, 157, 145, 137, 151, 143, 132, \
147, 138, 124, 146, 134, 122, 126, 115, 104, 103, \
87, 76, 95, 71, 61, 83, 54, 46, 122, 102, \
94, 127, 121, 115, 105, 105, 104, 105, 108, 108, \
105, 107, 106, 104, 106, 103, 103, 105, 104, 104, \
105, 107, 104, 104, 106, 104, 103, 108, 104, 102, \
108, 22, 38, 34, 30, 38, 33, 77, 63, 46, \
86, 68, 57, 70, 46, 40, 84, 65, 55, 98, \
86, 78, 119, 108, 97, 137, 124, 110, 146, 129, \
117, 149, 136, 124, 152, 142, 132, 152, 140, 132, \
155, 145, 135, 151, 138, 125, 146, 129, 114, 150, \
134, 118, 146, 132, 118, 128, 109, 98, 103, 79, \
69, 91, 67, 59, 133, 120, 115, 128, 127, 122, \
106, 107, 102, 109, 110, 105, 107, 108, 103, 103, \
106, 100, 101, 105, 101, 102, 105, 103, 102, 103, \
101, 103, 103, 102, 103, 102, 105, 32, 38, 33, \
34, 38, 32, 76, 66, 47, 102, 90, 74, 82, \
61, 57, 82, 63, 54, 101, 86, 75, 132, 120, \
110, 137, 125, 110, 137, 118, 98, 143, 126, 109, \
149, 137, 127, 150, 138, 130, 156, 144, 133, 160, \
145, 131, 151, 134, 115, 151, 136, 115, 158, 145, \
127, 156, 145, 130, 138, 122, 109, 102, 79, 69, \
118, 100, 96, 98, 97, 95, 87, 87, 87, 91, \
88, 88, 89, 86, 86, 88, 85, 84, 88, 83, \
85, 88, 83, 87, 85, 84, 84, 84, 84, 85, \
84, 83, 87, 65, 62, 59, 63, 61, 57, 85, \
80, 66, 116, 110, 95, 94, 77, 73, 98, 81, \
76, 129, 123, 111, 133, 119, 109, 133, 117, 99, \
136, 120, 98, 140, 125, 109, 151, 137, 127, 150, \
137, 129, 155, 141, 131, 163, 152, 137, 158, 144, \
125, 157, 144, 122, 158, 144, 123, 162, 148, 131, \
162, 151, 137, 142, 129, 117, 137, 128, 121, 103, \
106, 98, 101, 100, 94, 105, 103, 96, 102, 100, \
92, 98, 94, 90, 96, 91, 90, 93, 89, 88, \
92, 90, 85, 92, 92, 89, 91, 90, 89, 93, \
103, 108, 91, 102, 105, 94, 100, 99, 108, 106, \
98, 107, 97, 91, 116, 107, 101, 126, 115, 105, \
125, 106, 92, 134, 117, 96, 138, 127, 105, 137, \
124, 110, 151, 137, 123, 148, 136, 124, 153, 138, \
125, 163, 152, 135, 160, 145, 128, 161, 149, 130, \
165, 153, 136, 168, 153, 138, 170, 158, 143, 181, \
181, 170, 169, 175, 168, 119, 119, 111, 116, 118, \
106, 122, 119, 109, 116, 114, 103, 111, 108, 98, \
108, 104, 94, 106, 101, 92, 107, 104, 94, 112, \
108, 99, 113, 109, 101, 92, 105, 105, 90, 102, \
101, 89, 96, 93, 104, 103, 94, 133, 132, 121, \
126, 121, 116, 119, 102, 91, 125, 108, 89, 135, \
121, 105, 139, 128, 114, 135, 122, 109, 148, 135, \
115, 151, 139, 121, 151, 134, 117, 160, 146, 130, \
158, 142, 126, 163, 155, 138, 173, 169, 158, 176, \
169, 161, 177, 165, 151, 180, 177, 166, 169, 177, \
174, 146, 156, 156, 143, 156, 155, 143, 153, 151, \
137, 147, 145, 135, 142, 139, 129, 136, 131, 124, \
130, 126, 121, 128, 124, 121, 123, 119, 120, 120, \
116, 93, 93, 78, 91, 90, 77, 88, 87, 72, \
94, 93, 74, 130, 128, 111, 126, 119, 107, 125, \
109, 92, 134, 120, 108, 138, 129, 118, 140, 134, \
125, 135, 125, 112, 141, 128, 109, 150, 137, 116, \
149, 133, 114, 152, 142, 124, 157, 145, 127, 170, \
163, 147, 173, 170, 161, 177, 173, 168, 181, 174, \
159, 178, 174, 160, 178, 187, 186, 178, 205, 213, \
176, 204, 214, 176, 206, 212, 173, 202, 213, 169, \
201, 209, 164, 198, 204, 163, 195, 202, 163, 192, \
199, 157, 180, 185, 150, 173, 180, 98, 93, 64, \
98, 92, 65, 93, 88, 60, 90, 82, 54, 112, \
99, 77, 131, 119, 98, 138, 128, 109, 144, 134, \
127, 147, 141, 130, 151, 150, 140, 144, 135, 124, \
144, 131, 118, 149, 136, 117, 149, 133, 116, 154, \
146, 127, 160, 150, 135, 167, 158, 145, 170, 164, \
150, 183, 178, 169, 181, 177, 164, 176, 168, 156, \
172, 175, 175, 163, 180, 185, 164, 181, 184, 168, \
183, 186, 165, 178, 188, 162, 176, 185, 162, 177, \
183, 163, 178, 185, 158, 179, 189, 154, 172, 182, \
159, 179, 192, 111, 102, 63, 112, 102, 62, 111, \
98, 57, 107, 96, 59, 115, 103, 81, 135, 119, \
99, 145, 138, 119, 148, 145, 130, 151, 146, 134, \
156, 152, 140, 149, 139, 128, 153, 143, 131, 153, \
140, 121, 150, 133, 116, 159, 148, 131, 165, 156, \
141, 158, 146, 135, 154, 146, 132, 160, 153, 143, \
166, 161, 150, 167, 156, 143, 169, 168, 164, 165, \
172, 169, 161, 172, 166, 161, 172, 168, 160, 170, \
168, 158, 165, 162, 158, 164, 159, 157, 163, 159, \
155, 162, 160, 146, 150, 147, 141, 147, 147, 123, \
111, 67, 125, 113, 68, 127, 112, 67, 128, 120, \
81, 125, 120, 100, 122, 107, 88, 133, 123, 103, \
137, 132, 117, 132, 126, 117, 128, 119, 106, 139, \
124, 106, 154, 146, 127, 155, 143, 121, 153, 138, \
119, 163, 153, 133, 170, 161, 143, 126, 112, 100, \
86, 75, 63, 108, 95, 84, 157, 154, 146, 180, \
172, 157, 173, 176, 166, 168, 175, 173, 166, 175, \
173, 165, 175, 176, 165, 175, 176, 164, 173, 172, \
162, 170, 168, 160, 167, 165, 159, 168, 166, 153, \
158, 154, 147, 154, 153, 134, 122, 73, 136, 123, \
75, 139, 125, 76, 142, 130, 84, 135, 127, 93, \
118, 105, 75, 128, 115, 94, 114, 108, 99, 76, \
65, 57, 68, 54, 45, 111, 87, 68, 140, 128, \
104, 153, 140, 115, 156, 144, 122, 161, 155, 131, \
163, 155, 137, 103, 87, 72, 84, 70, 52, 115, \
105, 89, 162, 159, 147, 177, 172, 158, 168, 173, \
167, 166, 175, 174, 168, 176, 172, 169, 175, 172, \
169, 175, 175, 168, 173, 174, 165, 171, 171, 162, \
167, 168, 160, 169, 170, 155, 162, 160, 150, 159, \
159, 143, 129, 75, 145, 130, 76, 150, 132, 77, \
155, 139, 81, 155, 145, 87, 137, 125, 79, 129, \
115, 88, 123, 120, 113, 80, 68, 62, 69, 54, \
41, 83, 60, 44, 119, 100, 79, 147, 131, 106, \
160, 148, 127, 164, 158, 135, 162, 157, 144, 111, \
96, 90, 107, 94, 85, 141, 135, 122, 168, 159, \
140, 171, 169, 161, 155, 161, 158, 158, 164, 160, \
164, 172, 167, 168, 175, 170, 168, 175, 172, 168, \
174, 172, 165, 171, 169, 163, 168, 165, 161, 169, \
168, 155, 161, 158, 151, 159, 158, 148, 132, 73, \
149, 133, 74, 151, 134, 78, 147, 132, 78, 138, \
126, 67, 127, 114, 65, 120, 104, 70, 137, 124, \
98, 119, 113, 109, 86, 79, 72, 77, 61, 55, \
112, 92, 80, 136, 120, 100, 160, 148, 130, 173, \
167, 147, 173, 168, 161, 147, 139, 139, 163, 161, \
156, 166, 160, 146, 166, 161, 146, 178, 176, 165, \
160, 155, 139, 158, 153, 138, 159, 161, 152, 160, \
165, 159, 160, 164, 162, 159, 164, 161, 159, 166, \
162, 158, 166, 163, 156, 167, 169, 148, 157, 156, \
149, 158, 158, 147, 130, 75, 145, 129, 74, 142, \
125, 72, 132, 115, 67, 117, 102, 54, 103, 91, \
47, 108, 93, 63, 123, 104, 77, 144, 131, 113, \
145, 144, 137, 124, 119, 116, 120, 105, 100, 128, \
116, 99, 151, 142, 123, 172, 165, 152, 170, 166, \
156, 165, 165, 156, 177, 177, 163, 168, 157, 141, \
174, 173, 165, 179, 174, 146, 183, 160, 109, 183, \
163, 107, 183, 165, 115, 180, 164, 121, 175, 161, \
125, 169, 160, 128, 164, 163, 135, 157, 162, 143, \
152, 160, 148, 146, 156, 149, 147, 155, 154, 139, \
129, 87, 135, 126, 84, 129, 119, 78, 120, 110, \
72, 108, 100, 67, 96, 91, 60, 100, 93, 68, \
109, 95, 75, 132, 114, 90, 155, 147, 127, 144, \
142, 132, 122, 114, 109, 124, 116, 104, 144, 139, \
125, 163, 160, 150, 165, 160, 153, 169, 162, 153, \
171, 166, 146, 169, 163, 152, 176, 181, 172, 175, \
175, 144, 184, 163, 112, 190, 165, 104, 192, 165, \
108, 190, 164, 107, 186, 163, 106, 181, 161, 105, \
177, 158, 105, 174, 155, 105, 167, 153, 110, 158, \
150, 123, 157, 149, 124, 137, 132, 102, 133, 128, \
97, 127, 122, 90, 119, 114, 85, 109, 104, 80, \
98, 95, 70, 98, 95, 73, 96, 90, 77, 106, \
92, 72, 132, 117, 91, 142, 135, 114, 126, 121, \
109, 126, 119, 110, 152, 150, 143, 167, 169, 161, \
165, 163, 157, 168, 159, 149, 171, 166, 150, 169, \
170, 163, 171, 178, 167, 171, 174, 156, 177, 163, \
132, 187, 161, 106, 189, 163, 107, 188, 164, 108, \
185, 164, 106, 181, 161, 104, 178, 158, 103, 176, \
155, 105, 165, 151, 108, 159, 150, 102, 163, 148, \
99, 140, 133, 102, 138, 130, 99, 132, 125, 94, \
121, 113, 85, 108, 101, 75, 97, 93, 65, 94, \
91, 72, 89, 85, 76, 85, 76, 67, 111, 94, \
73, 137, 124, 101, 123, 118, 104, 129, 124, 114, \
159, 160, 153, 174, 175, 170, 170, 169, 167, 169, \
167, 160, 172, 174, 161, 159, 160, 154, 164, 165, \
156, 166, 166, 156, 170, 164, 144, 184, 160, 109, \
186, 161, 101, 185, 162, 105, 185, 163, 105, 183, \
159, 102, 176, 157, 102, 167, 155, 113, 165, 153, \
107, 166, 153, 97, 166, 149, 99, 140, 132, 96, \
137, 129, 93, 130, 122, 88, 119, 111, 80, 107, \
99, 71, 96, 91, 65, 95, 92, 75, 92, 87, \
78, 86, 80, 74, 103, 89, 75, 126, 113, 94, \
121, 116, 102, 120, 114, 105, 149, 148, 144, 164, \
169, 167, 165, 172, 172, 170, 176, 171, 162, 165, \
157, 142, 141, 135, 146, 145, 136, 152, 152, 141, \
164, 165, 147, 178, 163, 118, 184, 162, 101, 186, \
163, 100, 183, 160, 97, 181, 161, 96, 174, 156, \
104, 166, 150, 105, 172, 153, 102, 171, 151, 99, \
168, 150, 98, 129, 124, 93, 124, 119, 88, 117, \
112, 83, 108, 102, 76, 97, 91, 70, 90, 85, \
64, 88, 86, 69, 83, 83, 72, 84, 85, 76, \
98, 88, 79, 117, 108, 90, 123, 120, 103, 117, \
103, 95, 141, 131, 121, 154, 151, 142, 161, 166, \
160, 172, 176, 168, 139, 136, 131, 127, 125, 120, \
136, 136, 127, 146, 146, 134, 159, 163, 147, 174, \
164, 124, 181, 161, 99, 181, 162, 98, 181, 160, \
101, 174, 158, 102, 169, 151, 101, 176, 151, 98, \
175, 153, 97, 172, 151, 96, 170, 150, 96, 119, \
115, 92, 114, 110, 87, 110, 105, 82, 103, 98, \
77, 96, 89, 70, 91, 85, 65, 86, 83, 68, \
83, 82, 72, 80, 80, 70, 78, 72, 64, 98, \
90, 76, 124, 117, 97, 123, 104, 88, 131, 107, \
88, 143, 119, 99, 155, 141, 122, 153, 145, 127, \
119, 110, 97, 119, 115, 107, 134, 133, 122, 144, \
143, 130, 157, 157, 142, 174, 163, 123, 182, 158, \
94, 180, 160, 96, 174, 157, 104, 168, 151, 102, \
173, 153, 94, 176, 153, 92, 174, 152, 94, 171, \
150, 93, 169, 149, 93, 123, 129, 115, 116, 121, \
107, 112, 115, 99, 108, 110, 94, 104, 103, 88, \
100, 98, 83, 93, 94, 82, 87, 85, 75, 82, \
77, 67, 86, 82, 72, 94, 84, 73, 107, 93, \
74, 118, 102, 78, 124, 105, 79, 131, 110, 86, \
140, 121, 94, 141, 125, 99, 132, 119, 98, 130, \
118, 103, 142, 135, 116, 146, 140, 122, 157, 155, \
137, 175, 165, 125, 187, 161, 93, 183, 161, 97, \
167, 154, 98, 170, 154, 93, 176, 154, 89, 175, \
154, 91, 174, 152, 92, 170, 150, 92, 167, 149, \
93, 140, 148, 134, 132, 140, 126, 125, 132, 118, \
117, 124, 110, 114, 118, 105, 111, 110, 96, 108, \
107, 88, 102, 102, 80, 99, 97, 75, 103, 97, \
76, 103, 97, 72, 108, 96, 71, 109, 99, 72, \
119, 108, 80, 131, 119, 96, 143, 134, 112, 154, \
147, 124, 153, 144, 124, 143, 134, 110, 155, 148, \
123, 155, 152, 124, 161, 160, 133, 175, 168, 126, \
182, 162, 97, 172, 152, 98, 170, 154, 91, 175, \
158, 86, 175, 154, 88, 175, 154, 91, 174, 152, \
92, 170, 150, 92, 167, 150, 93, 138, 145, 127, \
134, 140, 123, 128, 134, 120, 122, 129, 115, 117, \
123, 108, 113, 116, 99, 111, 111, 92, 107, 109, \
85, 103, 101, 78, 106, 98, 77, 106, 101, 80, \
108, 99, 76, 114, 104, 80, 125, 111, 91, 143, \
128, 106, 160, 148, 118, 168, 157, 122, 161, 146, \
111, 143, 131, 101, 142, 135, 111, 153, 148, 119, \
161, 159, 130, 173, 168, 131, 170, 155, 100, 165, \
151, 90, 177, 159, 89, 176, 156, 87, 175, 154, \
88, 175, 154, 91, 174, 152, 92, 170, 150, 92, \
167, 149, 92, 136, 140, 123, 132, 136, 118, 129, \
134, 119, 127, 131, 117, 121, 127, 112, 116, 122, \
105, 114, 117, 98, 114, 115, 96, 111, 110, 90, \
109, 105, 84, 108, 105, 86, 109, 104, 83, 118, \
112, 89, 131, 125, 103, 147, 139, 114, 160, 148, \
118, 162, 148, 120, 156, 139, 108, 147, 129, 97, \
140, 127, 102, 151, 140, 112, 162, 157, 128, 169, \
167, 136, 167, 154, 100, 173, 157, 88, 178, 158, \
90, 178, 155, 89, 176, 152, 88, 175, 152, 88, \
172, 151, 88, 170, 149, 89, 168, 147, 90, 136, \
138, 116, 134, 136, 113, 132, 134, 114, 130, 132, \
113, 126, 130, 110, 121, 126, 104, 120, 123, 98, \
119, 120, 98, 115, 114, 92, 112, 109, 85, 110, \
107, 85, 113, 108, 84, 123, 116, 91, 139, 130, \
104, 153, 141, 114, 159, 146, 115, 158, 147, 120, \
156, 142, 111, 149, 132, 94, 138, 128, 97, 149, \
140, 111, 159, 157, 133, 164, 166, 139, 175, 157, \
97, 176, 155, 87, 177, 152, 86, 176, 151, 87, \
174, 150, 86, 173, 149, 85, 170, 150, 87, 169, \
149, 89, 167, 147, 90, 135, 135, 109, 135, 135, \
108, 134, 135, 111, 133, 133, 110, 130, 133, 112, \
127, 131, 112, 127, 129, 107, 126, 127, 106, 122, \
122, 100, 120, 117, 93, 119, 115, 94, 124, 117, \
95, 136, 127, 101, 149, 138, 109, 158, 144, 113, \
159, 146, 114, 157, 147, 120, 154, 140, 109, 146, \
131, 96, 134, 130, 104, 144, 147, 125, 158, 162, \
140, 171, 165, 124, 175, 157, 91, 174, 155, 87, \
174, 152, 85, 174, 150, 85, 172, 148, 84, 172, \
149, 85, 170, 152, 88, 167, 150, 89, 165, 146, \
90, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '20154';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a2480140b4307e350bbcbec5beae7a90f';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_bird9';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{133, 136, 153, 133, 136, 152, 134, 137, 153, 134, 138, \
151, 129, 133, 145, 130, 133, 146, 132, 136, 150, \
122, 126, 137, 125, 130, 136, 123, 128, 133, 118, \
123, 128, 133, 139, 145, 134, 144, 152, 129, 138, \
147, 129, 138, 147, 134, 143, 152, 136, 142, 152, \
138, 142, 150, 137, 142, 146, 135, 141, 141, 137, \
141, 146, 140, 143, 152, 140, 143, 152, 140, 143, \
152, 139, 142, 151, 138, 142, 151, 138, 142, 151, \
138, 142, 150, 138, 142, 151, 138, 142, 154, 137, \
141, 153, 138, 141, 154, 136, 140, 154, 135, 139, \
153, 135, 139, 153, 136, 140, 153, 133, 138, 149, \
132, 136, 147, 134, 138, 149, 126, 130, 138, 130, \
135, 139, 129, 134, 137, 121, 126, 130, 135, 140, \
145, 138, 146, 152, 134, 142, 149, 133, 141, 148, \
138, 146, 153, 140, 145, 153, 138, 143, 150, 137, \
142, 146, 137, 142, 145, 141, 144, 151, 143, 146, \
155, 143, 146, 155, 141, 144, 153, 141, 144, 153, \
139, 143, 152, 139, 143, 152, 139, 143, 152, 140, \
144, 153, 140, 144, 156, 137, 141, 153, 138, 142, \
153, 136, 140, 152, 134, 138, 151, 135, 139, 151, \
137, 141, 154, 136, 140, 153, 133, 137, 146, 135, \
139, 145, 130, 135, 138, 137, 142, 143, 132, 138, \
139, 122, 128, 129, 133, 139, 140, 141, 147, 152, \
139, 145, 150, 135, 141, 146, 140, 146, 151, 142, \
147, 152, 139, 144, 149, 136, 141, 146, 138, 143, \
148, 142, 145, 153, 143, 146, 155, 143, 146, 155, \
143, 146, 155, 143, 146, 155, 141, 145, 154, 140, \
144, 153, 140, 144, 153, 140, 144, 153, 140, 144, \
153, 138, 142, 152, 137, 141, 151, 135, 139, 151, \
134, 138, 149, 136, 141, 151, 138, 142, 156, 138, \
142, 155, 135, 140, 147, 132, 138, 138, 128, 134, \
132, 139, 145, 144, 134, 140, 139, 123, 129, 127, \
133, 139, 138, 147, 151, 154, 145, 149, 152, 138, \
142, 145, 141, 146, 149, 143, 148, 151, 138, 142, \
146, 135, 140, 145, 139, 143, 152, 141, 145, 154, \
141, 144, 153, 143, 146, 155, 144, 147, 156, 143, \
147, 156, 142, 146, 155, 141, 145, 154, 141, 145, \
154, 141, 145, 153, 139, 144, 151, 139, 144, 151, \
139, 144, 151, 134, 138, 148, 135, 139, 148, 138, \
142, 151, 140, 143, 157, 140, 144, 157, 136, 141, \
146, 128, 135, 131, 125, 131, 126, 139, 145, 142, \
136, 142, 139, 124, 131, 128, 132, 138, 136, 149, \
151, 153, 148, 150, 152, 141, 142, 145, 142, 144, \
146, 140, 145, 146, 141, 146, 149, 143, 148, 154, \
142, 146, 156, 142, 145, 156, 142, 145, 154, 143, \
146, 155, 142, 145, 154, 140, 144, 153, 142, 146, \
155, 142, 146, 155, 143, 147, 156, 142, 147, 155, \
141, 146, 151, 141, 146, 151, 143, 148, 153, 137, \
142, 148, 137, 141, 145, 140, 144, 149, 142, 145, \
156, 142, 145, 157, 135, 139, 145, 125, 131, 126, \
123, 129, 122, 138, 144, 141, 137, 143, 139, 125, \
131, 126, 131, 137, 133, 146, 148, 152, 146, 148, \
151, 141, 143, 144, 140, 143, 144, 135, 138, 148, \
114, 115, 124, 103, 106, 103, 132, 136, 143, 146, \
152, 152, 145, 149, 154, 145, 148, 157, 141, 144, \
153, 141, 143, 152, 143, 147, 155, 145, 148, 156, \
145, 148, 157, 144, 148, 155, 143, 148, 153, 143, \
147, 151, 144, 149, 152, 144, 148, 151, 143, 147, \
144, 141, 146, 146, 145, 148, 154, 145, 147, 158, \
136, 139, 147, 123, 128, 123, 119, 126, 118, 137, \
143, 141, 138, 145, 140, 126, 134, 125, 129, 136, \
129, 140, 144, 150, 143, 147, 149, 138, 142, 142, \
131, 135, 135, 92, 91, 102, 48, 40, 57, 38, \
31, 35, 69, 69, 79, 141, 149, 141, 148, 153, \
154, 142, 145, 156, 142, 142, 152, 144, 146, 153, \
146, 149, 156, 147, 150, 157, 146, 150, 157, 145, \
148, 155, 145, 148, 155, 143, 147, 151, 141, 145, \
146, 147, 150, 153, 143, 148, 143, 137, 141, 141, \
144, 148, 153, 148, 151, 161, 138, 141, 149, 121, \
126, 122, 116, 122, 115, 136, 142, 141, 138, 144, \
140, 126, 134, 125, 124, 131, 122, 136, 140, 139, \
144, 147, 148, 134, 138, 142, 96, 98, 99, 54, \
48, 29, 35, 18, 16, 29, 7, 29, 25, 14, \
32, 118, 118, 125, 149, 151, 156, 141, 141, 154, \
146, 146, 155, 148, 151, 155, 148, 151, 158, 148, \
151, 158, 147, 150, 157, 145, 148, 155, 144, 147, \
154, 145, 148, 152, 141, 145, 146, 144, 147, 150, \
135, 140, 135, 124, 128, 128, 137, 140, 146, 146, \
149, 160, 139, 141, 150, 120, 125, 120, 114, 120, \
112, 135, 141, 139, 135, 141, 137, 118, 126, 117, \
112, 120, 109, 130, 136, 128, 144, 147, 148, 132, \
136, 140, 122, 123, 123, 132, 116, 69, 132, 110, \
31, 89, 66, 21, 45, 29, 10, 92, 84, 93, \
149, 148, 152, 146, 145, 156, 152, 153, 160, 151, \
154, 158, 149, 152, 159, 149, 151, 159, 147, 150, \
157, 145, 148, 155, 144, 147, 154, 146, 150, 154, \
145, 149, 149, 141, 145, 148, 128, 133, 128, 115, \
120, 119, 125, 128, 134, 141, 143, 154, 136, 138, \
147, 116, 121, 116, 110, 116, 109, 130, 136, 134, \
128, 135, 130, 110, 117, 109, 102, 110, 99, 123, \
129, 121, 140, 144, 147, 127, 131, 134, 131, 132, \
124, 158, 135, 66, 204, 181, 23, 205, 190, 32, \
130, 116, 32, 82, 70, 60, 132, 128, 119, 152, \
150, 153, 155, 157, 161, 151, 155, 159, 150, 153, \
160, 148, 151, 158, 148, 151, 158, 148, 151, 158, \
147, 150, 157, 148, 151, 155, 147, 151, 152, 137, \
140, 143, 126, 131, 126, 119, 123, 123, 121, 124, \
130, 137, 139, 150, 127, 130, 138, 108, 112, 108, \
107, 113, 105, 123, 129, 127, 120, 126, 122, 106, \
114, 105, 99, 106, 96, 118, 123, 120, 130, 133, \
141, 116, 121, 121, 121, 125, 98, 174, 150, 47, \
227, 201, 16, 224, 209, 21, 155, 139, 45, 108, \
96, 59, 112, 108, 80, 143, 142, 135, 152, 155, \
158, 151, 155, 160, 150, 153, 160, 148, 151, 158, \
148, 151, 158, 148, 151, 158, 149, 152, 159, 149, \
153, 157, 149, 153, 153, 132, 136, 138, 127, 132, \
128, 125, 130, 129, 129, 132, 138, 137, 140, 151, \
122, 125, 133, 103, 107, 103, 106, 112, 106, 121, \
127, 126, 120, 126, 123, 109, 116, 108, 102, 109, \
100, 117, 120, 124, 124, 126, 139, 107, 112, 112, \
123, 128, 81, 207, 188, 47, 241, 211, 44, 185, \
162, 19, 125, 103, 44, 111, 99, 46, 107, 100, \
56, 125, 121, 105, 150, 152, 153, 148, 153, 160, \
150, 153, 160, 148, 151, 158, 148, 151, 158, 149, \
151, 158, 150, 153, 160, 151, 154, 159, 150, 154, \
155, 134, 138, 139, 134, 138, 138, 129, 134, 134, \
138, 141, 148, 141, 143, 154, 127, 130, 137, 111, \
115, 116, 113, 117, 118, 127, 131, 137, 128, 132, \
134, 120, 125, 121, 112, 116, 113, 121, 123, 132, \
125, 134, 151, 114, 119, 124, 136, 131, 75, 169, \
157, 31, 211, 191, 53, 203, 183, 34, 143, 118, \
39, 98, 72, 31, 85, 59, 24, 97, 78, 55, \
138, 133, 123, 149, 152, 160, 148, 152, 162, 148, \
151, 160, 148, 151, 158, 149, 151, 157, 149, 152, \
159, 149, 152, 159, 149, 152, 158, 142, 146, 147, \
138, 142, 144, 135, 139, 140, 142, 145, 153, 142, \
145, 155, 132, 135, 141, 120, 124, 127, 122, 125, \
129, 135, 138, 145, 133, 136, 140, 130, 134, 132, \
127, 130, 129, 128, 130, 136, 131, 141, 155, 124, \
128, 139, 132, 122, 76, 133, 117, 20, 172, 149, \
31, 211, 189, 37, 161, 136, 44, 77, 49, 20, \
82, 52, 31, 78, 51, 30, 110, 96, 84, 147, \
143, 153, 149, 152, 160, 148, 151, 158, 150, 152, \
158, 150, 152, 157, 149, 152, 156, 149, 152, 156, \
149, 152, 156, 146, 150, 153, 141, 145, 149, 140, \
144, 147, 144, 147, 156, 143, 146, 156, 134, 137, \
143, 128, 132, 134, 129, 133, 136, 139, 142, 148, \
134, 137, 140, 133, 137, 137, 135, 137, 138, 136, \
138, 139, 139, 148, 154, 134, 136, 149, 135, 126, \
96, 143, 120, 29, 170, 140, 23, 203, 178, 35, \
186, 163, 66, 95, 73, 41, 62, 36, 23, 78, \
50, 34, 90, 66, 57, 121, 109, 116, 149, 149, \
153, 154, 155, 158, 151, 152, 157, 151, 154, 157, \
150, 155, 154, 150, 155, 153, 149, 153, 152, 144, \
147, 153, 142, 145, 151, 143, 146, 152, 145, 148, \
157, 143, 146, 156, 136, 139, 145, 135, 139, 141, \
136, 140, 141, 139, 143, 145, 134, 138, 141, 135, \
139, 142, 137, 139, 143, 146, 146, 145, 147, 153, \
153, 140, 140, 154, 141, 134, 119, 143, 120, 41, \
160, 130, 13, 177, 152, 9, 188, 167, 50, 148, \
132, 78, 82, 60, 39, 67, 38, 18, 66, 36, \
22, 96, 77, 76, 136, 132, 129, 151, 150, 149, \
152, 154, 156, 150, 155, 157, 151, 156, 153, 150, \
155, 151, 148, 153, 149, 146, 149, 158, 144, 147, \
156, 146, 149, 158, 147, 149, 160, 143, 145, 156, \
138, 141, 147, 139, 143, 145, 135, 139, 139, 139, \
143, 142, 138, 142, 143, 138, 141, 146, 140, 141, \
149, 150, 149, 153, 152, 153, 151, 145, 144, 155, \
146, 144, 139, 143, 127, 72, 140, 117, 13, 157, \
134, 1, 162, 142, 14, 152, 138, 52, 152, 131, \
81, 123, 95, 49, 79, 51, 18, 68, 48, 33, \
94, 86, 78, 131, 128, 122, 144, 147, 146, 151, \
156, 157, 152, 156, 155, 149, 154, 153, 149, 153, \
152, 148, 150, 161, 146, 148, 160, 148, 150, 162, \
147, 149, 161, 143, 145, 155, 141, 144, 150, 139, \
143, 146, 130, 134, 132, 138, 143, 140, 140, 144, \
145, 138, 141, 147, 140, 141, 154, 151, 149, 160, \
152, 151, 148, 148, 147, 154, 150, 151, 152, 149, \
143, 124, 133, 118, 47, 136, 114, 6, 143, 120, \
4, 145, 128, 19, 149, 128, 45, 151, 127, 48, \
138, 117, 52, 118, 102, 72, 136, 125, 113, 148, \
144, 135, 134, 136, 133, 137, 143, 145, 148, 152, \
156, 148, 152, 157, 148, 151, 156, 148, 148, 161, \
147, 147, 160, 149, 149, 162, 149, 151, 161, 143, \
146, 153, 141, 144, 147, 136, 141, 140, 129, 133, \
130, 142, 144, 142, 141, 143, 144, 140, 141, 145, \
142, 143, 152, 149, 150, 162, 148, 149, 151, 146, \
147, 154, 147, 152, 157, 151, 152, 154, 144, 138, \
104, 126, 111, 35, 133, 108, 9, 142, 118, 6, \
140, 117, 18, 135, 113, 28, 149, 132, 70, 157, \
147, 121, 156, 152, 145, 153, 151, 148, 150, 152, \
151, 140, 143, 148, 146, 149, 159, 146, 148, 159, \
146, 149, 158, 147, 146, 160, 146, 145, 159, 149, \
148, 162, 149, 152, 160, 142, 147, 150, 139, 144, \
145, 137, 143, 140, 135, 139, 137, 145, 146, 147, \
142, 142, 144, 140, 141, 142, 144, 145, 149, 147, \
152, 162, 142, 148, 157, 143, 149, 158, 147, 153, \
163, 148, 152, 163, 148, 151, 147, 140, 135, 97, \
126, 107, 35, 129, 106, 22, 128, 110, 29, 138, \
125, 60, 150, 141, 105, 149, 145, 135, 150, 152, \
151, 152, 154, 156, 153, 154, 159, 152, 152, 160, \
148, 150, 163, 148, 150, 162, 149, 152, 162, 145, \
146, 159, 131, 132, 145, 139, 140, 153, 144, 148, \
157, 137, 143, 148, 137, 145, 147, 137, 145, 143, \
137, 144, 142, 142, 146, 149, 139, 143, 146, 136, \
140, 143, 143, 147, 152, 149, 153, 166, 142, 147, \
160, 143, 148, 161, 148, 152, 166, 147, 150, 171, \
145, 150, 166, 148, 151, 147, 119, 112, 83, 133, \
126, 87, 127, 126, 84, 141, 140, 104, 141, 139, \
118, 143, 139, 127, 159, 154, 144, 155, 153, 149, \
152, 154, 157, 150, 153, 161, 148, 150, 159, 148, \
151, 160, 148, 151, 160, 151, 152, 161, 135, 137, \
145, 133, 135, 143, 140, 144, 151, 134, 141, 145, \
137, 144, 145, 133, 140, 138, 133, 140, 138, 136, \
143, 144, 133, 140, 141, 129, 136, 137, 140, 146, \
150, 148, 150, 163, 140, 142, 156, 141, 143, 157, \
146, 147, 162, 145, 148, 165, 144, 153, 169, 127, \
137, 145, 112, 116, 110, 147, 146, 133, 132, 130, \
114, 130, 124, 103, 138, 128, 105, 165, 151, 127, \
175, 160, 138, 165, 157, 143, 159, 158, 154, 151, \
155, 157, 150, 153, 157, 150, 153, 159, 149, 152, \
160, 157, 155, 155, 152, 150, 150, 138, 136, 136, \
129, 129, 130, 143, 145, 146, 147, 150, 147, 144, \
146, 140, 141, 145, 139, 141, 146, 142, 136, 141, \
137, 135, 139, 135, 147, 150, 149, 149, 149, 157, \
144, 144, 153, 146, 146, 155, 151, 150, 159, 154, \
155, 160, 143, 151, 154, 109, 120, 119, 130, 136, \
124, 162, 155, 138, 158, 142, 125, 148, 127, 103, \
166, 141, 105, 179, 155, 116, 181, 161, 130, 175, \
162, 139, 174, 168, 154, 158, 157, 150, 150, 154, \
151, 148, 152, 153, 148, 151, 159, 167, 159, 148, \
164, 156, 145, 167, 158, 147, 126, 119, 112, 150, \
144, 139, 166, 162, 152, 162, 158, 145, 157, 153, \
141, 145, 143, 133, 144, 142, 132, 158, 156, 146, \
166, 164, 157, 154, 153, 153, 153, 153, 154, 153, \
154, 154, 146, 146, 147, 145, 142, 145, 117, 117, \
119, 128, 131, 122, 158, 153, 129, 169, 153, 121, \
175, 152, 123, 170, 144, 114, 173, 145, 102, 172, \
147, 101, 168, 149, 114, 171, 154, 124, 181, 166, \
141, 178, 168, 149, 163, 167, 158, 147, 152, 150, \
145, 149, 155, 165, 150, 130, 170, 155, 136, 176, \
161, 142, 142, 128, 115, 125, 113, 103, 167, 155, \
142, 159, 147, 130, 167, 158, 140, 155, 149, 133, \
161, 155, 138, 181, 174, 158, 183, 178, 163, 163, \
162, 153, 155, 155, 147, 142, 141, 133, 107, 105, \
99, 82, 73, 81, 81, 72, 80, 150, 141, 132, \
171, 153, 125, 181, 161, 120, 168, 149, 112, 176, \
157, 126, 153, 135, 94, 162, 145, 101, 167, 150, \
115, 160, 142, 109, 178, 157, 126, 190, 174, 147, \
174, 177, 164, 151, 155, 150, 145, 148, 153, 161, \
144, 115, 163, 146, 122, 165, 148, 127, 164, 148, \
131, 121, 105, 93, 136, 120, 109, 158, 143, 125, \
163, 152, 131, 158, 151, 133, 169, 163, 142, 178, \
172, 148, 185, 180, 156, 165, 166, 145, 152, 150, \
131, 154, 148, 130, 146, 137, 121, 140, 129, 120, \
153, 142, 130, 150, 137, 114, 147, 130, 96, 166, \
147, 109, 138, 119, 84, 155, 136, 103, 147, 129, \
93, 149, 131, 98, 172, 154, 128, 169, 151, 126, \
184, 164, 139, 181, 163, 139, 178, 169, 149, 162, \
159, 146, 147, 148, 146, 149, 133, 103, 157, 140, \
115, 152, 135, 114, 183, 168, 145, 154, 140, 123, \
100, 84, 75, 133, 118, 105, 142, 129, 112, 140, \
130, 113, 154, 144, 124, 156, 147, 122, 166, 158, \
132, 161, 157, 134, 161, 154, 133, 171, 159, 139, \
169, 154, 136, 169, 156, 136, 188, 174, 151, 158, \
142, 111, 145, 127, 90, 157, 137, 105, 124, 103, \
75, 131, 110, 83, 122, 101, 73, 113, 94, 67, \
151, 133, 111, 157, 140, 118, 146, 128, 106, 159, \
141, 119, 177, 162, 137, 181, 171, 152, 179, 175, \
166, 147, 132, 105, 165, 150, 126, 149, 133, 111, \
178, 166, 137, 170, 158, 134, 127, 113, 102, 104, \
91, 82, 109, 95, 82, 118, 103, 87, 133, 119, \
100, 140, 126, 103, 144, 131, 107, 143, 131, 111, \
175, 162, 143, 211, 196, 178, 191, 174, 156, 182, \
167, 143, 179, 163, 135, 144, 125, 93, 162, 140, \
104, 148, 128, 100, 111, 92, 72, 103, 84, 64, \
92, 73, 52, 106, 87, 64, 125, 107, 85, 153, \
135, 113, 130, 112, 90, 114, 95, 72, 158, 140, \
112, 195, 180, 158, 215, 205, 190, 158, 146, 122, \
164, 151, 128, 152, 139, 116, 157, 148, 115, 158, \
148, 121, 158, 145, 134, 136, 123, 116, 113, 99, \
88, 81, 63, 49, 89, 73, 55, 113, 97, 75, \
123, 107, 84, 104, 87, 69, 171, 154, 136, 230, \
215, 197, 203, 187, 168, 170, 156, 130, 148, 133, \
103, 142, 124, 92, 144, 123, 90, 135, 116, 92, \
124, 107, 89, 74, 57, 41, 67, 50, 34, 116, \
99, 78, 104, 86, 64, 142, 124, 102, 164, 146, \
124, 113, 95, 71, 140, 121, 93, 170, 152, 127, \
179, 163, 145, 145, 134, 114, 146, 135, 113, 163, \
152, 127, 155, 147, 117, 143, 135, 112, 154, 144, \
132, 163, 153, 141, 149, 138, 123, 106, 93, 76, \
119, 106, 87, 146, 134, 111, 140, 126, 102, 82, \
65, 47, 129, 113, 95, 166, 154, 134, 166, 157, \
136, 152, 143, 116, 154, 143, 115, 152, 138, 111, \
133, 116, 90, 137, 121, 98, 145, 130, 109, 118, \
103, 83, 86, 72, 52, 82, 66, 44, 78, 60, \
38, 100, 82, 61, 136, 118, 96, 133, 116, 93, \
131, 115, 90, 134, 118, 95, 159, 143, 124, 153, \
142, 125, 153, 143, 121, 166, 157, 130, 159, 152, \
126, 155, 148, 131, 170, 162, 150, 158, 151, 133, \
159, 151, 131, 159, 151, 133, 167, 158, 138, 166, \
159, 134, 145, 137, 111, 124, 110, 91, 147, 137, \
117, 153, 147, 125, 159, 158, 134, 145, 143, 118, \
139, 134, 110, 143, 135, 113, 137, 125, 106, 143, \
130, 107, 157, 145, 119, 166, 155, 129, 154, 142, \
117, 127, 112, 88, 112, 94, 72, 103, 85, 64, \
122, 104, 82, 142, 125, 103, 126, 115, 93, 117, \
106, 86, 127, 113, 97, 172, 164, 148, 165, 157, \
138, 157, 150, 128, 157, 152, 133, 158, 153, 142, \
170, 163, 155, 160, 153, 137, 161, 155, 133, 146, \
140, 120, 129, 120, 103, 138, 131, 110, 137, 132, \
106, 123, 112, 92, 156, 147, 128, 168, 164, 142, \
163, 163, 136, 150, 148, 123, 138, 134, 112, 138, \
132, 112, 140, 132, 114, 137, 129, 106, 141, 132, \
105, 155, 147, 118, 170, 162, 132, 168, 159, 130, \
158, 146, 120, 158, 146, 121, 151, 139, 113, 153, \
142, 116, 143, 136, 112, 140, 133, 110, 124, 116, \
94, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '20464';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1aa8f41c88936c4d29902a451cab66374d';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_deer1';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{236, 230, 221, 217, 205, 196, 224, 217, 209, 226, 223, \
209, 229, 224, 206, 222, 215, 200, 219, 209, 196, \
213, 203, 187, 218, 210, 187, 225, 220, 195, 222, \
218, 193, 239, 235, 211, 237, 231, 209, 222, 209, \
191, 214, 203, 186, 212, 204, 188, 231, 225, 213, \
224, 218, 201, 207, 201, 181, 233, 227, 213, 220, \
216, 199, 228, 223, 212, 219, 213, 198, 206, 198, \
179, 226, 218, 209, 220, 215, 202, 202, 197, 178, \
185, 180, 163, 211, 206, 191, 202, 197, 177, 207, \
197, 183, 219, 209, 201, 210, 200, 188, 154, 133, \
110, 193, 176, 145, 201, 187, 152, 201, 186, 150, \
183, 166, 127, 156, 137, 96, 159, 136, 92, 170, \
145, 98, 173, 152, 106, 193, 177, 128, 232, 220, \
170, 206, 188, 149, 180, 156, 122, 151, 126, 96, \
154, 133, 105, 196, 180, 155, 201, 187, 159, 162, \
149, 119, 184, 169, 143, 168, 158, 126, 209, 199, \
172, 204, 192, 161, 155, 140, 106, 191, 174, 147, \
194, 179, 145, 166, 152, 114, 123, 107, 72, 173, \
158, 125, 164, 151, 111, 142, 125, 92, 168, 152, \
130, 208, 195, 179, 161, 133, 99, 195, 168, 122, \
196, 174, 122, 183, 161, 107, 162, 138, 81, 154, \
127, 66, 172, 144, 83, 161, 134, 79, 143, 120, \
71, 196, 178, 123, 224, 211, 152, 171, 152, 107, \
170, 144, 107, 148, 121, 90, 161, 138, 109, 192, \
171, 136, 210, 190, 153, 184, 164, 128, 138, 117, \
80, 143, 126, 88, 190, 173, 146, 202, 183, 151, \
145, 124, 89, 158, 134, 100, 182, 159, 110, 168, \
146, 94, 142, 119, 72, 165, 142, 101, 181, 158, \
117, 137, 112, 77, 120, 98, 77, 213, 196, 178, \
178, 147, 111, 186, 156, 107, 192, 168, 111, 171, \
146, 85, 151, 124, 62, 179, 149, 85, 198, 173, \
112, 194, 176, 127, 142, 122, 83, 157, 137, 93, \
170, 153, 101, 141, 122, 79, 158, 134, 99, 135, \
110, 83, 180, 159, 134, 207, 185, 147, 194, 168, \
129, 146, 120, 83, 146, 120, 78, 168, 147, 110, \
166, 145, 123, 165, 141, 114, 151, 127, 98, 173, \
146, 114, 172, 146, 95, 157, 132, 79, 165, 138, \
93, 165, 137, 101, 165, 136, 103, 151, 121, 90, \
101, 76, 60, 231, 213, 194, 161, 130, 99, 169, \
141, 101, 175, 154, 100, 186, 165, 104, 161, 137, \
79, 160, 132, 77, 176, 153, 102, 213, 197, 155, \
153, 129, 100, 129, 99, 67, 171, 142, 99, 174, \
149, 103, 156, 124, 87, 139, 106, 79, 176, 148, \
123, 172, 146, 108, 140, 112, 76, 114, 85, 52, \
153, 125, 86, 219, 199, 158, 210, 190, 164, 155, \
132, 102, 173, 149, 116, 183, 157, 126, 169, 145, \
101, 176, 152, 108, 181, 156, 121, 188, 160, 135, \
163, 132, 103, 131, 101, 68, 105, 83, 60, 234, \
216, 187, 157, 126, 89, 165, 138, 104, 173, 153, \
109, 183, 162, 109, 161, 136, 86, 132, 104, 62, \
143, 118, 82, 201, 179, 144, 161, 133, 101, 153, \
117, 85, 180, 138, 103, 184, 145, 106, 162, 119, \
80, 158, 118, 88, 177, 147, 120, 169, 142, 105, \
131, 103, 71, 118, 90, 57, 143, 116, 75, 172, \
150, 108, 176, 156, 122, 175, 155, 117, 205, 185, \
145, 185, 165, 128, 168, 147, 105, 179, 156, 112, \
161, 136, 101, 156, 127, 101, 184, 156, 121, 136, \
112, 64, 129, 108, 70, 219, 203, 162, 175, 144, \
94, 174, 146, 112, 177, 158, 123, 183, 160, 116, \
168, 139, 93, 170, 140, 106, 144, 115, 92, 151, \
124, 94, 176, 149, 106, 175, 138, 96, 137, 88, \
59, 132, 83, 58, 152, 103, 62, 183, 142, 111, \
200, 176, 147, 191, 168, 131, 137, 109, 82, 132, \
106, 69, 141, 114, 69, 134, 108, 69, 134, 110, \
72, 149, 127, 87, 194, 173, 131, 202, 183, 141, \
174, 155, 109, 139, 117, 66, 124, 98, 54, 131, \
101, 67, 155, 131, 93, 155, 135, 80, 122, 99, \
56, 218, 203, 161, 187, 155, 107, 178, 150, 116, \
187, 168, 130, 176, 153, 106, 145, 116, 70, 169, \
140, 105, 138, 109, 87, 137, 110, 82, 186, 160, \
113, 178, 142, 93, 130, 82, 48, 144, 94, 68, \
148, 98, 55, 192, 152, 116, 228, 208, 168, 211, \
191, 151, 149, 123, 95, 143, 116, 79, 124, 97, \
50, 194, 170, 132, 183, 159, 124, 165, 140, 101, \
191, 162, 122, 185, 159, 117, 173, 154, 109, 156, \
135, 86, 137, 114, 67, 120, 92, 57, 126, 100, \
73, 162, 139, 97, 147, 119, 90, 207, 191, 153, \
177, 145, 101, 189, 161, 127, 197, 179, 136, 192, \
170, 120, 164, 134, 89, 154, 124, 91, 130, 102, \
79, 135, 110, 79, 175, 151, 101, 191, 158, 104, \
137, 92, 52, 152, 103, 72, 168, 118, 74, 165, \
125, 85, 197, 178, 131, 182, 164, 122, 122, 97, \
69, 127, 100, 59, 171, 142, 91, 230, 211, 170, \
214, 199, 161, 202, 179, 138, 199, 168, 125, 177, \
147, 104, 196, 174, 133, 190, 168, 125, 151, 128, \
84, 135, 109, 70, 115, 88, 57, 145, 119, 79, \
173, 144, 116, 203, 186, 152, 154, 121, 82, 173, \
145, 113, 195, 178, 131, 206, 184, 134, 158, 128, \
88, 145, 114, 86, 128, 100, 75, 156, 134, 95, \
192, 171, 116, 174, 144, 89, 143, 100, 58, 154, \
106, 69, 150, 100, 58, 144, 104, 67, 187, 167, \
121, 185, 169, 126, 138, 115, 86, 153, 126, 83, \
216, 185, 130, 186, 165, 118, 205, 191, 144, 171, \
146, 100, 156, 120, 75, 167, 131, 90, 198, 170, \
134, 211, 183, 146, 178, 152, 109, 157, 131, 86, \
142, 115, 72, 154, 129, 79, 171, 142, 104, 210, \
193, 162, 138, 104, 70, 152, 124, 93, 192, 174, \
127, 215, 192, 146, 138, 106, 75, 106, 74, 53, \
104, 78, 51, 172, 153, 104, 203, 184, 123, 183, \
154, 99, 164, 122, 81, 158, 111, 68, 172, 122, \
79, 143, 102, 71, 208, 188, 149, 209, 195, 154, \
149, 127, 97, 171, 144, 99, 189, 157, 100, 133, \
100, 46, 176, 139, 86, 155, 110, 63, 155, 101, \
59, 146, 96, 59, 158, 120, 91, 189, 153, 124, \
181, 150, 111, 161, 132, 84, 138, 111, 61, 146, \
120, 67, 156, 125, 85, 211, 194, 164, 137, 103, \
71, 148, 119, 89, 190, 172, 126, 203, 179, 137, \
140, 107, 82, 97, 64, 50, 112, 87, 59, 178, \
161, 105, 201, 184, 121, 201, 173, 120, 166, 125, \
87, 156, 111, 65, 170, 119, 78, 135, 93, 72, \
170, 149, 119, 175, 160, 122, 119, 97, 66, 155, \
125, 78, 177, 140, 80, 169, 115, 56, 197, 131, \
76, 182, 110, 64, 174, 94, 58, 152, 83, 54, \
138, 90, 66, 140, 96, 71, 144, 107, 72, 149, \
116, 71, 116, 85, 42, 135, 106, 62, 156, 124, \
90, 207, 192, 157, 134, 102, 70, 156, 126, 100, \
192, 171, 128, 188, 164, 117, 130, 97, 70, 98, \
64, 56, 133, 108, 83, 183, 167, 119, 198, 180, \
132, 197, 172, 135, 160, 128, 102, 151, 106, 76, \
133, 74, 57, 123, 77, 74, 144, 114, 92, 170, \
141, 101, 166, 127, 89, 168, 115, 69, 200, 138, \
73, 204, 129, 66, 212, 131, 73, 200, 116, 61, \
190, 101, 59, 162, 82, 55, 141, 79, 60, 129, \
73, 44, 149, 106, 67, 127, 90, 63, 130, 93, \
67, 156, 127, 91, 145, 118, 79, 193, 179, 142, \
127, 96, 64, 159, 128, 103, 197, 174, 132, 185, \
159, 111, 126, 91, 65, 98, 64, 56, 135, 110, \
91, 185, 166, 133, 197, 176, 140, 188, 164, 131, \
123, 96, 71, 119, 73, 56, 126, 63, 54, 110, \
61, 55, 167, 130, 97, 199, 156, 105, 179, 125, \
83, 173, 106, 69, 185, 108, 60, 187, 106, 52, \
199, 118, 58, 199, 118, 54, 203, 120, 66, 184, \
102, 64, 150, 78, 54, 133, 76, 46, 172, 130, \
90, 132, 93, 67, 141, 103, 77, 186, 159, 121, \
176, 151, 108, 195, 180, 145, 126, 95, 65, 152, \
121, 95, 194, 169, 127, 182, 152, 108, 127, 90, \
66, 96, 62, 52, 140, 114, 96, 184, 163, 137, \
193, 172, 132, 185, 162, 115, 166, 141, 98, 155, \
109, 79, 136, 71, 49, 116, 63, 45, 163, 117, \
78, 177, 119, 71, 147, 79, 45, 161, 86, 59, \
173, 93, 58, 177, 97, 54, 195, 117, 59, 204, \
129, 57, 205, 131, 63, 196, 115, 58, 168, 89, \
52, 138, 86, 59, 178, 141, 105, 142, 104, 69, \
130, 97, 59, 204, 179, 137, 186, 159, 118, 204, \
189, 154, 126, 94, 67, 148, 117, 91, 190, 162, \
119, 174, 140, 100, 119, 81, 61, 99, 66, 54, \
155, 131, 106, 192, 171, 134, 195, 174, 119, 183, \
162, 95, 213, 190, 120, 205, 164, 97, 172, 107, \
59, 134, 72, 50, 127, 66, 44, 139, 65, 42, \
144, 64, 47, 161, 79, 56, 177, 96, 54, 183, \
102, 59, 198, 122, 64, 221, 151, 69, 215, 148, \
67, 200, 122, 51, 183, 102, 56, 170, 117, 94, \
185, 150, 117, 166, 127, 88, 134, 103, 61, 178, \
152, 112, 159, 130, 93, 204, 188, 155, 124, 91, \
68, 155, 125, 97, 190, 159, 116, 161, 123, 87, \
111, 71, 54, 113, 80, 67, 174, 151, 116, 192, \
171, 121, 178, 158, 92, 172, 151, 76, 213, 190, \
108, 229, 190, 92, 202, 136, 63, 162, 92, 65, \
134, 60, 51, 142, 61, 52, 148, 63, 55, 158, \
73, 51, 184, 100, 51, 194, 111, 64, 200, 122, \
61, 230, 161, 71, 223, 159, 70, 202, 131, 57, \
186, 108, 62, 191, 128, 105, 185, 142, 110, 168, \
131, 94, 157, 128, 90, 145, 120, 87, 134, 104, \
73, 192, 177, 145, 118, 85, 64, 172, 142, 114, \
191, 158, 115, 147, 105, 71, 102, 59, 45, 124, \
91, 77, 174, 151, 113, 177, 155, 103, 161, 139, \
78, 162, 137, 76, 217, 191, 122, 243, 203, 102, \
216, 147, 66, 186, 111, 72, 157, 78, 57, 157, \
79, 55, 148, 68, 49, 160, 75, 53, 183, 95, \
57, 192, 103, 60, 206, 125, 59, 229, 158, 63, \
226, 160, 69, 202, 136, 67, 173, 101, 62, 171, \
96, 72, 151, 96, 63, 150, 116, 85, 148, 120, \
92, 127, 101, 77, 133, 102, 76, 184, 167, 142, \
116, 84, 56, 174, 144, 113, 184, 150, 112, 139, \
97, 68, 100, 61, 49, 133, 104, 89, 167, 147, \
111, 164, 144, 103, 155, 132, 96, 155, 127, 94, \
199, 165, 119, 238, 196, 100, 220, 156, 63, 190, \
116, 58, 173, 94, 54, 177, 102, 58, 161, 85, \
51, 166, 82, 58, 179, 89, 58, 189, 101, 55, \
209, 127, 57, 222, 145, 57, 226, 154, 72, 201, \
136, 75, 158, 90, 50, 166, 87, 54, 159, 100, \
65, 182, 148, 120, 175, 146, 124, 143, 118, 95, \
123, 93, 70, 182, 164, 146, 131, 100, 64, 169, \
139, 104, 166, 131, 100, 139, 100, 79, 105, 73, \
63, 149, 126, 111, 165, 148, 120, 148, 131, 104, \
139, 119, 105, 144, 115, 103, 177, 141, 106, 231, \
189, 93, 221, 165, 62, 194, 123, 53, 188, 112, \
57, 198, 123, 65, 183, 106, 62, 176, 93, 63, \
181, 93, 58, 190, 106, 56, 207, 126, 61, 210, \
127, 57, 207, 127, 66, 183, 113, 66, 151, 83, \
44, 174, 97, 60, 159, 99, 66, 190, 153, 126, \
184, 155, 129, 168, 145, 112, 133, 106, 82, 180, \
163, 146, 142, 113, 77, 153, 124, 89, 162, 128, \
100, 142, 104, 88, 111, 79, 74, 165, 142, 132, \
188, 170, 150, 174, 157, 140, 165, 148, 137, 150, \
127, 112, 159, 127, 89, 227, 187, 94, 219, 164, \
69, 200, 131, 59, 205, 135, 64, 207, 135, 63, \
185, 109, 56, 178, 95, 60, 181, 96, 63, 189, \
107, 69, 196, 114, 67, 191, 109, 57, 177, 99, \
57, 153, 84, 54, 146, 76, 53, 173, 95, 72, \
132, 68, 44, 154, 111, 84, 160, 127, 89, 151, \
125, 81, 151, 120, 90, 191, 176, 158, 153, 124, \
92, 155, 128, 94, 160, 129, 103, 120, 86, 73, \
107, 77, 76, 169, 145, 140, 189, 169, 159, 201, \
184, 177, 188, 173, 164, 171, 152, 134, 151, 125, \
86, 219, 181, 99, 220, 168, 81, 205, 140, 66, \
210, 144, 61, 210, 142, 60, 197, 120, 59, 179, \
97, 57, 171, 90, 59, 175, 98, 72, 168, 89, \
61, 169, 92, 57, 154, 83, 56, 127, 63, 49, \
130, 61, 54, 154, 78, 69, 124, 57, 43, 137, \
87, 62, 147, 112, 64, 139, 110, 59, 140, 106, \
72, 187, 174, 155, 135, 108, 78, 146, 121, 87, \
164, 137, 110, 122, 91, 79, 103, 74, 74, 138, \
114, 109, 146, 123, 118, 159, 137, 137, 156, 140, \
132, 154, 137, 119, 151, 126, 95, 214, 176, 110, \
218, 169, 84, 209, 148, 70, 210, 146, 66, 212, \
145, 65, 207, 130, 67, 185, 102, 61, 171, 95, \
65, 150, 81, 60, 144, 77, 53, 148, 82, 53, \
150, 94, 71, 151, 98, 87, 125, 63, 59, 134, \
65, 62, 132, 67, 57, 128, 75, 51, 143, 105, \
58, 140, 110, 58, 142, 107, 72, 182, 170, 150, \
133, 107, 80, 154, 130, 97, 163, 139, 109, 119, \
91, 76, 104, 76, 74, 124, 100, 94, 132, 106, \
102, 139, 111, 115, 143, 123, 117, 144, 124, 110, \
156, 127, 111, 204, 167, 119, 220, 175, 85, 213, \
157, 73, 197, 135, 68, 202, 135, 67, 204, 125, \
67, 187, 104, 63, 167, 95, 65, 136, 77, 54, \
134, 80, 51, 140, 90, 54, 166, 128, 98, 189, \
152, 132, 133, 82, 70, 117, 59, 51, 134, 75, \
63, 137, 84, 61, 135, 98, 60, 146, 116, 72, \
142, 108, 77, 202, 192, 170, 169, 144, 119, 190, \
167, 136, 165, 144, 114, 110, 86, 68, 93, 69, \
61, 107, 84, 72, 129, 103, 95, 151, 121, 124, \
141, 118, 112, 156, 132, 121, 154, 123, 113, 181, \
144, 106, 223, 180, 90, 204, 149, 66, 158, 96, \
42, 180, 113, 57, 192, 112, 60, 176, 93, 54, \
155, 86, 56, 142, 92, 61, 145, 103, 64, 150, \
112, 67, 156, 129, 90, 156, 130, 97, 122, 83, \
56, 104, 55, 40, 118, 64, 50, 131, 78, 57, \
123, 86, 59, 162, 133, 97, 130, 98, 69, 206, \
198, 174, 174, 155, 132, 186, 167, 145, 175, 157, \
136, 115, 96, 82, 101, 83, 66, 129, 112, 83, \
153, 135, 110, 168, 147, 138, 173, 152, 140, 172, \
148, 126, 165, 138, 104, 192, 157, 105, 194, 148, \
83, 185, 129, 68, 154, 94, 43, 158, 95, 48, \
179, 103, 64, 162, 82, 52, 138, 71, 45, 147, \
104, 63, 158, 124, 73, 139, 105, 56, 139, 108, \
63, 166, 138, 92, 146, 113, 70, 118, 71, 49, \
116, 60, 51, 115, 61, 52, 111, 72, 52, 137, \
107, 76, 115, 82, 56, 192, 183, 158, 170, 153, \
130, 182, 165, 147, 187, 170, 154, 162, 143, 135, \
151, 133, 122, 160, 144, 120, 169, 154, 129, 185, \
169, 153, 201, 181, 164, 162, 139, 110, 146, 120, \
77, 178, 144, 96, 156, 108, 65, 153, 97, 56, \
153, 96, 56, 148, 94, 57, 158, 92, 62, 146, \
72, 49, 133, 69, 45, 175, 134, 91, 172, 142, \
86, 162, 130, 78, 147, 114, 66, 163, 131, 81, \
162, 127, 81, 121, 74, 49, 114, 62, 52, 109, \
59, 52, 98, 59, 43, 104, 74, 47, 114, 80, \
59, 187, 179, 154, 163, 146, 123, 172, 154, 137, \
171, 154, 140, 167, 147, 143, 168, 148, 146, 159, \
140, 133, 148, 131, 117, 162, 145, 127, 174, 154, \
130, 161, 137, 103, 145, 119, 77, 143, 109, 72, \
138, 92, 59, 135, 82, 51, 141, 89, 58, 148, \
106, 73, 168, 118, 87, 151, 91, 63, 128, 71, \
42, 173, 134, 88, 167, 137, 83, 167, 136, 84, \
161, 130, 79, 164, 131, 81, 163, 123, 82, 122, \
75, 52, 96, 52, 37, 104, 64, 49, 97, 61, \
41, 106, 77, 48, 120, 87, 66, 209, 201, 176, \
177, 160, 137, 170, 153, 135, 162, 145, 129, 170, \
151, 146, 155, 135, 136, 153, 134, 133, 156, 138, \
128, 153, 135, 113, 159, 137, 106, 138, 113, 72, \
135, 108, 63, 127, 96, 54, 136, 95, 58, 136, \
89, 54, 146, 104, 66, 144, 113, 71, 176, 140, \
97, 164, 118, 77, 133, 85, 43, 150, 115, 67, \
153, 125, 74, 155, 127, 75, 147, 119, 67, 153, \
121, 73, 133, 92, 56, 105, 61, 38, 96, 59, \
39, 130, 99, 74, 125, 93, 59, 139, 114, 71, \
131, 102, 69, 196, 189, 164, 173, 156, 133, 180, \
163, 145, 191, 175, 154, 197, 179, 165, 177, 158, \
150, 172, 154, 144, 172, 154, 138, 181, 161, 135, \
178, 157, 118, 157, 132, 86, 144, 116, 69, 138, \
110, 63, 153, 118, 74, 147, 108, 66, 146, 111, \
67, 138, 110, 62, 155, 125, 78, 139, 104, 60, \
143, 104, 62, 138, 105, 63, 140, 112, 68, 129, \
101, 55, 135, 107, 59, 131, 100, 57, 122, 85, \
53, 120, 80, 57, 144, 111, 87, 148, 121, 89, \
148, 120, 77, 137, 115, 65, 130, 105, 67, 161, \
153, 128, 153, 136, 114, 183, 166, 149, 173, 158, \
131, 183, 168, 143, 181, 165, 143, 160, 145, 118, \
147, 130, 103, 168, 148, 119, 159, 138, 94, 159, \
132, 82, 161, 133, 86, 138, 112, 71, 128, 96, \
57, 158, 124, 86, 161, 131, 91, 139, 108, 68, \
138, 108, 70, 133, 102, 69, 133, 99, 72, 119, \
88, 58, 140, 113, 78, 142, 114, 76, 121, 94, \
52, 118, 91, 51, 122, 91, 60, 131, 95, 71, \
148, 116, 90, 139, 112, 79, 152, 124, 88, 125, \
103, 63, 125, 100, 73, 181, 175, 159, 184, 173, \
158, 186, 174, 163, 177, 168, 149, 189, 179, 159, \
198, 188, 169, 181, 172, 149, 172, 161, 139, 180, \
167, 148, 170, 157, 128, 173, 157, 123, 185, 169, \
137, 166, 153, 126, 166, 148, 124, 183, 166, 141, \
188, 172, 147, 179, 161, 137, 182, 163, 141, 177, \
160, 141, 173, 154, 140, 160, 143, 126, 185, 170, \
149, 194, 179, 155, 167, 153, 127, 169, 155, 130, \
169, 153, 135, 172, 153, 139, 179, 161, 146, 177, \
161, 143, 189, 174, 155, 173, 162, 141, 170, 156, \
143, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '20774';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1ae24313ddf2d79953d54a814ea36d6b95';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_cat3';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{71, 93, 94, 74, 99, 102, 71, 96, 100, 76, 99, \
105, 90, 114, 122, 130, 157, 167, 167, 195, 210, \
190, 219, 239, 195, 225, 247, 191, 223, 245, 193, \
224, 245, 199, 227, 246, 202, 229, 246, 198, 224, \
243, 189, 219, 241, 173, 202, 222, 165, 190, 205, \
166, 186, 195, 159, 176, 181, 179, 202, 214, 187, \
213, 230, 198, 222, 237, 221, 237, 244, 246, 252, \
252, 241, 249, 250, 236, 246, 249, 230, 242, 247, \
220, 236, 242, 206, 223, 231, 199, 215, 226, 194, \
210, 222, 168, 182, 194, 62, 84, 82, 63, 88, \
86, 77, 102, 104, 112, 134, 143, 135, 158, 172, \
169, 194, 210, 190, 217, 235, 196, 225, 245, 193, \
224, 244, 177, 208, 228, 176, 206, 226, 180, 210, \
230, 185, 215, 235, 183, 214, 234, 169, 199, 217, \
142, 166, 177, 132, 148, 152, 139, 150, 150, 137, \
148, 148, 153, 170, 179, 175, 196, 211, 201, 221, \
235, 228, 240, 247, 248, 252, 253, 233, 246, 248, \
221, 237, 242, 213, 229, 236, 206, 222, 231, 195, \
212, 222, 191, 207, 219, 189, 205, 218, 167, 182, \
193, 45, 65, 59, 51, 73, 68, 78, 100, 102, \
131, 153, 162, 148, 172, 182, 155, 180, 193, 171, \
197, 214, 187, 215, 234, 185, 214, 233, 150, 179, \
193, 138, 167, 180, 143, 172, 186, 157, 184, 202, \
167, 194, 214, 131, 157, 167, 120, 137, 136, 126, \
134, 129, 138, 141, 138, 138, 144, 141, 141, 150, \
153, 167, 183, 193, 201, 219, 231, 228, 242, 249, \
243, 249, 252, 231, 243, 248, 217, 232, 239, 204, \
220, 229, 195, 211, 222, 190, 206, 219, 188, 205, \
217, 187, 203, 215, 164, 179, 189, 54, 70, 70, \
69, 87, 89, 102, 124, 129, 146, 171, 181, 149, \
174, 182, 145, 171, 181, 151, 179, 192, 160, 189, \
205, 153, 183, 199, 118, 147, 156, 101, 128, 133, \
101, 127, 133, 118, 141, 151, 147, 168, 182, 125, \
143, 147, 121, 131, 125, 128, 130, 124, 136, 136, \
135, 135, 139, 136, 138, 142, 142, 159, 171, 180, \
182, 202, 217, 202, 221, 235, 224, 235, 243, 227, \
239, 246, 218, 231, 239, 204, 220, 229, 193, 211, \
221, 190, 207, 219, 189, 206, 217, 187, 204, 214, \
162, 177, 186, 78, 95, 98, 101, 121, 125, 125, \
147, 152, 135, 156, 163, 145, 165, 174, 156, 177, \
187, 146, 169, 178, 120, 145, 153, 94, 119, 126, \
85, 105, 111, 75, 93, 94, 70, 86, 84, 75, \
89, 87, 96, 108, 109, 115, 121, 117, 119, 121, \
111, 123, 121, 114, 127, 123, 122, 118, 117, 112, \
128, 128, 125, 143, 149, 155, 166, 178, 191, 195, \
209, 224, 220, 229, 240, 232, 242, 248, 226, 238, \
244, 212, 225, 232, 197, 212, 221, 191, 207, 217, \
188, 205, 215, 186, 203, 213, 162, 177, 186, 90, \
107, 108, 124, 141, 143, 139, 152, 153, 107, 114, \
114, 101, 107, 106, 110, 116, 114, 107, 114, 112, \
90, 99, 97, 69, 80, 78, 70, 80, 78, 69, \
78, 71, 71, 79, 70, 78, 84, 75, 89, 92, \
85, 109, 109, 98, 117, 117, 103, 121, 121, 111, \
124, 124, 119, 119, 118, 109, 117, 117, 112, 132, \
135, 135, 168, 175, 179, 215, 223, 228, 230, 238, \
241, 237, 246, 249, 226, 237, 240, 209, 222, 227, \
197, 212, 218, 195, 210, 218, 190, 206, 215, 191, \
207, 217, 172, 186, 195, 101, 117, 118, 149, 165, \
168, 182, 196, 198, 155, 166, 167, 126, 131, 127, \
105, 106, 98, 90, 90, 80, 84, 85, 76, 89, \
93, 86, 92, 96, 87, 91, 95, 83, 95, 98, \
86, 102, 104, 93, 105, 106, 95, 114, 113, 100, \
118, 118, 103, 121, 122, 107, 125, 127, 112, 130, \
132, 116, 116, 119, 110, 132, 137, 131, 172, 179, \
176, 217, 226, 225, 220, 229, 230, 219, 230, 233, \
193, 209, 210, 171, 191, 191, 173, 193, 194, 188, \
205, 211, 186, 199, 208, 185, 198, 207, 169, 180, \
189, 87, 107, 108, 118, 140, 141, 136, 159, 162, \
134, 158, 162, 143, 164, 165, 135, 149, 145, 119, \
127, 119, 109, 112, 101, 116, 118, 105, 121, 123, \
110, 104, 106, 93, 97, 99, 86, 104, 106, 93, \
116, 117, 105, 127, 129, 115, 133, 132, 115, 137, \
133, 112, 142, 134, 109, 145, 136, 110, 135, 132, \
113, 137, 139, 126, 153, 160, 155, 177, 189, 190, \
186, 202, 206, 193, 208, 212, 161, 178, 178, 131, \
148, 146, 129, 142, 143, 135, 144, 149, 130, 140, \
143, 119, 132, 135, 108, 121, 126, 65, 86, 83, \
66, 88, 87, 59, 83, 84, 74, 100, 103, 114, \
141, 146, 128, 151, 154, 126, 142, 140, 124, 132, \
123, 135, 136, 122, 138, 140, 127, 124, 126, 113, \
120, 122, 109, 129, 131, 118, 138, 140, 127, 135, \
138, 121, 138, 137, 117, 145, 137, 114, 152, 139, \
112, 152, 136, 107, 152, 143, 119, 145, 142, 126, \
132, 137, 129, 124, 136, 137, 145, 161, 167, 157, \
169, 173, 129, 137, 137, 93, 98, 97, 75, 78, \
79, 72, 76, 80, 83, 92, 92, 84, 97, 97, \
72, 86, 88, 57, 73, 71, 60, 78, 78, 68, \
88, 90, 104, 124, 128, 134, 154, 161, 151, 170, \
178, 147, 162, 166, 135, 143, 140, 132, 132, 121, \
126, 127, 115, 132, 133, 120, 140, 142, 127, 147, \
149, 133, 151, 153, 137, 120, 122, 103, 126, 125, \
106, 137, 132, 112, 142, 134, 114, 154, 144, 124, \
162, 156, 138, 150, 148, 134, 119, 122, 114, 85, \
93, 91, 87, 97, 100, 84, 88, 91, 77, 77, \
79, 70, 70, 70, 67, 70, 70, 73, 82, 83, \
88, 98, 100, 91, 102, 104, 76, 85, 87, 65, \
81, 83, 93, 110, 115, 118, 136, 142, 140, 158, \
165, 189, 203, 211, 212, 226, 233, 197, 208, 210, \
160, 166, 160, 130, 130, 115, 110, 107, 93, 112, \
108, 89, 125, 119, 96, 137, 129, 104, 135, 125, \
103, 121, 112, 94, 131, 124, 109, 144, 140, 126, \
155, 152, 140, 170, 169, 158, 173, 174, 165, 156, \
156, 150, 125, 126, 123, 93, 97, 97, 83, 93, \
91, 89, 98, 97, 96, 104, 104, 100, 109, 108, \
101, 110, 109, 99, 109, 108, 93, 102, 103, 80, \
89, 92, 62, 69, 72, 84, 98, 100, 118, 134, \
138, 146, 164, 168, 161, 178, 182, 212, 226, 227, \
223, 237, 239, 201, 214, 214, 163, 173, 167, 133, \
137, 121, 128, 124, 107, 127, 116, 95, 126, 109, \
86, 124, 100, 79, 117, 91, 72, 133, 116, 98, \
144, 134, 118, 162, 159, 147, 184, 187, 180, 189, \
195, 191, 174, 179, 174, 158, 161, 154, 136, 137, \
130, 108, 111, 106, 90, 98, 95, 93, 102, 101, \
103, 113, 112, 110, 121, 120, 111, 121, 120, 112, \
122, 121, 104, 113, 113, 89, 97, 98, 68, 75, \
76, 117, 128, 128, 137, 150, 152, 140, 154, 157, \
171, 186, 188, 207, 221, 220, 205, 221, 225, 192, \
209, 214, 169, 183, 185, 129, 139, 133, 129, 133, \
122, 137, 135, 121, 139, 132, 119, 136, 124, 113, \
130, 116, 109, 161, 157, 148, 164, 165, 157, 173, \
178, 174, 192, 202, 201, 195, 207, 208, 183, 192, \
189, 160, 165, 156, 139, 140, 128, 122, 124, 113, \
103, 108, 102, 92, 100, 98, 96, 106, 105, 102, \
112, 111, 102, 112, 111, 104, 114, 113, 101, 111, \
109, 95, 105, 102, 81, 89, 87, 115, 125, 125, \
150, 162, 164, 158, 171, 174, 169, 183, 186, 190, \
203, 206, 171, 187, 193, 155, 173, 180, 143, 161, \
166, 123, 138, 140, 127, 143, 141, 145, 159, 155, \
158, 168, 164, 161, 168, 166, 158, 163, 164, 187, \
197, 197, 194, 207, 207, 193, 206, 206, 191, 202, \
201, 185, 194, 190, 165, 171, 164, 141, 144, 132, \
125, 127, 112, 120, 121, 109, 108, 111, 105, 104, \
110, 108, 103, 111, 110, 103, 112, 111, 104, 114, \
111, 106, 117, 114, 108, 118, 115, 110, 120, 117, \
99, 108, 105, 78, 89, 90, 127, 139, 143, 164, \
178, 182, 176, 190, 196, 189, 203, 209, 146, 165, \
168, 112, 131, 133, 97, 115, 115, 97, 112, 112, \
111, 127, 127, 121, 134, 134, 136, 146, 145, 155, \
162, 160, 172, 178, 176, 190, 200, 198, 195, 206, \
204, 189, 197, 192, 177, 178, 168, 165, 160, 144, \
144, 141, 124, 126, 125, 109, 116, 116, 103, 113, \
113, 104, 106, 108, 103, 105, 109, 107, 114, 120, \
118, 125, 133, 131, 133, 143, 139, 135, 147, 143, \
136, 148, 146, 137, 148, 146, 119, 129, 127, 63, \
74, 73, 97, 110, 111, 128, 142, 145, 146, 161, \
164, 164, 180, 182, 127, 145, 145, 92, 109, 108, \
73, 86, 85, 69, 75, 74, 78, 81, 81, 81, \
83, 82, 106, 108, 104, 142, 145, 139, 158, 162, \
154, 176, 181, 173, 175, 179, 171, 163, 164, 154, \
149, 144, 128, 136, 126, 104, 127, 122, 101, 122, \
120, 101, 118, 118, 103, 114, 116, 104, 109, 112, \
103, 96, 101, 95, 107, 112, 108, 128, 135, 133, \
145, 154, 153, 139, 150, 149, 129, 141, 140, 132, \
144, 142, 115, 126, 124, 66, 77, 74, 73, 86, \
84, 76, 90, 90, 89, 104, 104, 110, 127, 126, \
90, 108, 106, 75, 90, 87, 68, 77, 74, 58, \
60, 58, 58, 59, 55, 71, 72, 67, 107, 109, \
101, 146, 148, 138, 149, 150, 138, 156, 154, 141, \
147, 146, 134, 133, 132, 119, 121, 118, 102, 117, \
111, 91, 122, 118, 96, 129, 127, 105, 128, 128, \
110, 120, 122, 108, 117, 120, 109, 103, 108, 99, \
103, 110, 103, 119, 127, 123, 140, 150, 151, 138, \
149, 151, 125, 137, 137, 130, 142, 140, 113, 123, \
122, 65, 76, 73, 60, 73, 71, 58, 72, 70, \
72, 87, 85, 84, 100, 97, 67, 84, 78, 61, \
76, 70, 66, 76, 71, 65, 70, 69, 60, 65, \
61, 75, 79, 73, 108, 112, 104, 144, 147, 137, \
152, 154, 142, 155, 152, 138, 152, 148, 133, 144, \
140, 124, 136, 131, 112, 139, 133, 111, 148, 141, \
118, 147, 143, 120, 140, 139, 119, 132, 133, 120, \
129, 132, 123, 116, 120, 111, 108, 114, 106, 115, \
123, 119, 135, 146, 145, 144, 158, 158, 143, 156, \
156, 142, 154, 152, 114, 123, 121, 101, 111, 111, \
117, 130, 129, 121, 137, 135, 106, 124, 122, 63, \
81, 77, 39, 54, 47, 49, 62, 55, 78, 89, \
84, 94, 103, 102, 64, 70, 67, 64, 69, 65, \
95, 100, 95, 138, 143, 136, 159, 163, 154, 169, \
169, 158, 173, 172, 158, 170, 167, 150, 164, 160, \
139, 164, 159, 137, 165, 159, 137, 161, 157, 135, \
153, 152, 134, 144, 146, 133, 135, 137, 130, 119, \
122, 114, 110, 115, 108, 115, 124, 118, 133, 145, \
143, 145, 160, 159, 148, 162, 162, 146, 159, 157, \
115, 124, 121, 113, 124, 126, 159, 171, 174, 180, \
194, 195, 154, 170, 170, 81, 100, 96, 41, 54, \
48, 53, 62, 56, 91, 100, 96, 111, 123, 122, \
66, 72, 72, 53, 57, 56, 79, 84, 81, 128, \
133, 128, 162, 167, 161, 170, 174, 167, 175, 178, \
168, 176, 178, 164, 172, 172, 156, 165, 165, 146, \
164, 164, 147, 161, 162, 144, 154, 156, 139, 142, \
144, 132, 132, 133, 126, 121, 123, 115, 114, 119, \
111, 119, 128, 123, 137, 149, 147, 145, 160, 160, \
147, 161, 161, 144, 157, 155, 114, 122, 120, 95, \
111, 114, 133, 145, 150, 162, 172, 177, 146, 157, \
161, 94, 112, 110, 52, 65, 62, 52, 61, 58, \
77, 88, 85, 95, 109, 109, 62, 70, 72, 45, \
51, 52, 63, 68, 68, 109, 114, 112, 157, 163, \
159, 167, 175, 170, 172, 180, 173, 174, 181, 170, \
174, 179, 166, 173, 178, 164, 172, 177, 164, 172, \
176, 162, 167, 170, 156, 156, 158, 146, 142, 143, \
136, 129, 131, 123, 123, 128, 121, 128, 137, 132, \
142, 154, 152, 146, 160, 159, 147, 160, 160, 144, \
155, 153, 113, 121, 118, 152, 171, 176, 160, 178, \
184, 166, 183, 189, 166, 183, 188, 141, 160, 163, \
122, 140, 143, 113, 130, 133, 110, 127, 130, 107, \
125, 127, 93, 107, 110, 75, 87, 89, 82, 93, \
94, 113, 123, 121, 143, 153, 150, 162, 173, 168, \
168, 180, 174, 172, 183, 176, 176, 186, 178, 176, \
186, 178, 178, 185, 178, 177, 183, 174, 170, 174, \
164, 153, 155, 148, 129, 129, 126, 126, 128, 124, \
129, 136, 131, 137, 147, 142, 146, 157, 155, 150, \
159, 159, 150, 160, 160, 140, 149, 148, 103, 111, \
108, 169, 187, 195, 178, 196, 204, 186, 205, 213, \
194, 213, 220, 181, 200, 206, 168, 187, 193, 156, \
176, 181, 148, 167, 173, 146, 165, 170, 145, 162, \
167, 144, 160, 163, 146, 159, 161, 149, 160, 161, \
149, 159, 157, 158, 166, 160, 161, 170, 163, 165, \
175, 169, 171, 182, 177, 174, 184, 180, 171, 178, \
175, 161, 167, 160, 151, 155, 145, 144, 145, 137, \
140, 140, 136, 132, 135, 132, 135, 143, 140, 141, \
153, 151, 145, 158, 157, 145, 156, 157, 138, 150, \
151, 126, 138, 138, 95, 104, 103, 169, 187, 197, \
177, 195, 206, 184, 202, 213, 192, 210, 220, 188, \
207, 215, 181, 199, 207, 172, 191, 199, 166, 185, \
192, 164, 183, 191, 159, 178, 185, 160, 178, 183, \
159, 176, 180, 155, 169, 171, 147, 158, 157, 148, \
152, 145, 147, 151, 144, 147, 154, 149, 151, 160, \
158, 159, 170, 170, 160, 167, 168, 162, 167, 163, \
163, 166, 157, 158, 160, 149, 139, 140, 133, 134, \
139, 136, 140, 151, 149, 146, 161, 161, 146, 162, \
163, 143, 156, 160, 131, 145, 148, 122, 136, 138, \
99, 110, 111, 171, 189, 201, 175, 194, 206, 177, \
195, 207, 175, 194, 205, 176, 195, 205, 177, 196, \
205, 175, 194, 204, 174, 193, 202, 174, 193, 202, \
170, 190, 198, 170, 189, 196, 168, 186, 192, 162, \
178, 182, 150, 162, 163, 122, 126, 121, 111, 114, \
107, 118, 122, 117, 133, 142, 140, 143, 154, 157, \
146, 154, 155, 147, 151, 146, 144, 144, 133, 135, \
133, 120, 126, 126, 117, 133, 140, 138, 147, 160, \
161, 157, 174, 177, 158, 176, 180, 159, 175, 180, \
152, 169, 174, 141, 157, 161, 114, 128, 131, 178, \
198, 208, 182, 202, 213, 180, 200, 211, 176, 196, \
206, 171, 191, 201, 169, 189, 198, 168, 188, 197, \
168, 188, 197, 167, 188, 197, 166, 187, 195, 166, \
186, 194, 167, 186, 192, 167, 183, 188, 163, 176, \
179, 133, 139, 137, 121, 125, 117, 128, 132, 123, \
142, 150, 145, 144, 156, 158, 144, 154, 153, 137, \
141, 132, 132, 129, 115, 131, 128, 113, 129, 131, \
121, 137, 147, 144, 151, 166, 169, 161, 180, 186, \
162, 181, 188, 164, 181, 187, 161, 179, 185, 155, \
174, 180, 133, 150, 155, 174, 193, 204, 180, 200, \
211, 181, 201, 212, 181, 201, 212, 177, 197, 206, \
173, 193, 202, 172, 192, 201, 172, 192, 201, 172, \
193, 201, 170, 192, 200, 167, 188, 195, 166, 184, \
190, 165, 182, 186, 163, 177, 179, 142, 149, 145, \
129, 133, 122, 127, 132, 120, 137, 145, 137, 149, \
161, 160, 149, 160, 155, 146, 150, 139, 142, 141, \
126, 138, 138, 124, 131, 138, 129, 146, 157, 155, \
157, 173, 176, 162, 181, 188, 163, 182, 189, 165, \
182, 188, 165, 183, 189, 163, 182, 188, 143, 160, \
165, 174, 194, 205, 180, 200, 211, 183, 203, 213, \
186, 205, 216, 185, 205, 214, 183, 202, 212, 181, \
200, 210, 180, 200, 209, 179, 200, 208, 176, 198, \
206, 173, 194, 201, 171, 189, 196, 167, 184, 188, \
157, 171, 172, 141, 149, 143, 129, 134, 121, 127, \
131, 117, 133, 141, 130, 146, 157, 155, 144, 151, \
145, 140, 140, 128, 137, 134, 120, 134, 134, 122, \
127, 133, 127, 139, 149, 147, 150, 164, 167, 156, \
174, 180, 158, 176, 183, 161, 179, 185, 162, 180, \
187, 163, 182, 188, 144, 161, 167, 186, 204, 215, \
189, 208, 218, 188, 207, 217, 190, 208, 218, 190, \
209, 219, 190, 209, 219, 191, 209, 219, 191, 210, \
219, 188, 208, 217, 183, 205, 213, 179, 200, 207, \
177, 196, 202, 170, 187, 191, 149, 164, 166, 134, \
143, 137, 140, 143, 130, 141, 142, 128, 136, 140, \
130, 144, 153, 150, 142, 146, 139, 136, 137, 126, \
135, 134, 121, 137, 136, 126, 131, 132, 126, 135, \
138, 133, 144, 152, 151, 153, 165, 169, 156, 172, \
179, 158, 176, 183, 160, 178, 186, 161, 180, 188, \
143, 159, 167, 194, 212, 222, 198, 216, 226, 198, \
216, 226, 197, 215, 225, 197, 215, 225, 196, 214, \
224, 196, 214, 224, 196, 214, 224, 194, 213, 222, \
190, 212, 220, 188, 208, 215, 186, 205, 211, 180, \
197, 201, 160, 174, 176, 150, 158, 151, 146, 149, \
136, 138, 137, 125, 130, 131, 122, 143, 148, 145, \
143, 144, 137, 136, 137, 127, 135, 136, 127, 141, \
142, 137, 138, 140, 139, 134, 138, 134, 142, 148, \
149, 153, 163, 169, 159, 175, 183, 161, 180, 187, \
164, 182, 191, 165, 183, 193, 146, 162, 171, 190, \
208, 218, 196, 214, 224, 199, 217, 227, 201, 219, \
229, 200, 218, 228, 199, 217, 227, 198, 216, 226, \
197, 216, 226, 197, 216, 225, 194, 215, 223, 192, \
213, 220, 191, 210, 216, 187, 203, 207, 176, 188, \
188, 164, 169, 158, 142, 143, 130, 123, 122, 110, \
118, 117, 107, 138, 137, 129, 144, 139, 127, 137, \
134, 122, 137, 138, 130, 146, 152, 151, 144, 153, \
159, 139, 151, 154, 144, 158, 164, 152, 167, 177, \
157, 175, 186, 159, 179, 187, 162, 181, 190, 164, \
182, 192, 145, 161, 170, 191, 210, 220, 194, 213, \
223, 194, 213, 223, 195, 213, 223, 196, 214, 224, \
196, 214, 224, 196, 214, 224, 196, 215, 225, 197, \
216, 225, 195, 216, 224, 194, 214, 222, 191, 211, \
217, 188, 206, 210, 184, 198, 199, 162, 168, 159, \
135, 138, 127, 123, 126, 116, 132, 133, 123, 144, \
142, 131, 148, 141, 122, 147, 142, 123, 148, 150, \
137, 154, 164, 161, 154, 170, 176, 155, 173, 180, \
157, 175, 185, 159, 177, 190, 159, 179, 191, 159, \
180, 189, 161, 181, 191, 163, 182, 192, 145, 161, \
170, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '21084';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a550fb9467a4f12bacca8645c047c3f42';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_frog9';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{185, 181, 148, 146, 139, 106, 124, 116, 80, 139, 130, \
93, 153, 146, 110, 171, 165, 128, 204, 198, 162, \
189, 182, 147, 143, 135, 104, 144, 135, 116, 126, \
119, 102, 129, 123, 108, 126, 123, 109, 125, 123, \
109, 132, 129, 112, 100, 94, 72, 84, 80, 56, \
140, 145, 124, 120, 114, 87, 153, 134, 92, 187, \
174, 123, 172, 157, 109, 118, 96, 64, 109, 84, \
57, 136, 111, 75, 135, 113, 70, 166, 151, 111, \
197, 189, 157, 142, 134, 105, 117, 109, 78, 154, \
147, 112, 177, 165, 123, 201, 195, 161, 141, 135, \
107, 142, 137, 106, 198, 194, 156, 183, 176, 139, \
172, 164, 129, 201, 193, 161, 152, 143, 115, 126, \
117, 92, 108, 96, 79, 114, 102, 87, 146, 137, \
123, 134, 126, 114, 107, 100, 90, 96, 87, 78, \
115, 105, 89, 127, 119, 99, 157, 157, 136, 93, \
91, 66, 103, 95, 57, 186, 175, 127, 185, 171, \
125, 144, 127, 92, 113, 96, 70, 93, 80, 52, \
131, 124, 89, 164, 160, 122, 145, 142, 106, 123, \
115, 84, 132, 118, 85, 182, 163, 120, 203, 180, \
126, 175, 173, 143, 140, 139, 120, 149, 152, 129, \
192, 198, 163, 213, 213, 174, 201, 198, 162, 179, \
176, 145, 128, 123, 98, 128, 122, 100, 105, 96, \
78, 76, 68, 52, 120, 114, 100, 105, 101, 88, \
73, 66, 56, 108, 95, 86, 121, 106, 88, 133, \
121, 95, 176, 172, 144, 135, 129, 107, 78, 62, \
41, 124, 100, 64, 181, 153, 108, 193, 166, 123, \
174, 150, 118, 169, 152, 126, 173, 165, 137, 115, \
107, 79, 120, 106, 80, 126, 113, 88, 131, 117, \
86, 153, 134, 91, 197, 180, 129, 151, 147, 112, \
140, 137, 118, 113, 116, 98, 144, 144, 111, 206, \
200, 165, 209, 202, 171, 151, 143, 118, 110, 101, \
83, 115, 104, 91, 101, 88, 75, 90, 79, 63, \
129, 120, 104, 132, 126, 111, 102, 92, 82, 108, \
90, 81, 119, 99, 86, 109, 91, 69, 143, 132, \
99, 135, 132, 106, 79, 77, 63, 91, 86, 65, \
124, 117, 89, 111, 103, 73, 166, 155, 123, 185, \
179, 148, 101, 102, 79, 113, 117, 95, 132, 134, \
108, 132, 126, 103, 130, 118, 92, 149, 132, 97, \
205, 187, 145, 169, 159, 128, 137, 130, 119, 83, \
82, 78, 117, 109, 91, 176, 168, 137, 181, 175, \
146, 112, 104, 83, 102, 93, 78, 120, 110, 100, \
81, 69, 58, 82, 73, 57, 161, 155, 135, 143, \
139, 122, 84, 76, 66, 85, 67, 60, 124, 102, \
94, 124, 103, 85, 119, 105, 71, 123, 119, 90, \
88, 93, 78, 104, 113, 102, 93, 102, 91, 108, \
112, 99, 178, 177, 157, 133, 132, 114, 134, 139, \
128, 164, 171, 157, 188, 194, 171, 166, 173, 147, \
136, 140, 111, 139, 135, 97, 180, 168, 119, 155, \
143, 109, 135, 125, 108, 69, 64, 60, 138, 126, \
112, 180, 172, 142, 161, 155, 125, 99, 91, 70, \
103, 94, 79, 128, 118, 108, 105, 93, 83, 87, \
78, 62, 148, 141, 122, 141, 137, 121, 82, 75, \
64, 96, 79, 72, 129, 105, 97, 137, 111, 95, \
130, 108, 77, 144, 134, 102, 105, 110, 89, 73, \
89, 76, 86, 104, 92, 115, 125, 108, 117, 126, \
110, 113, 127, 120, 111, 127, 125, 137, 152, 143, \
171, 182, 163, 141, 157, 141, 140, 156, 141, 142, \
148, 126, 144, 140, 110, 176, 166, 135, 140, 135, \
111, 69, 70, 56, 140, 133, 111, 162, 155, 123, \
155, 149, 120, 103, 95, 73, 103, 94, 80, 122, \
111, 101, 129, 117, 107, 103, 94, 78, 119, 112, \
93, 131, 127, 110, 85, 81, 69, 108, 99, 88, \
131, 113, 103, 123, 100, 83, 129, 108, 78, 134, \
117, 80, 121, 112, 82, 81, 90, 73, 85, 99, \
85, 109, 112, 91, 108, 112, 93, 93, 107, 99, \
91, 110, 109, 93, 113, 109, 108, 126, 114, 130, \
149, 139, 150, 169, 163, 153, 167, 160, 148, 158, \
149, 189, 185, 170, 145, 145, 131, 75, 78, 65, \
120, 115, 97, 116, 106, 82, 134, 125, 97, 117, \
110, 84, 124, 117, 101, 136, 126, 116, 146, 134, \
118, 89, 80, 62, 79, 73, 57, 126, 122, 107, \
60, 57, 44, 90, 83, 73, 148, 133, 123, 145, \
126, 108, 142, 123, 90, 164, 145, 101, 133, 117, \
78, 114, 112, 88, 81, 83, 66, 104, 98, 79, \
119, 118, 98, 109, 120, 108, 108, 126, 124, 90, \
112, 109, 104, 126, 114, 127, 148, 130, 137, 158, \
141, 133, 154, 141, 138, 157, 147, 175, 176, 162, \
147, 150, 138, 99, 100, 87, 98, 93, 77, 119, \
109, 92, 158, 148, 123, 143, 135, 106, 129, 120, \
103, 142, 131, 120, 131, 118, 95, 91, 80, 62, \
88, 81, 70, 162, 159, 146, 87, 83, 70, 65, \
52, 45, 112, 96, 88, 144, 125, 106, 130, 109, \
74, 164, 145, 101, 123, 108, 67, 97, 88, 60, \
98, 90, 71, 105, 94, 80, 119, 113, 98, 102, \
105, 95, 87, 100, 98, 91, 112, 106, 110, 133, \
116, 133, 155, 136, 119, 140, 125, 117, 138, 125, \
132, 152, 141, 118, 119, 104, 122, 126, 114, 109, \
111, 97, 71, 68, 51, 97, 93, 74, 128, 122, \
99, 113, 104, 79, 101, 88, 70, 139, 123, 109, \
124, 111, 89, 102, 91, 74, 99, 92, 80, 150, \
149, 132, 114, 111, 97, 79, 68, 62, 83, 70, \
59, 105, 88, 68, 106, 87, 57, 132, 111, 76, \
123, 104, 71, 115, 99, 76, 124, 108, 90, 130, \
109, 92, 126, 103, 85, 121, 108, 92, 103, 106, \
95, 98, 115, 104, 116, 139, 124, 111, 133, 118, \
116, 136, 124, 129, 149, 139, 117, 137, 129, 115, \
116, 101, 110, 113, 101, 113, 114, 100, 83, 79, \
62, 85, 77, 61, 97, 89, 71, 112, 102, 82, \
111, 99, 79, 120, 107, 87, 120, 106, 88, 88, \
77, 63, 85, 79, 67, 145, 144, 125, 120, 118, \
102, 93, 85, 80, 96, 87, 73, 125, 111, 90, \
112, 94, 71, 122, 102, 77, 104, 86, 59, 113, \
97, 75, 145, 128, 107, 148, 124, 101, 139, 112, \
85, 145, 130, 100, 132, 133, 109, 96, 111, 93, \
94, 115, 102, 102, 122, 111, 114, 134, 124, 114, \
133, 126, 106, 125, 121, 138, 139, 125, 106, 107, \
98, 77, 77, 65, 78, 72, 56, 112, 100, 84, \
105, 92, 79, 96, 86, 71, 107, 101, 79, 109, \
101, 76, 129, 116, 97, 89, 77, 62, 89, 80, \
65, 144, 141, 120, 130, 129, 110, 88, 81, 74, \
120, 111, 95, 125, 112, 90, 117, 99, 81, 97, \
79, 59, 113, 99, 76, 92, 79, 59, 104, 88, \
67, 141, 120, 95, 166, 146, 112, 147, 139, 101, \
101, 107, 76, 79, 94, 74, 96, 112, 102, 110, \
129, 120, 106, 126, 118, 102, 121, 115, 107, 125, \
123, 121, 119, 107, 48, 43, 40, 72, 65, 58, \
105, 97, 78, 111, 99, 77, 72, 62, 49, 93, \
86, 80, 101, 92, 81, 110, 98, 80, 132, 118, \
97, 141, 125, 95, 144, 127, 105, 96, 84, 68, \
135, 129, 109, 116, 108, 93, 127, 115, 99, 122, \
105, 88, 127, 106, 89, 102, 81, 63, 105, 87, \
68, 121, 103, 86, 97, 79, 63, 91, 72, 59, \
101, 84, 58, 106, 101, 70, 74, 84, 64, 85, \
101, 91, 110, 122, 118, 113, 129, 121, 106, 126, \
116, 101, 120, 115, 84, 102, 102, 75, 71, 57, \
50, 43, 36, 96, 87, 76, 122, 111, 91, 130, \
113, 87, 83, 70, 54, 106, 99, 92, 88, 84, \
77, 89, 81, 72, 110, 96, 81, 138, 121, 95, \
122, 104, 87, 83, 69, 59, 128, 121, 104, 105, \
98, 80, 100, 90, 72, 130, 115, 97, 154, 135, \
115, 119, 99, 79, 101, 83, 64, 127, 109, 88, \
118, 100, 79, 74, 56, 37, 93, 80, 54, 110, \
109, 81, 73, 89, 68, 95, 117, 104, 99, 117, \
109, 99, 117, 107, 88, 108, 98, 79, 98, 93, \
78, 96, 96, 129, 123, 103, 90, 82, 65, 104, \
94, 76, 121, 108, 88, 129, 111, 88, 114, 101, \
82, 101, 95, 82, 70, 65, 57, 67, 59, 54, \
118, 104, 89, 156, 139, 113, 132, 114, 97, 93, \
80, 70, 123, 117, 100, 110, 107, 85, 101, 94, \
72, 147, 135, 112, 157, 142, 117, 123, 105, 83, \
109, 91, 69, 107, 90, 65, 126, 109, 80, 129, \
112, 80, 130, 117, 86, 110, 108, 83, 67, 82, \
63, 80, 102, 87, 92, 111, 99, 91, 109, 97, \
83, 103, 93, 83, 102, 97, 91, 110, 109, 122, \
116, 91, 106, 98, 73, 116, 105, 82, 99, 85, \
67, 88, 74, 59, 144, 135, 118, 89, 83, 66, \
78, 68, 57, 97, 83, 74, 128, 113, 93, 142, \
126, 95, 133, 116, 94, 116, 103, 88, 135, 130, \
108, 143, 142, 116, 121, 116, 92, 112, 103, 79, \
124, 111, 86, 136, 119, 95, 112, 94, 71, 105, \
88, 62, 119, 103, 71, 160, 144, 107, 141, 124, \
93, 102, 94, 74, 79, 89, 73, 86, 103, 90, \
99, 112, 99, 92, 108, 95, 78, 98, 87, 97, \
116, 110, 118, 136, 136, 71, 67, 47, 76, 70, \
49, 83, 75, 54, 66, 57, 38, 101, 92, 74, \
135, 127, 109, 90, 81, 65, 90, 80, 67, 105, \
93, 80, 120, 107, 86, 134, 120, 97, 109, 95, \
78, 89, 75, 64, 132, 124, 103, 151, 150, 121, \
94, 89, 74, 83, 74, 66, 89, 78, 66, 123, \
104, 83, 113, 87, 65, 92, 73, 57, 99, 82, \
62, 141, 121, 92, 142, 121, 89, 108, 96, 76, \
93, 97, 87, 66, 74, 68, 94, 96, 87, 83, \
94, 79, 73, 93, 79, 101, 122, 115, 105, 123, \
123, 113, 116, 95, 127, 127, 108, 153, 151, 133, \
108, 104, 85, 133, 127, 102, 145, 138, 113, 107, \
99, 77, 109, 101, 82, 103, 93, 76, 114, 101, \
87, 127, 114, 101, 94, 80, 70, 82, 67, 60, \
108, 97, 82, 150, 147, 120, 91, 84, 71, 82, \
71, 66, 78, 67, 58, 90, 71, 51, 106, 81, \
59, 106, 85, 72, 91, 73, 59, 106, 87, 64, \
141, 120, 91, 107, 91, 67, 100, 96, 82, 67, \
64, 55, 83, 75, 64, 87, 90, 80, 64, 79, \
74, 89, 108, 107, 95, 112, 110, 194, 199, 176, \
185, 187, 170, 161, 161, 147, 106, 103, 89, 129, \
122, 98, 138, 131, 104, 89, 82, 58, 94, 86, \
65, 102, 93, 75, 100, 86, 77, 100, 85, 77, \
97, 83, 74, 87, 73, 64, 104, 93, 78, 144, \
138, 116, 124, 116, 99, 103, 92, 78, 100, 86, \
72, 97, 80, 60, 104, 83, 61, 111, 90, 74, \
86, 67, 53, 91, 76, 60, 116, 99, 76, 100, \
84, 59, 126, 114, 95, 123, 112, 96, 114, 101, \
86, 99, 94, 86, 73, 81, 81, 84, 102, 104, \
99, 114, 109, 158, 158, 137, 142, 138, 124, 130, \
123, 116, 90, 81, 75, 90, 82, 63, 114, 106, \
85, 97, 88, 70, 92, 83, 67, 106, 96, 83, \
96, 82, 73, 80, 66, 55, 106, 93, 78, 116, \
103, 86, 118, 106, 88, 138, 129, 111, 118, 108, \
88, 112, 99, 80, 125, 110, 92, 103, 88, 67, \
98, 81, 58, 104, 82, 64, 78, 57, 44, 75, \
62, 52, 105, 96, 81, 118, 109, 88, 126, 114, \
95, 116, 104, 87, 121, 109, 94, 114, 106, 88, \
82, 89, 77, 75, 92, 88, 86, 100, 89, 170, \
165, 144, 160, 154, 141, 93, 88, 80, 56, 51, \
40, 90, 83, 62, 118, 110, 86, 110, 102, 81, \
101, 92, 77, 115, 103, 92, 113, 99, 83, 103, \
88, 71, 109, 94, 75, 112, 98, 77, 108, 95, \
75, 129, 119, 99, 134, 123, 98, 112, 98, 73, \
106, 90, 70, 105, 88, 67, 104, 86, 65, 75, \
56, 43, 70, 56, 46, 85, 77, 68, 82, 74, \
59, 120, 107, 91, 112, 99, 86, 108, 95, 83, \
95, 83, 69, 103, 92, 68, 123, 118, 99, 93, \
97, 88, 84, 87, 76, 179, 172, 150, 122, 116, \
102, 85, 82, 71, 145, 144, 126, 164, 158, 129, \
155, 148, 117, 105, 97, 71, 78, 69, 54, 91, \
79, 71, 107, 92, 78, 112, 96, 81, 106, 91, \
76, 113, 97, 82, 119, 106, 91, 118, 109, 92, \
155, 146, 124, 128, 116, 94, 115, 100, 84, 118, \
99, 82, 114, 93, 74, 88, 70, 60, 76, 62, \
55, 83, 73, 64, 77, 70, 59, 90, 83, 73, \
99, 89, 82, 103, 91, 82, 98, 84, 68, 110, \
96, 71, 106, 97, 79, 53, 54, 47, 93, 99, \
95, 137, 129, 104, 82, 75, 59, 132, 126, 112, \
185, 180, 161, 179, 170, 141, 177, 167, 136, 97, \
86, 63, 66, 53, 42, 70, 56, 51, 67, 53, \
45, 73, 60, 50, 79, 65, 57, 109, 95, 86, \
99, 88, 79, 90, 82, 72, 143, 135, 119, 123, \
112, 96, 94, 80, 70, 93, 76, 64, 110, 90, \
74, 88, 69, 60, 90, 73, 66, 94, 79, 68, \
87, 84, 73, 96, 97, 90, 90, 85, 79, 84, \
73, 62, 108, 93, 74, 115, 105, 79, 65, 64, \
48, 52, 63, 61, 88, 107, 110, 158, 147, 121, \
97, 88, 70, 90, 83, 66, 133, 125, 106, 129, \
115, 95, 131, 116, 93, 117, 103, 79, 103, 88, \
69, 93, 78, 66, 86, 75, 64, 79, 69, 58, \
61, 51, 41, 85, 75, 64, 80, 72, 60, 74, \
69, 56, 126, 121, 102, 140, 132, 113, 78, 67, \
56, 91, 80, 67, 100, 90, 75, 78, 67, 57, \
89, 78, 68, 114, 104, 88, 134, 127, 108, 107, \
100, 85, 81, 72, 60, 93, 81, 67, 111, 99, \
78, 99, 95, 72, 59, 66, 53, 66, 82, 80, \
72, 92, 94, 159, 147, 115, 103, 94, 71, 84, \
78, 60, 117, 113, 97, 120, 111, 98, 103, 91, \
74, 121, 109, 87, 113, 101, 81, 89, 79, 63, \
92, 81, 68, 104, 93, 79, 89, 79, 64, 76, \
65, 51, 95, 85, 74, 72, 66, 55, 110, 105, \
86, 155, 149, 126, 114, 104, 88, 95, 86, 70, \
90, 84, 68, 69, 62, 49, 95, 88, 72, 108, \
100, 86, 109, 100, 83, 119, 109, 88, 107, 93, \
75, 100, 85, 68, 88, 76, 58, 53, 55, 40, \
50, 62, 54, 73, 90, 86, 74, 92, 89, 148, \
138, 103, 106, 100, 73, 92, 90, 70, 114, 115, \
100, 94, 92, 80, 100, 93, 78, 109, 99, 82, \
105, 99, 85, 77, 72, 61, 82, 71, 60, 100, \
89, 73, 110, 100, 81, 94, 83, 69, 91, 78, \
72, 81, 70, 66, 71, 65, 49, 134, 128, 106, \
129, 115, 98, 86, 72, 56, 70, 60, 48, 80, \
70, 58, 143, 135, 112, 125, 116, 103, 95, 87, \
80, 94, 85, 69, 88, 74, 55, 89, 75, 56, \
82, 73, 57, 30, 35, 27, 48, 64, 59, 73, \
93, 87, 79, 98, 91, 121, 112, 89, 108, 102, \
80, 89, 85, 64, 91, 90, 71, 77, 76, 64, \
81, 76, 63, 86, 79, 63, 93, 88, 76, 78, \
76, 66, 80, 72, 61, 85, 77, 60, 98, 90, \
71, 100, 92, 77, 91, 80, 72, 97, 86, 79, \
75, 68, 55, 99, 93, 75, 119, 106, 87, 80, \
66, 51, 50, 39, 33, 68, 57, 50, 128, 120, \
97, 124, 116, 95, 102, 92, 80, 97, 85, 69, \
99, 86, 68, 91, 83, 66, 72, 72, 59, 34, \
42, 36, 58, 73, 68, 68, 88, 82, 73, 91, \
85, 112, 105, 88, 82, 74, 58, 84, 77, 61, \
96, 90, 76, 71, 71, 62, 64, 62, 51, 88, \
82, 70, 88, 87, 76, 102, 102, 94, 111, 106, \
94, 129, 124, 106, 105, 100, 80, 76, 70, 54, \
62, 54, 44, 66, 56, 47, 73, 66, 56, 70, \
63, 50, 98, 85, 65, 88, 75, 53, 50, 40, \
29, 46, 35, 31, 74, 65, 47, 91, 83, 63, \
87, 81, 65, 88, 82, 63, 84, 75, 58, 47, \
39, 29, 35, 33, 27, 48, 55, 52, 71, 87, \
82, 62, 82, 75, 66, 85, 78, 211, 206, 185, \
142, 136, 118, 70, 60, 49, 83, 74, 67, 84, \
83, 77, 77, 76, 67, 73, 71, 59, 64, 65, \
55, 71, 73, 64, 96, 92, 80, 113, 111, 94, \
111, 110, 90, 127, 123, 107, 131, 123, 108, 93, \
83, 68, 79, 71, 61, 78, 70, 59, 106, 94, \
76, 105, 94, 67, 63, 54, 34, 35, 25, 19, \
29, 20, 12, 42, 34, 24, 53, 51, 39, 105, \
107, 88, 134, 129, 111, 50, 41, 32, 101, 92, \
89, 83, 87, 82, 61, 77, 70, 67, 88, 81, \
77, 96, 90, 219, 218, 185, 205, 201, 170, 132, \
124, 100, 79, 69, 54, 52, 48, 43, 69, 68, \
62, 83, 84, 73, 59, 63, 49, 52, 53, 40, \
81, 73, 66, 78, 78, 70, 81, 84, 72, 103, \
95, 80, 144, 130, 107, 134, 125, 94, 69, 61, \
40, 62, 55, 41, 71, 65, 51, 82, 77, 55, \
83, 76, 52, 80, 75, 62, 31, 28, 23, 34, \
33, 30, 47, 46, 41, 129, 129, 117, 179, 177, \
160, 64, 55, 43, 79, 61, 53, 148, 139, 126, \
77, 83, 70, 67, 82, 75, 69, 88, 82, 240, \
235, 202, 220, 214, 181, 129, 121, 94, 64, 55, \
37, 44, 36, 28, 57, 51, 43, 62, 58, 47, \
59, 58, 45, 66, 63, 52, 64, 57, 52, 63, \
62, 57, 72, 72, 64, 85, 77, 63, 100, 88, \
67, 96, 88, 64, 55, 48, 33, 42, 36, 24, \
118, 115, 96, 113, 114, 90, 107, 110, 89, 133, \
136, 125, 85, 89, 84, 102, 106, 100, 107, 109, \
97, 153, 154, 135, 175, 174, 155, 69, 59, 49, \
25, 4, 3, 76, 48, 42, 106, 85, 77, 76, \
68, 62, 75, 80, 73, 250, 239, 209, 181, 172, \
140, 112, 104, 77, 109, 101, 81, 101, 94, 80, \
74, 68, 55, 82, 78, 66, 71, 70, 58, 60, \
59, 47, 54, 51, 39, 72, 68, 58, 72, 67, \
55, 74, 67, 48, 87, 80, 53, 138, 133, 103, \
118, 114, 91, 60, 58, 37, 176, 176, 150, 165, \
171, 143, 135, 145, 123, 166, 173, 159, 149, 155, \
144, 103, 108, 96, 99, 101, 86, 138, 139, 120, \
184, 183, 163, 135, 126, 114, 40, 19, 17, 42, \
9, 5, 63, 31, 22, 82, 62, 51, 90, 88, \
76, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '21394';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a13e30c3fb61efdd16734e0f0bdec6638';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_cat5';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{87, 111, 59, 51, 74, 43, 31, 58, 21, 108, 145, \
71, 118, 151, 73, 116, 138, 80, 187, 205, 134, \
205, 224, 141, 185, 208, 123, 143, 171, 90, 162, \
197, 100, 165, 201, 104, 126, 158, 76, 71, 98, \
39, 108, 135, 66, 113, 143, 71, 84, 117, 53, \
60, 93, 36, 55, 83, 33, 103, 128, 81, 95, \
121, 68, 74, 109, 43, 105, 142, 67, 146, 183, \
101, 127, 163, 81, 113, 146, 67, 107, 139, 61, \
92, 123, 55, 69, 95, 46, 77, 107, 41, 99, \
135, 65, 107, 134, 78, 92, 121, 62, 89, 124, \
70, 109, 146, 82, 139, 175, 93, 179, 210, 118, \
205, 227, 141, 208, 229, 140, 188, 219, 125, 136, \
171, 80, 111, 147, 68, 153, 192, 101, 139, 176, \
84, 96, 129, 57, 65, 96, 37, 96, 129, 55, \
77, 109, 45, 73, 101, 45, 101, 133, 71, 106, \
147, 77, 113, 145, 88, 93, 123, 67, 93, 120, \
55, 103, 132, 59, 125, 165, 87, 127, 167, 89, \
112, 153, 73, 103, 149, 66, 88, 133, 57, 83, \
122, 56, 82, 120, 46, 83, 121, 48, 114, 138, \
76, 75, 107, 49, 97, 136, 62, 147, 185, 95, \
186, 215, 127, 204, 226, 140, 207, 227, 141, 196, \
223, 134, 158, 196, 97, 150, 191, 94, 129, 166, \
91, 119, 155, 78, 86, 118, 55, 50, 79, 32, \
75, 107, 50, 86, 122, 52, 99, 135, 59, 124, \
156, 84, 127, 161, 85, 118, 157, 72, 124, 157, \
80, 108, 144, 71, 133, 153, 86, 150, 173, 105, \
126, 166, 90, 123, 160, 85, 121, 157, 82, 115, \
158, 80, 94, 139, 57, 107, 146, 65, 115, 150, \
69, 93, 127, 49, 87, 112, 42, 48, 81, 32, \
66, 101, 39, 125, 151, 76, 204, 224, 142, 204, \
216, 148, 158, 174, 109, 135, 166, 95, 132, 171, \
83, 130, 167, 84, 117, 146, 93, 65, 91, 43, \
43, 66, 33, 47, 72, 35, 85, 117, 54, 91, \
124, 57, 121, 157, 80, 108, 147, 74, 87, 120, \
55, 137, 156, 92, 148, 171, 108, 98, 134, 65, \
138, 154, 88, 154, 176, 106, 134, 172, 95, 142, \
170, 98, 160, 183, 115, 141, 169, 102, 95, 125, \
53, 123, 149, 72, 125, 147, 76, 101, 126, 59, \
85, 112, 50, 35, 62, 28, 52, 76, 34, 118, \
140, 80, 175, 196, 118, 104, 118, 69, 61, 76, \
42, 64, 89, 41, 85, 114, 54, 68, 91, 44, \
55, 73, 45, 54, 75, 37, 48, 70, 38, 72, \
100, 54, 99, 132, 59, 128, 160, 83, 120, 156, \
80, 79, 117, 56, 99, 126, 72, 176, 183, 126, \
144, 160, 107, 64, 90, 43, 90, 111, 59, 130, \
157, 81, 112, 148, 62, 78, 103, 47, 99, 110, \
69, 125, 149, 87, 97, 128, 57, 122, 147, 75, \
94, 116, 54, 84, 102, 51, 83, 111, 55, 24, \
46, 16, 44, 63, 30, 81, 107, 52, 125, 154, \
76, 42, 63, 23, 4, 20, 6, 31, 52, 23, \
52, 73, 39, 37, 53, 28, 26, 39, 21, 49, \
70, 30, 69, 96, 49, 84, 115, 65, 105, 136, \
78, 111, 139, 73, 94, 128, 58, 74, 105, 49, \
115, 135, 75, 156, 168, 100, 102, 126, 69, 66, \
88, 54, 56, 79, 42, 128, 152, 81, 129, 159, \
76, 64, 90, 49, 43, 53, 39, 88, 116, 62, \
105, 140, 63, 110, 136, 70, 69, 96, 45, 64, \
79, 43, 62, 78, 45, 38, 58, 26, 46, 67, \
35, 63, 93, 42, 110, 141, 73, 39, 61, 23, \
35, 58, 34, 57, 87, 50, 57, 86, 47, 66, \
88, 51, 61, 76, 51, 41, 58, 31, 63, 87, \
46, 65, 91, 55, 96, 119, 86, 79, 103, 58, \
87, 120, 58, 90, 115, 56, 122, 143, 75, 104, \
129, 62, 60, 87, 44, 38, 61, 38, 50, 67, \
36, 117, 135, 74, 128, 152, 82, 78, 101, 50, \
38, 54, 36, 60, 90, 43, 102, 126, 62, 75, \
90, 47, 33, 57, 23, 61, 79, 41, 105, 120, \
73, 60, 75, 55, 59, 76, 45, 72, 100, 45, \
69, 96, 46, 52, 71, 37, 72, 93, 52, 101, \
132, 70, 91, 125, 59, 110, 137, 76, 67, 83, \
51, 23, 37, 24, 26, 45, 24, 52, 71, 48, \
91, 110, 79, 84, 107, 56, 93, 124, 57, 114, \
138, 76, 93, 117, 53, 76, 105, 52, 45, 62, \
42, 26, 43, 36, 65, 80, 59, 96, 121, 66, \
121, 143, 76, 117, 134, 68, 94, 118, 69, 79, \
109, 53, 56, 70, 34, 29, 37, 20, 25, 49, \
19, 52, 76, 25, 102, 115, 53, 133, 141, 132, \
96, 103, 82, 96, 112, 71, 83, 101, 73, 64, \
73, 53, 96, 104, 69, 109, 126, 72, 107, 131, \
68, 125, 145, 86, 79, 92, 61, 27, 41, 25, \
43, 62, 39, 72, 90, 54, 114, 131, 82, 118, \
140, 80, 110, 138, 70, 90, 117, 71, 47, 74, \
42, 70, 93, 74, 43, 56, 58, 26, 46, 51, \
71, 78, 67, 85, 103, 56, 77, 92, 44, 137, \
143, 97, 131, 156, 88, 67, 89, 39, 11, 18, \
6, 9, 19, 6, 29, 56, 23, 48, 75, 27, \
62, 85, 30, 156, 161, 153, 166, 169, 158, 115, \
125, 99, 92, 106, 85, 93, 97, 81, 133, 129, \
111, 143, 140, 118, 99, 109, 71, 72, 83, 50, \
37, 46, 27, 30, 45, 20, 56, 76, 37, 96, \
115, 61, 119, 140, 76, 105, 129, 66, 96, 122, \
64, 63, 92, 69, 27, 55, 58, 57, 78, 88, \
35, 57, 67, 32, 60, 68, 57, 59, 57, 83, \
83, 57, 41, 44, 27, 55, 52, 41, 71, 86, \
40, 44, 56, 27, 17, 27, 17, 24, 41, 19, \
40, 68, 34, 40, 66, 31, 46, 72, 29, 113, \
117, 113, 97, 107, 93, 84, 96, 69, 67, 81, \
51, 69, 78, 54, 117, 111, 98, 187, 169, 160, \
138, 137, 107, 42, 47, 31, 6, 12, 6, 25, \
38, 16, 81, 98, 51, 120, 142, 86, 89, 116, \
58, 86, 112, 55, 72, 94, 54, 60, 83, 70, \
38, 63, 68, 65, 90, 92, 42, 66, 65, 45, \
63, 70, 70, 74, 75, 92, 86, 83, 65, 58, \
59, 55, 52, 51, 45, 49, 38, 23, 30, 18, \
12, 25, 13, 27, 44, 26, 32, 52, 26, 35, \
56, 25, 52, 76, 37, 75, 79, 74, 45, 61, \
44, 87, 98, 72, 85, 94, 62, 61, 66, 49, \
85, 79, 74, 148, 132, 122, 146, 136, 115, 76, \
71, 62, 70, 69, 66, 69, 76, 58, 87, 107, \
56, 94, 117, 66, 73, 93, 58, 66, 77, 55, \
64, 70, 51, 65, 80, 57, 61, 83, 61, 87, \
109, 92, 73, 91, 73, 83, 91, 83, 86, 83, \
74, 95, 85, 80, 81, 71, 71, 83, 76, 74, \
66, 63, 59, 32, 32, 28, 34, 37, 34, 38, \
46, 40, 21, 36, 22, 25, 43, 23, 43, 63, \
29, 51, 62, 42, 46, 71, 40, 75, 92, 57, \
74, 78, 51, 48, 48, 41, 75, 68, 70, 127, \
113, 102, 159, 141, 130, 145, 129, 123, 133, 121, \
117, 110, 105, 93, 92, 104, 70, 83, 99, 67, \
73, 80, 64, 83, 79, 77, 79, 78, 72, 76, \
94, 57, 95, 123, 71, 120, 145, 103, 93, 121, \
75, 95, 106, 74, 99, 90, 69, 111, 95, 88, \
93, 82, 79, 78, 69, 67, 67, 58, 59, 58, \
51, 54, 61, 55, 61, 54, 53, 56, 25, 31, \
29, 12, 24, 17, 30, 43, 21, 43, 50, 23, \
62, 79, 42, 52, 68, 33, 20, 23, 10, 49, \
46, 46, 87, 79, 79, 128, 112, 102, 147, 129, \
120, 153, 135, 123, 145, 128, 112, 134, 117, 105, \
130, 124, 110, 115, 114, 101, 108, 104, 97, 104, \
94, 94, 86, 85, 82, 79, 99, 59, 132, 162, \
97, 150, 171, 114, 104, 125, 63, 104, 104, 60, \
113, 96, 71, 94, 79, 74, 76, 68, 67, 78, \
69, 68, 72, 63, 65, 68, 60, 64, 75, 65, \
68, 75, 69, 71, 57, 55, 58, 40, 41, 43, \
28, 34, 25, 127, 114, 100, 99, 89, 69, 65, \
64, 44, 48, 47, 47, 86, 83, 85, 109, 100, \
94, 137, 119, 108, 131, 114, 101, 151, 137, 112, \
162, 143, 116, 168, 143, 126, 159, 137, 125, 136, \
120, 111, 133, 122, 120, 118, 106, 111, 93, 88, \
88, 80, 93, 62, 136, 155, 98, 169, 173, 115, \
138, 120, 63, 134, 101, 63, 106, 81, 61, 54, \
49, 48, 46, 43, 47, 57, 52, 54, 70, 65, \
66, 77, 71, 70, 82, 73, 70, 80, 71, 68, \
74, 66, 67, 68, 62, 64, 51, 52, 51, 184, \
167, 163, 159, 137, 136, 99, 86, 75, 86, 80, \
73, 115, 107, 107, 120, 110, 102, 132, 115, 104, \
160, 137, 115, 178, 162, 128, 147, 133, 108, 160, \
136, 120, 178, 149, 132, 144, 125, 114, 128, 117, \
115, 131, 118, 121, 131, 122, 124, 94, 99, 89, \
90, 109, 75, 131, 134, 81, 156, 117, 62, 140, \
99, 64, 77, 68, 54, 40, 42, 40, 22, 24, \
27, 35, 35, 43, 61, 57, 59, 74, 67, 62, \
75, 65, 58, 80, 69, 63, 68, 61, 54, 70, \
68, 59, 71, 71, 65, 173, 161, 150, 203, 177, \
178, 143, 123, 118, 115, 107, 91, 123, 112, 104, \
139, 123, 112, 142, 121, 111, 162, 135, 119, 149, \
131, 101, 140, 124, 104, 184, 160, 145, 198, 172, \
156, 149, 133, 124, 134, 127, 124, 125, 115, 117, \
128, 119, 122, 105, 105, 108, 74, 89, 74, 107, \
111, 74, 157, 125, 70, 135, 111, 65, 83, 92, \
64, 55, 66, 47, 54, 59, 48, 46, 49, 49, \
52, 51, 53, 65, 59, 61, 76, 65, 67, 80, \
77, 65, 73, 77, 57, 65, 69, 52, 53, 55, \
45, 110, 106, 80, 171, 146, 137, 153, 133, 129, \
127, 116, 105, 110, 96, 85, 140, 119, 98, 172, \
144, 122, 154, 123, 107, 117, 86, 60, 138, 107, \
84, 207, 177, 158, 194, 172, 159, 140, 128, 121, \
105, 100, 97, 112, 105, 106, 123, 114, 118, 108, \
101, 109, 95, 101, 101, 104, 102, 88, 168, 143, \
95, 157, 147, 89, 127, 140, 90, 98, 112, 70, \
89, 94, 77, 55, 58, 56, 52, 55, 53, 75, \
76, 77, 70, 65, 71, 53, 61, 38, 75, 93, \
52, 63, 75, 47, 39, 46, 32, 68, 82, 41, \
98, 95, 65, 100, 90, 78, 105, 92, 88, 118, \
101, 91, 168, 147, 114, 169, 142, 106, 134, 98, \
74, 147, 102, 71, 154, 109, 84, 201, 168, 149, \
180, 161, 152, 113, 101, 95, 81, 73, 67, 100, \
94, 92, 108, 100, 100, 122, 109, 117, 130, 127, \
135, 108, 102, 104, 167, 144, 110, 203, 200, 140, \
185, 196, 133, 159, 170, 113, 95, 99, 79, 71, \
74, 65, 83, 94, 72, 80, 95, 73, 60, 68, \
56, 76, 88, 49, 107, 127, 68, 65, 88, 39, \
36, 52, 27, 57, 90, 40, 53, 81, 28, 58, \
66, 36, 106, 95, 80, 134, 118, 99, 162, 143, \
111, 133, 110, 82, 109, 77, 53, 137, 92, 61, \
161, 120, 102, 224, 203, 196, 172, 157, 152, 104, \
90, 81, 96, 85, 75, 84, 76, 69, 103, 94, \
89, 138, 120, 125, 144, 135, 143, 124, 117, 123, \
155, 139, 116, 170, 181, 121, 152, 169, 99, 143, \
159, 90, 136, 144, 94, 127, 136, 92, 103, 122, \
71, 91, 117, 70, 62, 82, 45, 130, 138, 86, \
162, 176, 107, 91, 124, 53, 46, 72, 32, 55, \
90, 41, 80, 111, 52, 74, 93, 50, 91, 88, \
67, 123, 107, 88, 121, 100, 75, 140, 114, 93, \
168, 136, 108, 171, 137, 112, 182, 158, 154, 219, \
212, 216, 165, 154, 149, 115, 103, 95, 96, 88, \
80, 97, 87, 80, 90, 82, 76, 110, 97, 98, \
144, 135, 139, 139, 133, 137, 146, 141, 124, 125, \
149, 87, 100, 133, 58, 94, 122, 51, 120, 140, \
66, 143, 161, 92, 114, 134, 72, 88, 109, 53, \
71, 96, 40, 101, 122, 59, 129, 140, 75, 105, \
134, 64, 87, 119, 70, 70, 97, 50, 110, 127, \
72, 75, 95, 42, 70, 82, 52, 127, 119, 101, \
156, 138, 121, 187, 169, 149, 190, 168, 138, 203, \
185, 164, 218, 212, 201, 200, 202, 189, 148, 145, \
134, 127, 126, 118, 106, 102, 94, 122, 109, 98, \
116, 106, 96, 112, 102, 98, 127, 119, 121, 123, \
119, 125, 135, 139, 131, 119, 141, 93, 71, 104, \
44, 67, 98, 37, 77, 106, 42, 87, 113, 53, \
98, 119, 61, 103, 121, 60, 91, 119, 54, 62, \
99, 32, 94, 107, 50, 86, 106, 48, 51, 83, \
34, 77, 102, 50, 97, 113, 56, 86, 107, 46, \
53, 82, 29, 104, 114, 86, 159, 159, 142, 151, \
164, 135, 127, 138, 98, 142, 151, 112, 154, 166, \
122, 139, 154, 104, 116, 130, 93, 124, 135, 106, \
142, 141, 116, 144, 128, 108, 136, 118, 101, 166, \
149, 141, 148, 137, 141, 88, 89, 99, 78, 86, \
89, 67, 78, 58, 53, 70, 32, 71, 98, 41, \
67, 100, 41, 65, 97, 40, 72, 102, 39, 89, \
118, 49, 88, 122, 54, 55, 91, 27, 79, 96, \
41, 82, 103, 50, 43, 73, 30, 81, 106, 50, \
110, 128, 69, 113, 135, 69, 61, 99, 40, 86, \
113, 75, 101, 124, 87, 86, 121, 62, 84, 121, \
45, 95, 128, 53, 104, 134, 60, 122, 149, 74, \
113, 146, 71, 123, 148, 80, 168, 170, 124, 151, \
132, 110, 133, 112, 94, 170, 149, 139, 161, 149, \
151, 70, 76, 83, 34, 45, 45, 46, 56, 39, \
80, 95, 61, 98, 124, 64, 95, 131, 57, 101, \
138, 63, 95, 130, 57, 104, 138, 67, 93, 129, \
60, 69, 103, 37, 86, 110, 52, 68, 95, 41, \
40, 73, 33, 71, 99, 43, 91, 114, 57, 111, \
136, 68, 85, 123, 58, 83, 125, 62, 77, 117, \
49, 76, 111, 36, 87, 128, 42, 92, 134, 48, \
103, 140, 58, 137, 174, 94, 127, 167, 85, 130, \
157, 78, 175, 176, 120, 153, 133, 109, 144, 125, \
110, 181, 162, 153, 158, 148, 145, 85, 95, 92, \
82, 93, 74, 120, 138, 93, 125, 153, 97, 103, \
133, 66, 106, 136, 64, 120, 152, 76, 110, 142, \
65, 120, 152, 79, 104, 137, 64, 82, 111, 42, \
84, 117, 51, 60, 98, 38, 35, 75, 41, 55, \
88, 29, 90, 116, 56, 106, 134, 61, 81, 116, \
44, 81, 125, 47, 92, 134, 53, 105, 131, 59, \
95, 124, 55, 98, 135, 61, 103, 143, 65, 121, \
163, 81, 120, 156, 84, 136, 155, 90, 175, 169, \
117, 150, 127, 100, 135, 118, 103, 170, 150, 141, \
134, 128, 118, 67, 84, 63, 103, 116, 73, 126, \
158, 86, 106, 147, 69, 108, 138, 65, 136, 160, \
99, 135, 154, 93, 124, 153, 82, 128, 157, 80, \
114, 146, 67, 103, 135, 60, 81, 121, 53, 69, \
111, 54, 57, 96, 61, 59, 89, 34, 88, 112, \
53, 100, 129, 61, 97, 131, 70, 99, 133, 68, \
101, 134, 60, 100, 129, 56, 101, 129, 60, 104, \
140, 68, 94, 134, 60, 121, 161, 71, 143, 176, \
91, 148, 166, 101, 181, 174, 122, 178, 156, 120, \
167, 143, 119, 191, 165, 145, 132, 129, 106, 97, \
122, 72, 140, 163, 94, 103, 146, 65, 104, 145, \
63, 136, 160, 82, 135, 163, 87, 175, 186, 132, \
157, 199, 159, 108, 157, 94, 112, 153, 83, 114, \
151, 99, 75, 119, 78, 98, 135, 97, 123, 149, \
101, 97, 123, 65, 99, 119, 58, 94, 120, 59, \
106, 135, 81, 77, 106, 44, 91, 123, 48, 96, \
130, 55, 103, 143, 64, 124, 166, 84, 132, 169, \
92, 148, 180, 91, 153, 186, 93, 152, 179, 102, \
177, 183, 120, 171, 155, 114, 157, 127, 99, 180, \
150, 124, 153, 144, 110, 140, 154, 91, 144, 170, \
90, 96, 139, 55, 117, 150, 71, 153, 170, 98, \
123, 155, 73, 163, 185, 116, 156, 217, 195, 114, \
198, 166, 101, 156, 107, 108, 145, 114, 102, 142, \
105, 148, 179, 119, 157, 185, 109, 75, 105, 61, \
92, 107, 47, 109, 124, 66, 85, 104, 50, 94, \
118, 56, 113, 141, 68, 121, 153, 75, 129, 166, \
81, 111, 147, 62, 119, 154, 75, 135, 176, 87, \
150, 179, 90, 158, 179, 104, 180, 193, 127, 173, \
153, 116, 162, 129, 107, 189, 158, 134, 160, 147, \
112, 174, 177, 113, 132, 163, 77, 91, 134, 47, \
136, 163, 86, 163, 177, 109, 126, 157, 76, 157, \
182, 96, 118, 173, 109, 112, 192, 159, 111, 179, \
148, 101, 151, 102, 146, 181, 110, 185, 197, 118, \
149, 175, 90, 59, 99, 66, 85, 106, 47, 110, \
130, 77, 102, 128, 79, 121, 148, 107, 119, 149, \
101, 140, 174, 101, 160, 191, 105, 157, 182, 97, \
148, 177, 101, 114, 161, 77, 140, 174, 88, 176, \
189, 115, 183, 200, 126, 187, 171, 127, 190, 156, \
132, 192, 161, 136, 148, 142, 105, 178, 185, 120, \
117, 156, 66, 89, 134, 45, 138, 166, 87, 138, \
158, 83, 123, 154, 65, 149, 174, 92, 125, 165, \
73, 101, 156, 84, 85, 146, 111, 91, 143, 79, \
133, 167, 78, 189, 195, 123, 156, 179, 102, 48, \
87, 57, 84, 120, 68, 118, 163, 125, 132, 180, \
145, 109, 153, 136, 119, 160, 144, 125, 172, 116, \
133, 174, 88, 172, 197, 108, 198, 218, 145, 156, \
188, 113, 141, 184, 92, 165, 189, 101, 169, 195, \
104, 194, 203, 134, 230, 202, 163, 217, 195, 155, \
169, 176, 124, 156, 176, 100, 106, 151, 60, 96, \
140, 52, 139, 169, 88, 127, 155, 77, 117, 147, \
66, 131, 168, 78, 119, 165, 68, 113, 162, 73, \
93, 135, 73, 98, 138, 64, 119, 159, 68, 161, \
185, 104, 139, 165, 86, 15, 47, 49, 42, 88, \
83, 86, 140, 144, 82, 133, 125, 85, 127, 97, \
132, 168, 148, 131, 177, 146, 122, 170, 96, 146, \
188, 85, 182, 214, 122, 211, 225, 138, 192, 216, \
123, 167, 203, 111, 164, 194, 100, 174, 201, 116, \
208, 208, 156, 196, 201, 147, 180, 194, 118, 141, \
176, 85, 111, 152, 62, 101, 141, 57, 157, 178, \
104, 134, 162, 85, 134, 161, 82, 132, 167, 76, \
112, 159, 63, 117, 160, 79, 101, 140, 72, 104, \
140, 61, 111, 145, 56, 158, 177, 100, 138, 157, \
86, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '21704';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a6c407b709e37e4ae7fba51e1c8c62eaf';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_ship4';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{189, 208, 215, 189, 208, 215, 189, 208, 215, 189, 208, \
215, 190, 208, 216, 192, 208, 216, 192, 208, 216, \
191, 208, 216, 191, 208, 216, 191, 208, 216, 191, \
209, 214, 191, 209, 213, 191, 209, 213, 191, 209, \
213, 191, 209, 213, 191, 209, 213, 191, 209, 213, \
191, 209, 213, 191, 209, 213, 191, 209, 213, 191, \
208, 213, 189, 207, 213, 188, 207, 213, 188, 207, \
213, 188, 207, 213, 188, 207, 213, 188, 205, 212, \
189, 206, 212, 190, 207, 214, 189, 206, 213, 189, \
206, 213, 189, 207, 210, 188, 207, 214, 188, 207, \
214, 189, 208, 215, 189, 208, 215, 188, 209, 215, \
187, 209, 216, 187, 209, 216, 186, 208, 214, 185, \
207, 214, 185, 208, 213, 185, 208, 211, 185, 208, \
211, 185, 208, 211, 185, 208, 210, 185, 208, 211, \
185, 208, 211, 185, 208, 211, 185, 208, 211, 185, \
208, 211, 185, 208, 211, 185, 207, 210, 186, 205, \
209, 186, 205, 209, 186, 205, 209, 186, 205, 209, \
186, 205, 209, 186, 204, 208, 187, 205, 209, 189, \
206, 211, 188, 205, 210, 187, 205, 210, 188, 206, \
208, 187, 206, 213, 188, 207, 214, 189, 208, 215, \
189, 208, 215, 184, 207, 213, 181, 208, 212, 181, \
208, 212, 180, 207, 212, 180, 207, 212, 180, 207, \
211, 180, 207, 209, 180, 207, 208, 180, 208, 209, \
180, 208, 209, 180, 207, 208, 180, 207, 208, 180, \
207, 208, 180, 207, 208, 180, 207, 208, 180, 207, \
208, 182, 207, 208, 184, 204, 205, 184, 204, 205, \
184, 204, 205, 185, 204, 206, 184, 204, 205, 185, \
204, 206, 187, 205, 207, 188, 206, 208, 187, 205, \
207, 187, 205, 207, 187, 205, 205, 183, 202, 209, \
183, 202, 209, 185, 204, 211, 184, 203, 210, 180, \
203, 209, 177, 204, 209, 177, 204, 209, 177, 204, \
209, 176, 204, 208, 177, 204, 208, 178, 206, 207, \
176, 204, 205, 176, 204, 205, 177, 204, 205, 178, \
205, 206, 179, 207, 208, 179, 207, 208, 179, 207, \
208, 179, 207, 207, 177, 205, 206, 180, 205, 206, \
183, 204, 203, 184, 204, 203, 184, 204, 203, 185, \
205, 204, 184, 204, 203, 186, 205, 205, 186, 204, \
204, 186, 204, 205, 186, 204, 204, 188, 206, 206, \
187, 206, 205, 166, 185, 192, 167, 186, 193, 165, \
184, 191, 164, 183, 190, 166, 187, 194, 167, 190, \
196, 166, 189, 195, 167, 189, 195, 167, 190, 196, \
168, 191, 197, 172, 195, 198, 170, 194, 196, 169, \
193, 195, 171, 195, 197, 171, 194, 196, 170, 194, \
196, 172, 195, 197, 169, 193, 195, 168, 192, 194, \
173, 197, 199, 171, 194, 195, 174, 195, 193, 176, \
196, 194, 167, 187, 185, 166, 186, 184, 175, 195, \
193, 185, 204, 202, 179, 198, 196, 180, 199, 197, \
174, 193, 191, 177, 196, 194, 180, 199, 197, 165, \
184, 191, 158, 177, 184, 156, 174, 181, 154, 172, \
179, 151, 169, 176, 151, 168, 176, 151, 169, 176, \
146, 163, 171, 147, 165, 172, 150, 167, 174, 151, \
169, 174, 151, 169, 173, 147, 164, 169, 150, 168, \
172, 149, 167, 171, 147, 165, 169, 148, 166, 170, \
150, 168, 172, 147, 165, 169, 156, 174, 178, 155, \
174, 175, 152, 173, 168, 152, 173, 168, 152, 173, \
168, 151, 172, 167, 154, 174, 170, 151, 170, 166, \
148, 166, 163, 155, 174, 170, 153, 172, 168, 151, \
169, 166, 149, 168, 165, 149, 170, 179, 141, 162, \
171, 138, 160, 169, 138, 159, 168, 144, 162, 172, \
148, 164, 174, 152, 168, 178, 135, 150, 161, 133, \
149, 159, 136, 152, 162, 140, 155, 161, 140, 156, \
162, 134, 151, 157, 144, 161, 166, 150, 165, 172, \
149, 164, 171, 140, 156, 162, 143, 158, 165, 138, \
154, 160, 144, 160, 166, 145, 162, 166, 132, 154, \
151, 130, 153, 149, 142, 165, 161, 139, 162, 158, \
130, 153, 149, 126, 147, 144, 133, 153, 150, 140, \
160, 157, 144, 164, 161, 141, 161, 158, 130, 150, \
147, 123, 159, 178, 124, 159, 178, 123, 158, 177, \
120, 155, 174, 122, 154, 172, 125, 155, 173, 124, \
153, 171, 124, 154, 171, 125, 155, 172, 127, 154, \
171, 130, 153, 165, 125, 155, 165, 122, 157, 165, \
128, 160, 169, 135, 159, 171, 140, 163, 176, 138, \
162, 174, 137, 161, 173, 137, 162, 174, 133, 157, \
169, 129, 155, 165, 128, 158, 164, 127, 157, 162, \
127, 157, 163, 124, 154, 159, 119, 149, 155, 118, \
148, 151, 119, 150, 152, 122, 152, 155, 129, 159, \
162, 121, 151, 154, 124, 153, 154, 113, 154, 177, \
113, 155, 177, 114, 156, 178, 116, 157, 179, 115, \
155, 175, 115, 154, 173, 117, 156, 175, 118, 157, \
176, 118, 157, 176, 120, 156, 175, 123, 154, 170, \
118, 157, 169, 115, 160, 170, 119, 160, 172, 127, \
158, 173, 127, 158, 172, 126, 158, 171, 126, 158, \
171, 126, 158, 171, 126, 158, 171, 126, 159, 170, \
125, 161, 170, 123, 160, 168, 122, 159, 167, 123, \
160, 168, 123, 159, 168, 122, 159, 164, 123, 160, \
164, 125, 162, 166, 125, 163, 166, 125, 163, 166, \
128, 165, 168, 105, 147, 169, 105, 147, 169, 105, \
147, 169, 107, 149, 171, 105, 148, 167, 103, 147, \
164, 105, 149, 166, 106, 150, 167, 106, 150, 167, \
108, 150, 167, 111, 149, 166, 108, 151, 166, 106, \
153, 167, 109, 154, 168, 115, 153, 170, 116, 154, \
168, 115, 154, 167, 115, 154, 167, 116, 155, 167, \
119, 157, 170, 120, 160, 171, 118, 161, 168, 116, \
160, 166, 114, 157, 164, 114, 157, 164, 116, 160, \
166, 116, 160, 164, 117, 161, 163, 117, 161, 164, \
115, 160, 162, 116, 160, 163, 114, 157, 161, 101, \
145, 166, 100, 145, 166, 100, 144, 165, 98, 143, \
164, 98, 145, 163, 99, 148, 163, 100, 150, 165, \
101, 151, 165, 101, 151, 165, 102, 150, 166, 105, \
150, 168, 104, 152, 168, 104, 153, 169, 106, 154, \
171, 109, 155, 172, 109, 154, 169, 108, 154, 167, \
108, 154, 167, 107, 154, 166, 108, 155, 167, 110, \
156, 167, 110, 158, 166, 109, 157, 164, 108, 156, \
163, 109, 157, 164, 110, 158, 164, 109, 157, 162, \
110, 158, 162, 111, 160, 163, 112, 161, 165, 111, \
160, 163, 111, 159, 165, 98, 145, 165, 99, 145, \
166, 100, 146, 167, 101, 147, 167, 98, 148, 164, \
96, 149, 163, 98, 151, 165, 95, 148, 162, 94, \
147, 161, 95, 147, 162, 99, 149, 166, 101, 150, \
167, 104, 151, 169, 101, 150, 167, 103, 152, 169, \
103, 153, 167, 102, 154, 165, 103, 154, 165, 103, \
154, 165, 103, 154, 165, 104, 154, 165, 105, 155, \
164, 105, 155, 163, 105, 155, 164, 105, 155, 164, \
105, 155, 164, 104, 155, 160, 106, 157, 161, 107, \
158, 162, 107, 157, 161, 106, 156, 160, 106, 156, \
163, 99, 147, 167, 99, 147, 167, 100, 148, 168, \
102, 150, 170, 101, 151, 168, 99, 151, 165, 98, \
150, 164, 99, 151, 165, 100, 151, 166, 99, 151, \
165, 100, 152, 165, 106, 153, 168, 112, 156, 172, \
107, 153, 168, 100, 152, 166, 100, 153, 166, 101, \
153, 165, 101, 153, 166, 103, 155, 167, 103, 155, \
168, 103, 154, 166, 103, 152, 163, 103, 152, 163, \
104, 152, 164, 104, 153, 164, 104, 153, 164, 103, \
152, 160, 104, 153, 160, 102, 152, 158, 105, 154, \
160, 103, 153, 159, 103, 152, 159, 100, 150, 169, \
99, 150, 169, 99, 150, 169, 101, 151, 170, 103, \
152, 169, 103, 151, 166, 101, 149, 164, 101, 150, \
165, 102, 150, 165, 101, 150, 164, 100, 152, 161, \
109, 152, 165, 124, 162, 176, 116, 158, 171, 102, \
153, 163, 102, 153, 166, 103, 152, 167, 103, 153, \
167, 104, 154, 169, 104, 154, 169, 106, 154, 168, \
108, 155, 167, 108, 155, 167, 108, 154, 167, 108, \
154, 166, 108, 154, 167, 109, 156, 166, 110, 157, \
166, 107, 154, 163, 107, 154, 164, 105, 153, 162, \
106, 152, 160, 95, 146, 165, 95, 146, 165, 96, \
148, 166, 98, 149, 168, 100, 148, 165, 100, 147, \
163, 102, 148, 164, 103, 149, 165, 102, 148, 164, \
102, 150, 163, 105, 154, 161, 121, 160, 169, 142, \
175, 187, 114, 152, 162, 100, 148, 154, 103, 151, \
163, 104, 149, 165, 103, 148, 163, 103, 148, 164, \
103, 149, 165, 103, 149, 165, 105, 148, 163, 105, \
148, 163, 105, 148, 164, 106, 149, 164, 106, 149, \
164, 105, 148, 160, 107, 150, 161, 107, 150, 161, \
108, 151, 162, 106, 149, 161, 108, 150, 159, 99, \
148, 168, 96, 145, 165, 97, 146, 166, 100, 149, \
168, 99, 149, 164, 99, 149, 162, 100, 149, 162, \
102, 149, 163, 102, 147, 161, 108, 150, 164, 110, \
148, 155, 114, 147, 153, 145, 177, 181, 148, 182, \
184, 155, 192, 193, 131, 164, 171, 144, 169, 180, \
161, 181, 190, 127, 153, 162, 105, 148, 157, 99, \
150, 162, 102, 147, 163, 102, 146, 162, 101, 146, \
162, 100, 145, 161, 100, 144, 160, 105, 146, 160, \
107, 146, 159, 108, 147, 159, 108, 148, 160, 107, \
146, 158, 107, 147, 157, 96, 144, 164, 95, 143, \
163, 94, 142, 162, 96, 144, 164, 96, 145, 161, \
97, 146, 161, 108, 156, 171, 109, 154, 170, 112, \
154, 170, 110, 148, 167, 95, 125, 146, 86, 116, \
135, 91, 121, 138, 110, 141, 154, 104, 135, 146, \
114, 141, 153, 132, 149, 160, 156, 165, 172, 143, \
159, 165, 115, 151, 156, 98, 148, 156, 97, 147, \
159, 99, 149, 161, 99, 149, 161, 97, 147, 160, \
97, 147, 159, 100, 147, 158, 101, 146, 157, 102, \
147, 158, 102, 148, 159, 104, 149, 160, 102, 149, \
157, 91, 139, 159, 93, 141, 161, 94, 142, 162, \
93, 141, 161, 94, 142, 162, 97, 143, 163, 98, \
141, 163, 95, 135, 158, 84, 121, 144, 79, 113, \
141, 78, 107, 147, 85, 114, 154, 87, 117, 155, \
95, 125, 160, 99, 129, 162, 104, 133, 158, 110, \
131, 148, 139, 151, 161, 170, 184, 190, 154, 182, \
186, 109, 150, 155, 96, 147, 153, 100, 151, 158, \
100, 151, 157, 99, 150, 156, 97, 148, 155, 97, \
149, 156, 97, 150, 157, 97, 150, 156, 94, 147, \
153, 96, 149, 156, 95, 148, 153, 90, 138, 158, \
89, 137, 157, 91, 139, 159, 89, 137, 157, 90, \
135, 159, 90, 131, 158, 36, 74, 102, 23, 58, \
87, 27, 61, 90, 34, 67, 100, 36, 67, 114, \
36, 67, 113, 41, 72, 116, 40, 72, 113, 48, \
80, 119, 48, 81, 111, 71, 97, 118, 123, 138, \
151, 159, 173, 179, 163, 183, 187, 126, 156, 160, \
101, 142, 146, 101, 143, 147, 99, 140, 144, 101, \
142, 146, 98, 140, 144, 98, 144, 150, 99, 147, \
153, 100, 148, 154, 101, 148, 154, 100, 148, 154, \
99, 146, 151, 90, 138, 158, 86, 134, 154, 88, \
136, 156, 87, 135, 155, 88, 133, 157, 90, 133, \
160, 54, 94, 122, 25, 62, 91, 21, 56, 86, \
14, 47, 79, 8, 44, 80, 9, 46, 81, 14, \
51, 83, 14, 52, 82, 16, 54, 82, 17, 53, \
81, 23, 54, 77, 33, 56, 69, 64, 82, 88, \
89, 108, 114, 126, 147, 153, 160, 186, 191, 172, \
198, 204, 162, 188, 193, 147, 173, 178, 146, 173, \
178, 120, 153, 161, 105, 140, 149, 103, 137, 146, \
102, 137, 146, 98, 132, 141, 101, 134, 142, 90, \
138, 158, 91, 139, 159, 90, 138, 158, 91, 139, \
159, 88, 137, 158, 82, 130, 153, 78, 124, 147, \
80, 122, 147, 70, 110, 136, 58, 97, 123, 46, \
89, 111, 41, 84, 104, 41, 85, 101, 43, 87, \
101, 40, 85, 97, 37, 78, 98, 42, 79, 99, \
51, 82, 93, 69, 96, 102, 92, 116, 124, 121, \
142, 153, 143, 163, 171, 158, 177, 186, 174, 193, \
202, 186, 205, 214, 193, 213, 222, 175, 202, 211, \
157, 186, 195, 144, 174, 183, 149, 179, 187, 158, \
187, 196, 169, 197, 204, 87, 135, 155, 90, 138, \
158, 87, 135, 155, 89, 137, 157, 83, 135, 152, \
82, 137, 152, 84, 136, 152, 83, 132, 149, 81, \
129, 147, 79, 124, 143, 73, 120, 136, 70, 117, \
131, 70, 118, 129, 70, 118, 126, 66, 114, 121, \
68, 111, 126, 73, 113, 128, 82, 122, 131, 95, \
133, 139, 99, 134, 145, 99, 131, 144, 97, 129, \
137, 98, 130, 138, 101, 133, 141, 105, 137, 145, \
114, 146, 154, 113, 150, 155, 113, 153, 156, 105, \
145, 148, 108, 147, 151, 110, 150, 153, 120, 157, \
160, 81, 129, 149, 80, 128, 148, 84, 132, 152, \
87, 135, 155, 85, 140, 153, 77, 137, 147, 82, \
140, 150, 85, 141, 151, 83, 137, 148, 82, 133, \
147, 82, 130, 149, 79, 127, 144, 78, 127, 141, \
78, 127, 139, 77, 127, 137, 80, 124, 137, 86, \
129, 139, 87, 134, 138, 93, 141, 146, 101, 144, \
157, 94, 137, 152, 90, 141, 146, 88, 140, 144, \
91, 143, 147, 89, 141, 145, 90, 142, 145, 82, \
137, 136, 81, 138, 135, 79, 136, 133, 80, 137, \
134, 81, 137, 134, 81, 134, 131, 77, 128, 147, \
77, 128, 147, 81, 133, 151, 86, 137, 156, 81, \
136, 150, 78, 135, 146, 76, 133, 145, 81, 136, \
148, 79, 133, 145, 79, 132, 145, 79, 131, 146, \
79, 131, 145, 77, 129, 142, 81, 134, 145, 80, \
133, 144, 79, 127, 139, 87, 134, 144, 89, 139, \
147, 91, 141, 150, 89, 138, 151, 85, 135, 147, \
86, 140, 145, 86, 140, 145, 87, 142, 147, 87, \
141, 146, 87, 142, 146, 89, 143, 145, 87, 140, \
142, 84, 137, 139, 86, 139, 141, 83, 136, 138, \
80, 133, 134, 79, 132, 150, 78, 131, 149, 79, \
132, 150, 81, 134, 152, 74, 127, 143, 79, 132, \
146, 82, 135, 149, 80, 133, 147, 77, 130, 144, \
75, 128, 141, 78, 132, 142, 74, 128, 138, 73, \
127, 137, 81, 135, 145, 79, 133, 143, 77, 128, \
139, 84, 134, 145, 89, 139, 150, 89, 139, 150, \
84, 134, 145, 84, 134, 144, 88, 138, 146, 84, \
134, 141, 84, 134, 141, 85, 135, 142, 87, 137, \
144, 91, 138, 144, 89, 136, 142, 86, 133, 139, \
86, 133, 139, 86, 133, 139, 89, 136, 142, 80, \
133, 151, 74, 127, 145, 77, 130, 148, 83, 136, \
154, 79, 132, 148, 79, 132, 146, 78, 131, 145, \
79, 132, 146, 81, 134, 148, 76, 129, 142, 75, \
129, 139, 77, 131, 141, 79, 133, 143, 81, 135, \
145, 79, 133, 143, 81, 132, 143, 83, 133, 144, \
80, 130, 141, 81, 131, 142, 78, 128, 139, 81, \
131, 140, 79, 129, 136, 79, 129, 136, 84, 134, \
141, 84, 134, 141, 82, 132, 139, 83, 131, 137, \
81, 128, 134, 82, 129, 135, 85, 132, 138, 83, \
130, 136, 88, 135, 141, 78, 131, 149, 80, 133, \
151, 78, 131, 149, 80, 133, 151, 74, 127, 143, \
78, 131, 145, 78, 131, 145, 76, 129, 143, 79, \
132, 146, 82, 135, 149, 76, 130, 140, 77, 131, \
140, 79, 133, 143, 76, 130, 140, 74, 128, 138, \
77, 128, 138, 80, 130, 141, 80, 130, 141, 78, \
128, 139, 80, 130, 141, 80, 130, 140, 82, 132, \
139, 82, 132, 139, 81, 131, 138, 82, 132, 139, \
82, 132, 139, 81, 128, 135, 77, 124, 130, 81, \
128, 134, 82, 129, 135, 81, 128, 134, 82, 129, \
135, 74, 127, 145, 74, 127, 145, 74, 127, 145, \
78, 131, 149, 77, 130, 146, 76, 129, 143, 75, \
128, 142, 73, 126, 140, 77, 130, 144, 79, 133, \
146, 73, 127, 138, 75, 129, 139, 74, 128, 138, \
70, 124, 134, 72, 127, 137, 78, 129, 140, 81, \
131, 142, 82, 132, 143, 84, 134, 145, 83, 133, \
144, 82, 132, 141, 87, 137, 145, 86, 136, 143, \
78, 128, 135, 78, 128, 135, 77, 127, 134, 79, \
127, 133, 81, 128, 134, 79, 126, 132, 81, 128, \
134, 79, 126, 132, 83, 130, 136, 72, 125, 143, \
72, 125, 143, 76, 129, 147, 77, 130, 147, 76, \
129, 145, 82, 135, 149, 76, 129, 143, 73, 126, \
140, 77, 130, 144, 77, 131, 144, 76, 130, 141, \
74, 128, 138, 74, 128, 138, 71, 125, 135, 73, \
127, 137, 77, 129, 139, 74, 124, 135, 76, 126, \
137, 76, 126, 137, 71, 121, 133, 80, 130, 139, \
82, 132, 139, 81, 131, 138, 78, 128, 135, 79, \
129, 136, 78, 128, 135, 79, 127, 133, 84, 131, \
137, 81, 128, 134, 76, 123, 129, 78, 125, 131, \
79, 126, 132, 69, 122, 140, 70, 123, 141, 72, \
125, 143, 73, 126, 144, 74, 127, 143, 79, 132, \
146, 80, 133, 147, 74, 127, 141, 72, 125, 139, \
73, 126, 139, 68, 122, 132, 69, 123, 133, 69, \
123, 133, 71, 125, 135, 74, 128, 138, 75, 126, \
137, 70, 120, 131, 77, 127, 138, 79, 129, 140, \
73, 123, 134, 75, 125, 134, 76, 126, 134, 74, \
124, 131, 72, 122, 129, 69, 119, 126, 74, 124, \
131, 77, 124, 131, 77, 124, 130, 77, 124, 130, \
76, 123, 129, 79, 126, 132, 78, 125, 131, 72, \
125, 143, 71, 124, 142, 69, 122, 140, 65, 118, \
136, 69, 122, 138, 74, 127, 141, 77, 130, 144, \
76, 129, 143, 72, 125, 139, 71, 125, 138, 67, \
121, 132, 71, 125, 135, 68, 122, 132, 71, 125, \
135, 75, 129, 139, 78, 130, 140, 82, 132, 143, \
80, 129, 140, 77, 127, 138, 68, 118, 129, 68, \
118, 128, 74, 124, 131, 71, 121, 128, 76, 126, \
133, 71, 121, 128, 72, 122, 129, 70, 118, 124, \
71, 118, 124, 77, 124, 130, 81, 128, 134, 82, \
129, 135, 80, 127, 133, 68, 121, 137, 73, 126, \
142, 69, 122, 138, 69, 122, 138, 70, 123, 137, \
68, 121, 133, 67, 120, 132, 64, 118, 129, 66, \
120, 132, 69, 122, 134, 67, 121, 131, 70, 124, \
134, 72, 126, 136, 72, 126, 136, 73, 127, 137, \
70, 124, 134, 75, 128, 138, 76, 127, 138, 70, \
120, 131, 63, 111, 123, 69, 117, 129, 67, 115, \
126, 68, 116, 125, 77, 125, 133, 74, 122, 129, \
74, 123, 128, 75, 122, 128, 78, 125, 131, 81, \
128, 134, 76, 123, 129, 73, 120, 126, 77, 123, \
129, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '22014';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a81738bd0bbb69cf48299179df51c5b72';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_frog5';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{31, 51, 14, 47, 71, 28, 46, 65, 28, 55, 67, \
35, 71, 86, 40, 36, 53, 19, 10, 29, 12, \
17, 40, 11, 41, 58, 18, 41, 54, 19, 31, \
41, 7, 65, 74, 29, 62, 74, 27, 42, 55, \
17, 30, 43, 17, 17, 32, 8, 38, 53, 16, \
84, 94, 47, 84, 95, 50, 71, 84, 40, 72, \
86, 44, 51, 64, 21, 66, 85, 27, 86, 109, \
43, 64, 78, 26, 80, 91, 45, 54, 60, 27, \
39, 58, 13, 109, 145, 58, 130, 155, 65, 54, \
75, 17, 37, 51, 13, 26, 46, 8, 54, 75, \
35, 68, 83, 42, 56, 64, 27, 81, 92, 42, \
69, 85, 43, 27, 50, 14, 38, 66, 10, 50, \
69, 19, 55, 69, 25, 52, 64, 17, 68, 80, \
24, 57, 73, 22, 38, 55, 14, 48, 62, 22, \
48, 60, 19, 63, 72, 23, 83, 88, 31, 91, \
99, 44, 93, 104, 51, 76, 89, 38, 76, 90, \
36, 91, 112, 46, 91, 116, 46, 71, 89, 32, \
64, 77, 29, 34, 41, 8, 38, 61, 12, 98, \
138, 55, 78, 104, 28, 48, 63, 11, 51, 63, \
13, 24, 39, 8, 51, 66, 37, 69, 83, 19, \
101, 108, 25, 139, 143, 57, 104, 109, 53, 65, \
75, 37, 58, 75, 20, 63, 81, 32, 58, 72, \
31, 58, 69, 27, 71, 82, 32, 76, 94, 46, \
40, 58, 14, 47, 58, 8, 68, 72, 14, 92, \
90, 28, 97, 92, 31, 83, 82, 25, 104, 107, \
54, 77, 83, 31, 89, 96, 38, 105, 119, 54, \
94, 114, 51, 73, 88, 37, 54, 65, 20, 59, \
65, 27, 79, 102, 45, 109, 150, 70, 72, 98, \
33, 52, 65, 18, 86, 99, 27, 29, 42, 10, \
60, 72, 32, 148, 160, 61, 185, 191, 69, 134, \
134, 35, 109, 106, 49, 115, 111, 75, 93, 98, \
41, 71, 88, 36, 62, 76, 35, 59, 69, 34, \
76, 85, 48, 86, 102, 61, 44, 59, 16, 66, \
69, 11, 113, 105, 32, 123, 105, 32, 129, 109, \
39, 104, 90, 24, 112, 106, 44, 98, 94, 35, \
98, 92, 25, 110, 111, 42, 109, 116, 54, 94, \
98, 48, 84, 87, 36, 105, 106, 56, 110, 131, \
65, 119, 158, 77, 74, 97, 40, 64, 79, 29, \
122, 141, 45, 56, 73, 11, 148, 165, 66, 205, \
212, 102, 132, 136, 56, 137, 143, 93, 172, 173, \
140, 190, 191, 140, 192, 202, 103, 89, 110, 36, \
41, 57, 10, 59, 70, 30, 68, 76, 40, 55, \
67, 31, 47, 57, 10, 118, 112, 42, 168, 146, \
62, 154, 123, 34, 160, 129, 35, 160, 136, 46, \
142, 127, 43, 133, 121, 40, 138, 119, 28, 128, \
115, 26, 124, 118, 41, 116, 108, 43, 96, 90, \
29, 79, 74, 18, 85, 102, 26, 96, 131, 49, \
72, 94, 42, 79, 99, 42, 131, 157, 40, 96, \
115, 30, 182, 199, 79, 117, 121, 39, 81, 87, \
47, 156, 169, 138, 108, 118, 93, 101, 111, 62, \
139, 158, 62, 97, 122, 43, 42, 60, 6, 52, \
64, 15, 59, 69, 29, 52, 65, 25, 55, 59, \
11, 142, 127, 51, 189, 156, 66, 170, 129, 32, \
183, 149, 36, 173, 146, 39, 173, 152, 55, 152, \
137, 47, 159, 138, 38, 172, 151, 51, 161, 145, \
46, 144, 128, 37, 126, 114, 35, 98, 91, 21, \
87, 98, 16, 80, 105, 23, 68, 85, 29, 72, \
95, 30, 135, 164, 49, 89, 105, 35, 99, 108, \
38, 63, 70, 21, 66, 74, 39, 127, 136, 105, \
83, 96, 51, 101, 121, 46, 103, 131, 40, 55, \
84, 19, 57, 76, 19, 56, 66, 17, 54, 65, \
27, 47, 60, 15, 90, 88, 31, 150, 129, 46, \
170, 135, 36, 170, 129, 29, 168, 133, 32, 162, \
132, 35, 188, 158, 64, 171, 154, 72, 150, 133, \
50, 155, 131, 40, 172, 148, 38, 164, 143, 35, \
160, 143, 49, 129, 121, 34, 105, 109, 24, 96, \
105, 23, 123, 132, 59, 84, 107, 33, 136, 166, \
73, 69, 88, 27, 66, 77, 26, 54, 68, 20, \
55, 68, 23, 79, 89, 57, 87, 107, 30, 150, \
181, 54, 97, 126, 40, 38, 64, 10, 50, 67, \
17, 55, 64, 21, 49, 57, 24, 67, 68, 22, \
130, 120, 39, 125, 104, 23, 147, 123, 35, 174, \
145, 44, 164, 128, 42, 132, 95, 19, 153, 110, \
27, 201, 176, 87, 183, 165, 81, 170, 144, 56, \
167, 140, 29, 163, 138, 30, 158, 138, 45, 133, \
122, 35, 134, 131, 47, 124, 120, 35, 124, 124, \
43, 94, 119, 34, 95, 127, 47, 63, 92, 27, \
61, 82, 32, 48, 67, 25, 35, 54, 10, 44, \
61, 16, 113, 141, 36, 131, 166, 34, 71, 97, \
33, 49, 71, 28, 38, 54, 13, 59, 67, 31, \
71, 75, 47, 80, 67, 27, 131, 113, 21, 101, \
80, 17, 85, 70, 31, 149, 132, 55, 173, 139, \
60, 150, 108, 44, 163, 112, 25, 197, 163, 52, \
194, 171, 72, 214, 186, 92, 199, 166, 54, 171, \
139, 35, 140, 116, 26, 130, 115, 26, 129, 117, \
31, 148, 131, 44, 125, 112, 25, 96, 110, 16, \
66, 87, 15, 74, 111, 34, 33, 60, 20, 15, \
34, 13, 24, 43, 14, 66, 93, 29, 115, 148, \
47, 92, 120, 37, 52, 71, 37, 51, 69, 33, \
46, 61, 26, 88, 96, 65, 79, 80, 51, 111, \
95, 34, 173, 154, 35, 140, 118, 46, 58, 43, \
18, 108, 95, 28, 131, 103, 25, 138, 101, 34, \
207, 158, 57, 210, 178, 51, 177, 150, 46, 183, \
148, 50, 214, 177, 60, 205, 170, 60, 170, 139, \
42, 152, 127, 30, 134, 111, 22, 156, 128, 39, \
169, 140, 42, 156, 143, 43, 106, 103, 35, 82, \
119, 42, 23, 51, 17, 3, 20, 6, 36, 57, \
28, 66, 97, 36, 48, 79, 14, 39, 63, 22, \
32, 49, 28, 40, 55, 19, 46, 61, 27, 85, \
94, 64, 71, 71, 40, 138, 128, 43, 199, 185, \
50, 172, 151, 47, 122, 103, 30, 135, 118, 30, \
152, 132, 45, 129, 103, 27, 173, 135, 39, 192, \
167, 57, 175, 146, 45, 182, 142, 40, 220, 180, \
55, 202, 164, 43, 185, 146, 35, 185, 147, 37, \
158, 125, 26, 153, 119, 26, 172, 133, 35, 162, \
129, 32, 138, 121, 46, 58, 90, 31, 17, 45, \
12, 28, 45, 18, 58, 82, 37, 29, 60, 22, \
18, 44, 14, 30, 56, 13, 37, 56, 25, 45, \
59, 22, 46, 61, 28, 58, 68, 36, 63, 62, \
26, 92, 85, 25, 149, 133, 52, 158, 131, 35, \
196, 167, 61, 161, 135, 42, 139, 125, 47, 138, \
121, 44, 138, 112, 33, 124, 107, 35, 158, 128, \
41, 205, 162, 54, 217, 174, 40, 204, 164, 31, \
201, 155, 30, 198, 152, 29, 181, 142, 33, 167, \
129, 29, 172, 131, 33, 157, 121, 25, 120, 104, \
16, 45, 70, 26, 23, 46, 15, 46, 64, 27, \
35, 57, 17, 18, 42, 18, 22, 42, 23, 29, \
53, 13, 21, 42, 10, 35, 51, 25, 35, 49, \
23, 46, 52, 22, 82, 74, 38, 82, 75, 39, \
91, 81, 42, 114, 94, 35, 146, 126, 52, 151, \
133, 63, 140, 130, 59, 132, 123, 48, 95, 82, \
24, 63, 58, 9, 106, 86, 16, 196, 155, 51, \
217, 166, 42, 212, 164, 37, 199, 151, 24, 195, \
148, 25, 177, 135, 28, 174, 137, 35, 173, 133, \
27, 184, 141, 30, 149, 128, 36, 83, 101, 62, \
48, 64, 35, 21, 37, 8, 28, 46, 13, 24, \
44, 12, 12, 31, 4, 19, 39, 8, 31, 50, \
17, 15, 32, 14, 21, 37, 16, 63, 69, 40, \
90, 81, 49, 58, 55, 27, 62, 61, 27, 79, \
72, 29, 52, 47, 10, 52, 48, 15, 79, 73, \
29, 95, 89, 33, 67, 65, 13, 91, 94, 36, \
123, 111, 39, 162, 130, 40, 185, 138, 38, 191, \
140, 33, 184, 140, 23, 176, 137, 26, 158, 120, \
23, 163, 129, 31, 170, 134, 24, 204, 161, 39, \
185, 163, 71, 51, 66, 38, 16, 30, 10, 10, \
23, 4, 45, 63, 26, 45, 66, 22, 27, 47, \
13, 26, 46, 10, 33, 52, 15, 25, 41, 18, \
29, 46, 23, 46, 60, 33, 33, 36, 12, 36, \
39, 15, 67, 67, 37, 87, 82, 40, 50, 46, \
7, 23, 26, 0, 16, 17, 1, 35, 29, 0, \
135, 133, 52, 217, 216, 132, 167, 158, 81, 109, \
96, 21, 119, 99, 21, 146, 113, 25, 164, 132, \
34, 147, 120, 26, 157, 129, 37, 145, 117, 23, \
168, 138, 33, 191, 159, 44, 152, 137, 49, 21, \
33, 17, 3, 13, 2, 9, 19, 7, 29, 44, \
17, 36, 53, 20, 30, 46, 20, 14, 30, 5, \
37, 53, 23, 32, 48, 21, 35, 55, 27, 42, \
61, 34, 23, 35, 13, 35, 44, 21, 49, 52, \
26, 82, 80, 44, 63, 62, 26, 32, 40, 12, \
16, 26, 17, 84, 77, 41, 209, 206, 81, 251, \
246, 132, 174, 168, 88, 79, 82, 18, 77, 80, \
22, 99, 85, 22, 124, 107, 36, 123, 111, 37, \
122, 105, 29, 128, 107, 22, 174, 146, 49, 170, \
137, 39, 147, 128, 49, 11, 18, 10, 3, 8, \
3, 12, 19, 9, 17, 29, 13, 19, 30, 15, \
13, 23, 12, 4, 16, 3, 24, 37, 14, 28, \
44, 15, 28, 49, 19, 37, 59, 31, 46, 61, \
37, 34, 46, 25, 31, 37, 15, 40, 40, 19, \
38, 39, 19, 21, 33, 11, 17, 30, 15, 127, \
118, 64, 226, 214, 71, 231, 221, 90, 185, 180, \
106, 94, 100, 50, 49, 61, 19, 62, 64, 21, \
60, 59, 15, 67, 67, 17, 84, 75, 15, 131, \
113, 30, 178, 149, 57, 152, 111, 32, 123, 96, \
28, 2, 6, 3, 11, 16, 11, 27, 34, 21, \
25, 34, 20, 19, 27, 20, 7, 14, 8, 3, \
12, 1, 27, 40, 12, 32, 48, 18, 21, 41, \
14, 34, 52, 25, 63, 74, 47, 30, 41, 22, \
42, 50, 30, 19, 21, 7, 5, 7, 0, 12, \
25, 11, 27, 38, 13, 113, 97, 30, 198, 173, \
52, 210, 191, 73, 142, 136, 77, 114, 113, 74, \
94, 98, 62, 23, 34, 7, 10, 23, 0, 24, \
32, 1, 90, 86, 26, 146, 128, 39, 164, 132, \
42, 129, 89, 24, 97, 74, 17, 5, 9, 6, \
13, 17, 13, 25, 31, 19, 9, 15, 4, 2, \
8, 2, 8, 17, 3, 22, 34, 5, 34, 47, \
12, 27, 41, 20, 32, 50, 25, 31, 44, 20, \
49, 55, 33, 28, 37, 20, 36, 46, 28, 44, \
48, 30, 11, 14, 5, 11, 22, 14, 40, 48, \
21, 134, 112, 41, 162, 125, 39, 178, 154, 62, \
133, 127, 83, 129, 122, 88, 84, 80, 44, 30, \
45, 21, 11, 30, 15, 37, 46, 15, 122, 117, \
50, 142, 122, 34, 148, 118, 27, 100, 73, 11, \
106, 96, 36, 2, 3, 7, 2, 4, 3, 5, \
8, 2, 5, 10, 2, 20, 28, 11, 30, 42, \
9, 39, 52, 10, 27, 39, 9, 24, 38, 18, \
28, 44, 21, 29, 43, 21, 26, 37, 19, 39, \
49, 29, 43, 52, 29, 30, 35, 18, 27, 29, \
14, 39, 50, 33, 33, 46, 15, 131, 115, 46, \
164, 135, 49, 164, 145, 66, 106, 107, 67, 79, \
83, 55, 44, 49, 21, 58, 70, 48, 41, 52, \
38, 54, 54, 20, 151, 134, 67, 154, 133, 55, \
124, 109, 25, 104, 90, 19, 147, 136, 60, 1, \
3, 3, 0, 2, 0, 8, 11, 4, 29, 35, \
21, 34, 44, 23, 35, 47, 12, 44, 56, 18, \
33, 45, 17, 34, 49, 19, 19, 35, 10, 26, \
41, 17, 25, 39, 16, 30, 42, 18, 58, 68, \
41, 26, 32, 11, 27, 31, 13, 40, 50, 28, \
40, 53, 18, 117, 106, 41, 150, 131, 48, 148, \
139, 69, 63, 68, 35, 50, 60, 36, 54, 63, \
39, 29, 39, 18, 13, 21, 8, 56, 57, 19, \
144, 130, 67, 145, 129, 64, 100, 93, 19, 121, \
111, 35, 151, 141, 68, 11, 15, 4, 13, 17, \
5, 22, 25, 13, 27, 34, 20, 24, 34, 14, \
49, 61, 27, 35, 45, 17, 17, 26, 9, 32, \
47, 16, 19, 34, 7, 19, 33, 9, 28, 42, \
18, 25, 38, 12, 42, 55, 24, 40, 50, 21, \
34, 40, 16, 33, 42, 18, 73, 81, 41, 95, \
87, 31, 107, 96, 32, 111, 111, 55, 39, 48, \
22, 25, 35, 18, 35, 44, 25, 16, 25, 6, \
20, 31, 13, 50, 59, 24, 90, 87, 39, 90, \
81, 30, 90, 85, 20, 133, 125, 53, 109, 105, \
49, 44, 50, 22, 62, 69, 38, 40, 45, 25, \
8, 15, 0, 47, 58, 29, 68, 80, 45, 18, \
27, 6, 26, 34, 20, 41, 54, 31, 8, 20, \
3, 4, 14, 1, 13, 23, 9, 30, 42, 19, \
45, 58, 27, 63, 74, 41, 49, 58, 26, 59, \
68, 38, 82, 87, 48, 91, 87, 33, 66, 64, \
12, 51, 58, 21, 15, 27, 8, 4, 14, 1, \
9, 17, 3, 39, 45, 25, 51, 61, 40, 48, \
62, 32, 38, 46, 12, 56, 55, 19, 77, 72, \
16, 122, 115, 50, 55, 57, 17, 53, 61, 27, \
85, 94, 53, 47, 53, 25, 31, 39, 11, 66, \
78, 39, 39, 50, 20, 18, 28, 7, 66, 75, \
51, 27, 36, 19, 3, 11, 1, 10, 16, 7, \
4, 10, 2, 11, 21, 8, 38, 51, 28, 63, \
75, 46, 77, 88, 54, 89, 99, 67, 68, 74, \
41, 84, 86, 40, 72, 77, 36, 44, 55, 29, \
22, 36, 18, 20, 31, 14, 14, 21, 5, 50, \
53, 35, 44, 49, 34, 31, 45, 24, 29, 43, \
19, 30, 34, 9, 70, 64, 12, 69, 64, 13, \
38, 45, 9, 53, 61, 28, 66, 75, 31, 44, \
52, 18, 61, 71, 34, 53, 65, 26, 23, 35, \
8, 56, 68, 35, 59, 70, 35, 29, 38, 12, \
45, 55, 27, 48, 57, 29, 22, 30, 7, 40, \
52, 36, 44, 57, 42, 21, 33, 14, 58, 69, \
41, 79, 90, 62, 72, 83, 55, 61, 69, 34, \
65, 72, 41, 37, 47, 27, 40, 56, 34, 41, \
56, 34, 29, 36, 21, 25, 25, 15, 22, 23, \
16, 14, 25, 12, 28, 46, 27, 60, 65, 36, \
128, 120, 64, 76, 72, 34, 40, 51, 15, 55, \
64, 29, 49, 59, 17, 42, 51, 20, 69, 78, \
40, 48, 57, 18, 58, 67, 29, 67, 77, 35, \
55, 65, 25, 69, 80, 37, 66, 77, 31, 44, \
54, 14, 25, 33, 5, 41, 54, 38, 37, 50, \
37, 22, 30, 18, 47, 55, 36, 59, 68, 46, \
60, 72, 46, 53, 63, 34, 50, 58, 35, 42, \
51, 33, 36, 49, 26, 33, 45, 24, 47, 54, \
37, 21, 23, 13, 8, 7, 5, 7, 12, 6, \
33, 44, 23, 103, 107, 69, 122, 116, 67, 65, \
66, 33, 32, 44, 7, 63, 76, 26, 93, 107, \
57, 54, 66, 30, 60, 69, 29, 83, 87, 44, \
72, 77, 32, 61, 65, 20, 81, 86, 41, 73, \
81, 38, 51, 61, 13, 33, 42, 5, 20, 25, \
8, 26, 36, 25, 27, 38, 26, 19, 24, 17, \
23, 26, 18, 58, 63, 46, 100, 109, 83, 73, \
81, 58, 47, 54, 36, 36, 42, 28, 27, 33, \
17, 15, 21, 7, 23, 28, 16, 16, 19, 11, \
6, 5, 6, 4, 4, 1, 57, 61, 33, 89, \
93, 53, 66, 68, 32, 47, 53, 20, 43, 54, \
15, 97, 115, 45, 130, 147, 81, 69, 83, 33, \
71, 82, 33, 83, 89, 42, 57, 62, 18, 72, \
77, 33, 66, 71, 33, 38, 46, 16, 30, 39, \
5, 34, 42, 9, 22, 26, 12, 42, 51, 41, \
39, 48, 38, 15, 21, 13, 6, 9, 4, 27, \
31, 19, 50, 59, 37, 58, 67, 45, 41, 49, \
32, 10, 16, 5, 6, 8, 5, 4, 4, 5, \
6, 6, 9, 4, 3, 8, 1, 1, 4, 15, \
18, 8, 67, 73, 41, 71, 78, 44, 47, 52, \
28, 30, 36, 14, 50, 60, 28, 110, 129, 50, \
78, 95, 30, 67, 81, 29, 56, 67, 18, 60, \
68, 20, 60, 67, 20, 52, 58, 21, 25, 30, \
9, 32, 39, 15, 45, 53, 20, 49, 56, 25, \
33, 37, 23, 14, 20, 12, 8, 15, 8, 18, \
26, 15, 11, 17, 8, 2, 8, 0, 10, 20, \
3, 38, 49, 27, 56, 67, 46, 27, 36, 20, \
7, 6, 6, 3, 0, 4, 4, 1, 7, 3, \
0, 7, 13, 16, 11, 49, 59, 34, 53, 65, \
32, 60, 71, 44, 34, 42, 26, 26, 33, 11, \
53, 63, 30, 65, 82, 22, 46, 60, 13, 53, \
66, 26, 57, 68, 24, 64, 72, 25, 51, 59, \
16, 39, 45, 15, 46, 50, 29, 46, 51, 27, \
39, 44, 19, 26, 31, 14, 31, 34, 24, 14, \
18, 10, 7, 13, 1, 20, 28, 13, 22, 31, \
15, 18, 27, 13, 17, 29, 13, 24, 37, 16, \
54, 68, 43, 33, 44, 24, 8, 11, 3, 10, \
11, 3, 13, 14, 6, 24, 25, 15, 36, 44, \
23, 55, 69, 36, 40, 53, 23, 24, 36, 16, \
40, 51, 27, 53, 62, 19, 51, 62, 20, 45, \
59, 16, 33, 45, 14, 42, 53, 21, 46, 57, \
21, 59, 68, 29, 50, 60, 17, 61, 70, 37, \
43, 49, 29, 23, 27, 13, 15, 19, 6, 10, \
13, 4, 25, 28, 20, 34, 39, 22, 24, 31, \
9, 17, 26, 7, 33, 45, 18, 64, 78, 53, \
50, 64, 45, 34, 48, 27, 45, 60, 35, 36, \
49, 27, 22, 31, 11, 37, 45, 21, 42, 51, \
25, 50, 59, 27, 50, 61, 29, 43, 55, 25, \
39, 51, 19, 26, 37, 9, 44, 56, 20, 66, \
77, 26, 41, 52, 11, 61, 74, 30, 45, 56, \
23, 43, 55, 18, 30, 40, 11, 34, 43, 15, \
63, 74, 30, 81, 91, 54, 16, 22, 8, 11, \
15, 6, 9, 12, 3, 12, 14, 7, 24, 27, \
17, 48, 52, 29, 36, 42, 16, 32, 42, 16, \
38, 53, 18, 62, 77, 48, 57, 72, 53, 38, \
52, 31, 29, 44, 21, 48, 62, 37, 42, 56, \
30, 51, 65, 36, 46, 59, 30, 45, 60, 23, \
58, 69, 37, 33, 41, 19, 45, 54, 22, 57, \
67, 25, 53, 64, 18, 52, 62, 21, 49, 59, \
25, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '22324';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a12848806f8edc1bd20290bdce41d2778';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_bird6';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{166, 211, 229, 161, 204, 225, 156, 200, 222, 150, 195, \
219, 146, 193, 219, 147, 194, 222, 146, 193, 224, \
139, 186, 219, 132, 180, 215, 128, 176, 212, 128, \
177, 213, 129, 177, 213, 127, 178, 213, 122, 178, \
214, 121, 176, 212, 121, 173, 211, 126, 177, 216, \
135, 185, 217, 147, 196, 222, 155, 202, 227, 162, \
207, 230, 169, 212, 233, 173, 215, 232, 174, 217, \
233, 172, 215, 232, 170, 212, 229, 168, 210, 228, \
167, 209, 228, 165, 207, 228, 161, 202, 226, 155, \
198, 224, 145, 196, 222, 159, 207, 225, 154, 200, \
222, 150, 195, 219, 144, 190, 215, 142, 189, 216, \
143, 191, 221, 140, 189, 221, 131, 182, 215, 118, \
173, 211, 110, 167, 208, 110, 166, 206, 112, 168, \
209, 112, 171, 211, 109, 171, 211, 111, 171, 209, \
118, 174, 210, 132, 184, 219, 151, 197, 222, 166, \
208, 226, 174, 214, 232, 182, 220, 236, 188, 224, \
238, 191, 227, 238, 191, 226, 237, 190, 225, 236, \
187, 222, 233, 185, 220, 231, 185, 221, 232, 184, \
219, 233, 180, 214, 231, 174, 210, 229, 166, 209, \
225, 155, 203, 224, 150, 197, 220, 146, 193, 218, \
141, 187, 214, 139, 185, 216, 139, 188, 219, 133, \
186, 218, 121, 177, 211, 103, 167, 209, 92, 159, \
205, 91, 158, 203, 93, 160, 205, 96, 162, 207, \
100, 165, 207, 108, 168, 206, 124, 178, 211, 143, \
194, 221, 165, 208, 227, 180, 218, 233, 187, 225, \
237, 194, 229, 240, 199, 232, 242, 200, 233, 241, \
200, 233, 241, 199, 233, 240, 197, 230, 238, 195, \
228, 235, 195, 229, 235, 194, 227, 236, 190, 222, \
234, 186, 220, 232, 180, 219, 229, 147, 198, 220, \
144, 194, 218, 142, 191, 217, 138, 186, 215, 137, \
182, 215, 134, 183, 216, 126, 181, 214, 110, 171, \
205, 89, 159, 205, 77, 152, 202, 77, 151, 201, \
78, 153, 203, 85, 157, 205, 101, 164, 206, 118, \
176, 211, 138, 189, 215, 158, 203, 222, 175, 218, \
233, 187, 227, 240, 193, 232, 243, 198, 234, 244, \
201, 236, 245, 204, 237, 246, 204, 237, 246, 203, \
237, 246, 203, 236, 245, 202, 236, 242, 200, 235, \
240, 198, 232, 239, 194, 228, 238, 191, 226, 236, \
188, 226, 235, 143, 193, 219, 141, 189, 215, 139, \
188, 215, 137, 184, 212, 133, 180, 211, 128, 179, \
212, 116, 174, 211, 100, 165, 205, 78, 156, 204, \
68, 151, 203, 71, 149, 201, 77, 153, 202, 93, \
163, 207, 115, 175, 211, 136, 190, 219, 158, 203, \
223, 175, 214, 227, 184, 223, 235, 190, 230, 242, \
195, 234, 244, 198, 236, 245, 201, 237, 246, 204, \
237, 245, 205, 238, 246, 206, 238, 246, 206, 239, \
247, 205, 239, 245, 203, 237, 243, 201, 234, 241, \
198, 232, 240, 196, 230, 239, 194, 230, 239, 142, \
189, 220, 139, 186, 215, 138, 185, 213, 134, 181, \
209, 126, 176, 206, 118, 174, 209, 105, 168, 209, \
91, 160, 207, 71, 155, 203, 64, 150, 202, 71, \
149, 200, 85, 158, 201, 109, 174, 208, 136, 189, \
216, 157, 205, 227, 174, 216, 233, 187, 223, 236, \
192, 229, 238, 195, 232, 241, 197, 234, 243, 198, \
235, 244, 202, 237, 245, 206, 237, 242, 207, 238, \
243, 208, 239, 244, 210, 241, 246, 208, 240, 245, \
206, 239, 244, 204, 237, 242, 202, 235, 240, 200, \
233, 239, 199, 232, 241, 143, 190, 219, 139, 186, \
215, 137, 184, 214, 129, 179, 210, 117, 173, 208, \
108, 169, 208, 96, 163, 207, 85, 157, 205, 73, \
152, 200, 72, 150, 199, 83, 154, 201, 103, 168, \
206, 130, 186, 213, 157, 200, 220, 174, 215, 232, \
185, 224, 240, 191, 229, 243, 196, 232, 241, 198, \
234, 241, 200, 236, 243, 201, 237, 244, 202, 237, \
244, 207, 238, 243, 209, 240, 245, 209, 240, 245, \
211, 242, 247, 209, 242, 247, 207, 240, 245, 206, \
239, 244, 204, 237, 242, 203, 236, 242, 202, 235, \
244, 146, 194, 220, 140, 187, 216, 136, 182, 214, \
125, 176, 211, 111, 171, 209, 103, 166, 207, 95, \
163, 207, 88, 158, 204, 83, 154, 200, 88, 156, \
202, 105, 166, 208, 126, 182, 213, 151, 199, 218, \
175, 211, 223, 185, 220, 232, 192, 227, 239, 196, \
230, 241, 201, 234, 242, 203, 237, 242, 205, 238, \
244, 206, 240, 245, 208, 241, 246, 210, 241, 246, \
209, 240, 245, 210, 241, 246, 211, 242, 246, 210, \
242, 247, 209, 242, 247, 207, 240, 245, 206, 239, \
244, 206, 239, 245, 204, 237, 245, 149, 197, 221, \
142, 189, 218, 136, 182, 216, 124, 175, 212, 110, \
169, 206, 104, 166, 205, 102, 166, 207, 98, 163, \
205, 98, 161, 205, 109, 167, 211, 128, 180, 217, \
149, 197, 220, 168, 210, 224, 186, 220, 232, 196, \
227, 237, 206, 234, 241, 214, 239, 244, 212, 241, \
245, 210, 242, 246, 212, 243, 248, 213, 244, 248, \
214, 245, 250, 212, 243, 248, 211, 242, 247, 212, \
243, 248, 212, 243, 248, 211, 244, 249, 210, 243, \
248, 209, 242, 247, 208, 241, 246, 207, 240, 245, \
203, 236, 245, 152, 200, 223, 144, 191, 220, 136, \
183, 218, 124, 174, 212, 113, 170, 205, 112, 169, \
205, 113, 171, 207, 112, 170, 208, 116, 172, 212, \
128, 179, 220, 147, 193, 225, 168, 209, 227, 181, \
219, 229, 192, 227, 240, 198, 228, 236, 166, 188, \
189, 167, 182, 180, 202, 226, 227, 215, 247, 249, \
216, 246, 249, 217, 247, 251, 216, 248, 252, 215, \
246, 250, 214, 245, 249, 214, 245, 250, 214, 245, \
250, 213, 245, 250, 211, 244, 249, 211, 244, 249, \
210, 242, 247, 207, 240, 245, 203, 236, 244, 154, \
201, 222, 143, 192, 218, 134, 185, 217, 124, 177, \
211, 119, 174, 207, 123, 177, 209, 128, 180, 211, \
130, 181, 211, 136, 184, 216, 148, 193, 222, 166, \
205, 227, 183, 217, 230, 190, 225, 234, 197, 234, \
245, 185, 217, 219, 76, 94, 89, 77, 81, 75, \
121, 130, 129, 200, 233, 232, 220, 248, 253, 224, \
245, 254, 216, 250, 253, 216, 248, 251, 217, 248, \
250, 216, 247, 250, 216, 247, 250, 216, 247, 251, \
214, 246, 251, 213, 245, 250, 212, 243, 248, 208, \
241, 246, 201, 237, 242, 155, 203, 223, 147, 195, \
219, 139, 189, 218, 131, 183, 214, 128, 181, 212, \
133, 185, 214, 140, 189, 216, 144, 192, 217, 152, \
196, 222, 163, 204, 227, 178, 214, 232, 191, 224, \
235, 196, 229, 239, 202, 238, 248, 185, 216, 216, \
86, 104, 92, 168, 170, 152, 178, 177, 165, 183, \
209, 205, 220, 252, 255, 224, 246, 254, 220, 250, \
252, 218, 250, 251, 219, 250, 252, 218, 249, 251, \
218, 249, 250, 217, 248, 252, 216, 247, 252, 215, \
246, 251, 214, 244, 249, 209, 241, 246, 200, 237, \
240, 156, 204, 224, 151, 197, 220, 146, 193, 218, \
142, 190, 217, 142, 192, 218, 147, 195, 219, 151, \
197, 219, 156, 201, 222, 165, 206, 226, 174, 212, \
231, 185, 221, 235, 195, 228, 238, 199, 232, 241, \
207, 241, 249, 186, 215, 214, 78, 95, 79, 175, \
176, 146, 234, 224, 199, 201, 207, 198, 221, 248, \
251, 221, 248, 252, 223, 248, 248, 220, 251, 252, \
219, 250, 253, 219, 250, 252, 218, 249, 251, 218, \
249, 253, 217, 248, 253, 216, 247, 252, 215, 245, \
250, 210, 242, 247, 199, 236, 240, 156, 203, 223, \
153, 199, 220, 154, 197, 220, 153, 198, 220, 156, \
203, 223, 161, 206, 225, 164, 207, 223, 168, 209, \
225, 177, 213, 228, 186, 220, 233, 193, 227, 237, \
198, 232, 239, 201, 235, 241, 213, 245, 250, 169, \
196, 197, 74, 88, 75, 164, 163, 132, 184, 167, \
134, 147, 127, 108, 214, 219, 208, 225, 249, 245, \
221, 247, 248, 219, 250, 252, 219, 250, 252, 219, \
250, 252, 219, 250, 252, 218, 249, 253, 217, 248, \
253, 216, 247, 252, 214, 245, 250, 209, 242, 247, \
200, 237, 241, 155, 203, 223, 155, 199, 219, 161, \
201, 221, 163, 204, 223, 167, 211, 227, 172, 214, \
229, 174, 214, 227, 178, 216, 228, 186, 219, 229, \
193, 225, 234, 197, 230, 238, 200, 234, 240, 204, \
238, 240, 216, 248, 248, 158, 183, 188, 47, 57, \
53, 120, 117, 95, 184, 166, 135, 130, 86, 57, \
183, 158, 125, 225, 242, 225, 218, 248, 252, 219, \
250, 252, 219, 250, 252, 219, 250, 252, 219, 250, \
252, 218, 249, 253, 216, 247, 252, 214, 245, 250, \
213, 244, 249, 209, 241, 246, 199, 236, 240, 154, \
200, 222, 153, 198, 218, 158, 202, 220, 167, 209, \
226, 174, 215, 232, 179, 218, 233, 181, 220, 233, \
185, 223, 234, 191, 226, 233, 194, 228, 235, 198, \
233, 239, 201, 237, 243, 204, 240, 242, 216, 249, \
247, 164, 187, 191, 36, 44, 44, 88, 85, 71, \
197, 186, 156, 171, 136, 97, 162, 124, 79, 218, \
218, 193, 218, 249, 251, 218, 249, 251, 219, 250, \
252, 218, 250, 252, 216, 250, 251, 215, 247, 251, \
212, 244, 250, 210, 242, 249, 209, 240, 249, 204, \
237, 246, 195, 233, 241, 161, 202, 223, 159, 200, \
218, 163, 206, 221, 173, 213, 228, 184, 218, 234, \
187, 221, 236, 188, 223, 234, 190, 225, 235, 193, \
228, 235, 197, 232, 238, 200, 236, 242, 203, 239, \
245, 205, 240, 244, 214, 248, 248, 174, 197, 199, \
43, 52, 50, 60, 61, 48, 168, 166, 136, 226, \
212, 171, 163, 128, 81, 195, 180, 147, 223, 247, \
243, 217, 247, 250, 219, 249, 251, 217, 250, 251, \
213, 248, 249, 211, 245, 248, 209, 242, 248, 207, \
240, 248, 204, 236, 247, 199, 232, 245, 191, 231, \
243, 131, 163, 180, 146, 176, 191, 166, 196, 209, \
178, 207, 220, 184, 213, 225, 191, 221, 231, 198, \
228, 235, 202, 232, 237, 204, 235, 240, 203, 235, \
241, 202, 234, 240, 206, 238, 244, 207, 240, 246, \
214, 247, 253, 185, 210, 214, 51, 65, 61, 35, \
42, 26, 97, 100, 73, 213, 203, 169, 198, 168, \
122, 164, 141, 103, 223, 235, 223, 218, 247, 249, \
217, 248, 250, 215, 249, 250, 211, 247, 247, 208, \
242, 245, 205, 238, 245, 203, 236, 245, 200, 232, \
244, 195, 229, 241, 188, 227, 240, 147, 176, 191, \
136, 162, 175, 107, 130, 142, 121, 143, 154, 143, \
170, 179, 151, 178, 186, 155, 183, 187, 170, 198, \
201, 173, 201, 204, 191, 219, 223, 210, 239, 243, \
210, 238, 243, 208, 239, 244, 210, 244, 250, 206, \
233, 238, 89, 108, 105, 25, 39, 24, 36, 43, \
21, 118, 117, 88, 211, 190, 147, 156, 133, 93, \
179, 182, 167, 222, 249, 251, 214, 245, 247, 212, \
246, 247, 208, 244, 244, 205, 239, 242, 203, 236, \
242, 201, 234, 242, 198, 230, 241, 193, 226, 239, \
186, 225, 237, 174, 211, 226, 180, 211, 225, 156, \
182, 195, 158, 183, 195, 173, 201, 212, 166, 195, \
204, 153, 182, 188, 151, 180, 184, 131, 155, 159, \
127, 150, 154, 168, 193, 197, 193, 217, 221, 211, \
239, 241, 210, 247, 247, 222, 253, 255, 186, 210, \
210, 76, 94, 87, 34, 44, 28, 53, 59, 36, \
149, 140, 103, 172, 155, 121, 126, 130, 119, 208, \
236, 238, 214, 245, 247, 210, 243, 244, 206, 242, \
242, 204, 238, 241, 201, 234, 241, 199, 232, 241, \
196, 228, 239, 191, 225, 238, 185, 225, 237, 171, \
216, 231, 175, 213, 228, 188, 221, 236, 192, 223, \
236, 191, 222, 234, 194, 225, 236, 197, 229, 237, \
195, 227, 233, 194, 221, 226, 182, 205, 210, 155, \
178, 182, 113, 135, 139, 115, 141, 141, 149, 184, \
179, 167, 196, 196, 193, 215, 217, 146, 164, 162, \
50, 59, 48, 38, 48, 30, 87, 89, 61, 144, \
141, 114, 142, 152, 141, 174, 200, 199, 215, 246, \
247, 206, 241, 243, 205, 242, 243, 203, 238, 241, \
201, 233, 240, 198, 231, 240, 195, 227, 239, 191, \
224, 237, 185, 225, 237, 177, 218, 233, 176, 215, \
230, 178, 216, 231, 180, 216, 231, 185, 217, 230, \
186, 218, 229, 187, 220, 229, 190, 224, 231, 195, \
228, 235, 201, 231, 239, 206, 234, 240, 174, 200, \
203, 133, 158, 160, 154, 180, 180, 153, 173, 173, \
132, 146, 147, 69, 79, 79, 99, 106, 101, 113, \
124, 113, 136, 148, 133, 120, 135, 117, 102, 119, \
102, 160, 177, 164, 211, 241, 238, 204, 244, 248, \
202, 244, 249, 203, 239, 244, 201, 234, 240, 198, \
231, 240, 196, 228, 239, 192, 225, 238, 186, 225, \
237, 178, 217, 232, 175, 214, 229, 176, 216, 231, \
179, 216, 231, 183, 215, 230, 184, 217, 229, 186, \
219, 229, 188, 222, 230, 190, 224, 233, 193, 226, \
235, 197, 228, 235, 206, 235, 239, 215, 244, 247, \
217, 246, 251, 223, 248, 252, 207, 228, 230, 132, \
149, 150, 125, 138, 135, 131, 145, 138, 183, 200, \
191, 213, 234, 221, 119, 138, 122, 109, 124, 110, \
202, 229, 224, 207, 245, 247, 203, 243, 248, 204, \
239, 244, 201, 234, 241, 199, 232, 240, 196, 228, \
240, 192, 226, 239, 186, 225, 237, 177, 216, 232, \
173, 212, 227, 174, 214, 228, 176, 213, 229, 178, \
213, 229, 180, 215, 229, 182, 217, 228, 184, 219, \
229, 186, 222, 233, 190, 225, 235, 194, 227, 236, \
199, 229, 236, 200, 232, 238, 199, 235, 242, 204, \
238, 244, 210, 242, 246, 209, 238, 241, 203, 227, \
226, 133, 155, 151, 135, 158, 152, 185, 208, 200, \
209, 230, 220, 125, 142, 131, 138, 160, 154, 208, \
238, 237, 208, 242, 245, 205, 239, 244, 202, 235, \
241, 198, 231, 240, 196, 228, 239, 192, 225, 238, \
185, 225, 237, 175, 214, 229, 171, 210, 225, 170, \
210, 224, 171, 209, 226, 173, 210, 228, 175, 212, \
228, 178, 215, 228, 179, 217, 228, 182, 220, 232, \
186, 223, 235, 191, 226, 235, 196, 229, 237, 198, \
232, 239, 197, 234, 243, 200, 237, 243, 202, 239, \
242, 203, 240, 241, 211, 243, 243, 209, 238, 238, \
197, 225, 224, 154, 180, 177, 158, 181, 176, 212, \
229, 222, 98, 115, 106, 148, 170, 165, 219, 249, \
250, 205, 238, 242, 203, 236, 242, 199, 232, 240, \
195, 228, 239, 191, 225, 238, 185, 225, 237, 172, \
211, 226, 169, 208, 222, 170, 208, 223, 170, 209, \
225, 171, 209, 227, 172, 210, 227, 174, 213, 226, \
179, 218, 229, 181, 220, 233, 183, 221, 234, 188, \
225, 235, 193, 228, 237, 197, 230, 238, 198, 232, \
238, 199, 236, 238, 200, 238, 238, 203, 242, 240, \
205, 243, 244, 208, 243, 246, 215, 248, 249, 212, \
240, 241, 173, 197, 196, 156, 172, 167, 160, 173, \
164, 83, 98, 91, 168, 193, 193, 214, 245, 250, \
202, 235, 241, 199, 232, 241, 197, 229, 240, 193, \
226, 239, 187, 226, 238, 154, 185, 197, 149, 177, \
188, 150, 180, 192, 155, 185, 198, 155, 183, 196, \
155, 184, 196, 152, 183, 194, 157, 188, 200, 158, \
188, 201, 177, 211, 222, 186, 223, 232, 192, 225, \
233, 196, 227, 236, 195, 231, 239, 197, 234, 239, \
198, 236, 239, 201, 240, 240, 205, 242, 245, 207, \
241, 245, 208, 241, 245, 212, 244, 247, 219, 249, \
251, 164, 190, 189, 151, 169, 161, 118, 131, 122, \
82, 92, 91, 206, 230, 233, 206, 239, 244, 199, \
233, 240, 199, 230, 240, 197, 227, 240, 189, 227, \
240, 136, 155, 161, 147, 161, 163, 150, 166, 170, \
150, 170, 178, 150, 171, 180, 157, 178, 188, 152, \
175, 185, 148, 171, 182, 152, 177, 190, 175, 207, \
218, 184, 222, 231, 188, 224, 233, 193, 225, 236, \
193, 229, 240, 195, 232, 241, 197, 234, 241, 200, \
238, 241, 205, 240, 244, 208, 241, 246, 209, 242, \
247, 210, 243, 248, 211, 244, 249, 214, 247, 249, \
186, 211, 206, 141, 156, 148, 69, 74, 72, 134, \
153, 156, 209, 242, 245, 199, 235, 239, 200, 232, \
241, 200, 228, 240, 191, 227, 241, 141, 161, 168, \
135, 149, 151, 127, 140, 143, 135, 155, 162, 143, \
168, 179, 150, 174, 184, 160, 183, 191, 166, 188, \
197, 162, 189, 201, 177, 209, 222, 183, 220, 232, \
185, 223, 236, 188, 225, 238, 191, 228, 239, 194, \
231, 240, 196, 233, 240, 199, 237, 240, 205, 240, \
244, 208, 241, 246, 209, 242, 247, 209, 242, 247, \
210, 243, 248, 209, 242, 246, 222, 249, 249, 169, \
188, 185, 121, 132, 131, 187, 207, 209, 208, 238, \
242, 202, 237, 242, 200, 233, 242, 199, 230, 241, \
190, 227, 240, 150, 185, 204, 144, 171, 183, 141, \
166, 177, 138, 165, 177, 136, 163, 176, 139, 163, \
174, 130, 151, 159, 136, 156, 162, 152, 176, 184, \
176, 204, 214, 185, 217, 228, 182, 221, 234, 185, \
225, 238, 190, 226, 238, 193, 230, 238, 196, 233, \
240, 199, 237, 241, 205, 239, 243, 208, 241, 246, \
208, 241, 246, 210, 242, 247, 210, 244, 249, 210, \
244, 251, 215, 244, 249, 211, 233, 236, 162, 181, \
179, 207, 227, 229, 211, 239, 244, 201, 236, 241, \
199, 235, 243, 197, 230, 241, 189, 227, 240, 145, \
185, 208, 145, 173, 188, 142, 167, 179, 146, 174, \
187, 149, 177, 191, 144, 168, 179, 138, 156, 164, \
132, 147, 152, 134, 152, 154, 140, 160, 164, 162, \
185, 193, 184, 219, 229, 182, 224, 235, 188, 224, \
236, 191, 228, 237, 195, 232, 239, 198, 235, 239, \
203, 238, 242, 207, 239, 245, 207, 240, 245, 208, \
241, 246, 209, 243, 248, 208, 243, 251, 211, 242, \
253, 216, 243, 250, 183, 207, 206, 163, 184, 186, \
212, 238, 244, 200, 236, 241, 197, 235, 242, 195, \
231, 241, 188, 226, 238, 145, 183, 203, 138, 168, \
181, 138, 165, 176, 140, 171, 185, 141, 176, 193, \
140, 171, 185, 150, 175, 187, 154, 176, 185, 150, \
174, 178, 137, 158, 163, 129, 152, 162, 166, 194, \
201, 191, 222, 224, 190, 224, 232, 191, 228, 238, \
197, 232, 238, 199, 235, 239, 203, 238, 243, 207, \
239, 245, 207, 241, 246, 208, 241, 246, 209, 243, \
248, 209, 243, 251, 210, 242, 253, 211, 241, 249, \
205, 234, 235, 149, 168, 168, 192, 214, 217, 203, \
237, 242, 195, 233, 241, 193, 230, 240, 187, 225, \
239, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '22634';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a596d47950dcd165a313f46455a9001d2';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_deer8';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{72, 68, 69, 72, 69, 68, 103, 95, 88, 160, 145, \
132, 174, 150, 131, 181, 156, 132, 185, 163, 137, \
169, 156, 133, 147, 147, 117, 136, 142, 111, 124, \
128, 109, 116, 120, 106, 120, 124, 109, 103, 106, \
91, 82, 84, 71, 81, 82, 72, 88, 88, 80, \
90, 91, 83, 94, 95, 83, 102, 104, 92, 107, \
108, 98, 102, 103, 96, 92, 94, 88, 80, 82, \
74, 91, 91, 77, 107, 103, 90, 106, 97, 89, \
100, 88, 84, 129, 115, 104, 147, 135, 114, 118, \
114, 93, 94, 96, 81, 74, 69, 67, 96, 92, \
84, 110, 102, 92, 162, 144, 133, 214, 187, 167, \
192, 163, 140, 163, 138, 116, 171, 153, 137, 179, \
169, 144, 152, 146, 116, 113, 108, 90, 100, 97, \
87, 87, 86, 76, 91, 89, 82, 90, 87, 83, \
66, 63, 61, 63, 60, 61, 63, 60, 61, 69, \
66, 62, 86, 84, 79, 104, 102, 96, 107, 105, \
97, 91, 91, 86, 83, 84, 78, 113, 107, 92, \
152, 137, 119, 166, 144, 128, 166, 138, 121, 178, \
150, 128, 184, 165, 139, 146, 143, 113, 127, 135, \
107, 67, 67, 60, 106, 109, 92, 119, 116, 101, \
121, 108, 97, 172, 147, 130, 198, 171, 154, 159, \
134, 121, 112, 96, 90, 157, 142, 128, 174, 156, \
137, 114, 100, 88, 116, 108, 96, 112, 108, 93, \
97, 93, 85, 91, 86, 83, 77, 72, 71, 76, \
71, 72, 70, 64, 66, 70, 65, 66, 79, 74, \
73, 91, 86, 82, 106, 102, 96, 112, 106, 99, \
122, 114, 103, 165, 152, 134, 161, 142, 122, 157, \
131, 115, 172, 144, 124, 176, 148, 127, 164, 144, \
124, 131, 126, 104, 111, 120, 93, 76, 78, 72, \
94, 98, 86, 86, 87, 76, 84, 78, 69, 139, \
117, 107, 185, 158, 141, 191, 164, 145, 130, 108, \
100, 118, 99, 92, 167, 149, 138, 139, 123, 111, \
117, 111, 90, 129, 132, 103, 106, 108, 87, 75, \
74, 63, 78, 77, 72, 82, 79, 78, 76, 74, \
72, 77, 73, 72, 83, 78, 76, 87, 83, 79, \
101, 97, 91, 118, 110, 101, 170, 155, 141, 176, \
155, 138, 158, 134, 113, 179, 155, 134, 172, 148, \
130, 134, 115, 102, 121, 111, 98, 127, 127, 107, \
120, 126, 97, 104, 105, 100, 85, 85, 83, 61, \
62, 62, 71, 67, 69, 122, 107, 104, 175, 154, \
140, 184, 160, 142, 129, 107, 96, 119, 100, 89, \
171, 154, 137, 143, 127, 110, 121, 114, 94, 120, \
123, 99, 126, 129, 107, 109, 108, 96, 85, 83, \
79, 80, 77, 76, 80, 78, 75, 78, 78, 75, \
77, 75, 73, 92, 86, 86, 110, 103, 105, 113, \
102, 98, 187, 169, 156, 165, 139, 127, 167, 140, \
125, 177, 154, 136, 148, 127, 114, 119, 106, 96, \
114, 113, 98, 121, 125, 101, 120, 125, 93, 99, \
101, 92, 73, 73, 72, 61, 60, 66, 62, 59, \
66, 103, 94, 90, 168, 150, 139, 178, 155, 141, \
159, 137, 122, 154, 134, 115, 195, 174, 149, 167, \
146, 124, 116, 103, 88, 85, 80, 73, 97, 93, \
84, 108, 100, 96, 102, 94, 96, 106, 98, 98, \
103, 96, 94, 99, 95, 92, 116, 109, 108, 104, \
92, 92, 92, 75, 77, 132, 113, 107, 201, 180, \
166, 178, 150, 140, 174, 147, 139, 166, 145, 137, \
135, 118, 112, 112, 104, 94, 113, 115, 98, 107, \
111, 88, 105, 108, 84, 76, 78, 67, 80, 80, \
74, 84, 85, 80, 84, 84, 81, 89, 86, 80, \
153, 139, 131, 187, 165, 153, 185, 162, 143, 178, \
155, 132, 182, 155, 131, 201, 176, 150, 175, 157, \
141, 116, 106, 105, 120, 109, 110, 145, 131, 133, \
150, 136, 143, 147, 134, 138, 143, 131, 129, 140, \
127, 123, 166, 148, 139, 171, 147, 131, 167, 137, \
113, 193, 166, 140, 193, 170, 146, 169, 142, 126, \
171, 146, 137, 176, 158, 153, 125, 113, 111, 97, \
93, 84, 107, 112, 92, 104, 109, 86, 100, 101, \
82, 82, 90, 71, 113, 120, 100, 107, 111, 93, \
109, 111, 97, 111, 110, 97, 113, 104, 92, 156, \
140, 128, 194, 177, 161, 177, 155, 139, 147, 120, \
105, 157, 134, 116, 143, 127, 114, 133, 121, 117, \
138, 126, 126, 147, 133, 138, 145, 129, 137, 150, \
135, 137, 147, 131, 127, 138, 120, 114, 157, 132, \
117, 204, 173, 147, 195, 164, 128, 177, 151, 116, \
181, 158, 131, 200, 177, 156, 194, 176, 160, 154, \
142, 130, 99, 92, 88, 87, 86, 80, 93, 96, \
81, 98, 100, 85, 94, 94, 82, 116, 128, 102, \
116, 124, 99, 103, 107, 88, 100, 101, 88, 110, \
108, 93, 110, 106, 92, 118, 111, 101, 134, 124, \
118, 129, 113, 107, 123, 104, 96, 116, 100, 92, \
132, 117, 110, 147, 133, 126, 150, 138, 135, 141, \
129, 132, 130, 114, 120, 152, 135, 135, 151, 135, \
128, 166, 148, 139, 169, 142, 128, 180, 149, 131, \
142, 121, 100, 120, 104, 85, 150, 134, 117, 168, \
156, 138, 140, 134, 115, 112, 110, 91, 91, 90, \
80, 82, 81, 77, 78, 77, 73, 73, 72, 68, \
65, 64, 59, 107, 107, 92, 101, 100, 84, 97, \
95, 85, 86, 83, 79, 89, 87, 86, 93, 89, \
89, 96, 89, 91, 93, 83, 87, 94, 86, 86, \
91, 82, 77, 118, 101, 94, 171, 149, 143, 165, \
144, 140, 153, 137, 136, 149, 134, 135, 137, 120, \
120, 143, 124, 122, 160, 142, 135, 187, 168, 155, \
203, 178, 163, 175, 146, 134, 124, 105, 97, 108, \
98, 91, 106, 101, 91, 101, 99, 87, 101, 103, \
87, 100, 104, 86, 83, 84, 75, 77, 76, 72, \
72, 71, 67, 67, 66, 62, 62, 61, 57, 80, \
75, 69, 82, 80, 72, 74, 73, 70, 74, 73, \
77, 83, 82, 90, 83, 80, 88, 76, 71, 78, \
77, 71, 76, 80, 76, 82, 88, 79, 82, 162, \
140, 134, 199, 174, 166, 167, 146, 144, 145, 129, \
130, 162, 145, 143, 163, 145, 138, 158, 137, 132, \
184, 163, 158, 204, 185, 170, 226, 201, 184, 182, \
157, 142, 121, 108, 97, 116, 115, 101, 108, 111, \
93, 93, 97, 81, 85, 89, 75, 84, 87, 76, \
79, 79, 73, 77, 76, 72, 72, 71, 67, 77, \
76, 72, 75, 74, 70, 69, 66, 66, 68, 68, \
66, 68, 70, 72, 74, 75, 82, 81, 79, 89, \
79, 77, 84, 74, 70, 76, 78, 72, 75, 77, \
71, 79, 125, 113, 119, 202, 179, 174, 205, 180, \
172, 170, 152, 147, 151, 134, 135, 177, 158, 154, \
193, 173, 163, 200, 177, 169, 208, 182, 177, 219, \
196, 180, 229, 203, 184, 193, 172, 152, 127, 120, \
100, 114, 117, 93, 115, 120, 92, 105, 108, 87, \
101, 102, 90, 90, 89, 83, 71, 70, 67, 71, \
70, 67, 78, 77, 73, 81, 80, 76, 79, 79, \
74, 66, 64, 70, 66, 63, 69, 69, 64, 71, \
77, 71, 79, 86, 79, 87, 82, 75, 83, 76, \
69, 77, 75, 68, 76, 79, 71, 78, 87, 77, \
80, 141, 125, 122, 176, 154, 145, 167, 142, 130, \
151, 127, 124, 179, 154, 152, 198, 170, 161, 210, \
178, 164, 216, 182, 164, 202, 169, 150, 184, 157, \
144, 131, 114, 106, 102, 97, 87, 109, 112, 95, \
114, 119, 98, 110, 114, 96, 108, 111, 97, 94, \
98, 85, 65, 66, 63, 62, 62, 63, 75, 75, \
73, 82, 82, 78, 79, 80, 74, 60, 59, 65, \
61, 57, 64, 76, 70, 77, 87, 80, 88, 90, \
83, 90, 84, 77, 85, 75, 68, 76, 72, 65, \
73, 77, 70, 80, 76, 67, 75, 97, 84, 84, \
144, 125, 114, 159, 135, 120, 151, 124, 123, 177, \
148, 150, 196, 164, 154, 211, 175, 153, 221, 185, \
157, 198, 165, 145, 158, 131, 121, 105, 90, 85, \
87, 84, 77, 103, 105, 91, 109, 114, 94, 98, \
103, 85, 88, 92, 77, 81, 85, 72, 70, 71, \
66, 68, 68, 68, 79, 79, 76, 83, 84, 78, \
76, 77, 71, 57, 56, 62, 71, 67, 74, 87, \
81, 88, 101, 94, 102, 93, 86, 94, 81, 74, \
82, 74, 67, 75, 73, 66, 74, 70, 65, 73, \
70, 64, 70, 83, 71, 72, 122, 104, 98, 145, \
123, 114, 150, 125, 127, 172, 145, 149, 185, 155, \
147, 191, 158, 138, 206, 172, 147, 187, 156, 139, \
137, 113, 104, 102, 90, 86, 80, 78, 73, 108, \
112, 99, 112, 117, 97, 103, 107, 89, 103, 107, \
92, 89, 93, 80, 74, 75, 69, 72, 73, 69, \
82, 83, 77, 88, 89, 81, 75, 77, 67, 64, \
63, 69, 77, 73, 80, 86, 80, 88, 99, 92, \
100, 97, 90, 98, 79, 72, 80, 67, 60, 68, \
70, 63, 71, 64, 60, 63, 60, 57, 55, 70, \
61, 60, 109, 93, 93, 131, 110, 112, 145, 126, \
130, 166, 145, 148, 173, 149, 145, 169, 141, 132, \
184, 154, 142, 169, 140, 126, 103, 81, 74, 79, \
69, 67, 75, 76, 72, 108, 112, 101, 117, 121, \
103, 106, 110, 93, 98, 103, 89, 83, 87, 75, \
71, 73, 66, 73, 74, 69, 85, 86, 78, 100, \
102, 91, 95, 97, 85, 72, 69, 76, 73, 68, \
75, 83, 74, 82, 94, 86, 94, 93, 87, 92, \
77, 71, 76, 68, 62, 67, 71, 65, 70, 60, \
56, 56, 57, 53, 51, 69, 62, 62, 99, 88, \
92, 115, 101, 108, 148, 132, 138, 172, 151, 152, \
179, 153, 150, 168, 141, 138, 159, 133, 130, 160, \
133, 125, 95, 77, 73, 68, 62, 61, 65, 64, \
62, 101, 104, 96, 107, 112, 100, 92, 97, 87, \
85, 89, 82, 78, 83, 77, 72, 76, 73, 73, \
76, 73, 82, 86, 79, 95, 100, 89, 104, 110, \
94, 65, 62, 69, 73, 67, 75, 92, 82, 91, \
100, 91, 99, 90, 84, 89, 69, 63, 67, 67, \
61, 65, 69, 63, 67, 56, 51, 52, 55, 50, \
48, 61, 54, 56, 84, 74, 79, 104, 92, 100, \
158, 141, 146, 187, 163, 162, 193, 164, 158, 186, \
158, 153, 143, 117, 113, 137, 109, 102, 85, 68, \
65, 65, 60, 59, 57, 56, 54, 91, 91, 86, \
94, 97, 89, 82, 85, 78, 86, 88, 84, 89, \
92, 89, 86, 91, 85, 86, 92, 83, 93, 100, \
87, 96, 103, 85, 110, 118, 96, 64, 61, 68, \
77, 71, 79, 92, 83, 92, 97, 88, 96, 88, \
82, 87, 68, 63, 66, 64, 58, 62, 62, 56, \
60, 56, 51, 51, 54, 50, 48, 61, 55, 56, \
75, 65, 70, 115, 103, 110, 173, 154, 155, 203, \
177, 171, 210, 179, 169, 209, 179, 170, 156, 128, \
120, 115, 87, 80, 87, 69, 66, 61, 56, 55, \
54, 53, 51, 80, 80, 75, 89, 89, 81, 83, \
84, 77, 79, 79, 76, 79, 79, 77, 92, 96, \
87, 112, 118, 104, 116, 124, 105, 109, 117, 93, \
114, 123, 96, 65, 62, 69, 76, 70, 78, 95, \
85, 94, 106, 96, 105, 88, 82, 87, 67, 61, \
65, 61, 55, 59, 58, 52, 56, 56, 51, 51, \
53, 49, 47, 61, 55, 56, 98, 88, 93, 157, \
145, 152, 191, 172, 170, 209, 181, 171, 222, 190, \
176, 227, 195, 182, 200, 171, 160, 130, 102, 94, \
87, 70, 67, 57, 52, 51, 59, 58, 56, 84, \
82, 77, 89, 87, 79, 83, 80, 75, 75, 72, \
70, 65, 62, 60, 66, 69, 62, 83, 89, 78, \
104, 111, 95, 100, 108, 86, 102, 111, 87, 68, \
66, 70, 77, 73, 78, 93, 86, 92, 98, 91, \
98, 84, 80, 86, 65, 61, 66, 60, 56, 60, \
58, 54, 56, 54, 52, 50, 50, 48, 45, 58, \
52, 52, 128, 118, 122, 164, 152, 157, 178, 158, \
156, 203, 173, 161, 218, 185, 166, 226, 195, 175, \
228, 200, 184, 172, 149, 140, 78, 70, 64, 53, \
48, 47, 67, 59, 60, 81, 79, 76, 79, 80, \
73, 84, 81, 76, 88, 86, 82, 76, 76, 72, \
74, 78, 73, 76, 81, 72, 94, 101, 87, 108, \
115, 95, 115, 124, 99, 65, 65, 67, 69, 65, \
69, 79, 74, 78, 90, 84, 89, 86, 83, 90, \
65, 63, 69, 57, 55, 58, 56, 54, 55, 53, \
52, 50, 48, 47, 44, 71, 65, 65, 117, 106, \
108, 121, 107, 109, 155, 135, 131, 186, 160, 148, \
201, 170, 151, 205, 175, 154, 197, 168, 150, 173, \
151, 141, 76, 74, 66, 51, 48, 46, 73, 63, \
63, 80, 80, 75, 89, 92, 84, 94, 92, 86, \
90, 89, 82, 90, 93, 85, 92, 98, 86, 98, \
105, 90, 98, 105, 88, 100, 107, 88, 99, 107, \
85, 61, 61, 63, 65, 62, 66, 82, 77, 81, \
96, 90, 95, 87, 84, 91, 63, 61, 67, 58, \
56, 59, 56, 54, 54, 52, 51, 50, 49, 48, \
46, 81, 73, 72, 133, 118, 116, 129, 110, 108, \
131, 111, 107, 143, 121, 113, 142, 116, 105, 157, \
128, 113, 187, 154, 137, 180, 155, 141, 90, 86, \
78, 58, 55, 55, 79, 72, 69, 84, 87, 76, \
94, 97, 86, 92, 90, 81, 88, 86, 77, 95, \
98, 87, 99, 106, 87, 116, 124, 102, 108, 116, \
96, 81, 89, 70, 90, 97, 80, 57, 57, 59, \
66, 63, 66, 84, 79, 83, 84, 79, 83, 78, \
74, 81, 59, 57, 62, 57, 55, 58, 54, 52, \
53, 52, 53, 52, 49, 49, 47, 72, 63, 60, \
154, 136, 131, 155, 130, 125, 123, 103, 98, 102, \
86, 83, 101, 81, 77, 135, 106, 98, 201, 162, \
147, 190, 161, 143, 86, 81, 73, 65, 62, 64, \
95, 93, 85, 103, 109, 92, 95, 99, 85, 94, \
93, 81, 90, 90, 77, 87, 91, 77, 91, 99, \
81, 113, 121, 100, 122, 130, 107, 100, 109, 84, \
102, 110, 87, 57, 56, 59, 66, 63, 66, 71, \
67, 71, 76, 72, 77, 74, 72, 78, 54, 52, \
58, 54, 52, 55, 55, 54, 54, 54, 54, 55, \
50, 49, 51, 65, 58, 55, 144, 127, 120, 155, \
129, 120, 120, 94, 84, 92, 72, 69, 91, 69, \
71, 122, 92, 86, 197, 156, 139, 180, 151, 134, \
79, 74, 69, 63, 61, 65, 105, 105, 95, 116, \
122, 104, 102, 104, 89, 91, 90, 77, 91, 90, \
77, 98, 100, 86, 95, 102, 86, 96, 106, 87, \
102, 113, 89, 104, 114, 87, 116, 124, 97, 61, \
59, 62, 79, 77, 80, 76, 73, 76, 73, 71, \
75, 65, 64, 70, 52, 51, 56, 51, 50, 53, \
55, 55, 54, 56, 55, 56, 50, 49, 50, 65, \
60, 55, 140, 123, 114, 166, 135, 125, 143, 109, \
96, 104, 77, 72, 91, 68, 71, 119, 89, 83, \
196, 155, 136, 178, 147, 130, 75, 68, 63, 62, \
60, 63, 98, 99, 91, 108, 115, 95, 106, 110, \
92, 100, 104, 86, 94, 98, 79, 104, 108, 90, \
113, 125, 103, 105, 120, 97, 90, 102, 80, 93, \
102, 81, 94, 102, 80, 66, 64, 67, 90, 88, \
91, 80, 78, 80, 57, 55, 59, 60, 59, 64, \
55, 54, 59, 50, 50, 52, 52, 52, 52, 50, \
51, 48, 46, 46, 41, 78, 71, 63, 143, 121, \
113, 157, 121, 113, 132, 102, 93, 89, 71, 67, \
75, 60, 61, 96, 75, 69, 174, 139, 123, 192, \
157, 135, 92, 82, 71, 69, 66, 65, 95, 96, \
87, 108, 119, 97, 113, 124, 101, 114, 125, 102, \
108, 119, 96, 101, 112, 89, 104, 117, 96, 102, \
114, 94, 95, 104, 85, 92, 99, 81, 82, 87, \
69, 63, 61, 64, 79, 77, 80, 64, 62, 64, \
54, 52, 55, 60, 59, 65, 59, 58, 63, 52, \
51, 53, 49, 49, 49, 47, 46, 44, 47, 45, \
42, 58, 55, 50, 106, 91, 87, 124, 97, 95, \
108, 88, 85, 68, 60, 57, 60, 57, 54, 80, \
69, 64, 139, 114, 102, 165, 140, 124, 80, 77, \
69, 78, 79, 77, 114, 114, 101, 111, 122, 99, \
95, 107, 88, 94, 106, 88, 96, 108, 89, 87, \
99, 81, 91, 101, 85, 98, 106, 90, 89, 94, \
80, 92, 95, 82, 90, 92, 79, 62, 60, 64, \
64, 62, 66, 58, 56, 60, 58, 56, 60, 62, \
61, 67, 57, 56, 62, 54, 53, 56, 49, 49, \
50, 48, 46, 47, 48, 45, 47, 45, 44, 44, \
58, 55, 54, 72, 62, 63, 70, 61, 61, 58, \
57, 55, 54, 57, 53, 60, 57, 52, 83, 69, \
64, 77, 68, 62, 51, 58, 57, 70, 73, 74, \
102, 102, 87, 107, 112, 93, 92, 98, 88, 82, \
88, 79, 76, 82, 73, 75, 81, 72, 70, 76, \
64, 70, 75, 62, 71, 74, 62, 84, 85, 74, \
86, 88, 76, 66, 65, 71, 65, 64, 70, 55, \
54, 60, 55, 54, 60, 56, 55, 61, 57, 56, \
62, 55, 54, 60, 50, 50, 55, 48, 48, 50, \
47, 47, 46, 46, 46, 44, 45, 45, 43, 46, \
46, 44, 49, 49, 47, 50, 50, 48, 52, 53, \
51, 52, 52, 50, 47, 46, 43, 45, 45, 42, \
61, 61, 63, 66, 67, 68, 83, 84, 77, 92, \
94, 84, 80, 83, 74, 73, 76, 68, 76, 79, \
70, 75, 79, 70, 74, 76, 67, 81, 82, 73, \
78, 79, 71, 74, 75, 67, 73, 74, 65, 62, \
61, 66, 60, 59, 64, 55, 54, 59, 56, 56, \
60, 57, 56, 61, 58, 58, 62, 59, 58, 63, \
55, 54, 59, 50, 50, 51, 48, 49, 46, 46, \
46, 44, 45, 45, 43, 46, 46, 44, 50, 50, \
48, 55, 55, 53, 57, 57, 55, 54, 54, 52, \
47, 48, 45, 50, 51, 48, 68, 68, 69, 61, \
61, 62, 65, 66, 60, 80, 83, 71, 84, 88, \
74, 83, 87, 73, 86, 89, 75, 91, 94, 80, \
92, 95, 82, 97, 99, 85, 86, 87, 74, 74, \
76, 62, 71, 73, 61, 50, 50, 52, 49, 49, \
51, 49, 49, 50, 47, 47, 49, 48, 48, 49, \
48, 48, 50, 49, 49, 51, 47, 47, 49, 44, \
44, 44, 43, 43, 41, 39, 39, 38, 38, 38, \
36, 39, 39, 37, 41, 41, 39, 45, 45, 43, \
45, 45, 43, 41, 41, 39, 39, 39, 37, 49, \
49, 46, 61, 61, 63, 50, 50, 51, 52, 53, \
48, 71, 73, 61, 78, 82, 68, 79, 82, 68, \
75, 78, 64, 78, 81, 67, 77, 80, 66, 81, \
83, 70, 76, 78, 65, 70, 72, 59, 75, 78, \
64, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '22944';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1aef3fd5db61014bcded31e345fd9cd59e';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_frog7';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{226, 231, 239, 226, 231, 238, 232, 237, 244, 227, 232, \
238, 221, 225, 231, 224, 227, 235, 225, 228, 237, \
221, 224, 233, 219, 222, 231, 223, 225, 234, 174, \
174, 178, 116, 115, 109, 107, 103, 88, 137, 130, \
111, 137, 129, 111, 105, 98, 84, 115, 108, 101, \
101, 95, 95, 156, 153, 153, 188, 186, 184, 175, \
171, 164, 169, 162, 154, 182, 176, 169, 225, 224, \
223, 243, 248, 252, 252, 255, 255, 255, 255, 255, \
254, 255, 255, 254, 255, 255, 255, 255, 255, 255, \
255, 255, 255, 255, 255, 237, 242, 248, 234, 239, \
245, 232, 236, 242, 232, 236, 242, 233, 236, 245, \
233, 235, 245, 229, 232, 243, 226, 228, 239, 228, \
230, 242, 194, 193, 199, 123, 117, 114, 128, 121, \
115, 115, 108, 97, 117, 110, 92, 122, 115, 95, \
114, 106, 90, 132, 124, 111, 101, 94, 84, 95, \
89, 83, 153, 150, 147, 170, 171, 164, 154, 154, \
144, 165, 163, 155, 165, 165, 163, 191, 195, 200, \
243, 246, 250, 249, 250, 253, 250, 251, 254, 250, \
251, 254, 250, 251, 254, 250, 252, 253, 254, 255, \
255, 216, 214, 215, 211, 210, 211, 213, 211, 213, \
217, 216, 217, 213, 215, 219, 207, 210, 216, 208, \
211, 217, 206, 209, 215, 206, 210, 216, 149, 147, \
146, 131, 121, 112, 138, 128, 122, 126, 117, 109, \
148, 142, 124, 162, 155, 134, 115, 104, 88, 106, \
96, 78, 132, 125, 106, 93, 86, 75, 93, 89, \
87, 162, 165, 172, 167, 170, 174, 164, 162, 164, \
104, 104, 104, 144, 148, 150, 222, 225, 229, 242, \
243, 248, 248, 249, 254, 249, 250, 255, 249, 250, \
255, 248, 249, 252, 252, 254, 253, 173, 166, 152, \
171, 162, 156, 171, 163, 150, 179, 171, 155, 180, \
176, 163, 163, 161, 152, 160, 157, 152, 170, 167, \
164, 163, 161, 155, 126, 121, 113, 112, 104, 94, \
73, 65, 58, 85, 77, 68, 129, 123, 104, 147, \
140, 118, 96, 86, 71, 75, 66, 51, 86, 79, \
64, 95, 88, 77, 101, 96, 92, 145, 142, 151, \
183, 181, 188, 205, 201, 201, 173, 170, 166, 169, \
167, 166, 199, 199, 204, 227, 229, 238, 240, 241, \
251, 245, 247, 254, 246, 249, 251, 247, 250, 250, \
250, 253, 253, 192, 183, 165, 203, 193, 181, 152, \
144, 117, 137, 129, 98, 149, 144, 115, 151, 147, \
122, 145, 139, 124, 140, 133, 123, 125, 118, 108, \
117, 110, 96, 101, 91, 76, 83, 72, 60, 93, \
83, 70, 109, 99, 79, 123, 114, 93, 95, 88, \
75, 81, 73, 60, 81, 71, 57, 142, 129, 113, \
104, 90, 75, 71, 62, 59, 103, 98, 95, 112, \
108, 97, 119, 115, 104, 144, 140, 133, 184, 184, \
186, 216, 219, 229, 229, 231, 243, 237, 240, 249, \
241, 245, 247, 243, 247, 247, 247, 251, 252, 158, \
146, 128, 150, 139, 121, 136, 131, 97, 132, 128, \
94, 122, 118, 86, 120, 117, 87, 132, 127, 107, \
152, 146, 132, 171, 165, 153, 135, 125, 106, 138, \
122, 98, 110, 95, 77, 91, 78, 63, 89, 78, \
59, 100, 91, 73, 95, 89, 77, 96, 88, 75, \
99, 84, 68, 149, 129, 108, 143, 123, 100, 126, \
118, 105, 147, 144, 131, 122, 119, 102, 91, 88, \
72, 120, 117, 107, 161, 161, 160, 206, 210, 216, \
225, 227, 238, 229, 232, 242, 236, 240, 244, 241, \
244, 247, 245, 248, 252, 141, 128, 100, 130, 121, \
94, 136, 132, 97, 139, 138, 111, 106, 102, 82, \
116, 110, 93, 143, 137, 125, 130, 124, 112, 152, \
147, 131, 140, 130, 105, 118, 102, 74, 87, 73, \
55, 95, 86, 75, 90, 84, 74, 90, 86, 75, \
104, 97, 86, 122, 114, 101, 99, 88, 75, 86, \
73, 57, 97, 84, 67, 133, 126, 113, 157, 154, \
140, 151, 148, 132, 136, 133, 121, 155, 150, 145, \
150, 151, 148, 187, 191, 194, 218, 220, 230, 223, \
225, 237, 232, 235, 243, 236, 239, 246, 242, 245, \
252, 144, 128, 94, 145, 134, 101, 128, 123, 90, \
130, 126, 107, 133, 128, 117, 137, 130, 117, 130, \
124, 107, 106, 100, 82, 114, 108, 90, 130, 121, \
101, 110, 100, 77, 77, 68, 52, 114, 108, 97, \
85, 81, 75, 89, 86, 79, 103, 98, 88, 95, \
87, 79, 103, 95, 79, 101, 96, 75, 90, 85, \
75, 101, 93, 89, 143, 138, 122, 122, 119, 99, \
109, 106, 95, 142, 139, 137, 140, 142, 141, 172, \
176, 180, 206, 209, 220, 209, 213, 225, 219, 224, \
232, 229, 234, 240, 236, 241, 248, 140, 128, 96, \
150, 139, 102, 145, 136, 100, 136, 127, 97, 132, \
122, 98, 132, 123, 95, 111, 103, 68, 105, 97, \
66, 118, 107, 90, 115, 104, 93, 105, 98, 84, \
87, 80, 62, 113, 105, 90, 81, 72, 65, 84, \
78, 67, 110, 110, 88, 69, 61, 52, 93, 82, \
66, 108, 100, 75, 104, 95, 89, 87, 75, 73, \
112, 104, 84, 124, 119, 98, 105, 103, 97, 125, \
125, 121, 117, 118, 115, 154, 156, 160, 189, 191, \
203, 201, 205, 220, 207, 214, 225, 216, 223, 231, \
227, 234, 242, 129, 129, 96, 139, 135, 95, 153, \
146, 98, 152, 141, 89, 144, 132, 89, 143, 131, \
93, 129, 116, 77, 121, 107, 75, 134, 118, 96, \
109, 96, 83, 85, 77, 66, 109, 102, 86, 114, \
107, 90, 76, 68, 57, 81, 74, 62, 121, 116, \
95, 84, 73, 59, 88, 73, 58, 120, 107, 82, \
121, 112, 83, 110, 99, 73, 141, 130, 106, 137, \
128, 120, 119, 113, 119, 173, 172, 166, 148, 149, \
138, 111, 112, 109, 140, 141, 147, 182, 184, 198, \
201, 204, 222, 208, 213, 228, 219, 225, 235, 116, \
123, 84, 109, 111, 72, 116, 113, 68, 137, 131, \
79, 165, 157, 107, 173, 163, 118, 157, 146, 108, \
120, 107, 79, 91, 77, 57, 108, 96, 85, 89, \
80, 73, 121, 113, 100, 136, 129, 111, 93, 86, \
70, 81, 73, 66, 109, 98, 93, 115, 101, 69, \
145, 129, 84, 147, 133, 85, 143, 133, 79, 136, \
124, 81, 146, 136, 96, 150, 141, 117, 84, 77, \
73, 111, 107, 102, 160, 158, 149, 93, 93, 84, \
99, 100, 92, 133, 135, 134, 168, 170, 178, 196, \
200, 212, 211, 217, 230, 93, 101, 55, 98, 103, \
66, 107, 109, 73, 133, 133, 94, 166, 165, 119, \
181, 178, 133, 177, 172, 137, 130, 123, 98, 96, \
87, 70, 118, 109, 100, 89, 80, 74, 98, 89, \
78, 132, 125, 110, 105, 98, 81, 67, 58, 46, \
93, 82, 58, 158, 149, 80, 169, 157, 80, 137, \
121, 74, 145, 131, 101, 136, 122, 86, 142, 132, \
75, 148, 141, 92, 138, 131, 113, 116, 111, 107, \
102, 99, 92, 80, 79, 67, 72, 73, 56, 96, \
98, 80, 121, 122, 111, 153, 157, 157, 193, 201, \
210, 100, 107, 66, 93, 100, 60, 90, 97, 58, \
99, 105, 66, 130, 134, 91, 170, 172, 127, 189, \
189, 149, 146, 143, 112, 101, 94, 75, 119, 110, \
99, 90, 81, 72, 82, 73, 66, 103, 94, 86, \
97, 90, 76, 73, 66, 45, 119, 108, 73, 129, \
119, 61, 156, 146, 79, 140, 132, 85, 136, 128, \
105, 152, 139, 106, 166, 153, 92, 148, 135, 83, \
121, 110, 91, 143, 139, 127, 98, 99, 80, 67, \
68, 53, 73, 72, 58, 83, 83, 59, 100, 97, \
76, 120, 122, 104, 158, 167, 154, 98, 105, 64, \
103, 109, 74, 103, 108, 78, 99, 103, 77, 107, \
109, 78, 132, 133, 96, 174, 175, 138, 175, 172, \
140, 127, 121, 99, 105, 97, 82, 90, 82, 69, \
98, 89, 80, 121, 112, 103, 105, 98, 82, 95, \
87, 60, 127, 115, 71, 139, 125, 68, 158, 144, \
83, 135, 124, 74, 155, 147, 114, 161, 148, 114, \
138, 124, 63, 146, 134, 64, 139, 129, 82, 144, \
136, 117, 119, 113, 98, 70, 64, 43, 76, 72, \
50, 86, 84, 66, 84, 84, 65, 106, 107, 82, \
139, 140, 119, 93, 98, 67, 84, 88, 62, 86, \
89, 68, 100, 103, 86, 111, 112, 91, 120, 119, \
92, 152, 151, 119, 185, 181, 150, 158, 152, 126, \
109, 101, 81, 75, 67, 52, 100, 92, 81, 122, \
114, 101, 100, 93, 75, 116, 108, 76, 155, 140, \
84, 156, 137, 77, 142, 122, 64, 148, 132, 79, \
149, 139, 91, 142, 130, 86, 131, 116, 65, 126, \
111, 46, 145, 132, 69, 149, 136, 104, 140, 126, \
99, 133, 124, 74, 93, 89, 44, 105, 102, 87, \
112, 116, 102, 94, 96, 69, 111, 107, 82, 98, \
101, 82, 99, 102, 82, 97, 100, 81, 103, 106, \
86, 113, 114, 96, 115, 114, 94, 129, 128, 102, \
162, 160, 130, 163, 159, 129, 103, 97, 73, 86, \
79, 62, 107, 99, 86, 83, 75, 62, 82, 75, \
57, 116, 107, 69, 167, 149, 82, 170, 146, 82, \
142, 118, 61, 159, 141, 85, 135, 123, 65, 138, \
128, 73, 136, 119, 80, 130, 110, 66, 149, 132, \
72, 141, 126, 79, 142, 125, 73, 181, 170, 88, \
139, 134, 65, 108, 106, 87, 138, 143, 133, 93, \
97, 73, 92, 88, 64, 108, 113, 90, 107, 113, \
88, 104, 110, 83, 104, 110, 81, 109, 115, 91, \
111, 116, 97, 115, 116, 99, 124, 125, 103, 145, \
145, 115, 142, 140, 110, 104, 98, 71, 105, 98, \
70, 95, 85, 65, 114, 104, 81, 150, 136, 89, \
171, 142, 72, 173, 144, 74, 146, 123, 61, 156, \
140, 81, 128, 116, 60, 129, 114, 61, 147, 127, \
74, 146, 125, 65, 150, 132, 67, 144, 131, 73, \
175, 161, 95, 167, 156, 75, 153, 148, 76, 128, \
126, 86, 128, 129, 113, 103, 103, 87, 102, 97, \
74, 108, 117, 77, 106, 114, 78, 103, 110, 77, \
103, 109, 80, 102, 109, 84, 103, 109, 89, 109, \
113, 96, 109, 111, 93, 123, 124, 102, 139, 135, \
103, 123, 116, 62, 140, 134, 61, 154, 145, 77, \
146, 133, 75, 157, 140, 78, 158, 134, 66, 158, \
135, 67, 164, 143, 77, 168, 149, 85, 162, 145, \
84, 159, 141, 82, 157, 137, 74, 159, 138, 72, \
140, 121, 62, 132, 117, 68, 164, 151, 99, 149, \
138, 81, 132, 126, 73, 111, 109, 72, 123, 122, \
107, 136, 133, 126, 113, 107, 95, 85, 96, 39, \
87, 97, 49, 97, 105, 65, 101, 108, 76, 98, \
106, 77, 98, 106, 76, 97, 102, 75, 98, 101, \
78, 112, 111, 95, 118, 111, 86, 140, 128, 71, \
166, 156, 72, 179, 168, 87, 191, 174, 109, 154, \
136, 75, 154, 138, 75, 161, 144, 79, 161, 142, \
75, 168, 147, 80, 209, 189, 120, 179, 162, 92, \
154, 135, 67, 145, 124, 62, 138, 118, 66, 128, \
113, 69, 123, 111, 78, 116, 107, 77, 117, 111, \
82, 110, 106, 83, 118, 116, 101, 140, 138, 131, \
101, 98, 90, 79, 91, 27, 74, 85, 28, 77, \
87, 36, 84, 93, 48, 96, 107, 63, 99, 110, \
64, 83, 91, 48, 75, 80, 46, 100, 100, 82, \
123, 117, 91, 147, 137, 84, 144, 134, 72, 130, \
116, 62, 145, 128, 77, 153, 137, 74, 165, 148, \
81, 171, 154, 87, 155, 139, 71, 154, 138, 71, \
165, 149, 81, 166, 152, 76, 167, 149, 76, 164, \
142, 78, 161, 142, 82, 143, 130, 74, 134, 125, \
96, 125, 118, 106, 97, 92, 77, 99, 96, 78, \
111, 110, 88, 113, 114, 93, 94, 96, 76, 77, \
87, 28, 72, 82, 26, 73, 83, 27, 74, 84, \
26, 74, 84, 30, 79, 89, 38, 70, 78, 29, \
69, 73, 36, 103, 102, 82, 141, 134, 114, 113, \
102, 76, 92, 82, 57, 100, 89, 53, 142, 130, \
74, 169, 156, 86, 172, 160, 84, 185, 170, 93, \
175, 159, 84, 164, 149, 79, 156, 144, 77, 160, \
147, 80, 157, 139, 68, 166, 147, 71, 169, 152, \
79, 144, 131, 66, 100, 91, 56, 84, 78, 60, \
85, 83, 65, 84, 82, 63, 99, 94, 71, 99, \
95, 72, 101, 99, 75, 79, 89, 31, 70, 79, \
26, 75, 84, 28, 75, 85, 25, 76, 86, 28, \
73, 82, 28, 78, 85, 34, 83, 85, 45, 95, \
94, 67, 139, 132, 114, 143, 131, 124, 83, 73, \
66, 114, 105, 70, 156, 143, 82, 148, 134, 63, \
164, 155, 75, 180, 167, 85, 177, 160, 81, 165, \
150, 77, 150, 140, 74, 139, 126, 65, 169, 152, \
82, 180, 162, 81, 155, 137, 60, 136, 120, 59, \
94, 85, 53, 71, 68, 52, 85, 87, 71, 94, \
95, 77, 104, 101, 78, 103, 98, 73, 105, 100, \
74, 85, 95, 31, 75, 84, 27, 75, 84, 28, \
77, 86, 27, 77, 88, 29, 74, 84, 26, 71, \
79, 23, 74, 78, 30, 89, 90, 53, 108, 104, \
76, 111, 103, 88, 88, 80, 66, 110, 102, 62, \
143, 128, 63, 150, 132, 59, 158, 144, 64, 172, \
156, 76, 173, 156, 81, 144, 131, 63, 134, 125, \
64, 128, 116, 53, 164, 147, 74, 176, 158, 77, \
150, 132, 57, 129, 114, 56, 92, 84, 60, 85, \
85, 77, 91, 96, 85, 96, 101, 84, 104, 105, \
79, 107, 104, 73, 116, 109, 75, 85, 97, 27, \
76, 86, 26, 74, 83, 26, 75, 85, 26, 72, \
82, 26, 71, 80, 26, 70, 77, 23, 72, 76, \
27, 71, 72, 33, 71, 70, 38, 82, 79, 58, \
85, 80, 61, 108, 100, 55, 145, 129, 59, 139, \
118, 41, 152, 134, 54, 167, 148, 69, 146, 129, \
56, 127, 115, 52, 131, 125, 69, 126, 116, 51, \
150, 134, 56, 174, 156, 74, 151, 132, 60, 114, \
98, 44, 84, 75, 47, 88, 85, 70, 101, 103, \
88, 101, 103, 85, 110, 108, 84, 125, 118, 90, \
139, 129, 96, 85, 97, 25, 78, 88, 26, 75, \
84, 26, 72, 81, 25, 72, 82, 26, 68, 78, \
26, 68, 74, 30, 88, 90, 53, 103, 102, 72, \
105, 102, 70, 109, 104, 72, 100, 92, 60, 117, \
104, 53, 157, 137, 69, 166, 143, 68, 166, 148, \
71, 153, 135, 61, 131, 115, 46, 119, 108, 49, \
130, 123, 68, 131, 118, 59, 142, 125, 57, 149, \
132, 53, 140, 124, 47, 138, 122, 65, 122, 111, \
68, 113, 106, 75, 117, 114, 93, 121, 118, 97, \
138, 131, 111, 148, 138, 113, 153, 143, 106, 83, \
95, 24, 81, 92, 27, 79, 89, 29, 75, 84, \
29, 73, 83, 28, 76, 83, 35, 98, 100, 62, \
128, 126, 87, 146, 142, 93, 155, 148, 93, 179, \
167, 115, 174, 160, 107, 151, 134, 77, 134, 115, \
51, 153, 134, 63, 165, 148, 73, 147, 130, 58, \
133, 118, 50, 133, 119, 56, 131, 118, 57, 130, \
115, 54, 132, 115, 59, 127, 112, 47, 159, 145, \
71, 156, 140, 78, 121, 109, 51, 123, 114, 72, \
140, 134, 111, 157, 154, 127, 133, 127, 104, 144, \
134, 106, 169, 159, 117, 81, 92, 25, 81, 91, \
27, 76, 86, 24, 76, 85, 26, 75, 80, 27, \
94, 94, 50, 129, 125, 86, 144, 136, 90, 167, \
158, 98, 160, 149, 79, 201, 187, 120, 184, 169, \
112, 144, 130, 75, 137, 126, 64, 136, 123, 52, \
145, 124, 47, 162, 141, 64, 154, 135, 60, 148, \
131, 59, 135, 119, 46, 143, 130, 51, 157, 140, \
84, 128, 109, 65, 147, 131, 75, 155, 139, 77, \
123, 110, 50, 112, 101, 62, 141, 134, 108, 151, \
147, 114, 132, 126, 93, 145, 133, 100, 178, 164, \
126, 80, 90, 26, 84, 94, 31, 81, 91, 28, \
82, 92, 29, 93, 99, 34, 110, 111, 54, 134, \
129, 88, 146, 136, 101, 166, 152, 116, 173, 162, \
107, 190, 181, 114, 149, 137, 85, 138, 125, 79, \
143, 131, 74, 142, 128, 61, 143, 122, 54, 138, \
117, 50, 140, 122, 54, 151, 134, 66, 139, 125, \
54, 166, 153, 79, 150, 133, 82, 120, 101, 59, \
138, 121, 65, 156, 141, 79, 128, 112, 55, 127, \
113, 75, 135, 126, 98, 146, 141, 100, 145, 137, \
92, 148, 135, 93, 166, 151, 108, 81, 91, 29, \
86, 96, 33, 86, 96, 32, 93, 104, 38, 100, \
111, 41, 91, 99, 35, 110, 111, 59, 150, 147, \
95, 145, 139, 80, 166, 162, 94, 206, 202, 140, \
124, 114, 75, 92, 78, 46, 125, 110, 64, 130, \
114, 56, 127, 110, 52, 121, 104, 48, 128, 113, \
57, 127, 115, 59, 110, 98, 42, 133, 116, 60, \
151, 131, 83, 159, 140, 88, 134, 118, 56, 138, \
120, 64, 151, 134, 86, 177, 163, 127, 180, 170, \
137, 186, 179, 133, 179, 170, 119, 167, 154, 106, \
160, 144, 97, 79, 89, 28, 82, 93, 28, 82, \
93, 28, 94, 104, 43, 102, 115, 50, 84, 97, \
34, 78, 84, 30, 112, 111, 61, 150, 145, 91, \
152, 142, 71, 173, 158, 84, 151, 135, 90, 119, \
106, 69, 117, 110, 67, 125, 117, 71, 138, 124, \
66, 132, 117, 60, 123, 109, 59, 118, 106, 62, \
110, 96, 55, 146, 126, 74, 156, 135, 76, 141, \
122, 64, 135, 117, 64, 136, 118, 75, 187, 175, \
141, 214, 205, 170, 210, 201, 159, 206, 196, 149, \
199, 187, 142, 182, 169, 125, 165, 151, 108, 84, \
95, 25, 83, 94, 27, 87, 97, 38, 109, 117, \
67, 126, 138, 88, 115, 129, 78, 98, 106, 58, \
100, 100, 53, 140, 135, 87, 148, 138, 76, 164, \
150, 79, 166, 154, 87, 189, 181, 111, 175, 169, \
112, 158, 147, 107, 164, 146, 98, 150, 132, 82, \
137, 121, 71, 152, 139, 89, 154, 141, 91, 138, \
124, 69, 132, 118, 58, 119, 108, 46, 127, 118, \
59, 158, 149, 98, 207, 198, 160, 220, 210, 174, \
218, 207, 163, 204, 192, 144, 190, 176, 130, 174, \
157, 112, 170, 152, 107, 86, 98, 25, 84, 95, \
27, 87, 96, 39, 114, 122, 76, 128, 140, 102, \
136, 151, 110, 128, 138, 90, 113, 117, 65, 161, \
160, 106, 155, 148, 93, 159, 146, 95, 151, 139, \
84, 164, 155, 90, 171, 160, 109, 170, 154, 119, \
188, 168, 118, 181, 161, 105, 182, 165, 107, 174, \
159, 99, 172, 159, 98, 152, 140, 76, 124, 114, \
47, 120, 112, 46, 143, 136, 77, 194, 187, 136, \
223, 213, 175, 221, 208, 170, 211, 198, 152, 189, \
175, 125, 186, 170, 122, 193, 175, 130, 189, 170, \
126, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '23254';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a43470b7d11e58cb656178386bc8f0b92';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_ship8';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{46, 74, 65, 47, 71, 67, 49, 72, 69, 50, 79, \
72, 53, 82, 74, 53, 81, 74, 52, 81, 75, \
51, 82, 76, 51, 82, 77, 52, 83, 77, 53, \
83, 78, 53, 84, 78, 54, 84, 78, 54, 85, \
79, 55, 84, 79, 55, 84, 79, 55, 84, 78, \
57, 86, 80, 59, 87, 82, 59, 87, 82, 58, \
86, 81, 58, 86, 82, 58, 86, 82, 59, 87, \
83, 59, 87, 83, 59, 87, 83, 59, 87, 82, \
59, 87, 82, 60, 88, 83, 63, 90, 86, 62, \
88, 86, 61, 89, 85, 47, 84, 74, 53, 88, \
81, 56, 92, 86, 56, 96, 87, 58, 98, 89, \
59, 98, 89, 59, 98, 90, 57, 98, 91, 58, \
99, 92, 59, 99, 92, 59, 100, 94, 60, 101, \
97, 60, 101, 97, 59, 100, 96, 59, 100, 93, \
59, 101, 91, 60, 101, 92, 61, 102, 92, 64, \
103, 96, 65, 104, 97, 65, 104, 97, 63, 102, \
95, 62, 101, 94, 63, 102, 95, 64, 103, 96, \
65, 103, 97, 64, 102, 99, 64, 102, 99, 65, \
103, 100, 67, 105, 101, 68, 105, 100, 69, 104, \
98, 55, 85, 80, 59, 90, 86, 58, 90, 88, \
57, 91, 85, 56, 89, 84, 55, 88, 82, 60, \
93, 88, 60, 95, 91, 59, 94, 90, 59, 93, \
90, 60, 94, 92, 61, 95, 94, 61, 95, 94, \
61, 95, 94, 60, 97, 92, 61, 99, 90, 60, \
98, 90, 62, 99, 91, 64, 98, 93, 64, 96, \
93, 63, 95, 93, 62, 94, 91, 63, 96, 91, \
65, 97, 92, 65, 98, 92, 64, 97, 93, 63, \
95, 95, 65, 97, 97, 67, 99, 99, 67, 98, \
98, 67, 99, 96, 71, 100, 95, 56, 86, 82, \
58, 91, 88, 55, 90, 88, 55, 89, 85, 55, \
89, 85, 54, 88, 84, 58, 92, 88, 58, 94, \
91, 57, 93, 91, 57, 93, 91, 58, 94, 91, \
59, 95, 90, 59, 95, 90, 59, 95, 90, 58, \
97, 90, 59, 99, 90, 58, 98, 89, 59, 100, \
91, 62, 97, 93, 63, 96, 95, 62, 96, 94, \
61, 95, 93, 62, 96, 91, 63, 97, 91, 63, \
97, 91, 61, 95, 90, 62, 96, 91, 63, 97, \
93, 66, 100, 96, 66, 99, 96, 66, 99, 95, \
68, 101, 95, 53, 87, 80, 53, 90, 84, 44, \
82, 77, 45, 83, 77, 51, 89, 83, 52, 89, \
83, 55, 92, 86, 55, 93, 87, 55, 94, 88, \
55, 93, 88, 56, 94, 88, 55, 94, 87, 56, \
95, 87, 56, 95, 87, 56, 96, 87, 57, 97, \
88, 57, 97, 89, 56, 96, 88, 58, 96, 90, \
59, 96, 91, 59, 96, 91, 59, 96, 91, 58, \
96, 89, 59, 97, 90, 58, 96, 89, 58, 95, \
88, 59, 95, 89, 60, 97, 90, 63, 100, 93, \
64, 99, 94, 64, 99, 94, 65, 100, 94, 52, \
86, 78, 54, 89, 83, 50, 87, 82, 52, 90, \
83, 53, 90, 83, 54, 91, 84, 56, 93, 86, \
56, 93, 86, 56, 93, 86, 55, 92, 85, 56, \
93, 86, 56, 93, 86, 56, 93, 86, 57, 94, \
87, 58, 95, 88, 60, 97, 90, 61, 98, 91, \
58, 95, 88, 58, 95, 88, 58, 95, 88, 58, \
95, 88, 58, 95, 88, 58, 95, 88, 58, 95, \
88, 57, 94, 87, 59, 95, 88, 60, 95, 89, \
61, 96, 90, 63, 98, 92, 64, 98, 93, 65, \
98, 94, 66, 98, 92, 52, 87, 78, 54, 89, \
83, 53, 89, 84, 54, 91, 84, 54, 91, 84, \
55, 92, 85, 55, 92, 85, 56, 93, 86, 55, \
92, 85, 57, 94, 87, 58, 95, 88, 57, 94, \
87, 58, 95, 88, 57, 94, 87, 56, 93, 86, \
58, 95, 88, 60, 97, 90, 60, 97, 90, 57, \
94, 87, 58, 95, 88, 58, 95, 88, 57, 94, \
87, 58, 95, 88, 57, 94, 87, 57, 94, 87, \
58, 95, 88, 61, 97, 90, 62, 97, 91, 63, \
98, 92, 64, 98, 93, 64, 97, 93, 64, 96, \
91, 48, 82, 74, 53, 88, 82, 53, 90, 85, \
54, 91, 84, 55, 92, 85, 56, 93, 86, 56, \
93, 86, 56, 93, 86, 56, 93, 86, 57, 94, \
87, 57, 94, 87, 58, 95, 88, 59, 96, 89, \
59, 96, 89, 58, 95, 88, 57, 94, 87, 57, \
94, 87, 58, 95, 88, 57, 94, 87, 58, 95, \
88, 58, 95, 88, 58, 95, 88, 56, 93, 86, \
55, 92, 85, 59, 96, 89, 60, 96, 90, 59, \
95, 88, 60, 95, 89, 62, 97, 91, 63, 97, \
92, 63, 96, 92, 63, 95, 90, 43, 77, 69, \
53, 89, 83, 53, 90, 85, 57, 94, 87, 60, \
96, 89, 59, 96, 89, 61, 98, 91, 60, 97, \
90, 58, 95, 88, 57, 94, 87, 59, 96, 89, \
57, 95, 88, 58, 95, 88, 59, 96, 89, 59, \
96, 89, 56, 93, 86, 56, 93, 87, 58, 94, \
88, 57, 94, 87, 57, 94, 87, 57, 94, 87, \
54, 92, 85, 51, 89, 82, 51, 89, 82, 55, \
93, 86, 57, 95, 88, 57, 93, 87, 60, 95, \
89, 63, 98, 92, 62, 96, 91, 61, 94, 90, \
62, 94, 89, 48, 83, 74, 54, 89, 83, 54, \
91, 86, 57, 95, 88, 59, 96, 89, 57, 94, \
87, 60, 98, 90, 60, 98, 91, 59, 97, 90, \
61, 97, 91, 65, 99, 93, 66, 101, 93, 62, \
100, 92, 58, 96, 87, 56, 93, 84, 57, 91, \
82, 55, 90, 80, 53, 92, 82, 53, 92, 84, \
59, 94, 94, 69, 100, 97, 81, 109, 104, 85, \
109, 109, 84, 109, 109, 79, 105, 104, 74, 102, \
99, 63, 94, 89, 62, 95, 89, 61, 98, 90, \
58, 94, 88, 59, 92, 88, 61, 93, 88, 51, \
85, 77, 52, 87, 81, 53, 90, 85, 54, 91, \
84, 55, 92, 83, 56, 93, 85, 57, 95, 87, \
58, 97, 89, 61, 99, 92, 64, 101, 94, 75, \
109, 102, 73, 108, 100, 61, 103, 93, 57, 96, \
87, 48, 92, 82, 48, 87, 81, 68, 100, 93, \
89, 118, 112, 103, 128, 127, 126, 145, 156, 165, \
177, 182, 216, 223, 223, 216, 219, 225, 209, 215, \
221, 202, 210, 215, 192, 203, 206, 92, 118, 114, \
57, 89, 83, 57, 96, 87, 55, 94, 86, 60, \
93, 89, 62, 94, 89, 49, 83, 75, 51, 86, \
80, 52, 89, 84, 54, 91, 83, 58, 95, 87, \
60, 97, 89, 61, 97, 90, 66, 100, 94, 71, \
106, 100, 72, 110, 103, 72, 111, 104, 64, 104, \
96, 54, 95, 87, 54, 92, 85, 71, 108, 95, \
102, 127, 123, 122, 123, 118, 136, 125, 118, 175, \
169, 175, 186, 183, 198, 224, 221, 228, 244, 241, \
245, 250, 250, 250, 255, 255, 255, 249, 248, 252, \
197, 203, 209, 80, 108, 104, 57, 90, 83, 54, \
92, 84, 55, 92, 85, 61, 94, 90, 62, 94, \
89, 50, 85, 76, 52, 88, 82, 51, 88, 83, \
53, 90, 83, 55, 92, 84, 56, 93, 85, 62, \
98, 90, 66, 99, 93, 68, 101, 96, 69, 104, \
98, 66, 102, 96, 64, 98, 92, 81, 108, 104, \
113, 135, 133, 126, 137, 133, 121, 123, 140, 106, \
90, 94, 71, 52, 46, 132, 125, 130, 174, 169, \
181, 225, 224, 227, 233, 234, 238, 246, 246, 243, \
254, 251, 249, 226, 224, 229, 123, 134, 137, 57, \
88, 82, 58, 93, 85, 56, 92, 84, 57, 92, \
86, 62, 95, 91, 62, 94, 89, 56, 90, 82, \
54, 90, 84, 50, 87, 82, 50, 87, 79, 51, \
87, 79, 51, 88, 80, 51, 90, 82, 52, 90, \
83, 57, 91, 85, 68, 97, 92, 88, 112, 107, \
68, 82, 77, 95, 95, 96, 93, 88, 90, 39, \
36, 48, 56, 64, 113, 87, 78, 106, 56, 51, \
55, 41, 47, 53, 149, 149, 155, 213, 216, 215, \
213, 214, 220, 223, 222, 226, 247, 245, 246, 157, \
166, 168, 64, 94, 89, 56, 92, 84, 57, 92, \
85, 58, 93, 85, 60, 93, 87, 61, 93, 90, \
61, 93, 88, 54, 88, 80, 56, 90, 84, 53, \
89, 83, 50, 87, 79, 48, 87, 78, 50, 88, \
79, 51, 88, 79, 50, 87, 79, 70, 98, 97, \
83, 103, 107, 103, 117, 119, 58, 60, 59, 53, \
36, 38, 52, 23, 25, 41, 21, 29, 59, 57, \
93, 105, 79, 95, 104, 73, 70, 35, 27, 28, \
128, 126, 128, 227, 223, 223, 210, 205, 212, 199, \
198, 205, 162, 168, 169, 62, 86, 80, 45, 87, \
75, 56, 93, 85, 57, 91, 84, 58, 91, 84, \
59, 91, 85, 58, 91, 87, 60, 93, 86, 53, \
86, 79, 57, 90, 84, 56, 89, 83, 54, 90, \
83, 52, 94, 84, 55, 94, 84, 68, 98, 90, \
126, 144, 139, 169, 179, 186, 111, 119, 139, 54, \
64, 83, 37, 44, 51, 38, 26, 28, 76, 44, \
39, 104, 80, 85, 49, 43, 58, 44, 31, 34, \
129, 95, 92, 97, 71, 65, 65, 59, 56, 194, \
188, 191, 231, 228, 230, 155, 163, 160, 52, 79, \
66, 21, 58, 41, 49, 83, 72, 58, 91, 84, \
57, 90, 83, 58, 91, 84, 59, 91, 85, 58, \
91, 84, 60, 93, 85, 49, 82, 75, 54, 86, \
80, 54, 87, 81, 55, 90, 83, 56, 92, 85, \
50, 84, 78, 119, 141, 138, 240, 246, 243, 237, \
240, 235, 141, 145, 161, 64, 71, 96, 34, 39, \
50, 26, 22, 26, 45, 33, 29, 90, 76, 76, \
48, 50, 58, 33, 40, 50, 88, 67, 69, 101, \
73, 69, 118, 113, 108, 182, 181, 181, 131, 139, \
135, 57, 80, 72, 26, 63, 47, 21, 61, 43, \
53, 85, 76, 57, 89, 83, 57, 90, 83, 58, \
91, 84, 59, 92, 85, 57, 90, 84, 58, 91, \
83, 48, 81, 75, 52, 85, 79, 55, 88, 81, \
58, 92, 85, 58, 87, 83, 73, 97, 98, 168, \
182, 187, 229, 229, 230, 193, 193, 180, 178, 177, \
185, 95, 98, 124, 43, 44, 60, 24, 23, 28, \
15, 17, 18, 37, 26, 22, 47, 41, 47, 55, \
62, 81, 80, 62, 69, 166, 145, 143, 166, 170, \
163, 96, 107, 99, 46, 68, 59, 35, 70, 60, \
20, 61, 45, 31, 71, 55, 52, 85, 77, 54, \
87, 80, 56, 90, 83, 58, 91, 84, 59, 91, \
85, 57, 90, 83, 57, 89, 81, 53, 86, 80, \
59, 92, 85, 59, 93, 86, 56, 89, 81, 106, \
127, 126, 192, 206, 211, 211, 222, 231, 195, 198, \
206, 145, 142, 140, 195, 191, 195, 140, 140, 161, \
76, 75, 96, 63, 55, 61, 25, 23, 24, 52, \
39, 37, 61, 47, 49, 109, 107, 118, 167, 158, \
162, 142, 139, 136, 67, 88, 75, 32, 59, 42, \
34, 67, 53, 39, 77, 67, 42, 79, 66, 52, \
88, 75, 52, 85, 78, 53, 86, 79, 55, 88, \
81, 56, 89, 82, 57, 90, 83, 56, 89, 83, \
56, 89, 81, 43, 76, 69, 49, 81, 75, 45, \
79, 72, 51, 83, 77, 162, 180, 182, 208, 216, \
226, 177, 187, 201, 169, 177, 192, 92, 90, 101, \
156, 149, 152, 186, 184, 197, 105, 102, 125, 90, \
75, 83, 69, 53, 53, 132, 122, 119, 180, 175, \
170, 154, 156, 150, 101, 113, 106, 70, 89, 83, \
32, 67, 50, 23, 60, 39, 31, 69, 54, 52, \
86, 78, 56, 88, 79, 55, 88, 78, 53, 88, \
81, 55, 88, 82, 56, 89, 82, 55, 88, 81, \
56, 89, 82, 55, 88, 82, 56, 88, 80, 42, \
75, 63, 45, 75, 69, 55, 85, 82, 87, 114, \
116, 148, 167, 176, 116, 127, 143, 121, 129, 147, \
89, 94, 106, 60, 60, 68, 157, 152, 155, 231, \
227, 232, 129, 128, 145, 60, 54, 75, 116, 98, \
101, 158, 151, 142, 119, 128, 120, 66, 83, 73, \
55, 82, 71, 72, 102, 95, 37, 71, 57, 25, \
59, 42, 42, 75, 65, 55, 88, 81, 56, 88, \
81, 54, 87, 80, 55, 88, 81, 56, 89, 82, \
55, 88, 81, 54, 87, 80, 55, 87, 81, 56, \
88, 82, 58, 88, 80, 46, 78, 70, 65, 95, \
92, 99, 128, 129, 109, 135, 140, 134, 155, 164, \
95, 110, 125, 36, 48, 62, 21, 29, 36, 129, \
131, 135, 244, 240, 242, 253, 248, 251, 180, 181, \
188, 116, 124, 132, 100, 100, 100, 75, 83, 74, \
45, 67, 55, 46, 71, 61, 56, 86, 77, 54, \
85, 78, 41, 73, 61, 36, 68, 55, 56, 88, \
79, 55, 87, 81, 56, 89, 82, 54, 87, 80, \
52, 85, 78, 54, 87, 80, 53, 86, 79, 53, \
86, 79, 54, 86, 80, 55, 86, 80, 57, 86, \
79, 62, 92, 90, 99, 127, 130, 114, 142, 147, \
122, 150, 154, 121, 145, 151, 79, 100, 107, 39, \
58, 65, 48, 63, 66, 120, 128, 129, 230, 230, \
229, 202, 200, 200, 123, 131, 127, 70, 91, 78, \
46, 69, 62, 41, 69, 60, 40, 73, 59, 56, \
87, 76, 53, 83, 76, 45, 76, 68, 50, 81, \
73, 53, 85, 76, 59, 90, 82, 52, 84, 77, \
54, 87, 80, 55, 88, 81, 53, 86, 79, 53, \
86, 79, 53, 86, 79, 52, 86, 78, 51, 83, \
77, 52, 83, 77, 54, 84, 77, 72, 103, 100, \
83, 111, 114, 87, 116, 121, 132, 161, 164, 107, \
134, 137, 65, 93, 93, 51, 77, 76, 65, 88, \
86, 63, 81, 77, 96, 109, 102, 65, 77, 71, \
30, 50, 40, 27, 54, 39, 36, 68, 57, 42, \
77, 67, 41, 77, 64, 48, 81, 72, 51, 82, \
76, 57, 88, 80, 57, 88, 82, 58, 88, 84, \
54, 85, 77, 50, 83, 75, 51, 84, 77, 53, \
86, 79, 53, 86, 79, 52, 85, 78, 52, 85, \
78, 51, 84, 77, 50, 82, 76, 50, 81, 75, \
53, 83, 75, 60, 91, 85, 69, 97, 98, 96, \
124, 128, 105, 134, 136, 75, 104, 104, 48, 79, \
75, 44, 75, 69, 43, 70, 66, 38, 66, 57, \
33, 62, 48, 30, 60, 46, 35, 65, 57, 42, \
69, 65, 48, 77, 67, 43, 74, 61, 44, 76, \
66, 48, 79, 72, 49, 82, 76, 49, 81, 73, \
54, 84, 80, 53, 84, 82, 59, 90, 82, 57, \
90, 82, 51, 84, 77, 51, 84, 77, 51, 84, \
77, 51, 83, 76, 50, 83, 76, 50, 83, 76, \
49, 81, 75, 49, 80, 74, 52, 82, 74, 57, \
88, 86, 99, 127, 129, 113, 142, 143, 89, 119, \
117, 55, 86, 82, 52, 83, 78, 47, 78, 73, \
31, 61, 55, 32, 64, 56, 42, 75, 65, 49, \
83, 73, 50, 83, 77, 49, 78, 75, 44, 73, \
66, 44, 73, 64, 50, 78, 72, 56, 85, 79, \
57, 86, 81, 60, 89, 84, 63, 91, 88, 59, \
86, 84, 65, 93, 89, 59, 90, 84, 51, 83, \
77, 51, 83, 77, 51, 83, 77, 50, 83, 76, \
52, 85, 78, 51, 84, 77, 49, 80, 74, 48, \
79, 73, 51, 81, 73, 69, 99, 99, 83, 112, \
115, 85, 115, 113, 67, 99, 93, 53, 84, 79, \
54, 85, 80, 49, 80, 75, 45, 76, 71, 48, \
79, 74, 54, 85, 79, 55, 86, 80, 53, 84, \
78, 46, 77, 71, 44, 75, 69, 51, 79, 74, \
53, 80, 75, 63, 90, 85, 60, 86, 81, 64, \
90, 86, 68, 94, 91, 63, 89, 86, 66, 93, \
89, 59, 89, 84, 52, 83, 77, 51, 82, 76, \
51, 82, 76, 50, 82, 75, 52, 84, 77, 53, \
86, 79, 51, 82, 76, 48, 79, 73, 50, 80, \
72, 80, 110, 109, 65, 93, 95, 55, 85, 83, \
44, 76, 71, 50, 81, 76, 54, 85, 80, 54, \
85, 79, 54, 85, 79, 52, 83, 77, 54, 85, \
79, 54, 85, 79, 50, 81, 75, 45, 76, 70, \
49, 80, 74, 51, 80, 74, 56, 82, 77, 73, \
100, 95, 65, 92, 87, 56, 82, 78, 53, 79, \
76, 61, 87, 84, 80, 107, 104, 71, 102, 96, \
59, 90, 84, 50, 81, 75, 51, 82, 76, 52, \
82, 76, 49, 79, 74, 51, 82, 76, 53, 83, \
77, 49, 80, 74, 49, 79, 71, 61, 92, 88, \
55, 84, 84, 48, 78, 74, 50, 82, 76, 57, \
88, 83, 58, 89, 84, 56, 87, 81, 56, 87, \
81, 53, 84, 78, 51, 82, 76, 49, 80, 74, \
48, 79, 73, 50, 81, 75, 54, 85, 79, 52, \
80, 75, 56, 83, 78, 64, 91, 86, 59, 86, \
81, 67, 93, 90, 77, 103, 100, 75, 101, 98, \
71, 97, 94, 70, 100, 95, 66, 97, 91, 49, \
81, 75, 49, 80, 74, 52, 81, 76, 49, 78, \
73, 48, 78, 72, 49, 78, 74, 48, 80, 74, \
49, 79, 72, 49, 80, 75, 48, 77, 75, 53, \
83, 78, 59, 90, 85, 61, 92, 87, 57, 88, \
83, 53, 84, 79, 53, 84, 78, 51, 82, 76, \
49, 80, 74, 52, 83, 77, 49, 80, 74, 51, \
82, 76, 52, 83, 77, 56, 85, 80, 64, 91, \
86, 64, 91, 86, 64, 91, 86, 71, 97, 93, \
80, 106, 103, 74, 100, 97, 60, 86, 83, 58, \
89, 83, 53, 84, 78, 51, 82, 76, 49, 80, \
74, 50, 78, 73, 50, 77, 72, 49, 76, 71, \
48, 76, 71, 46, 77, 71, 49, 79, 71, 45, \
76, 71, 46, 80, 75, 54, 85, 80, 57, 89, \
83, 56, 88, 83, 52, 83, 78, 54, 86, 80, \
52, 83, 78, 50, 81, 76, 54, 86, 80, 50, \
81, 76, 49, 80, 75, 51, 83, 77, 59, 90, \
85, 77, 107, 102, 65, 94, 89, 56, 86, 81, \
63, 92, 87, 67, 97, 92, 57, 87, 82, 59, \
89, 84, 54, 84, 79, 51, 82, 77, 50, 82, \
76, 50, 82, 76, 51, 82, 77, 51, 81, 76, \
50, 80, 75, 50, 79, 74, 49, 78, 73, 47, \
77, 71, 48, 78, 72, 48, 72, 69, 52, 84, \
78, 55, 80, 76, 53, 78, 75, 53, 79, 75, \
53, 78, 75, 53, 79, 75, 51, 77, 73, 56, \
82, 78, 53, 79, 75, 47, 73, 69, 51, 76, \
73, 52, 77, 74, 70, 96, 92, 85, 111, 107, \
71, 97, 93, 51, 77, 73, 58, 83, 80, 65, \
91, 87, 65, 91, 87, 65, 90, 86, 52, 77, \
74, 51, 76, 73, 53, 78, 75, 50, 76, 72, \
49, 75, 71, 49, 75, 71, 52, 78, 74, 52, \
78, 74, 54, 77, 74, 54, 76, 71, 53, 79, \
73, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '23564';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a9f20cd680a4e5271d044a705fe205622';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_automobile8';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \
1, 1, 1, 3, 2, 4, 58, 58, 63, 94, \
95, 103, 74, 74, 81, 61, 61, 67, 51, 54, \
63, 53, 54, 61, 54, 50, 52, 48, 44, 43, \
45, 44, 45, 45, 47, 51, 43, 48, 54, 46, \
48, 56, 52, 50, 57, 63, 60, 63, 52, 51, \
51, 6, 6, 6, 0, 0, 0, 1, 1, 1, \
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \
1, 1, 1, 1, 1, 1, 1, 1, 1, 5, \
5, 4, 23, 23, 24, 42, 42, 46, 61, 61, \
62, 80, 83, 79, 97, 105, 104, 105, 111, 109, \
84, 86, 78, 72, 70, 59, 65, 65, 55, 83, \
86, 78, 101, 104, 100, 110, 109, 112, 102, 110, \
110, 76, 86, 83, 23, 24, 22, 12, 11, 11, \
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \
1, 1, 2, 1, 1, 3, 1, 1, 3, 1, \
1, 3, 1, 2, 1, 6, 7, 5, 12, 12, \
10, 40, 37, 37, 59, 60, 56, 83, 94, 85, \
120, 137, 133, 119, 135, 131, 100, 111, 103, 89, \
90, 79, 55, 54, 45, 57, 58, 49, 88, 88, \
81, 104, 100, 101, 109, 125, 120, 105, 128, 120, \
39, 43, 40, 15, 13, 13, 3, 3, 3, 1, \
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \
1, 1, 1, 1, 1, 1, 1, 1, 4, 1, \
1, 5, 2, 2, 6, 3, 2, 6, 2, 3, \
4, 6, 7, 6, 15, 13, 12, 36, 30, 29, \
42, 41, 37, 61, 74, 70, 114, 135, 136, 115, \
137, 139, 121, 136, 136, 106, 106, 105, 42, 39, \
39, 46, 43, 43, 58, 53, 53, 55, 50, 51, \
83, 100, 95, 112, 138, 131, 65, 72, 72, 15, \
14, 15, 8, 8, 8, 3, 3, 3, 3, 3, \
3, 2, 2, 2, 1, 1, 1, 1, 1, 1, \
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \
1, 1, 1, 1, 4, 2, 1, 6, 3, 2, \
7, 4, 3, 8, 6, 7, 11, 16, 16, 19, \
27, 23, 25, 45, 36, 37, 49, 41, 41, 64, \
66, 66, 115, 125, 132, 119, 133, 141, 124, 132, \
140, 105, 103, 112, 53, 48, 56, 61, 54, 60, \
68, 60, 65, 55, 50, 53, 83, 94, 94, 120, \
138, 138, 89, 98, 102, 19, 20, 22, 14, 14, \
13, 14, 14, 14, 11, 11, 11, 4, 4, 4, \
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \
4, 2, 2, 7, 11, 10, 15, 34, 33, 38, \
58, 58, 65, 81, 80, 87, 91, 85, 92, 100, \
89, 94, 107, 88, 90, 116, 95, 96, 124, 112, \
120, 123, 115, 126, 133, 125, 135, 131, 128, 137, \
121, 117, 123, 133, 125, 129, 145, 135, 138, 141, \
136, 141, 143, 144, 151, 134, 140, 149, 109, 120, \
129, 30, 34, 37, 22, 22, 21, 50, 50, 50, \
40, 40, 40, 10, 10, 10, 0, 0, 0, 1, \
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \
1, 1, 1, 1, 1, 1, 4, 11, 8, 13, \
64, 57, 64, 122, 116, 124, 146, 144, 153, 155, \
153, 162, 156, 150, 157, 155, 144, 151, 143, 121, \
123, 143, 110, 109, 143, 117, 122, 145, 122, 130, \
179, 160, 166, 198, 192, 196, 199, 193, 195, 205, \
196, 196, 205, 197, 196, 190, 181, 186, 182, 160, \
173, 157, 143, 157, 133, 142, 155, 75, 81, 86, \
33, 32, 33, 72, 72, 72, 66, 65, 65, 22, \
21, 21, 0, 0, 0, 1, 1, 1, 1, 1, \
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \
2, 2, 4, 47, 35, 40, 106, 80, 89, 137, \
118, 130, 158, 150, 160, 165, 160, 165, 172, 166, \
171, 179, 172, 176, 179, 166, 169, 183, 165, 165, \
191, 175, 177, 199, 184, 187, 215, 200, 203, 230, \
217, 218, 239, 228, 228, 248, 241, 241, 250, 245, \
244, 229, 192, 196, 224, 144, 158, 188, 124, 140, \
153, 139, 154, 138, 139, 148, 74, 72, 77, 69, \
67, 69, 64, 61, 60, 18, 17, 17, 0, 0, \
0, 1, 1, 1, 1, 1, 1, 1, 1, 1, \
1, 1, 1, 0, 0, 0, 12, 10, 10, 67, \
42, 45, 66, 22, 31, 114, 87, 97, 158, 150, \
157, 160, 153, 159, 166, 159, 165, 172, 166, 172, \
176, 169, 174, 179, 172, 175, 184, 177, 180, 189, \
182, 185, 199, 190, 193, 212, 199, 202, 225, 213, \
215, 239, 231, 231, 244, 232, 232, 209, 133, 141, \
206, 75, 90, 182, 57, 75, 160, 95, 112, 151, \
139, 149, 121, 119, 125, 65, 63, 66, 19, 16, \
16, 6, 4, 4, 1, 1, 1, 1, 1, 1, \
1, 1, 1, 1, 1, 1, 1, 1, 1, 0, \
0, 0, 26, 18, 17, 77, 37, 39, 71, 14, \
20, 106, 77, 81, 146, 140, 145, 149, 142, 151, \
140, 133, 142, 136, 128, 138, 135, 130, 137, 135, \
132, 137, 135, 132, 138, 137, 134, 139, 142, 138, \
143, 148, 141, 147, 179, 169, 172, 223, 213, 212, \
230, 209, 206, 211, 132, 134, 210, 94, 97, 187, \
49, 61, 152, 67, 74, 138, 123, 127, 138, 136, \
142, 111, 109, 112, 16, 14, 15, 2, 2, 2, \
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \
1, 1, 1, 1, 1, 0, 0, 0, 31, 18, \
15, 95, 46, 46, 105, 42, 46, 104, 75, 75, \
134, 129, 132, 147, 139, 151, 116, 108, 119, 78, \
70, 82, 72, 67, 77, 78, 77, 85, 75, 75, \
82, 62, 62, 69, 66, 65, 73, 78, 75, 81, \
128, 120, 124, 211, 199, 197, 208, 184, 180, 196, \
142, 138, 202, 134, 126, 173, 63, 66, 130, 60, \
56, 130, 120, 119, 137, 132, 138, 144, 141, 145, \
47, 46, 48, 0, 0, 0, 1, 1, 1, 1, \
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \
1, 0, 0, 0, 33, 17, 16, 98, 51, 51, \
113, 58, 61, 100, 75, 74, 126, 120, 124, 151, \
143, 155, 153, 145, 156, 97, 89, 100, 78, 73, \
83, 98, 98, 105, 103, 103, 109, 75, 75, 82, \
80, 80, 87, 107, 105, 111, 138, 131, 134, 199, \
186, 185, 189, 163, 161, 174, 122, 125, 189, 130, \
131, 184, 84, 95, 143, 71, 75, 132, 118, 117, \
145, 140, 144, 152, 149, 153, 80, 81, 85, 1, \
1, 3, 1, 1, 1, 1, 1, 1, 1, 1, \
1, 1, 1, 1, 1, 1, 1, 0, 0, 0, \
47, 29, 31, 102, 67, 68, 95, 62, 62, 98, \
79, 81, 121, 113, 119, 142, 135, 144, 173, 166, \
174, 117, 110, 119, 98, 94, 100, 110, 110, 114, \
120, 120, 123, 107, 107, 111, 116, 115, 119, 132, \
129, 133, 149, 141, 143, 185, 172, 172, 184, 162, \
162, 195, 157, 160, 211, 167, 171, 215, 150, 160, \
168, 119, 124, 136, 121, 122, 151, 144, 147, 147, \
145, 149, 115, 117, 122, 13, 14, 17, 0, 0, \
0, 1, 1, 1, 1, 1, 1, 1, 1, 1, \
1, 1, 1, 2, 2, 2, 78, 61, 66, 128, \
109, 111, 108, 98, 97, 117, 104, 111, 123, 112, \
120, 129, 122, 127, 158, 152, 157, 132, 126, 131, \
125, 120, 124, 127, 125, 126, 130, 128, 129, 131, \
129, 130, 139, 136, 137, 146, 141, 141, 155, 147, \
147, 171, 158, 160, 181, 166, 166, 207, 185, 181, \
220, 192, 191, 211, 186, 186, 167, 148, 146, 137, \
124, 124, 145, 137, 140, 139, 137, 142, 136, 139, \
144, 32, 34, 36, 0, 0, 0, 2, 2, 2, \
1, 1, 1, 1, 1, 1, 1, 1, 1, 7, \
7, 7, 99, 86, 89, 126, 117, 119, 107, 108, \
110, 125, 117, 126, 128, 118, 126, 116, 112, 114, \
126, 121, 123, 128, 123, 125, 130, 125, 126, 133, \
128, 128, 138, 133, 133, 141, 136, 136, 146, 140, \
140, 154, 146, 144, 161, 151, 150, 176, 164, 165, \
206, 195, 196, 227, 217, 210, 234, 218, 214, 217, \
212, 206, 162, 158, 150, 136, 125, 121, 129, 121, \
121, 130, 127, 130, 139, 138, 141, 45, 43, 44, \
0, 0, 0, 1, 1, 2, 1, 1, 1, 1, \
1, 1, 0, 1, 1, 12, 12, 12, 96, 87, \
87, 117, 109, 111, 119, 118, 125, 143, 138, 148, \
145, 139, 145, 131, 129, 130, 136, 134, 135, 141, \
138, 139, 145, 141, 142, 151, 143, 144, 156, 148, \
149, 163, 155, 155, 171, 162, 163, 181, 170, 169, \
191, 180, 179, 207, 196, 196, 237, 228, 228, 249, \
245, 241, 252, 246, 242, 236, 232, 225, 169, 162, \
154, 136, 125, 117, 120, 111, 108, 126, 121, 122, \
137, 128, 129, 57, 48, 45, 4, 1, 0, 0, \
1, 3, 1, 1, 1, 1, 1, 1, 0, 0, \
0, 13, 12, 12, 94, 86, 84, 119, 111, 112, \
117, 115, 123, 136, 132, 141, 145, 141, 145, 144, \
142, 143, 147, 145, 146, 150, 148, 150, 154, 150, \
151, 160, 152, 153, 165, 156, 157, 171, 162, 163, \
179, 170, 171, 187, 177, 176, 197, 187, 186, 207, \
197, 196, 221, 211, 210, 238, 232, 229, 245, 239, \
233, 226, 217, 210, 168, 157, 148, 138, 127, 117, \
116, 108, 103, 116, 110, 109, 130, 119, 118, 73, \
63, 58, 10, 6, 5, 0, 1, 2, 1, 1, \
2, 1, 1, 1, 0, 0, 0, 13, 12, 12, \
98, 90, 87, 126, 118, 118, 108, 106, 113, 118, \
114, 122, 124, 120, 124, 125, 123, 124, 126, 124, \
125, 126, 124, 125, 127, 124, 124, 131, 123, 123, \
133, 125, 126, 137, 129, 130, 142, 134, 134, 150, \
141, 140, 159, 150, 148, 170, 160, 159, 183, 174, \
172, 207, 199, 194, 225, 215, 207, 212, 200, 191, \
167, 153, 142, 138, 126, 115, 116, 108, 102, 109, \
103, 101, 131, 121, 118, 99, 89, 83, 16, 13, \
11, 0, 0, 2, 1, 1, 2, 1, 1, 1, \
0, 0, 0, 15, 14, 14, 100, 93, 88, 124, \
116, 114, 101, 100, 105, 103, 100, 106, 103, 99, \
102, 100, 98, 99, 99, 97, 98, 97, 95, 96, \
96, 93, 94, 97, 92, 91, 98, 92, 92, 100, \
94, 94, 103, 98, 97, 110, 103, 101, 116, 109, \
106, 123, 116, 114, 131, 124, 122, 150, 141, 135, \
174, 163, 154, 177, 163, 153, 155, 140, 127, 136, \
124, 111, 114, 107, 98, 107, 102, 98, 128, 118, \
114, 118, 107, 101, 25, 22, 20, 0, 0, 1, \
2, 1, 2, 1, 1, 1, 0, 0, 0, 17, \
16, 16, 94, 87, 82, 98, 91, 87, 77, 75, \
79, 75, 72, 77, 74, 70, 73, 72, 70, 71, \
71, 69, 70, 70, 68, 69, 69, 67, 67, 69, \
66, 65, 69, 67, 65, 69, 66, 65, 70, 67, \
65, 74, 69, 66, 87, 82, 79, 81, 76, 73, \
82, 76, 73, 95, 88, 81, 112, 102, 93, 126, \
114, 104, 134, 119, 107, 134, 122, 108, 103, 96, \
86, 120, 115, 110, 129, 119, 113, 119, 109, 102, \
32, 28, 26, 0, 0, 1, 2, 1, 2, 1, \
1, 1, 0, 0, 0, 18, 18, 18, 88, 80, \
74, 64, 57, 52, 41, 40, 43, 44, 41, 44, \
42, 39, 40, 58, 56, 57, 62, 60, 61, 34, \
32, 33, 33, 31, 31, 32, 30, 28, 32, 30, \
28, 32, 30, 28, 30, 28, 26, 36, 32, 30, \
123, 119, 116, 76, 72, 69, 54, 50, 47, 51, \
46, 42, 45, 38, 32, 59, 50, 43, 112, 101, \
91, 134, 123, 109, 92, 85, 74, 121, 116, 110, \
126, 117, 109, 121, 111, 104, 37, 33, 31, 0, \
0, 1, 2, 1, 2, 1, 1, 1, 0, 0, \
0, 17, 17, 17, 88, 81, 75, 45, 39, 34, \
13, 13, 14, 36, 33, 35, 41, 37, 38, 66, \
64, 65, 74, 72, 73, 13, 11, 12, 12, 10, \
10, 11, 10, 8, 11, 10, 8, 12, 10, 8, \
10, 8, 6, 22, 18, 16, 163, 158, 155, 101, \
97, 94, 42, 38, 36, 42, 38, 36, 34, 29, \
25, 63, 55, 51, 125, 116, 108, 130, 119, 105, \
88, 81, 69, 120, 115, 108, 122, 113, 104, 129, \
119, 111, 46, 42, 39, 0, 0, 0, 2, 1, \
2, 2, 1, 1, 0, 0, 0, 15, 14, 14, \
84, 80, 77, 46, 43, 40, 5, 5, 5, 36, \
35, 35, 38, 36, 37, 67, 65, 66, 85, 83, \
84, 13, 12, 12, 9, 7, 7, 11, 7, 6, \
11, 8, 7, 12, 8, 7, 10, 6, 4, 29, \
23, 21, 176, 169, 166, 116, 110, 106, 47, 41, \
38, 49, 42, 39, 50, 41, 38, 90, 81, 76, \
136, 126, 120, 118, 107, 98, 89, 80, 71, 137, \
128, 120, 135, 122, 113, 148, 138, 131, 51, 48, \
46, 0, 0, 0, 2, 2, 2, 2, 0, 1, \
1, 0, 0, 14, 12, 13, 78, 76, 76, 55, \
55, 54, 11, 11, 11, 37, 37, 37, 41, 40, \
40, 69, 67, 68, 100, 98, 99, 49, 48, 49, \
48, 45, 45, 58, 52, 52, 64, 58, 58, 70, \
65, 65, 76, 70, 69, 76, 69, 67, 187, 179, \
176, 147, 139, 137, 98, 90, 87, 126, 118, 114, \
129, 120, 116, 149, 139, 135, 158, 147, 144, 118, \
109, 104, 85, 76, 70, 141, 130, 123, 134, 119, \
111, 166, 156, 150, 50, 47, 46, 0, 0, 0, \
1, 2, 3, 2, 0, 1, 1, 0, 0, 12, \
11, 11, 75, 75, 75, 73, 73, 73, 52, 52, \
52, 64, 64, 64, 82, 81, 81, 94, 92, 93, \
110, 108, 109, 112, 110, 111, 111, 108, 109, 113, \
108, 108, 112, 107, 107, 115, 110, 109, 118, 113, \
112, 101, 97, 96, 131, 126, 125, 129, 125, 124, \
115, 110, 109, 133, 128, 125, 142, 135, 133, 141, \
133, 131, 128, 121, 118, 98, 92, 89, 78, 71, \
68, 155, 145, 141, 134, 122, 115, 170, 162, 156, \
45, 41, 40, 0, 0, 0, 2, 2, 2, 2, \
0, 1, 1, 0, 0, 8, 7, 7, 46, 45, \
46, 40, 40, 40, 30, 30, 30, 31, 31, 31, \
35, 34, 35, 36, 34, 34, 36, 34, 35, 40, \
38, 39, 39, 36, 37, 39, 35, 34, 38, 34, \
33, 37, 33, 32, 38, 35, 35, 32, 31, 32, \
33, 32, 33, 36, 35, 37, 36, 35, 36, 40, \
38, 37, 48, 45, 44, 50, 47, 46, 43, 39, \
38, 33, 30, 30, 63, 58, 58, 100, 94, 91, \
94, 85, 81, 132, 124, 119, 25, 21, 18, 2, \
0, 0, 2, 1, 1, 6, 5, 5, 12, 10, \
11, 16, 15, 15, 19, 19, 19, 9, 10, 9, \
6, 6, 6, 8, 8, 8, 7, 6, 7, 6, \
4, 5, 6, 4, 5, 6, 4, 5, 8, 6, \
6, 7, 5, 4, 7, 5, 4, 6, 4, 4, \
6, 5, 5, 6, 6, 8, 6, 6, 8, 6, \
6, 8, 6, 6, 7, 7, 7, 7, 9, 8, \
8, 9, 8, 8, 9, 8, 8, 7, 6, 6, \
43, 40, 40, 58, 53, 50, 49, 41, 38, 76, \
67, 63, 13, 7, 5, 5, 1, 0, 4, 2, \
1, 30, 28, 29, 54, 52, 53, 57, 55, 56, \
14, 13, 14, 2, 2, 2, 3, 3, 3, 9, \
9, 9, 18, 17, 17, 5, 4, 4, 4, 2, \
3, 10, 8, 9, 29, 27, 27, 30, 29, 28, \
27, 26, 25, 24, 24, 22, 23, 23, 21, 20, \
21, 21, 18, 20, 20, 17, 19, 19, 16, 18, \
17, 16, 16, 14, 15, 15, 12, 8, 9, 6, \
5, 5, 3, 5, 3, 2, 25, 20, 20, 40, \
33, 31, 37, 27, 24, 65, 55, 50, 58, 50, \
45, 48, 42, 38, 33, 29, 26, 26, 24, 25, \
43, 41, 42, 44, 42, 43, 13, 12, 12, 2, \
2, 2, 3, 3, 3, 5, 5, 5, 11, 10, \
11, 4, 2, 3, 3, 2, 2, 6, 4, 5, \
10, 9, 8, 8, 8, 6, 7, 7, 5, 7, \
7, 6, 8, 8, 6, 7, 7, 5, 6, 6, \
4, 7, 7, 4, 7, 7, 4, 7, 5, 2, \
7, 5, 2, 6, 4, 1, 5, 4, 2, 7, \
2, 1, 21, 13, 10, 60, 50, 45, 76, 64, \
57, 88, 76, 68, 82, 73, 65, 62, 55, 49, \
38, 34, 30, 17, 15, 16, 28, 26, 27, 31, \
29, 30, 16, 15, 15, 7, 7, 6, 7, 7, \
6, 8, 8, 7, 9, 8, 7, 9, 7, 7, \
10, 8, 8, 11, 9, 9, 11, 10, 10, 11, \
12, 9, 12, 13, 11, 14, 15, 12, 15, 16, \
13, 17, 15, 12, 20, 17, 13, 22, 19, 15, \
24, 21, 16, 27, 23, 17, 32, 28, 21, 40, \
35, 30, 47, 43, 37, 53, 46, 42, 65, 54, \
50, 89, 76, 70, 93, 78, 70, 81, 69, 60, \
61, 52, 45, 38, 31, 25, 18, 13, 10, 21, \
20, 21, 36, 36, 36, 42, 42, 42, 39, 37, \
35, 38, 35, 32, 39, 36, 33, 40, 37, 34, \
43, 37, 35, 45, 38, 37, 47, 40, 38, 49, \
42, 40, 51, 45, 42, 54, 49, 43, 55, 50, \
45, 57, 52, 46, 58, 53, 47, 63, 56, 49, \
66, 59, 52, 68, 61, 54, 69, 62, 55, 70, \
63, 56, 72, 65, 57, 72, 65, 57, 73, 65, \
58, 74, 64, 60, 74, 64, 61, 75, 64, 60, \
66, 54, 49, 47, 40, 36, 28, 25, 22, 11, \
9, 6, 4, 2, 1, 12, 12, 12, 23, 23, \
23, 28, 28, 27, 30, 27, 24, 32, 27, 23, \
32, 27, 23, 32, 27, 23, 34, 27, 24, 36, \
28, 25, 36, 28, 25, 36, 28, 26, 37, 29, \
26, 38, 31, 26, 39, 32, 26, 39, 32, 27, \
39, 32, 26, 39, 32, 26, 40, 33, 27, 40, \
33, 27, 40, 33, 27, 39, 32, 26, 39, 32, \
26, 38, 31, 25, 37, 30, 24, 36, 28, 25, \
34, 27, 24, 31, 23, 20, 22, 14, 12, 11, \
8, 7, 4, 4, 4, 1, 1, 1, 1, 1, \
1, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '23874';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1aac4c5fd769e401a22ac63096cff96bfa';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_automobile3';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{100, 111, 116, 126, 135, 144, 115, 125, 134, 176, 184, \
196, 188, 199, 213, 183, 198, 208, 195, 201, 212, \
189, 198, 207, 191, 201, 213, 186, 198, 212, 197, \
200, 212, 209, 210, 222, 182, 192, 201, 194, 209, \
217, 198, 211, 221, 193, 205, 216, 181, 192, 203, \
182, 196, 206, 191, 209, 218, 189, 213, 228, 182, \
207, 229, 180, 201, 227, 180, 200, 228, 168, 190, \
222, 161, 185, 214, 161, 187, 211, 163, 187, 210, \
164, 186, 208, 158, 179, 200, 162, 180, 192, 91, \
105, 100, 65, 76, 71, 111, 112, 110, 139, 137, \
139, 126, 127, 130, 151, 160, 162, 153, 163, 172, \
126, 138, 145, 118, 122, 125, 138, 142, 151, 170, \
174, 182, 156, 163, 164, 163, 172, 180, 174, 188, \
197, 163, 175, 180, 181, 189, 189, 191, 196, 197, \
144, 146, 145, 122, 125, 124, 125, 129, 130, 163, \
169, 169, 183, 198, 203, 166, 184, 197, 172, 190, \
207, 166, 189, 208, 164, 191, 211, 159, 186, 202, \
159, 180, 201, 159, 178, 201, 165, 181, 203, 140, \
158, 175, 94, 116, 108, 48, 64, 46, 63, 75, \
63, 136, 134, 119, 162, 157, 144, 161, 161, 146, \
143, 155, 141, 139, 150, 152, 157, 167, 172, 131, \
133, 136, 130, 135, 141, 135, 142, 131, 158, 163, \
152, 142, 161, 166, 142, 169, 175, 142, 157, 159, \
163, 162, 156, 182, 176, 168, 154, 143, 131, 139, \
130, 119, 142, 135, 129, 147, 141, 136, 155, 156, \
153, 154, 157, 159, 171, 178, 188, 164, 182, 198, \
170, 193, 209, 164, 183, 194, 164, 175, 181, 165, \
173, 177, 168, 174, 177, 129, 136, 134, 61, 78, \
53, 43, 55, 29, 74, 83, 69, 80, 103, 48, \
86, 108, 49, 93, 114, 56, 101, 115, 84, 89, \
98, 97, 150, 157, 166, 130, 131, 138, 156, 164, \
166, 111, 123, 92, 124, 130, 112, 130, 132, 145, \
118, 126, 139, 111, 119, 122, 130, 128, 118, 143, \
139, 134, 133, 123, 114, 144, 135, 127, 149, 145, \
140, 113, 110, 100, 96, 97, 85, 118, 119, 107, \
130, 132, 119, 128, 142, 124, 123, 144, 123, 116, \
131, 107, 115, 128, 102, 112, 123, 97, 107, 118, \
89, 104, 114, 84, 93, 103, 68, 75, 82, 53, \
85, 93, 77, 91, 115, 67, 89, 112, 58, 87, \
109, 54, 80, 92, 53, 76, 80, 81, 95, 106, \
126, 95, 94, 97, 132, 136, 130, 82, 93, 66, \
76, 77, 62, 108, 104, 111, 107, 107, 117, 89, \
85, 93, 127, 118, 116, 133, 132, 134, 123, 117, \
113, 128, 120, 115, 158, 148, 139, 145, 136, 122, \
133, 119, 98, 127, 116, 96, 109, 111, 83, 81, \
102, 48, 74, 101, 42, 79, 97, 47, 75, 90, \
48, 74, 90, 47, 77, 100, 50, 80, 102, 48, \
82, 103, 49, 93, 107, 67, 130, 137, 109, 223, \
227, 213, 206, 215, 200, 159, 180, 162, 99, 115, \
95, 76, 84, 84, 83, 95, 111, 63, 61, 62, \
53, 54, 51, 61, 69, 54, 62, 60, 51, 40, \
33, 37, 34, 36, 41, 87, 86, 85, 155, 142, \
135, 141, 136, 129, 137, 128, 115, 124, 114, 100, \
158, 140, 122, 173, 151, 138, 153, 127, 110, 150, \
131, 117, 126, 126, 109, 78, 99, 55, 77, 100, \
51, 89, 101, 65, 89, 96, 65, 104, 109, 78, \
97, 113, 73, 91, 105, 62, 105, 113, 75, 113, \
115, 89, 168, 163, 145, 241, 237, 248, 196, 203, \
219, 164, 192, 204, 141, 165, 172, 108, 122, 122, \
118, 128, 133, 106, 105, 108, 115, 115, 120, 131, \
135, 130, 127, 125, 123, 106, 98, 106, 97, 97, \
100, 128, 120, 114, 156, 124, 114, 153, 132, 121, \
156, 134, 118, 154, 131, 115, 148, 121, 102, 164, \
143, 127, 138, 118, 102, 129, 116, 103, 138, 138, \
130, 175, 187, 165, 154, 165, 141, 151, 154, 139, \
118, 114, 100, 115, 104, 92, 111, 110, 94, 121, \
121, 104, 151, 145, 132, 150, 141, 135, 149, 138, \
136, 161, 174, 188, 135, 157, 175, 158, 189, 205, \
164, 189, 206, 151, 168, 172, 201, 207, 208, 238, \
238, 241, 224, 224, 232, 180, 181, 182, 167, 165, \
165, 172, 169, 175, 173, 172, 173, 156, 140, 137, \
141, 103, 103, 136, 103, 107, 135, 100, 101, 141, \
106, 109, 131, 92, 89, 139, 105, 102, 128, 97, \
94, 114, 87, 86, 123, 111, 115, 200, 201, 196, \
191, 192, 186, 157, 156, 154, 119, 112, 105, 119, \
101, 99, 115, 106, 104, 133, 130, 127, 148, 142, \
136, 152, 145, 138, 153, 144, 140, 116, 139, 157, \
114, 138, 156, 136, 154, 165, 114, 135, 145, 99, \
113, 122, 176, 177, 182, 230, 231, 235, 204, 204, \
211, 156, 153, 157, 160, 157, 157, 162, 159, 163, \
157, 155, 156, 144, 144, 145, 126, 134, 137, 108, \
118, 129, 109, 113, 122, 117, 124, 135, 126, 127, \
136, 109, 111, 124, 109, 111, 123, 108, 110, 120, \
122, 117, 127, 167, 156, 157, 193, 188, 188, 158, \
158, 157, 107, 105, 96, 102, 89, 85, 142, 136, \
135, 147, 146, 144, 146, 137, 127, 141, 129, 112, \
147, 133, 118, 115, 141, 158, 114, 138, 153, 108, \
120, 130, 93, 104, 111, 166, 174, 182, 215, 217, \
223, 191, 195, 198, 129, 131, 135, 96, 94, 99, \
158, 157, 159, 162, 157, 160, 159, 159, 157, 146, \
152, 152, 114, 133, 142, 106, 126, 139, 107, 117, \
128, 119, 132, 142, 116, 133, 145, 95, 116, 131, \
123, 133, 143, 118, 131, 141, 127, 140, 146, 146, \
136, 129, 185, 177, 177, 181, 181, 183, 148, 149, \
147, 110, 125, 120, 154, 155, 149, 148, 144, 141, \
133, 119, 106, 117, 97, 74, 115, 99, 77, 123, \
146, 161, 103, 123, 135, 108, 117, 126, 179, 185, \
192, 221, 226, 231, 189, 192, 196, 160, 160, 163, \
96, 100, 102, 112, 120, 120, 161, 161, 157, 161, \
151, 149, 153, 152, 146, 158, 160, 157, 120, 133, \
139, 125, 141, 150, 124, 128, 134, 136, 138, 142, \
114, 123, 129, 106, 119, 126, 133, 143, 140, 129, \
139, 139, 142, 161, 163, 137, 132, 130, 150, 139, \
141, 153, 161, 159, 145, 153, 148, 99, 121, 117, \
128, 130, 120, 141, 134, 120, 112, 96, 75, 98, \
74, 45, 84, 65, 38, 118, 136, 150, 130, 141, \
154, 198, 202, 210, 210, 214, 220, 177, 181, 186, \
157, 158, 162, 130, 131, 133, 74, 80, 82, 131, \
119, 123, 174, 107, 116, 165, 121, 123, 159, 158, \
149, 162, 165, 157, 145, 156, 155, 156, 164, 171, \
166, 162, 166, 180, 170, 171, 155, 157, 158, 155, \
163, 163, 155, 174, 163, 160, 175, 165, 177, 183, \
183, 158, 157, 157, 145, 119, 121, 157, 118, 118, \
119, 112, 106, 74, 89, 83, 97, 99, 81, 113, \
107, 79, 83, 70, 45, 77, 59, 34, 71, 56, \
30, 152, 163, 177, 212, 217, 229, 225, 226, 232, \
174, 177, 182, 145, 147, 151, 146, 146, 149, 73, \
74, 74, 41, 49, 50, 108, 100, 104, 145, 79, \
86, 153, 108, 109, 183, 183, 174, 181, 182, 174, \
172, 174, 170, 164, 165, 170, 169, 162, 165, 174, \
160, 162, 154, 161, 160, 163, 171, 170, 150, 167, \
158, 166, 178, 168, 175, 174, 169, 181, 193, 187, \
148, 108, 107, 151, 49, 60, 117, 92, 95, 78, \
93, 82, 71, 79, 45, 90, 86, 53, 77, 65, \
44, 63, 51, 35, 69, 62, 42, 210, 214, 228, \
216, 218, 229, 175, 179, 183, 145, 148, 152, 142, \
143, 146, 99, 99, 101, 27, 24, 24, 33, 36, \
39, 102, 110, 113, 150, 137, 131, 150, 130, 125, \
152, 151, 145, 147, 147, 141, 156, 151, 148, 145, \
144, 144, 151, 145, 145, 144, 130, 137, 113, 132, \
132, 112, 126, 128, 128, 136, 137, 145, 151, 149, \
142, 141, 139, 156, 167, 170, 145, 117, 120, 116, \
76, 74, 102, 106, 110, 72, 84, 69, 53, 67, \
22, 86, 81, 49, 90, 63, 41, 80, 58, 42, \
81, 69, 46, 210, 213, 226, 187, 190, 198, 149, \
152, 156, 140, 142, 144, 111, 112, 114, 46, 47, \
48, 45, 45, 46, 77, 74, 82, 132, 131, 136, \
132, 144, 135, 140, 143, 134, 148, 140, 132, 143, \
134, 127, 157, 146, 142, 158, 155, 143, 170, 154, \
146, 152, 129, 125, 127, 136, 127, 117, 123, 122, \
155, 150, 150, 150, 141, 143, 133, 118, 122, 145, \
145, 137, 157, 155, 154, 99, 105, 95, 108, 122, \
113, 88, 82, 79, 42, 48, 12, 79, 63, 33, \
111, 68, 43, 103, 67, 45, 92, 76, 44, 186, \
190, 201, 150, 153, 159, 110, 112, 115, 119, 119, \
121, 55, 56, 58, 47, 48, 50, 75, 76, 77, \
109, 107, 112, 139, 138, 132, 142, 151, 134, 164, \
166, 153, 162, 118, 115, 172, 105, 110, 172, 112, \
117, 172, 124, 119, 170, 143, 129, 158, 131, 117, \
153, 124, 113, 166, 122, 120, 172, 118, 115, 159, \
102, 104, 147, 86, 90, 153, 123, 102, 158, 156, \
141, 135, 125, 110, 101, 99, 83, 72, 74, 60, \
108, 102, 59, 105, 74, 44, 99, 65, 39, 85, \
70, 39, 65, 68, 29, 162, 166, 177, 62, 65, \
71, 49, 51, 53, 66, 67, 69, 36, 37, 39, \
66, 68, 70, 87, 87, 88, 133, 135, 133, 132, \
136, 116, 173, 164, 140, 180, 144, 137, 186, 104, \
110, 198, 91, 103, 194, 84, 99, 180, 75, 86, \
168, 90, 91, 174, 98, 98, 167, 88, 90, 176, \
86, 92, 173, 76, 80, 175, 79, 86, 173, 74, \
82, 150, 93, 79, 155, 135, 118, 172, 135, 126, \
83, 73, 53, 94, 88, 45, 193, 135, 84, 131, \
75, 45, 75, 56, 35, 53, 64, 34, 44, 63, \
31, 110, 115, 124, 20, 24, 27, 39, 42, 42, \
32, 33, 35, 58, 59, 61, 77, 78, 80, 112, \
111, 113, 135, 135, 132, 133, 134, 110, 177, 162, \
137, 185, 117, 121, 190, 94, 104, 174, 78, 83, \
184, 75, 86, 181, 83, 92, 180, 73, 84, 185, \
71, 85, 171, 80, 88, 176, 78, 91, 185, 82, \
94, 175, 77, 89, 175, 70, 85, 146, 76, 76, \
144, 119, 109, 181, 148, 147, 123, 88, 69, 174, \
89, 50, 229, 85, 54, 155, 65, 44, 59, 46, \
27, 35, 50, 24, 37, 55, 31, 71, 76, 84, \
33, 37, 40, 25, 28, 28, 47, 48, 50, 71, \
72, 74, 87, 88, 90, 135, 134, 137, 120, 114, \
113, 137, 131, 111, 172, 164, 142, 176, 119, 123, \
178, 80, 93, 173, 73, 82, 169, 69, 79, 184, \
87, 98, 197, 93, 106, 182, 76, 90, 176, 87, \
96, 187, 84, 98, 176, 72, 83, 179, 79, 90, \
173, 74, 87, 168, 104, 107, 167, 149, 135, 158, \
149, 142, 127, 79, 69, 163, 63, 40, 181, 69, \
53, 108, 64, 42, 63, 66, 30, 51, 70, 26, \
50, 74, 36, 67, 72, 83, 56, 59, 68, 40, \
42, 44, 65, 68, 70, 75, 77, 79, 113, 113, \
114, 135, 130, 132, 120, 111, 106, 156, 153, 132, \
158, 156, 140, 144, 114, 110, 168, 102, 108, 172, \
82, 88, 155, 59, 68, 182, 73, 87, 200, 93, \
106, 182, 79, 90, 187, 79, 89, 195, 84, 100, \
181, 69, 81, 185, 65, 75, 174, 98, 109, 167, \
139, 142, 156, 144, 124, 160, 159, 139, 119, 98, \
91, 84, 39, 28, 70, 41, 34, 39, 51, 32, \
55, 79, 28, 54, 84, 24, 60, 94, 38, 60, \
65, 76, 74, 77, 88, 52, 54, 58, 71, 75, \
78, 88, 90, 92, 139, 139, 140, 112, 111, 113, \
130, 132, 125, 159, 165, 148, 152, 152, 147, 139, \
130, 128, 143, 134, 126, 166, 123, 105, 180, 95, \
85, 188, 87, 98, 190, 77, 94, 191, 74, 92, \
181, 70, 82, 169, 66, 79, 198, 90, 101, 186, \
121, 113, 150, 149, 131, 133, 148, 137, 132, 142, \
126, 142, 156, 137, 139, 124, 112, 127, 49, 41, \
100, 34, 29, 52, 51, 33, 70, 78, 35, 85, \
81, 33, 87, 83, 34, 45, 48, 55, 70, 72, \
81, 57, 60, 64, 74, 78, 81, 118, 120, 122, \
135, 135, 136, 102, 102, 100, 118, 120, 110, 156, \
159, 145, 161, 154, 153, 137, 130, 120, 141, 146, \
126, 175, 162, 135, 187, 148, 129, 188, 130, 125, \
182, 93, 100, 174, 74, 86, 159, 72, 79, 159, \
87, 88, 162, 112, 105, 166, 160, 139, 168, 181, \
154, 159, 162, 149, 148, 146, 139, 143, 144, 125, \
127, 118, 95, 158, 50, 38, 139, 36, 29, 43, \
48, 23, 60, 65, 29, 105, 68, 36, 129, 71, \
38, 38, 39, 41, 50, 53, 58, 66, 69, 74, \
86, 90, 93, 143, 144, 147, 111, 112, 113, 112, \
104, 96, 147, 134, 113, 178, 169, 149, 155, 143, \
135, 137, 138, 128, 154, 149, 140, 175, 149, 132, \
189, 175, 149, 188, 182, 158, 190, 161, 148, 149, \
113, 105, 143, 118, 108, 158, 137, 124, 153, 149, \
132, 152, 152, 140, 168, 159, 151, 161, 150, 144, \
138, 127, 118, 148, 139, 113, 133, 127, 107, 83, \
38, 28, 50, 13, 8, 23, 36, 21, 28, 55, \
19, 68, 50, 20, 121, 58, 30, 24, 24, 23, \
46, 49, 52, 73, 76, 81, 118, 122, 125, 140, \
141, 143, 96, 97, 98, 124, 102, 96, 161, 117, \
102, 160, 128, 115, 154, 125, 122, 141, 124, 124, \
138, 129, 129, 156, 139, 129, 163, 151, 137, 170, \
169, 157, 169, 168, 160, 126, 129, 124, 128, 141, \
132, 144, 146, 132, 174, 174, 163, 141, 153, 148, \
138, 136, 137, 163, 153, 151, 153, 150, 145, 135, \
131, 125, 135, 124, 120, 65, 55, 55, 4, 6, \
10, 30, 34, 30, 26, 52, 20, 38, 49, 17, \
81, 55, 23, 39, 40, 41, 71, 72, 75, 83, \
83, 88, 156, 156, 160, 116, 115, 118, 97, 98, \
100, 119, 99, 98, 118, 73, 68, 120, 67, 70, \
125, 61, 72, 131, 65, 71, 124, 80, 80, 133, \
107, 108, 133, 108, 114, 143, 108, 116, 138, 113, \
118, 110, 96, 103, 111, 109, 107, 115, 103, 99, \
133, 125, 122, 125, 120, 122, 125, 100, 108, 135, \
106, 114, 137, 112, 124, 116, 85, 100, 123, 97, \
105, 95, 69, 74, 53, 41, 23, 58, 55, 37, \
28, 45, 16, 33, 56, 21, 43, 53, 19, 67, \
70, 74, 77, 77, 81, 121, 121, 125, 151, 149, \
154, 97, 97, 99, 103, 102, 104, 111, 105, 109, \
114, 111, 114, 136, 129, 129, 113, 101, 99, 113, \
96, 92, 81, 74, 67, 83, 94, 83, 74, 92, \
81, 80, 90, 83, 84, 93, 86, 84, 88, 89, \
73, 91, 84, 74, 95, 84, 71, 92, 82, 74, \
84, 80, 77, 71, 71, 89, 87, 87, 74, 72, \
74, 105, 96, 96, 99, 85, 89, 109, 97, 82, \
112, 102, 52, 65, 68, 36, 30, 49, 23, 29, \
50, 17, 47, 55, 28, 69, 72, 75, 86, 86, \
91, 159, 159, 163, 118, 116, 121, 93, 96, 97, \
108, 101, 100, 115, 100, 105, 91, 95, 102, 102, \
104, 109, 106, 109, 116, 99, 104, 108, 69, 82, \
82, 74, 100, 94, 64, 98, 87, 62, 98, 86, \
64, 93, 85, 70, 85, 81, 58, 85, 82, 62, \
99, 90, 59, 93, 87, 53, 77, 76, 72, 77, \
81, 97, 99, 101, 59, 61, 64, 117, 115, 119, \
97, 101, 105, 110, 114, 89, 115, 108, 61, 62, \
73, 48, 28, 46, 27, 37, 48, 22, 78, 69, \
51, 73, 75, 79, 128, 128, 133, 154, 154, 158, \
99, 96, 100, 97, 100, 101, 117, 96, 95, 148, \
99, 99, 140, 124, 113, 134, 142, 129, 94, 133, \
126, 96, 117, 113, 104, 111, 106, 108, 122, 115, \
88, 110, 98, 78, 107, 94, 75, 104, 90, 79, \
102, 78, 73, 105, 93, 72, 101, 94, 75, 99, \
95, 78, 98, 97, 77, 87, 90, 79, 89, 89, \
85, 92, 92, 95, 102, 105, 85, 90, 95, 105, \
85, 73, 89, 75, 52, 82, 86, 79, 56, 62, \
51, 68, 66, 44, 88, 69, 53, 82, 85, 88, \
135, 134, 139, 116, 117, 120, 99, 97, 100, 100, \
101, 102, 123, 85, 86, 161, 93, 88, 176, 156, \
124, 179, 173, 135, 154, 172, 136, 166, 173, 137, \
165, 157, 123, 153, 146, 116, 147, 148, 118, 127, \
140, 122, 130, 140, 121, 151, 150, 110, 133, 140, \
115, 132, 143, 120, 139, 148, 125, 140, 150, 129, \
133, 140, 123, 138, 143, 127, 152, 153, 135, 153, \
158, 145, 150, 141, 134, 136, 70, 72, 60, 37, \
32, 99, 90, 90, 109, 97, 90, 86, 72, 49, \
83, 62, 42, 86, 88, 92, 90, 90, 95, 95, \
95, 99, 103, 102, 105, 103, 104, 105, 114, 85, \
84, 106, 49, 45, 114, 79, 54, 141, 98, 69, \
174, 129, 97, 182, 148, 105, 187, 153, 112, 191, \
161, 123, 189, 176, 135, 172, 171, 151, 174, 169, \
158, 189, 176, 156, 187, 178, 157, 190, 182, 146, \
200, 184, 139, 199, 184, 137, 193, 189, 137, 189, \
189, 140, 182, 176, 135, 173, 166, 135, 177, 155, \
133, 162, 88, 90, 137, 102, 103, 174, 134, 129, \
172, 131, 122, 113, 85, 62, 89, 68, 47, 92, \
91, 96, 93, 93, 97, 100, 100, 104, 105, 103, \
107, 106, 105, 107, 109, 99, 96, 97, 80, 72, \
74, 65, 46, 73, 51, 37, 73, 38, 27, 89, \
46, 30, 98, 48, 38, 104, 60, 48, 109, 83, \
65, 155, 147, 139, 166, 160, 165, 161, 155, 159, \
178, 173, 169, 156, 142, 122, 132, 98, 70, 140, \
95, 71, 141, 99, 69, 140, 102, 75, 123, 92, \
72, 101, 75, 61, 96, 79, 62, 98, 57, 56, \
136, 106, 109, 183, 126, 122, 162, 109, 99, 122, \
84, 65, 84, 53, 36, 93, 90, 94, 98, 96, \
100, 104, 103, 107, 110, 106, 112, 114, 106, 110, \
103, 105, 101, 98, 103, 93, 73, 83, 64, 41, \
48, 38, 34, 38, 33, 48, 47, 40, 45, 36, \
35, 44, 34, 34, 42, 40, 32, 91, 90, 88, \
99, 97, 103, 94, 91, 97, 117, 118, 120, 81, \
81, 74, 41, 25, 18, 56, 30, 31, 67, 35, \
36, 73, 42, 44, 72, 53, 53, 82, 69, 69, \
76, 66, 62, 55, 38, 37, 49, 40, 41, 124, \
83, 81, 128, 91, 84, 104, 73, 57, 72, 38, \
25, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '24184';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a9621548491eecca45beb550daf4d6101';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_truck10';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{71, 111, 133, 72, 111, 133, 73, 113, 135, 75, 112, \
137, 75, 112, 137, 75, 112, 136, 75, 112, 135, \
70, 106, 126, 60, 89, 102, 66, 98, 120, 64, \
103, 129, 64, 104, 130, 64, 107, 131, 64, 107, \
132, 66, 109, 136, 67, 110, 137, 69, 110, 136, \
70, 110, 135, 66, 110, 134, 64, 108, 132, 64, \
102, 126, 66, 89, 100, 68, 81, 85, 102, 111, \
110, 116, 125, 120, 105, 115, 109, 112, 123, 117, \
116, 126, 122, 105, 116, 111, 107, 117, 111, 116, \
127, 120, 111, 110, 106, 109, 143, 162, 110, 144, \
163, 111, 146, 164, 112, 147, 167, 113, 147, 167, \
111, 145, 167, 111, 145, 166, 108, 138, 154, 101, \
119, 128, 102, 128, 146, 104, 141, 168, 105, 144, \
169, 104, 146, 169, 106, 149, 171, 105, 150, 174, \
107, 152, 176, 108, 149, 174, 108, 147, 173, 107, \
152, 176, 106, 151, 175, 107, 148, 169, 112, 131, \
133, 110, 121, 118, 145, 157, 152, 160, 172, 164, \
147, 160, 153, 153, 166, 159, 158, 172, 163, 142, \
156, 147, 133, 150, 138, 124, 141, 128, 130, 134, \
124, 146, 170, 178, 146, 170, 178, 148, 171, 179, \
148, 173, 184, 149, 174, 186, 149, 173, 187, 149, \
173, 187, 148, 169, 179, 142, 151, 154, 139, 153, \
165, 147, 172, 189, 151, 175, 192, 154, 178, 191, \
153, 177, 190, 148, 176, 190, 151, 179, 193, 152, \
179, 195, 152, 178, 194, 154, 182, 197, 153, 180, \
196, 153, 181, 195, 160, 171, 167, 155, 162, 157, \
180, 189, 183, 192, 199, 193, 185, 194, 189, 187, \
196, 189, 188, 197, 189, 175, 186, 176, 152, 167, \
154, 136, 151, 136, 127, 133, 118, 139, 168, 178, \
139, 166, 179, 140, 167, 179, 143, 171, 184, 144, \
173, 187, 144, 174, 189, 144, 173, 189, 145, 172, \
187, 137, 151, 161, 131, 151, 167, 146, 172, 189, \
158, 179, 194, 164, 179, 190, 178, 194, 204, 182, \
200, 211, 183, 202, 214, 160, 183, 198, 157, 182, \
198, 163, 188, 207, 163, 186, 205, 164, 189, 207, \
173, 186, 192, 166, 173, 173, 193, 198, 192, 206, \
209, 203, 201, 205, 201, 208, 212, 206, 210, 214, \
207, 203, 209, 201, 183, 194, 183, 148, 160, 145, \
125, 132, 115, 110, 146, 159, 113, 144, 162, 113, \
143, 157, 113, 145, 157, 114, 149, 168, 114, 150, \
167, 111, 147, 164, 110, 145, 164, 106, 127, 140, \
102, 133, 151, 126, 153, 165, 152, 170, 178, 147, \
158, 161, 184, 196, 197, 203, 211, 211, 200, 209, \
212, 180, 199, 207, 180, 203, 212, 139, 176, 189, \
130, 167, 184, 132, 166, 184, 140, 153, 154, 125, \
136, 130, 166, 177, 168, 188, 197, 187, 186, 196, \
187, 201, 209, 200, 208, 213, 205, 210, 215, 208, \
203, 208, 201, 164, 171, 158, 130, 135, 122, 96, \
131, 150, 95, 130, 146, 92, 128, 139, 91, 129, \
142, 96, 138, 160, 94, 137, 157, 93, 135, 156, \
86, 131, 154, 74, 109, 124, 81, 119, 134, 90, \
115, 115, 121, 142, 144, 83, 101, 103, 101, 120, \
120, 155, 170, 170, 182, 199, 198, 169, 188, 191, \
179, 190, 188, 116, 159, 169, 91, 148, 167, 95, \
147, 169, 106, 129, 122, 90, 103, 90, 165, 177, \
167, 173, 182, 170, 167, 177, 165, 186, 195, 183, \
196, 202, 192, 205, 210, 201, 210, 215, 208, 175, \
182, 169, 133, 138, 125, 98, 133, 153, 94, 131, \
144, 89, 127, 134, 83, 125, 138, 92, 138, 160, \
90, 137, 159, 87, 133, 157, 82, 130, 153, 64, \
102, 114, 63, 101, 108, 59, 79, 70, 91, 114, \
114, 16, 38, 42, 26, 47, 50, 110, 130, 130, \
179, 198, 194, 162, 164, 166, 157, 142, 139, 114, \
152, 176, 85, 145, 177, 90, 146, 179, 99, 122, \
126, 78, 90, 80, 175, 187, 174, 167, 177, 162, \
154, 165, 151, 174, 183, 169, 186, 192, 179, 198, \
204, 193, 212, 217, 210, 186, 193, 179, 138, 144, \
131, 103, 138, 153, 101, 133, 145, 94, 126, 134, \
87, 125, 135, 98, 141, 159, 99, 143, 162, 93, \
137, 161, 87, 125, 143, 63, 85, 87, 52, 77, \
76, 66, 82, 72, 77, 101, 105, 16, 34, 41, \
18, 31, 39, 107, 121, 125, 190, 207, 200, 194, \
201, 194, 186, 179, 176, 124, 157, 175, 90, 134, \
148, 84, 127, 133, 96, 112, 106, 65, 77, 67, \
143, 156, 141, 167, 177, 160, 152, 164, 147, 166, \
175, 159, 176, 182, 167, 190, 196, 184, 211, 216, \
209, 193, 200, 186, 143, 148, 135, 106, 142, 153, \
104, 137, 147, 97, 127, 134, 90, 125, 130, 100, \
142, 156, 102, 146, 163, 81, 118, 129, 68, 99, \
108, 36, 47, 48, 28, 41, 39, 74, 87, 80, \
83, 97, 101, 25, 42, 46, 32, 56, 55, 120, \
146, 141, 196, 214, 206, 206, 224, 215, 211, 224, \
220, 111, 140, 140, 43, 69, 55, 54, 78, 52, \
89, 104, 88, 65, 75, 62, 138, 146, 130, 174, \
183, 165, 155, 165, 147, 162, 174, 157, 166, 176, \
157, 182, 190, 175, 207, 214, 206, 198, 204, 193, \
146, 151, 138, 108, 144, 155, 102, 137, 147, 96, \
126, 133, 88, 119, 120, 89, 129, 137, 95, 137, \
147, 57, 85, 77, 54, 83, 79, 31, 45, 45, \
21, 32, 31, 81, 95, 87, 99, 103, 100, 34, \
49, 47, 56, 85, 72, 129, 154, 143, 203, 214, \
208, 207, 224, 219, 205, 222, 217, 109, 128, 120, \
47, 60, 32, 57, 66, 31, 87, 102, 87, 68, \
75, 62, 140, 148, 130, 173, 184, 165, 157, 164, \
145, 162, 174, 158, 158, 172, 149, 172, 183, 163, \
203, 211, 202, 201, 206, 198, 148, 153, 141, 110, \
145, 154, 102, 135, 143, 95, 124, 129, 88, 112, \
110, 76, 104, 102, 67, 97, 91, 57, 78, 59, \
47, 72, 54, 41, 61, 50, 22, 36, 32, 96, \
110, 96, 109, 117, 107, 95, 105, 101, 136, 142, \
133, 178, 183, 179, 210, 217, 213, 218, 233, 226, \
219, 234, 228, 112, 123, 103, 57, 65, 24, 70, \
75, 30, 92, 99, 73, 72, 76, 62, 134, 149, \
129, 170, 184, 164, 159, 168, 146, 174, 180, 163, \
157, 169, 145, 163, 173, 151, 202, 211, 199, 203, \
208, 198, 149, 154, 142, 112, 143, 152, 103, 133, \
140, 94, 121, 124, 84, 105, 103, 77, 98, 90, \
66, 88, 72, 59, 75, 55, 41, 58, 39, 52, \
68, 57, 79, 93, 87, 158, 171, 158, 182, 193, \
181, 164, 179, 175, 232, 236, 227, 216, 232, 224, \
211, 231, 222, 225, 238, 230, 231, 243, 235, 129, \
136, 104, 88, 94, 42, 87, 93, 41, 101, 105, \
72, 72, 75, 62, 131, 145, 125, 179, 184, 165, \
152, 161, 137, 119, 124, 105, 120, 130, 104, 122, \
129, 106, 194, 203, 189, 203, 208, 196, 150, 156, \
143, 111, 141, 147, 101, 130, 135, 89, 114, 116, \
73, 94, 95, 61, 83, 73, 56, 77, 59, 72, \
90, 77, 129, 138, 130, 191, 198, 195, 222, 230, \
226, 231, 242, 235, 203, 215, 208, 140, 164, 164, \
221, 237, 229, 219, 237, 229, 216, 230, 223, 230, \
241, 232, 233, 244, 234, 142, 149, 112, 94, 105, \
47, 94, 105, 50, 103, 109, 74, 64, 70, 58, \
133, 140, 123, 184, 170, 157, 156, 164, 137, 141, \
150, 128, 140, 148, 121, 145, 151, 127, 184, 193, \
177, 201, 207, 193, 151, 157, 144, 110, 141, 144, \
101, 129, 134, 85, 113, 111, 68, 93, 88, 95, \
112, 105, 158, 170, 163, 213, 225, 219, 238, 247, \
242, 241, 250, 246, 232, 242, 237, 230, 241, 236, \
209, 221, 216, 129, 154, 157, 208, 229, 222, 230, \
240, 235, 222, 232, 226, 231, 241, 233, 233, 243, \
235, 128, 131, 108, 79, 87, 41, 98, 100, 51, \
90, 90, 66, 54, 58, 46, 122, 132, 109, 163, \
167, 151, 152, 165, 143, 182, 193, 170, 151, 160, \
130, 152, 160, 134, 182, 191, 172, 201, 206, 193, \
151, 157, 144, 107, 137, 138, 99, 125, 127, 84, \
110, 104, 96, 120, 111, 200, 214, 209, 237, 245, \
241, 240, 249, 244, 234, 244, 239, 235, 246, 240, \
230, 241, 235, 228, 239, 233, 198, 210, 205, 137, \
162, 164, 221, 236, 230, 227, 236, 231, 212, 225, \
219, 230, 241, 233, 234, 245, 237, 129, 138, 110, \
90, 95, 41, 94, 101, 46, 80, 80, 50, 47, \
49, 36, 135, 147, 121, 167, 179, 156, 156, 165, \
143, 184, 197, 170, 151, 160, 129, 150, 160, 132, \
181, 191, 172, 199, 204, 191, 151, 156, 144, 108, \
134, 132, 100, 123, 120, 87, 110, 98, 129, 148, \
140, 221, 234, 229, 236, 245, 241, 237, 246, 241, \
240, 248, 243, 242, 250, 245, 230, 239, 234, 234, \
245, 239, 206, 219, 212, 138, 162, 162, 233, 240, \
236, 229, 237, 233, 211, 224, 217, 230, 241, 233, \
234, 244, 237, 143, 144, 123, 104, 94, 49, 101, \
97, 56, 85, 73, 48, 51, 47, 42, 143, 155, \
131, 180, 183, 157, 163, 165, 138, 171, 184, 153, \
146, 155, 125, 149, 159, 131, 176, 186, 166, 197, \
202, 190, 151, 156, 143, 110, 132, 126, 99, 117, \
109, 89, 108, 91, 139, 153, 144, 216, 227, 223, \
240, 250, 245, 244, 253, 248, 245, 252, 248, 244, \
250, 246, 232, 239, 235, 236, 247, 241, 234, 244, \
238, 172, 189, 189, 231, 235, 230, 227, 236, 231, \
229, 243, 236, 229, 240, 232, 233, 243, 236, 147, \
142, 136, 96, 73, 59, 94, 84, 60, 87, 82, \
63, 50, 50, 47, 139, 150, 130, 173, 178, 155, \
146, 149, 121, 151, 161, 130, 143, 153, 122, 146, \
156, 128, 165, 175, 156, 193, 198, 186, 151, 156, \
144, 109, 128, 120, 102, 118, 105, 99, 116, 94, \
150, 161, 152, 204, 214, 210, 243, 252, 248, 246, \
255, 250, 249, 255, 252, 250, 254, 251, 237, 243, \
239, 238, 248, 243, 237, 245, 239, 222, 234, 234, \
209, 218, 211, 201, 211, 205, 230, 242, 236, 228, \
239, 231, 232, 243, 235, 154, 167, 145, 65, 74, \
51, 91, 70, 37, 96, 88, 51, 50, 51, 40, \
118, 128, 109, 170, 179, 160, 154, 160, 136, 155, \
162, 136, 148, 157, 127, 149, 159, 132, 161, 170, \
149, 188, 193, 179, 149, 154, 140, 115, 135, 121, \
114, 134, 112, 113, 131, 102, 161, 176, 160, 214, \
222, 219, 241, 246, 243, 247, 252, 251, 247, 249, \
249, 248, 248, 248, 242, 245, 243, 207, 215, 212, \
227, 237, 234, 204, 227, 224, 196, 221, 215, 209, \
218, 213, 232, 241, 235, 228, 237, 228, 233, 245, \
229, 161, 169, 114, 98, 95, 48, 108, 108, 61, \
96, 102, 43, 61, 65, 35, 92, 96, 70, 134, \
138, 119, 99, 101, 87, 94, 96, 85, 81, 85, \
73, 78, 82, 67, 114, 119, 87, 154, 158, 132, \
106, 113, 93, 118, 135, 119, 113, 131, 109, 112, \
127, 96, 164, 173, 155, 237, 246, 242, 245, 251, \
248, 255, 255, 255, 251, 254, 254, 243, 246, 245, \
232, 234, 234, 164, 173, 171, 201, 209, 207, 220, \
233, 232, 221, 236, 233, 230, 235, 232, 242, 247, \
243, 237, 245, 238, 234, 230, 216, 170, 170, 126, \
113, 111, 63, 104, 109, 71, 89, 96, 59, 61, \
64, 46, 51, 54, 36, 28, 30, 18, 7, 8, \
2, 0, 1, 0, 0, 1, 0, 7, 8, 4, \
47, 50, 31, 109, 113, 98, 92, 98, 88, 117, \
130, 113, 112, 125, 103, 107, 115, 84, 179, 178, \
156, 240, 250, 244, 221, 228, 225, 140, 148, 145, \
111, 121, 117, 132, 140, 137, 209, 214, 213, 180, \
192, 188, 158, 165, 163, 200, 201, 201, 195, 199, \
198, 191, 192, 190, 188, 189, 187, 190, 197, 195, \
147, 135, 128, 123, 125, 118, 102, 105, 88, 44, \
56, 37, 44, 57, 44, 24, 30, 27, 19, 24, \
17, 38, 41, 37, 27, 30, 28, 5, 7, 9, \
6, 7, 9, 5, 6, 8, 30, 34, 30, 112, \
115, 114, 92, 96, 97, 119, 127, 109, 114, 122, \
102, 114, 115, 84, 177, 165, 140, 234, 247, 239, \
127, 137, 133, 28, 38, 34, 39, 55, 50, 52, \
66, 61, 225, 232, 230, 197, 212, 208, 62, 71, \
67, 83, 87, 83, 61, 69, 64, 109, 114, 110, \
29, 33, 30, 26, 31, 33, 28, 31, 35, 37, \
49, 58, 60, 69, 69, 36, 47, 44, 38, 50, \
47, 50, 58, 56, 48, 54, 48, 43, 48, 45, \
36, 42, 38, 19, 23, 23, 4, 5, 5, 4, \
6, 6, 47, 52, 50, 94, 99, 97, 89, 93, \
92, 122, 127, 110, 118, 122, 103, 118, 116, 87, \
205, 195, 173, 227, 240, 232, 63, 75, 71, 73, \
85, 80, 102, 119, 111, 74, 91, 84, 181, 189, \
186, 192, 207, 203, 111, 124, 119, 165, 179, 170, \
154, 171, 161, 194, 203, 196, 50, 58, 54, 34, \
43, 48, 66, 91, 102, 111, 134, 131, 194, 213, \
202, 87, 97, 97, 32, 40, 39, 30, 37, 32, \
36, 43, 35, 53, 59, 51, 46, 53, 44, 30, \
34, 30, 7, 9, 5, 16, 19, 14, 47, 54, \
46, 94, 101, 91, 121, 127, 117, 120, 128, 108, \
118, 121, 96, 121, 124, 97, 184, 194, 186, 178, \
189, 188, 47, 60, 59, 98, 116, 108, 153, 164, \
148, 110, 124, 113, 136, 145, 141, 201, 213, 209, \
119, 133, 127, 129, 139, 133, 130, 140, 133, 143, \
149, 141, 52, 57, 52, 54, 70, 66, 110, 139, \
142, 139, 164, 161, 186, 212, 205, 83, 95, 93, \
24, 28, 30, 22, 26, 24, 49, 55, 47, 101, \
107, 93, 93, 103, 86, 37, 42, 39, 12, 15, \
14, 26, 27, 25, 46, 51, 45, 90, 97, 88, \
96, 102, 89, 121, 129, 106, 119, 123, 95, 109, \
114, 85, 79, 91, 82, 48, 60, 59, 42, 58, \
59, 117, 135, 135, 228, 234, 226, 133, 147, 138, \
109, 122, 117, 198, 211, 206, 137, 149, 145, 201, \
201, 199, 214, 215, 212, 210, 216, 211, 83, 91, \
71, 118, 132, 103, 200, 221, 208, 201, 217, 214, \
201, 218, 212, 95, 105, 99, 18, 22, 19, 29, \
32, 29, 70, 75, 68, 61, 68, 59, 98, 113, \
96, 62, 70, 63, 16, 20, 19, 24, 25, 24, \
45, 50, 44, 60, 66, 59, 70, 74, 70, 126, \
134, 110, 121, 127, 100, 108, 115, 90, 64, 77, \
68, 41, 53, 52, 51, 68, 69, 145, 164, 168, \
235, 242, 241, 143, 159, 151, 92, 106, 100, 189, \
201, 198, 153, 167, 162, 223, 236, 229, 230, 242, \
236, 203, 211, 207, 112, 123, 102, 150, 158, 138, \
185, 194, 192, 177, 186, 183, 173, 183, 174, 114, \
123, 115, 17, 22, 16, 30, 33, 29, 79, 84, \
77, 33, 41, 34, 104, 121, 106, 97, 107, 99, \
17, 20, 19, 20, 21, 20, 49, 54, 48, 71, \
76, 71, 58, 61, 62, 131, 137, 121, 130, 137, \
118, 118, 126, 111, 68, 82, 74, 62, 74, 73, \
60, 74, 72, 148, 172, 171, 166, 186, 183, 116, \
135, 130, 71, 80, 75, 179, 192, 187, 138, 154, \
148, 200, 214, 207, 210, 224, 216, 184, 196, 188, \
68, 79, 78, 57, 65, 63, 38, 45, 46, 70, \
81, 73, 96, 108, 94, 113, 123, 117, 34, 37, \
37, 27, 30, 28, 110, 115, 108, 66, 72, 63, \
175, 186, 176, 112, 117, 117, 16, 19, 18, 12, \
12, 11, 43, 48, 42, 137, 144, 136, 106, 111, \
101, 137, 143, 132, 137, 143, 130, 133, 140, 130, \
74, 86, 80, 45, 54, 55, 58, 66, 65, 135, \
158, 154, 141, 169, 165, 105, 126, 120, 60, 67, \
61, 165, 174, 172, 148, 157, 153, 217, 220, 215, \
217, 221, 213, 199, 209, 199, 52, 59, 67, 70, \
77, 80, 158, 164, 161, 170, 179, 173, 176, 185, \
175, 106, 113, 111, 17, 20, 21, 23, 26, 23, \
108, 112, 105, 159, 162, 153, 224, 229, 222, 93, \
95, 98, 14, 17, 17, 7, 8, 8, 33, 38, \
31, 139, 145, 137, 176, 180, 171, 140, 146, 134, \
139, 145, 132, 141, 147, 132, 89, 100, 91, 41, \
47, 46, 58, 64, 64, 124, 141, 139, 174, 199, \
198, 101, 122, 116, 41, 51, 43, 90, 93, 94, \
107, 111, 110, 156, 162, 155, 141, 146, 140, 143, \
147, 142, 35, 38, 39, 29, 29, 34, 55, 56, \
61, 46, 46, 50, 37, 37, 41, 42, 43, 41, \
10, 12, 9, 21, 23, 19, 63, 65, 60, 220, \
222, 219, 215, 216, 214, 46, 47, 47, 7, 9, \
7, 4, 6, 7, 27, 31, 26, 60, 65, 60, \
140, 143, 145, 135, 141, 128, 130, 136, 122, 128, \
134, 120, 120, 131, 116, 96, 104, 95, 68, 77, \
71, 102, 116, 113, 124, 144, 142, 87, 104, 99, \
31, 40, 35, 13, 17, 21, 18, 21, 24, 26, \
30, 30, 17, 21, 21, 22, 25, 25, 15, 19, \
20, 29, 32, 25, 5, 6, 10, 3, 4, 7, \
5, 6, 9, 26, 28, 24, 9, 11, 7, 13, \
15, 13, 33, 35, 34, 94, 96, 96, 83, 84, \
86, 37, 39, 38, 59, 63, 50, 8, 10, 4, \
12, 16, 15, 32, 37, 35, 71, 74, 72, 135, \
141, 129, 130, 136, 122, 126, 132, 118, 122, 129, \
114, 95, 105, 93, 61, 72, 63, 74, 86, 81, \
96, 109, 107, 52, 63, 59, 23, 30, 28, 18, \
22, 24, 22, 26, 27, 28, 31, 32, 8, 12, \
13, 7, 10, 10, 28, 32, 28, 96, 101, 86, \
33, 36, 31, 31, 33, 29, 33, 36, 30, 52, \
55, 46, 55, 59, 49, 24, 27, 22, 18, 20, \
17, 18, 20, 18, 20, 21, 22, 26, 28, 25, \
101, 105, 88, 66, 70, 59, 25, 29, 25, 26, \
32, 26, 84, 88, 81, 133, 140, 127, 130, 137, \
122, 126, 132, 117, 122, 127, 115, 71, 81, 72, \
75, 89, 78, 46, 56, 49, 39, 46, 43, 31, \
38, 36, 8, 15, 12, 49, 54, 47, 69, 75, \
67, 42, 47, 41, 36, 41, 34, 34, 40, 32, \
68, 75, 60, 106, 110, 93, 91, 95, 78, 97, \
101, 83, 98, 102, 83, 103, 108, 90, 114, 118, \
101, 85, 88, 75, 43, 46, 34, 38, 41, 30, \
45, 48, 39, 71, 74, 65, 103, 107, 91, 114, \
118, 105, 104, 111, 97, 93, 100, 86, 134, 139, \
127, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '24494';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a9eae9e33595e58e381d32d8195ee5594';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_horse6';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{80, 96, 116, 90, 106, 123, 92, 109, 126, 131, 144, \
161, 206, 209, 219, 255, 255, 255, 255, 255, 255, \
255, 255, 255, 255, 255, 255, 255, 255, 255, 255, \
255, 255, 255, 255, 255, 255, 255, 255, 255, 255, \
255, 255, 255, 255, 255, 255, 255, 255, 255, 255, \
255, 255, 255, 246, 250, 252, 199, 205, 216, 120, \
133, 136, 91, 111, 97, 92, 115, 94, 75, 95, \
84, 69, 85, 77, 85, 103, 76, 84, 103, 77, \
57, 73, 64, 45, 59, 59, 88, 96, 98, 56, \
67, 68, 41, 52, 52, 85, 102, 117, 73, 88, \
104, 85, 100, 112, 113, 124, 135, 162, 167, 177, \
235, 237, 241, 252, 253, 253, 253, 253, 253, 253, \
253, 253, 253, 254, 254, 253, 253, 253, 252, 253, \
253, 240, 241, 242, 246, 247, 247, 252, 253, 253, \
254, 254, 253, 255, 254, 253, 254, 254, 251, 252, \
253, 255, 225, 228, 233, 136, 146, 150, 74, 90, \
90, 66, 84, 80, 71, 90, 76, 78, 96, 75, \
76, 93, 73, 64, 80, 67, 44, 59, 54, 54, \
68, 67, 89, 98, 98, 60, 71, 69, 50, 62, \
53, 79, 92, 107, 90, 104, 118, 141, 154, 166, \
183, 190, 199, 208, 212, 216, 224, 228, 230, 245, \
246, 246, 254, 254, 254, 255, 255, 255, 255, 255, \
255, 253, 249, 250, 248, 243, 248, 232, 232, 236, \
242, 244, 244, 250, 251, 251, 250, 250, 251, 247, \
248, 249, 225, 229, 233, 192, 199, 206, 209, 210, \
216, 159, 159, 162, 99, 105, 106, 70, 79, 81, \
64, 78, 65, 83, 101, 75, 68, 85, 68, 49, \
63, 60, 37, 51, 51, 42, 57, 54, 80, 89, \
86, 61, 72, 68, 55, 67, 56, 129, 139, 150, \
150, 163, 174, 154, 165, 181, 174, 177, 195, 195, \
194, 199, 241, 241, 234, 252, 252, 250, 246, 245, \
246, 223, 217, 219, 237, 230, 232, 241, 227, 226, \
201, 185, 186, 205, 194, 197, 220, 208, 211, 238, \
227, 230, 237, 229, 230, 226, 219, 219, 211, 204, \
207, 199, 194, 193, 215, 205, 198, 202, 189, 180, \
175, 166, 156, 143, 137, 132, 99, 106, 95, 74, \
90, 72, 55, 70, 62, 40, 53, 53, 32, 46, \
46, 29, 43, 41, 74, 82, 80, 58, 69, 65, \
37, 48, 43, 154, 169, 184, 147, 160, 174, 123, \
127, 138, 132, 126, 133, 152, 142, 145, 182, 174, \
170, 168, 163, 164, 137, 135, 141, 111, 105, 116, \
138, 131, 136, 186, 175, 172, 134, 123, 122, 112, \
103, 105, 130, 115, 118, 159, 145, 148, 194, 185, \
187, 231, 220, 214, 240, 224, 214, 229, 207, 194, \
227, 205, 189, 234, 218, 204, 229, 215, 203, 169, \
153, 140, 130, 122, 112, 89, 96, 84, 44, 57, \
53, 38, 50, 51, 31, 41, 42, 29, 41, 41, \
70, 79, 77, 63, 68, 65, 25, 35, 35, 152, \
169, 185, 92, 105, 121, 40, 43, 53, 89, 82, \
82, 121, 111, 110, 90, 84, 90, 68, 65, 72, \
49, 51, 61, 45, 49, 61, 50, 55, 64, 71, \
76, 83, 65, 67, 74, 58, 56, 61, 69, 65, \
67, 72, 68, 71, 111, 103, 109, 178, 166, 164, \
221, 210, 201, 216, 204, 191, 208, 190, 175, 204, \
188, 175, 191, 179, 168, 151, 137, 123, 142, 124, \
113, 125, 117, 104, 64, 70, 63, 37, 49, 48, \
34, 44, 45, 31, 42, 43, 68, 77, 75, 62, \
66, 63, 23, 33, 33, 138, 151, 166, 43, 52, \
67, 23, 25, 35, 46, 45, 51, 48, 48, 56, \
47, 45, 54, 41, 44, 52, 36, 42, 50, 36, \
39, 46, 36, 37, 44, 34, 35, 45, 37, 37, \
46, 48, 46, 52, 52, 52, 57, 52, 51, 60, \
63, 61, 71, 84, 80, 86, 114, 113, 115, 118, \
117, 116, 121, 115, 113, 121, 113, 111, 87, 82, \
83, 92, 88, 89, 134, 125, 113, 121, 108, 96, \
101, 97, 85, 51, 59, 56, 34, 44, 49, 32, \
42, 43, 64, 71, 67, 62, 64, 60, 30, 37, \
39, 103, 114, 129, 15, 21, 36, 21, 22, 33, \
33, 32, 39, 36, 36, 40, 35, 36, 39, 33, \
36, 39, 34, 38, 41, 38, 39, 42, 38, 37, \
41, 36, 36, 40, 36, 35, 40, 41, 41, 44, \
45, 44, 47, 43, 42, 50, 39, 42, 51, 38, \
41, 50, 36, 39, 47, 33, 37, 44, 40, 41, \
48, 42, 41, 46, 34, 35, 40, 39, 41, 44, \
58, 56, 54, 73, 69, 63, 108, 100, 89, 86, \
86, 79, 31, 39, 45, 30, 39, 41, 62, 67, \
60, 64, 66, 61, 31, 36, 39, 68, 78, 93, \
8, 14, 27, 18, 20, 29, 32, 31, 34, 36, \
35, 35, 34, 33, 34, 35, 33, 34, 39, 38, \
37, 38, 38, 37, 36, 35, 35, 30, 29, 31, \
28, 26, 30, 38, 37, 38, 42, 42, 39, 39, \
38, 41, 32, 33, 41, 27, 30, 38, 29, 31, \
38, 29, 32, 38, 30, 31, 36, 35, 34, 38, \
33, 33, 35, 32, 33, 30, 41, 39, 39, 47, \
49, 46, 70, 65, 59, 94, 86, 75, 45, 47, \
49, 18, 29, 33, 58, 64, 59, 67, 70, 63, \
33, 38, 40, 40, 48, 58, 7, 13, 20, 14, \
17, 20, 30, 28, 26, 36, 32, 31, 31, 26, \
30, 34, 30, 32, 39, 35, 36, 39, 35, 36, \
37, 33, 34, 29, 25, 24, 30, 26, 24, 33, \
29, 28, 34, 30, 31, 35, 32, 34, 28, 27, \
32, 28, 27, 32, 28, 27, 32, 26, 25, 30, \
28, 25, 29, 35, 31, 32, 33, 30, 29, 30, \
27, 22, 39, 36, 31, 44, 41, 37, 48, 45, \
39, 73, 66, 56, 68, 67, 59, 45, 61, 48, \
57, 67, 58, 76, 83, 65, 76, 93, 58, 23, \
32, 36, 7, 14, 18, 11, 14, 17, 28, 26, \
23, 33, 30, 23, 26, 22, 21, 30, 26, 26, \
32, 28, 29, 35, 31, 32, 39, 35, 36, 31, \
27, 25, 29, 25, 21, 26, 22, 21, 25, 21, \
22, 29, 25, 27, 26, 24, 29, 24, 23, 28, \
23, 21, 26, 22, 21, 26, 26, 24, 27, 31, \
27, 28, 31, 27, 26, 28, 25, 20, 36, 33, \
28, 42, 39, 34, 43, 40, 35, 53, 51, 43, \
57, 55, 47, 87, 104, 69, 98, 120, 72, 115, \
135, 74, 135, 163, 83, 16, 22, 27, 9, 13, \
19, 11, 11, 16, 26, 22, 21, 34, 32, 23, \
26, 23, 15, 26, 22, 19, 26, 22, 20, 30, \
26, 24, 37, 34, 31, 32, 26, 24, 22, 18, \
15, 17, 16, 14, 20, 16, 18, 22, 18, 20, \
20, 17, 22, 20, 16, 22, 20, 16, 19, 22, \
19, 21, 26, 22, 22, 28, 24, 22, 28, 24, \
22, 28, 25, 20, 36, 33, 28, 42, 39, 34, \
40, 37, 32, 37, 37, 31, 25, 24, 22, 60, \
72, 43, 134, 161, 80, 150, 178, 79, 149, 175, \
81, 15, 25, 23, 7, 11, 13, 13, 18, 16, \
34, 37, 22, 39, 37, 22, 32, 29, 20, 25, \
21, 18, 25, 21, 18, 27, 23, 20, 29, 25, \
23, 27, 24, 17, 18, 16, 12, 21, 18, 13, \
23, 20, 17, 20, 16, 14, 20, 15, 16, 20, \
15, 17, 19, 14, 16, 21, 16, 18, 25, 21, \
20, 28, 24, 20, 28, 24, 20, 25, 22, 16, \
31, 28, 23, 32, 29, 25, 30, 27, 22, 23, \
23, 18, 14, 15, 11, 36, 40, 24, 126, 140, \
75, 152, 171, 81, 150, 166, 80, 21, 34, 24, \
4, 9, 9, 12, 19, 13, 62, 73, 38, 48, \
50, 25, 30, 27, 20, 26, 22, 18, 25, 22, \
18, 29, 26, 21, 64, 69, 34, 97, 110, 51, \
64, 68, 32, 34, 29, 19, 24, 21, 16, 22, \
18, 15, 22, 18, 15, 22, 19, 15, 20, 17, \
15, 18, 16, 15, 19, 17, 17, 23, 20, 18, \
21, 18, 16, 19, 16, 11, 22, 19, 14, 24, \
22, 15, 30, 27, 21, 16, 15, 9, 12, 12, \
7, 22, 21, 16, 97, 102, 59, 159, 169, 90, \
152, 162, 86, 41, 51, 28, 12, 17, 15, 20, \
25, 14, 83, 96, 46, 72, 80, 44, 21, 19, \
11, 27, 24, 14, 23, 19, 15, 54, 57, 34, \
140, 157, 82, 158, 178, 90, 151, 164, 84, 115, \
123, 68, 68, 73, 40, 39, 37, 23, 24, 22, \
19, 16, 14, 14, 12, 12, 10, 15, 16, 12, \
13, 14, 10, 12, 12, 12, 12, 11, 11, 14, \
10, 8, 18, 14, 11, 24, 20, 16, 30, 27, \
21, 13, 10, 5, 15, 12, 7, 13, 11, 9, \
67, 72, 42, 158, 171, 92, 157, 168, 90, 81, \
95, 47, 36, 44, 27, 53, 62, 30, 108, 123, \
54, 87, 95, 51, 20, 18, 10, 25, 21, 15, \
34, 33, 20, 117, 130, 69, 160, 176, 96, 160, \
171, 91, 159, 173, 85, 154, 173, 86, 146, 164, \
84, 132, 143, 78, 113, 124, 66, 99, 109, 61, \
66, 71, 44, 14, 14, 12, 12, 13, 7, 14, \
16, 7, 20, 20, 10, 18, 15, 10, 19, 15, \
13, 26, 23, 18, 40, 39, 24, 18, 16, 8, \
15, 12, 6, 10, 8, 6, 50, 54, 34, 146, \
160, 83, 150, 165, 85, 84, 98, 45, 26, 34, \
20, 64, 71, 35, 119, 131, 60, 78, 86, 46, \
21, 19, 11, 23, 19, 16, 66, 67, 38, 147, \
160, 83, 152, 166, 84, 161, 175, 89, 159, 176, \
87, 154, 173, 83, 151, 169, 80, 153, 169, 84, \
158, 174, 86, 152, 172, 88, 96, 108, 62, 11, \
11, 8, 24, 23, 14, 86, 95, 47, 114, 124, \
60, 67, 71, 39, 18, 18, 13, 26, 27, 15, \
86, 93, 48, 43, 45, 23, 15, 12, 4, 11, \
9, 3, 35, 39, 25, 132, 150, 75, 152, 167, \
83, 89, 97, 53, 17, 22, 15, 57, 62, 31, \
116, 126, 62, 50, 55, 30, 20, 18, 9, 23, \
19, 15, 95, 98, 51, 160, 173, 86, 152, 165, \
85, 155, 168, 86, 159, 172, 88, 156, 169, 86, \
160, 172, 93, 153, 165, 84, 151, 164, 84, 147, \
158, 85, 71, 78, 46, 8, 7, 5, 62, 62, \
37, 145, 160, 84, 157, 171, 83, 115, 124, 66, \
22, 24, 14, 28, 30, 20, 127, 129, 71, 82, \
82, 43, 16, 13, 6, 13, 12, 4, 28, 29, \
17, 117, 122, 74, 118, 123, 64, 102, 110, 59, \
15, 19, 14, 48, 51, 27, 94, 102, 53, 22, \
25, 12, 18, 18, 6, 19, 18, 12, 98, 104, \
55, 159, 172, 87, 159, 172, 94, 156, 169, 92, \
161, 175, 89, 159, 172, 92, 159, 169, 94, 155, \
166, 85, 154, 165, 87, 152, 161, 91, 60, 65, \
42, 15, 18, 11, 103, 111, 64, 138, 153, 78, \
147, 162, 80, 133, 146, 77, 26, 30, 18, 36, \
40, 27, 139, 146, 76, 106, 111, 56, 20, 19, \
9, 11, 13, 5, 22, 22, 14, 64, 62, 45, \
103, 108, 60, 93, 108, 53, 13, 18, 9, 34, \
37, 21, 49, 52, 31, 12, 13, 6, 14, 16, \
5, 20, 22, 12, 114, 125, 59, 164, 178, 89, \
156, 169, 87, 152, 167, 86, 154, 173, 85, 154, \
170, 87, 159, 173, 93, 158, 171, 91, 160, 171, \
93, 145, 158, 87, 42, 50, 30, 33, 40, 21, \
132, 148, 77, 146, 163, 82, 151, 169, 83, 143, \
160, 84, 33, 39, 24, 41, 48, 30, 142, 159, \
80, 119, 133, 69, 30, 30, 14, 13, 15, 7, \
20, 20, 16, 48, 51, 41, 133, 148, 84, 90, \
109, 47, 23, 27, 17, 21, 23, 13, 14, 15, \
10, 15, 16, 14, 14, 15, 7, 23, 25, 15, \
118, 128, 69, 162, 174, 96, 150, 163, 81, 142, \
157, 75, 146, 164, 82, 153, 169, 90, 162, 174, \
94, 161, 173, 93, 164, 176, 94, 126, 139, 73, \
21, 27, 18, 63, 73, 38, 149, 167, 88, 153, \
172, 93, 150, 168, 85, 144, 162, 78, 43, 50, \
30, 37, 44, 28, 139, 157, 79, 129, 142, 79, \
37, 38, 22, 31, 34, 25, 38, 40, 34, 89, \
92, 83, 147, 159, 103, 104, 118, 59, 30, 33, \
20, 20, 22, 10, 11, 13, 6, 17, 18, 15, \
17, 19, 9, 21, 23, 14, 106, 114, 64, 155, \
164, 92, 143, 159, 79, 141, 155, 74, 154, 168, \
89, 158, 170, 89, 165, 173, 89, 159, 167, 87, \
157, 172, 87, 110, 123, 61, 19, 21, 14, 99, \
107, 59, 151, 167, 89, 148, 164, 87, 154, 167, \
89, 157, 170, 89, 57, 62, 37, 36, 41, 26, \
138, 152, 81, 114, 126, 71, 51, 56, 43, 58, \
63, 51, 59, 65, 54, 84, 88, 79, 141, 150, \
99, 120, 128, 68, 44, 47, 25, 32, 35, 16, \
12, 13, 7, 48, 52, 29, 58, 63, 33, 26, \
29, 15, 115, 125, 60, 157, 169, 80, 156, 168, \
87, 148, 162, 84, 154, 164, 86, 152, 162, 82, \
153, 164, 83, 150, 160, 85, 157, 168, 90, 106, \
114, 58, 40, 43, 24, 133, 144, 75, 148, 158, \
79, 154, 162, 85, 152, 163, 87, 161, 174, 93, \
82, 87, 53, 39, 41, 25, 139, 149, 81, 100, \
111, 59, 38, 44, 33, 58, 64, 52, 64, 71, \
59, 80, 85, 69, 145, 150, 91, 143, 148, 81, \
77, 77, 41, 46, 49, 24, 19, 20, 12, 102, \
109, 52, 113, 120, 62, 33, 32, 20, 120, 130, \
62, 153, 167, 81, 159, 172, 92, 154, 171, 87, \
148, 163, 83, 142, 157, 79, 151, 165, 84, 152, \
165, 90, 157, 167, 90, 83, 89, 49, 71, 78, \
43, 148, 161, 84, 152, 157, 86, 160, 166, 89, \
146, 160, 81, 151, 165, 84, 106, 114, 66, 43, \
46, 26, 134, 143, 71, 116, 126, 62, 30, 36, \
18, 21, 25, 14, 31, 34, 24, 62, 65, 48, \
146, 151, 85, 147, 149, 78, 97, 96, 45, 58, \
60, 30, 26, 28, 14, 128, 134, 66, 144, 153, \
79, 40, 41, 25, 110, 114, 60, 168, 180, 92, \
163, 176, 89, 163, 175, 86, 156, 167, 83, 148, \
160, 76, 156, 168, 82, 163, 175, 87, 152, 162, \
84, 65, 71, 41, 107, 116, 58, 156, 170, 91, \
151, 161, 90, 151, 156, 81, 151, 159, 80, 152, \
163, 81, 121, 130, 67, 46, 52, 30, 121, 131, \
63, 147, 155, 72, 106, 110, 53, 27, 27, 13, \
18, 19, 10, 38, 40, 23, 130, 138, 67, 139, \
145, 73, 113, 116, 55, 68, 71, 35, 29, 31, \
17, 123, 129, 69, 148, 158, 82, 49, 55, 29, \
87, 84, 45, 174, 175, 90, 162, 167, 81, 153, \
158, 79, 151, 155, 80, 156, 159, 82, 151, 155, \
79, 161, 167, 84, 152, 158, 95, 97, 101, 72, \
131, 142, 74, 148, 159, 84, 138, 148, 71, 139, \
143, 71, 150, 151, 77, 160, 165, 87, 139, 145, \
76, 80, 83, 63, 136, 143, 87, 162, 165, 80, \
161, 158, 83, 70, 66, 33, 19, 20, 12, 42, \
45, 30, 130, 136, 66, 129, 138, 70, 128, 132, \
69, 69, 71, 36, 35, 36, 22, 125, 130, 69, \
153, 161, 86, 72, 79, 40, 62, 57, 30, 157, \
151, 83, 166, 160, 91, 155, 150, 80, 150, 147, \
81, 162, 157, 96, 154, 153, 83, 152, 157, 82, \
136, 134, 88, 124, 121, 82, 156, 161, 87, 143, \
148, 72, 141, 142, 71, 160, 159, 83, 162, 162, \
85, 155, 159, 84, 146, 150, 86, 130, 130, 104, \
155, 155, 104, 157, 163, 71, 167, 170, 84, 109, \
107, 56, 23, 23, 13, 42, 46, 29, 141, 139, \
71, 144, 150, 78, 143, 146, 79, 65, 67, 37, \
45, 47, 29, 133, 141, 72, 151, 160, 78, 92, \
100, 49, 32, 34, 20, 118, 118, 63, 160, 158, \
91, 169, 167, 94, 167, 164, 91, 161, 157, 91, \
155, 154, 78, 151, 156, 75, 133, 131, 80, 127, \
122, 87, 167, 166, 95, 156, 155, 80, 147, 149, \
74, 154, 159, 77, 168, 173, 78, 169, 169, 85, \
157, 155, 90, 118, 113, 77, 138, 139, 100, 156, \
161, 90, 138, 145, 72, 92, 98, 49, 41, 41, \
18, 79, 77, 44, 146, 142, 74, 152, 157, 75, \
145, 149, 76, 77, 78, 48, 67, 73, 43, 133, \
142, 68, 147, 148, 73, 107, 108, 59, 21, 24, \
13, 66, 67, 33, 143, 145, 82, 155, 156, 82, \
153, 153, 74, 158, 161, 71, 150, 156, 66, 147, \
149, 70, 126, 124, 77, 84, 83, 65, 143, 142, \
91, 156, 154, 84, 145, 143, 69, 157, 158, 78, \
153, 157, 70, 146, 143, 73, 147, 143, 77, 119, \
117, 67, 108, 109, 86, 123, 125, 98, 88, 91, \
57, 94, 102, 55, 93, 96, 52, 120, 118, 69, \
160, 153, 82, 157, 155, 77, 155, 151, 75, 119, \
112, 64, 102, 100, 68, 132, 135, 71, 146, 137, \
78, 127, 118, 67, 80, 80, 42, 41, 45, 24, \
104, 107, 58, 134, 140, 72, 127, 134, 65, 122, \
132, 62, 118, 131, 65, 126, 134, 66, 93, 98, \
57, 68, 73, 40, 129, 126, 71, 162, 154, 92, \
150, 143, 81, 144, 142, 80, 116, 119, 62, 82, \
84, 47, 81, 84, 50, 77, 86, 49, 75, 74, \
45, 111, 107, 62, 121, 120, 69, 137, 134, 72, \
152, 148, 76, 148, 149, 76, 151, 149, 76, 139, \
134, 64, 134, 131, 60, 117, 116, 58, 87, 86, \
58, 103, 100, 62, 138, 127, 70, 107, 103, 58, \
96, 106, 53, 78, 92, 46, 90, 100, 51, 94, \
104, 50, 98, 111, 56, 82, 98, 50, 70, 86, \
43, 71, 87, 39, 66, 82, 42, 72, 82, 42, \
93, 96, 51, 110, 109, 67, 115, 114, 69, 105, \
106, 64, 88, 91, 54, 81, 83, 46, 89, 92, \
48, 95, 97, 52, 110, 108, 60, 147, 140, 71, \
168, 158, 86, 167, 159, 84, 165, 164, 77, 156, \
160, 73, 153, 148, 73, 108, 112, 61, 79, 87, \
47, 68, 76, 41, 54, 63, 37, 60, 67, 41, \
95, 94, 50, 91, 91, 54, 109, 121, 67, 108, \
124, 64, 98, 114, 54, 96, 106, 56, 102, 112, \
56, 100, 111, 59, 86, 95, 46, 81, 97, 50, \
68, 82, 38, 77, 83, 41, 106, 115, 62, 104, \
110, 63, 132, 135, 77, 148, 149, 80, 144, 142, \
78, 144, 142, 73, 160, 158, 76, 171, 162, 89, \
175, 174, 83, 178, 178, 80, 188, 185, 87, 189, \
189, 88, 184, 187, 90, 182, 187, 92, 174, 174, \
80, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '24804';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a109e064b0fe99cf19e9bd0092e3f1293';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_deer6';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{205, 183, 147, 206, 187, 140, 205, 192, 154, 215, 210, \
186, 224, 220, 208, 236, 234, 230, 243, 243, 244, \
243, 243, 243, 243, 243, 243, 244, 244, 242, 245, \
245, 240, 242, 237, 233, 245, 241, 231, 239, 235, \
225, 224, 218, 199, 214, 204, 174, 204, 192, 156, \
203, 189, 139, 206, 192, 138, 186, 172, 122, 191, \
174, 125, 198, 180, 130, 189, 172, 125, 196, 179, \
130, 195, 180, 126, 198, 188, 132, 199, 186, 136, \
205, 191, 141, 196, 181, 135, 162, 143, 105, 182, \
163, 130, 157, 146, 108, 213, 200, 154, 198, 183, \
134, 176, 156, 115, 192, 176, 133, 197, 180, 140, \
198, 179, 144, 203, 189, 171, 227, 220, 219, 241, \
241, 242, 237, 237, 234, 199, 186, 173, 214, 198, \
168, 219, 204, 168, 204, 188, 150, 204, 191, 146, \
197, 184, 138, 197, 185, 135, 189, 174, 119, 192, \
173, 121, 187, 167, 120, 184, 164, 117, 194, 174, \
119, 186, 168, 119, 188, 174, 124, 191, 178, 123, \
195, 182, 129, 202, 189, 143, 198, 186, 139, 188, \
175, 135, 180, 168, 119, 181, 168, 129, 152, 141, \
107, 196, 179, 135, 167, 148, 107, 169, 150, 115, \
219, 206, 168, 221, 205, 159, 212, 190, 141, 198, \
176, 131, 197, 177, 149, 216, 205, 192, 194, 180, \
170, 160, 134, 120, 203, 185, 144, 210, 195, 149, \
188, 168, 121, 199, 182, 132, 190, 177, 126, 195, \
183, 133, 179, 163, 113, 182, 162, 115, 186, 165, \
120, 188, 168, 117, 188, 170, 114, 193, 175, 126, \
201, 187, 130, 188, 176, 122, 188, 174, 127, 203, \
188, 145, 201, 186, 143, 191, 175, 136, 195, 177, \
127, 164, 146, 101, 158, 142, 109, 207, 186, 141, \
200, 177, 139, 207, 190, 152, 216, 205, 162, 209, \
197, 150, 224, 212, 166, 218, 202, 159, 178, 154, \
124, 171, 144, 111, 165, 132, 107, 136, 110, 99, \
202, 189, 146, 194, 179, 130, 193, 173, 125, 207, \
189, 144, 199, 185, 140, 194, 182, 135, 172, 155, \
109, 168, 146, 110, 192, 171, 129, 207, 187, 131, \
169, 153, 118, 178, 163, 126, 214, 200, 145, 206, \
193, 147, 197, 182, 140, 188, 175, 123, 202, 188, \
141, 192, 177, 132, 192, 174, 123, 184, 166, 114, \
182, 165, 120, 223, 205, 164, 230, 212, 172, 225, \
211, 164, 218, 204, 156, 199, 182, 133, 210, 194, \
148, 197, 182, 151, 133, 114, 101, 179, 152, 122, \
154, 130, 109, 138, 121, 105, 208, 198, 149, 180, \
166, 118, 207, 191, 144, 205, 187, 140, 204, 185, \
136, 198, 179, 129, 181, 159, 116, 154, 132, 110, \
165, 148, 124, 206, 185, 138, 145, 128, 109, 148, \
137, 120, 200, 185, 137, 197, 184, 134, 191, 179, \
131, 186, 174, 121, 187, 173, 123, 182, 167, 121, \
182, 166, 112, 199, 183, 126, 190, 173, 115, 228, \
216, 168, 217, 204, 155, 219, 204, 161, 215, 202, \
155, 202, 184, 139, 205, 185, 141, 174, 156, 130, \
113, 97, 88, 166, 146, 130, 98, 89, 81, 176, \
164, 130, 204, 187, 136, 204, 191, 141, 204, 190, \
141, 206, 189, 140, 207, 187, 130, 199, 178, 130, \
207, 186, 144, 180, 160, 116, 121, 105, 91, 189, \
169, 139, 170, 153, 129, 104, 97, 91, 184, 167, \
139, 179, 162, 113, 165, 150, 105, 195, 179, 141, \
187, 174, 124, 183, 169, 116, 198, 181, 127, 199, \
182, 123, 190, 172, 116, 232, 214, 163, 225, 207, \
164, 216, 198, 161, 196, 179, 137, 214, 195, 150, \
211, 190, 142, 166, 148, 121, 103, 94, 89, 114, \
103, 99, 120, 109, 99, 210, 195, 147, 200, 185, \
134, 201, 185, 144, 197, 182, 135, 196, 177, 129, \
206, 186, 130, 202, 185, 134, 202, 185, 155, 215, \
197, 157, 154, 137, 110, 113, 97, 84, 170, 152, \
122, 87, 75, 63, 137, 122, 105, 177, 157, 120, \
173, 155, 112, 191, 173, 125, 194, 178, 125, 191, \
177, 123, 202, 184, 140, 188, 171, 115, 189, 171, \
116, 222, 205, 154, 224, 204, 152, 214, 194, 143, \
204, 183, 133, 204, 184, 136, 199, 176, 128, 184, \
162, 127, 78, 60, 56, 58, 47, 48, 182, 169, \
148, 220, 206, 157, 183, 169, 124, 155, 135, 114, \
203, 185, 141, 203, 182, 130, 199, 179, 125, 197, \
181, 128, 157, 143, 109, 154, 139, 116, 202, 183, \
154, 102, 83, 66, 123, 106, 88, 114, 98, 73, \
76, 65, 56, 116, 101, 88, 156, 143, 102, 190, \
174, 127, 192, 174, 138, 207, 191, 139, 207, 188, \
146, 192, 175, 118, 181, 165, 105, 220, 202, 150, \
218, 199, 140, 206, 187, 129, 209, 190, 134, 198, \
178, 131, 197, 179, 135, 203, 177, 147, 99, 71, \
68, 51, 39, 43, 188, 176, 158, 201, 187, 139, \
181, 167, 125, 115, 101, 87, 205, 187, 147, 217, \
198, 155, 199, 182, 131, 178, 159, 110, 195, 179, \
134, 158, 140, 112, 155, 129, 111, 162, 134, 114, \
95, 71, 68, 126, 103, 89, 47, 34, 34, 48, \
37, 34, 143, 127, 94, 156, 142, 109, 151, 140, \
124, 212, 197, 153, 196, 178, 130, 193, 177, 116, \
183, 167, 107, 210, 189, 134, 208, 189, 134, 209, \
190, 142, 200, 183, 130, 216, 202, 157, 206, 192, \
155, 192, 171, 138, 110, 86, 70, 36, 24, 31, \
151, 140, 129, 200, 182, 135, 170, 151, 115, 101, \
91, 82, 194, 176, 130, 206, 185, 142, 205, 190, \
144, 189, 171, 115, 183, 161, 115, 195, 176, 139, \
148, 123, 94, 144, 112, 92, 99, 69, 69, 72, \
45, 44, 36, 22, 23, 48, 33, 31, 128, 110, \
81, 158, 140, 109, 99, 90, 77, 189, 174, 132, \
185, 168, 116, 182, 166, 106, 169, 155, 94, 210, \
194, 145, 214, 197, 154, 206, 187, 143, 196, 180, \
133, 206, 190, 143, 205, 187, 140, 222, 207, 158, \
182, 167, 132, 47, 37, 37, 85, 76, 68, 208, \
192, 148, 163, 144, 108, 95, 91, 81, 191, 177, \
129, 203, 181, 136, 209, 191, 142, 198, 184, 131, \
192, 178, 132, 204, 187, 141, 183, 164, 124, 197, \
181, 147, 107, 90, 79, 132, 111, 91, 93, 78, \
60, 59, 40, 37, 143, 127, 96, 180, 162, 124, \
91, 81, 66, 164, 149, 109, 180, 165, 117, 163, \
148, 106, 153, 140, 93, 215, 194, 139, 210, 192, \
141, 199, 183, 136, 208, 192, 155, 206, 188, 145, \
202, 181, 133, 209, 191, 142, 215, 199, 153, 122, \
110, 90, 42, 29, 29, 171, 154, 134, 165, 152, \
117, 87, 78, 74, 197, 181, 135, 192, 173, 115, \
188, 166, 117, 186, 168, 128, 165, 148, 117, 188, \
169, 129, 201, 187, 155, 196, 181, 139, 107, 94, \
72, 151, 137, 117, 135, 126, 102, 65, 48, 44, \
133, 115, 96, 169, 152, 123, 92, 81, 70, 169, \
156, 112, 169, 157, 106, 156, 144, 109, 166, 157, \
121, 208, 189, 138, 188, 172, 122, 208, 192, 151, \
213, 198, 157, 212, 198, 151, 191, 177, 129, 199, \
182, 134, 207, 186, 133, 193, 174, 128, 79, 63, \
51, 85, 67, 68, 185, 164, 142, 76, 66, 65, \
178, 165, 137, 192, 173, 120, 171, 147, 107, 157, \
137, 102, 104, 87, 72, 180, 161, 128, 204, 190, \
154, 212, 193, 151, 113, 100, 79, 131, 120, 104, \
132, 119, 99, 86, 62, 53, 114, 94, 85, 132, \
121, 114, 108, 98, 83, 184, 164, 122, 176, 159, \
119, 167, 155, 123, 151, 145, 110, 216, 201, 154, \
185, 165, 121, 183, 162, 123, 211, 195, 150, 214, \
200, 154, 202, 188, 142, 192, 175, 126, 206, 187, \
136, 220, 203, 149, 172, 157, 116, 71, 56, 44, \
105, 80, 72, 82, 66, 65, 128, 118, 111, 192, \
172, 138, 174, 150, 112, 162, 143, 104, 87, 74, \
61, 158, 148, 122, 197, 179, 133, 206, 187, 142, \
103, 89, 76, 129, 117, 98, 177, 149, 121, 142, \
111, 96, 77, 62, 59, 88, 77, 76, 146, 133, \
105, 158, 132, 102, 161, 140, 104, 135, 119, 83, \
124, 111, 74, 206, 188, 146, 189, 165, 126, 152, \
131, 97, 199, 180, 147, 208, 191, 152, 198, 183, \
141, 184, 168, 114, 184, 166, 121, 205, 187, 137, \
194, 172, 117, 171, 153, 105, 95, 77, 58, 75, \
52, 49, 55, 39, 40, 148, 129, 119, 177, 150, \
128, 178, 153, 116, 114, 98, 76, 109, 102, 87, \
185, 161, 120, 178, 157, 119, 77, 65, 58, 146, \
134, 106, 196, 157, 126, 133, 104, 95, 47, 32, \
32, 125, 102, 87, 133, 114, 93, 121, 100, 79, \
143, 122, 83, 160, 142, 96, 165, 148, 103, 194, \
177, 140, 180, 159, 116, 129, 113, 84, 160, 142, \
107, 181, 159, 121, 168, 148, 109, 173, 156, 107, \
186, 171, 133, 187, 171, 128, 165, 142, 96, 163, \
140, 93, 169, 147, 101, 144, 123, 87, 95, 75, \
59, 61, 42, 38, 91, 69, 64, 144, 117, 101, \
149, 128, 108, 81, 72, 65, 187, 167, 132, 119, \
101, 76, 83, 74, 64, 191, 165, 132, 167, 127, \
106, 68, 49, 46, 95, 69, 67, 119, 92, 82, \
112, 94, 79, 152, 131, 96, 154, 138, 95, 200, \
186, 132, 195, 181, 122, 209, 190, 152, 164, 140, \
99, 133, 112, 76, 172, 150, 102, 164, 140, 105, \
157, 134, 100, 186, 166, 125, 194, 179, 143, 180, \
165, 119, 161, 142, 98, 133, 112, 78, 167, 143, \
99, 163, 140, 93, 157, 139, 100, 130, 112, 83, \
71, 52, 42, 62, 44, 38, 82, 65, 62, 52, \
43, 45, 100, 85, 74, 69, 53, 48, 155, 139, \
106, 181, 148, 126, 93, 68, 65, 55, 41, 38, \
92, 72, 62, 126, 101, 73, 163, 141, 100, 179, \
164, 114, 196, 181, 133, 214, 200, 143, 213, 196, \
140, 209, 186, 139, 176, 152, 111, 179, 153, 117, \
166, 138, 102, 137, 117, 90, 148, 126, 98, 180, \
159, 119, 176, 154, 110, 176, 156, 107, 172, 154, \
105, 156, 134, 91, 160, 136, 100, 158, 133, 98, \
164, 148, 108, 183, 164, 120, 145, 122, 90, 115, \
100, 75, 59, 46, 42, 34, 24, 22, 9, 0, \
2, 90, 81, 75, 201, 177, 146, 93, 69, 57, \
47, 37, 41, 111, 90, 80, 143, 121, 93, 184, \
157, 110, 176, 151, 102, 185, 168, 119, 215, 198, \
149, 207, 190, 132, 207, 187, 129, 195, 174, 125, \
194, 176, 126, 181, 158, 118, 129, 105, 78, 130, \
109, 82, 154, 130, 91, 174, 152, 111, 198, 175, \
133, 182, 159, 122, 163, 145, 102, 167, 149, 103, \
152, 132, 99, 170, 150, 128, 192, 176, 144, 179, \
159, 116, 142, 120, 80, 128, 107, 80, 65, 50, \
45, 75, 63, 56, 24, 16, 15, 46, 40, 36, \
131, 103, 92, 49, 27, 24, 48, 33, 31, 140, \
114, 96, 173, 150, 113, 174, 153, 109, 189, 167, \
116, 199, 178, 127, 211, 193, 140, 212, 196, 132, \
208, 190, 123, 178, 154, 119, 161, 140, 94, 175, \
152, 107, 150, 128, 91, 152, 131, 95, 164, 141, \
94, 190, 166, 128, 191, 167, 130, 159, 137, 103, \
128, 108, 76, 160, 140, 103, 146, 125, 94, 132, \
113, 91, 155, 136, 104, 137, 117, 78, 136, 115, \
72, 146, 124, 95, 45, 31, 30, 37, 26, 24, \
31, 25, 25, 52, 43, 41, 91, 61, 59, 86, \
56, 55, 119, 97, 82, 190, 165, 124, 190, 167, \
120, 195, 176, 131, 201, 180, 132, 197, 176, 124, \
198, 178, 118, 213, 198, 130, 214, 198, 126, 159, \
135, 97, 170, 146, 100, 171, 147, 100, 184, 162, \
112, 160, 139, 94, 146, 124, 87, 181, 160, 122, \
187, 166, 117, 173, 153, 102, 174, 155, 112, 183, \
160, 123, 159, 137, 97, 147, 126, 90, 139, 117, \
85, 157, 134, 93, 172, 150, 101, 150, 129, 90, \
66, 48, 39, 24, 12, 13, 40, 36, 37, 128, \
117, 113, 87, 66, 67, 170, 142, 137, 183, 151, \
142, 170, 144, 113, 204, 184, 137, 186, 165, 121, \
183, 162, 119, 190, 170, 118, 211, 190, 136, 217, \
196, 140, 208, 191, 129, 179, 156, 107, 183, 159, \
111, 176, 153, 102, 182, 159, 113, 163, 142, 98, \
157, 136, 101, 159, 139, 109, 168, 147, 108, 172, \
152, 108, 166, 148, 106, 160, 139, 100, 159, 138, \
93, 159, 136, 93, 161, 138, 96, 173, 148, 101, \
180, 154, 105, 168, 144, 99, 137, 114, 82, 60, \
40, 35, 34, 21, 25, 58, 42, 41, 24, 13, \
17, 85, 68, 68, 162, 137, 134, 182, 163, 140, \
212, 196, 151, 178, 156, 115, 187, 163, 123, 203, \
184, 126, 207, 192, 140, 210, 190, 140, 199, 182, \
124, 162, 136, 99, 163, 134, 95, 161, 137, 89, \
159, 136, 95, 169, 148, 108, 154, 133, 101, 152, \
129, 98, 163, 143, 103, 159, 140, 102, 165, 148, \
105, 142, 126, 81, 138, 117, 73, 153, 131, 82, \
171, 151, 95, 160, 138, 90, 170, 144, 99, 186, \
162, 112, 174, 150, 106, 81, 60, 51, 31, 15, \
19, 43, 23, 24, 27, 15, 20, 16, 8, 11, \
53, 46, 46, 160, 147, 138, 217, 200, 166, 195, \
170, 127, 201, 176, 127, 204, 182, 123, 195, 179, \
131, 212, 196, 148, 203, 185, 126, 126, 99, 71, \
147, 118, 82, 157, 132, 91, 170, 147, 104, 142, \
121, 85, 127, 105, 78, 168, 146, 108, 162, 140, \
97, 148, 126, 84, 186, 166, 115, 176, 156, 107, \
179, 154, 111, 167, 145, 96, 142, 120, 78, 129, \
108, 72, 164, 141, 96, 191, 167, 115, 180, 157, \
108, 68, 51, 40, 26, 15, 16, 33, 18, 18, \
29, 16, 21, 26, 16, 20, 45, 31, 31, 94, \
80, 79, 190, 171, 156, 207, 182, 140, 200, 180, \
125, 211, 192, 147, 223, 204, 164, 222, 204, 156, \
198, 177, 119, 153, 125, 85, 156, 129, 86, 156, \
135, 95, 159, 135, 97, 121, 99, 71, 130, 110, \
73, 182, 164, 120, 159, 139, 94, 165, 141, 88, \
177, 151, 101, 175, 147, 107, 206, 182, 150, 208, \
187, 154, 154, 131, 109, 140, 119, 91, 185, 161, \
119, 196, 171, 128, 170, 146, 110, 45, 30, 26, \
26, 15, 14, 36, 19, 20, 29, 14, 18, 57, \
45, 46, 179, 150, 137, 126, 98, 89, 94, 75, \
72, 189, 168, 136, 209, 190, 139, 197, 178, 130, \
217, 201, 149, 203, 181, 118, 176, 150, 90, 177, \
152, 108, 179, 151, 107, 164, 141, 95, 180, 157, \
117, 142, 120, 86, 142, 125, 86, 189, 172, 126, \
190, 170, 116, 175, 151, 99, 169, 134, 101, 212, \
178, 156, 235, 210, 196, 236, 213, 197, 231, 208, \
192, 230, 206, 185, 223, 195, 165, 226, 197, 170, \
172, 142, 129, 30, 15, 18, 30, 18, 14, 37, \
19, 21, 48, 22, 26, 98, 72, 59, 154, 116, \
95, 102, 62, 53, 91, 71, 66, 181, 168, 135, \
178, 161, 107, 185, 165, 108, 201, 188, 128, 170, \
153, 91, 163, 142, 88, 165, 143, 103, 151, 121, \
85, 179, 149, 107, 162, 138, 102, 146, 125, 91, \
155, 137, 112, 187, 168, 135, 203, 181, 129, 190, \
155, 108, 203, 153, 119, 228, 182, 156, 234, 197, \
179, 232, 199, 176, 237, 200, 174, 227, 179, 152, \
219, 166, 132, 221, 164, 132, 150, 95, 79, 33, \
14, 14, 42, 27, 25, 32, 13, 15, 61, 37, \
38, 156, 130, 98, 155, 124, 81, 148, 111, 80, \
176, 148, 113, 193, 170, 124, 163, 144, 96, 205, \
192, 143, 195, 181, 122, 176, 159, 105, 181, 163, \
109, 177, 155, 113, 179, 152, 112, 164, 138, 101, \
147, 123, 95, 145, 127, 88, 165, 141, 102, 188, \
167, 122, 208, 183, 126, 193, 141, 97, 205, 136, \
95, 214, 151, 111, 228, 183, 146, 220, 173, 136, \
219, 159, 124, 204, 129, 96, 201, 124, 91, 189, \
109, 75, 133, 68, 47, 43, 19, 18, 56, 32, \
33, 38, 18, 18, 67, 45, 45, 166, 142, 107, \
178, 157, 104, 189, 168, 117, 191, 165, 113, 190, \
164, 116, 191, 172, 130, 191, 177, 126, 191, 171, \
111, 173, 147, 95, 189, 165, 107, 201, 181, 128, \
187, 162, 112, 165, 142, 102, 162, 140, 106, 154, \
137, 92, 166, 143, 99, 201, 184, 134, 184, 151, \
109, 172, 104, 70, 186, 107, 77, 208, 141, 98, \
221, 162, 121, 214, 145, 110, 200, 123, 83, 197, \
118, 80, 183, 104, 75, 172, 93, 64, 134, 74, \
53, 53, 24, 25, 59, 32, 30, 41, 18, 19, \
82, 56, 53, 170, 145, 108, 185, 166, 124, 205, \
188, 141, 199, 179, 121, 191, 171, 123, 200, 186, \
139, 191, 173, 118, 170, 148, 93, 152, 133, 92, \
173, 157, 113, 172, 151, 109, 187, 161, 113, 198, \
175, 125, 148, 127, 88, 146, 127, 92, 170, 150, \
110, 209, 199, 159, 157, 122, 108, 142, 70, 53, \
168, 95, 68, 208, 143, 102, 208, 140, 98, 200, \
127, 94, 193, 115, 72, 192, 119, 78, 160, 87, \
59, 164, 95, 69, 129, 76, 60, 70, 36, 38, \
78, 46, 43, 59, 30, 31, 104, 73, 66, 189, \
170, 126, 209, 192, 146, 204, 182, 129, 193, 171, \
108, 188, 167, 109, 201, 185, 122, 205, 185, 127, \
178, 156, 111, 124, 105, 73, 162, 148, 115, 208, \
189, 146, 196, 172, 124, 184, 162, 120, 154, 135, \
95, 161, 142, 93, 183, 164, 119, 199, 184, 146, \
169, 121, 97, 158, 78, 57, 193, 119, 89, 203, \
129, 91, 196, 121, 85, 179, 108, 80, 196, 120, \
77, 175, 100, 70, 173, 98, 75, 170, 98, 74, \
114, 64, 50, 80, 43, 42, 84, 45, 38, 67, \
29, 29, 115, 74, 64, 197, 171, 126, 196, 176, \
118, 186, 166, 104, 185, 166, 110, 184, 165, 109, \
193, 174, 109, 194, 175, 113, 184, 163, 112, 174, \
155, 106, 187, 174, 127, 223, 205, 150, 194, 171, \
114, 173, 151, 110, 172, 150, 102, 196, 175, 110, \
194, 176, 125, 193, 173, 125, 180, 124, 79, 186, \
109, 75, 210, 142, 100, 202, 133, 93, 176, 107, \
77, 177, 106, 79, 199, 121, 85, 176, 103, 76, \
191, 120, 95, 186, 122, 96, 103, 54, 42, 74, \
37, 38, 71, 35, 31, 66, 28, 30, 87, 49, \
43, 171, 142, 101, 186, 163, 105, 179, 160, 104, \
217, 200, 152, 204, 185, 139, 197, 177, 120, 177, \
157, 100, 176, 157, 104, 196, 179, 123, 210, 197, \
145, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '25114';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a4abb825b627ccaf7db9d66f5ff6333dd';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_airplane4';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{57, 124, 177, 57, 122, 170, 57, 123, 174, 59, 123, \
179, 62, 125, 178, 61, 128, 178, 62, 129, 179, \
61, 129, 178, 59, 132, 180, 61, 132, 183, 61, \
132, 183, 62, 133, 184, 62, 133, 184, 63, 134, \
185, 63, 134, 185, 63, 134, 185, 64, 136, 186, \
65, 136, 187, 65, 135, 188, 64, 135, 188, 64, \
136, 188, 63, 138, 189, 61, 139, 190, 64, 137, \
190, 64, 137, 190, 64, 136, 189, 67, 134, 184, \
67, 134, 182, 67, 134, 183, 69, 131, 184, 65, \
131, 189, 63, 132, 186, 60, 128, 176, 57, 128, \
174, 57, 129, 178, 60, 129, 183, 67, 128, 187, \
68, 130, 186, 64, 134, 184, 60, 136, 180, 62, \
136, 182, 65, 136, 186, 65, 136, 186, 66, 136, \
187, 66, 137, 187, 67, 137, 188, 67, 138, 188, \
67, 138, 188, 67, 138, 189, 68, 138, 188, 70, \
138, 187, 68, 138, 189, 65, 140, 192, 64, 141, \
194, 64, 140, 192, 66, 141, 191, 64, 142, 195, \
65, 142, 193, 74, 139, 180, 80, 135, 170, 77, \
135, 177, 71, 136, 188, 69, 136, 190, 69, 135, \
187, 63, 133, 179, 60, 133, 178, 62, 133, 179, \
64, 134, 182, 63, 136, 188, 70, 134, 190, 63, \
137, 189, 63, 139, 191, 71, 136, 190, 70, 138, \
188, 70, 138, 188, 71, 139, 189, 71, 140, 189, \
71, 139, 189, 71, 139, 188, 71, 139, 189, 72, \
140, 190, 72, 140, 189, 75, 140, 186, 72, 141, \
189, 69, 143, 195, 70, 142, 194, 74, 141, 188, \
72, 142, 188, 66, 143, 194, 69, 143, 191, 85, \
138, 169, 83, 119, 138, 79, 125, 158, 71, 140, \
191, 71, 139, 188, 74, 138, 186, 66, 136, 184, \
64, 136, 181, 70, 134, 176, 79, 135, 171, 84, \
135, 165, 90, 129, 169, 73, 139, 182, 66, 142, \
192, 76, 138, 194, 74, 141, 189, 74, 141, 189, \
74, 142, 190, 75, 142, 190, 74, 142, 189, 74, \
141, 189, 74, 142, 189, 77, 144, 192, 77, 144, \
191, 79, 144, 187, 76, 144, 190, 75, 145, 194, \
83, 143, 188, 90, 140, 177, 84, 141, 181, 76, \
146, 194, 79, 144, 190, 90, 125, 145, 87, 99, \
103, 86, 120, 145, 71, 144, 193, 73, 142, 187, \
79, 141, 186, 70, 139, 189, 69, 138, 183, 78, \
134, 173, 106, 144, 171, 141, 145, 155, 125, 120, \
141, 91, 135, 160, 69, 148, 183, 76, 143, 193, \
78, 143, 192, 78, 143, 191, 79, 144, 191, 78, \
145, 192, 79, 145, 193, 80, 146, 193, 80, 146, \
193, 81, 147, 195, 82, 147, 194, 82, 148, 191, \
80, 149, 194, 81, 147, 194, 98, 148, 184, 120, \
153, 179, 101, 143, 174, 88, 144, 186, 92, 145, \
184, 94, 112, 123, 96, 90, 84, 96, 125, 145, \
74, 149, 198, 78, 146, 188, 84, 144, 186, 73, \
143, 186, 75, 141, 180, 78, 139, 175, 100, 143, \
172, 160, 151, 162, 156, 131, 135, 124, 122, 132, \
88, 143, 169, 80, 148, 195, 79, 147, 195, 84, \
147, 189, 86, 147, 188, 84, 149, 193, 84, 149, \
195, 86, 150, 194, 87, 150, 194, 88, 150, 193, \
90, 151, 193, 87, 152, 197, 84, 154, 202, 90, \
152, 197, 107, 149, 180, 143, 163, 178, 143, 158, \
169, 122, 141, 161, 109, 134, 153, 99, 106, 107, \
97, 91, 87, 96, 132, 156, 83, 153, 201, 87, \
149, 190, 91, 147, 185, 78, 146, 185, 80, 144, \
181, 81, 145, 181, 85, 143, 175, 128, 148, 163, \
154, 143, 142, 149, 131, 126, 126, 126, 142, 103, \
142, 175, 90, 151, 193, 90, 152, 195, 91, 153, \
196, 93, 154, 196, 92, 154, 196, 93, 154, 197, \
95, 155, 196, 97, 154, 194, 99, 155, 193, 100, \
155, 193, 97, 157, 199, 97, 158, 202, 105, 156, \
195, 119, 154, 180, 155, 166, 172, 161, 159, 164, \
119, 123, 126, 93, 93, 88, 92, 90, 91, 102, \
138, 164, 90, 159, 200, 90, 155, 193, 96, 152, \
191, 86, 149, 192, 86, 146, 186, 90, 148, 186, \
90, 152, 187, 99, 150, 171, 139, 152, 156, 162, \
151, 141, 166, 134, 134, 125, 130, 141, 106, 151, \
180, 97, 157, 200, 94, 159, 206, 102, 159, 199, \
104, 159, 196, 102, 160, 200, 105, 160, 199, 106, \
160, 197, 109, 161, 196, 111, 159, 191, 108, 160, \
195, 105, 163, 205, 110, 165, 209, 115, 162, 197, \
132, 151, 164, 143, 137, 138, 126, 119, 112, 114, \
112, 104, 114, 112, 117, 118, 144, 166, 99, 163, \
194, 91, 163, 196, 101, 158, 199, 94, 152, 193, \
94, 149, 189, 98, 151, 189, 101, 155, 193, 95, \
155, 188, 121, 151, 167, 163, 156, 155, 174, 165, \
153, 154, 152, 148, 123, 147, 163, 111, 159, 194, \
105, 163, 207, 112, 162, 199, 113, 162, 196, 111, \
164, 200, 113, 164, 200, 115, 165, 198, 117, 165, \
197, 115, 165, 199, 116, 167, 202, 120, 167, 200, \
123, 161, 190, 121, 151, 174, 119, 133, 143, 139, \
130, 129, 161, 151, 141, 154, 154, 148, 159, 160, \
168, 139, 153, 168, 117, 162, 180, 103, 167, 195, \
108, 162, 203, 103, 156, 193, 104, 154, 189, 108, \
157, 191, 105, 149, 183, 112, 154, 182, 123, 150, \
166, 155, 154, 160, 154, 166, 156, 175, 178, 171, \
162, 169, 174, 129, 155, 174, 123, 163, 194, 123, \
167, 201, 121, 168, 201, 120, 169, 201, 123, 170, \
201, 126, 171, 201, 127, 171, 199, 127, 171, 199, \
126, 164, 189, 134, 160, 177, 157, 170, 179, 170, \
175, 179, 172, 175, 175, 168, 161, 163, 143, 145, \
145, 161, 171, 174, 184, 189, 198, 164, 165, 169, \
142, 153, 160, 128, 165, 192, 119, 165, 204, 112, \
162, 194, 113, 160, 189, 118, 164, 193, 109, 152, \
174, 119, 141, 149, 146, 154, 159, 148, 153, 155, \
171, 170, 169, 188, 187, 183, 182, 178, 177, 159, \
164, 169, 139, 160, 177, 133, 170, 200, 125, 171, \
204, 125, 170, 201, 131, 174, 202, 135, 175, 201, \
132, 170, 193, 137, 162, 174, 162, 175, 181, 194, \
200, 201, 210, 209, 207, 190, 186, 182, 147, 141, \
135, 123, 121, 126, 137, 155, 167, 156, 179, 191, \
174, 184, 194, 189, 183, 181, 176, 160, 161, 144, \
154, 179, 133, 168, 203, 124, 168, 194, 123, 165, \
190, 127, 170, 195, 123, 161, 178, 112, 118, 115, \
155, 148, 150, 163, 173, 175, 158, 160, 162, 183, \
176, 175, 186, 180, 174, 176, 171, 166, 150, 156, \
160, 139, 158, 176, 137, 171, 199, 137, 176, 203, \
142, 173, 192, 142, 163, 174, 153, 166, 172, 193, \
195, 194, 221, 216, 213, 204, 199, 195, 156, 151, \
147, 117, 112, 108, 122, 123, 123, 145, 160, 171, \
152, 185, 205, 145, 180, 201, 153, 176, 194, 173, \
180, 188, 189, 181, 184, 165, 162, 174, 148, 160, \
181, 135, 173, 196, 133, 170, 192, 134, 172, 195, \
135, 169, 188, 129, 142, 149, 153, 155, 167, 160, \
179, 188, 145, 161, 167, 164, 162, 165, 179, 176, \
172, 181, 177, 171, 181, 180, 179, 159, 164, 172, \
146, 165, 180, 146, 171, 187, 157, 173, 182, 186, \
192, 193, 216, 214, 210, 204, 197, 193, 158, 150, \
148, 130, 126, 124, 126, 125, 126, 151, 151, 155, \
170, 180, 190, 163, 187, 203, 153, 187, 209, 154, \
187, 210, 159, 184, 207, 161, 181, 198, 173, 181, \
190, 177, 179, 188, 157, 165, 181, 146, 178, 198, \
145, 176, 195, 145, 176, 195, 149, 179, 198, 142, \
165, 182, 126, 141, 159, 151, 169, 182, 150, 163, \
170, 150, 154, 158, 164, 166, 164, 200, 198, 195, \
199, 195, 193, 168, 167, 168, 154, 158, 161, 183, \
189, 191, 213, 214, 214, 209, 207, 203, 173, 168, \
163, 139, 132, 128, 129, 124, 123, 151, 152, 155, \
173, 180, 188, 180, 191, 204, 175, 190, 208, 168, \
191, 210, 163, 191, 211, 166, 189, 209, 169, 188, \
209, 167, 189, 209, 170, 185, 200, 172, 184, 198, \
164, 181, 201, 157, 180, 196, 156, 179, 195, 158, \
181, 196, 158, 180, 196, 162, 182, 197, 134, 149, \
159, 125, 130, 135, 157, 155, 155, 160, 162, 159, \
153, 158, 156, 175, 172, 172, 170, 162, 161, 177, \
170, 166, 220, 213, 206, 233, 224, 217, 188, 180, \
173, 127, 118, 112, 119, 111, 105, 151, 144, 141, \
180, 178, 179, 191, 196, 203, 185, 197, 210, 178, \
195, 212, 179, 196, 217, 179, 198, 216, 175, 195, \
210, 178, 192, 208, 179, 192, 210, 173, 193, 213, \
174, 192, 209, 174, 191, 207, 169, 189, 208, 169, \
184, 197, 167, 183, 195, 169, 185, 197, 171, 184, \
198, 177, 189, 199, 154, 165, 166, 125, 118, 116, \
175, 163, 159, 188, 189, 181, 152, 155, 149, 170, \
164, 165, 208, 198, 200, 223, 216, 211, 202, 194, \
186, 154, 143, 137, 110, 101, 95, 97, 88, 84, \
141, 133, 129, 198, 195, 194, 199, 200, 204, 193, \
199, 207, 190, 201, 212, 189, 202, 216, 189, 203, \
217, 189, 203, 214, 189, 202, 209, 188, 199, 209, \
187, 197, 212, 185, 197, 211, 183, 197, 209, 181, \
197, 209, 177, 195, 207, 180, 191, 201, 178, 188, \
198, 179, 189, 199, 181, 189, 200, 183, 192, 203, \
174, 188, 189, 172, 165, 164, 175, 166, 168, 168, \
174, 167, 194, 193, 184, 219, 211, 211, 208, 198, \
201, 166, 160, 157, 122, 118, 113, 113, 106, 104, \
123, 117, 114, 148, 141, 139, 166, 159, 157, 200, \
200, 202, 201, 204, 210, 200, 205, 211, 200, 207, \
214, 199, 207, 216, 200, 208, 215, 200, 209, 211, \
200, 209, 209, 195, 207, 212, 194, 204, 213, 198, \
202, 209, 194, 202, 209, 192, 202, 209, 189, 201, \
205, 189, 196, 206, 184, 193, 205, 186, 194, 203, \
193, 198, 205, 194, 199, 209, 179, 186, 191, 162, \
159, 161, 180, 176, 176, 217, 218, 214, 226, 223, \
217, 171, 160, 160, 124, 112, 114, 119, 114, 111, \
120, 117, 114, 152, 147, 146, 188, 183, 181, 190, \
185, 182, 174, 168, 166, 196, 194, 196, 210, 211, \
214, 207, 211, 212, 207, 213, 214, 206, 213, 214, \
208, 213, 215, 209, 213, 214, 208, 213, 214, 206, \
212, 215, 205, 210, 214, 206, 207, 212, 203, 206, \
211, 201, 206, 210, 199, 204, 208, 198, 198, 208, \
195, 194, 208, 199, 198, 209, 194, 193, 198, 172, \
172, 178, 174, 174, 177, 205, 202, 201, 219, 215, \
210, 195, 190, 185, 151, 144, 142, 130, 117, 117, \
149, 138, 138, 157, 154, 151, 160, 158, 154, 194, \
188, 185, 188, 183, 180, 179, 174, 171, 164, 159, \
157, 165, 162, 162, 204, 203, 203, 216, 218, 217, \
212, 218, 216, 211, 219, 217, 214, 217, 218, 215, \
216, 219, 215, 216, 219, 213, 215, 217, 211, 213, \
216, 211, 212, 217, 210, 211, 216, 208, 209, 214, \
207, 208, 213, 205, 200, 207, 207, 201, 210, 197, \
192, 199, 166, 164, 166, 190, 188, 188, 209, 207, \
204, 196, 193, 187, 154, 150, 141, 127, 120, 113, \
148, 137, 136, 188, 177, 177, 215, 207, 205, 202, \
201, 197, 159, 157, 154, 179, 174, 171, 180, 176, \
173, 173, 168, 165, 183, 178, 175, 166, 164, 162, \
170, 171, 170, 211, 212, 210, 221, 224, 222, 219, \
222, 220, 220, 222, 222, 221, 221, 223, 220, 221, \
222, 218, 219, 220, 217, 217, 219, 217, 218, 220, \
216, 216, 219, 214, 215, 218, 213, 214, 217, 209, \
208, 207, 202, 198, 198, 126, 126, 125, 126, 129, \
127, 175, 172, 167, 147, 143, 136, 119, 115, 107, \
116, 114, 102, 165, 158, 151, 216, 203, 203, 231, \
222, 220, 209, 204, 201, 200, 198, 194, 186, 183, \
180, 158, 153, 151, 173, 168, 165, 183, 178, 175, \
196, 191, 188, 176, 175, 171, 161, 161, 157, 179, \
180, 176, 223, 223, 219, 226, 226, 223, 225, 224, \
224, 226, 226, 226, 225, 225, 225, 223, 223, 222, \
221, 221, 221, 221, 221, 220, 220, 220, 219, 218, \
218, 217, 217, 216, 216, 221, 217, 211, 146, 137, \
131, 54, 50, 45, 73, 75, 70, 106, 100, 95, \
125, 118, 112, 154, 148, 142, 194, 190, 183, 226, \
221, 216, 231, 223, 221, 229, 225, 222, 209, 205, \
202, 168, 159, 158, 190, 181, 180, 154, 149, 146, \
151, 146, 143, 175, 170, 167, 182, 177, 174, 176, \
176, 171, 173, 174, 169, 160, 159, 155, 184, 181, \
178, 227, 223, 220, 229, 227, 225, 228, 228, 226, \
228, 227, 226, 227, 226, 224, 226, 225, 223, 225, \
225, 221, 224, 223, 220, 222, 221, 217, 220, 220, \
216, 209, 191, 187, 114, 88, 83, 91, 72, 68, \
114, 104, 102, 146, 135, 133, 191, 181, 178, 219, \
212, 209, 228, 224, 221, 228, 225, 222, 228, 226, \
222, 229, 229, 225, 215, 210, 207, 139, 123, 124, \
141, 128, 128, 169, 164, 161, 189, 184, 181, 174, \
169, 166, 169, 164, 161, 176, 176, 171, 164, 166, \
160, 170, 169, 163, 175, 170, 166, 198, 189, 187, \
233, 228, 225, 231, 229, 226, 232, 229, 227, 231, \
229, 227, 230, 228, 224, 230, 228, 223, 228, 226, \
221, 227, 225, 220, 226, 224, 219, 202, 181, 181, \
136, 107, 108, 153, 130, 131, 186, 173, 173, 217, \
207, 205, 232, 222, 221, 232, 224, 222, 230, 223, \
221, 231, 226, 224, 230, 226, 223, 234, 230, 227, \
205, 198, 196, 151, 139, 139, 160, 149, 149, 220, \
212, 211, 191, 183, 181, 207, 199, 197, 174, 166, \
164, 162, 159, 157, 153, 156, 152, 170, 172, 166, \
185, 176, 172, 163, 136, 135, 211, 186, 177, 236, \
236, 227, 233, 227, 230, 236, 227, 230, 235, 227, \
225, 232, 227, 224, 231, 227, 223, 230, 226, 222, \
230, 225, 221, 227, 211, 212, 222, 202, 204, 225, \
209, 210, 227, 218, 217, 230, 222, 220, 231, 222, \
220, 231, 223, 221, 232, 224, 222, 233, 225, 223, \
233, 225, 223, 234, 226, 224, 232, 225, 223, 214, \
207, 205, 223, 214, 213, 244, 234, 233, 185, 175, \
174, 172, 163, 162, 170, 161, 160, 131, 124, 125, \
149, 150, 148, 174, 177, 171, 186, 177, 173, 183, \
156, 153, 178, 136, 127, 223, 194, 188, 233, 232, \
227, 233, 229, 228, 234, 230, 228, 233, 228, 225, \
232, 227, 224, 231, 226, 223, 230, 225, 222, 226, \
216, 215, 228, 216, 216, 226, 216, 215, 224, 217, \
215, 228, 220, 218, 231, 223, 221, 231, 223, 221, \
231, 223, 221, 233, 225, 223, 234, 226, 224, 235, \
227, 225, 237, 230, 228, 228, 220, 218, 224, 216, \
214, 233, 224, 223, 167, 158, 157, 127, 118, 117, \
152, 142, 141, 174, 164, 164, 190, 186, 184, 168, \
169, 164, 181, 177, 172, 196, 183, 179, 187, 153, \
149, 185, 138, 132, 221, 205, 190, 231, 235, 224, \
232, 229, 228, 235, 229, 227, 233, 228, 225, 233, \
228, 225, 231, 226, 223, 224, 219, 216, 222, 216, \
214, 223, 217, 215, 226, 220, 218, 230, 222, 220, \
231, 223, 221, 230, 222, 220, 231, 223, 221, 233, \
225, 223, 234, 226, 224, 235, 227, 225, 236, 228, \
226, 235, 227, 226, 235, 228, 226, 232, 226, 224, \
196, 190, 187, 157, 151, 148, 192, 186, 183, 236, \
226, 225, 242, 236, 233, 206, 206, 201, 170, 170, \
165, 186, 179, 177, 197, 186, 180, 177, 161, 144, \
178, 140, 124, 228, 211, 201, 241, 232, 231, 234, \
228, 226, 234, 229, 226, 234, 229, 226, 233, 228, \
225, 225, 220, 217, 221, 219, 215, 223, 219, 216, \
228, 220, 218, 230, 222, 220, 231, 223, 221, 231, \
223, 221, 231, 223, 221, 232, 224, 222, 234, 226, \
224, 235, 227, 225, 236, 228, 226, 236, 228, 226, \
237, 231, 228, 237, 233, 230, 239, 235, 232, 210, \
206, 203, 234, 229, 226, 239, 234, 229, 236, 232, \
226, 238, 236, 232, 215, 214, 211, 178, 178, 176, \
180, 184, 176, 189, 194, 178, 178, 154, 143, 193, \
149, 148, 230, 215, 211, 234, 230, 227, 234, 229, \
226, 235, 230, 227, 234, 229, 226, 227, 219, 217, \
222, 219, 215, 225, 217, 216, 230, 217, 217, 231, \
222, 220, 231, 223, 221, 232, 224, 222, 232, 224, \
222, 234, 226, 224, 235, 227, 225, 236, 228, 226, \
236, 228, 226, 236, 228, 226, 235, 230, 227, 236, \
232, 229, 236, 232, 229, 226, 222, 219, 231, 228, \
224, 236, 236, 228, 235, 235, 227, 236, 234, 229, \
238, 235, 233, 222, 221, 219, 188, 190, 182, 188, \
182, 180, 199, 190, 189, 180, 158, 152, 200, 182, \
172, 238, 233, 229, 234, 229, 226, 235, 230, 227, \
234, 229, 226, 228, 219, 217, 224, 217, 215, 225, \
217, 215, 228, 217, 216, 231, 222, 221, 231, 223, \
221, 231, 223, 221, 233, 225, 223, 234, 227, 225, \
235, 229, 226, 235, 229, 226, 236, 230, 227, 237, \
230, 228, 237, 232, 229, 237, 233, 230, 237, 233, \
230, 238, 233, 230, 238, 234, 231, 237, 236, 230, \
236, 234, 229, 238, 233, 230, 238, 233, 231, 240, \
236, 233, 232, 228, 224, 203, 194, 195, 199, 191, \
193, 203, 202, 195, 220, 208, 202, 239, 233, 230, \
235, 230, 227, 235, 230, 227, 234, 229, 226, 227, \
219, 217, 225, 217, 215, 227, 219, 217, 228, 220, \
218, 231, 223, 221, 231, 223, 221, 232, 224, 222, \
234, 226, 224, 234, 227, 225, 234, 229, 226, 234, \
229, 226, 236, 231, 228, 237, 232, 229, 238, 233, \
230, 239, 234, 231, 239, 233, 230, 239, 234, 231, \
240, 235, 232, 240, 235, 232, 238, 233, 230, 238, \
233, 230, 239, 234, 231, 238, 233, 230, 241, 236, \
233, 236, 232, 229, 221, 216, 213, 227, 222, 219, \
238, 233, 231, 237, 232, 230, 236, 231, 228, 235, \
230, 227, 234, 229, 226, 227, 219, 217, 225, 217, \
215, 226, 218, 216, 227, 219, 217, 229, 221, 219, \
232, 224, 222, 233, 225, 223, 235, 227, 225, 235, \
228, 226, 234, 229, 226, 234, 229, 226, 236, 231, \
228, 237, 232, 229, 239, 234, 231, 240, 235, 232, \
240, 235, 232, 240, 235, 232, 241, 236, 233, 241, \
236, 233, 239, 234, 231, 239, 234, 231, 239, 234, \
231, 239, 234, 231, 239, 234, 231, 239, 234, 231, \
237, 232, 229, 237, 232, 229, 238, 233, 230, 237, \
232, 229, 236, 231, 228, 235, 230, 227, 234, 229, \
226, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '25424';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a80a40a5ff19aedef28901ee7391906e0';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_deer9';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{35, 38, 45, 35, 38, 44, 36, 40, 44, 35, 41, \
44, 35, 40, 43, 36, 44, 46, 40, 49, 51, \
39, 48, 50, 33, 39, 44, 36, 40, 50, 39, \
43, 56, 38, 48, 57, 38, 50, 53, 45, 58, \
57, 45, 59, 58, 47, 63, 57, 53, 69, 60, \
61, 76, 69, 58, 74, 67, 45, 59, 55, 41, \
48, 50, 39, 44, 45, 32, 37, 41, 32, 36, \
39, 32, 36, 38, 37, 43, 45, 51, 59, 62, \
67, 75, 81, 66, 75, 80, 56, 66, 68, 50, \
60, 61, 42, 52, 53, 31, 31, 39, 32, 32, \
40, 31, 38, 41, 31, 39, 41, 35, 43, 45, \
39, 52, 48, 40, 57, 52, 43, 62, 56, 40, \
54, 53, 36, 44, 50, 38, 43, 54, 37, 44, \
53, 56, 63, 70, 70, 78, 83, 49, 62, 65, \
45, 59, 59, 38, 53, 45, 42, 56, 50, 48, \
63, 56, 44, 60, 56, 37, 50, 44, 41, 55, \
45, 52, 63, 60, 47, 49, 55, 36, 33, 40, \
44, 48, 54, 71, 74, 82, 77, 80, 90, 58, \
60, 71, 45, 46, 55, 40, 45, 52, 34, 41, \
49, 28, 31, 38, 32, 35, 42, 41, 50, 52, \
44, 54, 55, 36, 46, 47, 38, 48, 45, 44, \
58, 53, 42, 60, 54, 58, 74, 71, 69, 79, \
83, 40, 44, 54, 38, 42, 51, 97, 100, 110, \
80, 85, 93, 41, 55, 51, 41, 56, 53, 36, \
49, 55, 40, 51, 53, 42, 58, 47, 43, 62, \
51, 51, 68, 58, 45, 62, 51, 66, 79, 72, \
77, 86, 85, 41, 51, 50, 58, 64, 65, 71, \
75, 78, 70, 74, 76, 85, 86, 92, 85, 83, \
94, 60, 63, 73, 40, 46, 53, 30, 34, 39, \
30, 34, 38, 34, 43, 42, 37, 46, 44, 36, \
41, 41, 39, 46, 48, 46, 59, 56, 50, 66, \
60, 64, 75, 75, 110, 117, 122, 86, 91, 99, \
83, 87, 97, 112, 114, 122, 56, 65, 70, 38, \
50, 54, 45, 57, 55, 46, 57, 60, 40, 51, \
60, 42, 56, 54, 52, 69, 57, 87, 100, 89, \
75, 88, 82, 68, 84, 76, 82, 94, 88, 48, \
67, 60, 59, 69, 65, 58, 67, 65, 85, 92, \
96, 130, 131, 141, 116, 117, 127, 61, 64, 74, \
43, 49, 53, 31, 38, 40, 32, 40, 42, 36, \
47, 47, 35, 42, 43, 41, 43, 46, 47, 55, \
59, 51, 66, 65, 54, 72, 66, 46, 60, 57, \
53, 64, 63, 78, 89, 89, 123, 128, 132, 114, \
117, 119, 51, 64, 60, 58, 69, 71, 51, 60, \
64, 50, 60, 63, 52, 66, 67, 48, 62, 61, \
46, 61, 53, 60, 76, 68, 88, 104, 105, 123, \
133, 131, 89, 97, 94, 39, 57, 51, 51, 63, \
57, 53, 64, 58, 94, 102, 106, 114, 113, 126, \
98, 100, 110, 75, 78, 87, 56, 59, 64, 35, \
43, 45, 36, 45, 46, 38, 47, 50, 35, 43, \
46, 38, 43, 48, 39, 48, 51, 41, 53, 53, \
43, 57, 54, 42, 56, 51, 42, 56, 50, 45, \
57, 52, 73, 77, 76, 123, 126, 124, 88, 97, \
91, 89, 99, 96, 57, 69, 75, 48, 58, 66, \
58, 70, 71, 59, 72, 70, 57, 72, 67, 57, \
75, 68, 52, 67, 65, 108, 112, 115, 91, 97, \
96, 45, 57, 53, 76, 87, 82, 59, 73, 65, \
79, 91, 88, 94, 103, 102, 78, 88, 86, 64, \
70, 76, 51, 56, 61, 35, 40, 43, 36, 41, \
44, 39, 48, 49, 40, 50, 51, 36, 47, 47, \
36, 46, 46, 42, 52, 53, 47, 57, 58, 44, \
54, 54, 42, 52, 52, 43, 53, 53, 45, 52, \
53, 99, 102, 105, 143, 141, 143, 102, 105, 104, \
57, 69, 77, 54, 62, 73, 67, 72, 81, 80, \
85, 94, 96, 102, 109, 108, 116, 114, 68, 76, \
73, 104, 110, 115, 99, 105, 104, 83, 89, 87, \
92, 99, 95, 69, 81, 72, 63, 76, 67, 55, \
69, 57, 58, 74, 62, 55, 65, 60, 53, 60, \
58, 30, 35, 38, 31, 36, 39, 31, 39, 42, \
37, 46, 49, 46, 54, 58, 45, 55, 58, 47, \
58, 60, 57, 68, 68, 62, 74, 77, 68, 80, \
84, 54, 66, 69, 45, 59, 59, 76, 82, 86, \
129, 125, 133, 127, 123, 128, 98, 100, 110, 88, \
90, 100, 108, 110, 117, 84, 88, 99, 100, 103, \
117, 149, 149, 158, 115, 117, 125, 133, 136, 143, \
139, 143, 143, 115, 121, 122, 79, 88, 85, 69, \
80, 73, 75, 84, 82, 65, 74, 74, 57, 69, \
65, 48, 58, 53, 56, 62, 59, 50, 55, 63, \
57, 62, 70, 43, 47, 54, 40, 43, 50, 45, \
49, 56, 53, 59, 68, 74, 81, 86, 77, 85, \
85, 63, 74, 78, 61, 73, 77, 50, 63, 65, \
46, 62, 57, 65, 73, 71, 111, 111, 115, 116, \
113, 123, 86, 80, 93, 100, 93, 103, 120, 117, \
121, 87, 90, 95, 92, 96, 104, 139, 137, 147, \
159, 159, 171, 157, 157, 168, 120, 117, 127, 94, \
94, 104, 86, 93, 92, 100, 109, 108, 118, 121, \
129, 122, 123, 134, 95, 98, 106, 63, 66, 73, \
52, 55, 62, 92, 92, 105, 84, 85, 97, 47, \
45, 55, 51, 48, 56, 52, 49, 56, 53, 53, \
61, 79, 79, 84, 60, 62, 65, 54, 58, 60, \
60, 64, 70, 50, 55, 64, 64, 69, 70, 88, \
88, 83, 114, 107, 102, 107, 99, 99, 77, 70, \
74, 86, 79, 83, 129, 120, 120, 110, 101, 102, \
109, 96, 96, 121, 105, 100, 142, 134, 136, 142, \
138, 146, 115, 109, 121, 75, 70, 86, 113, 112, \
122, 138, 135, 144, 150, 144, 154, 139, 133, 142, \
108, 106, 114, 92, 90, 98, 83, 83, 90, 86, \
84, 93, 72, 71, 80, 41, 40, 52, 60, 57, \
67, 58, 52, 60, 59, 58, 63, 90, 86, 88, \
76, 76, 80, 98, 97, 97, 79, 78, 86, 48, \
47, 65, 93, 87, 94, 124, 113, 109, 126, 112, \
110, 130, 117, 112, 133, 120, 117, 136, 122, 120, \
135, 123, 120, 107, 94, 93, 121, 107, 109, 117, \
105, 107, 122, 116, 124, 136, 135, 147, 91, 89, \
102, 70, 68, 82, 113, 110, 123, 133, 127, 139, \
141, 134, 146, 140, 135, 146, 131, 129, 139, 111, \
110, 119, 93, 92, 101, 45, 55, 58, 44, 54, \
59, 44, 50, 63, 59, 61, 74, 50, 48, 58, \
80, 80, 85, 155, 152, 153, 180, 180, 184, 198, \
196, 201, 174, 173, 179, 135, 135, 144, 145, 137, \
143, 166, 155, 150, 165, 154, 155, 164, 155, 164, \
178, 160, 164, 144, 124, 128, 83, 71, 76, 82, \
76, 78, 109, 107, 111, 103, 102, 115, 96, 93, \
107, 98, 94, 108, 95, 92, 108, 85, 83, 101, \
121, 118, 134, 129, 124, 136, 130, 125, 136, 132, \
128, 140, 122, 119, 133, 114, 112, 126, 117, 115, \
127, 38, 48, 49, 43, 53, 55, 49, 60, 65, \
71, 75, 82, 120, 116, 122, 195, 194, 198, 241, \
240, 244, 248, 247, 252, 252, 251, 255, 255, 254, \
255, 252, 251, 255, 246, 241, 246, 234, 231, 236, \
202, 200, 214, 182, 170, 174, 160, 139, 135, 114, \
103, 110, 66, 61, 74, 75, 69, 77, 86, 82, \
87, 83, 80, 90, 94, 87, 95, 98, 90, 94, \
84, 78, 87, 95, 92, 109, 119, 119, 130, 127, \
125, 136, 131, 128, 139, 127, 125, 136, 119, 117, \
128, 110, 108, 120, 123, 121, 132, 39, 49, 50, \
42, 52, 54, 59, 70, 70, 132, 135, 140, 211, \
206, 218, 237, 235, 246, 235, 234, 244, 241, 239, \
249, 244, 243, 249, 245, 244, 249, 249, 249, 252, \
249, 248, 251, 233, 228, 242, 203, 192, 202, 155, \
137, 133, 117, 103, 103, 86, 80, 88, 59, 53, \
65, 53, 47, 56, 58, 52, 58, 69, 61, 68, \
64, 53, 57, 70, 58, 59, 77, 67, 73, 94, \
86, 99, 131, 125, 135, 138, 130, 142, 140, 131, \
143, 138, 131, 142, 130, 126, 137, 123, 120, 131, \
118, 115, 126, 41, 51, 54, 44, 50, 58, 71, \
74, 79, 166, 163, 168, 232, 230, 242, 237, 237, \
247, 242, 240, 249, 239, 238, 247, 234, 232, 240, \
236, 235, 243, 239, 238, 245, 238, 236, 247, 230, \
221, 235, 189, 172, 174, 142, 125, 122, 108, 98, \
100, 64, 61, 68, 49, 44, 53, 45, 39, 49, \
48, 41, 50, 54, 45, 53, 64, 53, 60, 90, \
82, 91, 78, 77, 91, 73, 70, 83, 115, 110, \
122, 126, 120, 133, 127, 117, 127, 131, 120, 129, \
129, 119, 127, 126, 116, 124, 121, 114, 122, 43, \
48, 52, 45, 45, 56, 70, 70, 77, 155, 152, \
155, 227, 225, 237, 231, 230, 244, 230, 228, 241, \
215, 213, 227, 217, 214, 228, 224, 221, 235, 227, \
225, 239, 228, 225, 240, 202, 193, 208, 151, 136, \
139, 126, 110, 110, 89, 79, 85, 49, 45, 56, \
49, 43, 54, 49, 43, 53, 48, 42, 51, 47, \
38, 47, 67, 57, 65, 91, 87, 97, 69, 75, \
89, 62, 65, 77, 89, 89, 102, 98, 97, 113, \
100, 95, 108, 106, 99, 109, 101, 96, 103, 99, \
93, 100, 93, 90, 96, 43, 49, 53, 52, 53, \
64, 78, 75, 84, 128, 125, 126, 203, 199, 213, \
218, 215, 231, 214, 212, 223, 205, 203, 215, 212, \
207, 222, 215, 209, 225, 217, 211, 228, 218, 215, \
232, 183, 177, 189, 107, 98, 103, 83, 73, 81, \
74, 61, 73, 46, 41, 51, 44, 42, 50, 44, \
42, 50, 39, 37, 47, 49, 44, 55, 84, 78, \
88, 78, 80, 96, 66, 72, 87, 66, 67, 80, \
89, 87, 98, 90, 89, 102, 89, 89, 104, 104, \
99, 107, 105, 99, 102, 104, 99, 101, 98, 93, \
97, 42, 43, 57, 67, 63, 76, 90, 81, 92, \
128, 118, 123, 186, 177, 183, 201, 197, 207, 208, \
207, 217, 202, 200, 211, 202, 197, 208, 204, 198, \
208, 202, 197, 209, 201, 198, 216, 178, 173, 185, \
101, 94, 99, 56, 48, 57, 59, 46, 58, 47, \
41, 51, 41, 40, 48, 34, 33, 41, 33, 33, \
43, 67, 67, 77, 85, 86, 95, 68, 76, 93, \
73, 78, 94, 69, 68, 82, 80, 77, 87, 75, \
73, 84, 72, 73, 87, 97, 93, 100, 101, 96, \
101, 95, 90, 95, 92, 90, 96, 45, 48, 63, \
81, 79, 90, 101, 92, 97, 118, 109, 108, 142, \
129, 124, 145, 132, 132, 185, 175, 175, 184, 179, \
177, 175, 164, 163, 152, 141, 142, 159, 152, 155, \
154, 145, 152, 150, 139, 141, 121, 108, 106, 65, \
53, 56, 49, 38, 41, 44, 39, 43, 38, 36, \
42, 39, 35, 40, 54, 56, 67, 98, 101, 113, \
97, 101, 115, 71, 79, 96, 79, 82, 96, 74, \
75, 86, 78, 79, 87, 77, 79, 88, 78, 78, \
89, 85, 84, 95, 84, 88, 100, 74, 79, 92, \
74, 77, 89, 52, 57, 73, 90, 89, 102, 92, \
89, 97, 75, 81, 90, 88, 81, 85, 57, 46, \
47, 101, 80, 74, 136, 105, 88, 127, 97, 81, \
84, 66, 57, 78, 71, 67, 86, 72, 68, 92, \
76, 70, 99, 78, 75, 97, 73, 72, 79, 60, \
58, 65, 50, 45, 93, 80, 78, 94, 91, 97, \
79, 81, 92, 80, 81, 94, 78, 84, 101, 71, \
78, 95, 76, 78, 92, 73, 76, 84, 84, 89, \
96, 84, 92, 101, 82, 85, 97, 88, 88, 100, \
89, 89, 99, 82, 83, 92, 83, 82, 90, 65, \
70, 88, 99, 98, 113, 96, 93, 106, 82, 95, \
109, 77, 76, 82, 47, 37, 44, 57, 45, 52, \
60, 43, 39, 66, 45, 39, 61, 45, 48, 51, \
44, 49, 38, 31, 38, 45, 33, 33, 75, 55, \
51, 91, 65, 64, 73, 53, 50, 68, 51, 53, \
116, 104, 109, 127, 126, 135, 114, 115, 125, 101, \
103, 114, 73, 77, 92, 87, 90, 105, 88, 88, \
97, 61, 64, 72, 90, 95, 103, 88, 91, 99, \
86, 85, 94, 87, 84, 93, 91, 87, 96, 89, \
85, 95, 92, 88, 96, 70, 74, 94, 97, 96, \
112, 105, 96, 105, 99, 94, 106, 94, 84, 92, \
52, 42, 46, 45, 35, 47, 35, 26, 29, 81, \
72, 73, 92, 84, 96, 45, 41, 49, 54, 47, \
52, 98, 92, 101, 105, 103, 113, 75, 71, 81, \
44, 38, 52, 66, 61, 77, 127, 125, 141, 137, \
140, 154, 123, 128, 139, 123, 126, 137, 100, 102, \
116, 84, 84, 100, 85, 83, 98, 65, 66, 84, \
83, 88, 109, 99, 103, 123, 107, 107, 120, 109, \
108, 117, 108, 109, 120, 96, 97, 107, 94, 94, \
105, 80, 81, 103, 96, 95, 112, 128, 123, 127, \
149, 142, 154, 114, 110, 124, 51, 48, 58, 51, \
42, 50, 117, 107, 110, 141, 133, 136, 124, 117, \
126, 60, 53, 62, 65, 59, 67, 105, 106, 117, \
112, 107, 112, 97, 90, 96, 64, 64, 84, 86, \
86, 101, 116, 115, 128, 119, 121, 137, 94, 98, \
114, 86, 89, 103, 76, 79, 94, 81, 83, 98, \
111, 110, 121, 105, 105, 117, 108, 109, 122, 112, \
109, 122, 111, 105, 119, 119, 111, 121, 129, 121, \
127, 115, 112, 120, 117, 118, 132, 106, 109, 130, \
123, 126, 145, 156, 157, 169, 177, 179, 202, 138, \
144, 169, 57, 59, 72, 87, 81, 92, 185, 182, \
201, 185, 183, 199, 151, 149, 159, 70, 66, 73, \
59, 54, 62, 107, 107, 115, 117, 110, 110, 101, \
96, 96, 74, 76, 96, 101, 99, 115, 123, 119, \
126, 125, 124, 136, 117, 118, 133, 110, 113, 127, \
85, 89, 103, 92, 94, 106, 122, 121, 130, 107, \
107, 115, 107, 103, 111, 117, 107, 115, 116, 106, \
114, 123, 111, 116, 121, 108, 110, 116, 107, 112, \
116, 112, 123, 136, 146, 167, 163, 172, 193, 178, \
186, 205, 183, 193, 220, 167, 178, 205, 74, 75, \
94, 112, 109, 129, 182, 187, 213, 189, 197, 224, \
184, 191, 212, 83, 88, 98, 89, 85, 90, 148, \
142, 143, 147, 141, 141, 134, 129, 130, 81, 82, \
99, 102, 100, 114, 143, 137, 141, 142, 138, 143, \
138, 137, 143, 127, 129, 136, 115, 117, 125, 104, \
105, 113, 104, 103, 110, 125, 124, 133, 133, 130, \
138, 131, 124, 132, 120, 112, 123, 130, 122, 131, \
131, 123, 132, 126, 118, 127, 131, 124, 134, 162, \
174, 198, 180, 187, 212, 185, 187, 208, 183, 186, \
205, 165, 168, 187, 82, 80, 100, 108, 108, 126, \
159, 165, 182, 175, 180, 204, 192, 194, 218, 108, \
107, 117, 152, 147, 149, 188, 182, 184, 174, 167, \
170, 170, 162, 165, 97, 96, 109, 112, 108, 118, \
162, 154, 153, 165, 156, 160, 169, 161, 166, 158, \
151, 155, 147, 141, 144, 149, 144, 147, 140, 139, \
142, 147, 146, 155, 159, 156, 168, 155, 149, 161, \
146, 141, 150, 143, 136, 143, 145, 136, 145, 138, \
128, 137, 141, 133, 142, 165, 170, 193, 170, 172, \
193, 166, 161, 174, 168, 162, 173, 136, 131, 142, \
75, 72, 85, 104, 103, 116, 154, 155, 166, 179, \
176, 189, 170, 163, 178, 94, 86, 92, 179, 168, \
172, 211, 200, 204, 210, 198, 204, 210, 203, 206, \
132, 131, 144, 141, 137, 152, 205, 197, 203, 211, \
203, 207, 213, 204, 207, 213, 202, 205, 202, 191, \
193, 209, 200, 201, 207, 203, 207, 196, 193, 199, \
198, 192, 205, 197, 189, 201, 189, 183, 186, 187, \
180, 186, 189, 178, 191, 184, 175, 190, 173, 167, \
180, 176, 178, 192, 180, 182, 194, 180, 177, 192, \
187, 182, 198, 140, 136, 152, 59, 58, 73, 124, \
120, 132, 196, 189, 198, 201, 195, 205, 144, 138, \
147, 81, 75, 81, 181, 174, 181, 207, 200, 207, \
205, 199, 207, 211, 207, 211, 146, 145, 159, 143, \
142, 162, 219, 214, 225, 214, 209, 217, 211, 205, \
212, 216, 209, 218, 216, 209, 216, 216, 210, 214, \
217, 210, 217, 215, 208, 216, 216, 209, 215, 215, \
209, 214, 211, 205, 213, 211, 203, 213, 217, 206, \
215, 217, 209, 219, 211, 204, 214, 176, 178, 190, \
174, 174, 191, 174, 174, 191, 174, 174, 191, 146, \
147, 164, 84, 88, 102, 103, 106, 117, 173, 172, \
179, 187, 182, 188, 138, 134, 144, 87, 84, 99, \
166, 165, 176, 186, 185, 194, 174, 171, 183, 183, \
178, 182, 141, 138, 149, 115, 115, 132, 180, 177, \
182, 191, 186, 196, 196, 190, 206, 195, 192, 208, \
199, 197, 209, 182, 180, 190, 170, 170, 179, 163, \
164, 175, 187, 188, 198, 187, 186, 194, 178, 175, \
187, 183, 181, 197, 178, 178, 195, 183, 180, 195, \
183, 176, 187, 169, 168, 181, 159, 158, 172, 160, \
161, 175, 158, 160, 172, 156, 158, 171, 154, 157, \
172, 155, 156, 169, 171, 167, 177, 178, 173, 179, \
154, 155, 167, 126, 130, 150, 164, 164, 179, 177, \
175, 185, 162, 160, 175, 167, 162, 172, 148, 146, \
153, 99, 105, 124, 134, 134, 149, 177, 175, 186, \
183, 181, 191, 184, 179, 190, 180, 174, 185, 170, \
165, 174, 161, 158, 168, 148, 148, 160, 153, 152, \
165, 172, 167, 179, 170, 164, 176, 162, 159, 171, \
156, 155, 170, 156, 154, 173, 157, 154, 173, 166, \
163, 177, 163, 160, 175, 165, 165, 178, 164, 166, \
178, 167, 168, 181, 174, 173, 184, 177, 173, 182, \
181, 173, 181, 172, 166, 179, 164, 160, 169, 166, \
163, 167, 170, 168, 176, 171, 168, 181, 173, 172, \
181, 175, 174, 184, 178, 172, 185, 165, 164, 175, \
166, 165, 175, 184, 182, 193, 183, 180, 189, 177, \
173, 178, 173, 168, 173, 166, 163, 171, 171, 168, \
181, 178, 172, 183, 176, 167, 177, 178, 171, 183, \
176, 169, 182, 181, 176, 186, 182, 180, 189, 169, \
167, 179, 164, 162, 177, 164, 160, 169, 164, 161, \
170, 166, 161, 174, 169, 164, 174, 174, 170, 176, \
178, 172, 181, 182, 176, 186, 184, 178, 187, 180, \
177, 188, 181, 179, 187, 181, 179, 184, 183, 179, \
187, 184, 179, 189, 188, 182, 191, 195, 187, 195, \
198, 188, 196, 194, 186, 192, 190, 185, 190, 195, \
190, 197, 189, 184, 191, 192, 185, 191, 190, 186, \
195, 181, 180, 191, 179, 179, 188, 184, 180, 184, \
192, 184, 188, 192, 183, 192, 179, 169, 179, 174, \
166, 175, 178, 173, 182, 189, 184, 194, 182, 178, \
188, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '25734';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a5b5170a76cacb0107047c4d8abe306a2';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_dog1';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{33, 26, 20, 44, 37, 31, 44, 38, 32, 47, 38, \
32, 48, 37, 31, 67, 56, 50, 99, 88, 82, \
95, 84, 78, 92, 82, 76, 101, 90, 84, 89, \
78, 72, 90, 81, 74, 85, 78, 70, 86, 79, \
71, 89, 83, 74, 113, 106, 99, 103, 96, 90, \
99, 92, 86, 76, 69, 63, 76, 69, 64, 81, \
75, 67, 80, 74, 66, 55, 48, 40, 53, 47, \
39, 60, 50, 44, 60, 49, 43, 50, 39, 33, \
46, 35, 29, 46, 37, 31, 47, 40, 35, 48, \
41, 36, 41, 34, 29, 55, 47, 40, 76, 68, \
61, 81, 73, 67, 83, 73, 66, 82, 71, 65, \
102, 91, 85, 140, 129, 123, 145, 134, 128, 139, \
128, 122, 145, 134, 128, 140, 129, 123, 152, 142, \
136, 149, 141, 133, 147, 139, 131, 146, 138, 131, \
143, 135, 128, 149, 142, 136, 158, 151, 145, 138, \
131, 125, 137, 130, 124, 140, 132, 125, 134, 126, \
118, 92, 84, 77, 79, 71, 63, 83, 73, 67, \
82, 71, 65, 79, 68, 62, 73, 62, 56, 69, \
60, 54, 71, 63, 57, 71, 63, 56, 61, 53, \
46, 77, 67, 59, 103, 93, 85, 109, 99, 90, \
110, 99, 93, 108, 97, 91, 111, 100, 94, 119, \
108, 102, 124, 113, 107, 126, 115, 109, 130, 119, \
113, 132, 121, 115, 142, 131, 125, 149, 138, 132, \
141, 131, 124, 130, 120, 113, 124, 115, 108, 122, \
114, 108, 131, 124, 118, 130, 123, 117, 126, 119, \
113, 132, 123, 116, 136, 126, 119, 148, 138, 131, \
121, 110, 104, 102, 92, 86, 100, 89, 83, 102, \
91, 85, 97, 86, 80, 96, 86, 78, 95, 85, \
76, 93, 83, 75, 77, 67, 59, 72, 60, 51, \
101, 89, 80, 114, 101, 92, 120, 109, 102, 124, \
114, 108, 128, 117, 111, 129, 118, 112, 131, 120, \
114, 135, 124, 118, 138, 127, 121, 137, 126, 120, \
142, 130, 124, 148, 136, 130, 145, 133, 127, 136, \
124, 118, 137, 126, 120, 134, 127, 121, 122, 115, \
109, 66, 60, 54, 91, 83, 77, 119, 107, 102, \
112, 99, 93, 132, 119, 113, 132, 119, 113, 117, \
105, 99, 130, 119, 113, 126, 115, 109, 126, 116, \
110, 124, 113, 105, 120, 108, 99, 115, 103, 94, \
95, 82, 73, 69, 56, 46, 107, 94, 85, 130, \
116, 107, 137, 125, 117, 140, 129, 124, 144, 133, \
127, 144, 133, 127, 143, 132, 126, 141, 130, 124, \
141, 130, 124, 140, 130, 124, 141, 129, 123, 139, \
126, 120, 146, 133, 127, 154, 140, 134, 148, 136, \
131, 123, 115, 110, 116, 110, 103, 39, 32, 26, \
70, 63, 57, 95, 83, 77, 94, 80, 74, 127, \
113, 108, 127, 114, 108, 132, 120, 114, 145, 134, \
128, 127, 116, 110, 125, 114, 108, 126, 114, 105, \
125, 111, 102, 119, 106, 97, 98, 84, 75, 77, \
65, 56, 122, 109, 101, 142, 130, 121, 148, 136, \
129, 149, 138, 132, 153, 142, 136, 155, 144, 138, \
152, 142, 136, 157, 149, 144, 165, 160, 156, 156, \
149, 144, 140, 129, 122, 147, 135, 128, 162, 150, \
144, 149, 139, 135, 144, 134, 130, 95, 87, 81, \
94, 86, 79, 59, 51, 45, 62, 53, 48, 64, \
52, 48, 75, 63, 59, 88, 76, 72, 127, 115, \
111, 138, 127, 121, 120, 109, 103, 127, 116, 110, \
118, 107, 101, 117, 106, 98, 114, 102, 93, 108, \
95, 87, 90, 77, 68, 88, 77, 71, 130, 120, \
114, 144, 133, 127, 146, 135, 129, 149, 138, 132, \
156, 145, 139, 158, 147, 141, 166, 156, 149, 218, \
213, 209, 238, 237, 236, 220, 216, 212, 157, 148, \
140, 156, 146, 138, 155, 147, 140, 138, 133, 128, \
155, 150, 147, 149, 141, 135, 117, 108, 103, 110, \
101, 95, 94, 85, 80, 118, 108, 105, 100, 90, \
88, 49, 40, 38, 109, 99, 97, 127, 117, 112, \
101, 90, 84, 127, 116, 110, 120, 109, 103, 119, \
108, 102, 116, 105, 99, 110, 99, 93, 90, 79, \
73, 94, 83, 77, 134, 123, 117, 146, 135, 129, \
146, 135, 129, 146, 135, 129, 154, 143, 137, 150, \
139, 133, 145, 135, 129, 214, 210, 205, 250, 250, \
249, 246, 242, 239, 174, 165, 157, 128, 119, 110, \
164, 156, 149, 201, 196, 191, 211, 206, 203, 217, \
210, 205, 182, 175, 169, 173, 166, 161, 114, 107, \
102, 106, 98, 95, 74, 66, 63, 40, 33, 30, \
101, 93, 90, 102, 92, 87, 84, 73, 68, 124, \
113, 107, 117, 106, 100, 117, 106, 100, 119, 108, \
102, 120, 109, 103, 105, 94, 88, 96, 85, 79, \
134, 123, 117, 146, 135, 129, 147, 136, 130, 146, \
135, 129, 162, 151, 145, 152, 141, 135, 131, 121, \
114, 169, 164, 160, 210, 210, 209, 221, 217, 213, \
153, 144, 137, 91, 81, 73, 175, 167, 160, 235, \
229, 225, 215, 211, 208, 216, 211, 207, 213, 208, \
204, 221, 217, 213, 109, 105, 101, 65, 61, 57, \
46, 41, 37, 67, 62, 58, 87, 82, 77, 58, \
49, 44, 87, 76, 70, 127, 116, 110, 120, 109, \
103, 115, 104, 98, 118, 107, 101, 118, 107, 101, \
103, 92, 86, 101, 90, 84, 140, 129, 123, 152, \
141, 135, 153, 142, 136, 153, 142, 136, 171, 160, \
154, 159, 148, 142, 142, 132, 125, 95, 91, 86, \
143, 142, 141, 169, 165, 161, 97, 88, 81, 83, \
73, 65, 138, 129, 122, 222, 216, 212, 209, 205, \
202, 211, 207, 204, 234, 230, 227, 247, 243, 240, \
156, 152, 149, 44, 41, 36, 33, 30, 26, 95, \
92, 88, 68, 64, 59, 48, 39, 34, 122, 111, \
105, 129, 118, 112, 127, 116, 110, 117, 106, 100, \
117, 106, 100, 116, 105, 99, 98, 87, 81, 113, \
101, 95, 150, 139, 133, 156, 145, 139, 152, 141, \
135, 155, 144, 138, 163, 152, 146, 158, 147, 141, \
136, 126, 119, 71, 66, 62, 163, 162, 161, 172, \
168, 164, 68, 59, 51, 95, 86, 77, 107, 98, \
91, 163, 158, 153, 175, 172, 169, 198, 197, 194, \
227, 225, 223, 243, 241, 239, 145, 143, 140, 18, \
16, 12, 21, 20, 15, 66, 65, 60, 30, 28, \
23, 75, 66, 61, 131, 120, 114, 129, 118, 112, \
129, 118, 112, 128, 117, 111, 128, 117, 111, 129, \
118, 112, 107, 96, 90, 119, 108, 102, 148, 137, \
131, 149, 138, 132, 149, 138, 133, 156, 145, 140, \
156, 145, 140, 156, 145, 140, 128, 118, 113, 115, \
110, 105, 211, 209, 207, 192, 187, 184, 105, 97, \
90, 122, 113, 104, 106, 98, 90, 111, 105, 99, \
92, 88, 84, 163, 161, 158, 228, 225, 223, 231, \
228, 226, 109, 106, 104, 29, 27, 23, 92, 90, \
86, 115, 112, 109, 85, 82, 78, 122, 114, 109, \
136, 125, 119, 130, 119, 113, 128, 117, 111, 127, \
116, 110, 130, 119, 113, 132, 121, 115, 109, 97, \
91, 108, 96, 90, 138, 127, 121, 146, 135, 129, \
148, 137, 132, 155, 144, 139, 149, 138, 134, 165, \
153, 149, 142, 133, 129, 161, 156, 152, 205, 200, \
196, 179, 174, 170, 140, 134, 128, 120, 113, 103, \
120, 113, 103, 79, 72, 63, 109, 103, 95, 97, \
90, 87, 193, 186, 183, 226, 219, 216, 148, 141, \
138, 124, 119, 117, 212, 207, 206, 189, 184, 183, \
181, 176, 175, 153, 144, 139, 124, 113, 107, 125, \
114, 108, 120, 109, 103, 120, 109, 103, 125, 114, \
108, 127, 116, 110, 107, 96, 90, 94, 83, 77, \
135, 124, 118, 143, 132, 126, 145, 134, 130, 151, \
140, 136, 141, 130, 126, 165, 154, 150, 162, 154, \
150, 189, 184, 180, 139, 134, 130, 89, 84, 80, \
121, 115, 110, 93, 86, 77, 125, 117, 109, 53, \
46, 38, 98, 91, 83, 106, 98, 94, 179, 171, \
168, 218, 210, 207, 165, 158, 155, 188, 182, 181, \
244, 238, 238, 198, 193, 193, 209, 202, 202, 172, \
163, 158, 116, 105, 99, 114, 103, 97, 113, 102, \
96, 119, 108, 102, 121, 110, 104, 117, 106, 100, \
104, 93, 87, 91, 80, 74, 134, 123, 117, 147, \
136, 130, 148, 137, 132, 149, 138, 134, 138, 127, \
123, 143, 132, 128, 171, 163, 159, 219, 214, 210, \
149, 144, 140, 76, 71, 68, 115, 109, 104, 96, \
89, 81, 123, 116, 109, 52, 45, 38, 92, 85, \
78, 172, 164, 161, 209, 201, 198, 199, 191, 188, \
130, 123, 120, 180, 173, 173, 243, 237, 237, 207, \
201, 201, 222, 215, 215, 180, 170, 166, 111, 99, \
93, 110, 99, 93, 110, 99, 93, 118, 107, 101, \
123, 112, 106, 115, 104, 98, 96, 85, 79, 94, \
83, 77, 134, 123, 117, 148, 137, 131, 150, 139, \
134, 149, 138, 134, 153, 142, 138, 146, 135, 131, \
179, 171, 167, 213, 208, 204, 158, 153, 149, 139, \
134, 130, 146, 140, 135, 147, 140, 134, 84, 77, \
72, 45, 37, 32, 151, 143, 138, 202, 194, 191, \
207, 199, 196, 145, 137, 134, 116, 108, 105, 184, \
177, 177, 237, 232, 232, 219, 213, 213, 229, 223, \
222, 183, 173, 169, 124, 112, 106, 120, 109, 103, \
114, 103, 97, 120, 109, 103, 123, 112, 106, 119, \
108, 102, 97, 86, 80, 99, 88, 82, 135, 125, \
119, 145, 134, 128, 146, 135, 130, 150, 139, 135, \
159, 148, 144, 157, 146, 142, 185, 177, 173, 213, \
208, 204, 177, 172, 168, 190, 185, 181, 200, 194, \
191, 187, 179, 176, 66, 58, 55, 74, 66, 63, \
183, 175, 172, 195, 187, 184, 158, 150, 147, 72, \
64, 61, 80, 72, 70, 169, 163, 162, 229, 223, \
223, 223, 217, 218, 232, 226, 226, 192, 182, 178, \
122, 111, 105, 128, 117, 110, 125, 114, 107, 119, \
108, 102, 122, 111, 105, 124, 113, 107, 104, 92, \
86, 104, 93, 87, 139, 128, 122, 147, 136, 130, \
153, 142, 138, 161, 150, 146, 167, 156, 152, 170, \
159, 155, 189, 181, 177, 238, 233, 229, 231, 226, \
222, 231, 226, 222, 236, 230, 227, 232, 225, 223, \
153, 145, 143, 126, 118, 116, 184, 176, 174, 181, \
173, 170, 86, 79, 76, 43, 35, 32, 53, 45, \
43, 132, 126, 125, 215, 209, 209, 215, 209, 209, \
233, 227, 226, 210, 200, 196, 115, 104, 98, 110, \
99, 93, 128, 117, 111, 126, 115, 109, 125, 114, \
108, 130, 119, 113, 110, 99, 93, 110, 99, 93, \
141, 130, 124, 150, 139, 133, 159, 148, 144, 167, \
156, 152, 174, 163, 159, 174, 163, 159, 183, 176, \
173, 229, 227, 225, 239, 237, 234, 236, 234, 231, \
243, 240, 238, 242, 239, 237, 219, 214, 211, 169, \
162, 158, 165, 157, 152, 99, 94, 91, 30, 25, \
23, 29, 24, 21, 43, 38, 35, 106, 102, 101, \
206, 201, 201, 222, 217, 216, 237, 232, 231, 238, \
229, 226, 160, 150, 146, 114, 104, 101, 123, 113, \
110, 134, 123, 118, 134, 123, 117, 131, 120, 114, \
111, 100, 94, 115, 104, 98, 143, 132, 126, 155, \
144, 138, 164, 153, 149, 172, 161, 157, 171, 160, \
156, 171, 160, 156, 171, 164, 161, 206, 204, 201, \
227, 225, 223, 235, 233, 230, 239, 238, 236, 237, \
235, 233, 221, 217, 214, 169, 162, 156, 128, 121, \
114, 46, 41, 38, 20, 16, 13, 25, 20, 17, \
20, 16, 13, 119, 114, 113, 200, 196, 194, 202, \
198, 197, 230, 226, 224, 219, 212, 210, 131, 122, \
119, 91, 81, 79, 120, 111, 108, 132, 122, 117, \
139, 128, 122, 138, 127, 121, 112, 101, 95, 118, \
107, 101, 144, 133, 127, 156, 145, 139, 164, 153, \
149, 170, 159, 155, 166, 155, 151, 166, 155, 151, \
161, 154, 150, 182, 178, 175, 218, 214, 212, 216, \
213, 210, 227, 224, 222, 238, 237, 234, 234, 230, \
227, 189, 183, 177, 123, 115, 108, 74, 68, 63, \
21, 15, 11, 19, 13, 8, 40, 34, 30, 166, \
159, 157, 202, 196, 193, 162, 156, 153, 182, 176, \
173, 127, 121, 118, 38, 32, 28, 33, 26, 23, \
82, 75, 72, 126, 117, 112, 129, 118, 112, 136, \
125, 119, 108, 97, 91, 118, 107, 100, 148, 137, \
131, 158, 147, 141, 164, 153, 148, 165, 154, 150, \
163, 152, 148, 164, 152, 148, 159, 152, 147, 174, \
169, 165, 218, 213, 209, 190, 185, 181, 196, 193, \
190, 235, 233, 231, 236, 232, 228, 191, 184, 179, \
130, 121, 114, 107, 99, 92, 65, 57, 51, 61, \
52, 46, 76, 67, 61, 167, 158, 155, 211, 202, \
199, 134, 125, 123, 95, 86, 84, 44, 38, 34, \
17, 13, 9, 15, 11, 7, 38, 34, 29, 115, \
107, 102, 128, 116, 110, 132, 121, 115, 108, 97, \
91, 117, 106, 100, 147, 136, 130, 158, 147, 141, \
163, 152, 148, 162, 151, 147, 161, 151, 146, 162, \
151, 147, 159, 150, 145, 166, 159, 154, 210, 203, \
197, 191, 184, 179, 168, 163, 159, 221, 219, 217, \
236, 232, 228, 175, 168, 163, 125, 116, 109, 109, \
99, 92, 109, 100, 92, 115, 106, 99, 109, 99, \
92, 144, 135, 130, 165, 155, 151, 107, 97, 93, \
67, 58, 54, 39, 35, 30, 47, 44, 39, 62, \
59, 55, 21, 18, 13, 105, 98, 92, 137, 126, \
120, 132, 121, 115, 114, 103, 97, 111, 100, 94, \
142, 131, 125, 154, 143, 137, 159, 148, 144, 160, \
149, 145, 161, 150, 146, 162, 151, 147, 157, 148, \
143, 161, 152, 147, 212, 203, 197, 197, 188, 182, \
137, 130, 126, 197, 195, 193, 231, 227, 224, 169, \
162, 157, 120, 111, 104, 110, 100, 91, 122, 112, \
104, 129, 119, 110, 131, 121, 113, 133, 122, 117, \
129, 119, 114, 111, 100, 95, 62, 52, 47, 47, \
42, 38, 54, 53, 48, 81, 80, 75, 21, 20, \
15, 100, 93, 87, 135, 124, 118, 140, 129, 123, \
130, 119, 113, 112, 101, 94, 142, 131, 125, 157, \
146, 140, 164, 153, 149, 166, 155, 151, 167, 156, \
152, 165, 154, 150, 159, 150, 145, 178, 170, 164, \
212, 204, 197, 174, 166, 160, 114, 108, 103, 184, \
181, 178, 220, 214, 210, 165, 157, 150, 116, 106, \
98, 112, 101, 94, 132, 121, 114, 139, 128, 121, \
144, 133, 126, 141, 131, 125, 136, 128, 122, 109, \
100, 94, 45, 36, 31, 31, 25, 21, 48, 43, \
40, 45, 41, 37, 23, 19, 15, 104, 96, 91, \
147, 135, 129, 156, 145, 139, 141, 130, 124, 118, \
107, 101, 145, 134, 128, 167, 156, 150, 174, 163, \
158, 167, 156, 152, 163, 152, 148, 164, 153, 149, \
169, 160, 155, 221, 214, 208, 218, 211, 205, 150, \
143, 137, 119, 113, 108, 190, 186, 183, 208, 201, \
195, 153, 144, 136, 110, 100, 92, 122, 111, 104, \
141, 130, 124, 149, 138, 132, 149, 138, 132, 144, \
136, 130, 140, 133, 127, 105, 98, 92, 35, 28, \
22, 28, 21, 18, 50, 42, 40, 49, 41, 39, \
38, 30, 29, 109, 99, 96, 154, 143, 137, 162, \
151, 145, 143, 132, 126, 116, 105, 99, 143, 132, \
126, 164, 153, 147, 171, 160, 155, 167, 156, 152, \
164, 154, 149, 163, 152, 148, 168, 159, 154, 202, \
195, 189, 193, 186, 180, 133, 126, 120, 138, 132, \
127, 194, 190, 186, 211, 204, 198, 132, 123, 116, \
107, 97, 89, 136, 125, 119, 146, 135, 129, 152, \
141, 135, 150, 139, 133, 147, 140, 134, 146, 140, \
134, 115, 108, 102, 39, 32, 26, 32, 24, 20, \
51, 43, 40, 43, 35, 32, 44, 37, 33, 118, \
109, 104, 156, 145, 139, 157, 146, 140, 137, 126, \
120, 112, 100, 94, 140, 129, 123, 158, 147, 141, \
167, 156, 151, 166, 155, 151, 166, 155, 151, 165, \
154, 150, 161, 152, 147, 162, 155, 149, 160, 153, \
147, 143, 136, 130, 154, 148, 143, 200, 196, 192, \
214, 207, 202, 119, 110, 102, 118, 108, 99, 148, \
137, 131, 148, 137, 131, 152, 141, 135, 152, 142, \
136, 151, 143, 138, 151, 144, 138, 132, 125, 119, \
56, 49, 43, 24, 17, 11, 30, 23, 17, 30, \
23, 18, 77, 70, 63, 137, 127, 121, 149, 138, \
132, 148, 137, 131, 132, 121, 115, 111, 100, 94, \
139, 128, 122, 155, 144, 138, 166, 155, 150, 167, \
156, 152, 163, 152, 148, 165, 154, 150, 161, 152, \
147, 158, 150, 144, 154, 147, 141, 148, 141, 135, \
178, 173, 168, 227, 223, 219, 203, 196, 191, 118, \
109, 101, 139, 128, 120, 152, 141, 135, 148, 137, \
131, 154, 143, 137, 156, 145, 139, 154, 147, 141, \
155, 148, 142, 149, 142, 136, 101, 94, 88, 40, \
33, 26, 36, 29, 21, 76, 69, 61, 137, 130, \
122, 147, 137, 130, 148, 137, 131, 146, 135, 129, \
128, 117, 111, 111, 100, 94, 136, 125, 119, 144, \
133, 127, 155, 144, 140, 160, 149, 145, 160, 149, \
145, 161, 150, 146, 157, 148, 143, 154, 147, 141, \
151, 145, 139, 154, 147, 141, 199, 194, 189, 221, \
216, 213, 182, 175, 169, 128, 119, 111, 147, 137, \
129, 146, 135, 129, 143, 132, 126, 153, 142, 136, \
155, 145, 138, 155, 147, 141, 156, 149, 144, 155, \
148, 142, 147, 140, 134, 123, 116, 108, 121, 115, \
105, 148, 141, 132, 151, 144, 135, 149, 139, 132, \
148, 137, 131, 143, 132, 126, 122, 111, 105, 104, \
93, 87, 126, 115, 109, 129, 118, 112, 136, 125, \
120, 141, 130, 126, 149, 138, 133, 150, 139, 135, \
149, 139, 134, 146, 138, 132, 143, 135, 129, 151, \
143, 137, 185, 178, 173, 178, 172, 168, 141, 133, \
127, 135, 125, 118, 139, 129, 121, 139, 128, 122, \
133, 122, 116, 140, 129, 123, 143, 132, 126, 143, \
135, 129, 144, 136, 130, 147, 139, 133, 149, 141, \
135, 155, 146, 138, 154, 145, 136, 155, 146, 138, \
149, 140, 132, 145, 135, 128, 142, 131, 125, 137, \
126, 120, 113, 102, 96, 90, 79, 73, 111, 100, \
94, 113, 102, 96, 114, 103, 97, 118, 107, 101, \
128, 117, 111, 132, 121, 115, 134, 123, 117, 130, \
120, 114, 127, 116, 110, 129, 118, 112, 129, 118, \
113, 127, 117, 112, 121, 110, 104, 121, 110, 104, \
122, 111, 105, 123, 112, 106, 114, 103, 97, 121, \
110, 104, 120, 109, 103, 119, 108, 102, 121, 110, \
104, 125, 114, 108, 128, 117, 111, 132, 120, 114, \
136, 124, 117, 141, 129, 122, 144, 132, 126, 135, \
124, 118, 130, 119, 113, 125, 114, 108, 101, 90, \
84, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '26044';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1aa4626bfde2c2b101faf5913aabe9aeab';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_frog2';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{81, 71, 63, 83, 71, 61, 78, 66, 56, 90, 75, \
63, 88, 73, 59, 80, 67, 60, 83, 70, 63, \
90, 77, 67, 88, 74, 63, 90, 76, 65, 87, \
75, 63, 80, 69, 54, 82, 70, 61, 85, 73, \
64, 85, 72, 63, 85, 71, 63, 84, 70, 60, \
85, 72, 59, 81, 69, 57, 82, 68, 55, 93, \
76, 63, 89, 73, 61, 96, 82, 63, 96, 80, \
62, 89, 74, 55, 84, 72, 56, 83, 72, 58, \
83, 72, 55, 83, 74, 52, 83, 72, 56, 82, \
71, 57, 86, 77, 53, 80, 70, 61, 87, 74, \
64, 98, 84, 71, 93, 79, 65, 94, 82, 68, \
89, 77, 63, 83, 71, 57, 86, 73, 64, 82, \
67, 61, 79, 65, 58, 84, 75, 61, 83, 75, \
62, 81, 71, 62, 72, 63, 53, 71, 63, 52, \
81, 70, 59, 91, 77, 65, 90, 76, 65, 90, \
78, 67, 91, 77, 64, 89, 74, 61, 86, 70, \
57, 96, 79, 62, 90, 75, 65, 81, 68, 58, \
74, 63, 52, 80, 70, 57, 85, 72, 61, 91, \
75, 66, 84, 74, 60, 81, 70, 56, 89, 77, \
59, 93, 80, 67, 98, 80, 69, 100, 86, 76, \
97, 86, 70, 97, 86, 71, 97, 83, 72, 88, \
81, 58, 96, 90, 64, 85, 74, 63, 74, 64, \
54, 74, 65, 52, 81, 73, 61, 85, 73, 64, \
79, 68, 60, 77, 69, 58, 78, 68, 53, 90, \
77, 62, 85, 71, 60, 90, 78, 67, 102, 90, \
75, 93, 80, 68, 93, 79, 67, 98, 83, 69, \
87, 75, 63, 70, 60, 51, 87, 75, 64, 69, \
61, 51, 62, 54, 45, 81, 69, 60, 84, 73, \
63, 86, 74, 64, 85, 73, 61, 104, 92, 78, \
92, 80, 71, 95, 83, 73, 96, 83, 75, 93, \
79, 71, 95, 79, 68, 94, 87, 66, 101, 99, \
64, 83, 76, 58, 82, 71, 58, 94, 80, 65, \
90, 80, 66, 88, 77, 67, 89, 80, 70, 96, \
84, 72, 90, 76, 63, 85, 71, 61, 79, 64, \
57, 82, 67, 54, 126, 113, 80, 117, 103, 78, \
90, 76, 66, 87, 72, 64, 90, 75, 68, 80, \
66, 58, 95, 85, 72, 115, 106, 85, 86, 77, \
66, 61, 54, 45, 77, 66, 56, 85, 72, 62, \
82, 72, 55, 87, 79, 64, 83, 75, 65, 92, \
80, 67, 93, 81, 70, 94, 80, 70, 96, 79, \
64, 94, 82, 69, 92, 92, 57, 82, 75, 59, \
92, 75, 67, 105, 85, 70, 87, 75, 60, 86, \
74, 61, 96, 83, 72, 100, 87, 73, 94, 81, \
66, 92, 79, 67, 93, 79, 69, 92, 78, 63, \
105, 93, 67, 131, 121, 87, 98, 85, 70, 86, \
72, 63, 88, 74, 63, 89, 77, 69, 93, 82, \
70, 104, 94, 76, 124, 114, 91, 105, 95, 76, \
79, 67, 56, 80, 67, 55, 89, 79, 58, 75, \
67, 56, 82, 73, 61, 84, 71, 59, 85, 74, \
63, 91, 80, 69, 92, 79, 65, 95, 81, 67, \
88, 86, 55, 81, 74, 58, 90, 74, 67, 92, \
77, 66, 85, 74, 63, 86, 74, 63, 88, 72, \
60, 93, 79, 64, 91, 79, 68, 89, 76, 64, \
85, 74, 59, 88, 78, 63, 83, 70, 58, 99, \
89, 68, 115, 107, 73, 90, 78, 61, 95, 81, \
68, 91, 79, 70, 89, 76, 65, 85, 72, 62, \
96, 84, 63, 112, 99, 76, 102, 87, 70, 89, \
76, 63, 95, 84, 71, 83, 75, 62, 79, 72, \
56, 79, 70, 56, 90, 78, 68, 94, 76, 69, \
94, 74, 65, 95, 79, 64, 87, 79, 58, 96, \
89, 62, 97, 83, 71, 88, 74, 66, 92, 78, \
68, 87, 74, 63, 84, 69, 58, 94, 79, 62, \
87, 75, 64, 87, 75, 63, 88, 77, 57, 93, \
83, 65, 91, 79, 66, 75, 62, 55, 89, 79, \
57, 103, 92, 63, 96, 81, 66, 81, 69, 58, \
80, 67, 57, 84, 71, 62, 86, 74, 63, 90, \
78, 64, 106, 93, 74, 109, 97, 73, 90, 78, \
63, 81, 74, 59, 80, 72, 58, 86, 75, 60, \
86, 75, 62, 92, 78, 68, 97, 81, 70, 99, \
83, 69, 95, 81, 68, 98, 85, 66, 96, 82, \
70, 95, 80, 69, 98, 82, 69, 92, 78, 68, \
90, 75, 68, 92, 78, 60, 91, 79, 65, 86, \
73, 60, 77, 65, 45, 86, 74, 57, 80, 71, \
63, 80, 70, 61, 79, 67, 56, 98, 81, 67, \
105, 93, 71, 98, 87, 70, 82, 69, 59, 78, \
68, 58, 80, 71, 60, 86, 77, 61, 95, 85, \
65, 100, 88, 70, 104, 87, 65, 85, 74, 61, \
89, 78, 67, 92, 79, 64, 98, 84, 66, 97, \
83, 68, 96, 85, 70, 100, 86, 71, 96, 83, \
71, 89, 74, 67, 91, 75, 66, 98, 83, 71, \
93, 78, 64, 87, 74, 64, 85, 74, 65, 79, \
67, 54, 96, 81, 61, 111, 93, 70, 113, 95, \
71, 109, 92, 70, 91, 79, 62, 83, 74, 60, \
79, 68, 58, 82, 67, 53, 99, 84, 63, 123, \
110, 88, 122, 111, 90, 83, 76, 59, 72, 63, \
54, 84, 72, 57, 92, 84, 61, 99, 87, 75, \
103, 85, 71, 92, 80, 69, 100, 88, 76, 100, \
87, 72, 103, 89, 72, 97, 83, 68, 91, 78, \
64, 89, 76, 62, 90, 80, 59, 91, 79, 61, \
95, 79, 68, 95, 80, 69, 94, 80, 69, 101, \
88, 73, 115, 101, 71, 133, 116, 80, 123, 104, \
72, 137, 117, 73, 161, 143, 97, 164, 145, 112, \
155, 135, 100, 121, 105, 67, 87, 73, 57, 92, \
77, 68, 91, 78, 64, 89, 77, 65, 115, 100, \
84, 129, 113, 92, 119, 102, 84, 106, 90, 71, \
90, 82, 59, 86, 79, 60, 87, 75, 62, 96, \
84, 73, 101, 89, 76, 102, 88, 72, 94, 83, \
69, 89, 78, 64, 92, 78, 66, 91, 77, 65, \
99, 90, 67, 97, 86, 59, 91, 76, 56, 92, \
78, 66, 98, 83, 76, 99, 85, 69, 127, 108, \
75, 146, 125, 81, 123, 104, 59, 113, 93, 40, \
109, 89, 36, 110, 90, 48, 114, 96, 65, 110, \
95, 64, 85, 71, 50, 84, 72, 58, 92, 81, \
62, 95, 81, 70, 89, 74, 67, 103, 88, 72, \
134, 119, 93, 150, 133, 105, 129, 114, 87, 102, \
90, 69, 91, 81, 68, 88, 79, 70, 93, 84, \
70, 98, 84, 69, 97, 84, 73, 95, 83, 71, \
95, 83, 67, 94, 81, 70, 90, 79, 70, 87, \
78, 66, 98, 84, 67, 98, 80, 65, 107, 82, \
51, 105, 78, 36, 92, 69, 38, 82, 57, 24, \
93, 73, 19, 110, 89, 28, 115, 90, 30, 109, \
85, 20, 95, 71, 23, 83, 60, 24, 79, 62, \
32, 76, 62, 46, 109, 89, 61, 104, 85, 51, \
94, 82, 71, 87, 77, 64, 86, 75, 56, 107, \
93, 73, 131, 114, 91, 151, 134, 106, 152, 136, \
109, 89, 80, 71, 85, 77, 65, 85, 79, 67, \
91, 80, 67, 93, 79, 69, 90, 78, 65, 94, \
82, 66, 88, 77, 70, 78, 65, 57, 99, 82, \
53, 114, 93, 45, 111, 85, 27, 117, 91, 26, \
108, 83, 27, 98, 72, 29, 91, 66, 22, 102, \
76, 27, 119, 93, 43, 135, 111, 48, 139, 115, \
49, 120, 96, 36, 97, 77, 32, 86, 68, 43, \
133, 106, 61, 109, 84, 34, 85, 74, 56, 89, \
78, 68, 92, 80, 67, 87, 75, 62, 90, 77, \
64, 107, 92, 72, 130, 113, 89, 89, 76, 69, \
93, 82, 70, 85, 77, 61, 91, 80, 64, 96, \
82, 69, 96, 84, 70, 88, 77, 62, 83, 70, \
61, 101, 84, 52, 109, 91, 51, 153, 133, 71, \
116, 91, 37, 108, 81, 28, 112, 88, 26, 117, \
91, 38, 110, 83, 28, 124, 99, 36, 129, 105, \
56, 138, 114, 58, 138, 113, 57, 125, 99, 45, \
104, 81, 31, 85, 64, 29, 141, 114, 57, 111, \
84, 35, 89, 74, 55, 94, 81, 77, 95, 82, \
74, 86, 74, 60, 80, 71, 60, 90, 80, 69, \
88, 75, 62, 84, 73, 63, 91, 79, 69, 91, \
78, 63, 101, 90, 72, 103, 91, 75, 94, 84, \
68, 85, 74, 65, 89, 69, 46, 165, 150, 99, \
121, 108, 64, 149, 127, 73, 137, 111, 55, 121, \
94, 31, 96, 71, 17, 120, 94, 38, 141, 114, \
46, 134, 100, 31, 116, 89, 44, 122, 96, 50, \
132, 105, 53, 136, 110, 53, 112, 88, 36, 102, \
80, 37, 126, 101, 52, 111, 85, 36, 101, 82, \
59, 92, 80, 72, 87, 76, 69, 93, 79, 68, \
91, 80, 67, 96, 88, 76, 95, 85, 70, 111, \
101, 87, 100, 88, 79, 91, 78, 65, 98, 86, \
68, 96, 85, 67, 82, 74, 61, 80, 70, 57, \
128, 104, 64, 176, 155, 109, 109, 87, 46, 99, \
73, 33, 120, 97, 37, 129, 99, 32, 137, 105, \
39, 134, 111, 43, 167, 139, 65, 142, 101, 38, \
95, 66, 30, 140, 116, 60, 154, 127, 68, 145, \
119, 60, 146, 125, 66, 138, 116, 62, 129, 104, \
57, 99, 81, 41, 89, 75, 49, 95, 85, 65, \
101, 90, 71, 98, 86, 66, 96, 85, 63, 96, \
88, 70, 97, 90, 77, 114, 101, 85, 116, 102, \
90, 117, 102, 87, 119, 104, 84, 112, 98, 80, \
101, 88, 77, 107, 90, 61, 175, 155, 100, 151, \
130, 91, 113, 85, 34, 116, 91, 52, 125, 104, \
56, 136, 112, 48, 111, 92, 63, 106, 89, 52, \
148, 122, 63, 143, 115, 53, 120, 95, 53, 142, \
114, 69, 149, 122, 73, 150, 125, 67, 170, 151, \
99, 193, 178, 128, 150, 130, 80, 96, 80, 44, \
87, 73, 44, 90, 74, 50, 97, 83, 59, 90, \
79, 52, 89, 80, 49, 85, 78, 54, 93, 87, \
73, 82, 75, 60, 83, 76, 60, 93, 82, 70, \
110, 97, 81, 119, 104, 90, 117, 101, 90, 125, \
102, 62, 193, 171, 111, 127, 113, 80, 110, 85, \
43, 197, 176, 119, 194, 170, 96, 169, 145, 75, \
103, 77, 62, 135, 106, 69, 156, 127, 58, 155, \
131, 62, 163, 137, 74, 146, 117, 64, 134, 105, \
57, 111, 86, 42, 128, 107, 75, 197, 185, 149, \
175, 161, 113, 96, 81, 44, 82, 65, 34, 88, \
71, 44, 83, 68, 43, 73, 60, 33, 76, 68, \
31, 82, 78, 41, 91, 86, 62, 84, 74, 63, \
83, 74, 60, 87, 78, 64, 91, 78, 69, 93, \
79, 68, 97, 83, 72, 113, 95, 62, 171, 154, \
110, 159, 144, 116, 59, 48, 35, 107, 92, 55, \
164, 137, 74, 167, 134, 57, 167, 131, 57, 179, \
147, 70, 171, 140, 76, 189, 165, 108, 190, 171, \
108, 194, 172, 116, 183, 158, 101, 154, 129, 72, \
132, 111, 69, 137, 120, 82, 132, 119, 79, 89, \
77, 47, 81, 64, 43, 83, 68, 43, 83, 69, \
43, 73, 59, 33, 75, 68, 38, 87, 80, 48, \
98, 88, 59, 91, 81, 69, 88, 78, 67, 88, \
79, 66, 93, 81, 70, 95, 80, 68, 96, 83, \
72, 115, 101, 76, 160, 146, 112, 147, 132, 110, \
85, 78, 68, 44, 42, 36, 44, 39, 27, 65, \
52, 31, 83, 64, 39, 129, 111, 75, 175, 154, \
113, 195, 174, 130, 169, 144, 99, 186, 165, 122, \
206, 192, 147, 174, 156, 114, 146, 126, 81, 145, \
127, 76, 112, 101, 62, 86, 76, 52, 84, 69, \
48, 77, 63, 36, 77, 63, 36, 78, 64, 36, \
79, 69, 37, 88, 77, 49, 94, 80, 56, 92, \
82, 73, 86, 76, 62, 90, 78, 64, 92, 81, \
68, 79, 68, 58, 86, 77, 62, 109, 96, 69, \
138, 119, 85, 109, 97, 77, 82, 75, 61, 80, \
73, 64, 66, 61, 56, 87, 75, 64, 97, 83, \
66, 107, 91, 72, 151, 137, 110, 141, 134, 103, \
86, 75, 53, 95, 74, 48, 169, 146, 102, 188, \
169, 124, 135, 111, 75, 127, 107, 67, 109, 98, \
72, 79, 66, 52, 81, 65, 44, 73, 58, 34, \
73, 56, 37, 78, 60, 35, 86, 71, 39, 88, \
78, 41, 84, 71, 48, 96, 86, 75, 96, 87, \
73, 93, 83, 71, 95, 84, 68, 95, 80, 68, \
102, 88, 73, 110, 92, 71, 114, 92, 68, 112, \
97, 72, 87, 77, 64, 89, 76, 65, 96, 84, \
69, 114, 95, 78, 120, 98, 75, 100, 82, 63, \
83, 68, 51, 102, 100, 71, 115, 122, 86, 115, \
112, 81, 161, 142, 93, 190, 165, 109, 140, 117, \
65, 133, 123, 67, 135, 136, 78, 124, 123, 75, \
118, 115, 66, 98, 101, 54, 102, 109, 53, 110, \
117, 64, 114, 122, 77, 112, 117, 80, 105, 100, \
70, 105, 96, 82, 95, 84, 76, 96, 85, 75, \
104, 93, 77, 107, 93, 74, 101, 86, 71, 103, \
88, 73, 113, 94, 73, 107, 90, 69, 99, 83, \
68, 100, 82, 67, 92, 80, 64, 92, 78, 67, \
105, 92, 76, 106, 92, 74, 84, 69, 59, 62, \
55, 45, 65, 62, 45, 89, 90, 63, 127, 125, \
82, 147, 137, 86, 120, 106, 64, 124, 117, 69, \
123, 123, 64, 115, 119, 60, 116, 123, 65, 103, \
119, 56, 102, 131, 50, 109, 144, 56, 118, 149, \
73, 122, 149, 83, 133, 154, 94, 91, 83, 70, \
81, 70, 64, 98, 83, 71, 107, 93, 80, 89, \
78, 65, 91, 78, 62, 95, 83, 69, 102, 87, \
69, 98, 82, 68, 99, 85, 65, 101, 85, 70, \
93, 78, 68, 91, 78, 67, 101, 91, 75, 108, \
93, 71, 110, 90, 71, 100, 86, 72, 90, 80, \
61, 111, 87, 55, 114, 92, 54, 88, 78, 48, \
95, 94, 68, 107, 100, 79, 114, 103, 87, 111, \
103, 85, 105, 100, 82, 94, 86, 70, 84, 76, \
57, 76, 69, 45, 69, 68, 47, 63, 67, 43, \
61, 69, 44, 91, 80, 69, 92, 80, 73, 96, \
81, 69, 91, 78, 65, 92, 81, 68, 101, 88, \
73, 103, 89, 75, 99, 86, 71, 101, 88, 72, \
102, 90, 71, 101, 86, 70, 104, 89, 74, 98, \
84, 70, 94, 79, 68, 104, 87, 72, 116, 100, \
78, 125, 108, 81, 142, 120, 79, 153, 125, 71, \
134, 108, 54, 88, 72, 44, 71, 63, 49, 71, \
65, 48, 83, 79, 65, 108, 106, 90, 135, 134, \
113, 158, 156, 129, 166, 163, 130, 163, 156, 129, \
151, 140, 119, 141, 133, 107, 126, 121, 99, 100, \
83, 72, 96, 82, 71, 99, 89, 70, 86, 79, \
66, 90, 79, 65, 97, 84, 71, 99, 86, 73, \
102, 89, 73, 102, 89, 73, 93, 79, 68, 90, \
77, 64, 95, 83, 68, 101, 89, 75, 102, 88, \
76, 112, 96, 80, 123, 108, 83, 137, 120, 88, \
141, 121, 84, 127, 108, 66, 110, 92, 56, 97, \
84, 65, 99, 85, 71, 95, 83, 68, 82, 73, \
62, 66, 59, 52, 76, 69, 58, 90, 88, 71, \
101, 104, 81, 110, 113, 92, 120, 115, 97, 137, \
134, 109, 157, 156, 123, 102, 84, 72, 99, 83, \
71, 106, 94, 73, 102, 90, 72, 93, 81, 69, \
93, 80, 69, 100, 88, 73, 110, 97, 79, 105, \
92, 75, 90, 76, 66, 91, 79, 67, 89, 77, \
62, 95, 83, 66, 111, 96, 79, 105, 88, 69, \
106, 90, 67, 119, 102, 79, 110, 94, 76, 107, \
91, 73, 112, 95, 76, 110, 95, 78, 103, 88, \
72, 106, 90, 76, 110, 95, 79, 100, 87, 70, \
94, 82, 68, 83, 72, 63, 76, 67, 57, 67, \
60, 46, 65, 56, 43, 79, 80, 62, 97, 100, \
78, 120, 102, 85, 112, 93, 78, 106, 92, 74, \
107, 93, 71, 106, 93, 81, 104, 91, 82, 102, \
90, 78, 104, 91, 75, 101, 88, 72, 103, 90, \
75, 99, 85, 69, 103, 90, 71, 108, 93, 72, \
109, 92, 70, 116, 99, 77, 120, 103, 79, 118, \
101, 78, 115, 98, 81, 116, 99, 80, 112, 95, \
77, 114, 97, 81, 112, 95, 79, 110, 94, 76, \
116, 99, 81, 105, 88, 72, 103, 88, 74, 108, \
94, 81, 103, 89, 75, 95, 81, 65, 91, 77, \
63, 93, 90, 70, 74, 71, 54, 118, 104, 83, \
129, 113, 94, 112, 99, 81, 104, 93, 74, 109, \
96, 79, 107, 95, 79, 98, 86, 73, 100, 86, \
73, 100, 87, 71, 107, 93, 76, 104, 88, 70, \
99, 83, 62, 113, 96, 74, 119, 98, 81, 117, \
95, 80, 118, 99, 81, 108, 91, 71, 110, 93, \
74, 112, 95, 77, 108, 91, 76, 108, 90, 78, \
114, 95, 79, 109, 91, 69, 120, 102, 80, 125, \
105, 90, 112, 95, 82, 110, 96, 82, 104, 90, \
77, 101, 87, 77, 99, 87, 73, 96, 86, 68, \
100, 84, 70, 105, 92, 74, 120, 110, 88, 130, \
115, 97, 100, 86, 69, 98, 86, 65, 102, 91, \
70, 96, 84, 67, 100, 88, 70, 108, 94, 74, \
119, 99, 78, 126, 103, 81, 121, 104, 82, 129, \
112, 90, 135, 114, 94, 117, 96, 77, 103, 83, \
68, 108, 90, 75, 118, 101, 85, 111, 93, 76, \
103, 87, 69, 111, 96, 82, 110, 92, 77, 105, \
90, 73, 109, 96, 79, 106, 93, 75, 96, 83, \
71, 102, 90, 76, 105, 91, 79, 100, 87, 77, \
103, 91, 76, 98, 85, 70, 96, 81, 69, 104, \
89, 78, 101, 90, 74, 119, 102, 85, 99, 82, \
71, 94, 82, 69, 98, 83, 68, 99, 84, 72, \
103, 90, 75, 116, 101, 83, 127, 105, 89, 121, \
99, 78, 114, 99, 79, 112, 97, 74, 119, 101, \
81, 117, 99, 82, 105, 85, 70, 110, 92, 77, \
113, 97, 82, 107, 91, 78, 104, 90, 72, 103, \
90, 74, 108, 93, 80, 100, 86, 75, 89, 77, \
67, 88, 76, 62, 85, 71, 63, 106, 91, 78, \
118, 102, 85, 116, 100, 83, 116, 104, 85, 107, \
95, 83, 107, 93, 85, 107, 95, 84, 107, 94, \
83, 113, 96, 81, 102, 85, 73, 99, 86, 72, \
106, 89, 74, 107, 89, 78, 108, 93, 82, 109, \
96, 78, 112, 97, 82, 114, 98, 82, 109, 96, \
76, 107, 91, 69, 116, 100, 83, 114, 98, 84, \
113, 94, 80, 112, 93, 78, 106, 91, 75, 92, \
80, 70, 96, 84, 71, 93, 79, 69, 94, 81, \
73, 95, 81, 71, 108, 92, 82, 107, 92, 78, \
110, 94, 81, 100, 87, 71, 109, 97, 78, 123, \
112, 89, 131, 120, 97, 126, 117, 90, 118, 107, \
89, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '26354';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a8a2af1cd1dd5289970943b9fcc7d2e17';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_frog4';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{166, 158, 139, 169, 161, 142, 157, 149, 131, 136, 128, \
109, 145, 136, 117, 130, 122, 103, 138, 133, 117, \
132, 130, 117, 122, 123, 111, 116, 115, 103, 114, \
111, 96, 138, 132, 116, 143, 135, 116, 147, 138, \
119, 142, 134, 120, 137, 132, 118, 117, 115, 99, \
107, 108, 91, 133, 136, 118, 96, 102, 86, 111, \
117, 93, 135, 140, 112, 83, 85, 64, 89, 91, \
77, 70, 78, 62, 61, 77, 59, 28, 48, 32, \
12, 27, 15, 15, 24, 16, 29, 42, 31, 47, \
70, 49, 6, 28, 7, 145, 138, 120, 149, 142, \
125, 143, 136, 119, 139, 132, 115, 151, 144, 125, \
148, 141, 124, 149, 144, 128, 133, 131, 116, 128, \
127, 113, 121, 121, 108, 115, 113, 99, 123, 120, \
103, 128, 122, 103, 127, 120, 100, 122, 116, 96, \
117, 113, 93, 115, 114, 93, 95, 98, 76, 128, \
132, 112, 94, 102, 86, 105, 114, 95, 94, 106, \
83, 51, 63, 44, 85, 98, 82, 114, 134, 111, \
77, 103, 80, 18, 47, 26, 7, 29, 13, 19, \
32, 21, 48, 59, 46, 56, 76, 53, 31, 55, \
29, 125, 120, 104, 129, 125, 109, 128, 123, 108, \
126, 122, 106, 146, 141, 125, 156, 152, 136, 144, \
139, 123, 140, 136, 120, 144, 140, 124, 121, 120, \
103, 125, 122, 104, 156, 152, 131, 146, 139, 116, \
119, 110, 86, 129, 121, 92, 133, 127, 98, 126, \
123, 96, 106, 104, 79, 117, 118, 97, 92, 97, \
82, 66, 76, 61, 47, 62, 45, 51, 73, 54, \
109, 136, 113, 146, 177, 148, 96, 131, 102, 19, \
54, 29, 17, 43, 24, 14, 29, 15, 40, 50, \
35, 58, 78, 51, 56, 82, 50, 106, 103, 89, \
122, 120, 106, 127, 125, 111, 122, 120, 107, 140, \
138, 125, 138, 136, 122, 137, 132, 116, 142, 135, \
118, 151, 145, 126, 123, 117, 94, 108, 101, 76, \
149, 139, 111, 149, 136, 107, 136, 121, 90, 143, \
128, 92, 157, 143, 108, 163, 151, 121, 140, 130, \
104, 111, 104, 82, 75, 74, 57, 21, 26, 14, \
31, 46, 32, 84, 111, 88, 119, 153, 123, 119, \
157, 123, 94, 135, 102, 69, 107, 78, 44, 71, \
49, 24, 39, 22, 23, 35, 18, 23, 49, 17, \
48, 83, 43, 96, 96, 82, 106, 106, 93, 115, \
115, 102, 123, 123, 110, 121, 121, 109, 134, 133, \
120, 135, 131, 116, 135, 128, 109, 157, 148, 126, \
137, 124, 94, 127, 112, 79, 154, 137, 102, 177, \
157, 120, 174, 152, 113, 153, 129, 88, 169, 145, \
107, 207, 186, 154, 170, 150, 124, 115, 97, 74, \
72, 63, 45, 30, 30, 18, 38, 51, 35, 89, \
117, 90, 111, 148, 110, 91, 129, 94, 96, 137, \
103, 119, 156, 126, 76, 99, 77, 36, 50, 32, \
41, 62, 35, 56, 91, 50, 76, 122, 75, 118, \
120, 107, 128, 130, 117, 111, 112, 99, 115, 115, \
103, 106, 107, 96, 124, 123, 110, 119, 113, 96, \
124, 114, 93, 144, 128, 103, 153, 133, 98, 182, \
160, 121, 202, 178, 139, 195, 169, 129, 174, 146, \
104, 155, 122, 77, 198, 166, 125, 202, 174, 140, \
159, 136, 110, 146, 125, 101, 158, 138, 109, 106, \
95, 71, 39, 44, 23, 79, 102, 73, 112, 145, \
109, 86, 122, 88, 110, 149, 114, 120, 156, 122, \
98, 120, 95, 65, 79, 59, 38, 62, 33, 78, \
113, 72, 86, 125, 83, 135, 141, 126, 138, 141, \
127, 106, 106, 93, 120, 119, 106, 124, 122, 107, \
127, 121, 104, 118, 107, 85, 121, 104, 78, 161, \
140, 109, 188, 163, 125, 180, 154, 114, 166, 139, \
100, 153, 125, 89, 154, 124, 85, 180, 141, 96, \
203, 167, 124, 181, 153, 118, 119, 101, 74, 107, \
89, 63, 203, 172, 134, 195, 170, 134, 103, 96, \
66, 70, 80, 53, 92, 113, 85, 87, 113, 84, \
105, 138, 102, 127, 161, 122, 99, 119, 90, 71, \
85, 62, 59, 83, 56, 56, 82, 50, 82, 99, \
73, 144, 146, 132, 155, 154, 138, 133, 130, 111, \
151, 146, 125, 140, 130, 105, 128, 114, 87, 118, \
102, 72, 133, 115, 83, 183, 162, 130, 159, 138, \
103, 123, 101, 67, 102, 80, 46, 140, 118, 85, \
163, 140, 104, 175, 144, 102, 187, 156, 115, 183, \
158, 122, 147, 127, 95, 120, 100, 69, 190, 159, \
123, 216, 189, 154, 175, 161, 128, 84, 81, 51, \
71, 75, 49, 108, 117, 93, 97, 114, 81, 86, \
109, 70, 93, 108, 78, 79, 92, 69, 42, 66, \
43, 48, 70, 46, 109, 117, 104, 160, 157, 142, \
160, 156, 135, 147, 141, 116, 138, 129, 99, 127, \
108, 72, 134, 112, 74, 178, 158, 121, 171, 153, \
118, 123, 105, 72, 89, 75, 46, 79, 65, 37, \
70, 57, 28, 129, 116, 84, 176, 161, 128, 180, \
161, 124, 171, 150, 112, 178, 156, 118, 174, 153, \
114, 156, 133, 96, 153, 127, 95, 168, 143, 111, \
160, 140, 107, 146, 131, 96, 135, 122, 89, 96, \
86, 63, 109, 107, 77, 132, 137, 101, 88, 94, \
63, 47, 55, 33, 11, 33, 13, 47, 66, 49, \
128, 133, 128, 140, 138, 120, 144, 140, 118, 138, \
132, 107, 115, 105, 77, 147, 127, 92, 177, 153, \
117, 190, 169, 134, 139, 120, 87, 80, 63, 33, \
72, 61, 36, 69, 61, 35, 89, 81, 52, 125, \
117, 84, 165, 157, 122, 189, 177, 141, 171, 157, \
119, 144, 127, 88, 145, 126, 83, 135, 115, 74, \
110, 90, 57, 115, 95, 62, 127, 107, 71, 139, \
118, 79, 131, 110, 73, 90, 70, 46, 98, 81, \
51, 167, 156, 120, 124, 117, 86, 49, 51, 27, \
15, 30, 10, 59, 73, 61, 100, 103, 104, 129, \
130, 109, 132, 130, 111, 81, 77, 60, 76, 68, \
53, 123, 108, 86, 112, 94, 69, 92, 74, 49, \
79, 59, 33, 82, 64, 37, 78, 67, 44, 71, \
63, 37, 109, 101, 69, 149, 143, 106, 174, 168, \
127, 180, 170, 130, 164, 153, 113, 136, 124, 83, \
134, 120, 78, 143, 129, 86, 114, 100, 61, 100, \
85, 47, 114, 98, 59, 123, 106, 65, 129, 111, \
74, 113, 96, 67, 102, 80, 48, 132, 110, 74, \
155, 138, 106, 118, 111, 83, 51, 54, 32, 38, \
45, 34, 66, 68, 69, 118, 125, 100, 87, 90, \
74, 29, 28, 20, 31, 26, 22, 50, 43, 35, \
41, 31, 20, 65, 50, 35, 87, 68, 48, 89, \
67, 45, 79, 64, 42, 66, 55, 29, 115, 104, \
71, 172, 163, 122, 198, 189, 145, 179, 168, 124, \
163, 152, 109, 144, 134, 92, 139, 131, 90, 144, \
137, 96, 119, 108, 63, 112, 100, 56, 117, 106, \
64, 134, 124, 82, 130, 120, 82, 110, 99, 65, \
126, 106, 70, 148, 122, 85, 157, 134, 102, 163, \
147, 118, 141, 132, 106, 76, 75, 62, 44, 46, \
45, 95, 109, 80, 65, 74, 52, 76, 75, 54, \
83, 72, 51, 45, 35, 22, 48, 40, 28, 65, \
56, 39, 72, 60, 39, 75, 61, 36, 76, 63, \
43, 60, 49, 30, 103, 94, 70, 167, 161, 127, \
191, 185, 143, 185, 172, 130, 166, 152, 113, 138, \
127, 90, 134, 125, 90, 131, 123, 87, 107, 94, \
52, 99, 85, 43, 99, 86, 45, 122, 109, 70, \
106, 95, 57, 109, 100, 60, 161, 143, 102, 184, \
158, 121, 182, 157, 130, 166, 143, 120, 177, 156, \
128, 121, 113, 91, 65, 65, 54, 48, 68, 37, \
71, 85, 56, 112, 110, 74, 152, 134, 92, 129, \
110, 83, 42, 28, 12, 41, 33, 12, 57, 52, \
28, 59, 55, 29, 51, 44, 26, 33, 25, 13, \
39, 32, 18, 83, 78, 53, 137, 132, 96, 175, \
158, 121, 154, 135, 99, 118, 101, 68, 104, 91, \
59, 100, 86, 55, 94, 77, 44, 101, 84, 51, \
112, 96, 62, 137, 120, 86, 91, 77, 45, 79, \
70, 42, 124, 108, 77, 142, 119, 83, 144, 123, \
89, 122, 100, 70, 143, 121, 90, 156, 150, 121, \
180, 182, 162, 83, 113, 80, 76, 94, 64, 79, \
78, 45, 105, 87, 52, 157, 137, 100, 120, 103, \
72, 52, 41, 16, 40, 34, 15, 33, 33, 18, \
30, 30, 11, 35, 31, 14, 42, 34, 18, 62, \
51, 26, 91, 76, 41, 121, 99, 60, 123, 101, \
62, 104, 84, 48, 98, 81, 46, 105, 89, 57, \
107, 91, 65, 109, 94, 68, 111, 96, 71, 120, \
104, 78, 67, 54, 36, 31, 25, 23, 42, 29, \
17, 102, 80, 47, 151, 130, 83, 154, 137, 92, \
143, 134, 103, 124, 130, 101, 124, 138, 114, 110, \
144, 111, 83, 100, 70, 73, 71, 43, 71, 57, \
29, 128, 109, 70, 162, 141, 102, 110, 92, 62, \
45, 37, 20, 30, 31, 22, 51, 54, 34, 80, \
79, 59, 100, 90, 72, 117, 100, 75, 136, 115, \
80, 151, 126, 87, 149, 125, 86, 133, 112, 75, \
124, 105, 70, 115, 98, 67, 86, 73, 52, 65, \
53, 34, 58, 46, 28, 73, 60, 40, 50, 41, \
26, 27, 27, 22, 74, 66, 51, 138, 120, 91, \
149, 129, 94, 123, 110, 77, 75, 79, 52, 60, \
76, 50, 56, 77, 53, 110, 138, 107, 68, 80, \
53, 53, 51, 29, 51, 42, 23, 84, 70, 40, \
139, 118, 80, 154, 131, 96, 96, 83, 61, 27, \
25, 15, 36, 35, 16, 65, 60, 39, 91, 79, \
60, 111, 93, 66, 129, 108, 72, 138, 116, 78, \
135, 114, 77, 124, 105, 71, 98, 82, 49, 73, \
60, 30, 53, 45, 25, 36, 29, 13, 37, 29, \
14, 60, 52, 34, 61, 56, 38, 72, 76, 53, \
110, 106, 82, 116, 102, 81, 81, 65, 54, 48, \
40, 32, 21, 28, 11, 38, 53, 33, 47, 66, \
44, 152, 166, 142, 97, 99, 76, 45, 42, 24, \
39, 37, 26, 51, 45, 28, 99, 81, 51, 147, \
120, 82, 151, 130, 97, 87, 78, 56, 44, 35, \
17, 41, 29, 11, 64, 49, 29, 82, 67, 37, \
88, 72, 33, 92, 76, 41, 89, 75, 43, 82, \
69, 39, 73, 64, 35, 56, 49, 22, 47, 43, \
22, 37, 34, 15, 66, 62, 43, 92, 89, 68, \
83, 81, 60, 79, 78, 57, 70, 63, 43, 55, \
45, 31, 27, 21, 18, 21, 21, 21, 29, 32, \
24, 71, 77, 64, 101, 110, 92, 151, 154, 135, \
141, 136, 115, 54, 49, 33, 31, 34, 25, 35, \
37, 29, 61, 47, 26, 121, 94, 56, 170, 145, \
102, 175, 158, 121, 133, 115, 89, 80, 61, 40, \
58, 41, 18, 77, 64, 31, 87, 77, 38, 96, \
86, 53, 95, 85, 57, 78, 69, 43, 71, 66, \
41, 56, 53, 30, 41, 41, 19, 42, 42, 20, \
87, 87, 66, 86, 86, 64, 59, 58, 40, 46, \
38, 35, 53, 43, 35, 67, 60, 47, 54, 58, \
46, 54, 61, 55, 50, 48, 46, 113, 109, 103, \
180, 179, 165, 142, 143, 127, 151, 149, 130, 95, \
92, 73, 35, 34, 19, 22, 26, 17, 35, 32, \
21, 79, 64, 40, 139, 118, 80, 173, 151, 103, \
171, 145, 105, 151, 122, 86, 109, 82, 46, 83, \
64, 30, 85, 74, 42, 86, 80, 44, 92, 80, \
47, 89, 74, 47, 79, 70, 44, 70, 70, 46, \
61, 64, 48, 48, 50, 37, 54, 55, 42, 63, \
68, 50, 48, 54, 40, 22, 20, 22, 61, 59, \
51, 84, 84, 68, 67, 68, 64, 46, 49, 54, \
49, 50, 49, 117, 108, 106, 168, 161, 155, 134, \
136, 121, 139, 140, 122, 141, 138, 119, 75, 72, \
54, 15, 18, 10, 19, 20, 16, 45, 36, 24, \
93, 77, 47, 152, 131, 86, 182, 154, 112, 172, \
139, 96, 172, 139, 95, 135, 109, 72, 88, 72, \
41, 81, 75, 42, 89, 78, 48, 95, 81, 56, \
89, 82, 58, 83, 86, 63, 55, 63, 44, 33, \
36, 21, 39, 40, 25, 59, 65, 47, 57, 67, \
49, 18, 20, 14, 72, 73, 66, 87, 88, 81, \
69, 69, 70, 43, 44, 47, 74, 76, 72, 115, \
107, 105, 130, 124, 121, 133, 135, 122, 118, 118, \
102, 144, 141, 123, 107, 103, 86, 11, 12, 8, \
10, 10, 10, 28, 21, 15, 59, 49, 28, 107, \
93, 59, 172, 148, 110, 186, 154, 112, 176, 142, \
98, 187, 157, 116, 116, 95, 61, 75, 69, 43, \
77, 72, 49, 80, 76, 54, 70, 72, 51, 53, \
63, 39, 27, 41, 15, 50, 55, 29, 81, 80, \
55, 65, 70, 47, 79, 90, 67, 64, 68, 50, \
61, 61, 57, 46, 45, 50, 51, 51, 49, 54, \
56, 46, 76, 78, 70, 90, 84, 81, 114, 109, \
107, 136, 138, 127, 111, 111, 98, 124, 120, 105, \
84, 79, 64, 11, 11, 8, 10, 10, 13, 16, \
13, 13, 33, 30, 18, 64, 60, 35, 128, 112, \
82, 198, 174, 137, 163, 131, 89, 192, 160, 118, \
153, 129, 93, 67, 61, 41, 54, 55, 38, 48, \
56, 35, 44, 58, 35, 41, 61, 35, 38, 59, \
28, 95, 102, 68, 151, 147, 115, 94, 97, 71, \
57, 68, 44, 107, 113, 86, 53, 54, 48, 5, \
4, 11, 30, 31, 25, 85, 88, 70, 71, 72, \
62, 76, 71, 66, 113, 109, 106, 48, 49, 41, \
55, 54, 43, 86, 82, 69, 100, 95, 82, 44, \
42, 36, 5, 5, 5, 8, 9, 8, 15, 19, \
10, 36, 41, 23, 69, 65, 43, 153, 137, 108, \
169, 143, 106, 189, 160, 120, 177, 153, 118, 62, \
58, 39, 25, 35, 16, 25, 46, 21, 65, 92, \
61, 80, 109, 77, 82, 109, 73, 105, 113, 75, \
140, 132, 98, 91, 89, 67, 88, 98, 80, 98, \
103, 78, 73, 75, 61, 0, 0, 0, 45, 47, \
36, 102, 105, 88, 98, 99, 89, 86, 84, 75, \
87, 85, 74, 44, 45, 38, 67, 66, 57, 109, \
105, 94, 105, 100, 87, 73, 70, 60, 12, 12, \
8, 7, 11, 7, 7, 17, 7, 14, 29, 11, \
36, 44, 30, 76, 70, 49, 134, 116, 85, 177, \
152, 116, 182, 160, 127, 71, 69, 50, 31, 48, \
24, 38, 70, 37, 58, 94, 55, 60, 97, 57, \
60, 92, 57, 84, 92, 55, 118, 107, 75, 71, \
66, 51, 126, 134, 127, 105, 109, 91, 106, 110, \
85, 30, 34, 12, 59, 62, 47, 119, 120, 111, \
124, 122, 115, 103, 103, 90, 108, 109, 87, 86, \
84, 72, 99, 95, 80, 100, 93, 79, 96, 87, \
75, 99, 93, 81, 53, 49, 41, 14, 13, 7, \
26, 30, 20, 36, 45, 30, 27, 36, 23, 35, \
36, 20, 76, 65, 42, 126, 109, 80, 156, 142, \
111, 132, 132, 115, 78, 94, 72, 44, 79, 42, \
47, 91, 43, 46, 92, 43, 49, 84, 50, 87, \
95, 61, 118, 104, 75, 70, 59, 48, 124, 124, \
125, 124, 127, 116, 121, 126, 98, 91, 97, 63, \
65, 69, 49, 74, 76, 69, 76, 81, 73, 72, \
83, 65, 125, 137, 107, 105, 97, 80, 122, 113, \
90, 108, 97, 78, 100, 87, 77, 118, 108, 99, \
122, 114, 104, 44, 36, 28, 40, 32, 24, 90, \
85, 73, 71, 72, 57, 45, 41, 29, 64, 52, \
40, 105, 91, 69, 133, 121, 94, 131, 130, 117, \
90, 101, 83, 70, 98, 64, 87, 131, 80, 66, \
117, 63, 44, 79, 46, 76, 85, 53, 123, 110, \
79, 103, 87, 74, 117, 110, 109, 108, 114, 102, \
98, 107, 82, 132, 142, 111, 94, 102, 79, 50, \
58, 45, 23, 39, 27, 29, 56, 33, 104, 130, \
97, 109, 99, 80, 143, 133, 110, 142, 131, 111, \
111, 99, 86, 116, 110, 98, 152, 147, 135, 130, \
126, 114, 83, 78, 66, 81, 77, 64, 95, 91, \
76, 105, 97, 86, 89, 73, 65, 116, 94, 77, \
159, 138, 114, 110, 107, 89, 83, 92, 70, 117, \
139, 106, 132, 168, 125, 92, 136, 91, 40, 74, \
44, 60, 72, 39, 151, 144, 109, 175, 165, 141, \
143, 141, 127, 111, 127, 108, 77, 96, 70, 76, \
96, 67, 57, 76, 52, 62, 79, 62, 37, 54, \
41, 19, 49, 25, 86, 120, 86, 98, 85, 68, \
116, 105, 87, 110, 101, 82, 83, 75, 59, 78, \
78, 62, 91, 92, 76, 125, 126, 110, 128, 129, \
113, 76, 77, 61, 37, 39, 22, 66, 67, 54, \
98, 95, 82, 132, 121, 100, 174, 159, 131, 131, \
131, 103, 106, 115, 87, 90, 107, 77, 77, 103, \
70, 84, 116, 83, 54, 86, 57, 63, 81, 47, \
137, 141, 101, 154, 154, 118, 182, 189, 160, 126, \
152, 126, 71, 100, 73, 38, 65, 39, 12, 40, \
17, 51, 74, 56, 41, 58, 44, 24, 53, 30, \
72, 111, 78, 122, 106, 90, 125, 113, 98, 117, \
110, 92, 110, 105, 85, 79, 80, 61, 79, 82, \
63, 84, 86, 68, 86, 88, 69, 74, 77, 58, \
42, 54, 33, 51, 72, 52, 76, 100, 78, 107, \
124, 93, 129, 138, 102, 68, 78, 45, 59, 73, \
41, 69, 86, 56, 89, 109, 81, 90, 115, 87, \
67, 99, 69, 78, 103, 67, 118, 133, 94, 123, \
133, 94, 154, 168, 132, 85, 112, 81, 58, 87, \
62, 27, 53, 34, 26, 51, 34, 55, 79, 62, \
42, 61, 45, 37, 65, 43, 67, 105, 75, 125, \
106, 92, 133, 119, 108, 142, 136, 120, 145, 144, \
120, 137, 135, 114, 129, 127, 107, 123, 121, 101, \
100, 97, 77, 82, 80, 61, 64, 71, 51, 66, \
91, 69, 85, 123, 96, 122, 160, 122, 123, 152, \
109, 55, 77, 43, 36, 57, 25, 65, 87, 55, \
133, 154, 123, 92, 115, 85, 45, 78, 43, 98, \
129, 93, 151, 175, 141, 134, 153, 120, 119, 136, \
103, 102, 122, 91, 103, 123, 103, 58, 76, 65, \
51, 68, 57, 69, 87, 73, 76, 97, 79, 84, \
109, 88, 103, 134, 109, 123, 103, 89, 125, 111, \
102, 144, 140, 124, 162, 163, 137, 170, 164, 143, \
169, 161, 142, 155, 148, 129, 116, 109, 90, 96, \
88, 70, 79, 71, 56, 61, 73, 56, 79, 114, \
88, 116, 155, 118, 130, 164, 121, 64, 94, 60, \
24, 52, 21, 40, 67, 33, 87, 111, 77, 74, \
99, 63, 61, 94, 55, 118, 152, 118, 146, 177, \
148, 113, 138, 112, 118, 137, 110, 153, 165, 136, \
149, 158, 142, 104, 111, 108, 86, 93, 89, 81, \
94, 83, 86, 109, 90, 120, 143, 123, 127, 152, \
130, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '26664';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a8b5be2d2d92ec19c37ced9ce11c07f17';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_ship9';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{100, 126, 161, 98, 124, 155, 101, 128, 156, 107, 133, \
163, 111, 138, 168, 116, 143, 171, 118, 145, 171, \
118, 145, 170, 120, 147, 174, 125, 152, 179, 128, \
155, 182, 129, 155, 182, 125, 150, 178, 119, 149, \
176, 118, 146, 176, 115, 138, 172, 105, 134, 171, \
96, 128, 166, 93, 125, 162, 91, 123, 161, 94, \
123, 158, 88, 117, 151, 80, 111, 149, 76, 108, \
149, 73, 106, 150, 72, 104, 150, 67, 101, 146, \
54, 91, 136, 48, 85, 129, 43, 79, 122, 36, \
75, 119, 28, 73, 117, 104, 131, 168, 102, 128, \
163, 103, 130, 162, 108, 135, 167, 113, 140, 170, \
117, 144, 173, 121, 148, 174, 122, 150, 175, 123, \
150, 177, 126, 153, 180, 127, 154, 181, 127, 154, \
181, 127, 154, 182, 120, 153, 181, 116, 149, 181, \
113, 141, 178, 105, 135, 174, 98, 130, 169, 96, \
128, 166, 100, 132, 170, 121, 152, 181, 114, 145, \
172, 83, 115, 150, 79, 112, 154, 75, 107, 153, \
75, 107, 154, 69, 104, 150, 56, 93, 139, 50, \
88, 133, 45, 83, 128, 37, 79, 125, 29, 76, \
123, 108, 134, 170, 105, 131, 167, 106, 132, 167, \
110, 136, 169, 114, 141, 171, 118, 144, 173, 121, \
149, 174, 125, 152, 177, 125, 152, 179, 127, 154, \
181, 127, 154, 181, 126, 153, 180, 127, 154, 180, \
119, 153, 181, 115, 150, 183, 111, 143, 181, 105, \
136, 175, 100, 132, 170, 97, 129, 167, 97, 129, \
167, 121, 152, 179, 135, 166, 189, 91, 123, 155, \
82, 115, 156, 77, 110, 156, 75, 107, 154, 69, \
104, 150, 58, 95, 140, 52, 90, 134, 47, 84, \
130, 40, 82, 128, 32, 79, 126, 109, 136, 166, \
108, 134, 166, 110, 136, 170, 114, 140, 173, 117, \
144, 174, 120, 147, 175, 121, 149, 174, 124, 152, \
177, 126, 153, 180, 127, 154, 181, 127, 154, 181, \
129, 155, 181, 131, 154, 176, 125, 156, 181, 116, \
151, 181, 113, 145, 182, 107, 139, 177, 103, 135, \
172, 98, 130, 168, 95, 127, 165, 99, 130, 158, \
101, 132, 158, 91, 123, 157, 85, 119, 160, 80, \
113, 158, 73, 105, 152, 67, 101, 147, 58, 96, \
141, 53, 91, 135, 54, 88, 132, 45, 83, 127, \
36, 80, 125, 117, 145, 169, 112, 139, 166, 113, \
140, 170, 113, 139, 171, 118, 145, 175, 122, 149, \
178, 123, 151, 176, 124, 151, 177, 127, 154, 181, \
129, 156, 183, 128, 155, 182, 134, 158, 183, 145, \
164, 181, 127, 155, 174, 118, 152, 178, 115, 146, \
180, 110, 142, 179, 106, 138, 176, 100, 132, 170, \
96, 128, 166, 98, 128, 163, 92, 122, 157, 90, \
121, 159, 86, 119, 160, 80, 113, 158, 74, 106, \
153, 68, 102, 148, 61, 99, 144, 58, 94, 138, \
72, 102, 142, 55, 88, 129, 45, 83, 125, 150, \
176, 187, 129, 156, 173, 119, 146, 169, 121, 150, \
178, 119, 149, 177, 123, 152, 178, 125, 154, 179, \
127, 155, 179, 129, 157, 181, 129, 157, 183, 128, \
156, 183, 142, 164, 187, 152, 166, 176, 125, 147, \
163, 125, 155, 180, 120, 149, 182, 113, 145, 180, \
108, 141, 177, 102, 135, 172, 98, 131, 169, 99, \
129, 168, 97, 126, 166, 91, 122, 163, 88, 121, \
162, 83, 116, 160, 75, 110, 155, 71, 105, 150, \
65, 100, 145, 66, 98, 141, 80, 104, 142, 65, \
95, 136, 52, 89, 132, 190, 208, 201, 165, 188, \
191, 137, 164, 175, 131, 161, 179, 127, 159, 180, \
125, 156, 178, 125, 155, 178, 130, 158, 180, 132, \
160, 181, 130, 161, 186, 128, 156, 183, 147, 166, \
184, 154, 162, 164, 133, 151, 164, 131, 157, 183, \
125, 152, 186, 116, 147, 180, 109, 143, 175, 105, \
137, 173, 102, 134, 172, 100, 132, 170, 96, 128, \
167, 95, 126, 167, 93, 125, 168, 89, 123, 165, \
82, 116, 157, 84, 115, 154, 87, 113, 152, 75, \
96, 133, 84, 102, 136, 73, 102, 145, 53, 91, \
138, 204, 217, 202, 197, 215, 206, 180, 202, 200, \
153, 178, 183, 139, 165, 177, 139, 167, 183, 135, \
165, 185, 132, 161, 183, 134, 162, 185, 133, 165, \
191, 130, 161, 186, 143, 164, 179, 146, 154, 155, \
128, 145, 158, 134, 161, 188, 128, 156, 189, 119, \
151, 182, 113, 146, 177, 109, 142, 177, 105, 137, \
175, 102, 134, 171, 99, 132, 169, 98, 130, 169, \
98, 130, 171, 102, 132, 172, 112, 140, 174, 126, \
149, 181, 143, 162, 189, 49, 64, 88, 59, 78, \
105, 78, 108, 146, 54, 92, 138, 210, 219, 199, \
203, 216, 198, 204, 220, 203, 203, 219, 211, 171, \
187, 189, 154, 176, 184, 152, 179, 194, 144, 171, \
191, 139, 166, 190, 132, 165, 190, 132, 165, 188, \
150, 174, 188, 138, 147, 151, 121, 140, 156, 132, \
160, 187, 128, 158, 190, 125, 157, 189, 121, 154, \
185, 114, 147, 182, 110, 142, 180, 104, 137, 172, \
102, 135, 170, 102, 134, 173, 101, 133, 173, 105, \
135, 174, 117, 144, 178, 128, 152, 180, 138, 159, \
180, 33, 51, 67, 64, 89, 108, 87, 118, 148, \
59, 94, 137, 221, 228, 206, 209, 218, 196, 208, \
219, 195, 216, 224, 208, 213, 223, 214, 188, 203, \
201, 171, 191, 197, 171, 191, 202, 154, 176, 192, \
137, 167, 187, 137, 169, 189, 147, 171, 186, 123, \
133, 141, 134, 154, 173, 132, 162, 189, 126, 158, \
188, 123, 156, 187, 122, 155, 186, 120, 153, 188, \
117, 149, 187, 111, 144, 178, 107, 140, 174, 106, \
138, 175, 101, 133, 172, 97, 130, 171, 93, 128, \
168, 91, 125, 160, 90, 122, 151, 76, 107, 131, \
113, 142, 164, 101, 131, 159, 64, 97, 137, 213, \
221, 200, 205, 213, 194, 212, 220, 202, 217, 222, \
204, 223, 228, 212, 221, 230, 219, 209, 220, 214, \
191, 203, 201, 172, 189, 192, 145, 170, 182, 134, \
162, 181, 152, 173, 191, 155, 166, 177, 144, 165, \
185, 134, 165, 193, 127, 161, 189, 123, 156, 187, \
122, 155, 186, 119, 152, 187, 118, 150, 188, 117, \
150, 183, 117, 150, 182, 112, 145, 180, 108, 140, \
177, 100, 134, 174, 91, 128, 169, 87, 123, 164, \
84, 121, 160, 84, 120, 157, 91, 123, 155, 101, \
129, 162, 71, 101, 140, 205, 215, 196, 199, 207, \
193, 204, 210, 200, 212, 217, 201, 218, 222, 202, \
226, 230, 213, 229, 232, 218, 220, 224, 210, 204, \
216, 206, 161, 180, 186, 129, 151, 170, 147, 164, \
185, 153, 165, 178, 133, 155, 176, 138, 170, 197, \
131, 165, 193, 127, 160, 190, 122, 155, 187, 121, \
153, 188, 120, 152, 189, 119, 153, 184, 120, 153, \
184, 116, 149, 182, 113, 146, 182, 112, 143, 180, \
108, 139, 174, 101, 132, 170, 93, 125, 166, 86, \
118, 161, 79, 111, 153, 104, 130, 169, 80, 108, \
148, 205, 213, 197, 196, 203, 191, 201, 207, 197, \
209, 213, 197, 214, 216, 199, 225, 226, 211, 234, \
235, 215, 231, 233, 210, 224, 232, 216, 189, 204, \
205, 151, 167, 182, 147, 160, 179, 137, 151, 168, \
126, 147, 168, 133, 161, 185, 133, 163, 189, 132, \
162, 191, 128, 161, 190, 129, 161, 189, 126, 154, \
182, 123, 158, 185, 118, 158, 186, 118, 154, 186, \
114, 148, 184, 109, 140, 173, 102, 131, 158, 97, \
125, 155, 103, 130, 163, 112, 138, 173, 87, 112, \
147, 90, 110, 147, 85, 110, 152, 205, 211, 197, \
197, 203, 189, 201, 207, 193, 211, 215, 199, 207, \
208, 196, 205, 206, 197, 225, 227, 209, 227, 230, \
207, 223, 228, 215, 164, 177, 178, 136, 150, 162, \
159, 171, 187, 153, 170, 186, 147, 166, 183, 136, \
158, 177, 127, 150, 172, 128, 154, 178, 138, 168, \
188, 166, 196, 211, 171, 195, 207, 136, 166, 184, \
123, 159, 183, 115, 147, 174, 97, 125, 156, 74, \
100, 129, 54, 81, 104, 43, 68, 91, 68, 89, \
114, 111, 130, 154, 52, 66, 92, 14, 27, 61, \
52, 75, 118, 203, 209, 195, 200, 206, 192, 202, \
208, 194, 211, 214, 200, 189, 191, 181, 148, 149, \
145, 171, 172, 166, 197, 199, 190, 193, 197, 194, \
105, 116, 123, 78, 92, 105, 119, 131, 144, 144, \
158, 167, 151, 166, 177, 145, 163, 175, 145, 163, \
178, 131, 152, 169, 128, 152, 166, 161, 186, 194, \
182, 199, 204, 130, 148, 160, 99, 119, 137, 81, \
99, 120, 71, 85, 110, 59, 76, 101, 44, 65, \
88, 33, 51, 75, 31, 46, 71, 29, 42, 68, \
17, 23, 53, 4, 14, 49, 43, 66, 108, 203, \
209, 195, 196, 202, 188, 200, 206, 192, 208, 212, \
202, 191, 194, 189, 144, 146, 146, 142, 144, 147, \
151, 152, 155, 175, 178, 181, 124, 135, 145, 104, \
118, 131, 103, 115, 126, 115, 125, 131, 111, 123, \
129, 97, 110, 119, 127, 142, 154, 126, 141, 160, \
108, 126, 144, 107, 125, 138, 105, 116, 126, 97, \
109, 125, 88, 103, 124, 75, 88, 112, 67, 79, \
105, 55, 71, 100, 37, 60, 90, 27, 47, 78, \
21, 39, 71, 12, 25, 57, 13, 15, 49, 28, \
38, 75, 76, 102, 143, 197, 204, 189, 195, 201, \
186, 202, 208, 194, 195, 200, 194, 138, 142, 142, \
141, 145, 146, 134, 137, 144, 149, 150, 156, 197, \
200, 202, 151, 162, 171, 155, 168, 181, 157, 168, \
180, 150, 159, 167, 118, 128, 137, 75, 87, 97, \
87, 101, 115, 95, 106, 132, 88, 102, 128, 83, \
97, 118, 85, 93, 111, 84, 94, 116, 81, 97, \
122, 71, 88, 115, 58, 75, 105, 45, 67, 99, \
31, 57, 92, 20, 44, 80, 12, 34, 70, 23, \
39, 75, 25, 31, 66, 65, 82, 118, 98, 128, \
166, 195, 201, 187, 194, 200, 186, 206, 212, 198, \
157, 162, 162, 90, 95, 99, 146, 151, 150, 128, \
133, 137, 160, 163, 161, 220, 225, 217, 164, 176, \
180, 156, 170, 183, 159, 170, 185, 130, 139, 153, \
100, 112, 127, 85, 99, 116, 79, 94, 114, 78, \
91, 116, 77, 93, 116, 76, 92, 109, 85, 94, \
109, 89, 98, 117, 82, 95, 117, 71, 86, 110, \
55, 73, 99, 40, 60, 87, 28, 48, 75, 17, \
34, 62, 10, 25, 54, 26, 38, 69, 50, 65, \
98, 97, 125, 158, 100, 135, 171, 203, 209, 194, \
199, 205, 190, 207, 213, 199, 144, 148, 152, 96, \
101, 107, 156, 162, 158, 129, 135, 136, 157, 161, \
158, 211, 217, 206, 152, 165, 167, 92, 105, 118, \
97, 107, 126, 90, 100, 122, 83, 95, 117, 75, \
90, 114, 80, 95, 119, 86, 99, 116, 87, 103, \
113, 96, 113, 118, 120, 131, 134, 148, 153, 161, \
90, 94, 107, 54, 61, 74, 37, 48, 63, 24, \
35, 50, 18, 26, 40, 12, 17, 34, 15, 17, \
33, 14, 18, 37, 83, 107, 137, 116, 151, 182, \
105, 141, 175, 197, 206, 185, 199, 205, 188, 206, \
210, 197, 159, 160, 163, 137, 141, 144, 176, 184, \
180, 131, 139, 148, 130, 137, 154, 140, 147, 160, \
103, 111, 130, 82, 91, 114, 82, 90, 115, 93, \
100, 126, 97, 105, 129, 88, 97, 118, 85, 93, \
111, 104, 109, 115, 102, 107, 107, 97, 102, 101, \
83, 86, 85, 66, 67, 68, 31, 32, 34, 19, \
20, 24, 17, 19, 23, 15, 18, 24, 17, 21, \
34, 18, 22, 39, 11, 16, 29, 38, 49, 59, \
121, 151, 176, 124, 159, 187, 114, 149, 180, 197, \
206, 192, 192, 197, 188, 167, 169, 164, 146, 150, \
148, 176, 183, 182, 166, 175, 179, 120, 130, 144, \
103, 112, 134, 95, 103, 125, 91, 99, 119, 87, \
95, 113, 103, 110, 127, 102, 106, 119, 72, 77, \
88, 55, 60, 70, 45, 49, 57, 48, 49, 52, \
33, 32, 33, 23, 22, 24, 20, 20, 21, 19, \
19, 19, 18, 18, 18, 19, 19, 19, 19, 19, \
19, 18, 18, 20, 18, 19, 29, 18, 23, 39, \
13, 24, 36, 94, 114, 122, 140, 174, 195, 128, \
162, 187, 122, 156, 183, 187, 197, 190, 183, 189, \
185, 147, 150, 149, 166, 174, 164, 172, 183, 181, \
132, 142, 156, 104, 115, 130, 95, 105, 119, 89, \
94, 112, 69, 75, 88, 49, 56, 63, 59, 66, \
68, 51, 53, 51, 26, 27, 27, 19, 20, 23, \
20, 20, 26, 24, 23, 28, 22, 21, 27, 25, \
24, 30, 31, 30, 36, 29, 28, 31, 21, 22, \
21, 19, 19, 19, 19, 19, 19, 20, 18, 19, \
20, 17, 21, 10, 17, 26, 47, 63, 73, 147, \
174, 183, 146, 180, 195, 136, 171, 189, 131, 164, \
185, 173, 184, 176, 166, 175, 167, 154, 160, 153, \
179, 189, 176, 168, 180, 180, 105, 114, 133, 66, \
76, 90, 46, 53, 62, 32, 35, 47, 21, 25, \
30, 17, 22, 19, 13, 18, 12, 16, 15, 13, \
19, 17, 19, 25, 22, 30, 35, 32, 43, 31, \
30, 38, 24, 23, 31, 22, 21, 28, 26, 25, \
33, 24, 23, 26, 20, 20, 20, 19, 19, 19, \
19, 19, 19, 22, 19, 19, 21, 16, 17, 18, \
26, 28, 114, 137, 142, 167, 200, 206, 150, 184, \
193, 144, 177, 189, 139, 172, 186, 167, 180, 174, \
150, 160, 154, 143, 151, 143, 188, 197, 192, 111, \
120, 126, 33, 39, 53, 15, 19, 29, 14, 16, \
22, 14, 14, 20, 16, 17, 18, 19, 21, 16, \
22, 23, 18, 22, 20, 26, 20, 17, 26, 19, \
16, 28, 21, 17, 30, 17, 16, 23, 17, 17, \
22, 18, 17, 23, 18, 18, 23, 18, 18, 20, \
18, 18, 18, 19, 19, 19, 19, 19, 19, 22, \
19, 20, 17, 14, 15, 56, 66, 62, 173, 200, \
197, 168, 202, 203, 158, 190, 194, 150, 181, 187, \
145, 175, 184, 135, 146, 158, 127, 135, 144, 129, \
135, 142, 115, 120, 135, 32, 36, 51, 13, 15, \
20, 18, 17, 21, 20, 17, 22, 20, 19, 20, \
20, 19, 19, 20, 19, 17, 19, 18, 18, 18, \
18, 24, 18, 18, 24, 17, 18, 22, 17, 18, \
20, 18, 18, 19, 18, 18, 18, 19, 19, 19, \
19, 19, 20, 18, 18, 19, 18, 18, 18, 18, \
18, 19, 19, 19, 19, 20, 19, 21, 17, 18, \
20, 111, 124, 116, 191, 218, 208, 168, 201, 197, \
163, 195, 193, 156, 187, 188, 148, 179, 182, 104, \
116, 138, 88, 98, 118, 67, 75, 95, 53, 57, \
85, 19, 19, 40, 19, 18, 21, 21, 19, 19, \
20, 17, 19, 19, 18, 17, 19, 18, 18, 20, \
18, 19, 19, 19, 20, 18, 20, 21, 17, 20, \
19, 17, 20, 17, 18, 21, 16, 19, 20, 18, \
19, 19, 18, 19, 19, 18, 19, 19, 18, 19, \
19, 18, 18, 18, 18, 19, 19, 19, 20, 20, \
20, 16, 16, 17, 34, 39, 39, 159, 175, 168, \
188, 216, 201, 170, 201, 192, 165, 195, 193, 157, \
187, 186, 151, 181, 182, 79, 94, 112, 61, 75, \
96, 43, 57, 80, 35, 43, 70, 17, 17, 38, \
19, 17, 23, 19, 19, 18, 18, 19, 18, 18, \
18, 18, 18, 18, 18, 19, 19, 19, 19, 19, \
19, 19, 19, 19, 19, 19, 19, 19, 19, 18, \
19, 19, 18, 19, 19, 19, 19, 19, 19, 19, \
19, 19, 19, 19, 19, 19, 19, 19, 19, 19, \
19, 19, 19, 19, 20, 20, 20, 14, 14, 11, \
72, 77, 77, 191, 208, 207, 186, 214, 198, 177, \
204, 194, 168, 194, 194, 159, 186, 186, 154, 180, \
181, 80, 96, 113, 45, 60, 81, 39, 54, 77, \
41, 51, 71, 28, 30, 43, 19, 17, 21, 19, \
19, 19, 17, 19, 19, 18, 18, 18, 18, 18, \
18, 19, 19, 19, 19, 19, 19, 19, 19, 19, \
19, 19, 19, 19, 19, 19, 19, 19, 19, 19, \
19, 19, 19, 19, 19, 19, 19, 19, 19, 19, \
19, 19, 19, 19, 19, 19, 19, 19, 19, 19, \
20, 20, 21, 15, 15, 13, 110, 113, 119, 200, \
215, 223, 184, 208, 200, 178, 201, 199, 167, 191, \
196, 160, 185, 189, 155, 180, 184, 74, 90, 107, \
41, 56, 76, 32, 47, 70, 18, 29, 44, 16, \
19, 25, 19, 18, 18, 19, 19, 19, 17, 19, \
20, 18, 18, 18, 18, 18, 18, 19, 19, 19, \
19, 19, 19, 19, 19, 19, 19, 19, 19, 19, \
19, 19, 19, 19, 19, 19, 19, 19, 19, 19, \
19, 19, 19, 19, 19, 19, 19, 19, 19, 19, \
19, 19, 19, 19, 19, 19, 20, 20, 20, 16, \
19, 22, 69, 79, 98, 101, 121, 144, 91, 118, \
128, 93, 116, 134, 95, 115, 136, 92, 113, 133, \
91, 111, 132, 67, 82, 100, 59, 74, 95, 54, \
69, 92, 28, 39, 54, 17, 20, 25, 19, 17, \
18, 18, 18, 18, 17, 19, 20, 19, 19, 19, \
19, 19, 19, 19, 19, 19, 19, 19, 19, 19, \
19, 19, 19, 19, 19, 18, 18, 18, 18, 18, \
18, 19, 19, 19, 19, 19, 19, 19, 19, 19, \
19, 19, 19, 19, 19, 19, 19, 19, 19, 19, \
19, 19, 21, 21, 20, 14, 21, 29, 22, 43, \
74, 25, 53, 91, 18, 50, 79, 20, 46, 84, \
26, 42, 82, 22, 37, 77, 19, 34, 75, 72, \
88, 105, 56, 71, 91, 59, 74, 97, 35, 45, \
65, 21, 23, 35, 19, 17, 21, 18, 18, 17, \
17, 19, 19, 19, 19, 19, 19, 19, 19, 19, \
19, 19, 19, 19, 19, 19, 19, 19, 19, 19, \
19, 18, 18, 18, 18, 18, 18, 19, 19, 19, \
19, 19, 19, 19, 19, 19, 19, 19, 19, 19, \
19, 19, 19, 19, 19, 19, 19, 19, 20, 19, \
19, 15, 22, 29, 19, 37, 69, 20, 44, 84, \
11, 37, 71, 17, 37, 80, 20, 33, 78, 16, \
29, 73, 12, 25, 69, 62, 77, 95, 46, 61, \
81, 50, 65, 88, 35, 44, 69, 22, 23, 42, \
19, 16, 24, 18, 18, 18, 17, 19, 18, 19, \
19, 19, 19, 19, 19, 19, 19, 19, 19, 19, \
19, 19, 19, 19, 19, 19, 19, 18, 18, 18, \
18, 18, 18, 19, 19, 19, 19, 19, 19, 19, \
19, 19, 19, 19, 19, 19, 19, 19, 19, 19, \
19, 19, 19, 19, 19, 18, 18, 18, 20, 23, \
19, 26, 48, 13, 25, 57, 10, 23, 49, 16, \
25, 61, 16, 29, 66, 14, 28, 63, 12, 26, \
61, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '26974';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a15fa0f2545cbc14051ffb9a06db0761b';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_ship2';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{81, 62, 35, 87, 67, 35, 84, 69, 46, 92, 68, \
45, 92, 73, 45, 92, 74, 46, 94, 76, 48, \
95, 77, 49, 99, 76, 44, 103, 76, 38, 106, \
79, 41, 110, 83, 43, 116, 87, 48, 117, 92, \
59, 68, 71, 69, 52, 65, 80, 59, 66, 81, \
54, 67, 85, 51, 64, 82, 45, 58, 75, 39, \
51, 68, 35, 45, 62, 34, 39, 54, 34, 35, \
48, 31, 35, 45, 31, 40, 47, 38, 50, 54, \
56, 60, 60, 49, 52, 55, 31, 38, 44, 24, \
27, 30, 26, 23, 21, 190, 157, 105, 211, 180, \
121, 208, 178, 128, 214, 178, 126, 214, 180, 124, \
213, 180, 124, 216, 185, 129, 217, 189, 134, 221, \
179, 108, 224, 169, 83, 226, 171, 85, 227, 172, \
86, 231, 177, 90, 207, 176, 95, 98, 101, 73, \
65, 77, 92, 74, 82, 101, 70, 85, 100, 72, \
84, 100, 69, 79, 96, 61, 72, 90, 54, 64, \
82, 45, 58, 76, 41, 53, 71, 42, 53, 68, \
54, 63, 75, 86, 93, 102, 119, 121, 123, 107, \
111, 114, 82, 91, 98, 41, 47, 51, 24, 25, \
25, 222, 189, 128, 247, 214, 145, 241, 211, 149, \
248, 213, 148, 247, 213, 145, 245, 212, 144, 246, \
215, 147, 247, 218, 151, 248, 208, 129, 248, 198, \
106, 248, 198, 106, 246, 195, 104, 247, 198, 106, \
227, 195, 114, 115, 114, 95, 79, 86, 115, 88, \
95, 115, 85, 101, 106, 90, 97, 111, 88, 94, \
112, 82, 91, 109, 74, 84, 104, 62, 79, 100, \
52, 74, 96, 56, 72, 91, 83, 92, 108, 146, \
150, 162, 180, 179, 182, 171, 174, 177, 141, 151, \
159, 63, 73, 80, 23, 27, 31, 221, 195, 143, \
229, 203, 142, 231, 209, 152, 248, 220, 159, 247, \
222, 158, 246, 222, 159, 247, 223, 160, 247, 223, \
161, 248, 222, 159, 248, 222, 158, 249, 222, 159, \
241, 213, 150, 239, 211, 147, 234, 207, 159, 130, \
125, 132, 92, 95, 135, 102, 104, 124, 99, 109, \
110, 104, 106, 118, 103, 105, 123, 97, 104, 124, \
91, 102, 125, 81, 99, 124, 72, 94, 120, 75, \
91, 112, 124, 131, 147, 198, 199, 211, 219, 217, \
219, 206, 209, 212, 160, 172, 181, 68, 82, 92, \
23, 31, 38, 224, 203, 165, 236, 215, 165, 238, \
221, 173, 251, 227, 174, 249, 228, 174, 249, 229, \
175, 250, 230, 177, 251, 231, 177, 247, 230, 180, \
244, 230, 183, 245, 230, 183, 239, 223, 177, 237, \
221, 174, 235, 215, 184, 137, 135, 148, 102, 106, \
138, 114, 109, 129, 113, 112, 123, 116, 113, 126, \
115, 115, 131, 111, 117, 137, 105, 116, 140, 98, \
113, 141, 95, 110, 138, 102, 112, 134, 162, 167, \
181, 221, 221, 228, 237, 234, 234, 211, 214, 217, \
156, 169, 179, 70, 87, 99, 26, 38, 48, 221, \
195, 164, 236, 210, 166, 244, 223, 180, 253, 227, \
179, 251, 227, 179, 252, 227, 179, 253, 228, 180, \
253, 229, 181, 250, 230, 180, 249, 232, 179, 249, \
233, 180, 236, 220, 167, 232, 214, 162, 230, 215, \
174, 143, 149, 141, 112, 117, 130, 126, 114, 135, \
127, 115, 142, 129, 122, 138, 130, 128, 145, 125, \
129, 152, 118, 129, 155, 115, 125, 155, 117, 123, \
153, 133, 137, 159, 185, 188, 199, 221, 222, 225, \
238, 235, 233, 210, 213, 216, 148, 163, 175, 72, \
91, 106, 37, 51, 64, 224, 200, 167, 243, 211, \
166, 247, 220, 177, 250, 226, 185, 248, 226, 179, \
253, 226, 175, 253, 226, 173, 249, 226, 178, 249, \
226, 172, 253, 228, 166, 251, 228, 171, 241, 221, \
166, 238, 218, 164, 230, 220, 173, 156, 157, 137, \
125, 123, 129, 135, 124, 140, 141, 131, 150, 145, \
142, 164, 142, 143, 172, 134, 139, 171, 133, 143, \
171, 138, 141, 169, 146, 140, 171, 163, 161, 186, \
190, 193, 210, 211, 218, 228, 228, 227, 232, 197, \
206, 215, 127, 154, 172, 66, 97, 122, 48, 68, \
95, 220, 201, 168, 246, 217, 167, 238, 215, 163, \
233, 219, 171, 245, 228, 178, 253, 228, 173, 254, \
228, 171, 250, 230, 179, 250, 230, 177, 252, 230, \
173, 246, 226, 173, 232, 212, 161, 228, 209, 158, \
225, 215, 172, 167, 160, 143, 141, 131, 142, 151, \
143, 160, 159, 156, 169, 156, 159, 186, 149, 151, \
188, 147, 149, 186, 155, 160, 185, 166, 163, 185, \
176, 166, 193, 181, 177, 202, 189, 193, 215, 207, \
216, 235, 214, 219, 231, 167, 184, 205, 98, 137, \
174, 60, 102, 146, 53, 84, 125, 212, 195, 170, \
230, 210, 166, 220, 211, 161, 214, 214, 170, 236, \
223, 189, 245, 226, 189, 246, 227, 189, 244, 229, \
194, 240, 230, 198, 239, 231, 196, 240, 226, 188, \
230, 212, 171, 229, 210, 167, 227, 212, 177, 178, \
166, 155, 160, 151, 167, 168, 165, 190, 168, 170, \
195, 158, 160, 192, 158, 157, 192, 172, 167, 197, \
185, 178, 196, 192, 185, 197, 193, 186, 202, 192, \
190, 207, 192, 195, 216, 199, 207, 229, 187, 200, \
218, 131, 157, 195, 77, 121, 186, 53, 103, 170, \
55, 98, 150, 151, 141, 127, 175, 167, 150, 171, \
175, 165, 168, 179, 180, 175, 179, 190, 179, 180, \
190, 178, 179, 188, 176, 178, 189, 174, 180, 190, \
183, 184, 187, 206, 196, 188, 215, 197, 181, 215, \
195, 174, 211, 193, 171, 187, 172, 167, 180, 172, \
191, 178, 179, 211, 166, 172, 206, 162, 165, 197, \
181, 178, 206, 204, 194, 214, 218, 202, 211, 217, \
205, 209, 212, 210, 214, 217, 217, 227, 210, 213, \
230, 203, 209, 230, 166, 184, 204, 104, 137, 184, \
68, 113, 194, 50, 103, 185, 51, 103, 166, 54, \
55, 59, 80, 84, 106, 90, 102, 145, 96, 116, \
174, 101, 125, 187, 98, 125, 188, 93, 120, 184, \
90, 116, 178, 103, 122, 176, 141, 147, 184, 182, \
171, 191, 190, 171, 179, 188, 170, 173, 191, 175, \
168, 198, 185, 184, 197, 191, 210, 179, 181, 213, \
163, 169, 205, 181, 183, 210, 210, 207, 224, 226, \
216, 225, 234, 218, 220, 239, 229, 227, 238, 240, \
236, 228, 230, 233, 215, 218, 228, 214, 218, 235, \
184, 201, 217, 138, 167, 204, 94, 133, 200, 58, \
106, 180, 50, 102, 169, 57, 69, 97, 81, 96, \
144, 98, 118, 185, 108, 134, 212, 100, 136, 217, \
85, 127, 213, 73, 116, 203, 72, 111, 195, 111, \
135, 204, 168, 172, 217, 196, 182, 207, 194, 174, \
187, 195, 181, 192, 199, 188, 191, 199, 191, 193, \
199, 196, 211, 178, 180, 206, 176, 180, 209, 213, \
213, 230, 234, 232, 237, 218, 213, 210, 227, 218, \
215, 246, 243, 240, 238, 243, 238, 221, 225, 224, \
209, 212, 215, 204, 207, 213, 196, 205, 214, 193, \
211, 222, 171, 198, 225, 122, 157, 205, 78, 121, \
185, 79, 100, 150, 111, 136, 188, 131, 160, 213, \
126, 156, 215, 104, 140, 209, 81, 124, 201, 70, \
115, 193, 82, 120, 193, 141, 163, 220, 188, 190, \
222, 187, 172, 183, 186, 169, 169, 206, 198, 200, \
208, 204, 208, 181, 179, 183, 158, 158, 167, 167, \
168, 185, 206, 206, 227, 237, 236, 244, 244, 243, \
238, 228, 229, 218, 235, 235, 230, 244, 247, 246, \
229, 235, 232, 216, 221, 217, 213, 216, 212, 209, \
210, 208, 204, 204, 203, 207, 213, 201, 222, 239, \
229, 194, 218, 239, 115, 148, 207, 116, 138, 186, \
158, 179, 217, 152, 181, 222, 123, 156, 209, 98, \
131, 196, 74, 116, 186, 71, 114, 182, 106, 134, \
199, 162, 173, 222, 181, 181, 206, 155, 149, 154, \
168, 162, 157, 214, 213, 209, 222, 222, 222, 212, \
212, 213, 184, 185, 186, 155, 155, 160, 204, 205, \
211, 243, 246, 244, 245, 249, 241, 246, 250, 240, \
246, 249, 244, 243, 249, 250, 233, 242, 241, 223, \
228, 222, 211, 214, 208, 206, 207, 206, 220, 218, \
214, 229, 237, 225, 205, 231, 225, 153, 185, 214, \
97, 131, 198, 169, 187, 220, 188, 201, 227, 152, \
178, 222, 108, 144, 211, 86, 120, 196, 68, 112, \
187, 78, 119, 191, 122, 143, 211, 154, 158, 208, \
166, 166, 192, 152, 154, 163, 152, 155, 154, 216, \
220, 218, 233, 235, 232, 239, 239, 235, 221, 222, \
217, 205, 206, 202, 230, 232, 228, 242, 247, 240, \
246, 251, 243, 247, 250, 244, 247, 249, 244, 245, \
248, 244, 244, 247, 241, 240, 241, 229, 232, 234, \
227, 212, 215, 218, 187, 193, 195, 194, 216, 222, \
140, 182, 205, 99, 143, 193, 95, 131, 199, 204, \
216, 242, 191, 203, 232, 138, 165, 218, 90, 129, \
206, 75, 112, 197, 67, 112, 194, 86, 127, 203, \
119, 141, 211, 133, 138, 186, 144, 145, 167, 169, \
172, 180, 187, 191, 190, 220, 224, 223, 202, 204, \
201, 207, 208, 203, 155, 156, 151, 199, 200, 195, \
248, 249, 244, 239, 240, 235, 245, 246, 240, 250, \
251, 243, 251, 252, 243, 251, 248, 236, 249, 242, \
226, 243, 242, 226, 244, 250, 244, 215, 226, 233, \
153, 175, 190, 126, 163, 193, 97, 142, 193, 91, \
130, 187, 134, 160, 209, 214, 222, 245, 174, 188, \
226, 113, 142, 208, 77, 118, 204, 68, 110, 198, \
70, 115, 200, 88, 126, 203, 108, 129, 195, 127, \
133, 176, 132, 134, 152, 154, 157, 162, 181, 185, \
184, 204, 208, 207, 173, 174, 172, 194, 195, 190, \
194, 195, 190, 187, 188, 183, 169, 169, 165, 223, \
220, 216, 227, 224, 218, 211, 209, 202, 212, 213, \
203, 239, 235, 224, 247, 243, 231, 238, 250, 243, \
211, 233, 241, 160, 188, 210, 114, 154, 187, 92, \
141, 198, 80, 127, 201, 118, 150, 209, 160, 178, \
207, 197, 208, 240, 143, 162, 213, 94, 126, 201, \
71, 115, 202, 69, 113, 200, 78, 119, 201, 90, \
121, 191, 109, 126, 181, 100, 106, 140, 108, 110, \
124, 127, 130, 133, 77, 82, 79, 124, 128, 128, \
205, 206, 204, 212, 212, 207, 154, 155, 150, 109, \
110, 105, 84, 84, 79, 197, 192, 187, 216, 212, \
208, 158, 158, 155, 152, 155, 153, 219, 223, 223, \
229, 243, 250, 185, 217, 234, 132, 173, 203, 109, \
151, 191, 95, 142, 192, 70, 123, 194, 81, 128, \
208, 137, 167, 220, 153, 168, 185, 159, 179, 227, \
112, 139, 206, 82, 118, 197, 70, 113, 194, 73, \
116, 195, 85, 119, 192, 107, 128, 186, 143, 154, \
190, 101, 106, 126, 106, 109, 118, 96, 100, 99, \
33, 38, 34, 81, 85, 86, 186, 187, 185, 118, \
119, 114, 69, 70, 66, 103, 104, 99, 123, 123, \
117, 208, 206, 197, 230, 231, 227, 187, 192, 196, \
197, 206, 213, 211, 226, 241, 166, 194, 223, 117, \
160, 199, 110, 155, 199, 111, 147, 195, 89, 126, \
186, 66, 113, 184, 93, 139, 206, 132, 163, 204, \
118, 133, 147, 115, 145, 210, 88, 123, 202, 76, \
115, 196, 73, 116, 189, 80, 121, 188, 109, 137, \
198, 156, 170, 213, 191, 196, 215, 169, 172, 181, \
153, 156, 162, 106, 110, 107, 50, 55, 51, 93, \
97, 99, 175, 176, 175, 85, 86, 81, 120, 121, \
116, 179, 180, 175, 216, 217, 210, 237, 240, 227, \
236, 242, 239, 218, 230, 240, 197, 212, 232, 157, \
178, 211, 126, 157, 200, 120, 160, 208, 118, 150, \
195, 109, 123, 164, 92, 111, 171, 77, 113, 176, \
100, 143, 188, 105, 139, 166, 71, 88, 104, 89, \
125, 202, 81, 118, 204, 79, 119, 200, 83, 123, \
188, 112, 145, 190, 165, 186, 222, 208, 218, 240, \
216, 218, 224, 215, 215, 214, 206, 207, 204, 183, \
186, 180, 147, 151, 148, 160, 164, 166, 195, 197, \
194, 163, 164, 157, 208, 207, 201, 238, 234, 229, \
244, 242, 235, 230, 241, 236, 201, 220, 236, 158, \
184, 220, 127, 159, 199, 133, 161, 203, 144, 168, \
214, 126, 148, 196, 104, 113, 153, 105, 97, 126, \
102, 104, 154, 97, 120, 174, 99, 131, 165, 71, \
99, 118, 38, 53, 63, 83, 120, 200, 86, 121, \
205, 90, 126, 203, 97, 130, 187, 140, 161, 186, \
180, 195, 207, 212, 220, 224, 233, 233, 235, 231, \
231, 229, 227, 230, 222, 228, 229, 223, 221, 222, \
217, 220, 218, 215, 229, 229, 218, 230, 231, 219, \
237, 239, 234, 239, 242, 241, 222, 231, 235, 171, \
198, 216, 124, 159, 201, 107, 144, 198, 137, 170, \
211, 154, 176, 208, 136, 145, 183, 110, 109, 150, \
104, 91, 120, 112, 90, 104, 114, 105, 137, 114, \
121, 163, 88, 104, 134, 46, 63, 78, 25, 35, \
38, 88, 124, 202, 98, 127, 202, 111, 136, 201, \
123, 144, 190, 131, 141, 163, 175, 181, 191, 202, \
203, 207, 231, 225, 232, 230, 233, 237, 226, 238, \
235, 218, 223, 218, 181, 177, 169, 212, 203, 192, \
244, 241, 225, 234, 241, 229, 223, 240, 242, 181, \
213, 229, 129, 171, 201, 97, 141, 183, 110, 148, \
188, 156, 178, 208, 167, 166, 181, 133, 122, 134, \
114, 103, 121, 115, 95, 115, 118, 89, 99, 124, \
89, 88, 126, 104, 115, 116, 109, 133, 72, 76, \
98, 31, 40, 54, 22, 28, 33, 95, 129, 204, \
108, 131, 194, 154, 168, 217, 161, 169, 202, 134, \
138, 152, 174, 175, 178, 195, 192, 191, 212, 203, \
205, 224, 225, 227, 219, 230, 227, 190, 197, 195, \
193, 196, 192, 231, 232, 228, 231, 242, 243, 198, \
221, 233, 143, 179, 204, 93, 145, 182, 80, 136, \
185, 122, 161, 208, 164, 187, 208, 155, 153, 149, \
125, 92, 84, 122, 81, 75, 128, 93, 86, 132, \
94, 87, 135, 92, 82, 137, 91, 76, 127, 92, \
85, 107, 89, 93, 64, 58, 69, 28, 30, 43, \
23, 24, 34, 95, 128, 198, 130, 150, 200, 190, \
197, 232, 194, 196, 217, 169, 172, 174, 179, 181, \
173, 188, 189, 177, 198, 195, 189, 232, 227, 221, \
212, 211, 204, 170, 178, 183, 207, 227, 238, 194, \
222, 244, 139, 177, 219, 99, 141, 190, 86, 125, \
172, 106, 144, 189, 156, 186, 228, 174, 180, 205, \
130, 123, 118, 106, 82, 57, 122, 80, 67, 140, \
88, 77, 147, 94, 71, 145, 95, 70, 143, 94, \
71, 139, 90, 70, 125, 87, 71, 97, 74, 68, \
56, 47, 52, 28, 26, 37, 23, 22, 32, 96, \
128, 194, 154, 174, 217, 200, 209, 238, 214, 218, \
236, 212, 222, 225, 207, 218, 214, 201, 212, 206, \
209, 218, 219, 226, 227, 230, 194, 194, 199, 145, \
160, 180, 124, 156, 193, 90, 137, 188, 80, 129, \
194, 96, 136, 196, 142, 164, 209, 174, 180, 207, \
150, 142, 156, 116, 90, 83, 110, 75, 53, 125, \
84, 56, 133, 91, 76, 142, 92, 78, 153, 94, \
68, 149, 97, 70, 141, 96, 76, 132, 91, 80, \
114, 84, 76, 80, 63, 61, 43, 38, 44, 24, \
24, 33, 22, 21, 29, 95, 126, 189, 137, 160, \
198, 174, 188, 214, 191, 201, 225, 192, 209, 229, \
185, 204, 221, 175, 195, 213, 169, 188, 214, 156, \
176, 208, 135, 158, 193, 114, 142, 185, 97, 132, \
184, 95, 134, 190, 122, 153, 200, 154, 171, 204, \
149, 151, 166, 116, 100, 98, 97, 71, 56, 109, \
75, 51, 131, 84, 60, 145, 89, 65, 146, 94, \
68, 150, 96, 74, 153, 97, 77, 146, 100, 79, \
132, 97, 86, 114, 87, 90, 88, 71, 79, 54, \
49, 58, 28, 31, 43, 21, 25, 33, 22, 24, \
26, 88, 121, 189, 94, 121, 169, 98, 117, 153, \
106, 125, 160, 98, 128, 172, 97, 130, 171, 104, \
136, 178, 113, 141, 191, 115, 148, 201, 115, 150, \
201, 119, 149, 195, 123, 146, 188, 131, 148, 184, \
132, 135, 151, 112, 103, 104, 89, 70, 59, 91, \
63, 42, 109, 77, 49, 127, 88, 61, 145, 92, \
71, 154, 94, 74, 157, 98, 68, 153, 101, 74, \
146, 100, 87, 131, 96, 87, 109, 87, 90, 85, \
72, 87, 60, 57, 71, 36, 39, 52, 23, 30, \
42, 22, 28, 34, 24, 26, 27, 80, 116, 194, \
88, 119, 188, 78, 101, 155, 74, 97, 139, 67, \
105, 147, 72, 110, 152, 86, 120, 165, 99, 126, \
176, 104, 126, 172, 109, 128, 162, 107, 118, 143, \
99, 101, 114, 92, 86, 91, 81, 65, 63, 84, \
57, 46, 103, 67, 48, 120, 81, 59, 130, 90, \
67, 147, 94, 70, 154, 99, 78, 153, 101, 83, \
150, 101, 84, 137, 100, 84, 118, 95, 89, 98, \
82, 92, 75, 71, 90, 57, 62, 81, 40, 48, \
57, 26, 32, 37, 21, 27, 32, 23, 26, 30, \
25, 25, 29, 74, 109, 185, 87, 119, 193, 90, \
114, 171, 84, 100, 137, 90, 100, 123, 93, 102, \
124, 99, 104, 128, 102, 103, 129, 89, 90, 113, \
72, 72, 87, 62, 55, 64, 62, 47, 47, 72, \
51, 45, 88, 61, 53, 109, 74, 59, 126, 83, \
61, 135, 92, 71, 140, 99, 80, 149, 100, 81, \
145, 100, 86, 133, 96, 88, 121, 91, 89, 102, \
86, 89, 78, 78, 91, 66, 70, 94, 51, 63, \
88, 34, 51, 70, 23, 35, 42, 20, 26, 28, \
20, 24, 27, 24, 24, 28, 24, 23, 28, 72, \
102, 168, 83, 113, 182, 105, 129, 183, 114, 118, \
148, 115, 92, 98, 113, 85, 89, 109, 80, 83, \
93, 67, 68, 71, 52, 51, 60, 44, 40, 71, \
48, 44, 86, 55, 48, 101, 65, 57, 111, 75, \
62, 125, 84, 64, 136, 89, 65, 138, 95, 73, \
135, 97, 81, 128, 93, 84, 115, 88, 84, 96, \
79, 84, 80, 72, 84, 65, 69, 90, 53, 66, \
95, 47, 62, 89, 32, 49, 69, 17, 35, 46, \
15, 26, 30, 20, 24, 27, 21, 23, 27, 24, \
22, 27, 25, 22, 27, 66, 90, 145, 81, 109, \
171, 118, 138, 188, 151, 151, 176, 137, 108, 109, \
107, 68, 68, 92, 52, 49, 81, 48, 40, 78, \
50, 37, 85, 55, 39, 96, 61, 47, 106, 64, \
52, 114, 68, 57, 119, 77, 60, 128, 84, 61, \
130, 84, 60, 121, 82, 63, 108, 78, 68, 91, \
71, 72, 74, 63, 71, 57, 56, 72, 46, 54, \
77, 44, 55, 83, 39, 50, 76, 30, 41, 57, \
22, 31, 36, 19, 27, 24, 19, 25, 25, 21, \
24, 27, 23, 22, 27, 25, 22, 27, 28, 22, \
28, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '27284';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a518563dedd4817aac5c930478748232c';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_ship5';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{255, 255, 255, 253, 253, 253, 253, 253, 253, 253, 253, \
253, 253, 253, 253, 253, 253, 253, 253, 253, 253, \
253, 253, 253, 253, 253, 253, 253, 253, 253, 252, \
252, 252, 252, 253, 254, 185, 205, 207, 77, 111, \
111, 141, 153, 153, 178, 185, 175, 217, 223, 218, \
255, 254, 255, 219, 211, 214, 138, 122, 128, 110, \
83, 89, 189, 182, 185, 224, 229, 232, 233, 242, \
239, 188, 210, 201, 112, 115, 118, 99, 97, 103, \
124, 144, 142, 91, 111, 108, 119, 151, 139, 136, \
175, 156, 119, 142, 131, 255, 255, 255, 254, 254, \
254, 255, 255, 255, 255, 255, 255, 255, 255, 255, \
255, 255, 255, 255, 255, 255, 255, 255, 255, 255, \
255, 255, 254, 254, 254, 254, 254, 254, 254, 255, \
255, 177, 198, 200, 76, 105, 107, 156, 163, 165, \
171, 177, 168, 201, 205, 201, 247, 244, 246, 170, \
162, 165, 172, 158, 163, 113, 87, 93, 180, 174, \
176, 203, 207, 211, 230, 234, 233, 192, 208, 201, \
105, 103, 108, 106, 104, 109, 139, 166, 161, 105, \
133, 127, 130, 164, 151, 138, 179, 159, 127, 152, \
141, 255, 255, 255, 255, 255, 255, 255, 255, 255, \
255, 255, 255, 255, 255, 255, 255, 255, 255, 255, \
255, 255, 255, 255, 255, 255, 255, 255, 255, 255, \
255, 254, 254, 254, 254, 255, 255, 179, 199, 201, \
77, 100, 104, 164, 167, 170, 173, 179, 169, 201, \
203, 200, 203, 199, 201, 172, 165, 167, 216, 207, \
210, 109, 85, 90, 185, 178, 181, 237, 238, 242, \
244, 244, 244, 163, 175, 170, 92, 90, 95, 100, \
100, 105, 133, 164, 158, 109, 142, 135, 130, 166, \
153, 136, 180, 159, 131, 159, 147, 255, 255, 255, \
254, 254, 254, 255, 255, 255, 255, 255, 255, 255, \
255, 255, 255, 255, 255, 255, 255, 255, 255, 255, \
255, 255, 255, 255, 255, 255, 255, 253, 253, 253, \
253, 255, 255, 184, 204, 206, 81, 98, 104, 170, \
166, 171, 191, 197, 188, 196, 196, 194, 166, 159, \
162, 227, 221, 223, 216, 209, 212, 106, 84, 88, \
190, 184, 186, 255, 254, 255, 223, 218, 220, 125, \
136, 131, 117, 123, 125, 92, 96, 99, 127, 157, \
151, 115, 146, 139, 130, 169, 155, 134, 180, 158, \
133, 164, 150, 255, 255, 255, 254, 254, 254, 255, \
255, 255, 255, 255, 255, 255, 255, 255, 255, 255, \
255, 255, 255, 255, 255, 255, 255, 255, 255, 255, \
255, 255, 255, 254, 253, 253, 253, 255, 255, 177, \
199, 200, 82, 98, 105, 172, 168, 174, 187, 195, \
185, 153, 154, 151, 192, 185, 188, 255, 254, 255, \
211, 209, 210, 101, 83, 87, 193, 188, 190, 253, \
251, 255, 175, 167, 169, 141, 153, 148, 139, 153, \
152, 83, 92, 94, 123, 149, 146, 122, 148, 144, \
132, 171, 158, 135, 182, 161, 137, 169, 156, 255, \
255, 255, 254, 254, 254, 255, 255, 255, 254, 255, \
255, 253, 255, 255, 253, 255, 255, 253, 255, 255, \
254, 254, 255, 255, 253, 255, 255, 254, 255, 255, \
252, 255, 254, 255, 255, 172, 203, 198, 77, 101, \
108, 140, 142, 151, 148, 161, 150, 108, 119, 113, \
161, 167, 171, 178, 187, 192, 149, 161, 160, 87, \
89, 93, 149, 152, 159, 169, 173, 177, 114, 115, \
115, 136, 150, 147, 109, 127, 129, 66, 81, 86, \
98, 119, 123, 102, 124, 128, 121, 155, 153, 133, \
173, 165, 136, 166, 160, 255, 255, 255, 254, 254, \
254, 255, 255, 255, 255, 255, 255, 253, 254, 255, \
253, 254, 255, 254, 255, 255, 253, 255, 255, 252, \
255, 255, 252, 254, 254, 253, 252, 253, 255, 255, \
255, 185, 204, 204, 86, 99, 115, 104, 97, 116, \
118, 123, 121, 88, 93, 96, 74, 74, 90, 70, \
73, 90, 73, 80, 89, 79, 90, 94, 83, 96, \
99, 66, 82, 82, 61, 79, 75, 72, 91, 90, \
54, 73, 77, 44, 63, 70, 46, 64, 74, 40, \
60, 71, 56, 83, 89, 64, 95, 97, 85, 109, \
110, 255, 255, 255, 254, 254, 254, 255, 255, 255, \
255, 255, 254, 255, 254, 252, 255, 254, 252, 255, \
255, 253, 252, 255, 253, 249, 255, 253, 252, 255, \
253, 253, 253, 251, 255, 254, 253, 182, 200, 198, \
84, 102, 111, 93, 97, 107, 102, 122, 113, 73, \
90, 87, 61, 71, 82, 57, 71, 82, 58, 77, \
80, 71, 84, 80, 78, 89, 84, 59, 75, 73, \
53, 75, 73, 63, 85, 86, 49, 68, 73, 40, \
59, 66, 39, 57, 67, 34, 52, 64, 36, 58, \
65, 32, 56, 61, 57, 75, 78, 255, 255, 255, \
252, 252, 252, 251, 251, 251, 251, 252, 250, 251, \
252, 249, 248, 249, 246, 251, 252, 249, 250, 252, \
249, 249, 250, 248, 223, 220, 219, 204, 196, 196, \
210, 198, 198, 170, 163, 158, 120, 115, 113, 125, \
109, 107, 120, 122, 106, 96, 96, 87, 95, 88, \
91, 89, 86, 90, 84, 86, 82, 88, 88, 82, \
90, 90, 88, 76, 81, 84, 60, 70, 77, 58, \
73, 80, 47, 66, 71, 41, 60, 67, 40, 58, \
68, 34, 51, 63, 52, 71, 79, 57, 78, 83, \
71, 86, 90, 248, 248, 248, 246, 247, 246, 254, \
254, 253, 253, 255, 255, 249, 255, 255, 242, 250, \
250, 247, 255, 254, 253, 255, 255, 255, 254, 255, \
202, 200, 204, 156, 153, 158, 164, 159, 161, 166, \
162, 154, 161, 157, 148, 167, 149, 141, 146, 143, \
127, 124, 125, 114, 132, 128, 128, 128, 128, 130, \
124, 128, 121, 120, 126, 124, 119, 124, 131, 109, \
113, 124, 68, 72, 86, 50, 60, 70, 40, 59, \
64, 41, 60, 67, 43, 61, 71, 34, 53, 64, \
66, 88, 95, 96, 120, 125, 93, 111, 115, 247, \
247, 247, 247, 247, 247, 231, 231, 231, 183, 192, \
194, 163, 180, 184, 155, 172, 176, 157, 173, 177, \
168, 182, 186, 178, 192, 196, 143, 164, 166, 108, \
138, 138, 128, 161, 161, 130, 173, 171, 122, 162, \
158, 112, 131, 130, 117, 147, 143, 105, 146, 144, \
120, 160, 168, 119, 162, 173, 113, 161, 162, 116, \
159, 164, 119, 155, 167, 111, 139, 151, 56, 78, \
89, 42, 60, 69, 37, 56, 61, 38, 57, 64, \
41, 59, 69, 35, 54, 66, 47, 74, 79, 66, \
97, 100, 69, 93, 94, 246, 248, 247, 247, 250, \
249, 204, 208, 206, 89, 107, 108, 68, 94, 98, \
63, 88, 93, 60, 86, 92, 60, 85, 93, 65, \
92, 100, 55, 87, 94, 45, 84, 88, 55, 96, \
102, 62, 100, 112, 54, 90, 100, 56, 79, 91, \
71, 98, 110, 65, 100, 113, 81, 117, 135, 88, \
126, 145, 75, 115, 130, 73, 120, 131, 78, 127, \
137, 76, 117, 126, 42, 77, 86, 34, 61, 69, \
35, 56, 63, 35, 56, 64, 36, 56, 66, 35, \
56, 67, 36, 60, 69, 42, 69, 75, 44, 67, \
73, 237, 247, 243, 236, 248, 244, 221, 237, 232, \
102, 129, 126, 60, 92, 93, 57, 88, 91, 52, \
83, 89, 48, 76, 86, 49, 75, 88, 47, 73, \
86, 41, 67, 80, 40, 65, 79, 43, 69, 82, \
35, 61, 74, 36, 61, 74, 36, 61, 74, 32, \
57, 71, 35, 61, 74, 42, 68, 81, 41, 66, \
79, 38, 72, 82, 45, 83, 91, 42, 76, 86, \
36, 67, 78, 33, 59, 71, 35, 57, 68, 33, \
55, 66, 34, 56, 67, 38, 60, 71, 40, 58, \
70, 39, 57, 69, 36, 54, 66, 182, 207, 200, \
179, 208, 199, 188, 220, 211, 128, 160, 155, 64, \
96, 97, 49, 80, 84, 43, 74, 80, 40, 69, \
79, 41, 67, 80, 41, 67, 80, 40, 66, 79, \
38, 64, 77, 37, 63, 76, 36, 62, 75, 33, \
59, 72, 32, 58, 71, 29, 56, 68, 28, 54, \
67, 28, 54, 67, 30, 56, 69, 28, 57, 69, \
30, 60, 71, 31, 57, 70, 31, 54, 68, 29, \
50, 64, 28, 50, 62, 27, 49, 60, 30, 52, \
63, 33, 54, 65, 34, 52, 64, 34, 52, 64, \
34, 52, 64, 140, 179, 169, 139, 181, 170, 145, \
190, 177, 138, 175, 170, 81, 112, 113, 44, 75, \
78, 40, 71, 77, 38, 67, 77, 38, 64, 77, \
37, 63, 76, 35, 62, 74, 34, 60, 73, 33, \
59, 72, 33, 59, 72, 33, 59, 72, 31, 57, \
70, 28, 54, 67, 30, 56, 69, 30, 56, 69, \
29, 55, 68, 28, 53, 67, 27, 50, 64, 29, \
49, 64, 29, 46, 62, 28, 46, 60, 25, 47, \
58, 24, 46, 57, 24, 47, 57, 25, 46, 58, \
28, 46, 58, 27, 45, 57, 27, 45, 57, 135, \
174, 166, 133, 175, 166, 137, 183, 173, 146, 184, \
179, 110, 142, 143, 47, 78, 81, 38, 69, 75, \
37, 66, 76, 36, 62, 75, 34, 60, 73, 33, \
59, 72, 33, 59, 72, 32, 58, 71, 32, 58, \
71, 31, 57, 70, 31, 57, 70, 29, 54, 67, \
35, 61, 74, 43, 69, 82, 38, 64, 77, 38, \
63, 76, 36, 59, 73, 39, 58, 73, 32, 48, \
64, 30, 47, 62, 31, 53, 64, 29, 50, 61, \
25, 48, 59, 25, 46, 57, 27, 46, 58, 25, \
43, 55, 26, 44, 56, 120, 151, 148, 118, 152, \
148, 120, 158, 152, 127, 161, 159, 108, 139, 140, \
52, 83, 86, 35, 66, 72, 35, 64, 74, 35, \
61, 74, 33, 59, 72, 33, 59, 72, 33, 59, \
72, 32, 58, 71, 32, 58, 71, 33, 59, 72, \
34, 60, 73, 29, 55, 68, 33, 60, 73, 46, \
72, 85, 41, 67, 80, 39, 67, 79, 39, 66, \
78, 37, 60, 74, 28, 48, 63, 33, 53, 67, \
42, 64, 75, 39, 61, 72, 30, 52, 63, 32, \
54, 65, 35, 53, 65, 25, 43, 55, 26, 44, \
56, 104, 122, 124, 107, 130, 130, 116, 148, 145, \
103, 140, 138, 75, 110, 111, 47, 77, 83, 37, \
66, 75, 33, 61, 73, 34, 60, 73, 33, 59, \
72, 33, 59, 72, 33, 59, 72, 31, 57, 70, \
31, 57, 70, 31, 57, 70, 31, 56, 69, 29, \
54, 67, 29, 54, 67, 33, 58, 71, 32, 57, \
70, 30, 57, 69, 30, 57, 70, 31, 56, 69, \
26, 48, 62, 30, 51, 65, 34, 55, 67, 34, \
54, 67, 29, 49, 62, 34, 53, 66, 33, 51, \
63, 26, 44, 56, 26, 44, 56, 88, 96, 102, \
100, 114, 118, 118, 146, 145, 87, 127, 125, 81, \
117, 119, 57, 84, 94, 40, 67, 79, 32, 60, \
72, 33, 59, 72, 32, 58, 71, 33, 59, 72, \
32, 58, 71, 30, 56, 69, 30, 56, 69, 30, \
56, 69, 30, 56, 69, 30, 54, 67, 30, 52, \
66, 30, 52, 66, 30, 52, 66, 29, 51, 65, \
27, 49, 63, 27, 49, 63, 27, 49, 63, 27, \
47, 62, 28, 45, 61, 27, 45, 60, 26, 43, \
59, 26, 44, 59, 26, 44, 57, 26, 44, 56, \
26, 44, 56, 73, 87, 90, 93, 105, 109, 104, \
126, 126, 80, 111, 112, 88, 116, 120, 73, 97, \
106, 41, 71, 81, 28, 60, 71, 31, 57, 70, \
31, 57, 70, 32, 58, 71, 31, 57, 70, 30, \
56, 69, 30, 56, 69, 30, 56, 69, 30, 56, \
69, 31, 54, 67, 31, 53, 67, 31, 53, 67, \
30, 52, 66, 30, 52, 66, 28, 50, 64, 27, \
49, 63, 27, 49, 63, 28, 48, 62, 28, 45, \
61, 28, 45, 61, 26, 43, 59, 26, 44, 59, \
26, 44, 57, 26, 44, 56, 26, 44, 56, 64, \
85, 86, 93, 107, 110, 87, 103, 106, 87, 109, \
111, 81, 100, 105, 68, 86, 95, 58, 88, 96, \
31, 64, 74, 30, 56, 69, 30, 56, 69, 30, \
56, 69, 30, 56, 69, 29, 55, 68, 30, 56, \
69, 30, 56, 69, 30, 56, 69, 31, 54, 67, \
31, 53, 67, 30, 52, 66, 30, 52, 66, 30, \
52, 66, 28, 50, 64, 27, 49, 63, 27, 49, \
63, 28, 48, 62, 29, 46, 62, 28, 45, 61, \
27, 44, 60, 26, 44, 59, 26, 44, 56, 26, \
44, 56, 26, 44, 56, 64, 90, 90, 95, 110, \
113, 93, 110, 112, 89, 109, 110, 82, 98, 102, \
71, 85, 93, 86, 110, 118, 47, 76, 85, 29, \
55, 68, 31, 57, 70, 30, 56, 69, 30, 56, \
69, 29, 55, 68, 29, 55, 68, 30, 56, 69, \
30, 56, 69, 31, 54, 67, 31, 53, 67, 30, \
52, 66, 30, 52, 66, 30, 52, 66, 28, 50, \
64, 27, 49, 63, 27, 49, 63, 28, 48, 63, \
30, 47, 63, 29, 46, 62, 28, 45, 61, 28, \
45, 60, 27, 45, 57, 27, 45, 57, 27, 45, \
57, 76, 101, 101, 88, 106, 108, 80, 103, 103, \
70, 95, 93, 79, 96, 97, 80, 90, 96, 80, \
93, 101, 53, 75, 85, 30, 56, 69, 30, 57, \
70, 30, 56, 69, 30, 56, 69, 30, 56, 69, \
30, 56, 69, 30, 56, 69, 30, 56, 69, 31, \
54, 67, 31, 53, 67, 30, 52, 66, 30, 52, \
66, 30, 52, 66, 28, 50, 64, 27, 49, 63, \
27, 49, 63, 28, 48, 63, 30, 47, 63, 29, \
46, 62, 28, 45, 61, 28, 45, 60, 28, 46, \
58, 28, 46, 58, 28, 46, 58, 62, 88, 89, \
71, 94, 96, 71, 100, 99, 63, 94, 92, 67, \
90, 91, 68, 83, 89, 58, 71, 81, 47, 66, \
78, 33, 57, 71, 32, 56, 70, 32, 55, 69, \
32, 56, 70, 32, 57, 71, 32, 57, 71, 31, \
56, 70, 30, 56, 69, 31, 54, 68, 31, 53, \
68, 30, 52, 67, 30, 52, 67, 31, 51, 66, \
30, 49, 65, 29, 48, 64, 28, 48, 64, 29, \
48, 63, 30, 47, 63, 30, 47, 63, 29, 46, \
62, 29, 46, 62, 29, 47, 60, 29, 47, 60, \
29, 47, 60, 50, 81, 84, 60, 89, 93, 62, \
93, 96, 63, 94, 99, 65, 94, 101, 55, 82, \
90, 46, 73, 82, 46, 71, 83, 36, 59, 74, \
32, 55, 70, 33, 55, 70, 32, 56, 71, 32, \
58, 72, 31, 58, 72, 30, 57, 70, 29, 57, \
70, 29, 56, 70, 30, 56, 70, 28, 55, 68, \
30, 57, 71, 34, 55, 71, 31, 50, 66, 30, \
49, 65, 30, 49, 65, 29, 49, 64, 28, 50, \
63, 28, 51, 63, 29, 52, 64, 29, 51, 64, \
29, 49, 62, 30, 49, 62, 29, 49, 62, 44, \
71, 80, 44, 70, 80, 45, 71, 81, 45, 72, \
81, 47, 74, 83, 42, 69, 78, 41, 68, 77, \
39, 67, 77, 30, 61, 71, 28, 58, 69, 29, \
60, 70, 28, 60, 70, 27, 60, 70, 27, 60, \
70, 25, 59, 68, 25, 59, 68, 25, 59, 68, \
25, 59, 68, 26, 59, 69, 35, 69, 78, 32, \
61, 73, 26, 52, 64, 26, 52, 64, 27, 53, \
65, 26, 54, 64, 25, 55, 62, 25, 55, 62, \
25, 55, 62, 25, 55, 62, 26, 53, 61, 26, \
54, 61, 26, 53, 61, 39, 63, 80, 37, 61, \
77, 34, 58, 75, 33, 58, 71, 32, 57, 67, \
35, 60, 70, 33, 58, 69, 31, 58, 69, 31, \
60, 71, 31, 60, 71, 32, 61, 72, 32, 61, \
72, 31, 61, 72, 31, 61, 71, 29, 59, 69, \
29, 58, 69, 29, 58, 69, 28, 58, 69, 29, \
59, 69, 34, 63, 74, 31, 58, 69, 28, 53, \
65, 29, 54, 66, 29, 54, 67, 29, 55, 65, \
28, 56, 63, 28, 55, 62, 27, 55, 62, 28, \
54, 61, 28, 52, 60, 28, 52, 60, 27, 51, \
59, 34, 68, 88, 33, 67, 86, 31, 65, 85, \
30, 64, 81, 31, 66, 80, 29, 64, 78, 27, \
62, 76, 30, 61, 76, 37, 62, 78, 36, 61, \
78, 38, 63, 79, 38, 63, 80, 39, 62, 79, \
39, 62, 80, 39, 62, 79, 37, 60, 77, 36, \
59, 76, 37, 60, 78, 36, 59, 77, 36, 59, \
76, 37, 58, 76, 36, 56, 75, 37, 57, 75, \
37, 57, 76, 36, 56, 73, 36, 55, 71, 36, \
55, 70, 36, 56, 71, 34, 53, 69, 36, 52, \
68, 34, 50, 67, 34, 50, 66, 73, 125, 145, \
70, 121, 141, 72, 124, 143, 68, 120, 139, 66, \
117, 137, 60, 111, 131, 57, 108, 128, 58, 106, \
125, 54, 96, 115, 48, 90, 109, 49, 91, 110, \
49, 90, 109, 52, 90, 111, 50, 88, 109, 50, \
88, 109, 47, 85, 106, 48, 86, 106, 50, 88, \
109, 48, 86, 107, 48, 86, 106, 46, 84, 105, \
46, 83, 104, 47, 85, 105, 47, 85, 106, 45, \
81, 101, 47, 81, 101, 46, 80, 100, 46, 80, \
99, 46, 79, 99, 47, 77, 98, 47, 77, 98, \
45, 75, 96, 105, 172, 191, 103, 169, 188, 107, \
173, 192, 108, 175, 196, 107, 174, 197, 104, 171, \
194, 96, 163, 186, 96, 164, 185, 93, 163, 182, \
94, 164, 182, 91, 161, 179, 89, 158, 176, 95, \
160, 180, 92, 157, 177, 95, 160, 180, 90, 155, \
174, 88, 153, 172, 91, 156, 176, 91, 157, 176, \
89, 154, 174, 88, 154, 174, 88, 154, 174, 90, \
156, 175, 84, 150, 170, 78, 143, 162, 80, 143, \
161, 78, 141, 159, 76, 139, 157, 79, 140, 159, \
79, 137, 156, 79, 137, 156, 75, 134, 153, 105, \
169, 189, 105, 171, 191, 112, 179, 201, 110, 180, \
201, 108, 179, 199, 113, 184, 203, 106, 177, 197, \
108, 180, 201, 114, 189, 209, 114, 188, 209, 110, \
184, 205, 109, 183, 204, 112, 183, 205, 112, 184, \
205, 117, 189, 210, 114, 186, 207, 112, 184, 205, \
114, 187, 208, 115, 188, 209, 115, 187, 209, 114, \
186, 208, 107, 180, 201, 107, 180, 201, 108, 181, \
202, 103, 176, 197, 99, 173, 192, 100, 171, 192, \
99, 167, 189, 96, 163, 184, 94, 161, 180, 92, \
159, 177, 90, 157, 175, 115, 176, 196, 112, 176, \
196, 121, 187, 210, 122, 192, 211, 122, 192, 210, \
123, 194, 212, 124, 194, 212, 123, 194, 214, 126, \
198, 219, 123, 195, 217, 118, 189, 211, 122, 193, \
215, 123, 194, 216, 124, 194, 216, 126, 196, 218, \
126, 197, 219, 126, 198, 220, 124, 196, 218, 125, \
197, 219, 122, 194, 216, 119, 190, 212, 115, 187, \
209, 115, 186, 208, 118, 189, 211, 115, 188, 209, \
110, 183, 205, 109, 179, 201, 107, 173, 197, 105, \
169, 193, 102, 169, 188, 98, 165, 183, 95, 162, \
181, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '27594';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a1f298be3102a7b44464db8f208313f58';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_horse1';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{129, 129, 126, 129, 129, 129, 132, 132, 134, 129, 131, \
133, 116, 83, 86, 65, 31, 31, 57, 52, 44, \
80, 74, 62, 78, 73, 59, 81, 77, 63, 83, \
78, 69, 100, 96, 92, 180, 181, 184, 163, 166, \
170, 192, 196, 204, 199, 202, 212, 184, 186, 196, \
183, 186, 196, 178, 183, 191, 180, 185, 195, 184, \
190, 201, 192, 196, 205, 181, 182, 187, 168, 170, \
175, 191, 193, 201, 125, 125, 126, 84, 84, 77, \
95, 94, 89, 98, 97, 94, 98, 96, 90, 91, \
89, 78, 92, 90, 78, 129, 130, 126, 133, 132, \
133, 133, 133, 135, 131, 132, 135, 120, 85, 86, \
65, 31, 29, 57, 53, 45, 84, 78, 63, 81, \
75, 59, 86, 80, 65, 89, 84, 73, 102, 100, \
95, 183, 184, 190, 109, 111, 114, 138, 140, 147, \
208, 211, 222, 201, 205, 213, 194, 198, 206, 183, \
186, 194, 190, 195, 206, 197, 204, 217, 194, 200, \
210, 193, 197, 203, 188, 192, 198, 198, 201, 210, \
126, 126, 127, 86, 86, 79, 94, 93, 88, 99, \
97, 95, 99, 96, 94, 89, 87, 78, 90, 88, \
79, 125, 125, 124, 127, 127, 129, 129, 128, 132, \
124, 126, 130, 116, 83, 83, 68, 31, 31, 55, \
51, 43, 77, 73, 59, 77, 74, 59, 83, 79, \
66, 86, 83, 75, 102, 102, 97, 175, 178, 183, \
131, 134, 139, 146, 150, 156, 204, 208, 218, 161, \
164, 171, 143, 145, 150, 187, 190, 198, 193, 199, \
209, 206, 214, 224, 190, 195, 205, 195, 200, 209, \
188, 193, 200, 192, 195, 201, 125, 126, 128, 85, \
84, 82, 90, 89, 84, 94, 93, 90, 96, 95, \
93, 84, 84, 75, 87, 86, 79, 125, 123, 124, \
126, 127, 131, 127, 127, 132, 124, 127, 132, 116, \
82, 84, 69, 30, 31, 55, 50, 42, 75, 70, \
56, 76, 72, 58, 82, 78, 66, 85, 83, 75, \
100, 99, 93, 140, 142, 144, 146, 150, 153, 147, \
151, 153, 158, 160, 163, 105, 100, 103, 71, 65, \
64, 151, 153, 156, 163, 166, 171, 173, 178, 183, \
169, 172, 180, 164, 169, 172, 163, 167, 168, 169, \
171, 173, 116, 117, 117, 89, 89, 86, 92, 91, \
86, 96, 96, 92, 97, 97, 97, 84, 84, 78, \
90, 89, 82, 143, 129, 127, 139, 126, 126, 137, \
124, 126, 134, 123, 125, 126, 87, 90, 81, 45, \
46, 64, 58, 51, 85, 74, 60, 87, 76, 62, \
90, 79, 68, 91, 81, 74, 98, 89, 82, 105, \
99, 96, 105, 102, 101, 103, 99, 98, 102, 99, \
98, 106, 97, 94, 88, 79, 75, 98, 100, 99, \
107, 108, 109, 110, 113, 116, 114, 117, 123, 101, \
103, 103, 104, 106, 101, 110, 112, 111, 96, 98, \
97, 91, 91, 89, 87, 88, 84, 93, 94, 92, \
95, 95, 96, 82, 80, 76, 87, 87, 83, 160, \
145, 133, 143, 127, 115, 149, 134, 124, 152, 137, \
128, 150, 122, 117, 124, 100, 98, 124, 116, 109, \
139, 127, 117, 135, 124, 111, 133, 122, 108, 144, \
134, 124, 143, 132, 122, 139, 128, 117, 135, 123, \
115, 132, 120, 112, 130, 119, 107, 128, 115, 111, \
85, 82, 81, 96, 85, 79, 118, 103, 96, 116, \
103, 96, 111, 99, 96, 102, 89, 83, 104, 91, \
84, 101, 90, 87, 103, 91, 87, 102, 89, 83, \
96, 84, 77, 99, 88, 82, 96, 88, 83, 87, \
79, 70, 92, 83, 75, 152, 135, 123, 128, 108, \
91, 131, 113, 94, 136, 118, 100, 111, 83, 75, \
84, 53, 53, 108, 88, 78, 124, 105, 90, 113, \
90, 72, 107, 78, 59, 140, 120, 107, 137, 114, \
96, 118, 92, 73, 120, 99, 88, 126, 106, 95, \
134, 112, 94, 118, 102, 93, 55, 55, 57, 92, \
80, 69, 141, 121, 105, 139, 121, 105, 139, 126, \
114, 161, 154, 144, 144, 130, 117, 141, 127, 113, \
142, 129, 114, 142, 129, 115, 140, 129, 114, 138, \
129, 115, 133, 124, 112, 131, 120, 106, 131, 119, \
105, 164, 144, 132, 144, 117, 108, 147, 122, 112, \
148, 123, 112, 120, 94, 89, 104, 82, 82, 119, \
105, 96, 135, 123, 109, 126, 114, 97, 126, 110, \
91, 108, 83, 72, 84, 52, 35, 89, 56, 37, \
94, 81, 66, 116, 111, 97, 126, 114, 100, 110, \
102, 92, 52, 53, 52, 77, 70, 57, 118, 105, \
84, 108, 98, 80, 106, 97, 90, 154, 150, 145, \
112, 100, 86, 105, 91, 77, 103, 90, 75, 103, \
88, 73, 107, 91, 74, 108, 92, 77, 102, 84, \
73, 112, 93, 79, 115, 94, 80, 166, 153, 141, \
144, 128, 118, 141, 126, 113, 137, 123, 109, 114, \
100, 93, 85, 73, 72, 110, 100, 86, 133, 119, \
100, 115, 103, 84, 118, 106, 86, 98, 79, 66, \
45, 29, 22, 46, 28, 20, 66, 42, 32, 102, \
81, 62, 113, 104, 82, 81, 78, 69, 33, 36, \
33, 61, 57, 47, 117, 104, 88, 112, 103, 91, \
115, 111, 104, 162, 156, 147, 129, 118, 101, 121, \
112, 96, 124, 114, 97, 122, 113, 97, 121, 112, \
94, 117, 111, 96, 105, 103, 90, 114, 109, 91, \
114, 108, 90, 149, 134, 123, 133, 109, 94, 134, \
109, 93, 125, 102, 89, 110, 88, 83, 87, 65, \
65, 114, 91, 77, 128, 105, 86, 115, 93, 77, \
128, 103, 88, 101, 81, 70, 39, 27, 21, 40, \
29, 23, 37, 23, 16, 63, 37, 26, 69, 57, \
46, 52, 50, 45, 37, 36, 31, 38, 34, 26, \
99, 84, 68, 115, 96, 80, 113, 100, 89, 153, \
149, 137, 116, 101, 78, 116, 100, 76, 116, 103, \
79, 114, 100, 78, 112, 96, 74, 100, 90, 76, \
94, 84, 71, 106, 90, 71, 109, 94, 74, 146, \
133, 127, 124, 107, 102, 132, 116, 108, 129, 114, \
108, 116, 102, 99, 105, 92, 88, 110, 97, 91, \
113, 100, 92, 107, 94, 86, 114, 99, 90, 89, \
72, 62, 51, 40, 34, 61, 48, 44, 38, 25, \
21, 46, 32, 24, 63, 55, 48, 91, 81, 67, \
68, 57, 43, 38, 34, 27, 79, 57, 39, 109, \
65, 40, 105, 64, 45, 128, 103, 86, 108, 85, \
62, 99, 73, 52, 101, 80, 57, 120, 99, 77, \
120, 100, 81, 109, 94, 82, 109, 91, 76, 116, \
95, 79, 113, 97, 80, 170, 159, 143, 152, 142, \
128, 157, 147, 130, 151, 143, 127, 143, 135, 121, \
138, 129, 116, 135, 127, 113, 134, 125, 112, 132, \
123, 111, 134, 124, 114, 90, 79, 70, 93, 84, \
72, 105, 92, 79, 54, 36, 28, 56, 34, 26, \
99, 84, 76, 104, 92, 74, 63, 53, 39, 64, \
49, 38, 77, 45, 29, 87, 46, 26, 82, 41, \
23, 92, 52, 32, 89, 66, 51, 57, 41, 32, \
52, 41, 30, 91, 76, 64, 109, 96, 87, 102, \
91, 85, 99, 86, 75, 96, 83, 71, 93, 83, \
70, 202, 180, 150, 196, 173, 146, 201, 177, 148, \
200, 177, 150, 198, 177, 150, 195, 175, 148, 195, \
175, 146, 196, 176, 147, 194, 175, 147, 192, 174, \
148, 150, 134, 111, 165, 150, 120, 164, 146, 119, \
82, 57, 45, 65, 35, 27, 87, 67, 60, 61, \
56, 48, 41, 35, 28, 61, 39, 29, 68, 37, \
26, 65, 35, 23, 60, 33, 22, 66, 36, 23, \
62, 43, 34, 42, 34, 29, 30, 23, 17, 49, \
41, 34, 115, 104, 86, 120, 109, 93, 116, 104, \
88, 111, 100, 84, 107, 97, 82, 202, 174, 137, \
192, 165, 129, 200, 171, 137, 207, 178, 145, 207, \
180, 146, 205, 180, 145, 205, 180, 143, 206, 181, \
143, 205, 181, 143, 200, 178, 140, 190, 169, 134, \
196, 175, 139, 182, 159, 127, 109, 76, 60, 59, \
33, 22, 53, 34, 25, 31, 27, 24, 29, 23, \
19, 50, 29, 19, 52, 31, 20, 54, 32, 22, \
47, 28, 19, 44, 25, 16, 58, 40, 31, 84, \
66, 48, 67, 51, 34, 39, 32, 27, 143, 125, \
92, 163, 145, 107, 159, 141, 104, 154, 137, 102, \
149, 132, 98, 164, 133, 97, 154, 123, 89, 156, \
124, 89, 167, 135, 99, 176, 143, 107, 183, 151, \
112, 188, 157, 114, 194, 161, 119, 197, 165, 123, \
198, 169, 127, 191, 161, 123, 196, 167, 131, 198, \
167, 129, 116, 79, 55, 47, 24, 15, 35, 24, \
16, 28, 26, 25, 30, 25, 21, 35, 22, 13, \
42, 28, 20, 50, 31, 24, 33, 20, 14, 47, \
35, 25, 109, 87, 60, 150, 122, 85, 125, 99, \
65, 42, 33, 22, 124, 103, 72, 187, 158, 113, \
180, 154, 109, 176, 152, 107, 173, 149, 104, 117, \
83, 50, 110, 77, 47, 113, 79, 48, 114, 81, \
48, 115, 81, 48, 116, 81, 46, 118, 83, 47, \
120, 84, 49, 120, 85, 49, 123, 88, 52, 125, \
89, 53, 125, 91, 56, 132, 97, 58, 108, 71, \
45, 56, 32, 24, 30, 21, 15, 44, 40, 37, \
45, 37, 31, 50, 33, 19, 95, 68, 42, 56, \
39, 24, 27, 16, 11, 106, 84, 58, 165, 131, \
85, 153, 121, 77, 151, 116, 72, 107, 76, 46, \
77, 53, 35, 139, 106, 71, 173, 143, 99, 182, \
150, 102, 179, 148, 100, 119, 84, 47, 116, 83, \
48, 118, 83, 50, 117, 81, 47, 115, 80, 46, \
115, 80, 46, 115, 79, 45, 111, 75, 42, 112, \
78, 42, 115, 80, 43, 113, 78, 39, 115, 79, \
40, 115, 78, 41, 93, 59, 38, 68, 43, 30, \
69, 46, 27, 104, 73, 41, 105, 73, 39, 108, \
75, 38, 117, 78, 41, 70, 47, 25, 47, 30, \
19, 110, 77, 38, 116, 79, 41, 107, 72, 37, \
107, 71, 38, 111, 75, 40, 87, 57, 31, 66, \
39, 24, 90, 55, 34, 114, 76, 44, 116, 80, \
45, 124, 86, 48, 127, 90, 49, 127, 90, 49, \
124, 87, 46, 124, 86, 46, 126, 87, 48, 128, \
89, 48, 127, 89, 49, 125, 88, 47, 122, 85, \
44, 123, 86, 45, 130, 91, 49, 118, 79, 46, \
98, 64, 40, 84, 53, 33, 107, 73, 39, 129, \
86, 45, 124, 83, 42, 121, 82, 41, 119, 81, \
40, 100, 68, 37, 52, 35, 22, 102, 67, 33, \
116, 79, 41, 110, 75, 37, 110, 74, 39, 109, \
74, 39, 113, 76, 41, 106, 71, 39, 101, 67, \
36, 100, 66, 35, 100, 66, 34, 127, 88, 47, \
127, 88, 46, 127, 88, 48, 125, 86, 46, 126, \
87, 46, 127, 88, 46, 125, 86, 43, 124, 86, \
43, 123, 84, 43, 122, 82, 41, 123, 83, 40, \
126, 88, 43, 111, 75, 40, 109, 71, 43, 101, \
67, 38, 123, 83, 38, 126, 85, 42, 124, 84, \
40, 121, 81, 39, 125, 83, 38, 114, 77, 42, \
63, 42, 26, 101, 66, 32, 123, 83, 39, 120, \
81, 40, 120, 80, 40, 117, 79, 39, 118, 80, \
40, 118, 80, 38, 115, 78, 38, 113, 77, 39, \
112, 75, 38, 130, 88, 47, 125, 84, 45, 127, \
85, 46, 131, 90, 47, 131, 90, 47, 127, 86, \
43, 127, 86, 43, 127, 87, 44, 126, 85, 42, \
127, 86, 42, 126, 85, 41, 128, 88, 43, 115, \
79, 43, 105, 68, 37, 102, 68, 35, 125, 85, \
41, 125, 85, 41, 125, 85, 40, 123, 82, 38, \
123, 81, 38, 93, 60, 34, 90, 59, 32, 121, \
81, 38, 118, 80, 36, 119, 81, 39, 117, 77, \
37, 122, 81, 41, 120, 81, 39, 115, 75, 35, \
115, 75, 34, 116, 76, 35, 115, 75, 35, 129, \
86, 44, 126, 84, 43, 127, 85, 43, 132, 90, \
46, 131, 90, 44, 129, 88, 44, 125, 83, 41, \
130, 88, 46, 129, 87, 43, 127, 86, 40, 126, \
84, 40, 127, 84, 41, 119, 82, 45, 116, 78, \
41, 107, 70, 35, 113, 77, 42, 121, 84, 42, \
123, 82, 40, 123, 82, 40, 116, 78, 42, 84, \
54, 33, 106, 70, 33, 121, 80, 38, 117, 78, \
36, 120, 80, 38, 116, 77, 36, 117, 78, 38, \
118, 79, 38, 118, 78, 36, 117, 78, 36, 113, \
75, 35, 114, 73, 34, 132, 89, 47, 128, 87, \
44, 126, 84, 43, 127, 85, 44, 128, 87, 43, \
131, 90, 45, 126, 85, 41, 125, 84, 40, 126, \
84, 40, 125, 83, 39, 125, 84, 41, 121, 79, \
37, 120, 83, 45, 119, 81, 44, 118, 77, 37, \
110, 75, 41, 116, 79, 41, 120, 79, 37, 119, \
80, 38, 113, 80, 49, 101, 67, 37, 117, 76, \
36, 119, 78, 38, 117, 75, 34, 118, 78, 37, \
117, 77, 35, 117, 77, 35, 117, 77, 37, 118, \
78, 36, 115, 77, 35, 112, 74, 35, 113, 74, \
34, 128, 86, 44, 128, 87, 44, 129, 87, 44, \
126, 84, 41, 126, 85, 41, 130, 89, 44, 127, \
86, 41, 128, 86, 41, 128, 86, 43, 127, 85, \
42, 127, 86, 43, 122, 82, 41, 118, 80, 41, \
117, 80, 41, 117, 79, 39, 112, 74, 39, 112, \
75, 39, 113, 76, 37, 115, 77, 40, 109, 79, \
49, 106, 73, 38, 111, 72, 35, 110, 72, 37, \
108, 71, 35, 108, 72, 34, 112, 74, 35, 114, \
75, 36, 109, 72, 34, 109, 73, 36, 109, 71, \
34, 112, 74, 36, 114, 76, 35, 124, 82, 40, \
123, 83, 41, 127, 85, 43, 124, 83, 40, 127, \
86, 43, 130, 89, 45, 126, 84, 42, 128, 86, \
42, 129, 87, 44, 126, 85, 44, 124, 84, 41, \
128, 85, 43, 126, 85, 43, 123, 84, 42, 120, \
80, 41, 117, 78, 38, 119, 80, 40, 116, 77, \
40, 117, 77, 41, 111, 75, 40, 112, 75, 40, \
109, 70, 35, 107, 69, 35, 107, 70, 33, 108, \
72, 34, 109, 71, 33, 108, 71, 33, 109, 71, \
33, 109, 72, 35, 109, 71, 34, 110, 72, 34, \
111, 72, 32, 127, 85, 45, 126, 85, 46, 123, \
82, 41, 124, 81, 40, 123, 81, 40, 129, 86, \
42, 127, 86, 42, 126, 85, 42, 128, 87, 42, \
125, 84, 40, 123, 83, 39, 127, 85, 41, 128, \
85, 43, 124, 81, 38, 126, 83, 38, 123, 82, \
39, 123, 83, 38, 121, 81, 38, 118, 78, 38, \
115, 74, 37, 119, 79, 38, 123, 80, 39, 118, \
77, 35, 117, 76, 36, 115, 73, 34, 119, 78, \
36, 117, 76, 35, 116, 74, 34, 115, 73, 33, \
113, 73, 35, 109, 71, 31, 111, 71, 31, 126, \
84, 45, 127, 86, 43, 126, 84, 41, 127, 85, \
43, 126, 84, 42, 129, 85, 41, 122, 81, 37, \
120, 79, 38, 125, 83, 41, 124, 83, 41, 124, \
82, 40, 123, 82, 40, 123, 81, 40, 126, 83, \
40, 123, 83, 40, 116, 77, 37, 121, 81, 40, \
121, 81, 39, 120, 78, 40, 120, 79, 40, 120, \
79, 39, 123, 82, 40, 122, 81, 39, 118, 78, \
37, 120, 78, 36, 121, 78, 36, 119, 77, 36, \
117, 75, 34, 117, 75, 34, 114, 74, 35, 111, \
72, 32, 116, 77, 36, 122, 80, 41, 125, 83, \
42, 127, 85, 42, 125, 83, 41, 126, 84, 41, \
127, 84, 42, 123, 81, 40, 124, 82, 42, 122, \
80, 39, 121, 79, 39, 124, 82, 41, 124, 82, \
41, 127, 85, 43, 127, 84, 41, 121, 81, 39, \
121, 81, 41, 123, 81, 41, 121, 79, 38, 122, \
81, 39, 123, 82, 38, 120, 79, 38, 117, 76, \
36, 117, 75, 35, 120, 78, 38, 121, 79, 37, \
119, 78, 35, 120, 78, 37, 119, 77, 35, 119, \
78, 35, 114, 75, 34, 115, 76, 34, 113, 74, \
32, 124, 83, 41, 122, 82, 41, 127, 85, 44, \
124, 83, 41, 120, 79, 38, 124, 81, 42, 124, \
82, 41, 124, 83, 42, 126, 84, 43, 122, 80, \
39, 122, 81, 39, 121, 80, 40, 125, 84, 42, \
125, 83, 42, 121, 80, 38, 122, 81, 38, 122, \
81, 39, 123, 82, 40, 122, 82, 39, 119, 79, \
39, 118, 79, 39, 116, 77, 37, 116, 76, 35, \
121, 78, 38, 118, 76, 36, 119, 77, 35, 120, \
78, 36, 118, 77, 35, 117, 76, 34, 115, 75, \
33, 115, 77, 35, 115, 75, 33, 123, 83, 43, \
117, 79, 40, 120, 80, 40, 124, 82, 41, 115, \
76, 38, 120, 78, 40, 121, 80, 40, 119, 79, \
38, 121, 80, 40, 117, 77, 38, 119, 79, 38, \
116, 77, 38, 120, 79, 39, 121, 80, 39, 118, \
78, 37, 120, 79, 39, 122, 81, 39, 120, 80, \
40, 118, 78, 39, 119, 79, 39, 120, 80, 39, \
116, 77, 37, 113, 75, 36, 117, 76, 36, 114, \
75, 34, 115, 76, 36, 117, 76, 35, 113, 73, \
33, 113, 74, 32, 116, 77, 33, 113, 75, 34, \
114, 74, 32, 124, 83, 43, 116, 77, 39, 117, \
78, 39, 117, 78, 37, 113, 75, 38, 113, 75, \
39, 114, 76, 38, 115, 76, 39, 114, 74, 38, \
110, 72, 37, 116, 77, 39, 116, 77, 39, 115, \
76, 37, 117, 77, 38, 115, 77, 38, 116, 78, \
40, 117, 78, 39, 114, 75, 38, 113, 75, 37, \
115, 76, 37, 117, 77, 35, 118, 78, 38, 110, \
73, 35, 113, 74, 35, 111, 73, 33, 112, 74, \
35, 115, 76, 35, 106, 69, 32, 108, 71, 32, \
112, 74, 33, 109, 71, 34, 105, 69, 31, 123, \
82, 41, 116, 77, 38, 120, 80, 41, 119, 79, \
38, 117, 77, 38, 114, 75, 38, 117, 78, 40, \
115, 76, 40, 113, 74, 39, 113, 76, 39, 117, \
78, 38, 119, 79, 38, 117, 77, 38, 114, 75, \
37, 115, 78, 39, 115, 78, 39, 116, 77, 38, \
118, 78, 38, 118, 78, 37, 118, 78, 38, 114, \
74, 35, 116, 77, 35, 117, 78, 35, 116, 76, \
35, 120, 81, 40, 123, 84, 44, 119, 80, 40, \
117, 81, 44, 121, 84, 48, 119, 81, 42, 112, \
73, 38, 112, 81, 47, 120, 81, 43, 112, 75, \
38, 115, 76, 39, 116, 77, 39, 117, 78, 40, \
113, 75, 39, 114, 76, 39, 117, 78, 40, 116, \
78, 39, 120, 82, 42, 117, 78, 38, 114, 76, \
36, 118, 79, 38, 118, 77, 37, 119, 80, 40, \
120, 81, 41, 118, 79, 40, 116, 78, 38, 121, \
82, 39, 116, 78, 38, 108, 71, 35, 110, 73, \
35, 116, 79, 38, 111, 74, 37, 116, 81, 42, \
127, 91, 55, 125, 89, 54, 124, 89, 53, 130, \
95, 59, 127, 93, 58, 120, 85, 52, 118, 88, \
53, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '27904';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1aba22eedbaea2edf1238b3885a3cd5b63';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_automobile7';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{223, 241, 255, 222, 240, 255, 220, 238, 255, 221, 238, \
255, 221, 238, 255, 221, 238, 255, 222, 238, 252, \
229, 241, 253, 234, 242, 251, 241, 245, 252, 246, \
249, 252, 246, 249, 249, 248, 253, 254, 247, 252, \
255, 248, 253, 255, 239, 246, 255, 216, 228, 252, \
212, 224, 252, 209, 224, 247, 202, 222, 251, 199, \
220, 252, 199, 219, 247, 202, 219, 244, 216, 226, \
244, 238, 243, 251, 246, 245, 252, 243, 241, 247, \
227, 230, 242, 208, 217, 238, 211, 221, 240, 192, \
210, 238, 179, 203, 239, 210, 228, 243, 201, 218, \
236, 218, 234, 253, 219, 236, 252, 221, 237, 253, \
223, 237, 253, 227, 239, 250, 239, 247, 252, 246, \
250, 252, 251, 250, 249, 250, 249, 249, 251, 251, \
248, 252, 254, 248, 249, 250, 248, 247, 247, 247, \
244, 247, 250, 234, 240, 250, 222, 230, 246, 207, \
221, 246, 197, 217, 249, 195, 215, 249, 194, 215, \
245, 201, 220, 244, 219, 231, 248, 234, 238, 250, \
233, 236, 249, 226, 231, 244, 219, 228, 243, 214, \
224, 244, 218, 227, 245, 191, 211, 238, 174, 202, \
238, 162, 179, 196, 148, 165, 184, 198, 215, 232, \
205, 219, 233, 226, 237, 247, 233, 240, 251, 235, \
240, 248, 238, 243, 246, 242, 245, 246, 248, 249, \
248, 252, 252, 253, 252, 253, 251, 250, 251, 247, \
246, 245, 246, 242, 239, 250, 242, 242, 249, 244, \
247, 246, 238, 245, 247, 214, 229, 251, 198, 218, \
249, 196, 216, 249, 195, 217, 247, 197, 219, 243, \
204, 221, 242, 210, 221, 242, 207, 218, 241, 201, \
217, 239, 200, 219, 240, 199, 216, 240, 185, 206, \
231, 172, 199, 231, 167, 197, 234, 167, 184, 204, \
152, 169, 187, 208, 223, 236, 206, 215, 226, 237, \
242, 246, 249, 251, 254, 249, 249, 252, 247, 249, \
251, 240, 244, 248, 236, 241, 248, 238, 243, 249, \
241, 246, 248, 243, 245, 248, 242, 241, 249, 240, \
239, 247, 240, 241, 248, 238, 241, 247, 231, 237, \
246, 213, 229, 248, 200, 221, 248, 197, 218, 247, \
194, 216, 244, 191, 216, 240, 191, 215, 239, 190, \
211, 241, 187, 208, 240, 181, 206, 237, 180, 206, \
235, 178, 202, 229, 148, 174, 201, 179, 203, 230, \
193, 210, 235, 163, 180, 198, 169, 182, 196, 231, \
240, 248, 219, 226, 234, 242, 246, 248, 255, 255, \
254, 254, 254, 253, 250, 251, 251, 246, 250, 249, \
236, 242, 248, 229, 236, 245, 230, 237, 245, 232, \
238, 247, 236, 240, 250, 233, 234, 240, 232, 235, \
243, 230, 236, 249, 220, 230, 246, 206, 224, 244, \
199, 219, 248, 194, 216, 245, 191, 214, 240, 188, \
214, 238, 186, 212, 239, 184, 211, 240, 180, 208, \
239, 175, 204, 238, 174, 203, 236, 173, 201, 230, \
152, 175, 203, 207, 219, 236, 225, 228, 239, 129, \
140, 151, 142, 151, 160, 208, 213, 219, 202, 208, \
213, 233, 237, 238, 229, 229, 226, 228, 228, 225, \
243, 244, 242, 245, 248, 246, 238, 244, 248, 227, \
236, 247, 223, 233, 246, 221, 231, 244, 222, 231, \
244, 208, 213, 224, 208, 216, 227, 220, 231, 246, \
210, 226, 243, 201, 222, 243, 197, 219, 247, 193, \
217, 246, 191, 215, 242, 190, 214, 241, 188, 213, \
242, 186, 213, 242, 183, 211, 239, 179, 207, 238, \
178, 205, 237, 177, 205, 234, 166, 188, 216, 206, \
219, 235, 219, 227, 239, 80, 83, 86, 82, 88, \
93, 129, 132, 136, 134, 136, 138, 145, 147, 146, \
135, 134, 130, 132, 130, 126, 162, 161, 159, 225, \
228, 230, 234, 242, 248, 223, 235, 248, 219, 232, \
248, 219, 232, 248, 217, 230, 245, 206, 217, 231, \
208, 221, 235, 213, 229, 245, 207, 225, 242, 204, \
224, 244, 201, 222, 246, 198, 220, 247, 196, 218, \
246, 195, 216, 245, 193, 215, 245, 190, 214, 245, \
186, 213, 241, 183, 209, 237, 180, 206, 235, 180, \
206, 234, 165, 187, 213, 190, 211, 231, 194, 214, \
235, 78, 78, 76, 75, 78, 80, 88, 89, 89, \
86, 84, 83, 98, 97, 94, 106, 105, 100, 105, \
101, 96, 115, 113, 112, 208, 211, 218, 229, 238, \
246, 223, 235, 247, 223, 234, 249, 224, 236, 250, \
222, 234, 249, 207, 222, 237, 212, 228, 243, 215, \
231, 246, 210, 226, 241, 211, 226, 241, 210, 227, \
242, 206, 223, 244, 201, 218, 243, 197, 216, 241, \
195, 215, 242, 193, 214, 242, 188, 213, 240, 185, \
211, 236, 184, 210, 234, 179, 205, 231, 161, 185, \
209, 178, 205, 228, 179, 205, 230, 69, 71, 71, \
69, 72, 72, 91, 90, 87, 90, 87, 83, 103, \
100, 96, 104, 102, 96, 107, 103, 96, 125, 122, \
122, 216, 219, 228, 225, 235, 244, 225, 234, 243, \
226, 234, 245, 226, 234, 245, 219, 228, 240, 201, \
216, 229, 208, 222, 236, 217, 230, 243, 217, 229, \
242, 223, 233, 243, 222, 233, 242, 214, 226, 241, \
199, 213, 233, 196, 213, 233, 200, 218, 240, 194, \
215, 239, 191, 215, 240, 180, 205, 226, 170, 196, \
215, 179, 204, 228, 153, 176, 199, 173, 202, 224, \
177, 203, 226, 69, 76, 80, 66, 68, 70, 87, \
85, 82, 83, 83, 80, 96, 95, 91, 100, 98, \
93, 105, 101, 94, 124, 121, 119, 209, 214, 220, \
213, 221, 230, 217, 224, 231, 224, 232, 241, 225, \
235, 245, 207, 218, 230, 187, 202, 214, 209, 222, \
233, 226, 234, 245, 228, 234, 243, 224, 232, 238, \
219, 228, 235, 217, 228, 238, 206, 217, 232, 207, \
220, 235, 207, 224, 239, 196, 217, 238, 195, 214, \
235, 137, 151, 159, 93, 109, 110, 159, 178, 188, \
109, 124, 130, 141, 161, 166, 147, 165, 182, 95, \
102, 108, 83, 86, 91, 93, 90, 91, 87, 87, \
84, 95, 93, 89, 95, 91, 86, 99, 93, 88, \
119, 116, 115, 203, 209, 214, 194, 203, 209, 188, \
198, 204, 215, 227, 234, 217, 227, 234, 210, 220, \
227, 198, 205, 210, 151, 156, 162, 195, 197, 204, \
232, 234, 240, 182, 185, 190, 186, 188, 193, 227, \
230, 235, 217, 218, 226, 203, 205, 213, 197, 204, \
209, 201, 211, 221, 175, 187, 192, 99, 105, 96, \
56, 62, 48, 95, 107, 103, 75, 87, 81, 71, \
86, 77, 88, 100, 104, 166, 173, 178, 150, 156, \
163, 128, 130, 138, 112, 117, 122, 116, 120, 123, \
114, 118, 120, 106, 108, 108, 109, 111, 113, 152, \
159, 165, 126, 132, 137, 116, 126, 133, 193, 204, \
208, 173, 182, 182, 143, 153, 153, 155, 162, 167, \
127, 135, 142, 164, 175, 184, 198, 209, 220, 164, \
172, 182, 165, 170, 178, 189, 192, 198, 177, 179, \
186, 138, 143, 150, 114, 122, 126, 141, 145, 150, \
123, 131, 130, 86, 91, 83, 84, 87, 79, 82, \
88, 86, 65, 76, 72, 49, 58, 51, 57, 63, \
61, 221, 234, 237, 126, 140, 148, 73, 86, 99, \
56, 71, 85, 83, 100, 111, 99, 118, 126, 106, \
121, 125, 115, 125, 129, 104, 112, 119, 106, 106, \
111, 114, 114, 119, 150, 149, 152, 138, 141, 143, \
107, 121, 129, 128, 148, 163, 151, 174, 190, 144, \
169, 187, 138, 163, 180, 151, 170, 185, 152, 169, \
183, 131, 146, 159, 113, 124, 137, 84, 99, 112, \
43, 63, 76, 52, 67, 79, 65, 76, 85, 81, \
89, 97, 110, 115, 123, 93, 96, 101, 73, 74, \
73, 81, 78, 73, 93, 89, 85, 121, 140, 140, \
58, 81, 88, 61, 81, 96, 57, 73, 82, 77, \
94, 101, 96, 117, 120, 104, 125, 128, 105, 125, \
129, 105, 114, 121, 118, 111, 118, 98, 83, 88, \
98, 84, 86, 125, 125, 133, 142, 161, 180, 154, \
179, 200, 161, 186, 204, 149, 175, 192, 158, 182, \
195, 177, 194, 203, 153, 171, 181, 127, 146, 157, \
113, 126, 137, 63, 78, 92, 41, 67, 82, 49, \
71, 87, 65, 84, 97, 63, 80, 94, 82, 95, \
107, 108, 115, 115, 148, 140, 127, 154, 139, 125, \
151, 141, 126, 78, 92, 91, 56, 76, 82, 68, \
88, 98, 80, 95, 101, 73, 89, 93, 93, 110, \
113, 99, 118, 124, 104, 126, 131, 100, 116, 119, \
78, 82, 88, 64, 54, 58, 76, 69, 73, 126, \
133, 142, 145, 161, 176, 164, 182, 193, 183, 195, \
203, 168, 181, 185, 174, 188, 189, 179, 190, 192, \
158, 172, 178, 135, 151, 157, 111, 124, 134, 74, \
88, 99, 82, 102, 111, 64, 87, 101, 73, 98, \
109, 70, 93, 105, 87, 109, 120, 101, 117, 121, \
142, 137, 130, 157, 144, 137, 134, 126, 115, 48, \
55, 56, 38, 48, 52, 30, 42, 47, 28, 39, \
42, 28, 39, 42, 53, 63, 66, 74, 85, 90, \
102, 116, 118, 120, 134, 132, 136, 143, 144, 164, \
161, 163, 179, 180, 180, 188, 196, 198, 181, 190, \
194, 194, 202, 204, 193, 195, 196, 187, 187, 185, \
176, 179, 177, 165, 171, 173, 156, 166, 173, 130, \
140, 146, 88, 97, 105, 93, 101, 107, 89, 98, \
103, 55, 70, 83, 49, 71, 85, 49, 73, 85, \
79, 104, 114, 99, 122, 129, 107, 116, 118, 125, \
126, 126, 98, 99, 93, 16, 19, 23, 17, 20, \
23, 16, 19, 21, 35, 38, 39, 78, 81, 82, \
129, 132, 133, 174, 177, 177, 202, 207, 205, 217, \
223, 220, 228, 227, 226, 232, 229, 228, 228, 228, \
224, 226, 228, 224, 226, 228, 227, 214, 219, 222, \
194, 201, 207, 171, 176, 183, 142, 147, 153, 113, \
124, 135, 96, 110, 124, 83, 95, 109, 65, 73, \
83, 57, 65, 71, 55, 64, 72, 52, 63, 80, \
51, 69, 86, 50, 71, 83, 61, 82, 90, 75, \
96, 100, 72, 85, 90, 86, 92, 92, 108, 107, \
101, 20, 21, 25, 19, 19, 21, 32, 32, 32, \
121, 122, 122, 152, 153, 153, 142, 144, 143, 160, \
160, 159, 176, 178, 177, 187, 191, 193, 205, 204, \
206, 220, 220, 221, 227, 229, 224, 220, 221, 217, \
187, 189, 193, 145, 148, 159, 99, 113, 130, 73, \
91, 109, 66, 81, 97, 62, 81, 99, 61, 82, \
103, 64, 82, 99, 66, 79, 91, 67, 79, 89, \
67, 81, 93, 64, 77, 92, 65, 78, 90, 74, \
87, 95, 67, 81, 85, 66, 78, 80, 65, 69, \
74, 40, 39, 39, 109, 98, 93, 9, 10, 11, \
6, 8, 10, 50, 54, 54, 132, 138, 137, 109, \
114, 113, 57, 63, 61, 61, 65, 64, 66, 71, \
75, 92, 99, 108, 138, 142, 151, 158, 161, 166, \
169, 171, 170, 155, 159, 161, 110, 114, 126, 94, \
85, 96, 72, 81, 98, 63, 83, 103, 68, 83, \
98, 65, 79, 90, 62, 77, 90, 72, 83, 92, \
73, 79, 86, 71, 79, 85, 63, 74, 77, 68, \
74, 76, 74, 78, 80, 81, 86, 87, 80, 86, \
87, 71, 76, 76, 77, 78, 75, 73, 74, 67, \
127, 118, 111, 8, 9, 7, 24, 25, 24, 121, \
124, 122, 171, 175, 171, 138, 142, 139, 79, 82, \
78, 66, 69, 66, 62, 66, 68, 106, 110, 115, \
126, 130, 134, 110, 112, 114, 110, 112, 114, 119, \
126, 132, 111, 115, 126, 104, 87, 90, 81, 80, \
89, 73, 87, 99, 60, 70, 77, 29, 34, 37, \
26, 30, 34, 62, 64, 67, 71, 71, 73, 71, \
73, 73, 70, 73, 71, 75, 76, 73, 76, 78, \
76, 77, 80, 79, 67, 70, 71, 35, 37, 38, \
83, 82, 76, 150, 148, 139, 168, 163, 153, 15, \
15, 13, 38, 38, 36, 102, 102, 99, 133, 134, \
128, 141, 141, 140, 143, 143, 143, 149, 150, 149, \
156, 157, 156, 196, 197, 196, 197, 199, 197, 158, \
160, 159, 166, 170, 172, 152, 159, 166, 90, 98, \
108, 76, 80, 90, 72, 82, 94, 73, 83, 89, \
34, 37, 37, 14, 15, 17, 11, 12, 14, 40, \
40, 43, 69, 71, 71, 70, 72, 71, 70, 72, \
71, 70, 72, 71, 68, 72, 71, 71, 75, 75, \
57, 61, 63, 34, 37, 39, 83, 83, 78, 150, \
149, 143, 157, 154, 149, 46, 48, 46, 51, 53, \
52, 45, 47, 44, 60, 62, 57, 85, 86, 89, \
98, 98, 105, 107, 107, 110, 128, 129, 127, 144, \
145, 143, 160, 160, 159, 174, 177, 176, 172, 178, \
180, 129, 136, 142, 79, 88, 96, 72, 86, 94, \
74, 89, 97, 64, 70, 72, 21, 21, 18, 23, \
24, 26, 15, 16, 18, 30, 31, 33, 61, 63, \
63, 60, 62, 61, 56, 58, 57, 51, 54, 53, \
47, 50, 49, 43, 47, 47, 38, 42, 45, 58, \
61, 62, 115, 114, 106, 155, 152, 146, 156, 152, \
149, 15, 18, 18, 13, 16, 17, 38, 42, 40, \
59, 63, 60, 82, 85, 89, 83, 85, 92, 55, \
56, 58, 64, 64, 60, 69, 68, 65, 72, 72, \
68, 78, 80, 77, 86, 90, 88, 84, 87, 88, \
77, 80, 81, 77, 76, 69, 75, 75, 71, 48, \
51, 51, 14, 16, 17, 30, 31, 33, 20, 21, \
23, 22, 23, 25, 43, 44, 45, 39, 41, 40, \
34, 36, 35, 30, 32, 31, 29, 32, 31, 21, \
25, 25, 22, 26, 28, 75, 77, 78, 154, 150, \
140, 166, 159, 151, 170, 160, 155, 21, 25, 25, \
24, 27, 28, 34, 38, 37, 47, 51, 48, 67, \
71, 72, 70, 73, 73, 35, 37, 33, 47, 46, \
42, 51, 50, 46, 53, 52, 48, 62, 61, 55, \
74, 73, 67, 74, 72, 68, 67, 65, 62, 67, \
65, 62, 71, 69, 67, 37, 39, 38, 13, 16, \
17, 33, 34, 36, 20, 21, 24, 18, 19, 21, \
28, 30, 30, 21, 23, 22, 16, 18, 17, 12, \
14, 13, 13, 17, 15, 9, 13, 12, 9, 13, \
15, 42, 46, 48, 87, 89, 90, 106, 107, 107, \
125, 124, 124, 77, 77, 75, 87, 87, 84, 99, \
100, 94, 116, 116, 106, 128, 127, 115, 128, 125, \
110, 63, 61, 50, 24, 24, 22, 31, 31, 30, \
31, 31, 31, 41, 41, 37, 44, 44, 39, 43, \
42, 38, 46, 45, 42, 48, 51, 52, 54, 56, \
56, 25, 27, 25, 14, 16, 16, 33, 34, 39, \
18, 19, 23, 10, 11, 13, 10, 10, 10, 7, \
6, 5, 7, 8, 6, 8, 11, 9, 11, 14, \
12, 14, 18, 18, 15, 20, 23, 24, 31, 35, \
33, 43, 49, 43, 54, 59, 54, 64, 70, 155, \
150, 144, 158, 154, 146, 164, 159, 149, 169, 160, \
149, 163, 153, 142, 147, 137, 124, 91, 85, 77, \
11, 11, 10, 10, 10, 10, 16, 16, 18, 21, \
21, 21, 23, 23, 21, 24, 24, 22, 22, 22, \
20, 18, 19, 17, 14, 14, 12, 10, 11, 8, \
14, 15, 15, 31, 32, 35, 14, 15, 18, 6, \
8, 7, 9, 10, 8, 12, 13, 12, 15, 18, \
18, 18, 23, 25, 25, 29, 32, 30, 35, 39, \
35, 42, 47, 40, 49, 54, 48, 57, 60, 53, \
61, 63, 70, 77, 78, 167, 159, 150, 166, 158, \
147, 168, 159, 148, 139, 128, 120, 86, 78, 73, \
53, 49, 46, 31, 30, 29, 11, 12, 10, 7, \
8, 8, 6, 7, 9, 5, 6, 6, 5, 6, \
5, 4, 6, 4, 4, 5, 3, 4, 3, 3, \
5, 3, 3, 8, 6, 6, 11, 10, 10, 21, \
23, 23, 12, 15, 14, 13, 15, 14, 16, 22, \
20, 20, 28, 29, 26, 33, 37, 31, 38, 45, \
37, 43, 50, 42, 48, 55, 46, 53, 60, 50, \
56, 62, 58, 62, 63, 81, 82, 79, 121, 118, \
112, 173, 164, 154, 169, 161, 149, 165, 158, 145, \
127, 123, 112, 61, 62, 53, 23, 28, 23, 11, \
16, 13, 12, 15, 12, 10, 13, 12, 9, 12, \
13, 9, 12, 12, 8, 11, 11, 7, 10, 10, \
7, 10, 10, 7, 8, 9, 7, 7, 9, 6, \
6, 7, 6, 7, 8, 11, 14, 15, 20, 24, \
25, 26, 29, 32, 29, 36, 38, 33, 42, 44, \
39, 47, 51, 44, 50, 56, 49, 53, 57, 60, \
64, 66, 73, 76, 78, 85, 87, 87, 106, 105, \
102, 139, 135, 128, 151, 143, 134, 170, 163, 155, \
163, 157, 146, 158, 152, 139, 158, 152, 138, 138, \
134, 122, 98, 96, 87, 59, 61, 54, 30, 34, \
31, 18, 22, 21, 15, 19, 19, 15, 18, 19, \
13, 17, 19, 13, 17, 19, 13, 18, 19, 13, \
19, 20, 15, 21, 21, 16, 21, 22, 17, 23, \
24, 26, 31, 34, 35, 40, 45, 40, 44, 51, \
43, 49, 56, 47, 54, 59, 56, 61, 63, 70, \
74, 72, 93, 95, 91, 118, 118, 112, 133, 131, \
124, 137, 133, 124, 140, 135, 126, 152, 147, 138, \
158, 152, 144, 145, 142, 135, 157, 151, 137, 159, \
152, 139, 162, 152, 139, 162, 152, 139, 162, 153, \
141, 150, 144, 131, 120, 118, 105, 94, 91, 81, \
65, 62, 55, 42, 41, 39, 28, 30, 32, 22, \
26, 30, 22, 28, 33, 26, 33, 38, 30, 37, \
41, 34, 41, 45, 38, 45, 50, 43, 50, 55, \
45, 53, 57, 50, 57, 61, 63, 67, 69, 86, \
87, 85, 117, 115, 108, 142, 139, 127, 155, 152, \
140, 156, 152, 141, 157, 152, 140, 155, 149, 136, \
152, 145, 135, 150, 144, 134, 158, 153, 144, 120, \
117, 111, 165, 157, 142, 168, 160, 146, 166, 158, \
145, 166, 158, 145, 166, 158, 145, 167, 159, 144, \
167, 159, 144, 163, 156, 140, 152, 144, 130, 132, \
126, 113, 108, 104, 95, 83, 84, 77, 63, 66, \
63, 53, 55, 56, 53, 54, 56, 55, 56, 57, \
56, 58, 59, 65, 66, 66, 83, 85, 82, 103, \
106, 101, 129, 129, 121, 151, 148, 138, 161, 156, \
144, 164, 156, 143, 161, 155, 142, 159, 153, 141, \
161, 155, 143, 159, 153, 141, 154, 147, 139, 149, \
141, 133, 157, 150, 141, 135, 130, 124, 169, 160, \
148, 169, 161, 150, 165, 157, 145, 166, 158, 146, \
168, 160, 148, 167, 159, 148, 167, 158, 147, 166, \
157, 144, 168, 160, 144, 173, 161, 144, 171, 159, \
142, 163, 154, 139, 149, 142, 129, 129, 123, 114, \
110, 105, 96, 124, 119, 110, 130, 124, 115, 135, \
126, 117, 149, 141, 130, 157, 149, 138, 159, 152, \
140, 164, 159, 147, 164, 157, 147, 163, 156, 148, \
164, 157, 148, 165, 158, 148, 166, 159, 148, 163, \
156, 146, 153, 146, 138, 150, 143, 136, 159, 152, \
144, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '28214';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a747d1dd6cc1b6768eb0f6f9e7a8fdc40';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_truck6';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{104, 133, 150, 107, 135, 153, 111, 136, 154, 114, 136, \
154, 121, 140, 158, 126, 143, 162, 127, 142, 161, \
133, 146, 164, 134, 146, 155, 129, 149, 153, 126, \
154, 158, 128, 156, 161, 136, 153, 165, 145, 150, \
169, 147, 149, 170, 141, 151, 171, 134, 155, 171, \
131, 153, 166, 131, 152, 164, 130, 151, 163, 129, \
150, 162, 127, 148, 160, 125, 146, 158, 124, 145, \
157, 122, 144, 156, 122, 143, 155, 121, 140, 152, \
119, 139, 153, 114, 139, 156, 110, 138, 157, 108, \
139, 159, 107, 138, 158, 102, 134, 152, 106, 136, \
154, 109, 137, 154, 112, 136, 152, 118, 138, 154, \
122, 141, 156, 124, 142, 157, 131, 147, 162, 132, \
147, 160, 126, 151, 161, 120, 157, 164, 120, 160, \
166, 126, 159, 167, 132, 156, 167, 132, 156, 167, \
124, 160, 167, 119, 162, 169, 129, 152, 173, 134, \
148, 175, 133, 147, 174, 132, 147, 174, 130, 145, \
172, 127, 142, 169, 127, 141, 168, 126, 140, 167, \
123, 140, 166, 111, 145, 163, 104, 148, 162, 102, \
146, 164, 103, 144, 163, 104, 142, 161, 107, 138, \
158, 99, 134, 154, 105, 136, 154, 109, 137, 154, \
113, 138, 153, 121, 142, 154, 123, 142, 152, 125, \
142, 151, 134, 148, 158, 131, 147, 163, 124, 150, \
163, 117, 157, 164, 117, 160, 165, 122, 159, 163, \
127, 157, 159, 125, 158, 158, 117, 162, 157, 112, \
164, 158, 128, 152, 171, 135, 147, 177, 134, 146, \
176, 133, 146, 175, 131, 144, 173, 128, 141, 170, \
128, 140, 170, 127, 139, 168, 124, 139, 168, 112, \
148, 164, 105, 151, 163, 104, 149, 164, 104, 147, \
164, 107, 144, 162, 110, 137, 155, 98, 135, 154, \
104, 137, 154, 109, 137, 152, 117, 141, 152, 126, \
144, 152, 127, 141, 146, 131, 141, 144, 138, 146, \
150, 134, 142, 156, 127, 145, 158, 122, 152, 158, \
123, 155, 155, 132, 154, 153, 141, 152, 149, 142, \
152, 145, 135, 156, 142, 130, 158, 143, 139, 151, \
155, 143, 147, 161, 142, 146, 160, 141, 146, 160, \
139, 144, 158, 137, 141, 155, 136, 141, 155, 135, \
140, 154, 134, 139, 152, 131, 141, 146, 127, 141, \
145, 123, 141, 148, 120, 141, 151, 118, 139, 152, \
117, 135, 149, 99, 135, 154, 104, 136, 152, 111, \
136, 149, 120, 137, 146, 129, 139, 142, 127, 130, \
129, 124, 122, 119, 134, 129, 127, 141, 135, 143, \
137, 139, 147, 135, 144, 145, 141, 145, 141, 156, \
145, 139, 173, 144, 136, 177, 141, 129, 173, 143, \
124, 168, 146, 124, 163, 143, 128, 162, 141, 130, \
160, 140, 129, 159, 138, 127, 156, 136, 125, 154, \
134, 123, 152, 131, 120, 149, 129, 118, 151, 128, \
117, 160, 119, 107, 160, 117, 108, 152, 120, 116, \
142, 123, 125, 133, 127, 135, 126, 132, 143, 101, \
134, 152, 105, 131, 147, 114, 132, 142, 126, 132, \
137, 141, 135, 135, 119, 103, 98, 90, 68, 58, \
110, 84, 74, 132, 107, 108, 149, 131, 131, 151, \
133, 128, 142, 112, 104, 154, 103, 92, 171, 93, \
83, 181, 88, 75, 177, 84, 65, 175, 89, 64, \
170, 96, 66, 168, 99, 66, 164, 95, 62, 155, \
85, 53, 150, 80, 47, 158, 89, 56, 150, 80, \
48, 145, 76, 43, 152, 78, 45, 167, 62, 33, \
169, 59, 35, 156, 65, 50, 137, 74, 67, 138, \
104, 106, 134, 127, 136, 105, 132, 149, 114, 131, \
144, 126, 130, 138, 141, 130, 132, 149, 122, 118, \
130, 90, 80, 139, 89, 75, 152, 100, 86, 122, \
80, 75, 158, 122, 117, 167, 127, 117, 127, 71, \
59, 142, 58, 46, 166, 50, 40, 183, 47, 35, \
187, 47, 30, 183, 48, 24, 181, 54, 20, 181, \
57, 18, 181, 57, 18, 178, 54, 15, 175, 51, \
12, 178, 54, 15, 182, 58, 20, 180, 57, 18, \
176, 49, 11, 194, 43, 7, 190, 38, 6, 167, \
42, 19, 142, 51, 40, 149, 97, 97, 137, 124, \
133, 110, 129, 145, 121, 127, 139, 126, 116, 121, \
149, 120, 118, 154, 105, 97, 137, 70, 56, 172, \
92, 74, 177, 96, 78, 133, 75, 68, 166, 119, \
112, 169, 118, 105, 138, 70, 56, 158, 61, 47, \
178, 47, 36, 188, 38, 26, 198, 42, 26, 199, \
46, 24, 197, 45, 15, 198, 45, 12, 199, 47, \
14, 203, 50, 18, 206, 54, 21, 200, 48, 15, \
202, 49, 17, 201, 48, 16, 194, 40, 8, 200, \
37, 2, 199, 43, 10, 183, 54, 30, 146, 54, \
44, 147, 96, 98, 133, 121, 133, 113, 126, 138, \
119, 116, 125, 106, 82, 84, 131, 83, 79, 144, \
72, 61, 133, 40, 22, 158, 47, 26, 159, 51, \
31, 135, 66, 61, 168, 119, 114, 169, 119, 107, \
143, 80, 65, 143, 54, 41, 170, 52, 40, 183, \
49, 35, 187, 51, 30, 183, 50, 27, 183, 50, \
28, 183, 49, 29, 183, 49, 29, 185, 51, 32, \
186, 52, 32, 180, 46, 26, 185, 51, 31, 186, \
52, 32, 183, 48, 27, 179, 47, 18, 171, 52, \
25, 151, 55, 37, 127, 60, 54, 131, 97, 103, \
123, 120, 136, 116, 123, 133, 116, 104, 111, 81, \
46, 47, 109, 47, 41, 136, 47, 34, 152, 39, \
20, 165, 31, 8, 165, 37, 16, 136, 64, 61, \
154, 110, 110, 156, 115, 106, 118, 69, 57, 117, \
47, 34, 136, 44, 31, 144, 41, 28, 138, 38, \
19, 139, 46, 21, 137, 52, 38, 135, 53, 44, \
135, 53, 43, 133, 50, 41, 133, 50, 41, 144, \
61, 52, 125, 43, 34, 100, 18, 10, 91, 12, \
5, 101, 26, 9, 93, 25, 9, 75, 23, 15, \
106, 75, 76, 126, 115, 126, 112, 120, 140, 113, \
122, 133, 113, 103, 107, 63, 30, 27, 89, 29, \
20, 121, 33, 19, 162, 46, 27, 176, 35, 13, \
177, 37, 18, 135, 51, 48, 103, 48, 50, 93, \
47, 43, 76, 32, 26, 103, 48, 38, 76, 10, \
0, 74, 4, 0, 92, 26, 10, 145, 89, 66, \
144, 110, 103, 136, 111, 111, 138, 112, 112, 133, \
107, 106, 132, 105, 105, 143, 114, 114, 80, 50, \
49, 38, 7, 6, 48, 18, 16, 66, 36, 26, \
64, 38, 26, 46, 30, 24, 100, 96, 98, 114, \
122, 134, 101, 119, 143, 101, 126, 139, 87, 96, \
94, 37, 28, 16, 60, 30, 14, 78, 22, 7, \
124, 36, 20, 167, 42, 25, 179, 37, 20, 159, \
39, 31, 130, 30, 26, 113, 31, 26, 89, 25, \
22, 79, 27, 23, 65, 19, 14, 81, 37, 31, \
74, 30, 19, 107, 71, 59, 125, 123, 125, 125, \
137, 147, 126, 137, 147, 122, 132, 142, 122, 128, \
138, 136, 136, 143, 70, 63, 68, 30, 18, 18, \
53, 35, 30, 63, 45, 33, 76, 64, 45, 43, \
40, 18, 92, 98, 83, 110, 125, 127, 94, 116, \
140, 95, 125, 135, 59, 74, 65, 28, 29, 8, \
69, 54, 30, 61, 25, 8, 91, 23, 9, 151, \
43, 24, 164, 36, 14, 157, 42, 21, 135, 39, \
20, 132, 56, 39, 112, 58, 44, 74, 41, 27, \
52, 30, 15, 75, 57, 40, 60, 39, 21, 68, \
49, 33, 103, 106, 101, 113, 126, 128, 115, 128, \
130, 118, 130, 133, 121, 129, 132, 132, 134, 134, \
103, 97, 93, 35, 21, 16, 39, 20, 10, 62, \
42, 20, 68, 52, 20, 69, 63, 25, 111, 115, \
83, 111, 122, 112, 98, 115, 131, 97, 120, 125, \
92, 101, 86, 53, 51, 22, 59, 46, 16, 47, \
16, 1, 75, 17, 2, 143, 52, 27, 160, 54, \
25, 142, 60, 25, 126, 64, 27, 135, 89, 55, \
133, 106, 74, 98, 88, 56, 46, 45, 15, 41, \
42, 12, 57, 54, 21, 104, 98, 66, 127, 119, \
95, 127, 119, 100, 120, 114, 98, 118, 113, 98, \
120, 114, 99, 111, 101, 83, 111, 96, 74, 79, \
58, 35, 64, 39, 11, 68, 42, 7, 68, 47, \
3, 108, 95, 43, 143, 138, 92, 128, 130, 105, \
110, 117, 121, 101, 117, 116, 126, 128, 104, 71, \
63, 27, 40, 27, 0, 42, 18, 5, 63, 20, \
5, 106, 37, 9, 120, 38, 9, 115, 55, 15, \
112, 68, 19, 102, 71, 21, 95, 77, 29, 75, \
69, 24, 37, 37, 6, 36, 37, 5, 64, 62, \
19, 109, 100, 54, 124, 99, 56, 129, 99, 58, \
127, 102, 63, 129, 107, 70, 139, 118, 82, 136, \
116, 77, 141, 117, 76, 157, 129, 84, 146, 115, \
67, 130, 99, 49, 134, 107, 47, 167, 147, 79, \
181, 167, 106, 177, 169, 129, 152, 148, 138, 124, \
133, 126, 156, 149, 119, 143, 128, 80, 140, 122, \
71, 144, 123, 75, 156, 124, 79, 176, 127, 81, \
188, 127, 78, 190, 136, 80, 196, 149, 90, 184, \
145, 87, 181, 150, 94, 172, 146, 92, 153, 131, \
79, 156, 133, 82, 167, 141, 89, 185, 155, 100, \
194, 153, 95, 203, 159, 101, 200, 162, 106, 197, \
164, 110, 198, 169, 117, 204, 178, 124, 205, 178, \
121, 204, 174, 116, 207, 175, 115, 212, 181, 119, \
214, 186, 116, 211, 189, 112, 201, 184, 112, 200, \
187, 138, 171, 162, 143, 134, 136, 125, 184, 170, \
133, 199, 177, 119, 203, 179, 115, 199, 176, 114, \
200, 174, 116, 213, 176, 120, 222, 174, 117, 227, \
171, 110, 233, 177, 115, 230, 176, 116, 232, 180, \
120, 221, 170, 111, 219, 167, 110, 234, 181, 124, \
234, 178, 122, 232, 177, 118, 225, 175, 108, 229, \
182, 113, 221, 179, 114, 209, 173, 110, 205, 174, \
114, 205, 176, 115, 208, 180, 117, 207, 178, 112, \
206, 176, 109, 207, 178, 113, 213, 186, 114, 208, \
187, 106, 204, 186, 111, 205, 190, 137, 176, 168, \
145, 133, 133, 119, 199, 178, 137, 198, 164, 101, \
195, 161, 89, 198, 169, 98, 199, 171, 105, 198, \
164, 102, 205, 162, 100, 212, 161, 96, 215, 160, \
95, 217, 160, 96, 215, 154, 89, 218, 154, 90, \
223, 155, 92, 232, 163, 100, 224, 154, 92, 218, \
153, 89, 216, 166, 97, 221, 178, 108, 223, 186, \
118, 216, 185, 121, 210, 184, 122, 213, 189, 127, \
215, 190, 127, 217, 191, 124, 215, 187, 120, 209, \
183, 120, 201, 177, 108, 193, 171, 93, 199, 182, \
108, 202, 189, 138, 168, 161, 140, 135, 135, 123, \
204, 177, 135, 205, 159, 93, 195, 147, 69, 191, \
147, 71, 180, 140, 69, 184, 142, 75, 204, 160, \
94, 202, 166, 96, 184, 147, 77, 191, 146, 76, \
200, 147, 75, 207, 147, 74, 209, 145, 73, 214, \
149, 77, 208, 145, 73, 207, 149, 77, 209, 167, \
98, 218, 186, 119, 204, 176, 112, 208, 184, 123, \
196, 174, 116, 192, 169, 112, 180, 155, 95, 170, \
142, 78, 161, 131, 66, 153, 124, 66, 141, 114, \
52, 141, 116, 44, 157, 136, 67, 186, 172, 124, \
161, 154, 138, 127, 127, 120, 203, 172, 131, 219, \
163, 95, 212, 148, 68, 213, 151, 73, 208, 151, \
79, 210, 153, 85, 221, 169, 102, 207, 180, 111, \
178, 155, 83, 202, 168, 95, 216, 170, 94, 211, \
156, 79, 221, 162, 84, 226, 169, 89, 222, 168, \
89, 221, 174, 97, 213, 183, 116, 196, 173, 113, \
149, 128, 70, 147, 128, 72, 149, 129, 75, 153, \
129, 75, 145, 115, 60, 149, 114, 55, 149, 110, \
50, 154, 115, 63, 157, 120, 64, 165, 130, 63, \
157, 127, 63, 186, 165, 120, 169, 159, 146, 113, \
116, 114, 213, 178, 141, 249, 184, 118, 246, 165, \
87, 244, 162, 84, 250, 173, 101, 244, 167, 100, \
239, 170, 106, 192, 159, 94, 114, 86, 21, 172, \
130, 61, 228, 172, 100, 224, 158, 83, 241, 173, \
96, 241, 175, 97, 233, 172, 94, 232, 180, 105, \
205, 179, 115, 171, 157, 99, 146, 130, 75, 139, \
121, 69, 158, 135, 84, 162, 132, 80, 158, 118, \
65, 165, 117, 60, 170, 116, 58, 162, 107, 59, \
152, 98, 45, 155, 105, 40, 156, 112, 48, 195, \
161, 118, 167, 149, 135, 105, 113, 115, 207, 171, \
137, 215, 141, 78, 223, 130, 53, 228, 131, 54, \
223, 128, 58, 219, 123, 60, 216, 128, 69, 167, \
110, 58, 137, 84, 33, 154, 85, 28, 193, 109, \
48, 210, 115, 51, 216, 119, 52, 212, 120, 51, \
202, 115, 47, 198, 126, 58, 154, 126, 66, 128, \
118, 63, 137, 122, 70, 131, 111, 61, 141, 113, \
64, 149, 111, 61, 152, 101, 49, 153, 91, 35, \
157, 89, 32, 148, 76, 30, 142, 71, 20, 145, \
79, 14, 140, 81, 16, 168, 121, 75, 168, 139, \
123, 99, 108, 110, 200, 163, 130, 174, 97, 34, \
178, 76, 2, 186, 77, 2, 186, 77, 6, 182, \
73, 8, 181, 77, 18, 164, 78, 31, 155, 69, \
25, 165, 66, 15, 189, 77, 22, 197, 76, 19, \
204, 79, 20, 200, 81, 20, 193, 77, 17, 187, \
90, 30, 158, 119, 60, 127, 111, 53, 128, 105, \
48, 140, 110, 55, 140, 100, 46, 154, 101, 46, \
167, 101, 43, 165, 88, 27, 174, 89, 28, 177, \
88, 35, 168, 82, 24, 159, 79, 13, 152, 82, \
16, 165, 110, 63, 170, 135, 116, 103, 104, 98, \
196, 160, 126, 174, 98, 39, 189, 84, 10, 213, \
94, 14, 218, 96, 18, 213, 93, 21, 207, 90, \
23, 205, 95, 31, 199, 89, 26, 209, 95, 30, \
221, 101, 36, 218, 94, 29, 221, 97, 31, 229, \
106, 42, 221, 99, 36, 198, 89, 25, 159, 98, \
29, 139, 95, 24, 142, 91, 21, 151, 92, 23, \
153, 84, 15, 162, 80, 11, 170, 78, 7, 175, \
74, 3, 182, 75, 4, 184, 75, 5, 172, 68, \
0, 161, 70, 2, 145, 71, 12, 174, 120, 78, \
167, 137, 115, 98, 101, 93, 194, 166, 135, 170, \
107, 53, 174, 82, 10, 202, 94, 15, 205, 93, \
16, 199, 91, 20, 191, 86, 20, 193, 90, 20, \
199, 96, 25, 200, 96, 27, 201, 97, 30, 200, \
96, 30, 198, 94, 30, 202, 98, 35, 200, 94, \
32, 187, 88, 26, 159, 90, 26, 152, 95, 29, \
165, 103, 37, 174, 106, 40, 181, 106, 39, 189, \
107, 41, 195, 108, 41, 206, 113, 46, 214, 119, \
51, 217, 119, 48, 216, 119, 52, 209, 126, 68, \
188, 125, 78, 201, 159, 127, 159, 141, 123, 82, \
98, 94, 184, 172, 148, 199, 157, 111, 201, 134, \
73, 215, 135, 66, 221, 140, 74, 219, 144, 84, \
217, 144, 89, 219, 147, 87, 222, 148, 88, 226, \
152, 94, 229, 156, 98, 232, 158, 102, 233, 159, \
105, 231, 157, 104, 234, 159, 108, 235, 164, 115, \
226, 169, 123, 219, 167, 123, 223, 170, 125, 225, \
172, 125, 222, 169, 121, 219, 166, 118, 216, 163, \
113, 215, 160, 111, 215, 160, 110, 218, 153, 102, \
215, 147, 101, 200, 143, 104, 173, 132, 103, 164, \
140, 122, 123, 120, 114, 66, 94, 96, 143, 147, \
132, 189, 169, 136, 213, 174, 129, 221, 175, 122, \
217, 172, 122, 209, 170, 126, 202, 167, 126, 203, \
167, 122, 200, 163, 117, 194, 156, 112, 188, 150, \
107, 184, 146, 105, 179, 141, 101, 174, 135, 96, \
167, 128, 91, 163, 124, 89, 160, 119, 93, 152, \
112, 91, 146, 108, 87, 137, 104, 80, 129, 100, \
75, 123, 100, 74, 112, 93, 66, 103, 87, 59, \
99, 83, 55, 106, 75, 50, 108, 72, 50, 99, \
73, 56, 81, 66, 56, 76, 73, 72, 78, 89, \
97, 63, 95, 106, 77, 92, 89, 85, 83, 66, \
90, 75, 48, 93, 74, 42, 88, 73, 43, 81, \
73, 49, 77, 73, 52, 79, 72, 46, 81, 71, \
44, 81, 70, 45, 81, 70, 47, 82, 71, 49, \
85, 73, 53, 86, 74, 56, 86, 74, 57, 87, \
73, 57, 95, 75, 66, 95, 72, 68, 95, 76, \
71, 93, 80, 75, 89, 82, 76, 90, 89, 83, \
85, 90, 84, 84, 94, 88, 87, 97, 92, 95, \
93, 91, 98, 93, 92, 96, 96, 98, 92, 98, \
104, 88, 101, 112, 85, 107, 123, 68, 99, 118, \
72, 91, 99, 78, 84, 83, 80, 80, 72, 87, \
86, 75, 83, 87, 79, 79, 91, 87, 79, 94, \
93, 88, 97, 91, 92, 98, 91, 94, 100, 94, \
96, 102, 98, 98, 104, 101, 98, 103, 103, 97, \
102, 103, 99, 104, 107, 105, 109, 111, 107, 106, \
109, 104, 102, 105, 105, 105, 110, 104, 108, 114, \
98, 105, 112, 92, 102, 111, 89, 102, 113, 88, \
103, 116, 89, 105, 119, 92, 106, 119, 91, 105, \
118, 88, 104, 119, 90, 108, 124, 86, 108, 124, \
82, 108, 126, 72, 95, 121, 84, 99, 118, 96, \
104, 117, 97, 103, 112, 95, 102, 110, 90, 103, \
113, 84, 105, 117, 83, 105, 120, 91, 106, 118, \
94, 105, 115, 92, 104, 116, 92, 104, 117, 91, \
102, 117, 89, 99, 116, 86, 97, 114, 85, 96, \
115, 86, 98, 115, 86, 103, 110, 83, 102, 107, \
82, 99, 107, 81, 97, 108, 83, 96, 111, 87, \
98, 116, 87, 96, 118, 87, 94, 120, 85, 93, \
120, 77, 97, 118, 77, 102, 121, 79, 102, 122, \
81, 104, 123, 82, 105, 123, 81, 102, 120, 74, \
89, 117, 81, 92, 117, 85, 93, 115, 86, 94, \
114, 85, 95, 115, 82, 96, 118, 79, 97, 122, \
78, 97, 122, 83, 96, 118, 86, 96, 117, 86, \
96, 117, 86, 96, 120, 86, 95, 121, 85, 95, \
122, 86, 95, 123, 87, 95, 124, 85, 96, 123, \
76, 103, 115, 74, 105, 111, 76, 102, 111, 78, \
99, 113, 82, 96, 115, 87, 95, 118, 90, 93, \
120, 93, 92, 123, 93, 91, 123, 78, 97, 120, \
75, 103, 121, 75, 100, 118, 73, 96, 113, 77, \
97, 113, 80, 97, 111, 73, 85, 109, 79, 89, \
113, 82, 91, 115, 83, 92, 117, 82, 93, 118, \
81, 93, 119, 80, 93, 121, 80, 93, 120, 84, \
92, 116, 86, 92, 115, 85, 92, 116, 85, 91, \
117, 86, 92, 119, 86, 92, 121, 86, 91, 121, \
86, 91, 123, 84, 92, 122, 75, 101, 118, 72, \
103, 116, 74, 101, 116, 77, 98, 117, 81, 96, \
118, 86, 95, 119, 89, 92, 120, 92, 91, 122, \
91, 91, 121, 78, 96, 116, 74, 102, 117, 76, \
100, 115, 79, 99, 114, 85, 103, 117, 89, 103, \
115, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '28524';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1ac673df36aad920430ee978232df20ccb';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_truck3';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{170, 214, 242, 183, 216, 240, 186, 217, 244, 163, 208, \
237, 153, 204, 238, 145, 202, 239, 141, 200, 237, \
140, 198, 235, 142, 196, 235, 141, 197, 234, 139, \
198, 234, 139, 198, 233, 140, 196, 232, 140, 196, \
232, 141, 196, 233, 141, 196, 233, 140, 194, 232, \
138, 192, 231, 137, 193, 231, 136, 193, 231, 138, \
192, 230, 138, 191, 230, 137, 190, 229, 136, 189, \
229, 137, 189, 228, 139, 190, 230, 139, 189, 229, \
137, 187, 227, 138, 188, 229, 141, 191, 232, 143, \
191, 228, 144, 191, 229, 163, 214, 241, 172, 212, \
237, 177, 213, 244, 165, 213, 242, 160, 212, 243, \
151, 209, 243, 146, 207, 241, 146, 205, 239, 148, \
204, 239, 147, 204, 240, 145, 205, 241, 145, 205, \
241, 146, 203, 240, 146, 202, 240, 146, 202, 239, \
146, 202, 239, 148, 200, 238, 150, 201, 238, 148, \
201, 238, 145, 199, 235, 144, 198, 235, 145, 199, \
235, 144, 198, 234, 143, 197, 234, 144, 196, 233, \
149, 197, 236, 150, 198, 236, 148, 196, 234, 150, \
199, 237, 153, 201, 237, 168, 205, 238, 170, 207, \
239, 165, 214, 241, 164, 211, 238, 159, 210, 242, \
153, 211, 242, 152, 210, 243, 149, 211, 244, 148, \
209, 238, 148, 208, 238, 149, 208, 242, 148, 207, \
241, 146, 207, 242, 146, 207, 242, 146, 205, 241, \
146, 205, 241, 146, 204, 240, 146, 204, 239, 150, \
202, 237, 157, 206, 240, 164, 207, 243, 162, 204, \
238, 153, 203, 234, 148, 202, 234, 147, 201, 235, \
144, 198, 234, 144, 198, 234, 151, 199, 235, 158, \
202, 235, 155, 200, 237, 156, 202, 237, 161, 206, \
236, 178, 210, 239, 184, 212, 240, 176, 220, 247, \
176, 216, 244, 165, 215, 245, 155, 213, 245, 155, \
213, 246, 154, 213, 246, 156, 215, 245, 147, 204, \
232, 137, 192, 220, 149, 211, 245, 149, 210, 242, \
149, 210, 243, 148, 209, 244, 148, 208, 244, 148, \
209, 241, 148, 209, 241, 153, 207, 239, 160, 209, \
242, 171, 211, 243, 182, 215, 242, 174, 213, 239, \
157, 206, 236, 153, 202, 238, 148, 201, 239, 145, \
201, 239, 153, 202, 237, 168, 209, 238, 167, 208, \
240, 163, 205, 236, 163, 207, 234, 174, 210, 239, \
179, 211, 239, 175, 222, 248, 177, 219, 243, 173, \
217, 245, 164, 215, 246, 162, 216, 247, 162, 214, \
245, 162, 217, 250, 146, 188, 210, 132, 163, 174, \
158, 213, 242, 155, 214, 244, 156, 213, 243, 154, \
212, 245, 154, 212, 244, 154, 212, 242, 154, 212, \
241, 155, 210, 241, 160, 209, 242, 167, 211, 240, \
186, 216, 243, 191, 219, 245, 175, 211, 241, 162, \
205, 240, 154, 204, 240, 152, 204, 239, 156, 203, \
237, 164, 207, 237, 170, 210, 237, 168, 210, 237, \
160, 207, 237, 167, 208, 239, 168, 206, 237, 173, \
223, 248, 169, 220, 239, 172, 222, 244, 170, 219, \
247, 168, 219, 246, 166, 220, 247, 167, 221, 244, \
134, 161, 166, 145, 154, 150, 176, 214, 231, 160, \
215, 242, 163, 217, 244, 161, 214, 245, 161, 214, \
245, 161, 215, 242, 161, 215, 242, 159, 212, 243, \
161, 210, 243, 165, 209, 244, 171, 212, 245, 180, \
215, 240, 179, 214, 240, 168, 208, 240, 161, 207, \
240, 158, 207, 239, 160, 207, 240, 157, 206, 238, \
157, 207, 238, 160, 210, 241, 158, 208, 239, 163, \
207, 240, 161, 206, 237, 178, 226, 250, 175, 223, \
246, 176, 224, 246, 174, 223, 247, 174, 223, 247, \
173, 225, 248, 148, 191, 206, 116, 133, 124, 168, \
178, 167, 196, 210, 212, 168, 211, 231, 169, 222, \
246, 168, 218, 245, 167, 218, 246, 168, 218, 245, \
169, 216, 244, 169, 214, 244, 169, 213, 243, 169, \
212, 242, 170, 210, 240, 170, 210, 237, 171, 214, \
239, 169, 210, 240, 165, 209, 239, 158, 210, 241, \
156, 210, 241, 157, 210, 239, 153, 209, 240, 153, \
210, 240, 153, 209, 238, 155, 210, 239, 157, 209, \
239, 184, 228, 251, 182, 225, 248, 182, 226, 248, \
181, 226, 248, 179, 227, 248, 184, 227, 250, 141, \
171, 191, 100, 113, 108, 164, 176, 157, 210, 209, \
194, 186, 206, 214, 176, 223, 247, 176, 221, 246, \
176, 221, 245, 177, 221, 245, 179, 218, 244, 176, \
217, 245, 172, 215, 244, 169, 215, 244, 171, 214, \
245, 169, 213, 243, 167, 214, 243, 167, 212, 240, \
167, 212, 238, 164, 213, 241, 167, 214, 242, 174, \
216, 240, 176, 215, 238, 175, 215, 239, 174, 216, \
242, 177, 219, 245, 181, 221, 243, 192, 232, 251, \
189, 229, 248, 190, 229, 248, 188, 230, 248, 186, \
230, 248, 188, 231, 247, 173, 212, 225, 95, 116, \
117, 119, 129, 109, 173, 162, 141, 175, 183, 186, \
180, 221, 244, 184, 221, 245, 183, 221, 244, 185, \
223, 242, 192, 225, 244, 195, 226, 247, 192, 223, \
243, 187, 222, 242, 190, 223, 244, 193, 223, 242, \
193, 225, 242, 196, 226, 242, 199, 226, 241, 203, \
227, 243, 209, 230, 246, 217, 233, 246, 221, 235, \
247, 221, 234, 246, 224, 233, 245, 227, 236, 247, \
226, 238, 243, 197, 235, 253, 195, 232, 250, 195, \
233, 251, 195, 233, 251, 194, 233, 250, 189, 223, \
238, 168, 189, 195, 100, 112, 113, 90, 92, 81, \
140, 128, 113, 152, 164, 169, 177, 213, 232, 200, \
228, 247, 205, 228, 242, 210, 231, 243, 218, 236, \
249, 226, 240, 248, 226, 241, 246, 225, 241, 245, \
229, 241, 246, 231, 241, 245, 230, 243, 244, 233, \
242, 246, 242, 244, 249, 244, 246, 250, 243, 245, \
248, 243, 242, 249, 241, 240, 248, 238, 240, 246, \
233, 237, 244, 231, 238, 241, 226, 238, 238, 201, \
237, 255, 198, 234, 253, 199, 234, 253, 201, 234, \
252, 202, 235, 252, 181, 202, 217, 131, 127, 124, \
115, 108, 100, 107, 96, 85, 137, 126, 110, 149, \
158, 159, 157, 182, 191, 215, 229, 238, 240, 242, \
245, 238, 243, 248, 239, 244, 251, 244, 246, 251, \
243, 249, 251, 243, 247, 248, 244, 245, 245, 244, \
245, 244, 237, 243, 237, 232, 238, 236, 237, 245, \
237, 233, 245, 233, 225, 238, 225, 221, 235, 225, \
213, 233, 210, 199, 226, 197, 191, 222, 190, 188, \
221, 181, 184, 215, 177, 207, 239, 255, 204, 236, \
253, 205, 236, 254, 203, 236, 250, 205, 234, 249, \
172, 186, 196, 159, 148, 135, 157, 139, 122, 121, \
99, 79, 124, 111, 89, 123, 123, 118, 145, 151, \
154, 219, 221, 221, 246, 244, 242, 239, 241, 245, \
238, 242, 241, 228, 237, 222, 216, 233, 207, 208, \
230, 199, 206, 228, 197, 207, 229, 197, 193, 221, \
176, 189, 218, 172, 189, 220, 170, 182, 216, 164, \
180, 215, 162, 181, 215, 166, 175, 214, 162, 164, \
209, 150, 164, 209, 155, 166, 211, 156, 166, 212, \
152, 208, 236, 251, 208, 236, 251, 209, 238, 252, \
208, 241, 252, 202, 227, 240, 164, 174, 183, 158, \
150, 134, 144, 129, 110, 104, 86, 65, 125, 111, \
93, 72, 71, 69, 165, 164, 168, 218, 218, 218, \
236, 239, 242, 234, 237, 242, 227, 234, 224, 191, \
218, 177, 170, 210, 148, 169, 209, 146, 179, 217, \
158, 181, 218, 165, 170, 215, 146, 175, 214, 156, \
179, 214, 164, 173, 213, 163, 176, 216, 167, 170, \
212, 156, 161, 209, 150, 154, 207, 139, 158, 206, \
148, 166, 208, 162, 160, 206, 158, 211, 238, 254, \
207, 231, 247, 207, 232, 242, 200, 228, 240, 185, \
202, 218, 156, 162, 170, 137, 127, 113, 133, 120, \
104, 103, 90, 76, 144, 132, 115, 120, 118, 113, \
173, 170, 174, 216, 216, 221, 234, 235, 240, 234, \
233, 237, 217, 225, 215, 171, 213, 158, 158, 210, \
138, 158, 208, 132, 159, 208, 133, 156, 204, 130, \
148, 201, 126, 145, 202, 127, 148, 203, 123, 144, \
203, 126, 139, 202, 120, 135, 199, 115, 130, 196, \
115, 126, 197, 108, 136, 200, 141, 132, 198, 171, \
102, 187, 172, 195, 213, 227, 183, 200, 210, 179, \
198, 211, 170, 189, 204, 149, 162, 175, 141, 145, \
153, 124, 117, 107, 114, 107, 96, 126, 118, 109, \
150, 141, 127, 145, 141, 137, 162, 159, 159, 214, \
212, 217, 230, 230, 234, 231, 229, 233, 214, 223, \
212, 146, 197, 122, 129, 190, 100, 131, 193, 105, \
123, 186, 99, 124, 187, 99, 114, 180, 96, 110, \
182, 94, 122, 182, 94, 119, 180, 97, 115, 189, \
98, 112, 182, 93, 113, 185, 88, 116, 191, 103, \
98, 183, 163, 57, 169, 178, 44, 161, 181, 111, \
119, 125, 105, 116, 117, 113, 126, 128, 110, 123, \
126, 74, 85, 92, 121, 127, 135, 117, 116, 111, \
38, 40, 37, 79, 78, 75, 140, 136, 128, 139, \
135, 134, 124, 121, 117, 201, 200, 205, 225, 225, \
229, 224, 223, 227, 209, 219, 207, 129, 187, 109, \
105, 173, 86, 108, 178, 91, 102, 174, 84, 106, \
177, 87, 96, 171, 84, 98, 174, 83, 96, 155, \
75, 91, 157, 78, 90, 169, 79, 80, 147, 72, \
86, 159, 72, 97, 174, 110, 68, 161, 172, 41, \
152, 181, 32, 145, 181, 68, 70, 69, 70, 76, \
76, 127, 137, 122, 67, 76, 71, 24, 32, 37, \
118, 123, 128, 154, 157, 153, 35, 41, 41, 45, \
46, 45, 124, 122, 115, 117, 115, 115, 75, 74, \
71, 180, 179, 182, 215, 216, 217, 211, 210, 212, \
194, 204, 189, 116, 178, 98, 91, 166, 75, 92, \
168, 80, 91, 168, 80, 87, 162, 74, 80, 157, \
71, 88, 171, 79, 79, 160, 74, 75, 159, 73, \
78, 162, 71, 72, 150, 70, 70, 157, 66, 82, \
158, 101, 59, 150, 153, 36, 140, 169, 71, 147, \
163, 95, 91, 86, 80, 84, 85, 124, 131, 114, \
54, 60, 58, 38, 45, 50, 155, 158, 158, 184, \
188, 182, 50, 55, 53, 52, 51, 49, 103, 99, \
91, 101, 100, 101, 80, 80, 80, 165, 164, 166, \
202, 204, 201, 199, 198, 198, 178, 190, 172, 97, \
164, 88, 73, 154, 65, 81, 163, 71, 79, 162, \
73, 71, 156, 67, 66, 153, 62, 71, 164, 69, \
68, 167, 69, 68, 164, 70, 67, 163, 73, 66, \
163, 75, 63, 162, 70, 74, 153, 100, 46, 135, \
144, 20, 126, 163, 80, 140, 145, 139, 132, 123, \
71, 75, 74, 82, 87, 79, 85, 88, 88, 144, \
146, 149, 215, 216, 215, 185, 189, 183, 68, 74, \
71, 63, 61, 60, 94, 90, 82, 86, 86, 87, \
86, 86, 87, 159, 159, 161, 188, 189, 185, 188, \
187, 184, 165, 177, 162, 91, 162, 88, 73, 160, \
71, 78, 162, 77, 77, 160, 80, 76, 155, 80, \
79, 156, 81, 85, 156, 89, 87, 153, 93, 91, \
153, 95, 88, 148, 91, 86, 147, 92, 95, 151, \
100, 106, 150, 121, 79, 128, 136, 50, 119, 151, \
59, 119, 148, 149, 148, 143, 109, 114, 113, 198, \
201, 201, 202, 203, 202, 224, 223, 223, 224, 223, \
221, 119, 123, 117, 47, 53, 50, 67, 66, 64, \
88, 84, 76, 91, 91, 92, 107, 107, 107, 152, \
152, 153, 162, 164, 159, 160, 161, 154, 158, 165, \
156, 129, 158, 125, 119, 151, 112, 119, 148, 113, \
122, 150, 121, 123, 144, 122, 120, 137, 117, 126, \
138, 124, 125, 131, 124, 132, 138, 131, 131, 139, \
131, 128, 138, 131, 133, 137, 140, 128, 132, 135, \
125, 130, 133, 122, 130, 135, 121, 127, 132, 163, \
163, 164, 176, 177, 174, 223, 225, 221, 211, 211, \
206, 229, 227, 221, 216, 215, 210, 75, 77, 72, \
24, 24, 22, 78, 75, 74, 116, 114, 107, 67, \
67, 66, 67, 68, 65, 127, 128, 123, 163, 163, \
158, 151, 149, 144, 155, 153, 150, 152, 148, 148, \
143, 137, 139, 139, 133, 132, 140, 134, 132, 132, \
129, 127, 128, 125, 123, 125, 126, 124, 122, 125, \
124, 123, 125, 126, 119, 122, 125, 108, 112, 115, \
107, 111, 116, 107, 111, 116, 110, 113, 119, 111, \
113, 118, 108, 114, 120, 192, 190, 188, 218, 219, \
215, 217, 218, 212, 195, 196, 191, 208, 207, 203, \
204, 204, 200, 83, 84, 79, 16, 15, 14, 58, \
55, 54, 110, 109, 102, 40, 41, 39, 34, 35, \
31, 92, 93, 87, 127, 127, 121, 118, 116, 107, \
117, 114, 104, 112, 110, 102, 109, 106, 99, 104, \
101, 95, 98, 95, 91, 95, 94, 89, 89, 90, \
85, 80, 84, 79, 74, 79, 75, 67, 72, 68, \
65, 70, 66, 67, 72, 68, 67, 72, 67, 61, \
66, 62, 52, 56, 55, 45, 49, 49, 41, 46, \
47, 200, 188, 182, 220, 220, 218, 206, 207, 201, \
145, 147, 144, 110, 112, 110, 121, 123, 120, 86, \
87, 82, 29, 28, 27, 42, 38, 38, 86, 84, \
78, 30, 30, 29, 55, 56, 52, 65, 66, 59, \
61, 61, 55, 66, 63, 55, 76, 73, 65, 76, \
74, 63, 73, 71, 60, 69, 67, 57, 61, 59, \
50, 55, 55, 48, 49, 50, 45, 32, 35, 31, \
30, 34, 31, 32, 37, 34, 27, 32, 29, 33, \
37, 34, 35, 39, 36, 31, 35, 33, 31, 35, \
36, 27, 30, 30, 19, 20, 19, 195, 176, 172, \
201, 200, 200, 146, 148, 143, 54, 57, 55, 35, \
39, 39, 53, 55, 53, 100, 101, 96, 36, 36, \
33, 19, 17, 17, 57, 56, 53, 22, 22, 21, \
83, 83, 81, 62, 62, 59, 29, 30, 27, 32, \
31, 29, 43, 41, 40, 46, 44, 40, 45, 43, \
38, 41, 41, 33, 35, 35, 28, 26, 26, 25, \
33, 33, 31, 29, 30, 28, 27, 28, 29, 36, \
39, 40, 44, 46, 47, 14, 16, 17, 17, 19, \
20, 29, 32, 33, 37, 39, 42, 36, 38, 41, \
35, 35, 37, 143, 136, 134, 104, 109, 107, 73, \
77, 71, 17, 20, 18, 33, 36, 36, 51, 53, \
53, 104, 104, 101, 51, 52, 48, 1, 1, 1, \
16, 16, 16, 15, 16, 15, 48, 48, 48, 49, \
49, 48, 22, 22, 22, 8, 8, 8, 9, 9, \
9, 7, 10, 9, 5, 8, 7, 8, 11, 8, \
5, 6, 6, 9, 8, 12, 23, 23, 22, 37, \
37, 35, 39, 39, 39, 30, 30, 30, 57, 57, \
57, 23, 23, 23, 9, 9, 10, 29, 29, 29, \
46, 47, 47, 52, 52, 52, 37, 37, 37, 98, \
108, 99, 123, 135, 121, 107, 116, 106, 8, 12, \
10, 28, 32, 31, 64, 66, 66, 94, 95, 91, \
80, 80, 75, 10, 10, 10, 18, 18, 18, 17, \
16, 17, 27, 27, 27, 28, 28, 28, 25, 25, \
25, 9, 9, 9, 6, 7, 7, 5, 8, 8, \
11, 15, 15, 10, 11, 12, 7, 7, 8, 12, \
13, 12, 28, 29, 24, 40, 41, 39, 36, 36, \
36, 35, 35, 35, 46, 46, 46, 27, 27, 27, \
10, 10, 10, 32, 32, 32, 39, 39, 39, 36, \
36, 36, 46, 46, 46, 152, 165, 144, 207, 222, \
197, 163, 176, 163, 33, 39, 38, 26, 30, 29, \
70, 72, 72, 92, 92, 89, 108, 109, 105, 65, \
66, 66, 82, 83, 81, 72, 73, 72, 38, 39, \
38, 16, 16, 16, 20, 20, 20, 8, 7, 7, \
21, 20, 19, 86, 82, 76, 121, 116, 108, 82, \
79, 74, 95, 93, 82, 91, 91, 74, 38, 40, \
32, 32, 32, 31, 7, 7, 7, 26, 26, 26, \
35, 35, 35, 22, 22, 22, 16, 16, 16, 36, \
36, 36, 24, 24, 24, 9, 9, 9, 35, 35, \
35, 154, 167, 144, 196, 211, 185, 153, 169, 158, \
50, 57, 61, 23, 27, 26, 63, 63, 64, 89, \
92, 87, 102, 114, 116, 85, 101, 100, 144, 156, \
139, 176, 186, 172, 79, 88, 81, 54, 55, 55, \
75, 75, 76, 52, 49, 50, 83, 80, 76, 135, \
129, 122, 146, 139, 132, 142, 136, 131, 166, 153, \
135, 163, 145, 105, 56, 55, 46, 35, 35, 34, \
2, 2, 2, 17, 17, 17, 34, 34, 34, 19, \
19, 19, 14, 14, 14, 40, 40, 40, 14, 14, \
14, 3, 3, 2, 17, 18, 16, 139, 155, 129, \
188, 206, 177, 108, 122, 110, 19, 23, 25, 30, \
31, 29, 52, 53, 51, 84, 85, 79, 111, 121, \
119, 113, 130, 123, 181, 199, 173, 208, 224, 198, \
91, 100, 96, 40, 46, 50, 54, 60, 63, 55, \
60, 65, 60, 64, 67, 65, 68, 71, 71, 75, \
77, 81, 80, 82, 115, 107, 95, 119, 105, 83, \
54, 53, 52, 56, 56, 54, 6, 6, 6, 21, \
21, 21, 44, 44, 44, 14, 14, 14, 6, 6, \
6, 48, 48, 48, 18, 18, 18, 2, 2, 2, \
6, 6, 7, 139, 157, 131, 191, 212, 183, 112, \
121, 105, 30, 29, 27, 37, 36, 30, 45, 45, \
40, 59, 58, 51, 98, 100, 88, 114, 126, 114, \
169, 189, 163, 188, 207, 177, 84, 90, 82, 39, \
44, 43, 35, 41, 39, 28, 34, 37, 28, 35, \
42, 27, 35, 43, 27, 36, 43, 30, 35, 42, \
41, 45, 45, 44, 47, 45, 31, 32, 34, 69, \
68, 68, 38, 38, 38, 32, 32, 32, 39, 39, \
39, 13, 13, 13, 7, 7, 7, 41, 41, 41, \
33, 33, 33, 10, 9, 10, 7, 7, 10, 132, \
148, 127, 175, 192, 173, 159, 164, 145, 121, 114, \
105, 111, 104, 94, 109, 105, 94, 115, 110, 98, \
111, 109, 93, 114, 125, 108, 163, 184, 157, 178, \
198, 168, 134, 132, 118, 119, 113, 105, 102, 97, \
89, 74, 72, 67, 62, 60, 60, 49, 52, 54, \
35, 41, 42, 23, 29, 33, 14, 21, 25, 10, \
16, 17, 8, 10, 9, 36, 37, 37, 45, 45, \
45, 28, 28, 28, 18, 18, 18, 7, 7, 7, \
6, 7, 9, 11, 13, 14, 22, 24, 23, 13, \
14, 14, 4, 6, 8, 78, 89, 72, 116, 126, \
115, 168, 169, 150, 166, 156, 141, 164, 153, 139, \
161, 152, 138, 161, 154, 139, 124, 124, 107, 108, \
120, 103, 160, 180, 151, 176, 195, 165, 158, 150, \
137, 156, 142, 134, 150, 139, 130, 140, 131, 123, \
132, 124, 116, 122, 118, 109, 109, 107, 97, 92, \
92, 86, 76, 76, 72, 64, 62, 59, 44, 44, \
41, 25, 26, 24, 23, 23, 23, 31, 31, 31, \
26, 26, 26, 13, 13, 14, 7, 9, 12, 4, \
7, 9, 5, 7, 7, 5, 7, 6, 3, 5, \
4, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '28834';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a9217a210936464515c58efceeef2c177';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_bird2';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{86, 130, 203, 87, 132, 207, 86, 131, 206, 85, 130, \
205, 85, 130, 205, 85, 130, 205, 85, 130, 205, \
85, 130, 204, 85, 130, 202, 84, 129, 201, 83, \
128, 200, 83, 128, 199, 82, 127, 199, 82, 127, \
199, 81, 126, 198, 80, 125, 197, 81, 126, 198, \
81, 126, 197, 80, 125, 197, 79, 124, 196, 79, \
124, 196, 79, 124, 196, 79, 124, 196, 79, 124, \
196, 79, 124, 196, 78, 124, 195, 78, 123, 195, \
77, 122, 194, 76, 122, 193, 76, 121, 193, 76, \
121, 193, 76, 121, 193, 92, 138, 210, 93, 141, \
215, 93, 141, 215, 91, 139, 213, 90, 138, 211, \
90, 137, 211, 89, 137, 211, 89, 137, 210, 89, \
137, 210, 88, 136, 209, 87, 135, 208, 87, 135, \
207, 86, 134, 207, 86, 134, 207, 85, 133, 206, \
84, 132, 205, 85, 133, 205, 85, 133, 205, 84, \
132, 205, 83, 131, 204, 83, 131, 204, 83, 131, \
204, 83, 131, 204, 83, 131, 204, 83, 131, 204, \
82, 131, 203, 82, 130, 203, 81, 129, 202, 81, \
129, 202, 81, 129, 202, 81, 129, 202, 81, 129, \
202, 99, 149, 220, 99, 151, 224, 98, 150, 223, \
97, 149, 222, 96, 148, 221, 96, 148, 221, 95, \
147, 220, 95, 147, 220, 94, 146, 220, 94, 145, \
219, 93, 145, 218, 92, 144, 218, 92, 144, 218, \
92, 144, 218, 91, 143, 217, 90, 142, 216, 90, \
142, 216, 90, 142, 215, 89, 141, 215, 88, 140, \
214, 88, 140, 214, 88, 140, 214, 89, 140, 214, \
89, 141, 214, 89, 141, 214, 89, 141, 215, 88, \
140, 214, 87, 139, 213, 87, 139, 212, 86, 138, \
212, 87, 139, 213, 88, 140, 214, 107, 161, 231, \
107, 163, 235, 106, 162, 234, 104, 160, 232, 103, \
159, 231, 103, 159, 230, 102, 158, 229, 101, 157, \
230, 101, 156, 231, 100, 156, 231, 100, 155, 230, \
99, 154, 229, 99, 154, 229, 98, 153, 228, 97, \
153, 227, 96, 152, 226, 96, 152, 226, 96, 151, \
226, 95, 150, 224, 94, 149, 224, 94, 150, 225, \
95, 151, 226, 94, 151, 226, 94, 150, 226, 94, \
150, 225, 94, 150, 224, 94, 149, 224, 93, 149, \
223, 93, 148, 222, 93, 148, 222, 94, 149, 223, \
95, 150, 223, 117, 174, 240, 117, 176, 244, 116, \
174, 242, 114, 173, 241, 113, 171, 240, 112, 170, \
239, 111, 169, 238, 110, 168, 238, 109, 167, 239, \
109, 166, 239, 108, 166, 238, 107, 165, 238, 106, \
164, 237, 105, 163, 237, 105, 162, 236, 104, 161, \
235, 103, 161, 235, 101, 161, 236, 100, 161, 236, \
101, 160, 235, 104, 160, 231, 108, 159, 227, 112, \
159, 225, 115, 161, 225, 113, 161, 229, 108, 161, \
233, 104, 159, 234, 101, 158, 234, 99, 157, 234, \
98, 157, 235, 99, 158, 236, 100, 158, 237, 127, \
187, 244, 128, 189, 248, 125, 187, 246, 124, 185, \
246, 123, 184, 246, 122, 183, 246, 120, 181, 245, \
120, 180, 244, 119, 180, 244, 118, 179, 244, 118, \
178, 244, 117, 177, 244, 116, 176, 244, 115, 175, \
244, 114, 173, 244, 113, 173, 243, 113, 173, 241, \
109, 173, 244, 108, 174, 246, 114, 172, 239, 129, \
169, 222, 146, 167, 204, 154, 163, 190, 140, 145, \
170, 118, 132, 166, 108, 135, 184, 110, 146, 203, \
116, 158, 220, 119, 167, 236, 119, 173, 246, 118, \
175, 250, 112, 170, 247, 136, 200, 247, 137, 202, \
252, 135, 200, 251, 134, 198, 251, 133, 197, 251, \
131, 196, 251, 130, 194, 250, 129, 193, 250, 129, \
193, 250, 128, 193, 250, 127, 192, 250, 127, 191, \
250, 125, 189, 250, 125, 188, 251, 124, 187, 251, \
124, 187, 250, 126, 186, 247, 124, 185, 248, 124, \
184, 245, 138, 179, 226, 170, 179, 201, 191, 170, \
167, 167, 131, 114, 108, 70, 54, 64, 37, 31, \
58, 45, 50, 70, 68, 82, 90, 99, 122, 109, \
130, 163, 112, 145, 188, 111, 153, 202, 124, 173, \
226, 151, 217, 249, 152, 219, 254, 150, 216, 253, \
148, 215, 252, 147, 214, 253, 146, 212, 252, 144, \
210, 252, 143, 209, 251, 141, 208, 252, 140, 208, \
251, 139, 207, 251, 138, 206, 252, 137, 204, 252, \
136, 203, 252, 135, 202, 252, 134, 201, 251, 135, \
200, 253, 131, 199, 254, 135, 197, 249, 155, 189, \
221, 197, 187, 184, 211, 162, 128, 183, 119, 74, \
123, 67, 30, 75, 34, 13, 54, 29, 20, 51, \
38, 38, 58, 58, 68, 66, 82, 104, 79, 109, \
142, 92, 134, 175, 126, 179, 225, 171, 234, 249, \
172, 237, 253, 170, 235, 252, 168, 232, 251, 166, \
230, 250, 165, 228, 249, 163, 226, 248, 161, 225, \
249, 159, 225, 250, 157, 224, 250, 157, 223, 250, \
156, 222, 251, 154, 220, 251, 153, 219, 251, 151, \
217, 249, 150, 216, 249, 147, 216, 253, 140, 215, \
255, 144, 214, 253, 168, 205, 225, 211, 196, 179, \
221, 165, 119, 190, 126, 77, 123, 78, 48, 66, \
49, 41, 66, 67, 75, 104, 116, 133, 135, 158, \
182, 143, 179, 211, 145, 194, 232, 148, 206, 249, \
146, 211, 255, 188, 247, 246, 191, 251, 251, 190, \
250, 250, 189, 248, 250, 188, 247, 250, 186, 245, \
250, 184, 244, 249, 182, 242, 250, 180, 242, 252, \
179, 242, 252, 178, 240, 252, 177, 239, 253, 176, \
238, 253, 174, 236, 252, 173, 235, 251, 172, 233, \
250, 173, 233, 245, 167, 234, 251, 165, 230, 250, \
190, 222, 225, 220, 198, 169, 212, 152, 102, 156, \
98, 57, 98, 73, 62, 98, 111, 124, 138, 176, \
197, 166, 214, 235, 173, 227, 250, 169, 230, 254, \
163, 228, 253, 161, 228, 252, 160, 229, 250, 214, \
248, 246, 218, 253, 252, 217, 253, 252, 216, 253, \
252, 214, 252, 252, 212, 251, 251, 211, 250, 251, \
209, 250, 252, 206, 251, 254, 205, 251, 254, 203, \
250, 254, 202, 250, 254, 201, 249, 254, 199, 249, \
254, 198, 248, 253, 196, 247, 252, 198, 246, 247, \
194, 249, 251, 191, 244, 250, 215, 237, 226, 223, \
199, 157, 181, 126, 78, 116, 69, 46, 118, 111, \
112, 166, 198, 207, 189, 241, 250, 186, 244, 252, \
184, 243, 251, 181, 242, 250, 182, 243, 249, 184, \
244, 248, 185, 244, 246, 239, 246, 249, 243, 252, \
254, 242, 252, 254, 240, 252, 253, 238, 251, 252, \
237, 252, 253, 235, 252, 252, 233, 251, 252, 231, \
252, 253, 230, 252, 254, 228, 252, 253, 226, 252, \
253, 225, 252, 253, 223, 252, 252, 221, 252, 251, \
219, 252, 251, 219, 252, 252, 215, 254, 253, 215, \
252, 251, 233, 245, 228, 229, 205, 156, 172, 126, \
82, 108, 72, 63, 144, 146, 148, 199, 233, 229, \
208, 251, 248, 209, 252, 251, 208, 252, 251, 208, \
251, 251, 208, 251, 251, 208, 251, 251, 209, 252, \
252, 253, 252, 251, 255, 255, 255, 255, 255, 255, \
255, 255, 255, 254, 255, 254, 245, 247, 245, 244, \
248, 245, 251, 255, 253, 254, 255, 255, 253, 255, \
255, 252, 255, 255, 251, 255, 255, 248, 255, 253, \
246, 255, 251, 246, 255, 252, 243, 252, 248, 244, \
253, 249, 241, 255, 248, 242, 253, 251, 251, 245, \
227, 235, 204, 152, 173, 127, 77, 115, 79, 63, \
164, 159, 155, 223, 241, 233, 229, 251, 246, 230, \
250, 248, 229, 249, 248, 229, 248, 247, 229, 248, \
247, 229, 249, 248, 230, 250, 248, 208, 201, 197, \
212, 204, 200, 212, 204, 201, 212, 205, 202, 205, \
196, 192, 162, 152, 148, 166, 155, 151, 199, 190, \
185, 212, 203, 197, 214, 204, 197, 214, 203, 196, \
209, 197, 191, 201, 189, 183, 190, 178, 172, 199, \
187, 181, 171, 159, 152, 193, 179, 169, 201, 189, \
178, 204, 189, 186, 215, 190, 172, 222, 185, 130, \
168, 124, 69, 112, 76, 54, 143, 129, 121, 185, \
183, 172, 188, 185, 176, 190, 184, 178, 191, 184, \
179, 188, 181, 176, 184, 178, 173, 190, 183, 178, \
187, 181, 175, 74, 61, 58, 77, 63, 60, 78, \
63, 60, 81, 65, 62, 82, 64, 62, 75, 55, \
54, 77, 57, 55, 85, 66, 62, 91, 72, 64, \
89, 70, 61, 84, 65, 56, 91, 71, 63, 92, \
70, 62, 81, 57, 50, 82, 58, 51, 84, 58, \
51, 92, 69, 55, 100, 76, 62, 104, 75, 72, \
128, 93, 77, 197, 159, 106, 161, 120, 65, 102, \
63, 42, 95, 67, 62, 105, 84, 74, 105, 82, \
71, 107, 83, 72, 109, 85, 74, 109, 85, 75, \
108, 84, 73, 107, 83, 73, 104, 80, 70, 48, \
34, 32, 51, 36, 35, 55, 37, 37, 58, 39, \
39, 60, 39, 40, 65, 43, 44, 68, 45, 46, \
70, 49, 46, 72, 54, 46, 69, 51, 42, 67, \
47, 39, 79, 57, 49, 79, 54, 47, 72, 46, \
39, 78, 50, 44, 82, 54, 47, 81, 58, 42, \
84, 58, 44, 92, 58, 57, 113, 74, 60, 196, \
160, 108, 162, 124, 71, 100, 61, 42, 86, 51, \
48, 91, 60, 52, 94, 63, 49, 96, 63, 49, \
98, 65, 51, 101, 68, 54, 100, 66, 52, 95, \
63, 49, 98, 65, 51, 48, 34, 36, 50, 35, \
37, 52, 37, 39, 54, 38, 40, 55, 38, 40, \
57, 39, 41, 59, 41, 44, 61, 44, 44, 63, \
48, 44, 66, 51, 46, 67, 50, 45, 66, 47, \
43, 67, 46, 43, 71, 49, 46, 74, 50, 48, \
73, 50, 46, 72, 54, 39, 72, 49, 46, 81, \
49, 55, 104, 67, 51, 191, 157, 109, 154, 122, \
74, 91, 61, 39, 74, 49, 43, 78, 56, 49, \
82, 59, 46, 84, 57, 44, 88, 59, 47, 93, \
62, 50, 94, 61, 50, 92, 62, 50, 85, 59, \
46, 33, 22, 24, 30, 19, 21, 29, 18, 19, \
29, 18, 20, 31, 20, 21, 33, 22, 24, 39, \
28, 29, 47, 35, 35, 54, 41, 39, 58, 43, \
40, 57, 42, 39, 57, 41, 38, 59, 40, 39, \
62, 42, 41, 62, 42, 41, 64, 44, 42, 64, \
49, 37, 66, 46, 47, 74, 44, 50, 97, 63, \
42, 188, 158, 111, 143, 114, 72, 84, 58, 39, \
69, 50, 43, 69, 53, 46, 71, 53, 43, 76, \
54, 44, 83, 57, 49, 87, 59, 52, 88, 60, \
52, 88, 62, 54, 80, 58, 48, 12, 7, 6, \
9, 4, 3, 7, 2, 1, 7, 2, 1, 7, \
2, 2, 7, 2, 2, 9, 4, 4, 20, 13, \
12, 36, 26, 23, 49, 37, 34, 56, 42, 40, \
57, 42, 40, 56, 40, 39, 58, 40, 40, 57, \
38, 38, 60, 40, 39, 60, 46, 38, 62, 44, \
44, 71, 44, 43, 104, 72, 46, 188, 157, 111, \
132, 102, 68, 77, 51, 40, 65, 46, 43, 65, \
49, 43, 68, 49, 41, 69, 48, 41, 70, 47, \
41, 73, 49, 43, 74, 50, 44, 74, 51, 45, \
76, 55, 48, 7, 4, 3, 7, 4, 3, 7, \
4, 3, 6, 4, 2, 6, 4, 2, 6, 4, \
2, 5, 3, 1, 9, 4, 3, 15, 6, 6, \
25, 14, 14, 39, 27, 27, 50, 37, 38, 53, \
38, 40, 54, 38, 39, 54, 37, 39, 54, 37, \
39, 54, 42, 38, 60, 44, 44, 68, 44, 36, \
116, 88, 55, 178, 148, 105, 114, 84, 61, 68, \
43, 42, 63, 46, 46, 66, 50, 45, 69, 49, \
45, 66, 45, 42, 63, 43, 39, 67, 48, 44, \
66, 47, 43, 64, 44, 41, 68, 48, 45, 8, \
3, 2, 8, 3, 2, 8, 3, 2, 8, 2, \
2, 8, 2, 2, 8, 2, 2, 8, 2, 2, \
9, 2, 2, 10, 2, 2, 12, 3, 3, 19, \
9, 10, 34, 23, 24, 48, 35, 38, 51, 36, \
39, 50, 35, 38, 50, 35, 38, 48, 36, 37, \
53, 39, 40, 62, 41, 28, 146, 121, 81, 166, \
138, 96, 96, 67, 52, 61, 37, 45, 59, 43, \
47, 61, 46, 41, 65, 45, 43, 65, 44, 44, \
60, 43, 43, 58, 43, 42, 55, 40, 39, 58, \
41, 40, 66, 45, 46, 8, 1, 1, 8, 1, \
1, 9, 1, 1, 9, 1, 2, 9, 1, 2, \
9, 1, 2, 9, 1, 2, 9, 1, 2, 9, \
2, 3, 10, 2, 3, 10, 1, 2, 15, 5, \
6, 31, 20, 22, 49, 36, 38, 51, 37, 39, \
52, 37, 39, 49, 36, 38, 55, 39, 35, 83, \
62, 38, 182, 157, 114, 149, 121, 84, 81, 52, \
44, 59, 35, 45, 56, 41, 43, 56, 42, 37, \
63, 43, 42, 66, 45, 46, 60, 43, 43, 53, \
39, 38, 53, 39, 39, 59, 42, 43, 63, 43, \
45, 8, 2, 2, 8, 2, 2, 8, 2, 2, \
8, 2, 2, 8, 2, 2, 8, 2, 2, 8, \
2, 2, 8, 2, 3, 8, 2, 4, 8, 2, \
4, 8, 2, 3, 9, 2, 3, 17, 8, 8, \
35, 25, 24, 45, 35, 33, 53, 41, 40, 55, \
39, 39, 63, 43, 28, 162, 140, 102, 198, 171, \
128, 117, 86, 62, 70, 40, 40, 61, 38, 45, \
57, 43, 40, 55, 43, 34, 59, 42, 37, 63, \
44, 42, 60, 42, 40, 55, 38, 36, 56, 39, \
38, 57, 41, 41, 56, 40, 40, 8, 2, 2, \
8, 2, 2, 8, 2, 2, 8, 2, 2, 8, \
2, 2, 8, 2, 2, 8, 2, 2, 8, 2, \
3, 7, 2, 5, 7, 3, 4, 8, 2, 3, \
9, 3, 3, 12, 4, 3, 15, 6, 5, 25, \
15, 14, 41, 29, 27, 47, 31, 30, 85, 67, \
53, 202, 182, 147, 167, 142, 107, 86, 58, 41, \
61, 33, 34, 55, 34, 40, 54, 40, 38, 56, \
44, 37, 56, 40, 36, 55, 38, 36, 60, 42, \
41, 62, 44, 42, 55, 37, 35, 55, 37, 36, \
58, 40, 39, 8, 2, 2, 8, 2, 2, 8, \
2, 2, 8, 2, 2, 8, 2, 2, 8, 2, \
2, 8, 2, 2, 8, 2, 4, 8, 3, 5, \
8, 3, 5, 8, 2, 4, 9, 2, 2, 11, \
3, 2, 13, 4, 3, 18, 9, 7, 30, 19, \
17, 36, 24, 21, 51, 37, 26, 77, 62, 43, \
62, 44, 27, 48, 27, 18, 50, 29, 30, 49, \
30, 34, 54, 39, 39, 54, 41, 39, 50, 36, \
36, 54, 39, 39, 56, 40, 40, 56, 39, 39, \
55, 37, 35, 55, 37, 34, 57, 38, 34, 8, \
2, 2, 7, 1, 1, 8, 2, 2, 8, 2, \
2, 8, 2, 2, 8, 2, 2, 8, 2, 2, \
8, 2, 4, 8, 4, 6, 9, 4, 6, 9, \
3, 4, 9, 2, 2, 10, 2, 1, 12, 2, \
1, 18, 8, 6, 29, 18, 16, 29, 19, 14, \
20, 10, 4, 12, 1, 0, 13, 0, 0, 30, \
15, 14, 47, 31, 31, 48, 32, 33, 49, 33, \
35, 46, 32, 35, 45, 33, 35, 50, 37, 38, \
51, 37, 37, 53, 37, 36, 46, 28, 26, 54, \
34, 30, 63, 41, 36, 8, 2, 2, 7, 1, \
1, 8, 2, 2, 8, 2, 2, 8, 2, 2, \
8, 2, 2, 8, 2, 2, 8, 2, 4, 7, \
3, 5, 8, 3, 5, 9, 3, 5, 11, 4, \
4, 12, 4, 3, 13, 3, 2, 14, 4, 2, \
16, 6, 3, 13, 5, 2, 12, 4, 2, 13, \
5, 7, 22, 13, 17, 34, 24, 25, 38, 26, \
25, 44, 30, 30, 46, 29, 34, 40, 25, 32, \
37, 25, 30, 36, 25, 28, 39, 26, 27, 49, \
33, 33, 48, 30, 27, 55, 34, 29, 75, 51, \
44, 12, 2, 1, 11, 1, 1, 10, 2, 1, \
8, 2, 2, 7, 2, 2, 7, 2, 3, 7, \
2, 3, 6, 3, 3, 6, 3, 3, 10, 2, \
2, 23, 9, 9, 37, 20, 19, 25, 10, 7, \
18, 5, 3, 15, 3, 2, 17, 3, 3, 21, \
10, 9, 25, 16, 15, 28, 18, 21, 30, 21, \
24, 39, 29, 30, 38, 27, 26, 37, 24, 24, \
41, 26, 29, 38, 23, 28, 34, 20, 24, 35, \
21, 24, 36, 22, 23, 43, 27, 27, 53, 35, \
34, 52, 32, 30, 55, 35, 32, 17, 3, 0, \
13, 1, 0, 12, 2, 1, 10, 2, 2, 9, \
2, 3, 8, 2, 3, 8, 2, 4, 5, 3, \
3, 6, 3, 1, 13, 2, 0, 36, 13, 12, \
60, 32, 30, 34, 11, 8, 28, 12, 8, 34, \
18, 17, 40, 20, 24, 43, 27, 28, 41, 29, \
29, 34, 22, 22, 33, 21, 21, 41, 29, 29, \
46, 34, 34, 37, 25, 25, 36, 24, 24, 41, \
28, 28, 44, 29, 30, 47, 31, 32, 50, 33, \
34, 49, 33, 34, 46, 30, 31, 48, 32, 33, \
46, 30, 31, 21, 8, 6, 15, 3, 1, 13, \
1, 0, 11, 0, 0, 11, 0, 0, 11, 1, \
1, 10, 2, 2, 7, 3, 2, 7, 3, 1, \
17, 3, 2, 40, 15, 14, 57, 29, 27, 31, \
9, 6, 36, 21, 16, 52, 38, 36, 52, 35, \
37, 51, 36, 37, 33, 21, 21, 33, 21, 21, \
35, 23, 23, 34, 22, 22, 34, 22, 22, 35, \
23, 23, 35, 23, 23, 43, 29, 30, 50, 34, \
35, 47, 31, 32, 47, 31, 32, 49, 33, 34, \
46, 30, 31, 43, 28, 29, 41, 25, 26, 28, \
18, 18, 24, 11, 8, 33, 17, 13, 50, 34, \
28, 36, 21, 17, 23, 10, 7, 18, 8, 6, \
16, 10, 9, 21, 15, 13, 35, 18, 17, 52, \
24, 24, 54, 26, 24, 28, 8, 5, 39, 27, \
21, 48, 37, 34, 46, 31, 33, 43, 29, 30, \
37, 25, 25, 46, 34, 34, 38, 26, 26, 34, \
22, 22, 41, 29, 29, 40, 28, 28, 40, 28, \
28, 46, 33, 33, 47, 32, 32, 39, 23, 24, \
42, 26, 27, 50, 34, 35, 40, 24, 25, 38, \
22, 23, 35, 19, 20, 23, 16, 17, 31, 18, \
14, 47, 29, 20, 97, 76, 65, 73, 53, 43, \
44, 27, 20, 36, 24, 20, 35, 26, 25, 39, \
29, 28, 48, 28, 28, 54, 25, 25, 53, 24, \
23, 28, 8, 5, 32, 21, 15, 38, 29, 26, \
42, 29, 31, 35, 22, 23, 37, 25, 25, 45, \
33, 33, 39, 27, 27, 41, 29, 29, 47, 35, \
35, 42, 30, 30, 36, 24, 24, 41, 28, 28, \
49, 34, 34, 48, 32, 33, 43, 27, 28, 44, \
28, 29, 43, 27, 28, 52, 36, 37, 40, 24, \
25, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '29144';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a9d507a380e91ab080bf993f8aa997702';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_bird8';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{152, 152, 152, 153, 155, 154, 145, 149, 147, 141, 145, \
143, 131, 125, 126, 125, 104, 106, 138, 105, 112, \
129, 121, 120, 120, 128, 120, 122, 131, 120, 116, \
127, 113, 119, 129, 115, 132, 140, 133, 132, 140, \
136, 115, 123, 118, 88, 99, 88, 76, 96, 76, \
80, 101, 79, 80, 98, 81, 86, 103, 86, 92, \
110, 88, 100, 117, 92, 105, 124, 93, 106, 126, \
95, 101, 123, 92, 100, 124, 92, 103, 124, 98, \
99, 119, 92, 95, 116, 88, 99, 119, 93, 104, \
121, 95, 104, 120, 94, 156, 157, 156, 161, 161, \
161, 163, 153, 156, 169, 132, 139, 176, 106, 119, \
187, 100, 118, 194, 115, 136, 189, 144, 161, 175, \
163, 170, 170, 169, 171, 170, 170, 172, 166, 166, \
166, 148, 150, 147, 105, 114, 106, 87, 98, 90, \
81, 90, 82, 84, 98, 84, 87, 102, 87, 90, \
104, 94, 94, 110, 96, 89, 110, 86, 89, 112, \
82, 94, 118, 82, 100, 125, 88, 98, 119, 90, \
98, 116, 89, 102, 119, 96, 95, 114, 90, 95, \
114, 89, 98, 117, 95, 96, 115, 89, 91, 111, \
80, 153, 154, 155, 158, 150, 153, 164, 104, 113, \
181, 72, 86, 196, 89, 105, 208, 115, 135, 199, \
126, 140, 185, 143, 152, 164, 156, 160, 167, 168, \
169, 171, 172, 173, 161, 164, 164, 139, 144, 142, \
106, 114, 109, 105, 112, 108, 112, 119, 114, 108, \
121, 111, 110, 124, 113, 109, 124, 111, 106, 123, \
106, 99, 119, 97, 94, 116, 87, 94, 118, 84, \
95, 119, 86, 94, 118, 88, 93, 111, 85, 97, \
113, 89, 101, 120, 95, 104, 123, 99, 104, 123, \
100, 101, 121, 96, 95, 116, 89, 160, 161, 161, \
161, 145, 149, 165, 84, 98, 180, 82, 95, 187, \
117, 124, 192, 150, 153, 213, 203, 203, 215, 215, \
214, 174, 179, 177, 135, 144, 139, 122, 132, 122, \
110, 125, 110, 103, 122, 106, 105, 124, 107, 105, \
122, 105, 100, 116, 102, 92, 110, 96, 100, 117, \
101, 107, 123, 106, 108, 123, 106, 109, 125, 105, \
104, 123, 98, 105, 123, 100, 98, 116, 97, 95, \
114, 93, 100, 117, 97, 102, 119, 98, 101, 119, \
97, 101, 120, 97, 98, 119, 93, 102, 124, 97, \
103, 125, 97, 161, 161, 163, 156, 145, 142, 139, \
95, 93, 140, 74, 78, 156, 76, 76, 170, 87, \
87, 190, 145, 148, 204, 202, 203, 237, 237, 235, \
200, 204, 200, 126, 137, 126, 92, 112, 91, 91, \
115, 86, 94, 118, 88, 95, 117, 91, 96, 117, \
92, 92, 114, 88, 97, 119, 91, 104, 124, 97, \
101, 120, 94, 101, 120, 95, 107, 126, 102, 109, \
127, 105, 110, 126, 107, 108, 125, 105, 104, 120, \
101, 101, 117, 99, 97, 114, 97, 96, 113, 95, \
93, 111, 87, 94, 116, 87, 96, 117, 89, 156, \
157, 160, 157, 157, 155, 144, 130, 124, 145, 74, \
77, 158, 55, 58, 152, 51, 55, 165, 90, 97, \
189, 183, 184, 234, 238, 233, 252, 250, 248, 207, \
211, 207, 120, 135, 118, 87, 111, 81, 90, 114, \
82, 93, 114, 86, 95, 115, 87, 96, 117, 89, \
95, 118, 94, 102, 124, 95, 103, 124, 94, 102, \
123, 95, 106, 126, 98, 109, 128, 100, 104, 122, \
97, 105, 123, 99, 109, 125, 105, 107, 124, 104, \
106, 125, 106, 100, 119, 100, 98, 117, 96, 95, \
115, 94, 95, 114, 95, 162, 160, 163, 170, 170, \
173, 164, 143, 150, 164, 81, 91, 159, 51, 59, \
138, 56, 62, 187, 159, 155, 224, 226, 216, 232, \
233, 226, 246, 245, 242, 247, 248, 247, 198, 203, \
196, 115, 132, 111, 90, 111, 84, 93, 113, 88, \
98, 118, 92, 98, 118, 93, 93, 115, 89, 90, \
110, 83, 86, 105, 80, 90, 111, 86, 93, 116, \
88, 97, 119, 92, 98, 119, 90, 97, 114, 89, \
98, 112, 94, 99, 113, 96, 96, 107, 93, 98, \
109, 96, 106, 118, 107, 110, 119, 110, 101, 109, \
102, 160, 161, 161, 161, 163, 163, 145, 142, 141, \
141, 87, 89, 144, 52, 59, 141, 89, 89, 195, \
195, 180, 217, 219, 207, 225, 224, 218, 241, 242, \
238, 246, 247, 246, 249, 249, 250, 190, 199, 191, \
111, 127, 108, 86, 105, 80, 82, 99, 76, 82, \
100, 76, 87, 106, 76, 82, 97, 77, 78, 90, \
77, 80, 90, 79, 89, 103, 88, 100, 117, 100, \
103, 118, 101, 102, 119, 102, 111, 123, 113, 126, \
131, 127, 122, 123, 123, 127, 128, 130, 173, 174, \
176, 190, 188, 191, 139, 139, 141, 143, 146, 145, \
123, 128, 125, 99, 112, 104, 99, 100, 87, 115, \
94, 83, 142, 124, 107, 188, 186, 162, 195, 196, \
184, 206, 207, 202, 223, 223, 222, 223, 223, 225, \
234, 233, 236, 238, 239, 239, 170, 177, 171, 104, \
121, 103, 95, 110, 92, 98, 111, 94, 103, 116, \
100, 110, 120, 111, 119, 124, 118, 121, 125, 119, \
117, 121, 113, 116, 126, 114, 116, 128, 118, 136, \
144, 136, 205, 209, 205, 186, 186, 188, 131, 130, \
134, 125, 126, 126, 140, 145, 142, 142, 155, 143, \
124, 141, 122, 149, 152, 150, 128, 134, 129, 104, \
116, 105, 84, 105, 84, 90, 112, 87, 130, 132, \
108, 173, 169, 139, 178, 179, 158, 174, 175, 167, \
188, 188, 187, 192, 193, 193, 205, 205, 207, 228, \
228, 229, 225, 226, 225, 142, 154, 138, 99, 117, \
91, 113, 129, 108, 111, 126, 109, 109, 123, 109, \
113, 126, 113, 115, 129, 113, 113, 125, 107, 108, \
125, 99, 112, 124, 100, 151, 149, 143, 182, 182, \
182, 127, 129, 134, 107, 108, 114, 106, 104, 108, \
82, 83, 82, 100, 113, 93, 107, 129, 96, 118, \
126, 120, 108, 119, 112, 97, 112, 100, 84, 102, \
87, 86, 103, 86, 99, 105, 91, 139, 135, 109, \
170, 165, 131, 154, 154, 138, 159, 160, 154, 174, \
175, 170, 192, 192, 190, 205, 205, 205, 218, 219, \
220, 194, 199, 193, 116, 128, 110, 100, 116, 92, \
106, 124, 100, 101, 118, 97, 99, 115, 94, 100, \
113, 90, 103, 113, 93, 129, 137, 119, 172, 174, \
163, 171, 166, 162, 119, 119, 119, 107, 112, 116, \
115, 122, 128, 99, 104, 110, 70, 72, 75, 76, \
84, 75, 101, 118, 94, 109, 117, 111, 89, 102, \
93, 88, 104, 89, 89, 108, 89, 94, 111, 95, \
99, 108, 95, 121, 121, 104, 146, 140, 107, 145, \
142, 108, 144, 144, 125, 155, 157, 145, 168, 169, \
161, 179, 179, 177, 190, 190, 189, 203, 203, 205, \
176, 181, 178, 115, 127, 111, 125, 139, 121, 144, \
155, 141, 150, 157, 149, 168, 172, 165, 199, 199, \
195, 230, 230, 228, 251, 251, 251, 251, 249, 248, \
199, 197, 197, 131, 132, 133, 89, 94, 95, 62, \
68, 70, 56, 61, 58, 54, 58, 50, 90, 104, \
86, 91, 99, 92, 84, 95, 85, 92, 108, 88, \
94, 112, 89, 97, 114, 96, 110, 117, 104, 142, \
142, 129, 156, 153, 143, 120, 119, 101, 139, 138, \
117, 135, 136, 122, 134, 136, 127, 144, 144, 140, \
175, 175, 174, 194, 195, 196, 167, 167, 174, 173, \
173, 178, 221, 223, 222, 237, 239, 237, 241, 241, \
243, 248, 247, 248, 255, 255, 255, 255, 255, 255, \
253, 254, 253, 237, 234, 234, 191, 188, 188, 149, \
149, 149, 90, 95, 94, 60, 64, 63, 67, 72, \
63, 74, 78, 66, 92, 104, 88, 85, 99, 85, \
86, 101, 83, 86, 103, 81, 90, 109, 83, 99, \
118, 93, 111, 120, 103, 141, 140, 131, 159, 158, \
156, 146, 145, 143, 122, 122, 115, 104, 104, 100, \
76, 76, 75, 114, 114, 115, 175, 175, 177, 216, \
217, 218, 199, 198, 203, 214, 214, 218, 247, 247, \
247, 247, 247, 246, 248, 248, 247, 249, 249, 249, \
248, 247, 247, 248, 247, 247, 248, 248, 247, 231, \
230, 228, 171, 170, 168, 135, 135, 133, 93, 95, \
91, 57, 59, 54, 74, 82, 68, 89, 96, 78, \
95, 108, 88, 96, 114, 97, 95, 112, 94, 91, \
110, 90, 92, 112, 89, 90, 109, 82, 101, 111, \
94, 131, 132, 127, 153, 153, 150, 149, 148, 149, \
97, 96, 98, 70, 70, 71, 57, 57, 58, 111, \
111, 110, 188, 188, 184, 234, 234, 233, 247, 246, \
246, 229, 228, 229, 245, 245, 245, 251, 251, 251, \
251, 251, 249, 251, 250, 249, 245, 244, 244, 244, \
243, 244, 242, 240, 241, 233, 232, 231, 214, 213, \
212, 132, 133, 130, 65, 67, 63, 65, 71, 60, \
95, 106, 84, 94, 103, 80, 102, 118, 96, 89, \
110, 78, 93, 112, 84, 94, 114, 91, 92, 111, \
90, 89, 108, 87, 92, 106, 87, 101, 102, 99, \
133, 131, 129, 128, 129, 128, 69, 69, 70, 43, \
43, 43, 49, 49, 51, 85, 85, 82, 162, 160, \
147, 219, 217, 207, 231, 233, 225, 231, 231, 229, \
246, 245, 245, 250, 250, 248, 253, 253, 252, 247, \
247, 243, 220, 217, 208, 204, 203, 197, 222, 223, \
220, 218, 217, 214, 204, 205, 203, 169, 170, 165, \
93, 97, 88, 82, 92, 76, 106, 108, 88, 101, \
110, 87, 101, 119, 96, 86, 108, 72, 92, 115, \
81, 93, 116, 84, 93, 114, 85, 92, 113, 86, \
91, 109, 86, 88, 94, 85, 101, 98, 99, 123, \
122, 122, 82, 82, 81, 70, 70, 70, 72, 72, \
72, 81, 81, 81, 128, 124, 116, 190, 185, 160, \
215, 212, 194, 229, 230, 221, 237, 238, 226, 237, \
237, 223, 238, 237, 223, 229, 225, 208, 194, 187, \
168, 168, 166, 150, 180, 181, 170, 197, 197, 187, \
156, 157, 148, 168, 170, 162, 135, 138, 128, 90, \
98, 82, 97, 104, 87, 93, 109, 87, 94, 112, \
87, 75, 97, 68, 86, 109, 79, 89, 111, 82, \
87, 111, 78, 88, 111, 80, 89, 110, 79, 91, \
105, 79, 91, 91, 87, 110, 109, 108, 112, 112, \
110, 130, 130, 129, 141, 141, 137, 150, 151, 146, \
170, 170, 166, 177, 174, 155, 170, 164, 136, 174, \
171, 148, 200, 196, 168, 203, 199, 167, 206, 198, \
167, 203, 191, 158, 190, 183, 161, 171, 169, 155, \
185, 186, 170, 177, 178, 166, 139, 140, 126, 88, \
89, 81, 97, 104, 90, 100, 114, 93, 118, 132, \
118, 113, 126, 112, 100, 114, 91, 68, 86, 67, \
70, 87, 66, 75, 95, 70, 82, 106, 74, 83, \
107, 73, 85, 107, 75, 81, 100, 71, 98, 103, \
92, 105, 104, 99, 118, 119, 111, 151, 151, 145, \
169, 170, 162, 180, 181, 171, 179, 180, 173, 181, \
181, 178, 139, 135, 115, 100, 95, 72, 141, 135, \
111, 162, 157, 131, 153, 147, 126, 156, 151, 128, \
188, 186, 176, 189, 189, 185, 210, 213, 197, 161, \
162, 146, 82, 82, 66, 80, 87, 68, 102, 120, \
92, 113, 132, 106, 129, 143, 125, 118, 132, 114, \
110, 128, 101, 77, 83, 77, 97, 99, 89, 91, \
102, 86, 84, 101, 80, 83, 101, 80, 89, 105, \
87, 83, 99, 80, 91, 108, 91, 115, 119, 109, \
118, 117, 105, 123, 124, 112, 144, 144, 137, 177, \
178, 167, 183, 183, 171, 181, 181, 176, 177, 176, \
171, 123, 121, 116, 102, 102, 92, 131, 131, 113, \
118, 117, 99, 136, 134, 116, 154, 151, 135, 129, \
127, 122, 175, 175, 171, 162, 159, 145, 91, 100, \
76, 104, 126, 94, 108, 130, 99, 110, 131, 104, \
113, 133, 104, 112, 132, 100, 110, 131, 98, 96, \
110, 94, 102, 113, 95, 96, 110, 90, 95, 111, \
90, 99, 115, 95, 104, 122, 101, 98, 115, 94, \
93, 113, 90, 103, 120, 99, 118, 122, 105, 121, \
121, 103, 135, 135, 116, 158, 158, 141, 173, 173, \
156, 168, 170, 155, 185, 186, 181, 203, 202, 201, \
189, 190, 185, 144, 143, 141, 90, 89, 86, 106, \
105, 94, 117, 115, 96, 85, 84, 75, 116, 117, \
113, 139, 140, 125, 103, 119, 89, 102, 128, 89, \
107, 130, 96, 112, 131, 104, 114, 134, 100, 111, \
131, 93, 105, 122, 87, 79, 95, 74, 78, 95, \
74, 73, 89, 69, 83, 98, 78, 93, 109, 84, \
91, 109, 82, 87, 105, 77, 90, 111, 78, 95, \
118, 82, 93, 103, 81, 85, 84, 71, 107, 105, \
83, 124, 123, 104, 150, 152, 137, 162, 164, 152, \
183, 184, 177, 198, 198, 193, 205, 205, 203, 167, \
167, 168, 99, 98, 102, 108, 108, 111, 128, 128, \
128, 125, 124, 123, 105, 103, 99, 103, 105, 90, \
105, 118, 91, 105, 127, 91, 106, 127, 91, 105, \
122, 88, 112, 130, 91, 116, 136, 97, 114, 133, \
93, 83, 96, 83, 88, 106, 88, 87, 103, 86, \
90, 103, 86, 88, 102, 81, 85, 101, 76, 76, \
91, 66, 75, 91, 68, 81, 99, 73, 81, 93, \
72, 81, 85, 75, 88, 87, 83, 75, 74, 70, \
105, 106, 100, 154, 154, 151, 148, 149, 146, 145, \
145, 144, 146, 147, 146, 139, 139, 139, 126, 126, \
127, 139, 139, 141, 161, 161, 163, 154, 152, 148, \
103, 104, 90, 111, 123, 100, 105, 121, 94, 97, \
113, 87, 104, 120, 90, 106, 122, 87, 109, 127, \
91, 109, 130, 93, 116, 133, 96, 89, 100, 89, \
86, 99, 80, 86, 97, 80, 85, 93, 82, 82, \
91, 78, 86, 96, 80, 89, 98, 83, 86, 96, \
80, 87, 102, 80, 89, 107, 76, 94, 109, 81, \
96, 105, 84, 81, 82, 71, 75, 75, 68, 99, \
99, 97, 98, 96, 96, 77, 77, 78, 95, 94, \
96, 136, 136, 136, 159, 159, 159, 178, 178, 176, \
171, 170, 165, 118, 121, 108, 89, 101, 76, 105, \
123, 98, 109, 124, 100, 103, 116, 91, 101, 116, \
90, 102, 120, 89, 102, 122, 85, 107, 125, 85, \
136, 148, 105, 94, 102, 95, 96, 102, 97, 99, \
103, 100, 100, 105, 103, 95, 103, 95, 93, 102, \
87, 96, 105, 89, 96, 107, 89, 88, 102, 79, \
85, 101, 74, 84, 102, 72, 86, 104, 74, 93, \
103, 79, 91, 93, 75, 70, 69, 60, 74, 70, \
67, 93, 94, 89, 133, 133, 128, 168, 168, 161, \
185, 185, 176, 173, 173, 156, 129, 132, 111, 85, \
98, 77, 80, 97, 73, 85, 99, 78, 99, 113, \
93, 101, 115, 92, 91, 105, 81, 94, 113, 80, \
102, 121, 83, 124, 141, 92, 176, 188, 124, 99, \
104, 99, 105, 111, 106, 102, 110, 104, 94, 105, \
94, 83, 96, 80, 80, 92, 71, 84, 93, 70, \
82, 91, 69, 77, 84, 65, 73, 80, 63, 77, \
88, 69, 82, 94, 72, 78, 89, 68, 102, 98, \
61, 111, 102, 62, 91, 94, 71, 115, 114, 95, \
131, 130, 109, 127, 130, 98, 120, 124, 94, 113, \
120, 92, 102, 116, 87, 92, 107, 87, 94, 108, \
88, 96, 111, 92, 100, 114, 97, 101, 114, 98, \
92, 103, 88, 90, 100, 85, 96, 107, 84, 139, \
148, 108, 190, 197, 135, 100, 106, 99, 93, 104, \
91, 89, 103, 85, 88, 101, 83, 82, 95, 74, \
79, 90, 66, 75, 80, 61, 68, 73, 53, 67, \
71, 53, 58, 60, 48, 63, 66, 51, 68, 74, \
54, 75, 78, 54, 130, 116, 73, 112, 106, 67, \
63, 71, 51, 92, 94, 68, 122, 116, 78, 107, \
111, 70, 84, 97, 66, 91, 108, 71, 98, 115, \
83, 101, 113, 93, 103, 119, 92, 100, 118, 96, \
107, 117, 107, 104, 112, 104, 110, 119, 106, 116, \
122, 112, 113, 119, 102, 145, 148, 119, 196, 197, \
155, 84, 92, 82, 77, 87, 73, 72, 84, 68, \
73, 83, 69, 74, 85, 66, 75, 85, 64, 74, \
80, 61, 69, 75, 53, 64, 68, 47, 57, 60, \
44, 58, 60, 45, 60, 64, 49, 86, 84, 61, \
137, 121, 84, 116, 110, 87, 57, 64, 53, 80, \
81, 53, 158, 141, 86, 89, 92, 62, 70, 84, \
63, 82, 96, 66, 85, 100, 70, 93, 108, 79, \
94, 109, 85, 101, 115, 95, 109, 121, 105, 112, \
122, 109, 113, 122, 109, 114, 120, 110, 115, 117, \
110, 152, 150, 131, 205, 203, 170, 80, 89, 79, \
81, 91, 79, 76, 86, 77, 77, 83, 75, 67, \
73, 64, 71, 80, 67, 70, 78, 64, 67, 75, \
57, 68, 74, 56, 71, 75, 57, 78, 81, 63, \
84, 82, 66, 110, 101, 81, 130, 113, 86, 106, \
101, 79, 72, 82, 68, 95, 93, 64, 167, 148, \
106, 81, 87, 66, 72, 84, 64, 76, 88, 68, \
82, 96, 71, 87, 101, 78, 86, 100, 77, 97, \
108, 87, 103, 114, 98, 103, 112, 98, 106, 113, \
102, 112, 117, 109, 124, 126, 119, 184, 183, 169, \
215, 214, 188, 82, 88, 84, 89, 95, 91, 87, \
92, 90, 89, 93, 90, 83, 87, 81, 76, 83, \
76, 72, 81, 68, 69, 80, 63, 73, 80, 68, \
75, 78, 64, 78, 82, 66, 94, 92, 77, 103, \
98, 80, 90, 89, 73, 65, 71, 58, 57, 66, \
54, 106, 100, 78, 155, 144, 122, 85, 93, 76, \
76, 89, 69, 81, 96, 73, 85, 98, 81, 90, \
103, 89, 92, 105, 85, 93, 102, 89, 102, 108, \
102, 106, 113, 103, 109, 115, 105, 118, 126, 116, \
121, 126, 116, 134, 136, 126, 141, 142, 127, 97, \
103, 101, 110, 113, 111, 102, 105, 103, 94, 100, \
97, 89, 96, 91, 81, 88, 81, 75, 81, 74, \
66, 75, 64, 71, 80, 70, 76, 84, 70, 71, \
79, 65, 68, 78, 66, 73, 82, 68, 77, 85, \
72, 84, 88, 73, 101, 97, 85, 132, 118, 107, \
130, 121, 105, 78, 88, 68, 78, 91, 73, 88, \
102, 83, 91, 106, 89, 93, 108, 92, 103, 118, \
102, 105, 117, 102, 108, 117, 102, 121, 127, 115, \
126, 132, 121, 124, 131, 122, 124, 130, 121, 131, \
135, 120, 136, 139, 123, 95, 107, 96, 101, 112, \
102, 92, 101, 93, 91, 100, 92, 90, 101, 92, \
83, 94, 84, 79, 88, 79, 73, 83, 72, 69, \
79, 71, 67, 79, 66, 70, 83, 67, 68, 81, \
68, 69, 79, 69, 91, 95, 85, 119, 115, 101, \
127, 120, 107, 118, 109, 101, 109, 103, 86, 75, \
82, 68, 78, 91, 76, 89, 103, 83, 92, 108, \
85, 96, 110, 90, 99, 112, 94, 106, 119, 95, \
113, 123, 105, 119, 125, 112, 137, 143, 122, 144, \
149, 131, 161, 166, 143, 180, 185, 151, 190, 195, \
158, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '29454';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a155565816d87e792d53e0919bde6ebe8';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_frog8';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{105, 119, 110, 97, 111, 102, 89, 102, 94, 86, 102, \
96, 97, 111, 113, 97, 132, 128, 101, 145, 130, \
113, 150, 134, 118, 160, 144, 153, 191, 180, 179, \
223, 225, 153, 207, 222, 156, 215, 226, 145, 205, \
209, 129, 191, 186, 128, 191, 180, 125, 183, 171, \
121, 177, 165, 123, 179, 167, 110, 165, 154, 100, \
140, 128, 124, 153, 139, 118, 145, 130, 102, 126, \
111, 97, 121, 110, 100, 124, 118, 99, 120, 111, \
96, 114, 102, 89, 101, 89, 86, 89, 82, 80, \
81, 75, 75, 77, 71, 111, 121, 116, 96, 106, \
101, 92, 104, 98, 93, 117, 111, 104, 130, 129, \
101, 144, 139, 112, 163, 147, 124, 161, 140, 127, \
166, 142, 146, 188, 172, 156, 208, 207, 155, 214, \
222, 155, 206, 206, 129, 180, 174, 119, 172, 160, \
121, 174, 156, 123, 172, 150, 117, 161, 139, 113, \
148, 130, 105, 133, 117, 98, 120, 99, 114, 131, \
110, 111, 125, 108, 96, 105, 93, 94, 101, 94, \
90, 94, 91, 92, 95, 89, 91, 92, 86, 87, \
87, 80, 77, 77, 71, 72, 72, 67, 64, 64, \
59, 105, 116, 112, 87, 94, 92, 79, 94, 89, \
94, 126, 116, 101, 133, 128, 103, 150, 142, 115, \
167, 149, 129, 163, 138, 140, 174, 145, 130, 173, \
154, 136, 190, 184, 143, 200, 198, 122, 163, 152, \
102, 142, 127, 110, 150, 132, 121, 161, 140, 127, \
164, 138, 107, 136, 111, 98, 113, 93, 106, 109, \
92, 110, 113, 90, 106, 111, 86, 104, 104, 87, \
88, 84, 75, 90, 82, 77, 89, 77, 74, 86, \
75, 72, 81, 69, 66, 84, 74, 71, 74, 72, \
67, 66, 64, 58, 56, 54, 49, 96, 112, 108, \
83, 93, 91, 83, 106, 100, 106, 140, 126, 115, \
142, 131, 111, 151, 138, 119, 162, 140, 138, 164, \
135, 144, 173, 143, 134, 175, 155, 118, 166, 153, \
107, 151, 138, 113, 142, 125, 112, 139, 121, 112, \
140, 121, 113, 140, 121, 111, 139, 116, 99, 119, \
98, 119, 126, 110, 115, 110, 98, 107, 101, 85, \
94, 90, 72, 90, 81, 68, 89, 76, 67, 94, \
77, 70, 83, 65, 59, 82, 66, 62, 73, 59, \
56, 67, 56, 54, 60, 55, 51, 50, 45, 41, \
47, 42, 38, 90, 113, 109, 90, 106, 105, 97, \
130, 123, 115, 149, 131, 134, 150, 134, 131, 159, \
141, 138, 167, 140, 159, 173, 145, 148, 173, 147, \
135, 171, 152, 102, 139, 120, 104, 133, 110, 117, \
136, 117, 107, 124, 107, 103, 120, 104, 98, 116, \
102, 95, 116, 102, 108, 125, 113, 116, 123, 114, \
102, 101, 95, 98, 91, 85, 87, 78, 71, 82, \
69, 61, 86, 69, 61, 84, 67, 56, 77, 62, \
51, 72, 61, 52, 66, 58, 53, 54, 48, 45, \
52, 45, 42, 53, 45, 42, 57, 49, 46, 96, \
131, 124, 103, 135, 126, 108, 148, 134, 132, 169, \
151, 135, 158, 139, 139, 163, 137, 155, 174, 143, \
160, 171, 141, 130, 153, 126, 114, 140, 119, 102, \
126, 105, 113, 132, 109, 108, 123, 105, 105, 120, \
103, 109, 125, 109, 103, 119, 109, 94, 113, 103, \
98, 113, 109, 99, 108, 108, 87, 90, 87, 89, \
86, 82, 80, 71, 70, 78, 64, 61, 87, 69, \
58, 86, 68, 54, 82, 67, 55, 76, 63, 51, \
66, 57, 47, 58, 50, 45, 62, 52, 50, 62, \
53, 50, 60, 53, 50, 102, 148, 139, 117, 166, \
149, 120, 165, 144, 140, 184, 169, 128, 167, 147, \
144, 173, 139, 160, 174, 141, 144, 157, 125, 121, \
142, 110, 115, 131, 105, 108, 121, 101, 110, 123, \
106, 103, 116, 101, 101, 116, 95, 101, 116, 96, \
97, 111, 98, 86, 99, 87, 86, 94, 89, 90, \
93, 92, 81, 80, 75, 79, 78, 69, 79, 73, \
72, 77, 64, 63, 92, 73, 60, 97, 76, 60, \
93, 73, 64, 96, 78, 63, 82, 63, 50, 72, \
54, 49, 69, 56, 55, 59, 50, 48, 51, 46, \
42, 110, 160, 152, 126, 179, 163, 120, 167, 147, \
134, 178, 162, 153, 195, 172, 153, 183, 150, 144, \
161, 127, 130, 144, 113, 131, 150, 118, 120, 135, \
108, 111, 123, 100, 101, 110, 92, 88, 96, 83, \
91, 98, 74, 105, 107, 80, 98, 96, 76, 90, \
85, 74, 88, 83, 64, 88, 80, 58, 89, 76, \
66, 88, 80, 73, 81, 74, 69, 79, 65, 61, \
91, 72, 57, 88, 67, 52, 89, 69, 60, 98, \
79, 63, 91, 72, 58, 75, 56, 51, 61, 54, \
50, 49, 45, 41, 39, 40, 34, 105, 154, 146, \
120, 173, 157, 117, 165, 145, 155, 196, 176, 181, \
217, 194, 129, 156, 127, 112, 128, 97, 151, 163, \
133, 159, 174, 145, 119, 136, 107, 123, 135, 108, \
128, 132, 111, 117, 116, 103, 118, 112, 87, 154, \
140, 108, 118, 96, 71, 100, 77, 66, 112, 93, \
62, 113, 95, 52, 101, 77, 61, 90, 74, 67, \
85, 75, 64, 96, 81, 69, 103, 85, 68, 92, \
72, 58, 82, 62, 53, 78, 59, 43, 89, 69, \
56, 78, 61, 55, 42, 43, 36, 36, 38, 32, \
34, 37, 31, 104, 149, 137, 128, 176, 156, 137, \
180, 157, 170, 203, 180, 151, 177, 156, 98, 117, \
95, 108, 119, 93, 154, 161, 133, 165, 176, 149, \
125, 144, 112, 128, 140, 108, 126, 123, 99, 104, \
92, 77, 115, 99, 73, 151, 126, 94, 121, 90, \
64, 109, 77, 64, 118, 91, 59, 134, 110, 67, \
115, 89, 69, 91, 71, 62, 90, 76, 58, 97, \
81, 60, 98, 81, 62, 90, 71, 59, 85, 65, \
56, 86, 67, 51, 82, 62, 49, 76, 61, 54, \
37, 39, 32, 35, 39, 32, 43, 44, 38, 119, \
156, 139, 145, 187, 161, 157, 192, 163, 150, 172, \
146, 107, 120, 101, 87, 93, 80, 102, 103, 83, \
124, 124, 99, 143, 152, 127, 124, 145, 112, 136, \
148, 113, 111, 103, 76, 95, 71, 56, 108, 83, \
58, 118, 90, 62, 109, 77, 56, 111, 80, 66, \
114, 88, 66, 115, 93, 66, 103, 83, 63, 99, \
80, 65, 114, 96, 73, 112, 96, 68, 108, 92, \
69, 92, 73, 62, 85, 65, 56, 89, 70, 54, \
78, 58, 45, 71, 55, 49, 46, 46, 40, 47, \
47, 42, 56, 51, 47, 144, 176, 153, 157, 191, \
161, 141, 168, 135, 102, 114, 86, 85, 87, 70, \
105, 103, 92, 109, 104, 87, 116, 111, 89, 129, \
137, 111, 132, 153, 118, 141, 153, 116, 129, 117, \
86, 123, 94, 72, 118, 91, 68, 122, 97, 73, \
105, 79, 60, 107, 80, 62, 112, 87, 78, 103, \
83, 75, 88, 75, 56, 98, 80, 60, 123, 102, \
77, 120, 102, 71, 112, 95, 73, 94, 75, 65, \
85, 65, 56, 85, 67, 51, 75, 55, 43, 71, \
55, 49, 53, 51, 45, 57, 52, 48, 63, 52, \
50, 137, 169, 147, 126, 144, 125, 98, 104, 87, \
83, 82, 66, 104, 102, 78, 127, 128, 97, 115, \
115, 93, 144, 148, 125, 139, 153, 116, 140, 158, \
119, 146, 151, 117, 136, 120, 81, 134, 106, 61, \
102, 82, 66, 138, 127, 96, 117, 102, 66, 116, \
88, 58, 126, 95, 86, 119, 96, 85, 99, 85, \
62, 94, 73, 57, 99, 74, 55, 98, 73, 53, \
91, 65, 56, 83, 58, 54, 85, 65, 56, 96, \
79, 68, 73, 57, 48, 57, 45, 38, 57, 52, \
45, 58, 50, 44, 65, 53, 48, 112, 136, 117, \
93, 100, 88, 87, 80, 72, 85, 76, 67, 106, \
104, 78, 158, 161, 123, 107, 111, 85, 121, 130, \
108, 162, 181, 145, 149, 169, 132, 150, 158, 126, \
144, 132, 96, 141, 112, 70, 85, 65, 48, 124, \
112, 77, 133, 115, 81, 135, 104, 76, 136, 105, \
86, 136, 115, 85, 119, 103, 77, 104, 83, 70, \
104, 80, 61, 100, 77, 56, 95, 70, 60, 88, \
64, 58, 85, 65, 55, 89, 72, 63, 82, 68, \
61, 58, 47, 41, 55, 51, 42, 58, 50, 43, \
64, 52, 46, 100, 109, 96, 87, 84, 75, 88, \
75, 69, 74, 63, 55, 78, 75, 54, 171, 174, \
141, 120, 124, 98, 70, 80, 59, 148, 169, 142, \
172, 194, 164, 146, 162, 133, 140, 140, 111, 149, \
121, 91, 134, 110, 75, 137, 117, 72, 130, 103, \
74, 155, 125, 104, 166, 141, 110, 140, 123, 72, \
150, 135, 105, 116, 98, 85, 115, 98, 72, 115, \
99, 70, 96, 79, 58, 86, 66, 54, 84, 64, \
54, 81, 64, 55, 80, 67, 59, 68, 57, 51, \
56, 51, 43, 60, 52, 45, 65, 53, 47, 88, \
84, 75, 83, 72, 66, 81, 65, 60, 65, 53, \
47, 52, 48, 32, 128, 130, 103, 174, 177, 152, \
122, 133, 109, 133, 153, 126, 152, 173, 147, 151, \
172, 148, 140, 155, 131, 143, 128, 94, 174, 156, \
96, 169, 148, 86, 138, 112, 71, 120, 94, 72, \
166, 146, 111, 169, 156, 95, 156, 141, 107, 134, \
117, 106, 117, 102, 76, 117, 103, 72, 111, 96, \
70, 102, 85, 68, 89, 70, 59, 82, 66, 57, \
79, 66, 58, 74, 63, 57, 56, 51, 42, 59, \
51, 44, 62, 50, 44, 88, 76, 70, 83, 70, \
64, 74, 61, 55, 64, 54, 48, 50, 46, 34, \
66, 66, 47, 175, 179, 154, 210, 221, 189, 163, \
179, 144, 124, 138, 112, 165, 186, 167, 164, 189, \
173, 134, 141, 104, 152, 148, 82, 167, 153, 95, \
160, 144, 92, 108, 90, 60, 105, 87, 60, 182, \
169, 117, 140, 125, 89, 124, 104, 94, 115, 96, \
77, 98, 81, 54, 115, 97, 73, 123, 104, 87, \
100, 80, 70, 80, 63, 54, 74, 61, 53, 68, \
58, 51, 53, 48, 40, 60, 52, 44, 63, 51, \
45, 93, 79, 73, 81, 70, 64, 72, 63, 56, \
57, 49, 43, 54, 48, 41, 51, 51, 35, 101, \
105, 80, 184, 194, 154, 197, 208, 161, 149, 156, \
126, 131, 148, 133, 166, 197, 190, 133, 157, 134, \
142, 150, 109, 148, 141, 114, 152, 147, 100, 134, \
123, 87, 93, 75, 62, 134, 119, 88, 130, 115, \
78, 101, 78, 68, 107, 81, 72, 102, 78, 58, \
103, 79, 60, 108, 86, 72, 96, 77, 67, 82, \
66, 57, 71, 58, 50, 60, 50, 43, 56, 51, \
42, 66, 58, 50, 68, 56, 50, 87, 75, 71, \
74, 63, 57, 67, 61, 52, 59, 52, 43, 57, \
49, 40, 59, 55, 43, 66, 65, 47, 90, 95, \
64, 144, 150, 113, 177, 180, 153, 122, 130, 112, \
131, 150, 139, 136, 163, 150, 133, 148, 127, 120, \
124, 110, 127, 131, 99, 128, 121, 90, 117, 100, \
82, 131, 116, 87, 113, 101, 71, 107, 90, 74, \
106, 83, 68, 108, 82, 64, 101, 76, 58, 90, \
69, 56, 85, 67, 58, 83, 64, 57, 78, 63, \
56, 59, 49, 42, 59, 50, 45, 70, 59, 53, \
72, 59, 51, 82, 78, 74, 62, 52, 46, 56, \
53, 42, 56, 51, 39, 56, 48, 36, 58, 50, \
40, 62, 56, 46, 45, 44, 33, 56, 58, 45, \
139, 141, 122, 149, 147, 123, 151, 153, 129, 128, \
142, 128, 131, 144, 125, 100, 112, 89, 113, 121, \
97, 112, 104, 81, 121, 105, 72, 139, 124, 87, \
106, 98, 76, 81, 75, 53, 108, 95, 68, 117, \
95, 73, 105, 84, 65, 92, 77, 62, 92, 76, \
68, 84, 62, 57, 84, 67, 60, 66, 56, 47, \
62, 47, 43, 70, 56, 50, 74, 60, 50, 95, \
99, 94, 69, 66, 59, 51, 52, 41, 50, 50, \
40, 51, 47, 39, 54, 50, 42, 59, 55, 47, \
49, 47, 43, 44, 45, 41, 103, 103, 90, 133, \
131, 106, 178, 175, 146, 127, 128, 108, 117, 120, \
97, 135, 141, 114, 101, 106, 77, 105, 95, 71, \
119, 100, 68, 127, 111, 76, 115, 105, 84, 82, \
82, 60, 62, 57, 32, 97, 82, 65, 101, 88, \
73, 89, 80, 67, 86, 72, 63, 80, 58, 51, \
87, 69, 61, 70, 57, 47, 69, 53, 42, 81, \
65, 55, 78, 62, 54, 110, 124, 117, 101, 110, \
101, 87, 96, 85, 70, 77, 68, 46, 51, 44, \
44, 47, 38, 49, 49, 39, 44, 44, 38, 40, \
41, 38, 71, 71, 57, 128, 126, 100, 169, 165, \
131, 131, 122, 92, 119, 112, 86, 141, 138, 109, \
129, 128, 94, 128, 116, 88, 118, 97, 68, 118, \
98, 68, 114, 103, 81, 115, 118, 97, 83, 86, \
66, 56, 49, 36, 49, 43, 32, 45, 42, 30, \
72, 61, 49, 103, 82, 73, 89, 68, 59, 74, \
59, 46, 86, 69, 52, 86, 68, 55, 79, 60, \
53, 93, 118, 110, 99, 122, 111, 118, 134, 123, \
129, 145, 134, 91, 106, 95, 77, 87, 73, 71, \
76, 59, 58, 61, 46, 63, 66, 53, 67, 68, \
48, 101, 100, 71, 173, 169, 132, 160, 151, 113, \
150, 139, 112, 125, 114, 89, 151, 141, 107, 140, \
124, 93, 111, 88, 61, 114, 91, 65, 107, 93, \
70, 134, 140, 117, 115, 122, 102, 88, 85, 71, \
72, 71, 60, 46, 47, 33, 80, 72, 56, 114, \
95, 83, 93, 71, 60, 90, 72, 58, 98, 79, \
62, 83, 63, 48, 82, 61, 51, 99, 134, 125, \
87, 122, 109, 112, 136, 123, 136, 160, 146, 149, \
173, 154, 151, 169, 145, 139, 150, 122, 129, 136, \
106, 136, 141, 111, 136, 139, 107, 128, 127, 95, \
158, 156, 119, 166, 166, 120, 151, 142, 117, 115, \
97, 79, 138, 116, 87, 133, 112, 81, 113, 88, \
63, 115, 90, 68, 102, 86, 63, 119, 124, 98, \
109, 116, 93, 113, 110, 93, 121, 120, 107, 81, \
83, 67, 95, 91, 72, 102, 84, 70, 100, 77, \
64, 100, 79, 65, 95, 72, 59, 82, 59, 46, \
89, 67, 53, 120, 161, 151, 106, 148, 134, 95, \
125, 112, 88, 116, 100, 130, 160, 137, 167, 191, \
161, 166, 183, 148, 160, 172, 130, 160, 168, 123, \
162, 167, 126, 166, 166, 131, 157, 158, 121, 145, \
153, 107, 123, 119, 95, 79, 60, 47, 106, 80, \
57, 120, 97, 68, 110, 84, 61, 104, 78, 59, \
119, 103, 81, 113, 116, 88, 123, 128, 102, 111, \
107, 87, 115, 110, 93, 113, 113, 93, 105, 103, \
81, 88, 70, 54, 102, 78, 65, 97, 73, 61, \
88, 64, 57, 87, 63, 53, 98, 75, 59, 131, \
171, 159, 139, 176, 164, 106, 137, 127, 86, 110, \
105, 92, 120, 112, 124, 158, 136, 147, 175, 145, \
150, 169, 133, 149, 158, 119, 149, 151, 116, 158, \
160, 126, 164, 171, 137, 141, 148, 121, 88, 89, \
70, 49, 43, 28, 68, 57, 40, 92, 73, 58, \
100, 79, 65, 98, 82, 65, 134, 125, 103, 125, \
124, 101, 122, 123, 102, 112, 107, 86, 104, 87, \
69, 122, 110, 84, 109, 106, 73, 86, 70, 52, \
109, 84, 73, 91, 66, 56, 85, 67, 59, 86, \
68, 56, 94, 74, 57, 133, 172, 154, 128, 162, \
149, 105, 135, 126, 95, 119, 119, 94, 123, 120, \
112, 149, 133, 124, 156, 132, 116, 139, 110, 123, \
136, 106, 140, 143, 116, 143, 146, 119, 133, 142, \
116, 117, 126, 110, 57, 64, 49, 32, 35, 22, \
54, 52, 41, 74, 62, 53, 73, 60, 49, 87, \
75, 60, 133, 123, 105, 109, 106, 88, 110, 113, \
94, 116, 117, 95, 107, 93, 74, 125, 110, 83, \
112, 105, 72, 82, 67, 50, 102, 81, 72, 87, \
67, 55, 73, 59, 48, 83, 66, 53, 102, 82, \
66, 110, 148, 124, 95, 128, 113, 97, 125, 117, \
94, 121, 120, 98, 128, 125, 111, 145, 132, 125, \
158, 137, 114, 141, 117, 76, 92, 71, 75, 81, \
64, 73, 76, 60, 60, 69, 53, 47, 59, 49, \
30, 41, 31, 27, 34, 26, 48, 52, 45, 77, \
74, 66, 61, 55, 45, 78, 68, 56, 117, 103, \
90, 108, 104, 90, 127, 135, 118, 131, 140, 120, \
117, 117, 96, 123, 113, 89, 112, 100, 75, 72, \
61, 48, 65, 54, 43, 63, 50, 36, 76, 62, \
48, 92, 75, 61, 99, 78, 63, 102, 143, 119, \
102, 137, 121, 95, 127, 118, 74, 105, 101, 93, \
125, 121, 125, 157, 147, 124, 158, 141, 148, 181, \
163, 103, 125, 111, 37, 46, 37, 29, 34, 26, \
27, 36, 28, 21, 35, 29, 23, 35, 30, 27, \
35, 31, 29, 35, 32, 42, 46, 40, 58, 58, \
51, 70, 64, 54, 79, 67, 57, 69, 64, 55, \
141, 149, 136, 163, 178, 159, 119, 131, 111, 111, \
107, 87, 107, 95, 78, 97, 94, 83, 58, 55, \
43, 73, 64, 49, 119, 105, 89, 91, 74, 59, \
90, 70, 56, 111, 158, 142, 107, 149, 135, 104, \
143, 130, 85, 123, 115, 81, 115, 110, 108, 139, \
131, 126, 162, 149, 131, 170, 153, 129, 159, 145, \
64, 79, 70, 31, 38, 31, 30, 40, 32, 26, \
36, 30, 27, 35, 30, 30, 35, 31, 30, 32, \
29, 29, 30, 28, 32, 33, 30, 35, 34, 28, \
37, 34, 25, 33, 27, 22, 82, 85, 78, 144, \
159, 144, 123, 140, 122, 112, 115, 99, 98, 93, \
80, 112, 117, 108, 107, 107, 98, 109, 96, 82, \
112, 98, 79, 94, 78, 61, 95, 74, 61, 95, \
148, 143, 95, 145, 133, 96, 144, 126, 106, 152, \
139, 92, 128, 122, 103, 132, 126, 130, 166, 157, \
122, 166, 150, 134, 170, 153, 89, 107, 96, 28, \
37, 29, 29, 38, 29, 28, 34, 26, 37, 40, \
33, 45, 45, 39, 41, 38, 33, 33, 30, 31, \
31, 30, 30, 29, 31, 27, 29, 35, 27, 44, \
38, 36, 43, 39, 38, 85, 96, 87, 141, 159, \
144, 129, 137, 122, 96, 100, 89, 105, 118, 110, \
106, 107, 99, 98, 80, 68, 103, 89, 68, 96, \
80, 63, 96, 75, 63, 92, 144, 143, 98, 138, \
132, 90, 130, 120, 118, 165, 157, 106, 143, 138, \
91, 119, 114, 111, 148, 142, 114, 161, 149, 130, \
170, 152, 108, 129, 116, 40, 44, 35, 38, 36, \
27, 43, 38, 28, 62, 51, 43, 68, 55, 50, \
64, 53, 49, 48, 38, 40, 42, 34, 36, 44, \
40, 38, 51, 50, 46, 65, 57, 56, 65, 54, \
53, 64, 62, 55, 95, 106, 92, 121, 136, 118, \
112, 126, 110, 102, 123, 110, 98, 106, 94, 93, \
71, 61, 97, 78, 64, 94, 75, 62, 103, 81, \
70, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '29764';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a35b3015e442fe82e6682ac5e9f791674';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_automobile2';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{123, 107, 80, 131, 111, 81, 141, 120, 89, 133, 116, \
89, 128, 112, 87, 121, 105, 80, 119, 104, 77, \
127, 112, 83, 159, 142, 116, 139, 123, 97, 115, \
101, 77, 114, 101, 79, 116, 101, 79, 123, 107, \
89, 135, 119, 102, 121, 105, 84, 113, 98, 74, \
110, 96, 75, 107, 93, 77, 97, 84, 68, 86, \
79, 70, 61, 59, 66, 95, 88, 71, 109, 95, \
74, 113, 97, 76, 111, 97, 80, 106, 94, 74, \
98, 89, 68, 92, 84, 62, 88, 81, 61, 83, \
76, 58, 81, 74, 56, 124, 109, 82, 144, 122, \
89, 163, 138, 102, 136, 116, 86, 135, 120, 95, \
125, 109, 83, 115, 100, 73, 121, 106, 78, 160, \
143, 117, 131, 115, 90, 109, 94, 69, 109, 94, \
71, 114, 98, 74, 115, 98, 77, 114, 98, 78, \
115, 99, 76, 114, 100, 74, 117, 104, 84, 103, \
92, 79, 99, 89, 75, 99, 95, 88, 64, 64, \
71, 106, 100, 83, 123, 109, 86, 127, 112, 89, \
128, 113, 93, 123, 109, 86, 114, 102, 80, 105, \
94, 72, 98, 89, 70, 91, 84, 65, 90, 83, \
63, 124, 103, 72, 138, 116, 85, 152, 134, 105, \
134, 118, 93, 136, 120, 95, 116, 100, 74, 106, \
91, 64, 110, 95, 67, 131, 116, 91, 119, 103, \
78, 109, 93, 68, 107, 91, 66, 110, 94, 68, \
113, 96, 72, 116, 99, 77, 124, 107, 82, 131, \
115, 88, 133, 121, 101, 101, 92, 82, 110, 102, \
90, 112, 109, 102, 67, 69, 76, 115, 110, 92, \
136, 123, 98, 145, 128, 102, 148, 130, 107, 143, \
126, 102, 133, 118, 95, 122, 108, 86, 110, 99, \
79, 99, 91, 71, 98, 90, 70, 117, 93, 60, \
137, 118, 90, 126, 118, 97, 106, 96, 74, 122, \
106, 81, 112, 96, 70, 107, 91, 64, 104, 89, \
62, 104, 89, 65, 106, 91, 66, 111, 95, 70, \
118, 101, 75, 125, 108, 80, 128, 110, 85, 131, \
113, 89, 140, 123, 96, 151, 132, 102, 152, 137, \
115, 109, 100, 90, 118, 110, 97, 121, 117, 110, \
72, 74, 81, 127, 121, 103, 155, 139, 113, 168, \
148, 120, 172, 151, 126, 166, 147, 121, 154, 136, \
112, 139, 122, 101, 123, 111, 91, 110, 100, 80, \
110, 100, 80, 104, 87, 59, 120, 104, 77, 115, \
105, 83, 96, 85, 62, 104, 88, 63, 104, 88, \
62, 106, 91, 64, 114, 100, 73, 118, 105, 82, \
122, 107, 83, 133, 117, 92, 144, 127, 100, 148, \
129, 100, 144, 125, 99, 146, 126, 102, 158, 139, \
111, 176, 154, 120, 178, 160, 135, 123, 114, 102, \
128, 119, 105, 129, 122, 114, 77, 76, 85, 146, \
136, 119, 178, 157, 131, 190, 165, 137, 190, 166, \
139, 182, 160, 132, 168, 148, 124, 154, 133, 113, \
138, 123, 103, 122, 111, 91, 123, 112, 91, 87, \
77, 57, 88, 75, 52, 96, 85, 65, 97, 87, \
67, 112, 98, 76, 116, 100, 76, 124, 107, 81, \
141, 124, 98, 142, 126, 102, 139, 123, 99, 156, \
138, 112, 173, 152, 123, 174, 152, 123, 161, 142, \
114, 161, 143, 114, 183, 159, 130, 204, 175, 143, \
202, 179, 154, 136, 125, 112, 139, 129, 113, 144, \
132, 119, 93, 86, 88, 163, 148, 130, 190, 166, \
140, 199, 173, 146, 196, 172, 145, 187, 165, 138, \
175, 154, 130, 161, 141, 120, 149, 133, 112, 126, \
115, 98, 124, 115, 97, 84, 74, 54, 93, 78, \
58, 99, 89, 74, 113, 104, 89, 146, 130, 109, \
143, 124, 101, 153, 131, 105, 180, 156, 129, 172, \
151, 126, 159, 140, 116, 180, 159, 132, 198, 173, \
142, 199, 173, 145, 184, 165, 134, 180, 161, 129, \
202, 174, 143, 222, 189, 161, 218, 191, 167, 141, \
128, 114, 147, 136, 120, 167, 149, 131, 136, 123, \
116, 179, 161, 141, 195, 171, 144, 201, 177, 151, \
198, 175, 150, 189, 167, 143, 178, 158, 134, 165, \
145, 123, 158, 139, 117, 116, 104, 92, 94, 89, \
75, 125, 106, 80, 132, 109, 83, 132, 115, 96, \
136, 121, 103, 184, 162, 136, 174, 150, 122, 179, \
151, 122, 206, 178, 149, 195, 172, 147, 179, 160, \
136, 192, 171, 144, 207, 182, 150, 208, 180, 149, \
202, 171, 142, 184, 152, 122, 195, 167, 134, 224, \
194, 166, 224, 195, 173, 142, 127, 114, 155, 142, \
128, 173, 155, 138, 125, 115, 105, 174, 157, 136, \
194, 173, 143, 200, 177, 150, 196, 172, 146, 188, \
164, 139, 180, 158, 134, 169, 149, 125, 163, 144, \
122, 110, 99, 88, 85, 80, 68, 155, 136, 110, \
155, 132, 106, 158, 141, 121, 147, 132, 113, 196, \
175, 150, 190, 168, 141, 191, 166, 138, 207, 182, \
154, 200, 178, 153, 186, 167, 143, 189, 169, 141, \
198, 173, 140, 175, 139, 110, 147, 97, 73, 144, \
92, 68, 182, 148, 118, 210, 184, 157, 208, 181, \
161, 131, 116, 104, 146, 132, 120, 159, 143, 129, \
74, 68, 59, 124, 111, 89, 187, 168, 138, 195, \
174, 145, 187, 162, 137, 180, 156, 131, 174, 152, \
129, 169, 148, 125, 162, 145, 122, 113, 102, 92, \
95, 89, 80, 93, 81, 63, 121, 102, 81, 160, \
146, 129, 128, 116, 100, 161, 143, 123, 172, 154, \
132, 143, 125, 103, 152, 131, 108, 184, 162, 138, \
184, 165, 141, 176, 156, 128, 185, 159, 126, 147, \
107, 79, 105, 46, 25, 122, 60, 41, 171, 132, \
106, 163, 140, 116, 167, 145, 125, 134, 121, 108, \
126, 114, 103, 118, 105, 95, 70, 68, 63, 124, \
115, 96, 190, 174, 146, 184, 165, 138, 176, 154, \
130, 171, 150, 127, 167, 147, 125, 162, 144, 123, \
157, 142, 120, 115, 106, 96, 83, 77, 70, 54, \
48, 33, 88, 72, 52, 145, 129, 110, 113, 99, \
81, 132, 114, 92, 144, 126, 104, 120, 103, 80, \
139, 120, 96, 171, 149, 124, 180, 161, 136, 183, \
162, 135, 192, 167, 134, 159, 125, 96, 120, 72, \
50, 123, 72, 53, 167, 134, 110, 154, 138, 116, \
127, 112, 91, 114, 104, 91, 99, 91, 80, 92, \
84, 77, 102, 104, 105, 118, 111, 98, 185, 170, \
147, 169, 151, 127, 166, 147, 126, 157, 139, 119, \
154, 138, 119, 152, 137, 119, 145, 134, 112, 101, \
92, 83, 71, 66, 61, 78, 70, 54, 87, 66, \
41, 104, 80, 55, 119, 98, 75, 158, 136, 110, \
173, 151, 125, 189, 167, 141, 198, 178, 151, 201, \
181, 155, 215, 197, 174, 231, 212, 186, 238, 215, \
184, 224, 203, 173, 201, 175, 149, 178, 151, 127, \
169, 151, 126, 129, 121, 99, 94, 84, 64, 74, \
68, 52, 67, 62, 49, 66, 60, 54, 66, 70, \
75, 86, 81, 71, 137, 123, 104, 121, 104, 87, \
119, 104, 88, 110, 97, 80, 105, 93, 77, 123, \
112, 97, 101, 92, 72, 68, 59, 50, 78, 73, \
69, 89, 70, 51, 94, 64, 30, 95, 68, 37, \
88, 75, 54, 73, 67, 46, 93, 80, 56, 150, \
133, 109, 136, 125, 103, 128, 120, 95, 149, 142, \
124, 163, 153, 137, 194, 179, 158, 159, 147, 124, \
161, 152, 124, 132, 126, 96, 105, 102, 74, 108, \
106, 84, 97, 92, 72, 128, 121, 102, 130, 119, \
97, 106, 99, 91, 64, 68, 77, 137, 132, 120, \
122, 113, 100, 71, 63, 63, 73, 67, 63, 74, \
68, 59, 65, 60, 49, 70, 65, 56, 70, 68, \
56, 84, 72, 63, 83, 77, 72, 80, 49, 22, \
81, 48, 10, 94, 71, 39, 52, 43, 30, 22, \
23, 15, 66, 63, 49, 115, 110, 92, 59, 61, \
46, 83, 83, 67, 82, 82, 71, 66, 63, 49, \
131, 125, 103, 98, 94, 71, 123, 121, 96, 119, \
119, 95, 96, 96, 78, 131, 132, 116, 113, 112, \
94, 150, 144, 125, 182, 170, 148, 152, 145, 137, \
83, 87, 94, 171, 168, 156, 141, 137, 127, 58, \
57, 63, 71, 69, 70, 73, 72, 65, 55, 55, \
47, 49, 49, 44, 63, 62, 53, 101, 88, 80, \
71, 65, 62, 109, 73, 35, 97, 64, 21, 125, \
101, 63, 87, 69, 47, 55, 46, 30, 105, 97, \
79, 100, 95, 75, 30, 34, 19, 79, 79, 70, \
63, 65, 57, 32, 34, 21, 115, 115, 94, 98, \
99, 80, 72, 73, 56, 85, 86, 71, 74, 74, \
64, 94, 93, 79, 100, 97, 78, 111, 104, 84, \
172, 161, 139, 160, 151, 138, 99, 96, 95, 167, \
161, 147, 107, 102, 91, 48, 47, 46, 66, 59, \
53, 63, 57, 46, 54, 51, 40, 48, 47, 38, \
60, 55, 42, 93, 81, 75, 51, 47, 46, 164, \
132, 89, 156, 120, 74, 143, 108, 60, 150, 115, \
62, 143, 117, 67, 161, 138, 94, 134, 113, 73, \
91, 79, 50, 110, 104, 84, 68, 65, 52, 75, \
74, 65, 106, 103, 94, 113, 111, 103, 56, 55, \
46, 68, 68, 54, 80, 80, 64, 120, 115, 92, \
159, 147, 122, 187, 174, 148, 217, 201, 174, 215, \
199, 177, 189, 176, 160, 207, 192, 172, 156, 144, \
125, 123, 112, 99, 114, 99, 81, 99, 84, 64, \
92, 79, 60, 74, 63, 44, 92, 80, 59, 85, \
74, 68, 39, 35, 32, 171, 142, 100, 167, 131, \
87, 128, 85, 33, 131, 88, 18, 141, 107, 40, \
149, 115, 53, 167, 127, 65, 170, 136, 82, 159, \
138, 93, 131, 116, 81, 181, 168, 145, 151, 137, \
122, 169, 158, 143, 141, 132, 117, 160, 154, 135, \
192, 190, 164, 234, 226, 197, 252, 237, 209, 255, \
240, 212, 255, 238, 209, 252, 235, 208, 250, 233, \
208, 253, 235, 211, 247, 229, 204, 234, 216, 191, \
221, 202, 176, 191, 171, 147, 141, 121, 96, 122, \
103, 74, 109, 90, 61, 59, 50, 40, 50, 44, \
35, 173, 141, 97, 167, 135, 97, 130, 92, 46, \
108, 76, 22, 94, 72, 27, 118, 90, 36, 143, \
101, 30, 154, 111, 38, 153, 117, 49, 159, 130, \
65, 170, 146, 88, 183, 159, 108, 208, 188, 143, \
227, 212, 176, 245, 233, 206, 249, 242, 218, 248, \
242, 216, 251, 242, 218, 253, 243, 220, 254, 243, \
220, 254, 243, 220, 253, 242, 219, 254, 243, 224, \
254, 240, 217, 250, 234, 205, 210, 197, 173, 167, \
153, 133, 169, 152, 129, 151, 132, 101, 139, 119, \
83, 72, 64, 49, 88, 78, 62, 180, 144, 98, \
175, 142, 104, 148, 114, 73, 100, 78, 43, 60, \
51, 29, 87, 71, 36, 122, 88, 27, 135, 94, \
18, 143, 101, 29, 148, 112, 39, 152, 121, 46, \
160, 130, 57, 171, 145, 74, 190, 165, 106, 212, \
188, 143, 225, 205, 166, 231, 217, 187, 238, 230, \
208, 236, 230, 213, 238, 231, 218, 248, 240, 229, \
254, 248, 232, 255, 252, 236, 248, 238, 221, 201, \
193, 169, 165, 157, 137, 172, 161, 145, 168, 157, \
141, 144, 127, 101, 155, 132, 97, 97, 81, 58, \
113, 96, 71, 181, 144, 99, 181, 146, 104, 173, \
139, 97, 108, 88, 56, 57, 50, 32, 77, 67, \
46, 107, 84, 40, 128, 95, 32, 130, 94, 32, \
137, 101, 36, 146, 111, 41, 154, 119, 47, 159, \
125, 51, 170, 134, 62, 179, 143, 74, 189, 156, \
91, 198, 171, 121, 214, 195, 158, 227, 214, 187, \
222, 212, 194, 212, 203, 195, 222, 218, 206, 228, \
229, 210, 187, 181, 169, 175, 174, 162, 214, 208, \
192, 189, 178, 165, 111, 104, 96, 128, 111, 91, \
158, 132, 100, 146, 121, 89, 139, 113, 81, 159, \
124, 82, 165, 132, 92, 172, 140, 100, 133, 111, \
77, 82, 69, 48, 77, 69, 51, 81, 70, 40, \
123, 104, 59, 132, 105, 54, 132, 102, 46, 134, \
101, 37, 146, 109, 42, 157, 113, 50, 166, 124, \
54, 170, 134, 60, 171, 142, 76, 179, 150, 91, \
191, 158, 101, 200, 171, 118, 215, 197, 152, 212, \
201, 168, 185, 181, 162, 168, 169, 155, 194, 189, \
184, 223, 226, 218, 177, 178, 169, 111, 108, 100, \
92, 90, 85, 112, 97, 79, 158, 132, 98, 163, \
137, 101, 154, 127, 91, 151, 119, 79, 132, 102, \
64, 128, 100, 61, 123, 97, 61, 102, 84, 57, \
69, 60, 41, 43, 40, 20, 67, 62, 35, 104, \
93, 58, 134, 118, 77, 143, 121, 71, 143, 115, \
61, 148, 110, 56, 151, 116, 53, 148, 122, 62, \
123, 107, 65, 120, 105, 66, 159, 134, 84, 181, \
148, 90, 187, 159, 97, 193, 175, 114, 209, 198, \
163, 227, 221, 208, 218, 208, 204, 155, 156, 146, \
110, 118, 113, 109, 112, 112, 96, 98, 95, 110, \
98, 78, 155, 130, 94, 147, 123, 85, 139, 114, \
76, 162, 131, 90, 142, 114, 74, 119, 92, 53, \
109, 81, 42, 100, 77, 43, 73, 60, 36, 59, \
54, 34, 58, 57, 37, 61, 59, 36, 85, 80, \
52, 117, 107, 75, 142, 128, 91, 151, 132, 86, \
145, 126, 79, 118, 106, 72, 81, 77, 66, 73, \
76, 67, 91, 85, 62, 148, 125, 86, 177, 146, \
88, 179, 151, 85, 201, 180, 143, 211, 200, 161, \
154, 141, 115, 114, 109, 110, 114, 121, 122, 102, \
106, 107, 78, 79, 76, 117, 104, 82, 155, 130, \
93, 144, 121, 83, 142, 118, 80, 165, 133, 89, \
158, 128, 86, 145, 117, 76, 128, 100, 58, 115, \
90, 49, 99, 79, 45, 96, 82, 54, 98, 88, \
64, 87, 81, 57, 74, 67, 44, 70, 65, 42, \
91, 86, 61, 123, 120, 88, 137, 133, 107, 97, \
94, 82, 81, 83, 81, 81, 87, 85, 77, 80, \
74, 95, 87, 69, 155, 131, 84, 170, 139, 75, \
194, 170, 137, 183, 173, 124, 131, 123, 87, 107, \
105, 113, 102, 106, 106, 85, 84, 82, 74, 72, \
67, 125, 110, 85, 150, 126, 88, 141, 119, 83, \
144, 121, 84, 160, 128, 81, 164, 133, 88, 160, \
130, 86, 150, 122, 77, 139, 112, 66, 128, 102, \
59, 117, 94, 55, 106, 85, 50, 105, 87, 55, \
106, 92, 64, 92, 82, 59, 72, 67, 46, 64, \
65, 45, 75, 74, 65, 76, 72, 69, 83, 84, \
73, 86, 85, 68, 94, 93, 85, 69, 68, 59, \
120, 105, 71, 159, 137, 71, 181, 165, 129, 188, \
180, 163, 123, 119, 104, 95, 100, 95, 84, 85, \
77, 80, 74, 68, 92, 86, 76, 133, 115, 88, \
149, 125, 89, 143, 121, 89, 143, 120, 87, 151, \
122, 76, 155, 126, 82, 159, 132, 87, 160, 130, \
87, 154, 123, 80, 143, 115, 71, 133, 108, 64, \
122, 100, 58, 112, 92, 53, 103, 84, 51, 101, \
85, 57, 102, 89, 65, 91, 82, 62, 75, 67, \
55, 66, 61, 54, 82, 82, 74, 104, 103, 91, \
103, 101, 92, 67, 66, 58, 91, 85, 69, 157, \
149, 116, 164, 157, 131, 175, 165, 161, 113, 105, \
101, 82, 83, 71, 77, 77, 68, 79, 73, 61, \
103, 92, 71, 131, 112, 83, 136, 115, 84, 134, \
115, 83, 139, 119, 85, 149, 121, 78, 155, 128, \
85, 163, 136, 93, 165, 135, 93, 165, 133, 92, \
157, 128, 86, 144, 120, 76, 136, 114, 70, 133, \
113, 72, 127, 108, 71, 116, 98, 66, 109, 92, \
63, 107, 92, 67, 101, 90, 69, 82, 76, 62, \
87, 85, 78, 106, 105, 97, 88, 88, 80, 69, \
68, 65, 59, 59, 54, 102, 104, 93, 118, 116, \
102, 107, 101, 92, 93, 88, 81, 75, 74, 65, \
68, 68, 60, 73, 69, 52, 107, 95, 69, 126, \
108, 79, 125, 107, 77, 119, 101, 70, 127, 108, \
73, 156, 128, 85, 162, 135, 93, 164, 137, 94, \
165, 135, 93, 167, 135, 94, 164, 136, 94, 158, \
133, 89, 152, 128, 85, 143, 121, 78, 137, 117, \
76, 138, 119, 83, 129, 111, 78, 115, 100, 68, \
107, 95, 67, 98, 90, 69, 82, 76, 63, 99, \
95, 85, 88, 87, 81, 60, 61, 61, 42, 47, \
48, 51, 58, 55, 69, 71, 64, 91, 91, 78, \
79, 80, 69, 58, 60, 54, 57, 57, 46, 79, \
75, 53, 115, 105, 76, 123, 109, 78, 121, 104, \
74, 122, 104, 73, 123, 104, 70, 160, 132, 91, \
161, 133, 92, 164, 137, 96, 165, 136, 95, 168, \
139, 98, 169, 141, 100, 169, 142, 101, 165, 139, \
97, 150, 127, 84, 142, 120, 79, 140, 118, 80, \
139, 120, 83, 138, 121, 85, 133, 118, 85, 123, \
111, 85, 96, 85, 65, 81, 73, 58, 81, 77, \
68, 45, 46, 44, 44, 51, 51, 51, 59, 59, \
52, 56, 52, 59, 64, 48, 61, 64, 49, 58, \
57, 50, 74, 71, 55, 105, 100, 74, 121, 112, \
80, 123, 110, 78, 121, 104, 74, 125, 106, 75, \
126, 107, 72, 158, 130, 89, 160, 132, 92, 163, \
136, 96, 164, 136, 96, 169, 140, 100, 171, 143, \
103, 169, 140, 101, 162, 134, 94, 154, 129, 88, \
155, 131, 91, 154, 131, 93, 149, 127, 91, 145, \
125, 91, 144, 125, 93, 142, 125, 96, 134, 118, \
92, 109, 96, 73, 80, 70, 55, 62, 57, 48, \
67, 68, 60, 70, 71, 64, 70, 70, 62, 67, \
68, 52, 67, 66, 48, 82, 75, 60, 102, 93, \
71, 124, 113, 84, 128, 116, 82, 125, 111, 78, \
121, 104, 74, 124, 106, 75, 132, 113, 78, 156, \
127, 88, 159, 131, 92, 162, 134, 95, 159, 131, \
92, 166, 138, 98, 171, 142, 104, 167, 137, 99, \
161, 131, 93, 163, 134, 98, 165, 138, 102, 169, \
144, 109, 167, 143, 109, 157, 134, 104, 148, 126, \
97, 144, 123, 92, 140, 121, 90, 138, 121, 91, \
126, 111, 87, 113, 102, 83, 96, 89, 70, 89, \
83, 65, 87, 82, 68, 88, 85, 70, 98, 90, \
70, 115, 101, 75, 120, 104, 78, 130, 114, 83, \
134, 117, 84, 129, 112, 80, 125, 108, 78, 126, \
108, 77, 133, 114, 79, 151, 124, 84, 154, 128, \
89, 158, 131, 93, 158, 131, 93, 162, 135, 97, \
168, 139, 101, 167, 136, 99, 165, 134, 99, 165, \
136, 102, 167, 139, 105, 170, 143, 109, 170, 143, \
110, 166, 140, 110, 162, 135, 104, 150, 125, 92, \
140, 118, 86, 137, 117, 86, 134, 115, 87, 132, \
115, 90, 122, 108, 83, 114, 101, 77, 101, 90, \
69, 96, 85, 67, 107, 95, 74, 120, 107, 83, \
125, 111, 87, 131, 115, 86, 135, 117, 83, 131, \
112, 81, 131, 112, 81, 128, 109, 77, 131, 110, \
76, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '30074';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1ab771df9d25b9fd009c75a2f7288f492a';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_cat2';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{120, 103, 89, 125, 105, 89, 137, 111, 95, 160, 130, \
114, 171, 139, 121, 166, 133, 111, 158, 126, 102, \
156, 125, 100, 154, 123, 98, 152, 120, 96, 151, \
113, 95, 148, 110, 93, 148, 113, 94, 155, 122, \
102, 149, 119, 97, 151, 120, 101, 153, 124, 101, \
160, 134, 110, 163, 138, 127, 150, 128, 112, 164, \
147, 116, 156, 143, 124, 149, 134, 125, 159, 140, \
135, 147, 125, 119, 153, 130, 118, 190, 163, 146, \
208, 183, 166, 203, 184, 171, 177, 158, 144, 186, \
161, 144, 158, 131, 111, 112, 99, 89, 119, 102, \
92, 137, 114, 104, 164, 138, 126, 172, 143, 129, \
162, 132, 114, 162, 131, 110, 161, 129, 102, 164, \
131, 96, 167, 134, 95, 172, 132, 107, 168, 127, \
106, 161, 122, 102, 158, 122, 102, 149, 115, 94, \
147, 118, 104, 162, 138, 122, 195, 175, 156, 215, \
195, 188, 169, 149, 140, 154, 137, 113, 172, 155, \
135, 155, 136, 124, 164, 143, 135, 177, 155, 146, \
150, 128, 112, 170, 145, 126, 209, 186, 169, 184, \
167, 155, 165, 146, 134, 174, 150, 134, 180, 156, \
139, 109, 98, 92, 117, 102, 95, 125, 104, 98, \
154, 129, 121, 168, 140, 128, 146, 115, 98, 158, \
127, 109, 172, 139, 116, 167, 135, 99, 172, 140, \
94, 174, 136, 97, 170, 132, 98, 165, 129, 96, \
167, 133, 103, 155, 123, 94, 153, 127, 111, 204, \
188, 174, 247, 237, 216, 254, 239, 230, 199, 180, \
173, 156, 137, 117, 175, 155, 133, 166, 144, 129, \
156, 134, 122, 175, 153, 139, 162, 141, 121, 157, \
134, 114, 179, 156, 141, 138, 119, 109, 135, 117, \
107, 124, 102, 88, 174, 152, 139, 115, 102, 96, \
138, 120, 114, 141, 118, 112, 161, 133, 127, 183, \
151, 136, 144, 108, 86, 130, 94, 80, 162, 129, \
115, 155, 125, 100, 158, 132, 94, 172, 140, 99, \
168, 135, 95, 159, 129, 93, 164, 135, 103, 168, \
140, 111, 206, 185, 168, 247, 232, 212, 252, 239, \
208, 248, 231, 212, 204, 180, 168, 174, 151, 129, \
169, 145, 121, 173, 148, 129, 167, 143, 128, 156, \
135, 117, 169, 149, 125, 165, 144, 123, 169, 148, \
135, 143, 127, 118, 114, 98, 89, 95, 74, 63, \
136, 116, 95, 131, 112, 105, 140, 118, 110, 145, \
118, 109, 163, 132, 123, 193, 155, 134, 163, 120, \
91, 117, 77, 65, 125, 91, 88, 158, 132, 124, \
152, 131, 111, 158, 131, 106, 177, 148, 124, 184, \
157, 139, 186, 159, 146, 204, 182, 172, 241, 223, \
211, 237, 218, 188, 243, 225, 182, 240, 215, 184, \
198, 169, 147, 166, 136, 108, 167, 138, 111, 180, \
152, 131, 181, 156, 138, 168, 147, 125, 169, 152, \
124, 196, 176, 155, 178, 158, 147, 144, 129, 121, \
109, 94, 86, 94, 74, 64, 109, 90, 71, 134, \
109, 100, 135, 112, 98, 136, 109, 94, 157, 124, \
112, 184, 143, 121, 180, 132, 103, 129, 85, 72, \
92, 59, 59, 149, 129, 130, 195, 184, 181, 205, \
192, 184, 225, 209, 203, 238, 222, 218, 235, 219, \
218, 240, 224, 226, 233, 209, 201, 235, 202, 172, \
244, 209, 167, 228, 192, 157, 193, 161, 133, 164, \
133, 101, 170, 141, 111, 175, 148, 123, 176, 151, \
128, 182, 160, 135, 177, 158, 131, 212, 196, 179, \
191, 175, 165, 160, 144, 132, 141, 124, 110, 119, \
103, 86, 99, 84, 71, 127, 102, 90, 118, 99, \
79, 117, 96, 76, 146, 116, 104, 163, 123, 107, \
159, 111, 89, 121, 78, 65, 78, 47, 44, 92, \
78, 81, 152, 151, 156, 210, 212, 213, 233, 231, \
231, 232, 226, 226, 236, 226, 226, 236, 221, 221, \
224, 194, 189, 223, 172, 151, 221, 159, 127, 211, \
160, 131, 177, 144, 115, 164, 135, 100, 170, 140, \
108, 163, 135, 105, 172, 146, 118, 178, 154, 127, \
188, 166, 141, 225, 213, 201, 211, 199, 192, 199, \
181, 165, 193, 175, 155, 140, 128, 108, 85, 77, \
65, 104, 87, 76, 96, 81, 65, 106, 87, 72, \
130, 102, 96, 142, 105, 98, 115, 73, 60, 97, \
58, 52, 77, 47, 48, 66, 51, 55, 74, 71, \
78, 122, 120, 126, 162, 158, 163, 156, 146, 151, \
158, 144, 148, 184, 166, 169, 224, 198, 198, 190, \
145, 131, 177, 118, 93, 191, 142, 117, 166, 130, \
101, 147, 113, 75, 165, 131, 98, 173, 142, 111, \
166, 137, 106, 172, 145, 117, 187, 162, 136, 230, \
219, 203, 243, 238, 227, 220, 207, 194, 171, 157, \
144, 109, 99, 89, 72, 67, 64, 85, 75, 65, \
88, 76, 64, 91, 74, 66, 134, 109, 110, 143, \
114, 115, 96, 65, 63, 93, 61, 63, 79, 51, \
56, 67, 50, 56, 65, 57, 63, 103, 95, 104, \
135, 124, 134, 123, 109, 117, 116, 100, 106, 128, \
109, 115, 157, 136, 138, 153, 118, 109, 153, 105, \
87, 178, 135, 116, 164, 128, 102, 140, 101, 64, \
164, 129, 95, 186, 152, 122, 169, 138, 108, 165, \
136, 109, 181, 154, 128, 218, 207, 186, 254, 252, \
238, 200, 193, 183, 117, 109, 104, 94, 86, 87, \
69, 64, 70, 75, 64, 54, 89, 75, 64, 95, \
78, 72, 148, 129, 132, 166, 148, 154, 95, 76, \
81, 83, 60, 65, 73, 49, 54, 81, 63, 65, \
84, 72, 72, 109, 94, 102, 116, 99, 108, 126, \
108, 115, 116, 97, 102, 107, 88, 90, 118, 100, \
102, 126, 99, 93, 141, 101, 89, 168, 133, 122, \
152, 120, 100, 133, 94, 61, 145, 110, 81, 170, \
138, 112, 172, 142, 117, 161, 134, 110, 170, 145, \
123, 218, 204, 184, 220, 215, 200, 172, 167, 160, \
107, 100, 101, 134, 124, 130, 149, 140, 148, 92, \
74, 61, 93, 72, 60, 99, 80, 74, 177, 165, \
166, 180, 173, 179, 91, 83, 89, 91, 75, 79, \
90, 70, 70, 103, 85, 79, 106, 90, 82, 114, \
93, 96, 111, 88, 93, 128, 107, 109, 127, 107, \
106, 110, 90, 87, 115, 97, 94, 109, 84, 76, \
127, 93, 84, 167, 141, 137, 144, 118, 106, 123, \
89, 63, 125, 95, 72, 150, 124, 103, 155, 132, \
112, 159, 137, 120, 183, 163, 146, 215, 200, 182, \
140, 129, 115, 108, 101, 96, 115, 107, 107, 192, \
180, 182, 220, 207, 208, 100, 73, 60, 96, 69, \
57, 114, 94, 86, 208, 199, 198, 173, 172, 176, \
113, 112, 117, 117, 106, 108, 109, 91, 86, 99, \
81, 68, 89, 72, 55, 99, 76, 73, 106, 82, \
82, 133, 110, 105, 131, 110, 102, 102, 83, 73, \
101, 83, 74, 101, 75, 66, 128, 98, 90, 169, \
148, 148, 136, 117, 110, 106, 79, 61, 111, 87, \
71, 126, 106, 92, 138, 120, 106, 154, 136, 125, \
183, 167, 156, 162, 144, 130, 125, 109, 97, 129, \
118, 112, 160, 149, 147, 172, 156, 152, 154, 135, \
128, 94, 67, 58, 81, 57, 50, 130, 112, 108, \
216, 205, 205, 170, 162, 167, 132, 123, 132, 90, \
79, 81, 78, 65, 57, 92, 80, 63, 79, 67, \
48, 75, 56, 57, 91, 69, 70, 130, 109, 97, \
125, 107, 86, 115, 103, 78, 95, 81, 65, 90, \
68, 60, 140, 114, 106, 179, 156, 152, 150, 130, \
129, 120, 101, 100, 117, 100, 99, 118, 103, 101, \
128, 113, 109, 155, 141, 137, 168, 155, 149, 163, \
146, 137, 176, 159, 150, 171, 155, 150, 142, 125, \
123, 109, 90, 88, 94, 76, 71, 83, 61, 55, \
78, 60, 57, 151, 137, 138, 199, 189, 193, 154, \
143, 150, 134, 122, 130, 87, 75, 78, 62, 51, \
46, 69, 60, 48, 62, 52, 40, 62, 47, 51, \
81, 61, 62, 123, 102, 90, 104, 86, 66, 82, \
71, 48, 76, 62, 46, 101, 78, 67, 154, 128, \
117, 188, 164, 158, 178, 161, 163, 156, 144, 152, \
167, 156, 163, 171, 160, 164, 168, 157, 160, 184, \
174, 174, 180, 169, 168, 173, 160, 157, 167, 153, \
149, 149, 135, 133, 111, 96, 97, 90, 74, 78, \
77, 62, 65, 72, 55, 51, 82, 68, 68, 146, \
137, 141, 162, 157, 164, 130, 122, 129, 131, 118, \
122, 103, 91, 94, 68, 57, 58, 50, 38, 38, \
41, 30, 30, 53, 40, 45, 73, 55, 55, 113, \
92, 84, 90, 70, 59, 52, 37, 26, 86, 66, \
52, 134, 106, 90, 166, 138, 124, 180, 158, 150, \
189, 176, 179, 175, 169, 180, 175, 168, 179, 187, \
180, 188, 211, 204, 210, 228, 221, 225, 205, 199, \
201, 184, 176, 177, 183, 175, 177, 172, 163, 167, \
148, 139, 146, 137, 127, 136, 115, 106, 116, 70, \
54, 52, 71, 59, 60, 138, 130, 135, 164, 160, \
168, 122, 116, 121, 121, 109, 109, 109, 97, 99, \
86, 74, 77, 56, 43, 49, 43, 31, 38, 55, \
44, 49, 75, 60, 59, 107, 87, 80, 104, 82, \
75, 71, 52, 46, 116, 93, 79, 157, 127, 106, \
159, 131, 113, 150, 127, 118, 174, 163, 165, 185, \
183, 193, 178, 173, 184, 198, 192, 201, 194, 189, \
196, 214, 209, 215, 239, 234, 238, 222, 218, 223, \
214, 210, 216, 206, 202, 211, 198, 194, 206, 185, \
180, 194, 178, 174, 189, 69, 51, 47, 76, 62, \
61, 139, 129, 132, 168, 162, 169, 116, 108, 112, \
111, 99, 98, 93, 82, 81, 85, 73, 74, 59, \
46, 49, 55, 43, 47, 61, 53, 56, 72, 59, \
57, 102, 82, 73, 125, 102, 91, 100, 79, 68, \
133, 110, 95, 158, 131, 110, 144, 117, 99, 129, \
107, 95, 152, 140, 138, 196, 190, 196, 220, 213, \
221, 234, 226, 233, 165, 158, 163, 166, 159, 162, \
235, 228, 230, 237, 232, 236, 232, 227, 234, 220, \
214, 225, 205, 199, 213, 198, 191, 206, 194, 188, \
205, 77, 55, 47, 80, 62, 58, 130, 116, 116, \
165, 155, 158, 99, 89, 91, 90, 79, 77, 81, \
70, 66, 77, 66, 62, 65, 54, 48, 61, 51, \
46, 63, 57, 59, 59, 48, 45, 94, 75, 62, \
139, 117, 96, 145, 124, 102, 144, 125, 105, 121, \
100, 82, 113, 89, 72, 112, 90, 76, 142, 126, \
119, 189, 177, 177, 226, 215, 220, 245, 234, 238, \
194, 182, 184, 175, 163, 163, 201, 190, 188, 207, \
197, 200, 216, 207, 214, 206, 197, 207, 191, 181, \
194, 195, 184, 198, 197, 189, 204, 69, 47, 37, \
66, 48, 39, 114, 98, 94, 173, 160, 161, 108, \
96, 97, 86, 74, 71, 89, 77, 71, 87, 74, \
67, 82, 69, 59, 73, 59, 49, 81, 66, 64, \
79, 62, 54, 127, 106, 87, 174, 153, 127, 174, \
155, 129, 117, 102, 85, 77, 63, 52, 86, 69, \
57, 94, 77, 65, 135, 119, 111, 175, 160, 156, \
190, 177, 177, 224, 211, 211, 238, 226, 225, 221, \
210, 208, 187, 175, 172, 158, 147, 142, 162, 151, \
146, 180, 167, 168, 186, 172, 179, 184, 169, 182, \
196, 184, 198, 51, 34, 25, 52, 38, 28, 86, \
73, 67, 163, 150, 154, 125, 113, 116, 95, 84, \
79, 104, 91, 85, 96, 81, 73, 99, 82, 72, \
95, 76, 66, 100, 75, 70, 97, 73, 61, 136, \
115, 93, 176, 158, 133, 137, 121, 99, 73, 61, \
51, 65, 57, 54, 73, 63, 59, 84, 72, 66, \
121, 107, 100, 160, 146, 139, 150, 138, 135, 178, \
167, 165, 233, 225, 223, 247, 240, 238, 208, 197, \
194, 136, 124, 111, 120, 107, 92, 150, 136, 127, \
175, 160, 160, 188, 170, 179, 184, 169, 182, 41, \
29, 21, 42, 32, 24, 61, 52, 49, 134, 125, \
132, 143, 134, 138, 101, 91, 87, 78, 66, 60, \
84, 70, 63, 113, 96, 88, 112, 94, 85, 111, \
91, 88, 83, 65, 58, 87, 72, 58, 93, 81, \
64, 58, 48, 34, 50, 41, 35, 59, 51, 49, \
72, 61, 58, 77, 65, 60, 98, 84, 76, 129, \
115, 108, 132, 120, 117, 161, 150, 148, 174, 163, \
161, 183, 173, 171, 206, 195, 193, 139, 125, 118, \
112, 98, 88, 121, 106, 99, 132, 116, 114, 152, \
136, 137, 157, 142, 147, 29, 20, 16, 31, 24, \
19, 46, 41, 40, 108, 103, 113, 121, 114, 121, \
85, 77, 73, 59, 49, 45, 88, 76, 70, 112, \
98, 90, 82, 66, 59, 74, 60, 58, 70, 59, \
57, 55, 46, 41, 32, 26, 20, 28, 24, 18, \
42, 36, 33, 49, 41, 39, 56, 45, 42, 65, \
54, 48, 97, 83, 76, 106, 92, 85, 115, 103, \
100, 152, 141, 139, 137, 126, 124, 130, 119, 117, \
187, 175, 173, 171, 157, 155, 117, 101, 99, 105, \
90, 87, 111, 96, 91, 118, 103, 98, 137, 122, \
119, 25, 15, 10, 30, 23, 17, 44, 37, 36, \
82, 76, 85, 113, 108, 115, 81, 74, 73, 59, \
51, 48, 71, 61, 56, 71, 59, 52, 56, 42, \
36, 41, 30, 27, 37, 28, 29, 23, 15, 19, \
19, 15, 18, 21, 20, 20, 28, 24, 23, 35, \
27, 25, 48, 38, 35, 72, 60, 55, 99, 85, \
77, 93, 79, 72, 93, 81, 78, 110, 100, 98, \
135, 124, 122, 163, 152, 150, 171, 160, 158, 152, \
137, 137, 111, 95, 95, 106, 91, 89, 106, 91, \
86, 117, 102, 95, 128, 114, 109, 35, 22, 15, \
36, 25, 17, 40, 30, 27, 61, 51, 58, 110, \
102, 109, 82, 77, 76, 57, 51, 48, 44, 35, \
32, 47, 36, 31, 59, 48, 41, 53, 43, 38, \
38, 29, 30, 23, 15, 22, 22, 17, 24, 23, \
21, 24, 23, 19, 18, 33, 25, 22, 56, 45, \
42, 75, 63, 57, 80, 66, 58, 78, 64, 57, \
66, 54, 51, 72, 61, 59, 137, 126, 124, 179, \
168, 166, 152, 141, 139, 126, 112, 109, 107, 92, \
88, 90, 75, 71, 92, 77, 73, 116, 101, 96, \
122, 108, 106, 50, 30, 21, 63, 46, 34, 53, \
37, 30, 62, 47, 49, 100, 90, 95, 99, 95, \
96, 89, 83, 82, 80, 71, 69, 63, 52, 48, \
59, 47, 40, 66, 53, 45, 44, 32, 31, 27, \
16, 23, 24, 17, 25, 25, 21, 25, 29, 25, \
23, 41, 33, 30, 52, 42, 39, 61, 50, 44, \
55, 42, 34, 54, 41, 34, 43, 31, 29, 54, \
43, 42, 97, 86, 84, 147, 136, 134, 142, 130, \
128, 114, 101, 96, 97, 82, 77, 88, 73, 69, \
88, 73, 71, 106, 91, 90, 123, 110, 111, 77, \
45, 30, 77, 49, 35, 65, 41, 31, 61, 39, \
33, 88, 73, 75, 128, 120, 127, 138, 128, 131, \
106, 93, 92, 82, 66, 60, 74, 55, 48, 85, \
63, 54, 62, 42, 36, 35, 21, 20, 25, 18, \
20, 17, 16, 19, 29, 26, 24, 42, 37, 32, \
42, 36, 30, 48, 41, 36, 38, 31, 25, 30, \
22, 17, 32, 23, 22, 56, 46, 45, 95, 84, \
82, 135, 122, 119, 135, 121, 117, 101, 87, 86, \
69, 56, 58, 74, 61, 63, 94, 81, 82, 103, \
89, 90, 118, 107, 107, 70, 39, 26, 57, 31, \
20, 47, 24, 18, 46, 27, 23, 59, 46, 48, \
94, 88, 95, 110, 102, 106, 83, 72, 71, 63, \
50, 45, 70, 54, 46, 85, 63, 55, 81, 59, \
54, 51, 37, 34, 29, 23, 23, 16, 16, 18, \
21, 18, 19, 32, 26, 24, 37, 32, 30, 32, \
27, 24, 25, 20, 17, 26, 20, 18, 39, 30, \
31, 57, 47, 47, 93, 82, 80, 125, 112, 109, \
124, 109, 104, 91, 78, 76, 51, 39, 40, 54, \
42, 42, 86, 75, 74, 115, 104, 102, 147, 137, \
135, 45, 22, 16, 39, 21, 18, 31, 17, 17, \
33, 23, 26, 48, 41, 47, 78, 75, 81, 91, \
88, 90, 66, 61, 60, 42, 37, 33, 52, 45, \
38, 72, 55, 50, 76, 58, 55, 54, 42, 40, \
36, 30, 31, 22, 21, 23, 19, 16, 19, 23, \
17, 19, 30, 25, 27, 24, 18, 21, 22, 17, \
19, 33, 26, 28, 42, 34, 35, 52, 42, 42, \
79, 69, 67, 104, 91, 88, 104, 89, 84, 77, \
65, 58, 50, 40, 33, 66, 55, 49, 122, 111, \
106, 171, 160, 155, 213, 205, 202, 30, 15, 14, \
24, 13, 15, 44, 38, 43, 86, 83, 91, 111, \
109, 117, 116, 115, 120, 95, 94, 96, 61, 60, \
60, 31, 32, 29, 32, 30, 27, 55, 43, 41, \
58, 43, 43, 40, 30, 30, 33, 28, 29, 20, \
19, 20, 21, 18, 21, 23, 17, 21, 23, 17, \
21, 20, 14, 18, 26, 20, 25, 39, 32, 36, \
37, 28, 29, 43, 33, 33, 63, 52, 50, 89, \
75, 73, 89, 74, 69, 65, 53, 43, 73, 63, \
52, 121, 111, 101, 171, 160, 154, 207, 195, 192, \
244, 236, 235, 142, 131, 132, 114, 106, 110, 143, \
139, 147, 147, 147, 158, 114, 112, 121, 106, 101, \
105, 90, 86, 90, 68, 67, 69, 32, 33, 35, \
23, 22, 24, 42, 33, 35, 41, 31, 33, 28, \
20, 23, 23, 19, 20, 19, 17, 18, 22, 18, \
19, 18, 12, 13, 15, 9, 10, 19, 13, 14, \
32, 26, 27, 36, 30, 31, 34, 25, 26, 39, \
29, 29, 55, 44, 42, 73, 60, 57, 72, 57, \
52, 78, 65, 56, 117, 107, 96, 167, 156, 149, \
190, 178, 176, 204, 192, 193, 231, 222, 225, 210, \
198, 199, 206, 198, 202, 190, 185, 193, 106, 105, \
115, 69, 64, 73, 87, 76, 82, 77, 68, 74, \
51, 46, 52, 36, 34, 40, 23, 22, 27, 29, \
23, 28, 31, 23, 28, 25, 19, 22, 26, 22, \
23, 29, 27, 27, 30, 26, 24, 26, 20, 16, \
23, 17, 13, 25, 19, 15, 34, 29, 25, 36, \
30, 26, 35, 27, 26, 39, 29, 29, 50, 39, \
37, 65, 52, 49, 88, 73, 68, 119, 106, 98, \
153, 142, 134, 184, 173, 170, 194, 182, 185, 191, \
178, 186, 197, 183, 193, 141, 131, 132, 172, 162, \
164, 159, 152, 156, 73, 70, 77, 45, 41, 48, \
54, 45, 48, 52, 44, 48, 43, 37, 41, 42, \
39, 42, 50, 48, 51, 79, 76, 78, 97, 92, \
92, 95, 88, 84, 96, 88, 83, 94, 89, 84, \
85, 79, 75, 82, 75, 69, 81, 73, 66, 79, \
71, 61, 81, 72, 60, 78, 66, 55, 74, 60, \
52, 68, 55, 49, 68, 56, 53, 86, 73, 69, \
129, 114, 107, 154, 140, 133, 159, 146, 143, 170, \
156, 158, 175, 161, 168, 176, 161, 168, 185, 171, \
176, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '30384';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'image__data_8h_1a20c804f462a5985638bbada72bd2b195';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA_ship3';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{185, 199, 226, 186, 201, 224, 187, 202, 225, 190, 205, \
228, 192, 207, 230, 193, 208, 229, 195, 210, 229, \
196, 211, 230, 198, 213, 232, 203, 216, 236, 205, \
216, 236, 205, 216, 236, 207, 218, 238, 207, 218, \
238, 208, 219, 239, 208, 219, 239, 205, 220, 239, \
203, 218, 237, 205, 217, 237, 204, 215, 235, 202, \
216, 235, 201, 216, 235, 202, 215, 234, 202, 213, \
233, 198, 211, 230, 194, 209, 228, 192, 207, 226, \
190, 205, 224, 189, 204, 224, 188, 203, 226, 188, \
203, 226, 188, 203, 226, 182, 196, 223, 183, 198, \
222, 185, 200, 223, 187, 202, 225, 189, 204, 227, \
191, 206, 226, 193, 208, 227, 194, 209, 228, 197, \
212, 231, 202, 215, 234, 204, 215, 235, 204, 215, \
235, 205, 216, 236, 206, 217, 237, 207, 218, 238, \
207, 218, 238, 204, 218, 237, 202, 217, 236, 204, \
216, 236, 203, 214, 234, 200, 214, 233, 199, 214, \
233, 201, 213, 233, 201, 211, 231, 197, 210, 229, \
193, 208, 227, 190, 205, 224, 188, 203, 222, 186, \
201, 221, 186, 201, 224, 186, 201, 224, 187, 202, \
225, 180, 194, 221, 181, 196, 220, 183, 198, 221, \
185, 200, 223, 188, 203, 226, 189, 204, 224, 190, \
205, 224, 193, 208, 227, 196, 212, 231, 201, 214, \
234, 203, 214, 234, 203, 214, 234, 204, 215, 235, \
205, 216, 236, 206, 217, 237, 206, 217, 237, 203, \
217, 237, 201, 216, 235, 203, 215, 235, 202, 213, \
233, 198, 212, 232, 197, 212, 231, 199, 212, 232, \
200, 211, 231, 196, 209, 228, 192, 207, 226, 189, \
204, 223, 186, 201, 220, 184, 200, 220, 184, 199, \
222, 185, 200, 223, 186, 201, 224, 179, 193, 220, \
179, 194, 218, 180, 195, 218, 183, 198, 221, 186, \
201, 224, 189, 203, 223, 191, 204, 224, 193, 206, \
226, 197, 210, 229, 201, 212, 232, 204, 212, 234, \
205, 213, 236, 205, 215, 236, 203, 216, 233, 206, \
217, 236, 206, 217, 236, 204, 217, 235, 202, 215, \
233, 202, 213, 233, 200, 212, 232, 198, 211, 231, \
198, 211, 231, 199, 211, 230, 198, 209, 228, 196, \
208, 228, 191, 205, 225, 188, 201, 221, 185, 198, \
218, 184, 197, 217, 184, 197, 220, 184, 197, 221, \
185, 200, 223, 179, 193, 220, 178, 193, 216, 178, \
193, 216, 180, 195, 218, 184, 199, 222, 189, 202, \
223, 193, 204, 224, 194, 205, 225, 197, 208, 228, \
201, 210, 231, 206, 212, 234, 205, 211, 233, 205, \
213, 235, 201, 216, 231, 206, 217, 234, 206, 217, \
234, 205, 216, 234, 203, 214, 232, 200, 211, 231, \
198, 209, 229, 198, 209, 229, 199, 210, 230, 196, \
207, 226, 196, 207, 225, 193, 204, 224, 191, 201, \
223, 189, 199, 220, 185, 195, 215, 183, 194, 215, \
184, 194, 219, 183, 194, 219, 183, 198, 221, 178, \
192, 219, 177, 192, 216, 177, 192, 215, 179, 194, \
217, 183, 198, 221, 188, 201, 222, 192, 203, 223, \
193, 204, 224, 196, 207, 227, 201, 210, 232, 205, \
212, 232, 202, 208, 223, 203, 210, 227, 203, 215, \
231, 204, 215, 233, 204, 215, 233, 203, 214, 232, \
201, 212, 230, 198, 209, 229, 196, 207, 227, 195, \
206, 226, 195, 206, 226, 196, 207, 225, 194, 205, \
223, 191, 202, 220, 188, 199, 217, 183, 194, 213, \
182, 193, 213, 181, 192, 213, 182, 192, 217, 182, \
192, 217, 181, 196, 219, 177, 191, 218, 176, 191, \
214, 176, 191, 214, 178, 193, 216, 182, 197, 220, \
187, 199, 221, 190, 201, 221, 192, 203, 223, 195, \
206, 226, 200, 209, 231, 204, 211, 229, 204, 212, \
218, 207, 211, 224, 203, 212, 229, 203, 214, 232, \
203, 214, 232, 200, 211, 229, 198, 210, 228, 196, \
207, 227, 194, 205, 225, 192, 203, 223, 192, 203, \
223, 191, 202, 221, 190, 201, 219, 189, 200, 216, \
183, 195, 209, 181, 193, 209, 180, 191, 211, 179, \
190, 211, 180, 190, 215, 179, 190, 215, 179, 194, \
217, 176, 190, 217, 175, 190, 213, 175, 190, 213, \
177, 192, 215, 181, 196, 218, 187, 199, 220, 190, \
201, 221, 191, 202, 222, 194, 205, 225, 199, 208, \
229, 204, 211, 227, 210, 217, 218, 212, 214, 223, \
202, 209, 227, 203, 213, 231, 203, 213, 231, 200, \
210, 228, 197, 207, 225, 194, 204, 224, 193, 203, \
223, 191, 201, 222, 190, 200, 220, 188, 199, 217, \
191, 201, 220, 124, 135, 151, 130, 142, 155, 183, \
195, 212, 177, 189, 209, 177, 188, 210, 178, 188, \
213, 177, 188, 213, 177, 192, 215, 175, 189, 213, \
175, 186, 211, 175, 186, 210, 177, 188, 210, 181, \
192, 213, 186, 195, 216, 191, 198, 221, 192, 201, \
220, 189, 205, 222, 198, 207, 223, 207, 213, 225, \
224, 224, 222, 207, 204, 208, 199, 205, 224, 202, \
208, 227, 202, 208, 226, 201, 206, 224, 200, 205, \
223, 197, 202, 220, 195, 200, 218, 191, 196, 220, \
189, 198, 219, 184, 200, 214, 166, 169, 188, 47, \
50, 60, 86, 95, 107, 170, 183, 204, 177, 189, \
210, 175, 185, 208, 175, 185, 206, 174, 188, 211, \
177, 192, 215, 174, 189, 212, 174, 185, 209, 174, \
184, 209, 176, 186, 208, 179, 190, 210, 184, 192, \
213, 189, 195, 217, 189, 198, 218, 188, 205, 229, \
199, 210, 228, 217, 224, 234, 243, 244, 245, 214, \
214, 218, 206, 214, 232, 203, 212, 229, 203, 212, \
230, 199, 207, 226, 198, 206, 225, 194, 202, 221, \
194, 203, 221, 207, 212, 227, 187, 194, 215, 185, \
198, 213, 151, 152, 154, 115, 113, 107, 86, 86, \
77, 156, 162, 165, 176, 184, 208, 174, 182, 203, \
172, 180, 200, 173, 186, 209, 175, 190, 213, 173, \
187, 210, 173, 184, 208, 173, 183, 208, 174, 184, \
206, 177, 188, 208, 182, 190, 212, 187, 194, 211, \
194, 201, 214, 187, 198, 218, 205, 210, 221, 224, \
225, 226, 227, 225, 223, 206, 206, 207, 186, 189, \
199, 193, 200, 209, 195, 202, 211, 197, 203, 215, \
204, 210, 223, 212, 219, 232, 198, 204, 216, 212, \
215, 217, 199, 204, 222, 183, 191, 204, 205, 202, \
185, 248, 242, 222, 212, 201, 173, 205, 201, 182, \
194, 198, 213, 188, 191, 203, 184, 189, 206, 172, \
182, 205, 173, 188, 211, 172, 186, 209, 172, 183, \
207, 172, 182, 207, 172, 182, 204, 175, 186, 206, \
179, 187, 210, 181, 188, 203, 177, 178, 177, 139, \
138, 137, 173, 166, 157, 195, 183, 168, 206, 195, \
184, 204, 197, 188, 209, 202, 198, 222, 219, 213, \
222, 220, 215, 218, 215, 216, 168, 165, 166, 145, \
141, 143, 155, 150, 152, 168, 168, 166, 165, 169, \
181, 176, 182, 186, 207, 199, 175, 236, 228, 209, \
179, 167, 136, 220, 210, 188, 237, 238, 236, 218, \
219, 215, 192, 194, 210, 172, 180, 205, 170, 186, \
209, 169, 184, 207, 171, 182, 207, 171, 181, 206, \
171, 181, 202, 173, 185, 206, 180, 191, 212, 179, \
187, 197, 178, 177, 170, 147, 143, 129, 190, 181, \
160, 206, 190, 175, 190, 175, 158, 196, 181, 161, \
202, 185, 166, 201, 187, 169, 211, 200, 184, 212, \
198, 183, 186, 171, 159, 155, 140, 128, 147, 134, \
118, 145, 138, 130, 126, 124, 126, 145, 144, 140, \
171, 160, 143, 174, 165, 155, 137, 128, 111, 206, \
195, 181, 194, 189, 177, 185, 183, 171, 152, 151, \
158, 155, 159, 178, 174, 185, 206, 168, 183, 206, \
170, 181, 205, 169, 179, 204, 170, 179, 201, 171, \
183, 204, 137, 146, 158, 106, 108, 109, 113, 110, \
104, 96, 95, 80, 126, 122, 103, 211, 200, 193, \
211, 202, 186, 193, 176, 150, 202, 184, 158, 191, \
170, 145, 200, 185, 163, 191, 171, 141, 191, 169, \
147, 205, 186, 162, 196, 178, 149, 170, 154, 132, \
139, 126, 114, 120, 109, 98, 119, 107, 93, 113, \
103, 93, 115, 106, 100, 153, 142, 132, 133, 119, \
106, 110, 101, 90, 112, 104, 94, 112, 111, 113, \
164, 166, 182, 165, 180, 203, 168, 179, 203, 167, \
177, 202, 168, 178, 200, 172, 180, 198, 100, 97, \
100, 91, 82, 75, 127, 116, 106, 165, 154, 137, \
157, 146, 125, 212, 199, 183, 216, 206, 188, 190, \
174, 148, 200, 182, 157, 201, 180, 156, 214, 198, \
177, 190, 168, 141, 197, 178, 155, 205, 187, 163, \
214, 198, 171, 178, 155, 128, 191, 170, 148, 193, \
180, 156, 181, 170, 143, 166, 155, 130, 155, 144, \
121, 155, 141, 119, 155, 140, 122, 138, 129, 111, \
143, 135, 112, 139, 132, 120, 160, 162, 170, 162, \
177, 200, 166, 176, 201, 165, 175, 200, 164, 176, \
198, 171, 175, 190, 154, 144, 140, 164, 153, 143, \
203, 194, 186, 231, 224, 212, 188, 178, 160, 197, \
182, 156, 200, 187, 166, 189, 172, 146, 203, 186, \
160, 201, 181, 156, 209, 193, 172, 199, 173, 148, \
206, 190, 167, 208, 192, 166, 210, 194, 170, 178, \
154, 125, 202, 180, 152, 207, 191, 161, 202, 188, \
157, 194, 178, 148, 193, 176, 147, 183, 165, 137, \
189, 172, 148, 183, 172, 149, 195, 183, 155, 202, \
187, 166, 223, 222, 222, 166, 180, 202, 164, 174, \
199, 163, 172, 198, 163, 174, 197, 167, 168, 182, \
182, 170, 165, 180, 171, 163, 245, 242, 240, 230, \
228, 224, 211, 204, 191, 195, 180, 148, 204, 191, \
167, 190, 173, 147, 201, 184, 158, 199, 178, 154, \
206, 189, 169, 202, 174, 149, 206, 193, 169, 205, \
190, 164, 199, 182, 160, 177, 157, 131, 202, 186, \
158, 205, 191, 161, 198, 182, 154, 193, 175, 146, \
197, 177, 148, 186, 166, 136, 187, 169, 141, 190, \
177, 152, 183, 168, 143, 197, 176, 154, 227, 225, \
219, 135, 136, 135, 135, 131, 137, 137, 135, 148, \
155, 155, 163, 182, 180, 183, 197, 192, 184, 193, \
188, 176, 225, 221, 211, 234, 234, 233, 203, 196, \
175, 198, 186, 158, 199, 186, 158, 190, 172, 146, \
201, 183, 157, 196, 177, 154, 202, 185, 162, 196, \
175, 146, 204, 195, 175, 199, 187, 163, 193, 179, \
155, 185, 168, 142, 199, 183, 156, 211, 194, 171, \
193, 175, 153, 188, 171, 151, 190, 174, 155, 186, \
171, 141, 187, 173, 147, 182, 173, 144, 190, 177, \
149, 196, 181, 157, 226, 217, 210, 79, 77, 71, \
141, 133, 103, 170, 162, 129, 192, 184, 149, 197, \
189, 154, 181, 171, 142, 173, 161, 136, 211, 201, \
180, 239, 237, 229, 201, 189, 165, 200, 182, 158, \
201, 182, 157, 193, 172, 144, 200, 178, 151, 194, \
172, 148, 209, 187, 162, 199, 176, 147, 206, 192, \
170, 205, 190, 165, 212, 196, 170, 182, 162, 134, \
173, 152, 124, 211, 177, 138, 198, 156, 112, 202, \
164, 116, 192, 157, 104, 196, 167, 110, 201, 177, \
143, 191, 172, 144, 189, 172, 142, 192, 174, 147, \
210, 196, 182, 41, 39, 36, 118, 107, 82, 181, \
165, 126, 199, 182, 141, 209, 191, 152, 205, 188, \
150, 202, 185, 148, 206, 191, 158, 215, 208, 184, \
188, 173, 147, 177, 158, 135, 179, 159, 140, 178, \
159, 136, 184, 165, 142, 185, 166, 144, 188, 168, \
145, 191, 169, 144, 188, 171, 149, 186, 168, 145, \
193, 175, 152, 161, 142, 119, 192, 174, 151, 182, \
157, 130, 179, 150, 122, 185, 158, 125, 178, 153, \
116, 177, 150, 107, 186, 158, 123, 200, 176, 154, \
192, 173, 150, 189, 170, 148, 200, 185, 168, 25, \
23, 24, 59, 50, 46, 162, 144, 117, 190, 169, \
133, 202, 182, 147, 215, 199, 160, 212, 198, 158, \
219, 203, 162, 228, 217, 177, 229, 214, 184, 225, \
215, 191, 227, 217, 205, 225, 217, 205, 210, 201, \
189, 205, 198, 183, 203, 195, 180, 209, 197, 183, \
208, 195, 181, 206, 194, 180, 213, 201, 187, 211, \
203, 190, 220, 214, 202, 187, 181, 169, 186, 181, \
167, 189, 183, 166, 176, 169, 149, 171, 159, 140, \
195, 179, 161, 206, 194, 180, 213, 201, 191, 218, \
208, 197, 211, 204, 190, 21, 19, 19, 24, 21, \
19, 126, 113, 86, 190, 176, 133, 201, 186, 142, \
206, 194, 151, 211, 200, 159, 218, 206, 163, 226, \
216, 172, 236, 226, 191, 243, 242, 215, 252, 250, \
237, 252, 251, 247, 205, 203, 201, 192, 192, 185, \
196, 195, 188, 195, 191, 186, 202, 196, 190, 203, \
198, 192, 212, 209, 203, 253, 253, 248, 212, 211, \
206, 201, 198, 191, 229, 225, 217, 220, 214, 208, \
211, 203, 198, 208, 200, 197, 205, 203, 196, 201, \
200, 191, 226, 223, 220, 245, 242, 239, 218, 218, \
211, 34, 30, 27, 22, 22, 22, 66, 58, 48, \
198, 184, 149, 202, 182, 141, 208, 188, 144, 207, \
188, 144, 222, 206, 161, 225, 212, 167, 233, 220, \
177, 242, 230, 192, 254, 246, 215, 254, 255, 237, \
255, 255, 254, 255, 255, 255, 255, 255, 255, 255, \
255, 255, 255, 255, 255, 255, 255, 255, 255, 255, \
255, 255, 255, 255, 255, 255, 255, 255, 255, 255, \
255, 255, 255, 255, 255, 255, 255, 255, 255, 255, \
255, 255, 255, 255, 255, 255, 255, 255, 255, 255, \
255, 255, 255, 255, 255, 255, 255, 27, 23, 23, \
21, 21, 19, 21, 23, 25, 163, 160, 139, 218, \
209, 178, 208, 197, 165, 208, 199, 167, 201, 189, \
156, 208, 193, 160, 212, 198, 163, 216, 203, 168, \
218, 209, 180, 216, 221, 197, 220, 223, 211, 220, \
223, 224, 220, 222, 224, 217, 218, 221, 215, 216, \
219, 209, 210, 213, 204, 205, 209, 201, 202, 204, \
200, 201, 203, 195, 199, 201, 191, 197, 198, 189, \
195, 194, 186, 191, 190, 185, 189, 188, 185, 186, \
187, 184, 185, 186, 188, 190, 188, 190, 191, 189, \
183, 182, 179, 23, 19, 21, 18, 18, 17, 16, \
16, 23, 64, 72, 65, 106, 113, 100, 99, 102, \
87, 95, 97, 82, 87, 87, 71, 94, 92, 74, \
99, 98, 77, 105, 103, 82, 113, 110, 95, 123, \
119, 107, 136, 132, 122, 146, 145, 136, 159, 157, \
149, 167, 162, 155, 171, 166, 159, 171, 166, 158, \
176, 171, 163, 184, 180, 169, 187, 183, 171, 185, \
182, 169, 184, 182, 168, 185, 181, 167, 184, 178, \
161, 184, 178, 159, 185, 181, 155, 186, 182, 157, \
190, 188, 163, 196, 195, 168, 201, 200, 171, 26, \
21, 27, 18, 18, 17, 42, 31, 33, 116, 105, \
87, 135, 121, 95, 143, 123, 95, 147, 127, 99, \
147, 129, 97, 163, 147, 111, 170, 153, 117, 183, \
163, 130, 204, 184, 156, 214, 200, 168, 219, 206, \
172, 221, 211, 180, 227, 216, 185, 223, 210, 180, \
228, 214, 184, 222, 207, 178, 223, 209, 180, 218, \
204, 172, 215, 202, 168, 208, 190, 156, 203, 181, \
147, 197, 173, 138, 186, 158, 122, 181, 157, 124, \
178, 159, 132, 176, 158, 132, 174, 159, 136, 172, \
158, 137, 185, 180, 162, 47, 45, 56, 45, 46, \
44, 85, 80, 72, 139, 126, 110, 154, 136, 114, \
153, 132, 107, 150, 126, 98, 173, 149, 113, 196, \
176, 133, 185, 162, 122, 183, 157, 119, 203, 179, \
138, 198, 177, 138, 193, 172, 136, 192, 174, 139, \
194, 177, 141, 182, 167, 134, 187, 172, 139, 176, \
163, 137, 178, 164, 140, 163, 151, 127, 166, 154, \
131, 166, 151, 128, 158, 141, 118, 151, 134, 112, \
140, 123, 103, 145, 128, 111, 144, 131, 122, 137, \
128, 122, 130, 125, 120, 124, 119, 120, 132, 135, \
141, 79, 81, 94, 83, 85, 91, 104, 103, 104, \
120, 119, 117, 124, 119, 113, 121, 115, 105, 118, \
110, 94, 145, 131, 109, 167, 152, 126, 154, 136, \
112, 155, 136, 112, 172, 153, 124, 164, 144, 121, \
158, 136, 121, 158, 139, 128, 159, 141, 130, 148, \
133, 124, 151, 137, 128, 147, 136, 122, 147, 137, \
122, 141, 133, 119, 142, 135, 122, 145, 135, 123, \
141, 131, 119, 134, 125, 115, 123, 115, 106, 129, \
121, 113, 132, 127, 122, 125, 124, 122, 117, 118, \
117, 113, 114, 119, 116, 123, 132, 86, 91, 106, \
86, 91, 106, 104, 104, 116, 110, 116, 124, 111, \
116, 119, 108, 111, 111, 108, 108, 104, 131, 123, \
115, 149, 137, 127, 139, 125, 116, 145, 129, 118, \
155, 140, 125, 150, 134, 124, 149, 133, 126, 150, \
138, 125, 153, 142, 129, 149, 140, 129, 148, 140, \
128, 143, 138, 129, 142, 137, 128, 134, 130, 123, \
131, 128, 122, 128, 123, 118, 122, 116, 111, 117, \
112, 109, 110, 106, 104, 113, 110, 108, 116, 116, \
115, 111, 113, 116, 107, 109, 114, 106, 107, 118, \
112, 118, 131, 84, 92, 110, 87, 95, 110, 98, \
101, 112, 98, 104, 115, 99, 104, 111, 98, 102, \
105, 101, 101, 100, 115, 109, 105, 130, 123, 117, \
128, 120, 114, 138, 128, 118, 150, 141, 126, 145, \
135, 125, 144, 134, 129, 144, 139, 125, 141, 136, \
122, 134, 132, 120, 133, 131, 120, 122, 121, 119, \
117, 117, 116, 111, 112, 114, 110, 112, 115, 109, \
109, 112, 104, 103, 107, 100, 100, 105, 95, 96, \
102, 96, 98, 102, 97, 102, 106, 92, 100, 108, \
92, 97, 107, 92, 95, 111, 96, 102, 118, 80, \
88, 107, 81, 90, 104, 91, 97, 107, 98, 103, \
113, 101, 103, 111, 100, 101, 105, 102, 101, 101, \
116, 113, 110, 128, 126, 121, 122, 119, 113, 125, \
120, 110, 131, 125, 111, 130, 124, 113, 123, 117, \
112, 123, 118, 122, 121, 116, 121, 114, 112, 119, \
116, 114, 121, 112, 112, 115, 109, 110, 112, 104, \
107, 110, 104, 108, 112, 104, 106, 111, 100, 101, \
106, 94, 97, 103, 89, 93, 101, 87, 91, 98, \
89, 95, 101, 83, 92, 100, 84, 90, 101, 84, \
89, 105, 85, 91, 108, 79, 86, 105, 80, 87, \
103, 88, 95, 111, 98, 103, 116, 97, 101, 114, \
94, 97, 106, 93, 96, 104, 103, 105, 109, 113, \
113, 113, 109, 109, 110, 113, 111, 110, 123, 117, \
112, 121, 118, 113, 121, 118, 113, 122, 118, 115, \
123, 119, 116, 122, 118, 119, 123, 119, 120, 116, \
115, 115, 115, 115, 115, 112, 116, 114, 112, 116, \
114, 111, 112, 111, 108, 108, 108, 98, 100, 101, \
96, 100, 103, 96, 99, 104, 96, 99, 106, 90, \
93, 100, 86, 90, 99, 88, 93, 102, 88, 95, \
107, }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
      define-mem-desc-line = '30694';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/image_data.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'para__gen_8py';
  file-name = 'para_gen.py';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacepara__gen_1a2aeb680cc6207c02336be5d942937e84';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
def
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'convert_to_x4_weights';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
weights
_EnD_oF_dEf_TeXt_;
        func-mem-param-defname = 'weights';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/para_gen.py';
      func-mem-desc-line = '12';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacepara__gen_1af0845a2b6a01a98f6ef345b8992a468c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
def
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'convert_q7_q15_weights';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
weights
_EnD_oF_dEf_TeXt_;
        func-mem-param-defname = 'weights';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/para_gen.py';
      func-mem-desc-line = '53';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
    var = {
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'namespacepara__gen_1ad97bcbf0472c82d537ee41c0196e3b2a';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'vec_dim';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
=  64
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/para_gen.py';
      var-mem-desc-line = '87';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'namespacepara__gen_1a26cc0a96186b2e6b238d783d9364f14d';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'row_dim';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
=  32
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/para_gen.py';
      var-mem-desc-line = '88';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'namespacepara__gen_1af930c2c37b3d6cc8f272f4425247d627';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-name = 'update_weight';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
=  np.zeros((row_dim,vec_dim), dtype=int)
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/para_gen.py';
      var-mem-desc-line = '90';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'namespacepara__gen_1a9d940eaccbc2ec8d1da7d57dfabe7a6a';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-name = 'reset_weight';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
=  np.zeros((row_dim,vec_dim), dtype=int)
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/para_gen.py';
      var-mem-desc-line = '91';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'namespacepara__gen_1a7207adeae39eafb274cdc7bbeeab342b';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-name = 'hidden_weight';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
=  np.zeros((row_dim,vec_dim), dtype=int)
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/para_gen.py';
      var-mem-desc-line = '92';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'namespacepara__gen_1a6a760de2d5d35ba12aa7ed6ac274a7a2';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-name = 'update_bias';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
=  np.zeros((row_dim), dtype=int)
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/para_gen.py';
      var-mem-desc-line = '94';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'namespacepara__gen_1a2c6d0d2efdbea88b6090a1a4c3c13a52';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-name = 'reset_bias';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
=  np.zeros((row_dim), dtype=int)
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/para_gen.py';
      var-mem-desc-line = '95';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'namespacepara__gen_1a6c3df4809966df5892a62f2d45b7296e';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-name = 'hidden_bias';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
=  np.zeros((row_dim), dtype=int)
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/para_gen.py';
      var-mem-desc-line = '96';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'namespacepara__gen_1aa4f65fee8013b8745ffb7b32f1baeb04';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-name = 'input_data1';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
=  np.zeros((vec_dim-row_dim), dtype=int)
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/para_gen.py';
      var-mem-desc-line = '98';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'namespacepara__gen_1a5404511b55beedc9e6aed0bb1b2eb150';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-name = 'input_data2';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
=  np.zeros((vec_dim-row_dim), dtype=int)
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/para_gen.py';
      var-mem-desc-line = '99';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'namespacepara__gen_1a60d92bbdf1559b05d5d14e52146cec51';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-name = 'history_data';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
=  np.zeros((row_dim), dtype=int)
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/para_gen.py';
      var-mem-desc-line = '100';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'namespacepara__gen_1a55b26deee84c92c2927fd8565bd94eb4';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-name = 'outfile';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
=  open("riscv_nnexamples_gru_test_data.h", "w")
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/para_gen.py';
      var-mem-desc-line = '102';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'namespacepara__gen_1ae49ed72e69ec69d06b4805a92270a76e';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-name = 'weight';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
=  np.reshape(update_weight, (row_dim, vec_dim, 1, 1))
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/para_gen.py';
      var-mem-desc-line = '120';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'namespacepara__gen_1a846f84d4503980a853fbc011983fe74d';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
def
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'new_weight';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
=  convert_to_x4_weights(weight)
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/para_gen.py';
      var-mem-desc-line = '121';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'namespacepara__gen_1a5efaadf5b7405970389e76e8893caa49';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-name = 'sep';
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/para_gen.py';
      var-mem-desc-line = '124';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'namespacepara__gen_1a108384d1f14de852da22e2511591f942';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-name = 'format';
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/para_gen.py';
      var-mem-desc-line = '124';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/para_gen.py';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'README_8md';
  file-name = 'README.md';
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/README.md';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__avgpool__s16_8c';
  file-name = 'riscv_avgpool_s16.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Pooling_1ga5e98a793729db8f4153968c1e3e2777b';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_avgpool_s16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_pool_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pool_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'src';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/PoolingFunctions/riscv_avgpool_s16.c';
      func-mem-desc-line = '50';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
s16 average pooling function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in, out] ctx            Function context (e.g. temporary buffer). Check the function
                               definition file to see if an additional buffer is required.
                               Optional function {API}_get_buffer_size() provides the buffer
                               size if an additional buffer is required.
@param[in]      pool_params    Pooling parameters
@param[in]      input_dims     Input (activation) tensor dimensions. Format: [H, W, C_IN]
                               Argument 'N' is not used.
@param[in]      input_data     Input (activation) data pointer. Data type: int16
@param[in]      filter_dims    Filter tensor dimensions. Format: [H, W]
                               Argument N and C are not used.
@param[in]      output_dims    Output tensor dimensions. Format: [H, W, C_OUT]
                               Argument N is not used.
                               C_OUT equals C_IN.
@param[in, out] output_data    Output data pointer. Data type: int16
@return                        The function returns
                                   <code>RISCV_MATH_SUCCESS</code> - Successful operation




   - Supported Framework: TensorFlow Lite
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Pooling_1ga78f51f2113cb5d94c730f9faca34e9d5';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_avgpool_s16_get_buffer_size';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_src';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/PoolingFunctions/riscv_avgpool_s16.c';
      func-mem-desc-line = '120';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the required buffer size for S16 average pooling function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       dim_dst_width         output tensor dimension
@param[in]       ch_src                number of input tensor channels
@return          The function returns  required buffer size in bytes
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/PoolingFunctions/riscv_avgpool_s16.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__avgpool__s8_8c';
  file-name = 'riscv_avgpool_s8.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Pooling_1gafc4742a0e25482c38424da25628a873d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_avgpool_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_pool_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pool_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'src';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/PoolingFunctions/riscv_avgpool_s8.c';
      func-mem-desc-line = '80';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
s8 average pooling function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in, out] ctx            Function context (e.g. temporary buffer). Check the function
                               definition file to see if an additional buffer is required.
                               Optional function {API}_get_buffer_size() provides the buffer
                               size if an additional buffer is required.
@param[in]      pool_params    Pooling parameters
@param[in]      input_dims     Input (activation) tensor dimensions. Format: [H, W, C_IN]
                               Argument 'N' is not used.
@param[in]      input_data     Input (activation) data pointer. Data type: int8
@param[in]      filter_dims    Filter tensor dimensions. Format: [H, W]
                               Argument N and C are not used.
@param[in]      output_dims    Output tensor dimensions. Format: [H, W, C_OUT]
                               Argument N is not used.
                               C_OUT equals C_IN.
@param[in, out] output_data    Output data pointer. Data type: int8
@return                        The function returns
                                   <code>RISCV_MATH_SUCCESS</code> - Successful operation




   - Supported Framework: TensorFlow Lite
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Pooling_1ga632118d8940612a22eba8866bbe8b924';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_avgpool_s8_get_buffer_size';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_src';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/PoolingFunctions/riscv_avgpool_s8.c';
      func-mem-desc-line = '210';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the required buffer size for S8 average pooling function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       dim_dst_width         output tensor dimension
@param[in]       ch_src                number of input tensor channels
@return          The function returns  required buffer size in bytes
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/PoolingFunctions/riscv_avgpool_s8.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__concatenation__s8__w_8c';
  file-name = 'riscv_concatenation_s8_w.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Concatenation_1ga59ce48c133477f158e6bfae43414b72a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_concatenation_s8_w';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_z';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_w';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'offset_w';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConcatenationFunctions/riscv_concatenation_s8_w.c';
      func-mem-desc-line = '50';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
int8/uint8 concatenation function to be used for concatenating N-tensors along the W axis (Batch size)
       This function should be called for each input tensor to concatenate. The argument offset_w
       will be used to store the input tensor in the correct position in the output tensor
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
       i.e.    offset_w = 0
               for(i = 0 i < num_input_tensors; ++i)
               {
                   riscv_concatenation_s8_w(&input[i], ..., &output, ..., ..., offset_w)
                   offset_w += input_w[i]
               }

       This function assumes that the output tensor has:
       -# The same width of the input tensor
       -# The same height of the input tensor
       -# The same number o channels of the input tensor

       Unless specified otherwise, arguments are mandatory.

@note This function, data layout independent, can be used to concatenate either int8 or uint8 tensors because it
      does not involve any arithmetic operation

@param[in]  input    Pointer to input tensor
@param[in]  input_x  Width of input tensor
@param[in]  input_y  Height of input tensor
@param[in]  input_z  Channels in input tensor
@param[in]  input_w  Batch size in input tensor
@param[out] output   Pointer to output tensor. Expected to be at least
                         input_x * input_y * input_z * input_w
                     bytes.
@param[in]  offset_w The offset on the W axis to start concatenating the input tensor
                     It is user responsibility to provide the correct value
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConcatenationFunctions/riscv_concatenation_s8_w.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__concatenation__s8__x_8c';
  file-name = 'riscv_concatenation_s8_x.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Concatenation_1gafa12d1ee96f292d65d1e49468d6dc831';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_concatenation_s8_x';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_z';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_w';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'offset_x';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConcatenationFunctions/riscv_concatenation_s8_x.c';
      func-mem-desc-line = '50';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
int8/uint8 concatenation function to be used for concatenating N-tensors along the X axis
       This function should be called for each input tensor to concatenate. The argument offset_x
       will be used to store the input tensor in the correct position in the output tensor
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
       i.e.    offset_x = 0
               for(i = 0 i < num_input_tensors; ++i)
               {
                   riscv_concatenation_s8_x(&input[i], ..., &output, ..., ..., offset_x)
                   offset_x += input_x[i]
               }

       This function assumes that the output tensor has:
       -# The same height of the input tensor
       -# The same number of channels of the input tensor
       -# The same batch size of the input tensor

       Unless specified otherwise, arguments are mandatory.

@note This function, data layout independent, can be used to concatenate either int8 or uint8 tensors because it
     does not involve any arithmetic operation

@param[in]  input    Pointer to input tensor. Input tensor must not overlap with the output tensor.
@param[in]  input_x  Width of input tensor
@param[in]  input_y  Height of input tensor
@param[in]  input_z  Channels in input tensor
@param[in]  input_w  Batch size in input tensor
@param[out] output   Pointer to output tensor. Expected to be at least
                         (input_x * input_y * input_z * input_w) + offset_x
                     bytes.
@param[in]  output_x Width of output tensor
@param[in]  offset_x The offset (in number of elements) on the X axis to start concatenating the input tensor
                     It is user responsibility to provide the correct value

<b> Input constraints</b>
offset_x is less than output_x
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConcatenationFunctions/riscv_concatenation_s8_x.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__concatenation__s8__y_8c';
  file-name = 'riscv_concatenation_s8_y.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Concatenation_1ga465e5094e0cfa990768f2d1e8ed2de6f';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_concatenation_s8_y';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_z';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_w';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'offset_y';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConcatenationFunctions/riscv_concatenation_s8_y.c';
      func-mem-desc-line = '50';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
int8/uint8 concatenation function to be used for concatenating N-tensors along the Y axis
       This function should be called for each input tensor to concatenate. The argument offset_y
       will be used to store the input tensor in the correct position in the output tensor
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
       i.e.    offset_y = 0
               for(i = 0 i < num_input_tensors; ++i)
               {
                   riscv_concatenation_s8_y(&input[i], ..., &output, ..., ..., offset_y)
                   offset_y += input_y[i]
               }

       This function assumes that the output tensor has:
       -# The same width of the input tensor
       -# The same number of channels of the input tensor
       -# The same batch size of the input tensor

       Unless specified otherwise, arguments are mandatory.

@note This function, data layout independent, can be used to concatenate either int8 or uint8 tensors because it
      does not involve any arithmetic operation

@param[in]  input    Pointer to input tensor. Input tensor must not overlap with the output tensor.
@param[in]  input_x  Width of input tensor
@param[in]  input_y  Height of input tensor
@param[in]  input_z  Channels in input tensor
@param[in]  input_w  Batch size in input tensor
@param[out] output   Pointer to output tensor. Expected to be at least
                         (input_z * input_w * input_x * input_y) + offset_y
                     bytes.
@param[in]  output_y Height of output tensor
@param[in]  offset_y The offset on the Y axis to start concatenating the input tensor
                     It is user responsibility to provide the correct value

<b> Input constraints</b>
offset_y is less than output_y
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConcatenationFunctions/riscv_concatenation_s8_y.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__concatenation__s8__z_8c';
  file-name = 'riscv_concatenation_s8_z.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Concatenation_1ga31ca151014169081ff8ed1b199bba65e';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_concatenation_s8_z';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_z';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_w';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_z';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'offset_z';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConcatenationFunctions/riscv_concatenation_s8_z.c';
      func-mem-desc-line = '50';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
int8/uint8 concatenation function to be used for concatenating N-tensors along the Z axis
       This function should be called for each input tensor to concatenate. The argument offset_z
       will be used to store the input tensor in the correct position in the output tensor
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
       i.e.    offset_z = 0
               for(i = 0 i < num_input_tensors; ++i)
               {
                   riscv_concatenation_s8_z(&input[i], ..., &output, ..., ..., offset_z)
                   offset_z += input_z[i]
               }

       This function assumes that the output tensor has:
       -# The same width of the input tensor
       -# The same height of the input tensor
       -# The same batch size of the input tensor

       Unless specified otherwise, arguments are mandatory.

@note This function, data layout independent, can be used to concatenate either int8 or uint8 tensors because it
      does not involve any arithmetic operation

@param[in]  input    Pointer to input tensor. Input tensor must not overlap with output tensor.
@param[in]  input_x  Width of input tensor
@param[in]  input_y  Height of input tensor
@param[in]  input_z  Channels in input tensor
@param[in]  input_w  Batch size in input tensor
@param[out] output   Pointer to output tensor. Expected to be at least
                         (input_x * input_y * input_z * input_w) + offset_z
                     bytes.
@param[in]  output_z Channels in output tensor
@param[in]  offset_z The offset on the Z axis to start concatenating the input tensor
                     It is user responsibility to provide the correct value

<b> Input constraints</b>
offset_z is less than output_z
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConcatenationFunctions/riscv_concatenation_s8_z.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__convolve__1__x__n__s8_8c';
  file-name = 'riscv_convolve_1_x_n_s8.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1gabaa21da3ad72b8c790efd27917a58982';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_1_x_n_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_conv_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'conv_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_per_channel_quant_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'quant_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_data';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_convolve_1_x_n_s8.c';
      func-mem-desc-line = '51';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
1xn convolution
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
 @param[in, out] ctx            Function context that contains the additional buffer if required by the function.
                                riscv_convolve_1_x_n_s8_get_buffer_size will return the buffer_size if required
 @param[in]      conv_params    Convolution parameters (e.g. strides, dilations, pads,...).
                                Range of conv_params->input_offset  : [-127, 128]
                                Range of conv_params->output_offset : [-128, 127]
 @param[in]      quant_params   Per-channel quantization info.
                                It contains the multiplier and shift values to be applied to each output channel
 @param[in]      input_dims     Input (activation) tensor dimensions. Format: [N, H, W, C_IN]
 @param[in]      input_data     Input (activation) data pointer. Data type: int8
 @param[in]      filter_dims    Filter tensor dimensions. Format: [C_OUT, 1, WK, C_IN] where WK is the horizontal
                                spatial filter dimension
 @param[in]      filter_data    Filter data pointer. Data type: int8
 @param[in]      bias_dims      Bias tensor dimensions. Format: [C_OUT]
 @param[in]      bias_data      Optional bias data pointer. Data type: int32
 @param[in]      output_dims    Output tensor dimensions. Format: [N, H, W, C_OUT]
 @param[out]     output_data    Output data pointer. Data type: int8

 @return     The function returns either
                  <code>RISCV_MATH_SIZE_MISMATCH</code> if argument constraints fail. or,
                  <code>RISCV_MATH_SUCCESS</code> on successful completion.




   - Supported framework : TensorFlow Lite Micro
   - The following constrains on the arguments apply
      -# input_dims->n equals 1
      -# ouput_dims->w is a multiple of 4
      -# Explicit constraints(since it is for 1xN convolution)
      -## input_dims->h equals 1
      -## output_dims->h equals 1
      -## filter_dims->h equals 1
\xrefitem todo 1.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1gad5d4e038de80a33c437fe39f48c523f4';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_1_x_n_s8_get_buffer_size';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_convolve_1_x_n_s8.c';
      func-mem-desc-line = '88';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the required additional buffer size for 1xn convolution.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       input_dims            Input (activation) tensor dimensions. Format: [N, H, W, C_IN]
@param[in]       filter_dims           Filter tensor dimensions. Format: [C_OUT, 1, WK, C_IN] where WK is the
                                       horizontal spatial filter dimension
@return          The function returns  required buffer size(bytes)
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_convolve_1_x_n_s8.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__convolve__1x1__HWC__q7__fast__nonsquare_8c';
  file-name = 'riscv_convolve_1x1_HWC_q7_fast_nonsquare.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga6c935af4ca6a80b7b747ff90e1e5c91a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_1x1_HWC_q7_fast_nonsquare';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_in_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_in_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'wt';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_kernel_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_kernel_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'padding_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'padding_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_out_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_out_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferA';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferB';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_convolve_1x1_HWC_q7_fast_nonsquare.c';
      func-mem-desc-line = '82';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Fast Q7 version of 1x1 convolution (non-sqaure shape)
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       Im_in        pointer to input tensor
@param[in]       dim_im_in_x  input tensor dimention x
@param[in]       dim_im_in_y  input tensor dimention y
@param[in]       ch_im_in     number of input tensor channels
@param[in]       wt           pointer to kernel weights
@param[in]       ch_im_out    number of filters, i.e., output tensor channels
@param[in]       dim_kernel_x filter kernel size x
@param[in]       dim_kernel_y filter kernel size y
@param[in]       padding_x    padding size x
@param[in]       padding_y    padding size y
@param[in]       stride_x     convolution stride x
@param[in]       stride_y     convolution stride y
@param[in]       bias         pointer to bias
@param[in]       bias_shift   amount of left-shift for bias
@param[in]       out_shift    amount of right-shift for output
@param[in,out]   Im_out       pointer to output tensor
@param[in]       dim_im_out_x output tensor dimension x
@param[in]       dim_im_out_y output tensor dimension y
@param[in,out]   bufferA      pointer to buffer space for input
@param[in,out]   bufferB      pointer to buffer space for output
@return     The function returns either
<code>RISCV_MATH_SIZE_MISMATCH</code> or <code>RISCV_MATH_SUCCESS</code> based on the outcome of size checking.

This function is optimized for convolution with 1x1 kernel size (i.e., dim_kernel_x=1
and dim_kernel_y=1). It can be used for the second half of MobileNets [1] after depthwise
separable convolution.

This function is the version with full list of optimization tricks, but with
some constraints:
  ch_im_in is multiple of 4
  ch_im_out is multiple of 2

[1] MobileNets: Efficient Convolutional Neural Networks for Mobile Vision Applications
https://arxiv.org/abs/1704.04861
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_convolve_1x1_HWC_q7_fast_nonsquare.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__convolve__1x1__s8__fast_8c';
  file-name = 'riscv_convolve_1x1_s8_fast.c';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__convolve__1x1__s8__fast_8c_1a95303901d70372a3e87f1026fa582e29';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DIM_KER_X';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(1U)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_convolve_1x1_s8_fast.c';
      define-mem-desc-line = '35';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__convolve__1x1__s8__fast_8c_1aae182cde1be3fd4968de32d8a274c488';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DIM_KER_Y';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(1U)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_convolve_1x1_s8_fast.c';
      define-mem-desc-line = '36';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1gaa04044f1e2cb1ae5c3c0d7abe473e187';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_1x1_s8_fast';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_conv_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'conv_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_per_channel_quant_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'quant_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_data';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_convolve_1x1_s8_fast.c';
      func-mem-desc-line = '54';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Fast s8 version for 1x1 convolution (non-square shape)
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in, out] ctx            Function context that contains the additional buffer if required by the function.
                               riscv_convolve_1x1_s8_fast_get_buffer_size will return the buffer_size if required
@param[in]      conv_params    Convolution parameters (e.g. strides, dilations, pads,...).
                               Range of conv_params->input_offset  : [-127, 128]
                               Range of conv_params->output_offset : [-128, 127]
@param[in]      quant_params   Per-channel quantization info.
                               It contains the multiplier and shift values to be applied to each output channel
@param[in]      input_dims     Input (activation) tensor dimensions. Format: [N, H, W, C_IN]
@param[in]      input_data     Input (activation) data pointer. Data type: int8
@param[in]      filter_dims    Filter tensor dimensions. Format: [C_OUT, 1, 1, C_IN]
@param[in]      filter_data    Filter data pointer. Data type: int8
@param[in]      bias_dims      Bias tensor dimensions. Format: [C_OUT]
@param[in]      bias_data      Optional bias data pointer. Data type: int32
@param[in]      output_dims    Output tensor dimensions. Format: [N, H, W, C_OUT]
@param[out]     output_data    Output data pointer. Data type: int8

@return     The function returns either
                 <code>RISCV_MATH_SIZE_MISMATCH</code> if argument constraints fail. or,
                 <code>RISCV_MATH_SUCCESS</code> on successful completion.




  - Supported framework : TensorFlow Lite Micro
  - The following constrains on the arguments apply
     -# input_dims->c is a multiple of 4
     -# conv_params->padding.w = conv_params->padding.h = 0
     -# conv_params->stride.w = conv_params->stride.h = 1
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga194f5ffb4b714e99b263280283702b1a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_1x1_s8_fast_get_buffer_size';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_convolve_1x1_s8_fast.c';
      func-mem-desc-line = '101';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the required buffer size for riscv_convolve_1x1_s8_fast.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       input_dims            Input (activation) dimensions
@return          The function returns the required buffer size in bytes
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_convolve_1x1_s8_fast.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__convolve__fast__s16_8c';
  file-name = 'riscv_convolve_fast_s16.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga5134669caaa5fdb72c78497627a9209d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_fast_s16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_conv_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'conv_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_per_channel_quant_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'quant_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int64_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_data';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_convolve_fast_s16.c';
      func-mem-desc-line = '51';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Optimized s16 convolution function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
  @param[in, out] ctx            Function context that contains the additional buffer if required by the function.
                                 riscv_convolve_fast_s16_get_buffer_size will return the buffer_size if required
  @param[in]      conv_params    Convolution parameters (e.g. strides, dilations, pads,...).
                                 conv_params->input_offset  : Not used
                                 conv_params->output_offset : Not used
  @param[in]      quant_params   Per-channel quantization info.
                                 It contains the multiplier and shift values to be applied to each output channel
  @param[in]      input_dims     Input (activation) tensor dimensions. Format: [N, H, W, C_IN]
  @param[in]      input_data     Input (activation) data pointer. Data type: int16
  @param[in]      filter_dims    Filter tensor dimensions. Format: [C_OUT, HK, WK, C_IN] where HK and WK are the
                                 spatial filter dimensions. (filter_dims->w * filter_dims->h * input_dims->c) must not
exceed 512
  @param[in]      filter_data    Filter data pointer. Data type: int8
  @param[in]      bias_dims      Bias tensor dimensions. Format: [C_OUT]
  @param[in]      bias_data      Optional bias data pointer. Data type: int64
  @param[in]      output_dims    Output tensor dimensions. Format: [N, H, W, C_OUT]
  @param[out]     output_data    Output data pointer. Data type: int16

  @return     The function returns <code>RISCV_MATH_SUCCESS</code>



@verbatim
 1. Supported framework: TensorFlow Lite micro
 2. q7/q15 is used as data type eventhough it is s8/s16 data. It is done so to be consistent with existing APIs.
 3. Additional memory is required for optimization. Refer to argument 'ctx' for details.
 4. Implementation supports kernel volumes (filter width * filter height * input channels) < 512.@endverbatim
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga941037ba041535b76951eba87031c667';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_fast_s16_get_buffer_size';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_convolve_fast_s16.c';
      func-mem-desc-line = '228';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the required buffer size for fast s16 convolution function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       input_dims            Input (activation) tensor dimensions. Format: [N, H, W, C_IN]
@param[in]       filter_dims           Filter tensor dimensions. Format: [C_OUT, HK, WK, C_IN] where HK and WK
are the spatial filter dimensions
@return          The function returns required buffer size(bytes)
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_convolve_fast_s16.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__convolve__HWC__q15__basic_8c';
  file-name = 'riscv_convolve_HWC_q15_basic.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga24b8f2757e31020336b4e4d663f9f116';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_HWC_q15_basic';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'wt';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_kernel';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'padding';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferA';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferB';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_convolve_HWC_q15_basic.c';
      func-mem-desc-line = '75';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Basic Q15 convolution function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       Im_in       pointer to input tensor
@param[in]       dim_im_in   input tensor dimention
@param[in]       ch_im_in    number of input tensor channels
@param[in]       wt          pointer to kernel weights
@param[in]       ch_im_out   number of filters, i.e., output tensor channels
@param[in]       dim_kernel  filter kernel size
@param[in]       padding     padding sizes
@param[in]       stride      convolution stride
@param[in]       bias        pointer to bias
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in,out]   Im_out      pointer to output tensor
@param[in]       dim_im_out  output tensor dimension
@param[in,out]   bufferA     pointer to buffer space for input
@param[in,out]   bufferB     pointer to buffer space for output
@return     The function returns <code>RISCV_MATH_SUCCESS</code>





<b>Buffer size:</b>

bufferA size: ch_im_in*dim_kernel*dim_kernel

bufferB size: 0

This basic version is designed to work for any input tensor and weight
dimension.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_convolve_HWC_q15_basic.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__convolve__HWC__q15__fast_8c';
  file-name = 'riscv_convolve_HWC_q15_fast.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga9685fbf9f838fcc9306b3962bb6d04df';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_HWC_q15_fast';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'wt';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_kernel';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'padding';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferA';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferB';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_convolve_HWC_q15_fast.c';
      func-mem-desc-line = '82';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Fast Q15 convolution function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       Im_in       pointer to input tensor
@param[in]       dim_im_in   input tensor dimention
@param[in]       ch_im_in    number of input tensor channels
@param[in]       wt          pointer to kernel weights
@param[in]       ch_im_out   number of filters, i.e., output tensor channels
@param[in]       dim_kernel  filter kernel size
@param[in]       padding     padding sizes
@param[in]       stride      convolution stride
@param[in]       bias        pointer to bias
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in,out]   Im_out      pointer to output tensor
@param[in]       dim_im_out  output tensor dimension
@param[in,out]   bufferA     pointer to buffer space for input
@param[in,out]   bufferB     pointer to buffer space for output
@return     The function returns either
<code>RISCV_MATH_SIZE_MISMATCH</code> or <code>RISCV_MATH_SUCCESS</code> based on the outcome of size checking.





<b>Buffer size:</b>

bufferA size: 2*ch_im_in*dim_kernel*dim_kernel

bufferB size: 0

<b>Input dimension constraints:</b>

ch_im_in is multiple of 2

ch_im_out is multiple of 2

dim_im_out is a multiple of 2
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_convolve_HWC_q15_fast.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__convolve__HWC__q15__fast__nonsquare_8c';
  file-name = 'riscv_convolve_HWC_q15_fast_nonsquare.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga205837a93b5bd574a95c97b7d843551c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_HWC_q15_fast_nonsquare';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_in_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_in_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'wt';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_kernel_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_kernel_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'padding_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'padding_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_out_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_out_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferA';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferB';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_convolve_HWC_q15_fast_nonsquare.c';
      func-mem-desc-line = '85';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Fast Q15 convolution function (non-sqaure shape)
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       Im_in        pointer to input tensor
@param[in]       dim_im_in_x  input tensor dimention x
@param[in]       dim_im_in_y  input tensor dimention y
@param[in]       ch_im_in     number of input tensor channels
@param[in]       wt           pointer to kernel weights
@param[in]       ch_im_out    number of filters, i.e., output tensor channels
@param[in]       dim_kernel_x filter kernel size x
@param[in]       dim_kernel_y filter kernel size y
@param[in]       padding_x    padding size x
@param[in]       padding_y    padding size y
@param[in]       stride_x     convolution stride x
@param[in]       stride_y     convolution stride y
@param[in]       bias         pointer to bias
@param[in]       bias_shift   amount of left-shift for bias
@param[in]       out_shift    amount of right-shift for output
@param[in,out]   Im_out       pointer to output tensor
@param[in]       dim_im_out_x output tensor dimension x
@param[in]       dim_im_out_y output tensor dimension y
@param[in,out]   bufferA      pointer to buffer space for input
@param[in,out]   bufferB      pointer to buffer space for output
@return     The function returns either
<code>RISCV_MATH_SIZE_MISMATCH</code> or <code>RISCV_MATH_SUCCESS</code> based on the outcome of size checking.





<b>Buffer size:</b>

bufferA size: 2*ch_im_in*dim_kernel*dim_kernel

bufferB size: 0

<b>Input dimension constraints:</b>

ch_im_in is multiple of 2

ch_im_out is multiple of 2
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_convolve_HWC_q15_fast_nonsquare.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__convolve__HWC__q7__basic_8c';
  file-name = 'riscv_convolve_HWC_q7_basic.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga053353a7bdfca7d1aa9461210048d74a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_HWC_q7_basic';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'wt';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_kernel';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'padding';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferA';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferB';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_convolve_HWC_q7_basic.c';
      func-mem-desc-line = '75';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Basic Q7 convolution function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       Im_in       pointer to input tensor
@param[in]       dim_im_in   input tensor dimention
@param[in]       ch_im_in    number of input tensor channels
@param[in]       wt          pointer to kernel weights
@param[in]       ch_im_out   number of filters, i.e., output tensor channels
@param[in]       dim_kernel  filter kernel size
@param[in]       padding     padding sizes
@param[in]       stride      convolution stride
@param[in]       bias        pointer to bias
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in,out]   Im_out      pointer to output tensor
@param[in]       dim_im_out  output tensor dimension
@param[in,out]   bufferA     pointer to buffer space for input
@param[in,out]   bufferB     pointer to buffer space for output
@return     The function returns <code>RISCV_MATH_SUCCESS</code>





<b>Buffer size:</b>

bufferA size: 2*ch_im_in*dim_kernel*dim_kernel

bufferB size: 0

This basic version is designed to work for any input tensor and weight
dimension.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_convolve_HWC_q7_basic.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__convolve__HWC__q7__basic__nonsquare_8c';
  file-name = 'riscv_convolve_HWC_q7_basic_nonsquare.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga2434b44e25c1c62c6c9da25382bd3e08';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_HWC_q7_basic_nonsquare';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_in_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_in_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'wt';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_kernel_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_kernel_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'padding_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'padding_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_out_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_out_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferA';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferB';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_convolve_HWC_q7_basic_nonsquare.c';
      func-mem-desc-line = '69';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Basic Q7 convolution function (non-sqaure shape)
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Basic Q7 convolution function (non-square shape)

@param[in]       Im_in        pointer to input tensor
@param[in]       dim_im_in_x  input tensor dimention x
@param[in]       dim_im_in_y  input tensor dimention y
@param[in]       ch_im_in     number of input tensor channels
@param[in]       wt           pointer to kernel weights
@param[in]       ch_im_out    number of filters, i.e., output tensor channels
@param[in]       dim_kernel_x filter kernel size x
@param[in]       dim_kernel_y filter kernel size y
@param[in]       padding_x    padding size x
@param[in]       padding_y    padding size y
@param[in]       stride_x     convolution stride x
@param[in]       stride_y     convolution stride y
@param[in]       bias         pointer to bias
@param[in]       bias_shift   amount of left-shift for bias
@param[in]       out_shift    amount of right-shift for output
@param[in,out]   Im_out       pointer to output tensor
@param[in]       dim_im_out_x output tensor dimension x
@param[in]       dim_im_out_y output tensor dimension y
@param[in,out]   bufferA      pointer to buffer space for input
@param[in,out]   bufferB      pointer to buffer space for output
@return     The function returns <code>RISCV_MATH_SUCCESS</code>
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_convolve_HWC_q7_basic_nonsquare.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__convolve__HWC__q7__fast_8c';
  file-name = 'riscv_convolve_HWC_q7_fast.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1gaad778ec0d290ffa07f58c5b32cb8a80b';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_HWC_q7_fast';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'wt';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_kernel';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'padding';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferA';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferB';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_convolve_HWC_q7_fast.c';
      func-mem-desc-line = '92';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Fast Q7 convolution function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       Im_in       pointer to input tensor
@param[in]       dim_im_in   input tensor dimention
@param[in]       ch_im_in    number of input tensor channels
@param[in]       wt          pointer to kernel weights
@param[in]       ch_im_out   number of filters, i.e., output tensor channels
@param[in]       dim_kernel  filter kernel size
@param[in]       padding     padding sizes
@param[in]       stride      convolution stride
@param[in]       bias        pointer to bias
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in,out]   Im_out      pointer to output tensor
@param[in]       dim_im_out  output tensor dimension
@param[in,out]   bufferA     pointer to buffer space for input
@param[in,out]   bufferB     pointer to buffer space for output
@return     The function returns either
<code>RISCV_MATH_SIZE_MISMATCH</code> or <code>RISCV_MATH_SUCCESS</code> based on the outcome of size checking.





<b>Buffer size:</b>

bufferA size: 2*ch_im_in*dim_kernel*dim_kernel

bufferB size: 0

<b>Input dimension constraints:</b>

ch_im_in is multiple of 4    ( because of the SIMD32 read and swap )

ch_im_out is multiple of 2    ( bacause 2x2 mat_mult kernel )

The im2col converts the Q7 tensor input into Q15 column, which is stored in
bufferA. There is reordering happenning during this im2col process with
riscv_q7_to_q15_reordered_no_shift. For every four elements, the second and
third elements are swapped.

The computation kernel riscv_nn_mat_mult_kernel_q7_q15_reordered does the
GEMM computation with the reordered columns.

To speed-up the determination of the padding condition, we split the
computation into 3x3 parts, i.e., {top, mid, bottom} X {left, mid, right}.
This reduces the total number of boundary condition checks and improves
the data copying performance.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_convolve_HWC_q7_fast.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__convolve__HWC__q7__fast__nonsquare_8c';
  file-name = 'riscv_convolve_HWC_q7_fast_nonsquare.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1gaea6b13bcf602586c83033ce6310b1ca5';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_HWC_q7_fast_nonsquare';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_in_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_in_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'wt';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_kernel_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_kernel_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'padding_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'padding_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_out_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_out_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferA';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferB';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_convolve_HWC_q7_fast_nonsquare.c';
      func-mem-desc-line = '75';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Fast Q7 convolution function (non-sqaure shape)
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       Im_in        pointer to input tensor
@param[in]       dim_im_in_x  input tensor dimention x
@param[in]       dim_im_in_y  input tensor dimention y
@param[in]       ch_im_in     number of input tensor channels
@param[in]       wt           pointer to kernel weights
@param[in]       ch_im_out    number of filters, i.e., output tensor channels
@param[in]       dim_kernel_x filter kernel size x
@param[in]       dim_kernel_y filter kernel size y
@param[in]       padding_x    padding size x
@param[in]       padding_y    padding size y
@param[in]       stride_x     convolution stride x
@param[in]       stride_y     convolution stride y
@param[in]       bias         pointer to bias
@param[in]       bias_shift   amount of left-shift for bias
@param[in]       out_shift    amount of right-shift for output
@param[in,out]   Im_out       pointer to output tensor
@param[in]       dim_im_out_x output tensor dimension x
@param[in]       dim_im_out_y output tensor dimension y
@param[in,out]   bufferA      pointer to buffer space for input
@param[in,out]   bufferB      pointer to buffer space for output
@return     The function returns either
<code>RISCV_MATH_SIZE_MISMATCH</code> or <code>RISCV_MATH_SUCCESS</code> based on the outcome of size checking.

This function is the version with full list of optimization tricks, but with
some constraints:
  ch_im_in is multiple of 4
  ch_im_out is multiple of 2
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_convolve_HWC_q7_fast_nonsquare.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__convolve__HWC__q7__RGB_8c';
  file-name = 'riscv_convolve_HWC_q7_RGB.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga0a64a6e39851c858266bcb1227a431d4';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_HWC_q7_RGB';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'wt';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_kernel';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'padding';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferA';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferB';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_convolve_HWC_q7_RGB.c';
      func-mem-desc-line = '81';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Q7 convolution function for RGB image.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Q7 version of convolution for RGB image.

@param[in]       Im_in       pointer to input tensor
@param[in]       dim_im_in   input tensor dimention
@param[in]       ch_im_in    number of input tensor channels
@param[in]       wt          pointer to kernel weights
@param[in]       ch_im_out   number of filters, i.e., output tensor channels
@param[in]       dim_kernel  filter kernel size
@param[in]       padding     padding sizes
@param[in]       stride      convolution stride
@param[in]       bias        pointer to bias
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in,out]   Im_out      pointer to output tensor
@param[in]       dim_im_out  output tensor dimension
@param[in,out]   bufferA     pointer to buffer space for input
@param[in,out]   bufferB     pointer to buffer space for output
@return     The function returns either
<code>RISCV_MATH_SIZE_MISMATCH</code> or <code>RISCV_MATH_SUCCESS</code> based on the outcome of size checking.





<b>Buffer size:</b>

bufferA size: 2*ch_im_in*dim_kernel*dim_kernel

bufferB size: 0

<b>Input dimension constraints:</b>

ch_im_in equals 3

This kernel is written exclusively for convolution with ch_im_in
equals 3. This applies on the first layer of CNNs which has input
image with RGB format.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_convolve_HWC_q7_RGB.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__convolve__s16_8c';
  file-name = 'riscv_convolve_s16.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga825f6244f7a60d8d01e791f31561c346';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_s16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_conv_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'conv_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_per_channel_quant_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'quant_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int64_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_data';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_convolve_s16.c';
      func-mem-desc-line = '51';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Basic s16 convolution function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in, out] ctx            Function context that contains the additional buffer if required by the function.
                               riscv_convolve_s16_get_buffer_size will return the buffer_size if required
@param[in]      conv_params    Convolution parameters (e.g. strides, dilations, pads,...).
                               conv_params->input_offset  : Not used
                               conv_params->output_offset : Not used
@param[in]      quant_params   Per-channel quantization info.
                               It contains the multiplier and shift values to be applied to each output channel
@param[in]      input_dims     Input (activation) tensor dimensions. Format: [N, H, W, C_IN]
@param[in]      input_data     Input (activation) data pointer. Data type: int16
@param[in]      filter_dims    Filter tensor dimensions. Format: [C_OUT, HK, WK, C_IN] where HK and WK are the
                               spatial filter dimensions
@param[in]      filter_data    Filter data pointer. Data type: int8
@param[in]      bias_dims      Bias tensor dimensions. Format: [C_OUT]
@param[in]      bias_data      Optional bias data pointer. Data type: int64
@param[in]      output_dims    Output tensor dimensions. Format: [N, H, W, C_OUT]
@param[out]     output_data    Output data pointer. Data type: int16

@return     The function returns <code>RISCV_MATH_SUCCESS</code>




   1. Supported framework: TensorFlow Lite micro
   2. q7/q15 is used as data type eventhough it is s8/s16 data. It is done so to be consistent with existing APIs.
   3. Additional memory is required for optimization. Refer to argument 'ctx' for details.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1gabe5a9ee2a2c914346bf4e9e8a0f537b9';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_s16_get_buffer_size';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_convolve_s16.c';
      func-mem-desc-line = '147';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the required buffer size for s16 convolution function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       input_dims            Input (activation) tensor dimensions. Format: [N, H, W, C_IN]
@param[in]       filter_dims           Filter tensor dimensions. Format: [C_OUT, HK, WK, C_IN] where HK and WK
are the spatial filter dimensions
@return          The function returns  required buffer size(bytes)
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_convolve_s16.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__convolve__s8_8c';
  file-name = 'riscv_convolve_s8.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga723ae9312a46cbc7687931df988ff772';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_conv_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'conv_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_per_channel_quant_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'quant_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_data';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_convolve_s8.c';
      func-mem-desc-line = '52';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Basic s8 convolution function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in, out] ctx            Function context that contains the additional buffer if required by the function.
                               riscv_convolve_s8_get_buffer_size will return the buffer_size if required
@param[in]      conv_params    Convolution parameters (e.g. strides, dilations, pads,...).
                               Range of conv_params->input_offset  : [-127, 128]
                               Range of conv_params->output_offset : [-128, 127]
@param[in]      quant_params   Per-channel quantization info.
                               It contains the multiplier and shift values to be applied to each output channel
@param[in]      input_dims     Input (activation) tensor dimensions. Format: [N, H, W, C_IN]
@param[in]      input_data     Input (activation) data pointer. Data type: int8
@param[in]      filter_dims    Filter tensor dimensions. Format: [C_OUT, HK, WK, C_IN] where HK and WK are the
                               spatial filter dimensions
@param[in]      filter_data    Filter data pointer. Data type: int8
@param[in]      bias_dims      Bias tensor dimensions. Format: [C_OUT]
@param[in]      bias_data      Optional bias data pointer. Data type: int32
@param[in]      output_dims    Output tensor dimensions. Format: [N, H, W, C_OUT]
@param[out]     output_data    Output data pointer. Data type: int8

@return     The function returns <code>RISCV_MATH_SUCCESS</code>




   1. Supported framework: TensorFlow Lite micro
   2. q7 is used as data type eventhough it is s8 data. It is done so to be consistent with existing APIs.
   3. Additional memory is required for optimization. Refer to argument 'ctx' for details.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga268e623b07753f8f29cf72f9ec1ff249';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_s8_get_buffer_size';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_convolve_s8.c';
      func-mem-desc-line = '245';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the required buffer size for s8 convolution function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       input_dims            Input (activation) tensor dimensions. Format: [N, H, W, C_IN]
@param[in]       filter_dims           Filter tensor dimensions. Format: [C_OUT, HK, WK, C_IN] where HK and WK
are the spatial filter dimensions
@return          The function returns  required buffer size(bytes)
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_convolve_s8.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__convolve__wrapper__s16_8c';
  file-name = 'riscv_convolve_wrapper_s16.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1gada7d0c0cec6f5babd022ce1664b901ee';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_wrapper_s16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_conv_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'conv_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_per_channel_quant_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'quant_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int64_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_data';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_convolve_wrapper_s16.c';
      func-mem-desc-line = '51';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
s16 convolution layer wrapper function with the main purpose to call the optimal kernel available in
nmsis-nn
         to perform the convolution.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
  @param[in, out] ctx            Function context that contains the additional buffer if required by the function.
                                 riscv_convolve_wrapper_s8_get_buffer_size will return the buffer_size if required
  @param[in]      conv_params    Convolution parameters (e.g. strides, dilations, pads,...).
                                 conv_params->input_offset  : Not used
                                 conv_params->output_offset : Not used
  @param[in]      quant_params   Per-channel quantization info.
                                 It contains the multiplier and shift values to be applied to each output channel
  @param[in]      input_dims     Input (activation) tensor dimensions. Format: [N, H, W, C_IN]
  @param[in]      input_data     Input (activation) data pointer. Data type: int16
  @param[in]      filter_dims    Filter tensor dimensions. Format: [C_OUT, HK, WK, C_IN] where HK and WK are the
                                 spatial filter dimensions
  @param[in]      filter_data    Filter data pointer. Data type: int8
  @param[in]      bias_dims      Bias tensor dimensions. Format: [C_OUT]
  @param[in]      bias_data      Bias data pointer. Data type: int64
  @param[in]      output_dims    Output tensor dimensions. Format: [N, H, W, C_OUT]
  @param[out]     output_data    Output data pointer. Data type: int16

  @return     The function returns either
                   <code>RISCV_MATH_SIZE_MISMATCH</code> if argument constraints fail. or,
                   <code>RISCV_MATH_SUCCESS</code> on successful completion.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga72ff9c14a09b1c701ae432707bec0fd2';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_wrapper_s16_get_buffer_size';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_conv_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'conv_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_convolve_wrapper_s16.c';
      func-mem-desc-line = '108';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the required buffer size for riscv_convolve_wrapper_s16.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]      conv_params    Convolution parameters (e.g. strides, dilations, pads,...).
                               conv_params->input_offset  : Not used
                               conv_params->output_offset : Not used
@param[in]      input_dims     Input (activation) dimensions. Format: [N, H, W, C_IN]
@param[in]      filter_dims    Filter dimensions. Format: [C_OUT, HK, WK, C_IN] where HK and WK are the spatial
                               filter dimensions
@param[in]      output_dims    Output tensor dimensions. Format: [N, H, W, C_OUT]

@return         The function returns  required buffer size(bytes)
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_convolve_wrapper_s16.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__convolve__wrapper__s8_8c';
  file-name = 'riscv_convolve_wrapper_s8.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga47d4a71f628d2b45d982b7f090011ca8';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_wrapper_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_conv_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'conv_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_per_channel_quant_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'quant_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_data';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_convolve_wrapper_s8.c';
      func-mem-desc-line = '51';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
s8 convolution layer wrapper function with the main purpose to call the optimal kernel available in
nmsis-nn
         to perform the convolution.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
  @param[in, out] ctx            Function context that contains the additional buffer if required by the function.
                                 riscv_convolve_wrapper_s8_get_buffer_size will return the buffer_size if required
  @param[in]      conv_params    Convolution parameters (e.g. strides, dilations, pads,...).
                                 Range of conv_params->input_offset  : [-127, 128]
                                 Range of conv_params->output_offset : [-128, 127]
  @param[in]      quant_params   Per-channel quantization info.
                                 It contains the multiplier and shift values to be applied to each output channel
  @param[in]      input_dims     Input (activation) tensor dimensions. Format: [N, H, W, C_IN]
  @param[in]      input_data     Input (activation) data pointer. Data type: int8
  @param[in]      filter_dims    Filter tensor dimensions. Format: [C_OUT, HK, WK, C_IN] where HK and WK are the
                                 spatial filter dimensions
  @param[in]      filter_data    Filter data pointer. Data type: int8
  @param[in]      bias_dims      Bias tensor dimensions. Format: [C_OUT]
  @param[in]      bias_data      Bias data pointer. Data type: int32
  @param[in]      output_dims    Output tensor dimensions. Format: [N, H, W, C_OUT]
  @param[out]     output_data    Output data pointer. Data type: int8

  @return     The function returns either
                   <code>RISCV_MATH_SIZE_MISMATCH</code> if argument constraints fail. or,
                   <code>RISCV_MATH_SUCCESS</code> on successful completion.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1gad619a8fad8f7995394b9e6b1be9896e4';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_wrapper_s8_get_buffer_size';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_conv_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'conv_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_convolve_wrapper_s8.c';
      func-mem-desc-line = '110';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the required buffer size for riscv_convolve_wrapper_s8.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]      conv_params    Convolution parameters (e.g. strides, dilations, pads,...).
                               Range of conv_params->input_offset  : [-127, 128]
                               Range of conv_params->output_offset : [-128, 127]
@param[in]      input_dims     Input (activation) dimensions. Format: [N, H, W, C_IN]
@param[in]      filter_dims    Filter dimensions. Format: [C_OUT, HK, WK, C_IN] where HK and WK are the spatial
                               filter dimensions
@param[in]      output_dims    Output tensor dimensions. Format: [N, H, W, C_OUT]

@return         The function returns  required buffer size(bytes)
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_convolve_wrapper_s8.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__depthwise__conv__3x3__s8_8c';
  file-name = 'riscv_depthwise_conv_3x3_s8.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1gad8c0e2e6040122db541485e69e8e256e';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_depthwise_conv_3x3_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dw_conv_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dw_conv_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_per_channel_quant_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'quant_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'kernel';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_depthwise_conv_3x3_s8.c';
      func-mem-desc-line = '53';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Optimized s8 depthwise convolution function for 3x3 kernel size with some constraints on
       the input arguments(documented below). Refer riscv_depthwise_conv_s8() for function
       argument details.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@return     The function returns one of the following
               <code>RISCV_MATH_SIZE_MISMATCH</code> - Unsupported dimension of tensors
               <code>RISCV_MATH_ARGUMENT_ERROR</code> - Unsupported pad size along the x axis
               <code>RISCV_MATH_SUCCESS</code> - Successful operation




  - Supported framework : TensorFlow Lite Micro
  - The following constrains on the arguments apply
     -# Number of input channel equals number of output channels
     -# Filter height and width equals 3
     -# Padding along x is either 0 or 1.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_depthwise_conv_3x3_s8.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__depthwise__conv__s16_8c';
  file-name = 'riscv_depthwise_conv_s16.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga43c4623c2553d09a59385aabe971d75d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
static void
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(unused)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_depthwise_conv_s16.c';
      func-mem-desc-line = '43';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1gadde7c225c29269334cd821ead685361d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
static void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'depthwise_conv_s16_generic_s16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_batches';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_ch';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'kernel';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'kernel_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'kernel_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pad_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pad_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int64_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int16_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_activation_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_activation_max';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dilation_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dilation_y';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_depthwise_conv_s16.c';
      func-mem-desc-line = '130';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga3624f0f612e5282ee06802a1ad55a6bc';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_depthwise_conv_s16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dw_conv_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dw_conv_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_per_channel_quant_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'quant_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'kernel';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int64_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_depthwise_conv_s16.c';
      func-mem-desc-line = '241';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Basic s16 depthwise convolution function that doesn't have any constraints on the input dimensions.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in, out] ctx            Function context (e.g. temporary buffer). Check the function
                               definition file to see if an additional buffer is required.
                               Optional function {API}_get_buffer_size() provides the buffer
                               size if an additional buffer is required.
                               exists if additional memory is.
@param[in]      dw_conv_params Depthwise convolution parameters (e.g. strides, dilations, pads,...)
                               conv_params->input_offset  : Not used
                               conv_params->output_offset : Not used
@param[in]      quant_params   Per-channel quantization info.
                              It contains the multiplier and shift values to be applied to each
                              output channel
@param[in]      input_dims     Input (activation) tensor dimensions. Format: [N, H, W, C_IN]
                               Batch argument N is not used.
@param[in]      input_data     Input (activation) data pointer. Data type: int8
@param[in]      filter_dims    Filter tensor dimensions. Format: [1, H, W, C_OUT]
@param[in]      filter_data    Filter data pointer. Data type: int8
@param[in]      bias_dims      Bias tensor dimensions. Format: [C_OUT]
@param[in]      bias_data      Bias data pointer. Data type: int64
@param[in]      output_dims    Output tensor dimensions. Format: [N, H, W, C_OUT]
@param[in, out] output_data    Output data pointer. Data type: int16
@return     The function returns <code>RISCV_MATH_SUCCESS</code>




   - Supported framework: TensorFlow Lite
   - q15 is used as data type eventhough it is s16 data. It is done so to be consistent with existing APIs.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_depthwise_conv_s16.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__depthwise__conv__s8_8c';
  file-name = 'riscv_depthwise_conv_s8.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga06d7783f6788faad5165fd0ae583bc59';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
static void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'depthwise_conv_s8_mult_4';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_ch';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'kernel';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_ch';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'kernel_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'kernel_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pad_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pad_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_activation_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_activation_max';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_depthwise_conv_s8.c';
      func-mem-desc-line = '44';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga8a0fd229483032bfe41183843e17f8f6';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
static void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'depthwise_conv_s8_generic';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_batches';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_ch';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'kernel';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_ch';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'kernel_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'kernel_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pad_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pad_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_activation_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_activation_max';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dilation_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dilation_y';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_depthwise_conv_s8.c';
      func-mem-desc-line = '130';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1gaa5c81bf587c87928ba1990cc0aa51368';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_depthwise_conv_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dw_conv_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dw_conv_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_per_channel_quant_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'quant_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'kernel';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_depthwise_conv_s8.c';
      func-mem-desc-line = '249';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Basic s8 depthwise convolution function that doesn't have any constraints on the input dimensions.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in, out] ctx            Function context (e.g. temporary buffer). Check the function
                               definition file to see if an additional buffer is required.
                               Optional function {API}_get_buffer_size() provides the buffer
                               size if an additional buffer is required.
                               exists if additional memory is.
@param[in]      dw_conv_params Depthwise convolution parameters (e.g. strides, dilations, pads,...)
                               dw_conv_params->dilation is not used.
                               Range of dw_conv_params->input_offset : [-127, 128]
                               Range of dw_conv_params->input_offset : [-128, 127]
@param[in]      quant_params   Per-channel quantization info.
                              It contains the multiplier and shift values to be applied to each
                              output channel
@param[in]      input_dims     Input (activation) tensor dimensions. Format: [N, H, W, C_IN]
                               Batch argument N is not used.
@param[in]      input_data     Input (activation) data pointer. Data type: int8
@param[in]      filter_dims    Filter tensor dimensions. Format: [1, H, W, C_OUT]
@param[in]      filter_data    Filter data pointer. Data type: int8
@param[in]      bias_dims      Bias tensor dimensions. Format: [C_OUT]
@param[in]      bias_data      Bias data pointer. Data type: int32
@param[in]      output_dims    Output tensor dimensions. Format: [N, H, W, C_OUT]
@param[in, out] output_data    Output data pointer. Data type: int8
@return     The function returns <code>RISCV_MATH_SUCCESS</code>




   - Supported framework: TensorFlow Lite
   - q7 is used as data type eventhough it is s8 data. It is done so to be consistent with existing APIs.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_depthwise_conv_s8.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__depthwise__conv__s8__opt_8c';
  file-name = 'riscv_depthwise_conv_s8_opt.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga163c256dbe831cac3cb2c8069e7e110c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_depthwise_conv_s8_opt';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dw_conv_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dw_conv_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_per_channel_quant_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'quant_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'kernel';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_depthwise_conv_s8_opt.c';
      func-mem-desc-line = '52';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Optimized s8 depthwise convolution function with constraint that in_channel equals out_channel.
       Refer riscv_depthwise_conv_s8() for function argument details.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@return     The function returns one of the following
               <code>RISCV_MATH_SIZE_MISMATCH</code> - input channel != output channel or
                                                     ch_mult != 1
               <code>RISCV_MATH_SUCCESS</code> - Successful operation

@note       If number of channels is not a multiple of 4, upto 3 elements outside the boundary will be read out
            for the following if MVE optimizations(Arm Helium Technology) are used.
              - Output shift
              - Output multiplier
              - Output bias
              - kernel



   - Supported framework: TensorFlow Lite
   - The following constrains on the arguments apply
       -# Number of input channel equals number of output channels or ch_mult equals 1
   - q7 is used as data type eventhough it is s8 data. It is done so to be consistent with existing APIs.
   - Reccomended when number of channels is 4 or greater.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1gaf0c3458a5d997da11bacd258c7a86ab7';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_depthwise_conv_s8_opt_get_buffer_size';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_depthwise_conv_s8_opt.c';
      func-mem-desc-line = '364';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the required buffer size for optimized s8 depthwise convolution
function with constraint that in_channel equals out_channel.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       input_dims     Input (activation) tensor dimensions. Format: [1, H, W, C_IN]
                                Batch argument N is not used.
@param[in]       filter_dims    Filter tensor dimensions. Format: [1, H, W, C_OUT]
@return          The function returns  required buffer size in bytes
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_depthwise_conv_s8_opt.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__depthwise__conv__u8__basic__ver1_8c';
  file-name = 'riscv_depthwise_conv_u8_basic_ver1.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga4c54b5bdb38fc20c2167bdfa289f1a2b';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
static void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'depthwise_conv_u8_mult_4';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_ch';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'kernel';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_ch';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'kernel_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'kernel_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pad_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pad_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_activation_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_activation_max';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_depthwise_conv_u8_basic_ver1.c';
      func-mem-desc-line = '44';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1gab98fd934700dff7667131744c8972d91';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
static void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'depthwise_conv_u8_generic';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_ch';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'kernel';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_ch';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'kernel_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'kernel_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pad_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pad_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_activation_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_activation_max';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_depthwise_conv_u8_basic_ver1.c';
      func-mem-desc-line = '133';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1gaa3a3e0fac3bbb5d7b5ac90a21ee4ade8';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_depthwise_conv_u8_basic_ver1';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_ch';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'kernel';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'kernel_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'kernel_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pad_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pad_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dilation_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dilation_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_activation_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_activation_max';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_mult';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_depthwise_conv_u8_basic_ver1.c';
      func-mem-desc-line = '247';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
uint8 depthwise convolution function with asymmetric quantization
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
uint8 depthwise convolution function with asymmetric quantization
       Unless specified otherwise, arguments are mandatory.

@param[in]     input     Pointer to input tensor
@param[in]     input_x   Width of input tensor
@param[in]     input_y   Height of input tensor
@param[in]     input_ch  Channels in input tensor
@param[in]     kernel    Pointer to kernel weights
@param[in]     kernel_x  Width of kernel
@param[in]     kernel_y  Height of kernel
@param[in]     ch_mult   Number of channel multiplier
@param[in]     pad_x     Padding sizes x
@param[in]     pad_y     Padding sizes y
@param[in]     stride_x  Convolution stride along the width
@param[in]     stride_y  Convolution stride along the height
@param[in]     dilation_x Dilation along width. Not used and intended for future enhancement.
@param[in]     dilation_y Dilation along height. Not used and intended for future enhancement.
@param[in]     bias       Pointer to optional bias values. If no bias is
                          available, NULL is expected
@param[in]     input_offset  Input tensor zero offset
@param[in]     filter_offset Kernel tensor zero offset
@param[in]     output_offset Output tensor zero offset
@param[in,out] output        Pointer to output tensor
@param[in]     output_x  Width of output tensor
@param[in]     output_y  Height of output tensor
@param[in]     output_activation_min   Minimum value to clamp the output to. Range : {0, 255}
@param[in]     output_activation_max   Minimum value to clamp the output to. Range : {0, 255}
@param[in]     output_shift  Amount of right-shift for output
@param[in]     output_mult   Output multiplier for requantization
@return        The function returns one of the following
               <code>RISCV_MATH_SIZE_MISMATCH</code> - Not supported dimension of tensors
               <code>RISCV_MATH_SUCCESS</code> - Successful operation
               <code>RISCV_MATH_ARGUMENT_ERROR</code> - Implementation not available
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_depthwise_conv_u8_basic_ver1.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__depthwise__conv__wrapper__s8_8c';
  file-name = 'riscv_depthwise_conv_wrapper_s8.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1gadd730f9b8a5497148c7441b28461c0c6';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_depthwise_conv_wrapper_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dw_conv_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dw_conv_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_per_channel_quant_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'quant_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_depthwise_conv_wrapper_s8.c';
      func-mem-desc-line = '50';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Wrapper function to pick the right optimized s8 depthwise convolution function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in, out] ctx            Function context (e.g. temporary buffer). Check the function
                               definition file to see if an additional buffer is required.
                               Optional function {API}_get_buffer_size() provides the buffer
                               size if required.
@param[in]      dw_conv_params Depthwise convolution parameters (e.g. strides, dilations, pads,...)
                               dw_conv_params->dilation is not used.
                               Range of dw_conv_params->input_offset : [-127, 128]
                               Range of dw_conv_params->output_offset : [-128, 127]
@param[in]      quant_params   Per-channel quantization info.
                              It contains the multiplier and shift values to be applied to each
                              output channel
@param[in]      input_dims     Input (activation) tensor dimensions. Format: [H, W, C_IN]
                               Batch argument N is not used and assumed to be 1.
@param[in]      input_data     Input (activation) data pointer. Data type: int8
@param[in]      filter_dims    Filter tensor dimensions. Format: [1, H, W, C_OUT]
@param[in]      filter_data    Filter data pointer. Data type: int8
@param[in]      bias_dims      Bias tensor dimensions. Format: [C_OUT]
@param[in]      bias_data      Bias data pointer. Data type: int32
@param[in]      output_dims    Output tensor dimensions. Format: [1, H, W, C_OUT]
@param[in, out] output_data    Output data pointer. Data type: int8
@return     The function returns
               <code>RISCV_MATH_SUCCESS</code>   -  Successful completion.




   - Supported framework: TensorFlow Lite
   - Picks one of the the following functions
       -# riscv_depthwise_conv_s8()
       -# riscv_depthwise_conv_3x3_s8() - RISC-V CPUs with DSP extension only
       -# riscv_depthwise_conv_s8_opt()
   - q7 is used as data type eventhough it is s8 data. It is done so to be consistent with existing APIs.
   - Check details of riscv_depthwise_conv_s8_opt() for potential data that can be accessed outside of the
boundary.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga6ef29f06fe7ad6af657dadc07f49ba2c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_depthwise_conv_wrapper_s8_get_buffer_size';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dw_conv_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dw_conv_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_depthwise_conv_wrapper_s8.c';
      func-mem-desc-line = '115';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get size of additional buffer required by riscv_depthwise_conv_wrapper_s8()
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]      dw_conv_params Depthwise convolution parameters (e.g. strides, dilations, pads,...)
                               dw_conv_params->dilation is not used.
                               Range of dw_conv_params->input_offset : [-127, 128]
                               Range of dw_conv_params->input_offset : [-128, 127]
@param[in]      input_dims     Input (activation) tensor dimensions. Format: [H, W, C_IN]
                               Batch argument N is not used and assumed to be 1.
@param[in]      filter_dims    Filter tensor dimensions. Format: [1, H, W, C_OUT]
@param[in]      output_dims    Output tensor dimensions. Format: [1, H, W, C_OUT]
@return                        Size of additional memory required for optimizations in bytes.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_depthwise_conv_wrapper_s8.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__depthwise__separable__conv__HWC__q7_8c';
  file-name = 'riscv_depthwise_separable_conv_HWC_q7.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga73a880af4ffcae5ba0229a20890b05d4';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_depthwise_separable_conv_HWC_q7';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'wt';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_kernel';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'padding';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferA';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferB';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_depthwise_separable_conv_HWC_q7.c';
      func-mem-desc-line = '83';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Q7 depthwise separable convolution function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       Im_in       pointer to input tensor
@param[in]       dim_im_in   input tensor dimension
@param[in]       ch_im_in    number of input tensor channels
@param[in]       wt          pointer to kernel weights
@param[in]       ch_im_out   number of filters, i.e., output tensor channels
@param[in]       dim_kernel  filter kernel size
@param[in]       padding     padding sizes
@param[in]       stride      convolution stride
@param[in]       bias        pointer to bias
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in,out]   Im_out      pointer to output tensor
@param[in]       dim_im_out  output tensor dimension
@param[in,out]   bufferA     pointer to buffer space for input
@param[in,out]   bufferB     pointer to buffer space for output
@return     The function returns either
<code>RISCV_MATH_SIZE_MISMATCH</code> or <code>RISCV_MATH_SUCCESS</code> based on the outcome of size checking.





<b>Buffer size:</b>

bufferA size: 2*ch_im_in*dim_kernel*dim_kernel

bufferB size: 0

<b>Input dimension constraints:</b>

ch_im_in equals ch_im_out

Implementation:
There are 3 nested loop here:
Inner loop: calculate each output value with MAC instruction over an accumulator
Mid   loop: loop over different output channel
Outer loop: loop over different output (x, y)
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_depthwise_separable_conv_HWC_q7.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__depthwise__separable__conv__HWC__q7__nonsquare_8c';
  file-name = 'riscv_depthwise_separable_conv_HWC_q7_nonsquare.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1gaec2d2b8c1536a08db1811d8971f20f66';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_depthwise_separable_conv_HWC_q7_nonsquare';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_in_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_in_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'wt';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_kernel_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_kernel_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'padding_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'padding_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_out_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_out_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferA';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferB';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_depthwise_separable_conv_HWC_q7_nonsquare.c';
      func-mem-desc-line = '75';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Q7 depthwise separable convolution function (non-square shape)
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       Im_in         pointer to input tensor
@param[in]       dim_im_in_x   input tensor dimension x
@param[in]       dim_im_in_y   input tensor dimension y
@param[in]       ch_im_in      number of input tensor channels
@param[in]       wt            pointer to kernel weights
@param[in]       ch_im_out     number of filters, i.e., output tensor channels
@param[in]       dim_kernel_x  filter kernel size x
@param[in]       dim_kernel_y  filter kernel size y
@param[in]       padding_x     padding sizes x
@param[in]       padding_y     padding sizes y
@param[in]       stride_x      convolution stride x
@param[in]       stride_y      convolution stride y
@param[in]       bias          pointer to bias
@param[in]       bias_shift    amount of left-shift for bias
@param[in]       out_shift     amount of right-shift for output
@param[in,out]   Im_out        pointer to output tensor
@param[in]       dim_im_out_x  output tensor dimension x
@param[in]       dim_im_out_y  output tensor dimension y
@param[in,out]   bufferA       pointer to buffer space for input
@param[in,out]   bufferB       pointer to buffer space for output
@return     The function returns either
<code>RISCV_MATH_SIZE_MISMATCH</code> or <code>RISCV_MATH_SUCCESS</code> based on the outcome of size checking.

This function is the version with full list of optimization tricks, but with
some constraints:
  ch_im_in is equal to ch_im_out
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_depthwise_separable_conv_HWC_q7_nonsquare.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__elementwise__add__s16_8c';
  file-name = 'riscv_elementwise_add_s16.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__BasicMath_1ga8df473e72e73447b08b45dbd909f83ae';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_elementwise_add_s16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_1_vect';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_2_vect';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_1_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_1_mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_1_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_2_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_2_mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_2_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'left_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int16_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_activation_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_activation_max';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'block_size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/BasicMathFunctions/riscv_elementwise_add_s16.c';
      func-mem-desc-line = '53';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
s16 elementwise add of two vectors
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       input_1_vect            pointer to input vector 1
@param[in]       input_2_vect            pointer to input vector 2
@param[in]       input_1_offset          offset for input 1. Not used.
@param[in]       input_1_mult            multiplier for input 1
@param[in]       input_1_shift           shift for input 1
@param[in]       input_2_offset          offset for input 2. Not used.
@param[in]       input_2_mult            multiplier for input 2
@param[in]       input_2_shift           shift for input 2
@param[in]       left_shift              input left shift
@param[in,out]   output                  pointer to output vector
@param[in]       out_offset              output offset. Not used.
@param[in]       out_mult                output multiplier
@param[in]       out_shift               output shift
@param[in]       out_activation_min      minimum value to clamp output to. Min: -32768
@param[in]       out_activation_max      maximum value to clamp output to. Max: 32767
@param[in]       block_size              number of samples
@return          The function returns    RISCV_MATH_SUCCESS
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/BasicMathFunctions/riscv_elementwise_add_s16.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__elementwise__add__s8_8c';
  file-name = 'riscv_elementwise_add_s8.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__BasicMath_1ga550d2fcdcc84f774042d724833c9a79e';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_elementwise_add_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_1_vect';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_2_vect';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_1_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_1_mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_1_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_2_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_2_mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_2_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'left_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_activation_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_activation_max';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'block_size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/BasicMathFunctions/riscv_elementwise_add_s8.c';
      func-mem-desc-line = '53';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
s8 elementwise add of two vectors
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       input_1_vect            pointer to input vector 1
@param[in]       input_2_vect            pointer to input vector 2
@param[in]       input_1_offset          offset for input 1. Range: -127 to 128
@param[in]       input_1_mult            multiplier for input 1
@param[in]       input_1_shift           shift for input 1
@param[in]       input_2_offset          offset for input 2. Range: -127 to 128
@param[in]       input_2_mult            multiplier for input 2
@param[in]       input_2_shift           shift for input 2
@param[in]       left_shift              input left shift
@param[in,out]   output                  pointer to output vector
@param[in]       out_offset              output offset.  Range: -128 to 127
@param[in]       out_mult                output multiplier
@param[in]       out_shift               output shift
@param[in]       out_activation_min      minimum value to clamp output to. Min: -128
@param[in]       out_activation_max      maximum value to clamp output to. Max: 127
@param[in]       block_size              number of samples
@return          The function returns    RISCV_MATH_SUCCESS
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/BasicMathFunctions/riscv_elementwise_add_s8.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__elementwise__mul__s16_8c';
  file-name = 'riscv_elementwise_mul_s16.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__BasicMath_1gadc02784b4606acb569eb5897bf089035';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_elementwise_mul_s16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_1_vect';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_2_vect';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_1_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_2_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int16_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_activation_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_activation_max';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'block_size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/BasicMathFunctions/riscv_elementwise_mul_s16.c';
      func-mem-desc-line = '50';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
s16 element wise multiplication of two vectors
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
s16 elementwise multiplication

@note   Refer header file for details.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/BasicMathFunctions/riscv_elementwise_mul_s16.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__elementwise__mul__s8_8c';
  file-name = 'riscv_elementwise_mul_s8.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__BasicMath_1ga0ec573c9ae7297928d3b5ef158fae771';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_elementwise_mul_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_1_vect';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_2_vect';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_1_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_2_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_activation_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_activation_max';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'block_size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/BasicMathFunctions/riscv_elementwise_mul_s8.c';
      func-mem-desc-line = '51';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
s8 element wise multiplication of two vectors
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
s8 elementwise multiplication

@note   Refer header file for details.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/BasicMathFunctions/riscv_elementwise_mul_s8.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__fully__connected__mat__q7__vec__q15_8c';
  file-name = 'riscv_fully_connected_mat_q7_vec_q15.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__FC_1gae53e7bbdcd7730c409d71d08c446d666';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_fully_connected_mat_q7_vec_q15';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pV';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pM';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_vec';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'num_of_rows';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pOut';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'vec_buffer';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/FullyConnectedFunctions/riscv_fully_connected_mat_q7_vec_q15.c';
      func-mem-desc-line = '69';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Mixed Q15-Q7 fully-connected layer function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       pV          pointer to input vector
@param[in]       pM          pointer to matrix weights
@param[in]       dim_vec     length of the vector
@param[in]       num_of_rows number of rows in weight matrix
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in]       bias        pointer to bias
@param[in,out]   pOut        pointer to output vector
@param[in,out]   vec_buffer  pointer to buffer space for input
@return     The function returns <code>RISCV_MATH_SUCCESS</code>





<b>Buffer size:</b>

vec_buffer size: 0

 Q7_Q15 version of the fully connected layer

 Weights are in q7_t and Activations are in q15_t
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/FullyConnectedFunctions/riscv_fully_connected_mat_q7_vec_q15.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__fully__connected__mat__q7__vec__q15__opt_8c';
  file-name = 'riscv_fully_connected_mat_q7_vec_q15_opt.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__FC_1ga73d8955ae16c57e5fe30de697459daed';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_fully_connected_mat_q7_vec_q15_opt';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pV';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pM';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_vec';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'num_of_rows';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pOut';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'vec_buffer';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/FullyConnectedFunctions/riscv_fully_connected_mat_q7_vec_q15_opt.c';
      func-mem-desc-line = '117';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Mixed Q15-Q7 opt fully-connected layer function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       pV          pointer to input vector
@param[in]       pM          pointer to matrix weights
@param[in]       dim_vec     length of the vector
@param[in]       num_of_rows number of rows in weight matrix
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in]       bias        pointer to bias
@param[in,out]   pOut        pointer to output vector
@param[in,out]   vec_buffer  pointer to buffer space for input
@return     The function returns <code>RISCV_MATH_SUCCESS</code>





<b>Buffer size:</b>

vec_buffer size: 0

 Q7_Q15 version of the fully connected layer

 Weights are in q7_t and Activations are in q15_t

 Limitation: x4 version requires weight reordering to work

 Here we use only one pointer to read 4 rows in the weight
 matrix. So if the original q7_t matrix looks like this:

 | a11 | a12 | a13 | a14 | a15 | a16 | a17 |

 | a21 | a22 | a23 | a24 | a25 | a26 | a27 |

 | a31 | a32 | a33 | a34 | a35 | a36 | a37 |

 | a41 | a42 | a43 | a44 | a45 | a46 | a47 |

 | a51 | a52 | a53 | a54 | a55 | a56 | a57 |

 | a61 | a62 | a63 | a64 | a65 | a66 | a67 |

 We operates on multiple-of-4 rows, so the first four rows becomes

 | a11 | a21 | a12 | a22 | a31 | a41 | a32 | a42 |

 | a13 | a23 | a14 | a24 | a33 | a43 | a34 | a44 |

 | a15 | a25 | a16 | a26 | a35 | a45 | a36 | a46 |

 The column left over will be in-order.
 which is:
 | a17 | a27 | a37 | a47 |

 For the left-over rows, we do 1x1 computation, so the data remains
 as its original order.

 So the stored weight matrix looks like this:

 | a11 | a21 | a12 | a22 | a31 | a41 |

 | a32 | a42 | a13 | a23 | a14 | a24 |

 | a33 | a43 | a34 | a44 | a15 | a25 |

 | a16 | a26 | a35 | a45 | a36 | a46 |

 | a17 | a27 | a37 | a47 | a51 | a52 |

 | a53 | a54 | a55 | a56 | a57 | a61 |

 | a62 | a63 | a64 | a65 | a66 | a67 |
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/FullyConnectedFunctions/riscv_fully_connected_mat_q7_vec_q15_opt.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__fully__connected__q15_8c';
  file-name = 'riscv_fully_connected_q15.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__FC_1gab7871cb369396fba31f5e7037b163b89';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_fully_connected_q15';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pV';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pM';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_vec';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'num_of_rows';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pOut';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'vec_buffer';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/FullyConnectedFunctions/riscv_fully_connected_q15.c';
      func-mem-desc-line = '66';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Q15 opt fully-connected layer function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Q15 basic fully-connected layer function.

@param[in]       pV          pointer to input vector
@param[in]       pM          pointer to matrix weights
@param[in]       dim_vec     length of the vector
@param[in]       num_of_rows number of rows in weight matrix
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in]       bias        pointer to bias
@param[in,out]   pOut        pointer to output vector
@param[in,out]   vec_buffer  pointer to buffer space for input
@return     The function returns <code>RISCV_MATH_SUCCESS</code>






<b>Buffer size:</b>

vec_buffer size: 0
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/FullyConnectedFunctions/riscv_fully_connected_q15.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__fully__connected__q15__opt_8c';
  file-name = 'riscv_fully_connected_q15_opt.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__FC_1ga7aac789b484f40bcea3ca6511f2969d1';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_fully_connected_q15_opt';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pV';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pM';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_vec';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'num_of_rows';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pOut';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'vec_buffer';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/FullyConnectedFunctions/riscv_fully_connected_q15_opt.c';
      func-mem-desc-line = '97';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Q15 opt fully-connected layer function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       pV          pointer to input vector
@param[in]       pM          pointer to matrix weights
@param[in]       dim_vec     length of the vector
@param[in]       num_of_rows number of rows in weight matrix
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in]       bias        pointer to bias
@param[in,out]   pOut        pointer to output vector
@param[in,out]   vec_buffer  pointer to buffer space for input
@return     The function returns <code>RISCV_MATH_SUCCESS</code>






<b>Buffer size:</b>

vec_buffer size: 0

 Here we use only one pointer to read 4 rows in the weight
 matrix. So if the original matrix looks like this:

 | a11 | a12 | a13 |

 | a21 | a22 | a23 |

 | a31 | a32 | a33 |

 | a41 | a42 | a43 |

 | a51 | a52 | a53 |

 | a61 | a62 | a63 |

 We operates on multiple-of-4 rows, so the first four rows becomes

 | a11 | a12 | a21 | a22 | a31 | a32 | a41 | a42 |

 | a13 | a23 | a33 | a43 |

 Remaining rows are kept the same original order.

 So the stored weight matrix looks like this:


 | a11 | a12 | a21 | a22 | a31 | a32 | a41 | a42 |

 | a13 | a23 | a33 | a43 | a51 | a52 | a53 | a61 |

 | a62 | a63 |
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/FullyConnectedFunctions/riscv_fully_connected_q15_opt.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__fully__connected__q7_8c';
  file-name = 'riscv_fully_connected_q7.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__FC_1gaabd0ddb08f10926a0cb16c780f1f1092';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_fully_connected_q7';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pV';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pM';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_vec';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'num_of_rows';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pOut';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'vec_buffer';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/FullyConnectedFunctions/riscv_fully_connected_q7.c';
      func-mem-desc-line = '68';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Q7 basic fully-connected layer function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       pV          pointer to input vector
@param[in]       pM          pointer to matrix weights
@param[in]       dim_vec     length of the vector
@param[in]       num_of_rows number of rows in weight matrix
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in]       bias        pointer to bias
@param[in,out]   pOut        pointer to output vector
@param[in,out]   vec_buffer  pointer to buffer space for input
@return     The function returns <code>RISCV_MATH_SUCCESS</code>





<b>Buffer size:</b>

vec_buffer size: dim_vec

This basic function is designed to work with regular weight
matrix without interleaving.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/FullyConnectedFunctions/riscv_fully_connected_q7.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__fully__connected__q7__opt_8c';
  file-name = 'riscv_fully_connected_q7_opt.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__FC_1ga7941d995077149ea20950bb2e44f4bba';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_fully_connected_q7_opt';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pV';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pM';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_vec';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'num_of_rows';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pOut';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'vec_buffer';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/FullyConnectedFunctions/riscv_fully_connected_q7_opt.c';
      func-mem-desc-line = '129';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Q7 opt fully-connected layer function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       pV          pointer to input vector
@param[in]       pM          pointer to matrix weights
@param[in]       dim_vec     length of the vector
@param[in]       num_of_rows number of rows in weight matrix
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in]       bias        pointer to bias
@param[in,out]   pOut        pointer to output vector
@param[in,out]   vec_buffer  pointer to buffer space for input
@return     The function returns <code>RISCV_MATH_SUCCESS</code>





<b>Buffer size:</b>

vec_buffer size: dim_vec

This opt function is designed to work with interleaved weight
matrix. The vector input is assumed in q7_t format, we call
 riscv_q7_to_q15_no_shift_shuffle function to expand into
 q15_t format with certain weight re-ordering, refer to the function
 comments for more details.
 Here we use only one pointer to read 4 rows in the weight
 matrix. So if the original q7_t matrix looks like this:

 | a11 | a12 | a13 | a14 | a15 | a16 | a17 |

 | a21 | a22 | a23 | a24 | a25 | a26 | a27 |

 | a31 | a32 | a33 | a34 | a35 | a36 | a37 |

 | a41 | a42 | a43 | a44 | a45 | a46 | a47 |

 | a51 | a52 | a53 | a54 | a55 | a56 | a57 |

 | a61 | a62 | a63 | a64 | a65 | a66 | a67 |


 We operates on multiple-of-4 rows, so the first four rows becomes

 | a11 | a21 | a13 | a23 | a31 | a41 | a33 | a43 |

 | a12 | a22 | a14 | a24 | a32 | a42 | a34 | a44 |

 | a15 | a25 | a35 | a45 | a16 | a26 | a36 | a46 |

 So within the kernel, we first read the re-ordered vector in as:

 | b1  | b3  | and | b2  | b4  |

 the four q31_t weights will look like

 | a11 | a13 |, | a21 | a23 |, | a31 | a33 |, | a41 | a43 |

 | a12 | a14 |, | a22 | a24 |, | a32 | a34 |, | a42 | a44 |

 The column left over will be in-order.
 which is:

 | a17 | a27 | a37 | a47 |

 For the left-over rows, we do 1x1 computation, so the data remains
 as its original order.

 So the stored weight matrix looks like this:

 | a11 | a21 | a13 | a23 | a31 | a41 |

 | a33 | a43 | a12 | a22 | a14 | a24 |

 | a32 | a42 | a34 | a44 | a15 | a25 |

 | a35 | a45 | a16 | a26 | a36 | a46 |

 | a17 | a27 | a37 | a47 | a51 | a52 |

 | a53 | a54 | a55 | a56 | a57 | a61 |

 | a62 | a63 | a64 | a65 | a66 | a67 |
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/FullyConnectedFunctions/riscv_fully_connected_q7_opt.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__fully__connected__s16_8c';
  file-name = 'riscv_fully_connected_s16.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__FC_1ga943071036b67bc0a59886c8bee86965d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_fully_connected_s16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_fc_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'fc_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_per_tensor_quant_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'quant_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'kernel';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int64_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/FullyConnectedFunctions/riscv_fully_connected_s16.c';
      func-mem-desc-line = '50';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Basic s16 Fully Connected function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in, out] ctx            Function context (e.g. temporary buffer). Check the function
                               definition file to see if an additional buffer is required.
                               Optional function {API}_get_buffer_size() provides the buffer
                               size if an additional buffer is required.
@param[in]      fc_params      Fully Connected layer parameters.
                               fc_params->input_offset  : 0
                               fc_params->filter_offset : 0
                               fc_params->output_offset : 0
@param[in]      quant_params   Per-tensor quantization info.
                               It contains the multiplier and shift values to be applied to the output tensor.
@param[in]      input_dims     Input (activation) tensor dimensions. Format: [N, H, W, C_IN]
                               Input dimension is taken as Nx(H * W * C_IN)
@param[in]      input_data     Input (activation) data pointer. Data type: int16
@param[in]      filter_dims    Two dimensional filter dimensions. Format: [N, C]
                               N : accumulation depth and equals (H * W * C_IN) from input_dims
                               C : output depth and equals C_OUT in output_dims
                               H & W : Not used
@param[in]      filter_data    Filter data pointer. Data type: int8
@param[in]      bias_dims      Bias tensor dimensions. Format: [C_OUT]
                               N, H, W : Not used
@param[in]      bias_data      Bias data pointer. Data type: int64
@param[in]      output_dims    Output tensor dimensions. Format: [N, C_OUT]
                               N : Batches
                               C_OUT : Output depth
                               H & W : Not used.
@param[in, out] output_data    Output data pointer. Data type: int16
@return     The function returns <code>RISCV_MATH_SUCCESS</code>




   - Supported framework: TensorFlow Lite
   - q15 is used as data type eventhough it is s16 data. It is done so to be consistent with existing APIs.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__FC_1ga3b2b4841125e295ce99b2ae648483b4c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_fully_connected_s16_get_buffer_size';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/FullyConnectedFunctions/riscv_fully_connected_s16.c';
      func-mem-desc-line = '90';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the required buffer size for S16 basic fully-connected and
matrix multiplication layer function for TF Lite.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]      filter_dims             dimension of filter
@return         The function returns    required buffer size in bytes
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/FullyConnectedFunctions/riscv_fully_connected_s16.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__fully__connected__s8_8c';
  file-name = 'riscv_fully_connected_s8.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__FC_1gaee6b76ba1caa346436404498e6c022f9';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_fully_connected_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_fc_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'fc_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_per_tensor_quant_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'quant_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'kernel';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/FullyConnectedFunctions/riscv_fully_connected_s8.c';
      func-mem-desc-line = '51';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Basic s8 Fully Connected function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in, out] ctx            Function context (e.g. temporary buffer). Check the function
                               definition file to see if an additional buffer is required.
                               Optional function {API}_get_buffer_size() provides the buffer
                               size if an additional buffer is required.
@param[in]      fc_params      Fully Connected layer parameters.
                               Range of fc_params->input_offset  : [-127, 128]
                               fc_params->filter_offset : 0
                               Range of fc_params->output_offset : [-128, 127]
@param[in]      quant_params   Per-tensor quantization info.
                               It contains the multiplier and shift values to be applied to the output tensor.
@param[in]      input_dims     Input (activation) tensor dimensions. Format: [N, H, W, C_IN]
                               Input dimension is taken as Nx(H * W * C_IN)
@param[in]      input_data     Input (activation) data pointer. Data type: int8
@param[in]      filter_dims    Two dimensional filter dimensions. Format: [N, C]
                               N : accumulation depth and equals (H * W * C_IN) from input_dims
                               C : output depth and equals C_OUT in output_dims
                               H & W : Not used
@param[in]      filter_data    Filter data pointer. Data type: int8
@param[in]      bias_dims      Bias tensor dimensions. Format: [C_OUT]
                               N, H, W : Not used
@param[in]      bias_data      Bias data pointer. Data type: int32
@param[in]      output_dims    Output tensor dimensions. Format: [N, C_OUT]
                               N : Batches
                               C_OUT : Output depth
                               H & W : Not used.
@param[in, out] output_data    Output data pointer. Data type: int8
@return     The function returns <code>RISCV_MATH_SUCCESS</code>




   - Supported framework: TensorFlow Lite
   - q7 is used as data type eventhough it is s8 data. It is done so to be consistent with existing APIs.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__FC_1gad6f87a614339280578e030ff6599ec2d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_fully_connected_s8_get_buffer_size';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/FullyConnectedFunctions/riscv_fully_connected_s8.c';
      func-mem-desc-line = '92';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the required buffer size for S8 basic fully-connected and
matrix multiplication layer function for TF Lite.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]      filter_dims             dimension of filter
@return         The function returns    required buffer size in bytes
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/FullyConnectedFunctions/riscv_fully_connected_s8.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__max__pool__s16_8c';
  file-name = 'riscv_max_pool_s16.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'riscv__max__pool__s16_8c_1a61d8f1ffa151d8a3327aea577f8c63a3';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
static void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'compare_and_replace_if_larger';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int16_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'base';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'target';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'length';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/PoolingFunctions/riscv_max_pool_s16.c';
      func-mem-desc-line = '34';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'riscv__max__pool__s16_8c_1a464e5d2cf70e82eb27be23b94a793cf6';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
static void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'clamp_output';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int16_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'source';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'length';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'act_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'act_max';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/PoolingFunctions/riscv_max_pool_s16.c';
      func-mem-desc-line = '70';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Pooling_1ga6adf7a64922112bede4d64d94e9a4458';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_max_pool_s16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_pool_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pool_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'src';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int16_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/PoolingFunctions/riscv_max_pool_s16.c';
      func-mem-desc-line = '113';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
s16 max pooling function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in, out] ctx            Function context (e.g. temporary buffer). Check the function
                               definition file to see if an additional buffer is required.
                               Optional function {API}_get_buffer_size() provides the buffer
                               size if an additional buffer is required.
@param[in]      pool_params    Pooling parameters
@param[in]      input_dims     Input (activation) tensor dimensions. Format: [H, W, C_IN]
                               Argument 'N' is not used.
@param[in]      src            Input (activation) data pointer. The input tensor must not
                               overlap with the output tensor. Data type: int16
@param[in]      filter_dims    Filter tensor dimensions. Format: [H, W]
                               Argument N and C are not used.
@param[in]      output_dims    Output tensor dimensions. Format: [H, W, C_OUT]
                               Argument N is not used.
                               C_OUT equals C_IN.
@param[in, out] dst            Output data pointer. Data type: int16
@return                        The function returns
                                   <code>RISCV_MATH_SUCCESS</code> - Successful operation




   - Supported Framework: TensorFlow Lite
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/PoolingFunctions/riscv_max_pool_s16.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__max__pool__s8_8c';
  file-name = 'riscv_max_pool_s8.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'riscv__max__pool__s8_8c_1a3b21bd4a5703839f9ffa5407502c302c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
static void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'compare_and_replace_if_larger_q7';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'base';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'target';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'length';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/PoolingFunctions/riscv_max_pool_s8.c';
      func-mem-desc-line = '35';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'riscv__max__pool__s8_8c_1ae73d902e6c38cf63ab235d6c4a3ff3b0';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
static void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'clamp_output';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'source';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'length';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'act_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'act_max';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/PoolingFunctions/riscv_max_pool_s8.c';
      func-mem-desc-line = '100';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Pooling_1ga1a1a793e01426883dd94efb50b0053e3';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_max_pool_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_pool_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pool_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'src';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/PoolingFunctions/riscv_max_pool_s8.c';
      func-mem-desc-line = '165';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
s8 max pooling function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in, out] ctx            Function context (e.g. temporary buffer). Check the function
                               definition file to see if an additional buffer is required.
                               Optional function {API}_get_buffer_size() provides the buffer
                               size if an additional buffer is required.
@param[in]      pool_params    Pooling parameters
@param[in]      input_dims     Input (activation) tensor dimensions. Format: [H, W, C_IN]
                               Argument 'N' is not used.
@param[in]      input_data     Input (activation) data pointer. The input tensor must not
                               overlap with the output tensor. Data type: int8
@param[in]      filter_dims    Filter tensor dimensions. Format: [H, W]
                               Argument N and C are not used.
@param[in]      output_dims    Output tensor dimensions. Format: [H, W, C_OUT]
                               Argument N is not used.
                               C_OUT equals C_IN.
@param[in, out] output_data    Output data pointer. Data type: int8
@return                        The function returns
                                   <code>RISCV_MATH_SUCCESS</code> - Successful operation




   - Supported Framework: TensorFlow Lite
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/PoolingFunctions/riscv_max_pool_s8.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__nn__accumulate__q7__to__q15_8c';
  file-name = 'riscv_nn_accumulate_q7_to_q15.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNBasicMath_1gaaa2307380e2a7d065d4dad6a928f8abb';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_accumulate_q7_to_q15';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pDst';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pSrc';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'length';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_nn_accumulate_q7_to_q15.c';
      func-mem-desc-line = '44';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Converts the elements from a q7 vector and accumulate to a q15 vector.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]    *src       points to the q7 input vector
@param[out]   *dst       points to the q15 output vector
@param[in]    block_size length of the input vector

\par Description:

The equation used for the conversion process is:

<pre>
 dst[n] += (q15_t) src[n] ;   0 <= n < block_size.
</pre>
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_nn_accumulate_q7_to_q15.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__nn__activations__q15_8c';
  file-name = 'riscv_nn_activations_q15.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Acti_1ga729aaae34b90575f7fa4f7a2e4e63d79';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_activations_direct_q15';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'int_width';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
riscv_nn_activation_type
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'type';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ActivationFunctions/riscv_nn_activations_q15.c';
      func-mem-desc-line = '51';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
neural network activation function using direct table look-up
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Q15 neural network activation function using direct table look-up.

@note  Refer header file for details.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ActivationFunctions/riscv_nn_activations_q15.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__nn__activations__q7_8c';
  file-name = 'riscv_nn_activations_q7.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Acti_1gaae6ff7918c52fd8cbd47f52337ad945f';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_activations_direct_q7';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'int_width';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
riscv_nn_activation_type
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'type';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ActivationFunctions/riscv_nn_activations_q7.c';
      func-mem-desc-line = '60';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Q7 neural network activation function using direct table look-up.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in,out]   data        pointer to input
@param[in]       size        number of elements
@param[in]       int_width   bit-width of the integer part, assume to be smaller than 3
@param[in]       type        type of activation functions





This is the direct table look-up approach.

Assume here the integer part of the fixed-point is <= 3.
More than 3 just not making much sense, makes no difference with
saturation followed by any of these activation functions.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ActivationFunctions/riscv_nn_activations_q7.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__nn__add__q7_8c';
  file-name = 'riscv_nn_add_q7.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNBasicMath_1gae72ab1e8045b992f1bf49b0bbafee3b1';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_add_q7';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q31_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'block_size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_nn_add_q7.c';
      func-mem-desc-line = '44';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Non-saturating addition of elements of a q7 vector.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       *input Pointer to the q7 input vector
@param[out]      *output Pointer to the q31 output variable.
@param[in]       block_size length of the input vector
\par Description:

2^24 samples can be added without saturating the result.

The equation used for the conversion process is:

<pre>
 sum = input[0] + input[1] + .. + input[block_size -1]
</pre>
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_nn_add_q7.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__nn__depthwise__conv__nt__t__padded__s8_8c';
  file-name = 'riscv_nn_depthwise_conv_nt_t_padded_s8.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNBasicMath_1gafb6cf5529840ea70733e977c295f2a68';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_depthwise_conv_nt_t_padded_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'lhs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'rhs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'num_ch';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'activation_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'activation_max';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'row_x_col';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *const
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_nn_depthwise_conv_nt_t_padded_s8.c';
      func-mem-desc-line = '50';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Depthwise convolution of transposed rhs matrix with 4 lhs matrices. To be used in padded cases where
       the padding is -lhs_offset(Range: int8). Dimensions are the same for lhs and rhs.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]      lhs             Input left-hand side matrix
@param[in]      rhs             Input right-hand side matrix (transposed)
@param[in]      lhs_offset      LHS matrix offset(input offset). Range: -127 to 128
@param[in]      num_ch          Number of channels in LHS/RHS
@param[in]      out_shift       Per channel output shift. Length of vector is equal to number of channels
@param[in]      out_mult        Per channel output multiplier. Length of vector is equal to number of channels
@param[in]      out_offset      Offset to be added to the output values. Range: -127 to 128
@param[in]      activation_min  Minimum value to clamp the output to. Range: int8
@param[in]      activation_max  Maximum value to clamp the output to. Range: int8
@param[in]       row_x_col       (row_dimension * col_dimension) of LHS/RHS matrix
@param[in]      output_bias     Per channel output bias. Length of vector is equal to number of channels
@param[in]      out             Output pointer

@return         The function returns one of the two
                 - Updated output pointer if an implementation is available
                 - NULL if no implementation is available.

@note           If number of channels is not a multiple of 4, upto 3 elements outside the boundary will be read
out for the following.
                 - Output shift
                 - Output multiplier
                 - Output bias
                 - rhs
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_nn_depthwise_conv_nt_t_padded_s8.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__nn__depthwise__conv__nt__t__s8_8c';
  file-name = 'riscv_nn_depthwise_conv_nt_t_s8.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNBasicMath_1ga8deb697159c0af5b9318ab595d09cf23';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_depthwise_conv_nt_t_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'lhs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'rhs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'num_ch';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'activation_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'activation_max';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'row_x_col';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *const
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_nn_depthwise_conv_nt_t_s8.c';
      func-mem-desc-line = '49';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Depthwise convolution of transposed rhs matrix with 4 lhs matrices. To be used in non-padded cases.
       Dimensions are the same for lhs and rhs.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]      lhs             Input left-hand side matrix
@param[in]      rhs             Input right-hand side matrix (transposed)
@param[in]      lhs_offset      LHS matrix offset(input offset). Range: -127 to 128
@param[in]      num_ch          Number of channels in LHS/RHS
@param[in]      out_shift       Per channel output shift. Length of vector is equal to number of channels.
@param[in]      out_mult        Per channel output multiplier. Length of vector is equal to number of channels.
@param[in]      out_offset      Offset to be added to the output values. Range: -127 to 128
@param[in]      activation_min  Minimum value to clamp the output to. Range: int8
@param[in]      activation_max  Maximum value to clamp the output to. Range: int8
@param[in]       row_x_col       (row_dimension * col_dimension) of LHS/RHS matrix
@param[in]      output_bias     Per channel output bias. Length of vector is equal to number of channels.
@param[in]      out             Output pointer

@return         The function returns one of the two
                 - Updated output pointer if an implementation is available
                 - NULL if no implementation is available.

@note           If number of channels is not a multiple of 4, upto 3 elements outside the boundary will be read
out for the following.
                 - Output shift
                 - Output multiplier
                 - Output bias
                 - rhs
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_nn_depthwise_conv_nt_t_s8.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__nn__depthwise__conv__s8__core_8c';
  file-name = 'riscv_nn_depthwise_conv_s8_core.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'riscv__nn__depthwise__conv__s8__core_8c_1a71a603e13b3f587d28da10b8d7f4abed';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_depthwise_conv_s8_core';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'row';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'col';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'num_ch';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'activation_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'activation_max';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'kernel_size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *const
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_nn_depthwise_conv_s8_core.c';
      func-mem-desc-line = '41';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Depthwise conv on an im2col buffer where the input channel equals output channel.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]    row     pointer to row
@param[in]    col     pointer to im2col buffer, always consists of 2 columns.
@param[in]    num_ch   number of channels
@param[in]    out_shift  pointer to per output channel requantization shift parameter.
@param[in]    out_mult   pointer to per output channel requantization multiplier parameter.
@param[in]    out_offset      output tensor offset.
@param[in]    activation_min   minimum value to clamp the output to. Range : int8
@param[in]    activation_max   maximum value to clamp the output to. Range : int8
@param[in]    kernel_size   number of elements in one column.
@param[in]    output_bias per output channel bias. Range : int32
@param[out]   out         pointer to output
@return     The function returns one of the two
             1. The incremented output pointer for a successful operation or
             2. NULL if implementation is not available.



Supported framework: TensorFlow Lite micro.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_nn_depthwise_conv_s8_core.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__nn__mat__mul__core__1x__s8_8c';
  file-name = 'riscv_nn_mat_mul_core_1x_s8.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNBasicMath_1gadfb338f9bd0ccfc54c942430f973962c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_mat_mul_core_1x_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'row_elements';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'row_base';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'col_base';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int32_t *const
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'sum_col';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int32_t *const
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_nn_mat_mul_core_1x_s8.c';
      func-mem-desc-line = '49';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
General Matrix-multiplication without requantization for one row & one column.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       row_elements  number of row elements
@param[in]       row_base      pointer to row operand
@param[in]       col_base      pointer to col operand
@param[out]      sum_col       pointer to store sum of column elements
@param[out]      output        pointer to store result of multiply-accumulate
@return     The function returns the multiply-accumulated result of the row by column.



Pseudo-code
     *output = 0
     sum_col = 0
     for (i = 0; i < row_elements; i++)
         *output += row_base[i] * col_base[i]
         sum_col += col_base[i]
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_nn_mat_mul_core_1x_s8.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__nn__mat__mul__core__4x__s8_8c';
  file-name = 'riscv_nn_mat_mul_core_4x_s8.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNBasicMath_1ga5ce706aab34112677e5adbfba40954bb';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int8_t *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_mat_mul_core_4x_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'row_elements';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'row_base';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'col_base_ref';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_ch';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_conv_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'conv_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_per_channel_quant_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'quant_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_nn_mat_mul_core_4x_s8.c';
      func-mem-desc-line = '48';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Matrix-multiplication with requantization & activation function for four rows and one column.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       row_elements  number of row elements
@param[in]       offset        offset between rows. Can be the same as row_elements.
                               For e.g, in a 1x1 conv scenario with stride as 1.
@param[in]       row_base      pointer to row operand
@param[in]       col_base      pointer to col operand
@param[in]       out_ch        Number of output channels
@param[in]       conv_params   Pointer to convolution parameters like offsets and activation values
@param[in]       quant_params  Pointer to per-channel quantization parameters
@param[in]       bias          Pointer to per-channel bias
@param[out]      output        Pointer to output where int8 results are stored.

@return     The function returns the updated output pointer or NULL if implementation is not available.



Compliant to TFLM int8 specification. MVE implementation only
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_nn_mat_mul_core_4x_s8.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__nn__mat__mul__kernel__s16_8c';
  file-name = 'riscv_nn_mat_mul_kernel_s16.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'riscv__nn__mat__mul__kernel__s16_8c_1a431b6595595738fa228ceea5f6f245a6';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_mat_mult_kernel_s16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_a';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_b';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_ch';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'activation_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'activation_max';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'num_col_a';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int64_t *const
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_0';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_nn_mat_mul_kernel_s16.c';
      func-mem-desc-line = '41';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Matrix-multiplication function for convolution with per-channel requantization for 16 bits convolution.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       input_a     pointer to operand A
@param[in]       input_b     pointer to operand B, always consists of 2 vectors.
@param[in]       output_ch   number of rows of A
@param[in]       out_shift  pointer to per output channel requantization shift parameter.
@param[in]       out_mult   pointer to per output channel requantization multiplier parameter.
@param[in]       activation_min   minimum value to clamp the output to. Range : int16
@param[in]       activation_max   maximum value to clamp the output to. Range : int16
@param[in]       num_col_a   number of columns of A
@param[in]       output_bias per output channel bias. Range : int64
@param[in,out]   out_0       pointer to output
@return     The function returns one of the two
             1. The incremented output pointer for a successful operation or
             2. NULL if implementation is not available.



This function does the matrix multiplication of weight matrix for all output channels
           with 2 columns from im2col and produces two elements/output_channel. The outputs are
           clamped in the range provided by activation min and max.
           Supported framework: TensorFlow Lite micro.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_nn_mat_mul_kernel_s16.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__nn__mat__mult__kernel__q7_8c';
  file-name = 'riscv_nn_mat_mult_kernel_q7.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'riscv__nn__mat__mult__kernel__q7_8c_1a02d325bf5565604cbdd34bf2b6bb7a9a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_mat_mult_kernel_q7';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pA';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pInBuffer';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'numCol_A';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pOut';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_nn_mat_mult_kernel_q7.c';
      func-mem-desc-line = '52';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Matrix-multiplication function for convolution.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       pA          pointer to operand A
@param[in]       pInBuffer   pointer to operand B, always conssists of 2 vectors
@param[in]       ch_im_out   numRow of A
@param[in]       numCol_A    numCol of A
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in]       bias        the bias
@param[in,out]   pOut        pointer to output
@return     The function returns the incremented output pointer





This function does the matrix multiplication with weight matrix
and 2 columns from im2col.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_nn_mat_mult_kernel_q7.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__nn__mat__mult__kernel__q7__q15_8c';
  file-name = 'riscv_nn_mat_mult_kernel_q7_q15.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'riscv__nn__mat__mult__kernel__q7__q15_8c_1a0a5502e6071542d3186fd7e13a773e5b';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_mat_mult_kernel_q7_q15';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pA';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pInBuffer';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'numCol_A';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pOut';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_nn_mat_mult_kernel_q7_q15.c';
      func-mem-desc-line = '41';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Matrix-multiplication function for convolution.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Matrix-Multiplication Kernels for Convolution.

Refer to header file for details.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_nn_mat_mult_kernel_q7_q15.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__nn__mat__mult__kernel__q7__q15__reordered_8c';
  file-name = 'riscv_nn_mat_mult_kernel_q7_q15_reordered.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'riscv__nn__mat__mult__kernel__q7__q15__reordered_8c_1a0477f12c5cec8e93a49669b7eebbb437';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_mat_mult_kernel_q7_q15_reordered';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pA';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pInBuffer';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'numCol_A';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pOut';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_nn_mat_mult_kernel_q7_q15_reordered.c';
      func-mem-desc-line = '41';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Matrix-multiplication function for convolution with re-ordered input.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Matrix-multiplication function for convolution with reordered columns.

Refer to header file for details.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_nn_mat_mult_kernel_q7_q15_reordered.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__nn__mat__mult__kernel__q7__reordered_8c';
  file-name = 'riscv_nn_mat_mult_kernel_q7_reordered.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'riscv__nn__mat__mult__kernel__q7__reordered_8c_1af58bd3c1abe7649518be10ad2d7c2a1a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_mat_mult_kernel_q7_reordered';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pA';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pInBuffer';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'numCol_A';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pOut';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_nn_mat_mult_kernel_q7_reordered.c';
      func-mem-desc-line = '51';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Matrix-multiplication function for convolution with reordered columns.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       pA          pointer to operand A
@param[in]       pInBuffer   pointer to operand B, always conssists of 2 vectors
@param[in]       ch_im_out   numRow of A
@param[in]       numCol_A    numCol of A
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in]       bias        the bias
@param[in,out]   pOut        pointer to output
@return     The function returns the incremented output pointer





This function assumes that data in pInBuffer are reordered
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_nn_mat_mult_kernel_q7_reordered.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__nn__mat__mult__kernel__s8__s16_8c';
  file-name = 'riscv_nn_mat_mult_kernel_s8_s16.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'riscv__nn__mat__mult__kernel__s8__s16_8c_1addb9457e1143da16a1683b8bb0953d1c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_mat_mult_kernel_s8_s16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_a';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_b';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_ch';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'activation_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'activation_max';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'num_col_a';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *const
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_0';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_nn_mat_mult_kernel_s8_s16.c';
      func-mem-desc-line = '41';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Matrix-multiplication function for convolution with per-channel requantization.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       input_a     pointer to operand A
@param[in]       input_b     pointer to operand B, always consists of 2 vectors.
@param[in]       output_ch   number of rows of A
@param[in]       out_shift  pointer to per output channel requantization shift parameter.
@param[in]       out_mult   pointer to per output channel requantization multiplier parameter.
@param[in]       out_offset      output tensor offset.
@param[in]       activation_min   minimum value to clamp the output to. Range : int8
@param[in]       activation_max   maximum value to clamp the output to. Range : int8
@param[in]       num_col_a   number of columns of A
@param[in]       output_bias per output channel bias. Range : int32
@param[in,out]   out_0       pointer to output
@return     The function returns one of the two
             1. The incremented output pointer for a successful operation or
             2. NULL if implementation is not available.



This function does the matrix multiplication of weight matrix for all output channels
           with 2 columns from im2col and produces two elements/output_channel. The outputs are
           clamped in the range provided by activation min and max.
           Supported framework: TensorFlow Lite micro.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_nn_mat_mult_kernel_s8_s16.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__nn__mat__mult__nt__t__s8_8c';
  file-name = 'riscv_nn_mat_mult_nt_t_s8.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNBasicMath_1ga0eee2411ea5e6df47751d6ff9d489dae';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_mat_mult_nt_t_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'lhs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'rhs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q31_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst_multipliers';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst_shifts';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'lhs_rows';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'rhs_rows';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'rhs_cols';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'lhs_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'activation_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'activation_max';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_nn_mat_mult_nt_t_s8.c';
      func-mem-desc-line = '49';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
General Matrix-multiplication function with per-channel requantization.
       This function assumes:
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
       - LHS input matrix NOT transposed (nt)
       - RHS input matrix transposed (t)

 @note This operation also performs the broadcast bias addition before the requantization

@param[in]  lhs                Pointer to the LHS input matrix
@param[in]  rhs                Pointer to the RHS input matrix
@param[in]  bias               Pointer to the bias vector. The length of this vector is equal to the number of
output columns (or RHS input rows)
@param[out] dst                Pointer to the output matrix with "m" rows and "n" columns
@param[in]  dst_multipliers    Pointer to the multipliers vector needed for the per-channel requantization.
                               The length of this vector is equal to the number of output columns (or RHS input
rows)
@param[in]  dst_shifts         Pointer to the shifts vector needed for the per-channel requantization. The length
of this vector is equal to the number of output columns (or RHS input rows)
@param[in]  lhs_rows           Number of LHS input rows
@param[in]  rhs_rows           Number of RHS input rows
@param[in]  rhs_cols           Number of LHS/RHS input columns
@param[in]  lhs_offset         Offset to be applied to the LHS input value
@param[in]  dst_offset         Offset to be applied the output result
@param[in]  activation_min     Minimum value to clamp down the output. Range : int8
@param[in]  activation_max     Maximum value to clamp up the output. Range : int8

@return     The function returns <code>RISCV_MATH_SUCCESS</code>
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_nn_mat_mult_nt_t_s8.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__nn__mat__mult__s8_8c';
  file-name = 'riscv_nn_mat_mult_s8.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'riscv__nn__mat__mult__s8_8c_1a12a5175ce69d93c4c726210bfecede6c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_mat_mult_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_row';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_col';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_ch';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'col_batches';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'col_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'row_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'activation_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'activation_max';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'row_len';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *const
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_nn_mat_mult_s8.c';
      func-mem-desc-line = '40';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
General Matrix-multiplication function with per-channel requantization.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       input_row    pointer to row operand
@param[in]       input_col    pointer to col operand
@param[in]       output_ch    number of rows of input_row
@param[in]       col_batches  number of column batches. Range: 1 to 4
@param[in]       output_shift  pointer to per output channel requantization shift parameter.
@param[in]       output_mult   pointer to per output channel requantization multiplier parameter.
@param[in]       out_offset    output tensor offset.
@param[in]       col_offset    input tensor(col) offset.
@param[in]       row_offset    kernel offset(row). Not used.
@param[in]       out_activation_min   minimum value to clamp the output to. Range : int8
@param[in]       out_activation_max   maximum value to clamp the output to. Range : int8
@param[in]       row_len       number of elements in each row
@param[in]       bias          per output channel bias. Range : int32
@param[in,out]   out           pointer to output
@return     The function returns one of the two
             1. The incremented output pointer for a successful operation or
             2. NULL if implementation is not available.



Supported framework: TensorFlow Lite
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ConvolutionFunctions/riscv_nn_mat_mult_s8.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__nn__math__types_8h';
  file-name = 'riscv_nn_math_types.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nn__math__types_8h_1ae831631f3421f6d219713c1259dc56cf';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = '__NMSIS_GENERIC';
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_math_types.h';
      define-mem-desc-line = '73';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nn__math__types_8h_1af2c9bcad6cb6fd9e16192af7e0528c8a';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = '__INC_INTRINSIC_API';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_math_types.h';
      define-mem-desc-line = '95';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nn__math__types_8h_1a602e8d32c870d50039bbd651fd9b4544';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'NN_Q31_MAX';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((q31_t)(0x7FFFFFFFL))
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_math_types.h';
      define-mem-desc-line = '182';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Add necessary typedefs.
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nn__math__types_8h_1a30fe8775d9c28c72fb7c336ab4751269';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'NN_Q15_MAX';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((q15_t)(0x7FFF))
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_math_types.h';
      define-mem-desc-line = '183';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nn__math__types_8h_1a3fc66c904b4e92c8e06803dac0ee54a1';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'NN_Q7_MAX';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((q7_t)(0x7F))
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_math_types.h';
      define-mem-desc-line = '184';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nn__math__types_8h_1aa10494e03ee6bdf5d573079ca559f073';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'NN_Q31_MIN';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((q31_t)(0x80000000L))
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_math_types.h';
      define-mem-desc-line = '185';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nn__math__types_8h_1a51e8177e289decc5ccf94be9c160064d';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'NN_Q15_MIN';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((q15_t)(0x8000))
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_math_types.h';
      define-mem-desc-line = '186';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nn__math__types_8h_1a342199b16a4abf4da4a7607a3a552b4f';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'NN_Q7_MIN';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((q7_t)(0x80))
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_math_types.h';
      define-mem-desc-line = '187';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    typedef = {
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'riscv__nn__math__types_8h_1ae541b6f232c305361e9b416fc9eed263';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
int8_t
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'q7_t';
      typedef-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_math_types.h';
      typedef-mem-desc-line = '151';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
8-bit fractional data type in 1.7 format.
_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'riscv__nn__math__types_8h_1ab5a8fb21a5b3b983d5f54f31614052ea';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
int16_t
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'q15_t';
      typedef-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_math_types.h';
      typedef-mem-desc-line = '156';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
16-bit fractional data type in 1.15 format.
_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'riscv__nn__math__types_8h_1adc89a3547f5324b7b3b95adec3806bc0';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'q31_t';
      typedef-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_math_types.h';
      typedef-mem-desc-line = '161';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
32-bit fractional data type in 1.31 format.
_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'riscv__nn__math__types_8h_1a5aea1cb12fc02d9d44c8abf217eaa5c6';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
int64_t
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'q63_t';
      typedef-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_math_types.h';
      typedef-mem-desc-line = '166';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
64-bit fractional data type in 1.63 format.
_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'riscv__nn__math__types_8h_1a4611b605e45ab401f02cab15c5e38715';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'float32_t';
      typedef-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_math_types.h';
      typedef-mem-desc-line = '171';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
32-bit floating-point type definition.
_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'riscv__nn__math__types_8h_1ac55f3ae81b5bc9053760baacf57e47f4';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'float64_t';
      typedef-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_math_types.h';
      typedef-mem-desc-line = '176';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
64-bit floating-point type definition.
_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    };
    enum = {
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'riscv__nn__math__types_8h_1abee189e6614258574db704417ef44d71';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = 'riscv_nmsis_nn_status';
      enum-mem-enum = { enum-name = RISCV_NMSIS_NN_SUCCESS; enum-value = '= 0'; };
      enum-mem-enum = { enum-name = RISCV_NMSIS_NN_ARG_ERROR; enum-value = '= -1'; };
      enum-mem-enum = { enum-name = RISCV_NMSIS_NN_NO_IMPL_ERROR; enum-value = '= -2'; };
      enum-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_math_types.h';
      enum-mem-desc-line = '194';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Error status returned by some functions in the library.
_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_math_types.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__nn__mult__q15_8c';
  file-name = 'riscv_nn_mult_q15.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNBasicMath_1gae785703e6b6be36f6c643de582e1bdbf';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_mult_q15';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pSrcA';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pSrcB';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pDst';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'blockSize';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_nn_mult_q15.c';
      func-mem-desc-line = '58';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Q7 vector multiplication with variable output shifts.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
q7 vector multiplication with variable output shifts

@param[in]       *pSrcA        pointer to the first input vector
@param[in]       *pSrcB        pointer to the second input vector
@param[out]      *pDst         pointer to the output vector
@param[in]       out_shift     amount of right-shift for output
@param[in]       blockSize     number of samples in each vector

<b>Scaling and Overflow Behavior:</b>
\par
The function uses saturating arithmetic.
Results outside of the allowable Q15 range [0x8000 0x7FFF] will be saturated.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_nn_mult_q15.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__nn__mult__q7_8c';
  file-name = 'riscv_nn_mult_q7.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNBasicMath_1ga53b69e8309dbc2e6c3f6f5bc42ea3d88';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_mult_q7';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pSrcA';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pSrcB';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pDst';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'blockSize';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_nn_mult_q7.c';
      func-mem-desc-line = '58';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Q7 vector multiplication with variable output shifts.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
q7 vector multiplication with variable output shifts

@param[in]       *pSrcA        pointer to the first input vector
@param[in]       *pSrcB        pointer to the second input vector
@param[out]      *pDst         pointer to the output vector
@param[in]       out_shift     amount of right-shift for output
@param[in]       blockSize     number of samples in each vector

<b>Scaling and Overflow Behavior:</b>
\par
The function uses saturating arithmetic.
Results outside of the allowable Q7 range [0x80 0x7F] will be saturated.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_nn_mult_q7.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__nn__softmax__common__s8_8c';
  file-name = 'riscv_nn_softmax_common_s8.c';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nn__softmax__common__s8_8c_1a401e2dfaf6a8f0ef34f15295e026fd79';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'ACCUM_BITS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
12
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/SoftmaxFunctions/riscv_nn_softmax_common_s8.c';
      define-mem-desc-line = '32';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Softmax_1gaa5362186d789a3944fa282915f2292c7';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_softmax_common_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'num_rows';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'row_size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'diff_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'int16_output';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
void *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/SoftmaxFunctions/riscv_nn_softmax_common_s8.c';
      func-mem-desc-line = '49';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Common softmax function for s8 input and s8 or s16 output.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]  input          Pointer to the input tensor
@param[in]  num_rows       Number of rows in the input tensor
@param[in]  row_size       Number of elements in each input row
@param[in]  mult           Input quantization multiplier
@param[in]  shift          Input quantization shift within the range [0, 31]
@param[in]  diff_min       Minimum difference with max in row. Used to check if
                           the quantized exponential operation can be performed
@param[in]  int16_output   Indicating s8 output if 0 else s16 output
@param[out] output         Pointer to the output tensor

@note Supported framework: TensorFlow Lite micro (bit-accurate)
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/SoftmaxFunctions/riscv_nn_softmax_common_s8.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__nn__tables_8h';
  file-name = 'riscv_nn_tables.h';
    var = {
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'riscv__nn__tables_8h_1ab4d7b07c387a3537d4efe21da86115b0';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
const q15_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'sigmoidTable_q15';
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_tables.h';
      var-mem-desc-line = '40';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
tables for various activation functions
_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'riscv__nn__tables_8h_1ae2ff3f4e7014f535358167150bdd544f';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
const q7_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'sigmoidTable_q7';
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_tables.h';
      var-mem-desc-line = '41';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
tables for various activation functions
_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_
This file include the declaration of common tables.
Most of them are used for activation functions

Assumption:
Unified table: input is 3.x format, i.e, range of [-8, 8)
sigmoid(8) = 0.9996646498695336
tanh(8) = 0.9999997749296758
The accuracy here should be good enough

2-stage HL table:

The entire input range is divided into two parts:

Low range table: 0x000x xxxx or 0x111x xxxx
table entry will be the binary number excluding the first
two digits, i.e., 0x0x xxxx or 0x1x xxxx



High range table 0x0010 0000 &ndash; 0x0111 1111
                 0x1000 0000 &ndash; 0x1101 1111

For positive numbers, table entry will be
0x0010 0000 &ndash; 0x0111 1111 minus 0x0010 0000
i.e., 0x0000 0000 - 0x0101 11111

same thing for the negative numbers, table entry will be
0x1000 0000 &ndash; 0x1101 1111 minux 0x0010 0000
i.e., 0x0110 0000 - 0x1011 1111
_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'riscv__nn__tables_8h_1a4f854bdf13f630ec21b3ad074491e32f';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
const q7_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'tanhTable_q7';
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_tables.h';
      var-mem-desc-line = '43';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'riscv__nn__tables_8h_1a6faad2fec173b2702fd0f219a83ca320';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
const q15_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'tanhTable_q15';
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_tables.h';
      var-mem-desc-line = '44';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'riscv__nn__tables_8h_1a107a16eaa36f4392fa3ed3792ad6c2cb';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
const q15_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'sigmoidHTable_q15';
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_tables.h';
      var-mem-desc-line = '54';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
2-way tables for various activation functions
_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_
2-way table, H table for value larger than 1/4
L table for value smaller than 1/4, H table for remaining
We have this only for the q15_t version. It does not make
sense to have it for q7_t type
_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'riscv__nn__tables_8h_1a69dc528cb377690d5b37accfdfd226b1';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
const q15_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'sigmoidLTable_q15';
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_tables.h';
      var-mem-desc-line = '55';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_tables.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__nn__types_8h';
  file-name = 'riscv_nn_types.h';
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nn_types.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__nn__vec__mat__mult__t__s16_8c';
  file-name = 'riscv_nn_vec_mat_mult_t_s16.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNBasicMath_1ga204ad5506aa1b3eba092520838913e86';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_vec_mat_mult_t_s16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'lhs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'rhs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q63_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst_multiplier';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'rhs_cols';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'rhs_rows';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'activation_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'activation_max';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_nn_vec_mat_mult_t_s16.c';
      func-mem-desc-line = '47';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
s16 Vector by Matrix (transposed) multiplication
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]      lhs             Input left-hand side vector
@param[in]      rhs             Input right-hand side matrix (transposed)
@param[in]      bias            Input bias
@param[out]     dst             Output vector
@param[in]      dst_multiplier  Output multiplier
@param[in]      dst_shift       Output shift
@param[in]      rhs_cols        Number of columns in the right-hand side input matrix
@param[in]      rhs_rows        Number of rows in the right-hand side input matrix
@param[in]      activation_min  Minimum value to clamp the output to. Range: int16
@param[in]      activation_max  Maximum value to clamp the output to. Range: int16

@return         The function returns <code>RISCV_MATH_SUCCESS</code>
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_nn_vec_mat_mult_t_s16.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__nn__vec__mat__mult__t__s8_8c';
  file-name = 'riscv_nn_vec_mat_mult_t_s8.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNBasicMath_1ga0c3082b00f2b9f5c7efeaab36fc58b77';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_vec_mat_mult_t_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'lhs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'rhs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q31_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'lhs_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'rhs_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst_multiplier';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'rhs_cols';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'rhs_rows';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'activation_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'activation_max';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'address_offset';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_nn_vec_mat_mult_t_s8.c';
      func-mem-desc-line = '49';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
s8 Vector by Matrix (transposed) multiplication
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]      lhs             Input left-hand side vector
@param[in]      rhs             Input right-hand side matrix (transposed)
@param[in]      bias            Input bias
@param[out]     dst             Output vector
@param[in]      lhs_offset      Offset to be added to the input values of the left-hand side vector.
                                Range: -127 to 128
@param[in]      rhs_offset      Not used
@param[in]      dst_offset      Offset to be added to the output values. Range: -127 to 128
@param[in]      dst_multiplier  Output multiplier
@param[in]      dst_shift       Output shift
@param[in]      rhs_cols        Number of columns in the right-hand side input matrix
@param[in]      rhs_rows        Number of rows in the right-hand side input matrix
@param[in]      activation_min  Minimum value to clamp the output to. Range: int8
@param[in]      activation_max  Maximum value to clamp the output to. Range: int8
@param[in]      address_offset  Memory position offset for dst. First output is stored at 'dst', the
                                second at 'dst + address_offset' and so on. Default value is typically 1.

@return         The function returns <code>RISCV_MATH_SUCCESS</code>
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_nn_vec_mat_mult_t_s8.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__nn__vec__mat__mult__t__svdf__s8_8c';
  file-name = 'riscv_nn_vec_mat_mult_t_svdf_s8.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNBasicMath_1ga9db069bb9afca33647c216f8d359bf49';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_vec_mat_mult_t_svdf_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'lhs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'rhs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'lhs_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'rhs_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst_multiplier';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'rhs_cols';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'rhs_rows';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'activation_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'activation_max';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_nn_vec_mat_mult_t_svdf_s8.c';
      func-mem-desc-line = '50';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
s8 Vector by Matrix (transposed) multiplication with s16 output
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]      lhs             Input left-hand side vector
@param[in]      rhs             Input right-hand side matrix (transposed)
@param[out]     dst             Output vector
@param[in]      lhs_offset      Offset to be added to the input values of the left-hand side
                                vector. Range: -127 to 128
@param[in]      rhs_offset      Not used
@param[in]      scatter_offset  Address offset for dst. First output is stored at 'dst', the
                                second at 'dst + scatter_offset' and so on.
@param[in]      dst_multiplier  Output multiplier
@param[in]      dst_shift       Output shift
@param[in]      rhs_cols        Number of columns in the right-hand side input matrix
@param[in]      rhs_rows        Number of rows in the right-hand side input matrix
@param[in]      activation_min  Minimum value to clamp the output to. Range: int16
@param[in]      activation_max  Maximum value to clamp the output to. Range: int16

@return         The function returns <code>RISCV_MATH_SUCCESS</code>
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_nn_vec_mat_mult_t_svdf_s8.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__nnexamples__cifar10_8c';
  file-name = 'riscv_nnexamples_cifar10.c';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10_8c_1a59ab6d907eccdfdff8fa326e13aa813a';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = '_DECLARE_IMAGE';
      define-mem-param  = {
        define-mem-def-name = 'img';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
static uint8_t image_data[CONV1_IM_CH * CONV1_IM_DIM * CONV1_IM_DIM] = IMG_DATA_##img; \
                           const char *image_name = #img;
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10.c';
      define-mem-desc-line = '123';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10_8c_1aaf140033109cfee27f531cf6bc527a46';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DECLARE_IMAGE';
      define-mem-param  = {
        define-mem-def-name = 'img';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
_DECLARE_IMAGE(img)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10.c';
      define-mem-desc-line = '125';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10_8c_1ab11916a360a9560f03a2b748acf14694';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'TEST_IMAGE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
horse1
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10.c';
      define-mem-desc-line = '134';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'riscv__nnexamples__cifar10_8c_1a7ee83bdaf3135394c506fb2218ffe3bb';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-name = 'DECLARE_IMAGE';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
TEST_IMAGE
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10.c';
      func-mem-desc-line = '136';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'riscv__nnexamples__cifar10_8c_1aed420d0248376533b29f0a02fafc6dcf';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-name = 'BENCH_DECLARE_VAR';
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10.c';
      func-mem-desc-line = '147';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'riscv__nnexamples__cifar10_8c_1ae66f6b31b5ad750f1fe042a706a4e3d4';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'main';
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10.c';
      func-mem-desc-line = '149';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
    var = {
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'riscv__nnexamples__cifar10_8c_1a230b7412ffaaa297340ddcb49c828b4b';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static q7_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'conv1_wt';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= CONV1_WT
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10.c';
      var-mem-desc-line = '110';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'riscv__nnexamples__cifar10_8c_1a2dd28923edd6ae13ec6e61e1d876650c';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static q7_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'conv1_bias';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= CONV1_BIAS
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10.c';
      var-mem-desc-line = '111';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'riscv__nnexamples__cifar10_8c_1a52875a8218c39da056e6d5bfb2030230';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static q7_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'conv2_wt';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= CONV2_WT
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10.c';
      var-mem-desc-line = '113';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'riscv__nnexamples__cifar10_8c_1a686e558e4de77f778c775c9f0c9866d0';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static q7_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'conv2_bias';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= CONV2_BIAS
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10.c';
      var-mem-desc-line = '114';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'riscv__nnexamples__cifar10_8c_1a174a146d0ffaa32b073c84d95c489fed';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static q7_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'conv3_wt';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= CONV3_WT
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10.c';
      var-mem-desc-line = '116';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'riscv__nnexamples__cifar10_8c_1a70b571cac288e0d371eb9f5e7c3ccbdd';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static q7_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'conv3_bias';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= CONV3_BIAS
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10.c';
      var-mem-desc-line = '117';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'riscv__nnexamples__cifar10_8c_1a244dc5b6679b33a0a85b55adbe969208';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static q7_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'ip1_wt';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= IP1_WT
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10.c';
      var-mem-desc-line = '119';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'riscv__nnexamples__cifar10_8c_1af715ce48798db09f3bed1753fed5c5fb';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static q7_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'ip1_bias';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= IP1_BIAS
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10.c';
      var-mem-desc-line = '120';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'riscv__nnexamples__cifar10_8c_1a75c8e3727f7d3637f03ffb1d9f727313';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
q7_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'output_data';
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10.c';
      var-mem-desc-line = '138';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'riscv__nnexamples__cifar10_8c_1a1f988afc6d7fe29ded1eafbf79a70386';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
q7_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'col_buffer';
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10.c';
      var-mem-desc-line = '141';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'riscv__nnexamples__cifar10_8c_1a19548b1fad7cb85d95f5f276873a5de3';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
q7_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'scratch_buffer';
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10.c';
      var-mem-desc-line = '143';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'riscv__nnexamples__cifar10_8c_1a4f9b9d2b7309d50414dd258fceca44f5';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'cifar10_label';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= {"Plane", "Car", "Bird", "Cat", "Deer", "Dog", "Frog", "Horse", "Ship", "Truck"}
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10.c';
      var-mem-desc-line = '145';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__nnexamples__cifar10__inputs_8h';
  file-name = 'riscv_nnexamples_cifar10_inputs.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__inputs_8h_1a82161fe5498521048731fc21a04577c3';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IMG_DATA';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{235,235,235,231,231,231,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,232,233,233,231,233,232,231,233,231,233,233,230,233,232,232,232,234,232,231,234,232,232,232,233,233,230,232,233,231,233,233,233,232,232,232,232,232,232,232,232,232,233,233,233,233,233,233,232,232,232,238,238,238,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,237,234,233,236,234,233,236,236,234,234,236,234,234,235,237,234,234,238,235,236,237,236,236,235,236,236,234,236,236,236,235,235,235,235,235,235,235,235,235,236,236,236,236,236,236,235,235,235,237,237,237,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,235,235,235,235,234,234,236,233,231,236,234,231,235,235,234,234,235,236,227,230,233,231,235,238,231,233,235,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,235,235,235,235,235,235,234,234,234,238,238,238,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,235,235,235,235,235,234,233,233,230,232,232,231,228,230,232,223,226,231,186,192,197,209,216,219,207,210,213,228,228,230,236,235,235,234,234,234,234,234,234,234,234,234,234,234,234,235,235,235,235,235,235,235,235,235,237,237,237,234,234,234,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,234,234,234,234,234,234,235,235,235,235,235,235,234,234,234,234,234,234,235,235,235,235,235,235,236,238,236,233,237,237,219,225,230,203,210,219,163,172,179,195,205,208,214,218,221,230,229,232,237,235,237,235,235,235,235,235,235,235,235,235,235,236,236,236,236,236,236,236,236,236,236,236,239,239,238,236,235,235,236,235,235,236,235,235,236,235,235,236,235,235,235,236,235,235,235,235,234,234,234,235,235,235,237,236,236,237,236,236,234,235,236,232,233,234,235,237,237,229,231,232,208,216,218,194,205,210,185,198,207,174,188,200,165,179,189,184,196,202,207,215,220,226,228,232,236,235,237,236,236,235,236,236,235,236,236,235,236,236,236,237,237,237,237,237,237,237,237,237,228,229,229,228,227,228,232,230,231,231,228,230,234,232,233,237,236,236,237,237,235,236,237,235,237,235,236,237,235,236,239,236,237,239,237,238,225,229,230,224,228,229,233,237,238,221,226,228,183,197,204,161,180,190,159,180,191,154,176,190,144,163,177,143,159,171,156,169,177,198,206,211,233,238,239,236,237,234,235,236,233,235,235,235,235,236,236,236,238,237,237,237,237,239,237,238,212,220,222,224,230,233,230,234,238,227,232,234,229,234,234,234,237,236,237,238,235,238,237,236,239,237,238,239,237,238,239,236,237,240,238,239,201,204,203,219,222,221,233,236,235,214,218,218,193,204,210,185,201,210,184,201,211,173,191,203,165,182,196,159,174,187,162,176,185,186,199,204,229,239,240,234,239,238,233,238,237,233,238,238,234,239,238,236,239,238,237,239,238,238,238,238,216,234,241,221,236,243,225,238,246,225,239,243,227,240,240,231,238,237,236,237,235,238,236,235,238,236,237,238,236,237,237,237,237,239,239,239,197,198,196,220,221,218,233,234,231,230,231,229,209,213,217,209,216,222,219,228,235,208,218,227,209,221,234,210,224,235,217,233,240,218,235,241,225,240,243,228,238,240,228,239,240,230,240,240,230,240,239,235,240,239,237,240,239,238,238,238,118,140,149,119,138,148,124,142,153,136,155,161,172,188,191,225,234,233,235,236,233,237,234,232,236,233,234,235,235,235,235,237,236,233,237,235,214,216,214,226,228,226,232,234,232,236,237,236,228,230,232,227,230,235,231,236,241,225,232,239,225,237,247,217,233,243,201,219,226,185,204,211,172,189,195,167,179,186,167,180,185,186,199,201,223,235,235,235,241,239,236,240,239,238,240,239,109,130,141,103,121,133,108,125,137,111,127,137,146,159,165,222,229,231,227,228,225,229,226,224,236,232,233,234,234,234,231,236,234,230,237,235,229,234,235,231,235,236,232,237,238,230,235,236,231,236,238,231,237,240,229,237,241,223,232,238,191,206,213,164,184,191,146,165,172,137,156,163,134,149,159,128,140,153,121,133,143,149,162,166,216,228,229,234,241,239,235,240,238,237,240,239,195,212,224,188,202,215,199,211,224,200,211,223,209,217,227,223,227,231,213,213,211,211,209,206,216,213,214,220,222,222,219,226,225,210,221,219,209,219,223,211,221,225,216,225,230,220,229,233,225,234,237,226,236,239,225,237,241,218,231,237,183,204,208,175,198,203,181,200,207,178,194,202,186,197,211,170,178,196,142,151,164,185,195,202,219,230,233,231,240,238,234,241,239,236,240,239,193,207,222,191,202,217,202,211,224,214,217,234,223,225,241,214,219,227,203,208,208,171,174,174,177,180,183,207,213,214,174,184,188,98,112,121,93,114,126,101,121,132,111,129,139,122,138,147,137,152,161,153,167,174,202,216,220,223,236,237,218,232,235,220,233,238,223,234,240,217,226,233,221,228,237,212,219,229,196,203,212,222,230,237,219,227,234,221,230,233,232,239,242,235,241,242,113,130,152,111,125,147,113,125,141,125,131,151,138,145,165,170,182,193,191,201,205,190,199,204,208,219,226,216,230,234,158,172,183,54,71,92,45,70,91,49,73,91,53,73,90,66,84,98,102,114,129,159,168,179,221,227,233,234,239,241,233,237,241,227,231,237,223,228,233,207,211,217,202,208,212,211,218,220,212,219,223,199,206,214,179,186,196,188,197,205,211,221,227,221,231,234,61,81,108,69,86,114,63,79,100,68,85,102,123,141,155,139,155,164,151,157,164,195,200,207,214,228,234,206,223,228,163,180,190,103,121,138,95,112,131,101,117,135,138,151,168,181,192,207,207,212,223,221,222,232,219,219,227,205,203,212,183,186,195,158,166,174,147,154,163,131,138,147,125,133,140,130,139,144,136,146,152,133,142,151,128,137,147,138,153,160,182,197,203,197,212,216,40,53,77,58,70,94,85,98,116,127,144,153,132,151,156,96,107,110,119,115,118,163,158,161,173,180,182,184,194,197,182,194,198,181,193,200,183,194,202,198,209,217,218,228,236,200,210,217,174,181,186,159,165,172,145,150,159,132,136,149,116,125,138,98,111,123,94,106,118,99,111,123,105,118,128,107,121,130,122,135,145,138,151,161,150,164,174,157,174,184,188,206,213,185,203,208,13,15,35,26,29,47,134,140,151,206,216,220,138,150,150,118,123,123,141,133,134,172,162,162,181,181,180,207,209,211,220,224,225,228,234,233,224,234,232,230,241,240,226,238,238,176,189,190,144,159,163,138,154,162,142,158,170,145,163,177,154,171,187,149,165,182,149,165,182,154,171,187,157,174,189,160,177,191,173,190,204,187,204,217,190,207,218,178,196,208,165,183,193,157,175,183,5,5,24,58,62,79,200,207,217,225,232,239,197,205,212,199,207,211,212,212,218,226,224,229,229,230,237,233,236,246,232,238,245,230,238,239,209,221,220,223,238,239,221,238,241,210,228,234,198,217,228,180,200,214,193,216,230,188,213,229,189,212,231,194,214,234,192,212,232,184,204,224,172,193,212,171,191,209,161,181,197,144,165,179,136,156,169,131,146,161,128,143,158,138,154,165,39,45,71,145,155,179,190,204,222,186,196,216,184,197,217,192,211,229,194,211,230,194,208,227,194,206,227,191,203,228,192,207,228,190,207,221,177,193,207,180,198,215,154,176,193,147,169,188,145,161,184,156,171,195,146,163,186,113,133,156,114,137,161,132,157,180,126,150,173,111,135,158,92,115,138,91,112,135,93,114,133,94,116,131,105,125,140,121,133,151,129,141,158,129,142,156,122,135,161,162,179,207,143,160,194,137,154,189,131,152,187,128,152,190,127,150,192,130,150,193,131,150,192,128,147,190,127,147,189,129,149,189,129,149,188,124,145,186,104,126,163,100,122,154,102,120,154,118,134,170,112,128,163,94,109,145,94,112,148,94,117,153,87,112,144,83,103,136,80,97,130,83,103,134,93,111,139,101,117,141,108,121,144,115,125,146,121,133,148,130,144,156,73,87,109,76,90,113,77,90,122,80,93,127,84,98,134,87,102,142,87,102,147,90,105,150,94,111,152,102,119,160,107,124,165,113,131,172,115,137,181,118,136,186,118,132,180,120,133,175,115,136,172,110,133,168,106,127,163,100,119,155,95,109,148,85,101,139,79,97,132,80,92,127,80,94,129,77,100,133,80,100,129,82,98,122,92,104,126,113,119,138,125,135,146,136,149,156,13,25,41,3,11,25,9,16,35,18,26,48,18,26,52,21,25,56,20,25,58,22,30,61,26,36,62,34,43,70,42,51,77,48,59,87,52,69,106,60,75,121,66,77,126,70,79,126,71,87,127,72,88,126,67,81,120,60,72,112,55,67,106,53,68,104,53,69,103,57,69,102,57,71,105,57,78,110,72,89,115,87,100,119,104,113,128,120,124,136,130,136,141,137,146,149,36,46,55,11,16,20,8,13,19,32,44,53,36,45,58,22,25,41,8,11,30,3,8,24,1,4,17,0,2,15,0,2,15,0,4,20,6,13,42,5,18,56,1,19,60,3,23,62,13,29,71,24,38,81,21,33,77,21,31,76,21,38,78,22,44,79,30,50,83,39,58,90,57,70,101,85,90,118,113,115,138,123,123,138,116,115,125,122,123,128,134,139,137,153,160,158,35,41,45,26,27,26,13,19,18,27,41,41,71,81,84,70,70,76,49,50,57,27,31,37,15,15,21,5,5,11,2,2,7,0,0,7,17,17,35,57,64,91,31,50,78,10,36,62,4,30,60,4,30,62,7,30,63,14,35,69,25,43,74,41,55,83,62,71,99,86,97,123,122,124,146,144,131,149,132,120,135,114,105,114,117,111,116,132,134,133,146,152,146,172,179,175,16,15,17,13,10,9,4,10,8,3,12,11,45,44,46,65,52,57,54,43,47,36,33,35,18,18,20,4,4,7,2,2,4,0,1,3,7,8,15,118,117,134,161,158,179,131,128,148,112,112,131,105,105,125,105,103,124,109,105,127,118,107,126,138,115,133,154,126,144,151,126,141,127,106,116,105,86,91,106,94,97,120,116,116,129,130,129,142,147,144,164,172,165,184,194,190,40,40,35,12,10,7,0,3,3,0,4,4,12,6,7,30,12,17,32,12,17,21,10,12,7,6,7,2,1,3,2,1,2,3,2,3,0,0,2,68,58,64,182,128,146,205,130,148,196,127,144,194,123,141,195,119,137,187,113,129,172,110,122,150,96,106,123,75,83,103,66,69,95,71,70,104,93,88,122,118,113,129,132,126,132,141,135,152,162,158,171,182,176,185,197,194,69,77,64,26,29,21,1,1,1,1,1,2,4,1,0,12,2,5,18,3,9,12,2,5,4,1,2,2,0,0,2,0,0,4,0,1,1,1,1,32,12,11,153,45,59,203,47,68,195,46,67,191,48,69,179,50,67,155,49,59,119,42,49,91,38,42,81,48,46,94,77,71,117,110,102,125,126,116,125,128,120,129,135,128,144,153,147,162,176,171,173,187,183,184,198,196,83,94,82,47,52,43,1,1,1,2,1,2,2,0,0,5,1,2,7,1,5,4,0,2,1,0,0,1,0,0,1,0,0,3,0,0,1,2,0,27,3,2,142,25,38,205,32,54,198,25,46,169,25,43,121,25,36,85,29,34,74,41,39,85,66,56,102,92,82,121,113,105,128,124,115,122,126,115,121,127,118,132,139,131,147,157,150,165,179,174,176,191,187,186,201,199,92,102,93,54,60,50,6,7,3,3,2,1,2,2,0,1,3,1,1,3,3,1,2,2,1,1,1,1,0,0,1,0,0,1,1,1,0,3,2,15,1,0,102,19,28,157,31,47,117,17,23,74,13,12,56,27,22,74,58,55,99,90,81,115,115,99,122,126,111,124,124,112,123,123,113,125,130,119,128,135,126,136,145,137,148,159,151,162,176,171,177,192,188,188,202,201,87,99,89,43,51,37,19,23,11,11,12,4,8,10,2,5,11,4,2,10,4,2,7,2,3,4,1,3,4,1,3,4,1,2,3,2,0,6,6,4,5,2,42,13,13,71,21,24,53,27,25,57,50,41,80,77,62,113,98,82,132,113,101,134,126,113,123,126,112,116,125,111,120,128,115,131,138,126,139,148,137,143,154,145,156,168,161,169,184,179,182,197,193,188,202,201,82,96,82,46,57,36,36,44,22,31,35,17,27,30,15,22,28,15,17,26,13,16,23,12,18,21,12,19,21,13,20,22,14,19,23,15,19,27,20,23,31,21,37,40,27,64,55,45,87,70,67,104,88,81,116,102,85,128,112,88,139,121,105,131,122,110,117,122,107,115,127,112,123,133,119,131,139,127,139,149,138,148,160,151,159,172,164,174,189,183,185,200,196,187,202,200,85,101,83,62,75,48,58,67,38,55,61,37,51,56,35,47,53,33,46,53,34,48,55,38,49,55,40,51,56,41,53,58,44,55,62,46,59,67,45,68,71,48,81,84,59,104,96,74,116,103,83,127,109,92,133,116,97,127,121,97,127,127,107,118,124,106,114,125,108,122,131,117,129,136,123,136,145,133,141,152,141,149,162,153,158,171,163,168,183,178,180,195,191,186,200,199}
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_inputs.h';
      define-mem-desc-line = '6';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_inputs.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__nnexamples__cifar10__parameter_8h';
  file-name = 'riscv_nnexamples_cifar10_parameter.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__parameter_8h_1a23ded220d27415ee1f6d9ac0bfdf38cb';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CONV1_IM_DIM';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
32
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_parameter.h';
      define-mem-desc-line = '1';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__parameter_8h_1aea8b1c41a63cf63eb6e7f049e84f22f7';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CONV1_IM_CH';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
3
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_parameter.h';
      define-mem-desc-line = '2';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__parameter_8h_1ad51c611a952fac7102ca15a06eabb908';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CONV1_KER_DIM';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
5
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_parameter.h';
      define-mem-desc-line = '3';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__parameter_8h_1a2bb0fafdfd2c283df4708ec53f3d90f7';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CONV1_PADDING';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_parameter.h';
      define-mem-desc-line = '4';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__parameter_8h_1a596cdcf742e142edc29a0a0e44496c7c';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CONV1_STRIDE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_parameter.h';
      define-mem-desc-line = '5';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__parameter_8h_1a3c1777ba8f883a5490beb3d79050c8dc';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CONV1_OUT_CH';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
32
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_parameter.h';
      define-mem-desc-line = '6';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__parameter_8h_1a6262e2cd96ec12681024ab4ac73d607b';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CONV1_OUT_DIM';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
32
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_parameter.h';
      define-mem-desc-line = '7';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__parameter_8h_1a5324f2e7e894dd4c9eb2f3b92dd5516c';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'POOL1_KER_DIM';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
3
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_parameter.h';
      define-mem-desc-line = '9';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__parameter_8h_1acad52b60f0a0457ffb643cef69df0c0c';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'POOL1_STRIDE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_parameter.h';
      define-mem-desc-line = '10';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__parameter_8h_1a537abddfc374d05a2513d1cc74b5721b';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'POOL1_PADDING';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_parameter.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__parameter_8h_1a13553cac577d5430e3e43508c5ab6b7b';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'POOL1_OUT_DIM';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
16
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_parameter.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__parameter_8h_1a832f71006d5c1e2bedbbcf192308d40e';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CONV2_IM_DIM';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
16
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_parameter.h';
      define-mem-desc-line = '14';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__parameter_8h_1a060a8a5766a5eecaff9294f57301c99c';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CONV2_IM_CH';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
32
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_parameter.h';
      define-mem-desc-line = '15';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__parameter_8h_1a95b397cea14323e9037604cfcd245c26';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CONV2_KER_DIM';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
5
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_parameter.h';
      define-mem-desc-line = '16';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__parameter_8h_1a39c1c3497169012a512219446613be0c';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CONV2_PADDING';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_parameter.h';
      define-mem-desc-line = '17';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__parameter_8h_1a04f3292f8c8bac6dab973fb74eab2aa1';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CONV2_STRIDE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_parameter.h';
      define-mem-desc-line = '18';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__parameter_8h_1a3be645ea438c983786878c0198ed9ae8';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CONV2_OUT_CH';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
16
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_parameter.h';
      define-mem-desc-line = '19';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__parameter_8h_1a9953ead804e13dcd90d96dda64a330a4';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CONV2_OUT_DIM';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
16
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_parameter.h';
      define-mem-desc-line = '20';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__parameter_8h_1a1b0c6e280d189658130b8b81c6991425';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'POOL2_KER_DIM';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
3
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_parameter.h';
      define-mem-desc-line = '22';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__parameter_8h_1a158e111c343e144ec2461ea94ab11ab2';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'POOL2_STRIDE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_parameter.h';
      define-mem-desc-line = '23';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__parameter_8h_1a9508f70a2798099db07a6d9b8f892126';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'POOL2_PADDING';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_parameter.h';
      define-mem-desc-line = '24';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__parameter_8h_1ada358cd9b0a9b48a2666e9bfcee90aef';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'POOL2_OUT_DIM';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
8
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_parameter.h';
      define-mem-desc-line = '25';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__parameter_8h_1a04ab2b7e8de2668e0087448664814f87';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CONV3_IM_DIM';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
8
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_parameter.h';
      define-mem-desc-line = '27';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__parameter_8h_1a1d0f9b2d219527c5070e20c50c0ced41';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CONV3_IM_CH';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
16
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_parameter.h';
      define-mem-desc-line = '28';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__parameter_8h_1a045174d68a25bfd7691303f1a063ac72';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CONV3_KER_DIM';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
5
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_parameter.h';
      define-mem-desc-line = '29';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__parameter_8h_1af7824a30efdeefbf468c24a70678131a';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CONV3_PADDING';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_parameter.h';
      define-mem-desc-line = '30';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__parameter_8h_1af6ff8c82aa2d1f58a125fe71169b7cc1';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CONV3_STRIDE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_parameter.h';
      define-mem-desc-line = '31';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__parameter_8h_1a2ab3ad342128296bb1102c3632131fd7';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CONV3_OUT_CH';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
32
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_parameter.h';
      define-mem-desc-line = '32';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__parameter_8h_1acf75167523a29737f045cc2280ce0914';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CONV3_OUT_DIM';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
8
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_parameter.h';
      define-mem-desc-line = '33';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__parameter_8h_1a32a30cfd6d89ab4fdbfad9732d71297d';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'POOL3_KER_DIM';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
3
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_parameter.h';
      define-mem-desc-line = '35';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__parameter_8h_1a74efaa8ffffc0437b54143878ac8cde7';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'POOL3_STRIDE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_parameter.h';
      define-mem-desc-line = '36';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__parameter_8h_1aac063e83339cc89308fb23a6922a5d98';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'POOL3_PADDING';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_parameter.h';
      define-mem-desc-line = '37';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__parameter_8h_1ae4a4616060ad43b06d5c1aea834a25e5';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'POOL3_OUT_DIM';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
4
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_parameter.h';
      define-mem-desc-line = '38';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__parameter_8h_1a5777b4b3cc406dc06397ba2d5bed9fda';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IP1_DIM';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
4*4*32
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_parameter.h';
      define-mem-desc-line = '40';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__parameter_8h_1a4c4ae51cf7195762dd43ea13825277be';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IP1_IM_DIM';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
4
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_parameter.h';
      define-mem-desc-line = '41';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__parameter_8h_1a3e4df285b7ca272ee897be69575ab6c5';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IP1_IM_CH';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
32
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_parameter.h';
      define-mem-desc-line = '42';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__parameter_8h_1aa7cda996b7185414b1af9762e37ac66f';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IP1_OUT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
10
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_parameter.h';
      define-mem-desc-line = '43';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_parameter.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__nnexamples__cifar10__weights_8h';
  file-name = 'riscv_nnexamples_cifar10_weights.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__weights_8h_1a257ee65177e8e51191b5204f3fda8dca';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CONV1_WT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{-9,-1,2,6,-4,6,4,-11,8,-9,-11,10,-12,5,15,11,-1,-1,33,-25,-18,47,-35,-23,25,-27,-5,0,-4,9,2,-5,0,34,-25,-21,55,-40,-33,34,-32,-16,5,-7,2,-21,16,14,-4,5,3,14,-10,-7,3,-10,-2,-8,5,8,-29,23,12,-25,15,8,-15,4,7,-16,5,8,-13,17,12,2,-4,-1,-1,-10,9,6,-4,21,11,0,12,-10,-9,-4,13,10,12,19,11,27,0,-5,11,-21,-26,-28,-7,3,-15,16,14,26,-22,-25,-8,-29,-24,-23,0,6,-13,13,25,0,-21,-18,-3,-21,-19,-13,11,14,4,13,18,-4,6,16,-1,-10,-14,-7,12,9,5,13,8,-4,9,10,-9,-4,7,-3,7,7,-12,7,3,0,-1,-7,2,-8,-5,9,-3,6,-4,7,-10,-25,7,-7,-7,10,2,14,-4,2,17,-9,5,-3,7,-10,-25,4,-10,-8,0,0,16,-7,11,25,-14,13,4,7,-12,-23,5,-16,-17,8,0,11,2,13,21,-11,9,-3,2,-9,-9,-3,-14,-11,1,-1,6,-6,6,14,-1,16,11,7,3,-14,21,6,-6,17,13,4,1,7,-3,-6,2,2,27,13,-5,18,0,-7,-6,-4,2,-24,-11,0,-18,-8,6,24,8,-14,11,-6,-8,-8,0,12,-22,-2,13,-15,-3,7,29,6,-16,10,-6,-4,-12,-7,11,-26,-14,3,-10,-8,0,16,5,-8,-5,-5,3,-15,-2,23,-17,-5,17,1,1,12,10,3,-5,-7,-18,-7,-3,-4,2,3,6,4,4,2,-7,17,20,12,-23,-27,-15,-3,3,6,5,15,6,-2,2,-5,22,22,11,-26,-30,-19,-6,-5,3,10,12,6,2,1,-3,20,14,4,-15,-26,-18,0,-9,1,14,8,6,1,-7,-9,8,11,6,-10,-13,-11,-4,-4,8,2,5,17,-9,0,11,-9,-11,21,6,13,39,-7,1,30,2,12,36,-11,-1,28,-2,-25,-6,6,-16,-6,-9,-34,-24,3,-17,-15,2,-20,-11,0,-13,-11,25,13,6,0,-15,-20,16,7,-11,7,-3,-10,-5,-2,-6,14,22,12,-16,-5,-12,7,23,7,-10,5,-2,-10,-1,-9,7,21,8,-19,-2,-13,2,21,3,-15,9,-2,-4,-2,-2,-12,2,13,-19,1,6,0,16,-1,5,8,-28,11,-2,-4,-10,-1,21,-30,-4,22,-8,14,9,11,14,-21,20,-9,-23,0,-4,19,-28,-9,31,-30,-1,12,3,14,-11,30,3,-24,3,-8,6,-22,-9,31,-29,2,26,-5,11,8,24,2,-36,24,3,-9,-6,-17,4,-8,-8,12,1,-1,5,3,-12,15,-6,-2,-1,0,15,-11,-18,6,-18,-10,6,3,6,-3,3,-12,13,-14,-1,43,-23,-3,52,-16,-11,28,-8,4,-6,5,-11,16,-6,-20,32,-28,-24,38,-31,-22,20,-16,5,-13,7,-2,5,3,-6,17,-10,-8,22,-13,-5,13,0,11,-16,14,-3,-14,6,3,-4,4,4,-2,2,-3,-9,5,2,1,-2,-10,-6,-3,-17,-2,1,-19,2,1,-14,8,11,14,3,7,1,-13,-13,2,-1,-3,-9,0,-5,-18,4,0,18,3,9,15,-10,-8,10,-12,-18,5,-3,-16,-10,0,-14,5,4,14,14,-1,10,16,-6,-2,14,-1,-12,8,2,-18,-13,-1,17,-2,2,24,-4,-3,17,8,-1,12,9,-6,-3,-2,-9,3,-2,-13,-1,-5,-17,-5,-7,-16,-7,-8,-14,-9,3,-9,-1,0,-13,-7,4,-9,-7,3,-6,-8,-2,-4,-7,5,-7,-4,1,-8,-11,10,6,-3,14,12,-1,6,10,-2,0,-12,-16,-3,-9,-19,0,1,-12,9,12,-2,1,10,-1,10,4,-8,6,3,-11,11,14,1,12,19,8,3,16,9,-7,-1,4,-11,-1,3,1,12,8,7,15,13,-5,-2,4,-7,-5,1,-8,-3,2,1,10,9,-1,8,9,-11,-9,-2,0,-1,6,-14,-13,-6,1,3,10,3,4,11,-1,-5,5,7,4,10,-14,-17,-10,-12,-13,-6,-11,-14,-6,1,-6,1,2,-1,1,-5,-7,-3,-2,-4,1,-11,-13,-9,-12,-16,-12,-2,-1,-2,-9,-5,-4,-7,-3,3,-1,-3,8,9,-2,1,8,11,13,5,14,17,1,10,17,-1,3,18,0,-6,0,-1,0,3,4,13,16,-1,8,14,-4,2,14,-16,-20,-14,-3,-3,0,13,21,25,5,11,14,-5,-2,9,1,-5,2,-6,-9,-14,-7,-4,-8,-10,-9,-13,-10,-12,-12,7,-1,-2,-5,2,-14,-5,3,-6,1,9,3,-8,3,-1,-9,2,0,-12,-4,-21,6,17,8,17,28,22,-5,6,2,-15,-8,-7,8,21,-3,2,20,-5,-1,16,-8,7,17,3,0,6,1,11,26,0,-22,-4,-33,-36,-16,-40,-2,14,1,2,10,5,1,17,-10,-16,3,-22,-22,-1,-14,-9,10,6,-7,7,7,10,-8,5,-3,-4,-1,-7,-7,-7,1,0,-2,-7,11,9,5,-2,2,12,14,16,12,7,2,0,-9,-23,-14,-8,-23,-1,-11,-14,-7,-9,-7,14,11,7,44,35,19,34,38,12,1,3,9,-6,-4,8,-32,-28,-19,-41,-45,-37,-14,-17,-17,-7,4,-3,-5,8,8,3,16,21,8,14,24,-3,-5,6,-11,-15,-18,-8,-12,-12,-6,-14,-8,9,-6,1,16,3,11,3,3,-8,-5,0,-6,-13,-13,-13,-6,-15,-15,6,-5,-4,9,16,5,1,14,5,-4,7,-1,-12,-11,-18,0,-6,-12,5,14,0,-1,13,2,2,18,6,-9,-4,-16,0,-3,-17,4,12,0,-1,13,2,0,16,6,-6,1,-9,-5,-8,-19,18,-1,-4,16,-2,-6,18,-1,-4,9,-4,1,-12,-13,-4,9,-3,-9,6,-4,-14,15,5,-2,-5,-5,-1,-20,-9,-3,16,2,-5,12,3,-7,15,7,1,-12,-7,-2,-15,-2,2,18,7,-1,10,2,-5,-1,-8,-8,-18,-15,-7,-2,7,9,-15,-15,-17,-7,-6,-7,-12,-12,-6,-17,-12,-6,9,14,12,13,7,6,3,-3,2,-6,-7,1,-7,-4,3,-11,-12,-6,12,11,6,-4,-3,-2,-15,-12,-4,-7,-4,3,-9,-9,-4,15,17,12,-3,1,2,-18,-13,-6,4,5,10,6,1,5,9,14,8,-6,1,3,-21,-15,-7,-2,-1,5,4,-1,2,4,17,14,-4,4,9,-24,-20,-11,-7,-7,3,-2,-6,1,5,9,-10,6,9,-12,12,11,-7,4,1,-15,11,9,-6,25,15,5,21,13,5,23,14,7,13,2,-3,17,10,6,-1,-10,-2,-20,-21,-14,-11,-11,-2,-11,-12,-3,-16,-15,-3,-4,-14,6,-16,-19,-1,-3,-2,13,-1,-3,12,-6,-10,8,0,-5,10,-11,-10,4,-4,-1,8,-11,-5,3,-6,-1,8,-8,-15,0,-3,0,9,4,11,14,-3,3,4,-15,-9,-6,-12,-14,-1,-18,-8,-1,-26,-12,-8,-28,-12,-9,-30,-13,-8,10,-1,-6,15,17,5,11,22,8,15,24,8,17,25,12,10,-5,-9,4,4,-5,1,10,1,2,4,-8,6,7,-7,5,-10,-6,-1,-5,-3,3,8,10,1,4,-2,-1,0,-8,2,-8,3,0,-6,9,1,-2,-8,6,1,-3,1,-10,6,5,-6,7,-8,-12,0,11,17,-4,-7,-1,-12,1,-2,9,11,2,17,-35,-32,-21,38,52,20,-27,-17,-30,4,2,17,18,10,19,-44,-34,-34,43,59,28,-25,-17,-31,6,0,16,10,4,18,-31,-27,-22,27,31,16,-10,-9,-16,3,-6,6,-2,-11,15,10,0,14,-2,-8,-8,0,-7,-7,13,0,11,2,-7,3,10,4,3,0,-2,-14,-1,-1,-16,-1,3,-6,8,-4,3,12,4,2,4,1,-17,7,10,-8,0,10,-2,-3,-15,0,10,4,8,-10,-13,-24,-7,-2,-16,0,8,-3,-6,-6,7,7,11,13,2,9,-6,-4,11,-15,2,22,0,2,-4,-2,-10,-12,-5,24,15,25,-1,-4,-2,-11,-1,-3,7,11,5,-16,-17,-23,-29,-35,-30,53,45,54,-11,-9,-12,-3,5,4,44,39,36,-45,-51,-51,-19,-28,-16,25,24,28,-15,0,-12,7,1,2,44,42,40,-36,-41,-41,5,0,3,-1,18,5,-17,-15,-15,7,8,14,11,3,4,1,-11,-8,10,-1,-2,-5,-10,-3,6,6,10,5,9,9,-6,3,0,-14,-21,-16,-40,-39,-26,0,4,16,15,20,24,-14,-7,-5,3,-5,1,-13,-12,0,-16,-11,6,4,7,20,-11,-9,-1,11,-4,7,14,7,22,-14,-14,5,-7,-6,12,-4,-9,4,18,-6,5,14,-4,12,-2,-11,6,3,-5,11,4,-10,1,2,-1,-14,4,-6,-23,26,11,-15,12,-7,-33,6,-10,-15,13,6,-20,14,0,-25,2,-14,-34,1,-4,-11,3,9,23,1,6,-5,-6,-2,-8,-7,6,17,-5,18,42,-19,10,42,-3,-1,-2,-2,1,8,4,11,29,-18,-12,7,-16,-7,2,1,-1,9,-9,-9,15,-7,-5,18,-1,-4,6,1,2,-6,-10,7,-2,1,4,-2,-2,-4,6,5,-7,4,3,-7,-2,-11,17,0,-15,-18,-24,40,25,30,-9,-20,-18,1,4,1,-32,-12,-22,54,43,41,0,-19,-9,-29,-29,-25,5,16,20,20,6,8,29,5,16,-60,-74,-65,37,39,43,-5,-2,-2,21,-7,9,-21,-38,-19,6,22,14,2,25,17,-22,4,-11,3,6,-15,-5,2,-13,-2,12,-8,0,13,5,-4,1,5,-8,19,4,-5,28,29,-18,18,19,-20,1,-2,-9,-2,-10,-30,1,8,-57,-26,-3,-47,-28,-10,4,1,3,15,4,-1,-4,-8,4,12,-3,10,48,16,25,38,1,-1,15,-7,-4,23,-2,2,31,-7,-15,23,-17,-19,6,-20,-21,-2,-1,4,4,-4,3,9,0,8,10,-6,-3,17,-2,-11,14,-2,-20,-12,-8,18,-15,-9,20,-4,-1,23,7,6,20,-2,-3,-5,-12,-3,26,-27,-15,17,-22,-10,19,-10,-3,16,-10,-3,0,-7,-1,19,-16,-6,16,-12,-5,16,-7,-5,6,-6,-4,-9,-5,-4,8,-6,-2,9,1,-1,4,7,0,-6,9,5,-13,12,6,4,8,15,10,-22,-12,-15,-34,-20,-19,-14,-2,-3,9,0,7,13,18,21,3,21,22,-31,-11,-6,-24,-5,0,8,-10,-1,-12,-20,-13,8,13,13,16,28,24,5,21,22,3,-11,-5,1,-15,-11,18,6,0,3,1,-8,-1,2,6,-1,-5,-8,8,-5,-8,22,7,-6,6,-4,-13,-4,-12,-6,-12,-9,-10,-9,-9,-11,-6,-6,-9,-6,-7,-10,-6,-9,-10,-11,-8,-8,-9,-7,-7,-5,-3,-4,-5,-4,-4,-6,-5,-3,1,4,4,-1,3,3,1,4,4,-2,1,2,-2,1,5,-3,3,6,-5,1,4,-5,1,3,-4,0,3,-3,2,6,-9,-2,2,-6,1,3,-5,1,1,-5,0,2,-5,1,4,0,-4,-1,20,6,2,20,-2,-17,7,-1,-15,-10,4,-3,-12,-1,16,-1,-4,6,23,1,-7,22,0,-13,10,2,-2,-32,-10,14,-25,-13,11,16,3,6,25,0,-13,19,-1,-10,-27,-2,11,-41,-18,8,-1,0,11,17,-3,-12,26,0,-13,-6,10,10,-22,-1,16,-16,0,17,-3,-3,7,3,-11,-8,-19,14,-3,-12,13,2,-5,1,9,4,-1,-4,10,0,2,-20,18,2,-15,11,14,0,-6,11,20,-11,-17,17,-12,-13,-27,23,10,-18,15,25,4,-14,5,30,-16,-29,26,-13,-21,-33,21,14,-20,13,32,4,-19,2,32,-19,-29,22,-11,-18,-24,19,8,-11,12,22,5,-16,-3,25,-11,-16,7,-7,-11,-6,-3,-14,8,11,2,4,5,-2,9,-1,-1,17,-4,2,-10,-1,-9,-9,3,-4,-26,-13,-19,11,11,14,16,4,12,-11,2,-1,-19,-1,-5,-32,-12,-17,19,23,23,8,0,4,-16,-4,-5,-17,1,-3,-13,4,0,17,19,15,1,-8,-7,-16,-5,-5,-2,14,11,-3,10,6,10,7,3,-2,-11,-13}
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_weights.h';
      define-mem-desc-line = '1';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__weights_8h_1a4cb0cfbbb61aa122890a656646532eeb';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CONV1_BIAS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{-49,-18,-7,-20,-12,-15,7,2,-10,-84,-72,-65,-53,-6,-87,-63,-64,-28,-28,-4,-3,-10,-52,-15,-5,-7,-31,-44,-102,-19,-5,-65}
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_weights.h';
      define-mem-desc-line = '3';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__weights_8h_1a9fd43e19e65f000a8b28d9f3505f0f6f';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CONV2_WT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{-3,-9,-16,-14,8,-17,-10,-9,-20,37,-11,-5,-21,9,-22,-10,-11,18,4,12,8,22,11,6,-14,-6,14,15,8,-15,-6,-10,-23,-32,-11,-11,34,29,-5,-14,-13,14,-31,-17,-12,8,-19,-9,11,12,-8,31,35,24,-35,7,16,-16,-6,20,3,0,9,-28,-36,-21,-12,-35,-6,-2,-10,23,10,-2,8,7,-16,26,-13,-15,-11,17,-3,16,15,-2,-23,-9,-23,-13,6,-21,7,-4,-40,-38,-24,-20,-3,-47,19,26,-3,4,21,-4,-4,9,1,24,14,-17,-26,-1,-12,38,19,13,-7,-18,49,1,1,-11,8,-7,-26,-8,-30,14,-28,-49,11,-15,-16,-8,39,1,6,-16,-23,35,4,-8,-7,-15,-15,33,14,8,-9,-2,42,27,4,15,0,-25,-13,-22,14,-10,-44,-35,-10,3,-16,14,-10,15,8,14,6,26,0,10,19,23,15,5,-8,12,-23,7,-18,14,8,19,-4,-9,4,-5,18,-31,-44,-35,9,7,-23,7,13,0,-15,-17,-2,25,-6,13,9,24,-12,26,16,35,-34,-14,19,10,-8,8,-8,16,14,-17,5,-21,4,-17,-20,6,7,43,26,-4,-2,-10,-1,30,-17,-9,-16,6,9,24,15,-21,-41,16,-4,34,11,-8,-6,-4,-39,-19,-3,-39,-21,-9,-5,-1,8,27,10,-21,-7,-3,-5,-10,-11,-11,-36,5,-14,12,6,25,-21,0,2,43,12,-13,3,-14,-36,-11,-10,-35,-37,-49,-7,-13,4,24,22,-16,-4,-16,-17,-18,-8,-13,-22,7,-30,34,6,23,-15,-22,26,3,-7,-5,-3,-20,-8,-22,21,-44,-34,3,-18,11,-27,15,15,4,25,12,-5,33,-4,-3,-5,26,-4,-8,-17,-1,-43,7,-17,13,2,-23,-23,-13,-21,-9,26,-46,-47,-5,-5,8,-34,2,28,-4,33,-23,-24,41,-15,-9,-15,5,-12,-17,6,-21,-20,-22,-6,8,-8,-22,-26,8,-1,-17,25,-28,6,-6,-35,15,-21,48,30,-5,24,-12,-48,70,-13,-12,-1,11,13,3,17,-4,-25,-9,-33,1,13,-18,-16,-15,4,-24,37,-26,11,-39,-17,8,-4,22,23,-7,21,-1,-31,44,-7,2,-37,-5,13,-16,1,2,-37,-20,-3,3,5,-14,-5,-32,-26,-2,10,16,20,-51,-9,12,4,13,9,-24,-19,13,-15,50,9,6,-16,-27,19,23,14,35,-12,-30,39,-18,2,2,-10,8,-17,29,9,-15,-12,14,-19,23,-7,-28,8,6,3,-15,-12,-26,20,-3,13,35,23,-25,-59,-32,10,36,-40,12,8,-8,15,-22,-20,1,-2,-54,-32,-14,-16,10,-30,-54,-3,0,-2,-10,-22,-10,5,-15,-5,26,23,-40,-60,-6,-12,9,-28,-21,4,-29,11,4,-28,8,4,-26,-17,-25,-44,30,-4,-24,18,4,13,-5,-23,15,22,-7,3,33,48,-28,-22,-20,-22,-3,-58,-2,32,5,22,2,-10,-20,-5,-23,15,-36,-28,42,-1,-41,12,1,18,6,-35,-4,14,1,-27,44,35,-36,-21,3,-21,-11,-50,-7,14,7,21,34,-24,1,-2,-12,3,-27,-8,54,1,-10,16,-24,-13,-27,-35,-10,7,-12,-5,21,-19,6,12,4,9,-42,-6,-16,7,-20,4,35,-9,63,-7,7,35,16,-10,49,13,-26,55,-28,17,-35,16,-40,17,4,19,32,-2,-20,-51,-21,5,38,-8,26,-2,-17,25,-6,0,21,-11,-20,8,-1,0,27,8,-38,14,-28,11,-44,3,-32,-19,-8,-25,15,-9,-16,-47,1,7,-10,-8,7,-4,1,20,-9,-34,16,-9,-26,22,-3,-15,49,11,5,21,-27,28,-31,15,54,10,-16,-21,-1,8,-2,-10,19,3,-1,-24,4,15,10,24,17,7,-13,-25,-27,26,-12,-3,9,-2,-5,34,-12,15,-23,-16,26,-2,-10,-1,-11,6,23,-21,15,6,20,-19,17,-2,-20,11,34,-8,16,-19,-3,38,-2,9,28,-9,11,21,-8,-22,-48,-15,-15,-13,-7,24,-7,-3,35,-9,18,-8,13,-1,27,-21,6,-10,36,41,32,11,12,-3,22,-10,13,-2,-16,7,-16,25,31,14,-11,6,7,6,7,-5,35,-22,3,37,18,54,-9,2,-17,-5,-6,2,-7,-1,2,21,8,5,14,8,-48,-18,-3,-3,7,-17,-11,7,23,-6,-21,-25,22,-26,21,-19,13,77,7,-29,-2,-12,1,23,-18,-4,-18,34,-1,2,19,53,6,3,9,5,4,-7,36,5,-6,-11,-18,-5,49,-15,9,15,-5,17,2,-14,12,8,42,59,-40,39,-9,7,-13,-3,-22,47,-9,-7,8,32,2,-27,0,-33,14,-10,-27,0,39,-15,23,-3,0,10,22,-7,-23,5,17,1,17,26,26,37,15,3,18,21,-20,3,-4,23,29,-7,-21,-32,34,-6,-2,42,22,-7,34,11,2,30,34,-4,-14,-7,10,14,4,6,-9,-9,37,-39,0,2,-14,21,-45,-5,28,-2,-6,8,0,16,37,-8,3,-25,30,57,15,-16,-28,-8,-17,4,-2,-45,1,-8,10,-18,1,19,-17,-11,-39,3,-27,-6,14,-19,-14,12,16,-25,-24,-41,-26,-11,57,20,-12,16,-3,-17,-1,-9,-3,-1,-5,-38,43,4,16,1,-14,38,-3,17,-5,-2,16,-16,17,26,-2,4,-17,-16,0,-10,47,25,9,22,13,-15,-16,14,13,-1,-17,-5,32,-13,5,5,-33,4,-34,9,12,10,18,-1,-27,-21,-1,1,7,11,-21,-13,4,6,12,46,24,-25,-4,-1,9,-25,18,-1,43,12,17,-15,0,-11,-22,-2,-3,-4,17,-30,3,-22,7,-12,22,34,-48,-22,-8,2,2,-6,18,-14,15,-5,16,-2,1,14,-22,-14,4,-42,-19,-30,11,16,10,-28,10,22,-7,5,-30,-14,46,29,-53,1,-37,29,2,-74,12,13,20,0,21,-40,-2,20,-10,-60,-16,-38,-4,-24,-13,0,-6,-12,-14,-1,-16,5,-20,-42,4,30,-110,-3,-6,5,-6,-85,-1,6,8,-12,-2,-49,1,-14,24,-17,11,-50,21,18,25,38,-22,-3,-16,-1,-15,24,-19,3,-16,39,-52,3,-24,3,27,-64,37,18,26,8,-4,-43,2,2,-14,-70,-15,-58,-6,-23,2,2,-8,-2,-4,15,-18,3,-27,-20,-21,3,-115,3,-33,31,14,-50,28,-13,20,8,-55,-51,34,19,-16,-42,17,-62,-9,-24,11,5,5,22,1,12,34,16,-19,-19,23,18,-103,-13,-34,29,12,-57,-2,3,17,0,-17,-25,8,9,-22,-36,-20,-34,15,-9,12,32,31,-18,17,-3,-23,-8,-8,-1,31,15,-37,-3,-29,24,1,-34,24,28,-7,11,21,-18,-21,18,-54,-68,-35,-63,-1,-19,-1,-16,8,-19,0,-19,-18,-2,-17,-39,16,3,-68,-21,-75,-17,-3,-80,-12,24,-46,4,-7,-45,-6,5,-26,4,-1,-44,39,20,18,4,-8,-2,12,-5,-16,12,-5,-17,15,6,-17,1,-75,-25,3,-51,12,46,24,19,-3,-31,1,23,-11,-58,-23,-88,8,-5,-24,-6,18,8,7,1,-27,21,-2,-32,11,-18,-88,2,-74,-6,-15,-52,-7,24,6,11,-36,-48,19,19,41,-13,3,-67,6,20,-13,31,33,5,-7,-4,4,20,11,-2,23,17,-43,-6,-49,-12,-15,24,19,34,42,8,-9,-27,-5,20,39,12,-17,-18,20,6,3,31,-11,-5,-26,26,16,-7,-5,-2,23,29,47,11,28,13,8,35,21,-7,21,3,50,1,-23,2,3,-10,-8,-36,-9,-25,-4,28,-23,-25,-17,-11,-1,2,-11,-2,-7,32,-5,1,-16,4,8,-12,-12,-5,3,1,-4,-19,-6,-28,5,17,-1,-2,19,9,32,17,-17,-18,13,-17,10,8,-5,1,-23,8,27,34,-42,-25,-8,-4,16,10,18,23,9,29,-5,3,6,-46,-26,-50,-37,-13,6,-27,6,1,-8,15,0,-7,5,-10,-18,4,-9,28,-14,-30,6,36,19,1,6,15,-35,-17,10,26,21,-1,15,6,-25,39,4,4,10,22,-26,23,-1,-1,13,16,9,-9,-2,21,7,2,22,56,25,28,36,19,4,26,9,-7,3,15,-6,-21,5,-14,28,-4,-44,8,-16,16,8,14,-18,25,-21,-5,13,-12,5,-2,4,-5,-13,27,-11,13,-13,-10,11,4,20,50,-10,11,12,1,42,-7,-5,-12,14,4,-4,3,-28,24,-14,14,0,-14,9,-1,-22,2,13,15,-17,21,3,-16,9,31,43,-36,12,8,-4,15,40,-6,29,12,14,-4,-5,-2,-37,38,-14,-5,-1,-23,-5,12,-21,-8,35,15,-4,21,-13,20,22,12,-22,-26,-13,-7,7,-26,17,-26,-11,3,-15,8,17,0,-15,-5,-16,4,-31,-3,-68,0,-22,-38,16,-3,2,21,-26,-45,10,15,-3,-25,-25,30,20,-20,15,22,-13,-5,10,-6,20,4,5,1,-12,-13,-12,-4,-2,19,-37,-17,0,17,11,15,-3,3,29,-7,-22,19,9,-11,5,19,24,-17,-51,23,-31,-19,22,4,-17,14,-30,-22,-20,-15,14,22,-23,5,-17,25,11,11,-2,-17,-6,3,4,32,14,3,13,19,12,-33,0,31,-13,0,3,-20,-30,0,16,11,-19,-33,-18,6,8,25,-2,13,-1,5,-18,-18,10,27,44,-11,22,2,-22,26,11,4,38,22,-9,11,-7,-31,-16,14,46,-2,-38,-24,-19,-3,30,24,59,-15,-20,-2,-29,43,2,0,-31,-21,-50,-27,-21,2,16,-5,-4,25,-12,-5,-15,-10,-10,-14,6,13,-55,-18,13,17,8,-43,31,-28,0,0,5,-37,-8,25,-25,-22,-61,-10,-14,25,18,38,-17,9,12,9,24,-21,-15,0,1,4,-15,-9,-18,34,-21,-8,14,-15,16,-18,25,-1,15,-15,-16,-14,5,18,-37,24,23,-17,-20,9,-22,-15,33,2,13,18,-7,-32,-2,-15,-14,3,-26,-3,1,10,-8,-24,12,37,-28,-12,52,-19,11,-6,-2,18,2,-6,14,0,-11,-4,-27,-10,18,7,33,10,-13,3,-22,7,-13,35,32,-5,-29,-18,-18,54,-16,-13,66,11,26,-9,4,14,-40,1,36,-16,14,-20,-58,-20,9,-17,26,2,-25,-10,-16,-16,14,24,74,-26,-11,-9,-27,99,13,-24,-29,-1,2,-4,-18,8,-11,21,-2,-3,6,-13,-6,18,-13,-14,-1,25,-49,0,12,-10,1,0,23,-19,-5,-17,-7,20,-13,-10,1,43,-12,-5,0,36,9,44,24,-1,29,10,30,-6,-3,-12,33,9,-14,9,30,17,-38,-12,23,-29,22,-33,5,12,-1,-27,17,-9,-9,5,-5,2,12,-5,14,9,-32,10,33,15,36,-2,23,-5,-19,-8,-18,-3,24,-14,7,25,3,-15,33,27,6,-32,13,13,7,-14,-2,-25,-40,4,7,-5,-17,-11,-30,27,17,21,18,-18,-12,4,-20,-4,10,-40,0,0,-53,-10,26,58,-13,-42,5,34,23,20,-3,-58,-98,-17,25,-17,1,-30,-74,-5,19,4,-19,-48,12,15,-22,-17,1,23,-43,-13,-32,-7,10,74,-7,-53,15,22,12,10,8,-87,-83,-1,9,-23,2,-40,-21,5,-12,19,-31,-12,-7,24,-20,-42,-23,-13,-65,-21,2,-10,-22,1,-34,-24,9,34,-10,-9,24,-70,-60,25,14,-7,7,-21,14,0,12,-25,7,-16,1,25,20,4,-18,-24,-51,-30,2,-14,6,6,-12,5,15,-9,-12,-26,31,-2,2,-7,-23,14,-30,25,-10,16,56,-6,2,9,10,-5,24,7,-16,20,41,18,-5,-8,9,1,10,-15,7,0,13,-32,-8,-23,-37,-7,-19,-7,-9,-3,-30,4,32,14,-12,-17,10,-2,2,11,-35,-4,7,2,-37,-5,4,30,-14,-52,25,41,1,11,-41,-48,-70,6,1,-31,-24,-35,-22,-22,0,8,-20,-24,22,25,23,-6,-15,33,-45,-11,-17,-1,7,27,10,-60,26,25,0,27,-34,-63,-63,4,-10,-17,-34,-35,6,-5,-14,20,7,-20,6,37,9,-25,-16,28,-32,-28,-15,-5,3,4,-48,-30,12,8,3,8,-24,-58,-65,1,-4,-9,-36,-8,3,2,67,-35,32,-13,10,36,38,6,-28,50,-25,-44,-9,-12,0,-11,-35,28,18,-7,-13,7,28,18,-13,6,6,7,0,-26,7,59,18,-2,22,6,-2,-80,33,6,-11,4,-5,-9,33,-2,-16,-20,-19,16,12,1,-36,-6,22,45,-3,-28,32,17,-7,-55,6,1,-5,12,-11,-15,21,-37,23,-14,-5,-4,2,-8,8,4,36,37,-53,-16,3,1,-11,-1,48,13,25,-22,23,0,-23,-49,17,-22,16,4,-8,1,4,-14,-23,4,16,-26,18,-21,12,1,7,-6,24,-6,30,-44,-25,-50,-11,-35,22,-37,-21,-6,8,-8,16,14,13,-9,-9,23,-50,-20,-55,7,1,-50,16,19,12,3,-16,-36,5,18,-4,7,15,1,17,1,17,-33,-16,-11,16,1,-16,20,3,-12,-23,11,-2,-17,33,13,3,-15,18,15,48,-6,-12,-27,10,-35,33,6,-7,5,10,14,-26,3,-15,23,-10,-27,-2,22,20,20,6,21,46,-44,8,-10,-14,38,-26,-34,22,-35,-14,-6,-33,-18,19,35,-1,42,14,46,-19,-1,22,10,-25,-37,16,-21,-2,23,-18,33,39,-9,58,-29,23,61,50,-24,11,-25,14,30,-47,-37,-6,-3,-19,18,9,2,10,-5,-20,5,-20,-18,17,-15,3,-3,0,27,23,25,13,1,34,8,40,-19,-15,-11,26,-15,-24,-15,-6,-54,-33,-41,-3,-36,-2,-25,-30,0,-3,-7,-1,-16,5,-7,17,-3,-49,-5,-65,14,-8,-49,14,25,-14,-4,-2,-52,-2,-4,-37,-22,14,-6,11,-21,14,-8,-21,6,3,-25,-1,-12,26,-5,12,-22,-9,5,-45,5,-7,-46,19,26,14,-17,-9,-48,3,-51,33,25,-8,52,-32,21,2,5,0,5,-4,-8,-7,-17,-14,-13,-14,29,28,-25,39,8,-16,30,11,-11,-23,6,8,18,5,-17,22,25,3,47,18,30,18,-8,-12,-6,-28,1,8,-22,-7,-22,6,33,9,22,48,-17,30,74,9,-20,-38,5,3,46,-2,-14,-24,-25,-7,8,-2,-13,31,-22,-33,-3,-12,-3,-32,-10,9,-17,6,38,8,28,-7,26,8,-10,-9,-28,-43,21,28,-4,-22,18,-26,-58,-29,-35,-7,-36,-4,-21,-17,-12,-2,12,25,-10,-1,-8,11,19,-46,17,-60,10,-29,-67,-33,16,-20,19,-14,-56,-6,28,-43,-18,11,-19,7,-20,-3,-16,-33,0,-9,22,36,-4,25,-2,11,27,-24,27,-43,-14,-27,-31,-3,11,-8,8,-16,-47,-2,-26,-17,-4,-22,-9,-17,16,-3,2,5,-15,-19,3,-24,-34,-21,-30,-28,25,-17,-35,-14,2,11,-3,22,7,-8,15,-38,-22,14,-7,-12,-8,-12,6,15,38,14,26,-5,-16,-15,14,-2,-39,-12,-25,-10,13,-48,12,-17,-1,3,22,-18,5,5,12,-34,0,-2,0,-21,-33,15,-6,-29,-6,14,2,-7,-13,-6,0,5,-17,-6,4,1,11,-11,20,-28,25,7,-36,3,5,-4,14,2,-27,-9,35,-16,-52,-24,-25,-16,-42,-20,-5,6,-10,-14,15,-2,-12,-3,0,-7,7,-31,-3,-47,13,-18,-51,-3,31,-15,13,-13,-49,1,38,-20,-20,-22,-22,14,-36,-2,-5,-6,5,-40,25,16,-9,1,6,1,18,-33,22,-29,-8,-19,-38,6,18,-4,11,-9,-57,13,-5,10,26,10,-5,-48,-13,-11,26,23,-34,-16,7,-2,-28,-22,17,13,-16,36,-10,13,-2,-22,48,29,10,-24,-25,-31,-26,-7,-11,6,11,35,28,-15,-1,19,48,17,-9,-21,31,3,-40,-19,11,11,-4,9,20,-21,-8,-5,23,16,6,4,-16,-22,-4,-2,-14,-30,-46,24,11,-23,-29,11,36,7,4,-9,-4,13,-29,-14,6,8,24,27,1,-9,17,10,-12,25,9,-3,-4,6,-26,16,15,-3,-41,-15,-11,-21,-32,-5,-2,19,1,-6,3,16,-16,-13,-4,9,6,-17,-3,-40,-4,10,-25,-27,37,-9,8,13,-53,3,18,-22,-9,-42,-26,-11,-28,21,-16,6,2,-26,14,5,-14,-18,-8,-6,7,-35,18,-21,-15,13,-30,-3,23,2,4,-3,-56,26,-29,-17,-2,13,10,-55,-25,-44,-63,21,9,5,24,-32,-46,-23,-24,-24,-7,-41,2,-26,8,-23,6,17,-8,17,7,15,14,30,-9,-27,-15,43,31,7,-7,-30,-1,3,1,-14,-6,-12,-28,-26,5,4,1,20,25,-41,5,-5,-21,2,-12,8,7,-21,38,10,-1,-17,-6,47,22,-2,16,-27,14,-36,10,-13,-6,10,-2,-27,24,42,-9,20,2,-23,14,7,-16,31,-11,0,15,4,46,26,19,-10,-15,21,-21,-7,17,-32,1,8,-1,-29,2,-14,-30,-10,28,25,-10,8,-24,-34,5,3,-15,11,-25,11,10,9,-13,-1,1,-9,5,10,13,26,58,-14,23,-13,-13,-13,-26,-26,-6,-30,24,-12,-1,23,-29,4,7,-12,23,14,-20,41,5,27,-12,15,-10,6,0,-2,16,-24,-21,3,-21,9,-14,-38,9,-11,-3,-3,-12,0,23,0,-4,4,20,15,18,15,-26,21,3,-10,-8,40,19,-23,-1,10,21,7,4,-18,6,-2,-27,-32,-19,-9,-16,8,2,-32,16,34,20,5,17,10,14,-18,-40,15,-5,-15,45,-11,25,3,26,27,41,21,6,-22,23,-32,0,31,-22,2,15,-16,1,-30,-6,23,13,-2,28,18,17,19,-15,8,4,-9,64,48,64,-10,-16,13,-5,-7,-12,-10,-6,5,-9,20,-32,-32,15,-25,26,-15,-18,14,-13,-26,24,-5,25,4,-14,18,3,9,26,17,38,19,-25,38,-17,-23,-2,0,-15,-18,-2,-20,-14,-6,-11,-27,20,-11,-6,11,-41,-21,-4,-8,25,-2,-17,-42,-13,-1,-15,7,5,19,8,13,39,40,-10,17,-33,2,-10,-10,0,1,22,-16,31,52,1,-7,-9,41,2,19,5,-23,-8,-19,17,5,15,36,55,9,2,-4,12,25,14,-3,-14,14,-16,-8,1,48,4,7,7,18,12,4,19,23,-51,17,18,15,-25,30,9,-10,44,-14,60,-2,5,3,22,43,16,9,-13,15,32,20,-24,11,3,-2,-27,8,6,-18,20,-4,-23,-1,27,47,3,20,6,-15,53,50,75,-9,15,-14,0,31,2,10,-13,23,15,18,-22,-19,4,9,8,18,-14,9,-1,-28,-3,-19,-13,20,23,32,2,-7,-12,20,10,32,-10,48,-8,-6,6,18,-34,17,22,16,23,-17,-20,12,7,18,-12,9,-45,-11,-30,2,13,2,22,10,0,-29,-31,28,-7,-13,-25,9,9,53,13,17,-38,17,-26,-17,-26,23,27,-9,14,12,-23,-28,-3,24,-9,-20,-11,0,2,17,-2,-13,7,31,25,-9,-42,-37,-27,7,14,17,-27,28,-27,-13,-2,7,-2,-20,3,-19,-3,-17,6,-62,-44,-8,-40,14,-12,-3,-9,-20,-1,-36,58,-3,-29,-17,-33,4,-25,23,-36,37,-1,18,10,18,-3,-7,-22,-11,-27,-50,15,-60,-10,25,-37,17,8,4,2,-29,-9,-10,57,13,-21,-12,-40,17,-13,11,-49,2,-9,-1,6,-6,-6,8,6,14,-33,-28,-14,-61,9,11,-18,18,36,-25,-1,-28,-32,-28,-10,42,-13,36,-8,26,-14,33,-62,-24,-12,-22,8,3,-22,13,11,19,-55,15,-30,-75,-11,7,43,-17,34,16,-10,-21,14,8,-8,10,-14,-12,-24,60,-1,5,11,-7,-4,17,16,46,30,0,-15,49,32,-9,-27,5,-21,17,-9,19,-23,28,-5,35,-5,-1,24,-27,-53,10,-21,41,13,8,-16,-3,-22,31,9,25,34,-10,-8,36,15,12,-9,-29,-20,9,-33,14,-31,-9,0,-19,-8,-9,30,15,-16,-10,-34,21,-51,19,-48,22,-1,23,20,5,24,-6,12,29,2,-24,4,-50,-26,0,-9,34,-15,1,-2,-12,-45,-15,26,20,24,-6,-44,34,-4,14,-71,28,17,10,17,6,2,6,24,12,5,-12,-25,-39,-4,21,-1,10,19,-11,-4,-7,-21,-6,-15,25,26,34,32,57,3,17,-54,6,11,13,4,-10,-12,24,19,-5,-5,39,-37,-59,4,35,-10,-21,34,-11,-7,-48,45,17,-17,27,10,-19,-17,-10,-19,-11,-1,-37,21,-24,-15,6,4,32,-14,-6,-14,4,-18,10,27,5,-18,14,22,6,-13,-12,-41,-1,-27,18,33,-25,10,10,-1,3,-16,-24,12,-3,-7,-7,-6,11,-27,-22,-8,-4,-3,-8,-5,13,-10,18,-9,-2,-20,11,-11,19,-6,20,54,-10,13,32,1,-21,-10,-8,17,-26,-4,-12,35,7,-14,-23,-10,11,-13,1,-8,-15,12,-3,-7,-3,-3,24,21,14,9,-21,12,2,37,-31,-3,3,4,2,-7,-20,23,-16,49,2,-9,-8,-16,3,-26,14,-14,-21,-18,-17,-17,26,8,14,0,-4,30,-8,22,13,-2,-24,-16,-6,3,10,-9,-23,-3,-23,27,3,-19,-6,-41,-9,-4,-13,-17,-25,-40,-45,-16,-1,17,6,-22,15,-25,37,12,-3,-5,25,-11,-1,23,0,42,-8,0,4,-1,43,-6,46,16,-21,-1,-7,17,8,21,39,-5,0,0,20,-42,10,-26,13,20,-19,-13,22,9,20,6,3,13,-1,-14,-20,-7,10,-13,19,9,-18,2,-5,-27,-3,-15,14,1,10,-20,37,-31,18,-3,6,58,7,-12,19,6,-2,-26,27,18,1,-7,-21,6,32,-5,-13,-8,4,-15,-1,-32,8,27,-41,11,-9,-18,32,-11,-37,6,-8,9,36,11,-30,4,-1,-4,-3,-21,-13,-6,-7,-20,-17,3,-13,2,-11,-18,-16,2,32,-4,-38,-2,-11,-1,-5,-8,-24,14,0,-9,21,-9,-13,-8,8,5,11,-50,-21,-19,-19,-25,-36,-11,-16,-1,-19,5,-40,-8,3,-9,-51,-8,-24,8,-26,-13,3,-13,36,-14,18,-5,36,-52,1,45,15,0,-30,32,-21,24,13,-2,10,12,-52,19,-40,6,-51,-46,44,-47,-19,33,23,-37,7,-11,34,30,11,-17,19,-35,11,6,31,-14,-23,17,-21,10,16,12,-16,-28,-24,17,-32,-11,-30,-12,22,-28,-16,17,28,-17,7,3,-11,108,32,1,18,3,-6,-43,30,-1,7,0,-10,-22,33,6,2,-24,-7,-10,-44,-18,37,21,-26,4,12,7,7,-31,-17,-3,17,34,27,-17,-21,3,-2,-35,1,4,13,11,7,-49,-11,5,13,12,-17,-30,-34,8,22,19,-31,6,12,-10,-29,14,3,-6,15,22,33,-15,-14,0,14,-15,-6,-12,15,-39,36,-52,-35,0,-13,47,-38,3,-26,-29,47,28,4,0,8,-24,-17,9,9,-3,17,-28,10,-29,-11,-49,13,24,22,-16,-10,33,-11,0,-8,-28,-17,16,-51,18,-45,-18,-7,-34,16,-30,-25,47,-26,-27,-2,-10,24,18,41,-12,-38,-27,10,-20,33,-1,-23,29,-22,-6,-1,5,-9,-24,-25,0,-44,-20,29,42,1,-18,-29,28,-12,-9,-11,-6,-17,49,45,2,-23,25,-18,-41,-2,14,0,0,-12,-31,21,11,-11,-42,-26,-36,-36,-3,46,15,-8,-8,-24,18,-26,-5,-20,-5,-27,23,27,-17,-21,16,-20,-25,-26,28,-3,13,-9,-37,-10,8,6,-11,-10,-41,5,15,36,38,-21,18,-3,-21,-22,19,48,4,0,-4,7,-9,17,25,4,-27,-18,28,12,-22,49,-30,-19,15,6,7,-25,13,0,0,1,18,6,35,-10,-40,8,26,42,-21,-8,-18,50,-23,1,-37,35,14,6,-29,13,22,-30,8,-13,-5,-8,2,-9,-9,-14,-23,36,-4,25,-36,-15,21,-34,-30,-11,-28,7,9,78,-15,-22,-7,3,-9,-1,-6,-8,16,-15,3,-7,51,4,0,-13,-34,-35,5,32,24,-7,-21,-16,6,-9,-5,-22,-4,4,6,42,-9,-30,29,-39,-9,-7,14,-23,-42,-6,-20,-15,25,-5,-19,-19,-33,-21,-32,8,0,8,-13,-10,5,-25,26,-51,19,8,-5,-12,-14,-25,26,-33,-12,-33,24,-35,-29,8,-22,-34,-9,0,-16,-22,-25,1,33,0,34,16,4,-10,-2,1,32,33,23,-16,14,32,0,25,42,18,0,-14,32,4,-10,33,-14,-15,12,-14,25,10,30,-6,35,11,36,27,17,4,-8,3,40,44,14,-3,-8,36,-16,-3,-2,-11,11,36,-5,2,7,-39,-27,-28,8,-26,-14,4,-8,-22,-26,-6,-21,15,-2,0,-5,49,-2,31,10,-50,-4,-2,24,9,2,6,-11,12,-12,-16,22,-35,-16,-26,22,-20,-20,25,13,-5,25,-20,-45,-25,13,17,-15,33,-11,20,7,-59,5,-17,17,6,-11,1,-8,2,-25,-10,26,-27,-7,-14,-5,-10,-15,-11,-2,-41,8,-13,-55,-38,28,44,-23,12,-28,-8,13,-14,-27,6,-19,3,-14,-9,-18,28,-26,-16,23,-24,-31,-9,-10,-6,-16,-26,4,-45,10,-12,-38,-31,19,4,-26,-1,-9,5,-8,16,-4,37,20,21,10,-7,-14,27,-27,-32,37,-30,0,23,-24,-16,2,15,9,16,1,-17,-16,-4,4,26,-29,13,23,32,16,-5,-10,27,-5,-17,-12,-2,22,16,-3,21,30,1,0,-18,4,-5,-23,-13,8,-22,-15,-35,8,-25,5,8,7,27,-28,9,22,-16,-34,25,3,11,7,0,30,25,7,1,27,2,-17,6,1,10,-12,-20,18,-40,12,-21,-37,-20,12,8,1,21,-20,-12,-1,-47,-59,-23,-6,32,-2,-11,15,4,-15,0,-16,-11,4,6,-9,11,-7,-5,4,-95,10,4,-77,-6,4,16,-8,-15,-50,-28,1,-6,-61,-17,-40,8,-13,-14,-18,12,-2,-4,-28,-13,-16,-6,-12,-6,4,-28,0,-91,4,18,-65,-13,6,-8,-5,-2,-43,-10,0,-2,-20,28,6,11,-11,3,-13,-10,-8,1,-5,-2,11,69,-13,-1,10,6,9,-23,10,8,-23,13,4,-1,-1,17,9,29,8,38,5,-20,2,-18,-32,-12,6,-7,6,3,-31,-27,1,-14,10,-46,3,-6,-6,34,6,-2,2,3,-16,6,7,13,11,30,-1,-5,7,2,32,20,-10,-15,14,-11,28,-30,0,23,-9,-2,11,1,11,-1,16,24,0,-22,14,-7,-18,-8,13,4,47,8,1,-11,-14,-29,-21,34,2,-28,7,-37,40,2,6,58,-9,8,-31,11,26,-37,-2,-24,-7,7,-31,31,-13,-10,7,-21,-19,-17,-14,2,-24,-44,-28,0,-17,-32,0,11,33,-2,-32,24,-13,-2,-16,9,5,-8,-7,-55,-12,18,-10,33,-13,-24,13,0,-21,-11,21,39,10,16,10,1,28,-11,-6,0,0,2,-16,-26,20,60,-18,13,23,8,-11,3,-2,-4,48,29,-9,-12,14,6,36,-17,-11,2,-3,-1,-11,-26,-7,18,-23,-7,9,-21,11,-28,36,16,-3,7,-13,-1,-19,-20,-9,36,34,-18,-21,-7,-5,-4,28,14,-17,24,-9,21,13,-6,19,34,23,19,8,-44,9,23,8,-4,6,33,9,52,8,13,14,35,26,-31,-25,0,19,-8,33,-19,-13,-7,-9,13,23,50,26,42,11,14,46,8,18,37,0,-6,9,65,42,10,31,-24,-10,49,-7,25,1,46,10,1,-11,-9,-7,13,-35,-30,2,39,9,27,25,18,21,5,-18,-10,35,-27,-15,60,39,17,6,11,-36,34,-43,24,4,1,18,2,-16,15,33,15,40,16,33,23,37,18,28,7,7,5,8,-21,37,20,2,22,19,62,0,40,-22,1,15,-3,-14,-14,11,3,36,-18,-8,7,-57,9,36,-11,-22,-17,-16,38,-19,-10,5,-32,16,-1,3,-13,-53,36,-19,-5,0,8,54,-13,-34,-38,8,-34,-7,40,-30,-36,-19,-23,7,13,10,-2,-27,25,4,5,-34,17,-4,-14,5,-13,-4,44,-9,-22,4,26,15,-20,-23,-30,10,-22,11,-11,-23,-10,-13,3,50,41,-1,8,-1,-4,28,19,0,21,-14,10,44,-6,12,33,26,-34,-13,36,36,9,-2,-3,-4,3,-27,-27,-19,9,-30,-41,-9,29,-5,-7,10,-5,6,15,-32,18,-14,-2,-3,16,-13,1,5,-29,9,28,-24,2,14,-26,1,16,-62,6,-15,-5,7,-56,24,40,25,16,2,-20,-25,4,-7,1,-8,4,-16,17,-20,44,1,64,-35,2,-3,5,0,-26,-9,-12,1,-2,18,-15,8,9,-24,15,11,10,-27,3,14,-9,8,-25,-16,4,6,-4,23,-19,-11,-6,11,-18,-6,16,36,-15,-10,-3,11,-3,5,1,-2,3,-9,32,18,21,-6,11,-6,0,17,-27,30,-21,5,-11,-7,2,-3,11,-22,-2,27,-13,28,37,-17,-20,-10,2,9,0,-17,17,-4,3,-25,1,-13,3,-8,4,20,-53,16,17,-7,1,-9,17,-33,7,23,-9,10,-18,11,5,-10,-2,2,0,15,13,11,5,0,-22,-23,-17,-9,-8,-1,-10,-11,-32,-8,25,-4,10,-23,-5,-9,-5,27,-6,28,7,-2,-40,-8,-10,9,-1,-4,6,44,20,-10,-20,-4,7,9,39,30,-17,-16,-15,-11,27,-17,0,27,-17,-11,-22,7,10,21,14,-1,10,10,7,34,-15,-11,-5,0,-10,2,-26,8,14,-16,3,1,25,11,-25,-9,16,5,-20,31,16,9,29,1,14,-5,-46,25,-33,-2,-18,-1,-6,1,-18,-13,32,3,-9,3,51,-18,4,-8,1,-5,-46,-13,-8,21,-9,-2,30,-1,-44,-22,-5,-40,-19,8,-16,-3,6,-10,29,-1,2,-31,15,-2,-25,-26,6,-31,-11,6,-14,-1,-37,-4,25,-10,-9,-27,11,-18,-21,15,6,45,4,-6,-38,-12,-16,7,-19,-15,31,-22,-12,13,-30,-10,-28,-6,-12,5,-36,-45,-12,6,28,-42,-8,-11,11,3,-24,5,19,99,29,-22,-13,-8,2,-6,-24,-3,15,17,-9,-2,-2,-12,15,16,19,-7,-15,-14,-18,11,21,-31,-10,12,-6,17,28,4,-14,34,4,-8,5,-3,-5,-12,-11,-13,-25,5,-9,16,-7,-2,17,2,21,14,27,-12,38,-40,17,-16,-1,12,9,-4,57,21,-6,-30,-5,27,-6,1,3,11,-24,-33,22,-33,-2,20,-10,-2,46,5,2,33,22,-1,-43,-21,-20,-11,7,-12,9,-1,-19,45,26,-1,5,11,-15,-6,-9,22,-10,-15,52,34,12,16,-7,-47,-34,-6,-10,4,-4,-22,-60,14,-5,-27,10,-31,6,-7,-28,32,26,127,55,-12,-9,-17,-13,30,-35,-13,70,47,9,-1,0,-22,-48,-9,18,-11,-14,-51,-14,19,9,-36,2,-2,8,6,-55,-1,-2,110,17,-28,-30,-14,-6,-8,-13,-1,16,11,25,23,9,-15,4,4,24,2,22,-22,5,10,29,-1,-7,-8,17,14,-16,2,-4,20,-7,9,-9,5,-5,-13,-11,-22,-11,-20,-6,6,-19,-19,-48,10,34,4,11,13,35,-34,16,4,-15,22,-23,-26,65,5,-6,24,-19,7,-26,17,-18,33,-8,-26,18,13,-16,-6,1,-29,-49,0,12,8,-22,-26,-5,2,-8,-28,4,-2,-2,-19,1,6,0,25,25,-8,-33,-3,-18,-2,-29,-35,72,53,47,-17,-8,-35,-68,-8,-15,-31,-21,-32,-38,3,-14,-12,4,-29,-28,4,-56,24,7,95,19,-36,-57,3,-27,8,-8,-20,68,-4,59,-25,-19,-22,-16,-26,-24,-20,13,-13,-14,1,-4,9,-33,-27,-26,8,-94,-29,-30,23,11,-7,-45,5,-27,-2,-13,6,26,-16,12,-9,-20,-6,37,-60,20,6,7,9,-39,-16,-4,2,9,-21,-5,-12,-52,-31,-37,-18,2,20,-31,0,-22,-15,-23,-50,33,25,41,0,-32,-33,-93,-11,1,-33,0,-34,-12,3,6,2,14,-21,-42,-41,9,-1,33,21,19,22,-24,11,-8,3,10,-33,-7,34,35,4,17,-13,-58,-16,-23,9,0,-30,4,17,15,5,-27,-20,-4,0,-7,-24,37,18,-12,7,-63,9,6,-1,-46,-41,-5,35,-3,14,2,-5,14,-11,-4,21,28,26,12,-2,4,17,-38,-23,-12,-11,19,-18,-1,-9,-11,-23,2,0,3,-35,1,-33,-2,-9,15,-46,15,2,48,12,6,5,19,32,19,-11,-19,25,4,-21,-14,9,17,-27,-5,-11,24,-4,4,-16,11,2,24,-4,24,-3,3,-9,3,25,61,12,33,42,-13,8,-14,-6,-7,10,11,9,-20,-9,-18,-4,-8,-8,54,23,12,-8,-16,-23,-6,-32,31,4,-30,-38,-11,-38,3,-21,-16,6,24,0,0,20,2,-17,-13,-52,0,2,2,-14,-19,-6,-29,0,-13,-5,-16,29,16,-11,-10,-9,-16,-40,-11,-16,17,0,-7,19,-15,1,17,14,-23,-35,-4,-56,-6,9,60,-18,-26,-32,-27,-14,10,-4,-6,2,1,-4,-31,19,-7,-2,-6,7,28,57,19,16,-7,22,31,11,-15,21,-21,3,9,28,76,-40,8,-44,-22,-37,21,0,26,-20,-22,1,-17,53,-15,6,-19,29,21,31,15,2,6,4,-21,8,-7,-25,-19,6,-3,21,16,-18,3,-13,-21,-27,-24,19,43,4,-13,3,-20,23,-5,21,-14,8,-2,16,-12,-19,-11,0,-24,18,-18,-23,-7,-5,-14,20,25,-20,1,21,1,1,-15,7,2,20,-15,-36,31,-13,-29,-14,21,-40,-10,-34,12,-16,-23,7,-26,7,-1,-24,0,-43,2,17,33,-7,-10,11,6,7,18,10,-26,-17,9,-31,16,-19,-47,-31,11,-26,-2,-8,13,-25,-17,-8,-8,19,-24,-35,-16,-8,-10,1,16,-27,-17,-4,14,1,24,0,-21,-46,-11,-30,-29,5,-31,-7,37,10,33,11,-3,-10,10,-27,34,4,-17,1,-23,-12,-22,-4,55,-14,-12,23,-14,-18,-16,-2,-2,-51,3,-29,-29,30,-14,-12,-16,0,29,-3,-2,-8,-16,-6,29,5,5,-17,-19,-19,-7,-8,31,-14,-13,40,-21,-19,-33,4,20,-18,11,-18,30,18,-18,12,-13,0,9,8,-14,-29,-25,-14,-15,35,-16,-31,-23,-18,-2,14,12,-9,-18,31,-18,-4,10,0,21,24,-16,-38,16,-45,-30,-49,-19,-16,-35,-36,16,-2,-3,-3,-28,-23,3,-27,-7,-9,-11,-15,14,6,54,-2,15,39,3,7,-30,-17,-15,-40,24,-23,-28,-44,-28,-18,-20,-34,17,-21,-3,-16,-28,-29,-4,-26,6,-6,-40,-18,12,-29,24,-5,15,47,33,0,-31,-53,-33,-53,31,-17,-28,-26,-9,9,0,-17,4,-21,18,-46,21,-22,-2,0,11,8,-29,-17,21,-30,37,-5,20,56,54,-2,-19,-14,-10,-45,5,-2,-29,-32,-19,16,23,-22,-35,-29,-1,-6,31,-5,-3,2,-6,-11,-24,-32,39,-11,25,29,43,46,4,-6,23,12,24,-34,39,15,9,15,-6,0,14,2,-13,-23,-10,6,31,5,1,-7,-5,-28,-6,-22,-23,4,-6,42,28,5,13,-12,-30,-4,-18,-29,53,-36,-2,-34,0,-24,-31,-36,27,-8,11,-17,-17,-18,23,-17,-36,-21,-23,-12,26,-5,-7,21,18,28,-11,7,-48,-23,-21,-28,51,-15,-12,-36,3,-24,-5,-28,27,5,-3,-6,-3,-20,9,-9,-6,-13,-32,-23,-7,-24,24,3,37,34,-17,4,-47,-24,-24,-34,28,-28,9,-38,17,-12,10,-26,9,6,-24,-27,16,-33,7,14,9,-2,12,-13,-15,-34,24,42,24,40,-18,9,-37,2,-21,-11,31,-14,9,-34,-8,-16,22,-36,7,3,-17,-4,12,-8,-10,-8,-7,-9,10,8,10,-5,14,21,40,28,-1,1,-28,18,-10,1,-5,14,40,-5,7,-14,27,-37,11,6,-2,-5,-14,-2,8,-3,-23,4,-12,-6,13,-41,13,28,0,-19,-6,-18,-33,-19,-24,-27,71,-11,23,-43,16,-9,-28,-54,33,-17,26,-11,-10,-21,0,1,-14,-20,8,-14,-20,-36,50,49,0,31,-1,3,-22,20,6,-21,26,-24,18,-49,11,-13,-4,-53,-6,-5,13,-21,19,-7,-15,-2,-25,-21,-19,-17,-21,-26,62,26,-10,40,-32,-6,-49,23,-22,-34,16,-15,25,-35,21,-7,11,-24,-3,-10,-4,-26,61,-16,-8,-19,-18,13,13,-13,-24,-35,59,21,40,53,-25,-5,-54,0,-4,-7,-14,-31,39,-18,-3,-13,18,3,23,12,-16,-9,31,12,22,-25,6,2,4,10,-11,-32,50,53,54,42,-49,-7,-39,26,-12,-2,6,-8,49,-14,-6,-8,20,-1,28,31,-9,11,2,5,55,-4,20,11,1,-1,-50,-24,71,3,36,4,-55,-6,-9,-7,-24,11,23,0,25,24,-16,-67,2,-27,-2,3,-58,21,-33,6,28,-47,-26,-2,-13,-21,-20,-22,-8,3,-19,-20,31,-32,-13,16,4,-9,10,28,-43,19,21,-47,-33,-40,-14,12,-27,10,2,-8,-6,-35,54,8,-21,-8,5,28,-6,61,44,-16,-46,18,9,27,10,-3,11,-28,-6,-32,-9,-66,-13,-25,-21,2,-28,-10,14,4,18,-11,32,14,-35,5,23,2,-5,-12,-13,-21,-1,21,-38,-26,-2,-10,20,-24,8,-1,-10,-63,3,19,-10,-19,-13,-17,42,10,10,-25,7,-37,0,40,57,-16,-18,-24,-5,-28,40,9,-26,-8,-10,-19,27,-3,12,13,-38,-42,20,9,24,-30,-13,15,-24,6,36,-20,-5,-24,-5,-25,-7,1,-31,-2,17,-25,20,4,10,-22,-23,26,-15,-23,15,7,5,-12,28,-29,-13,-33,10,-13,-17,30,16,21,-83,-4,11,-1,-12,-6,10,6,-34,12,50,-17,0,12,-17,-10,-11,-35,58,7,22,42,-42,-43,-3,9,21,15,27,-42,-2,5,25,-1,2,-5,-1,24,32,70,60,10,-26,28,6,37,-6,-10,-13,-2,22,-8,5,26,-38,-34,-12,-15,-38,66,70,-32,-19,2,83,5,-26,-21,2,16,15,6,30,2,9,26,60,-9,2,-10,7,41,-20,-21,12,13,9,52,12,-9,-21,-24,-9,-3,-5,23,11,-22,3,1,92,1,-8,-25,28,-11,31,5,49,-16,-4,-22,-1,36,-17,0,-13,13,37,30,29,-11,7,-29,-20,11,1,8,-41,-11,-15,-14,-16,-17,-7,-11,-25,0,-25,4,4,12,-5,30,13,-20,-21,21,-23,-21,34,-15,20,-64,2,19,-12,20,17,13,-77,-17,-27,-13,-5,22,-20,-32,-42,11,-18,-17,-2,3,6,-13,-21,-7,48,-8,6,23,-44,16,-15,-19,-5,1,10,-22,-14,-15,-1,-1,18,-18,15,1,11,0,11,-21,15,18,2,25,24,-46,40,-2,33,54,-2,25,-71,22,-38,-34,15,-18,60,-16,-9,-30,58,-16,8,-14,53,8,-20,56,88,-30,-3,11,94,7,-6,-34,24,22,-21,15,-19,10,-18,4,-23,-4,-9,-38,31,-15,-16,-1,-2,-2,11,-9,27,22,-27,23,82,-40,18,-8,73,-22,-34,-16,-1,44,-20,-6,-24,-4,39,7,14,-17,-6,-9,-11,41,-13,12,-68,-26,-1,-1,0,-21,-41,14,-14,-11,-39,-8,-3,-6,-6,14,-24,-5,-17,-11,-24,9,22,-10,16,-1,8,30,-15,7,22,21,-55,-12,-34,-9,15,-2,-27,-49,-24,24,-9,-25,14,-7,24,-8,2,15,30,11,-11,21,-29,12,-21,21,-11,22,13,2,-6,-5,-23,-1,-19,-13,37,-33,-30,-27,-21,7,18,7,32,-10,-21,-24,4,10,4,20,19,-2,-53,49,-30,-10,-14,14,-12,-28,17,-10,13,-32,-44,-1,26,-6,35,22,0,-3,-1,10,28,23,-37,-31,43,-3,14,20,16,17,-18,16,-6,0,-22,-36,5,9,22,18,-6,6,-15,-1,-27,6,6,24,-4,-13,-27,-13,17,1,-28,-28,19,-16,-9,-22,-16,10,13,-2,-8,-15,-29,30,-27,21,-9,16,-46,5,-20,0,-18,-13,8,-3,6,-3,12,-3,-1,-33,12,2,-9,27,7,-16,-19,-27,10,-17,14,14,-10,-28,-63,20,-24,10,-13,-20,1,-10,32,21,-2,-43,-22,15,15,-18,6,4,35,-7,-27,30,-3,4,-30,11,-11,3,-13,59,-26,-24,-6,6,-22,18,-1,-5,-9,-32,35,30,18,-35,-18,21,-10,7,21,8,8,-8,16,19,-26,-43,-9,-8,-19,29,7,13,-34,-22,15,6,16,-30,20,16,-30,-36,-17,41,16,-20,-14,6,-17,6,27,21,-23,-10,34,15,26,5,18,9,-18,11,17,-9,-40,9,-17,-3,20,6,2,34,-13,4,4,-5,22,5,13,10,-35,0,-4,13,18,-21,31,-36,14,-5,-6,6,12,5,-4,-19,-25,34,-36,17,-19,29,-42,-14,-16,-2,-1,-6,9,4,-8,-2,-13,10,-16,25,-4,-10,10,2,10,21,-13,-5,-1,15,28,23,-21,-6,-36,-13,11,19,-20,10,-13,-36,-12,26,19,14,22,-11,60,-3,26,-7,7,17,32,-12,-30,-26,32,-11,39,-3,42,1,-18,22,1,-6,-28,-6,-3,2,-25,-2,1,5,5,1,12,-1,21,14,-30,1,-15,34,2,-7,-6,-46,-24,16,3,-3,4,16,-38,37,1,35,2,-35,26,-7,-24,-38,19,25,-8,-13,5,7,34,14,-17,4,-31,49,-27,16,-6,3,0,21,24,9,21,5,-16,-1,-13,2,11,9,-14,-3,6,-37,19,10,2,1,-11,10,25,-8,8,11,-29,35,-9,4,-3,12,10,15,35,1,2,3,-3,11,20,-18,-18,19,-48,4,21,-22,11,4,-4,3,1,18,-32,-13,-4,6,-21,1,7,-42,-9,-18,9,-32,-16,-42,-26,20,-28,-18,-31,-18,9,14,-16,25,-19,-16,-42,-3,-28,36,11,28,14,-17,-5,0,4,23,20,-12,-1,-19,-10,-32,12,-13,-22,34,40,22,-5,-16,-12,-12,-8,2,-22,0,15,-11,10,44,-12,22,-20,-1,12,-9,-14,3,1,0,39,-46,-19,-7,8,-22,-39,32,26,29,-43,11,1,-33,6,-18,-9,-22,27,33,-11,-21,-24,34,-17,-8,57,5,0,9,-7,24,-13,-14,-4,4,21,-53,-14,17,-29,8,-39,0,-3,10,-37,5,5,-9,11,-13,-3,2,-24,34,-22,-23,-11,-17,-5,42,1,16,19,21,8,6,21,-39,-12,-17,-30,13,38,18,-8,0,-24,11,-21,-34,24,-22,23,-13,-1,27,28,-12,12,38,-14,-9,9,-48,6,-4,14,-4,-26,-20,-4,-16,5,-60,-16,-17,39,-2,14,-6,29,-7,-21,-18,13,33,-10,7,-11,-7,6,0,7,-16,40,14,7,40,17,4,8,-8,-21,-42,26,5,-2,1,3,-9,-1,-53,50,-2,38,23,8,85,-15,1,-16,2,-5,12,-49,14,-8,11,35,18,-13,42,37,-5,-23,1,21,1,16,45,-39,-32,2,-1,39,-14,60,81,-47,-17,-39,15,39,-2,38,10,-16,31,-31,22,-1,33,-21,19,55,-10,-6,13,-2,3,-19,20,2,-3,-21,38,42,19,-15,7,31,-21,-20,-1,-21,-9,38,-13,-9,42,-7,-25,16,-9,21,1,9,-35,-17,-4,-7,13,18,1,18,-6,-14,45,-9,-6,-33,-2,26,-12,63,27,6,4,-41,12,6,-27,20,9,-32,-7,6,-35,-56,-10,50,1,24,-34,22,5,32,-18,-24,-10,43,-9,-6,4,-16,-2,-15,-12,-59,-5,18,-23,-15,-26,-12,43,23,50,-1,11,-52,-13,7,-65,-5,-22,-60,-7,6,-10,-55,-46,20,-11,-6,16,-12,18,-32,-39,-85,-19,-18,21,-27,-7,-14,-5,2,26,-38,49,7,7,-16,-17,-44,-48,3,90,-21,-17,-24,-45,35,-14,20,12,-45,-7,-65,-11,-33,-16,11,44,-17,14,-29,7,9,13,-16,12,30,-15,-11,17,9,-7,40,19,-11,-3,-16,-22,50,28,-31,-20,-8,-30,-11,-16,6,5,20,-8,-10,19,10,-11,23,-25,13,-20,-4,-40,-7,-2,8,14,23,-21,33,21,37,16,-17,-4,-38,-2,-3,-30,38,11,14,0,-25,-13,-7,-28,-4,19,-11,45,5,-47,-43,-14,12,6,0,-45,21,30,25,10,-6,18,-1,-5,46,4,-17,3,29,-30,-1,9,3,-12,-24,-24,-12,86,45,27,-36,-5,-34,-16,-22,-50,-44,-46,-17,15,-15,12,-37,-6,-1,7,14,26,-14,21,-11,-43,-75,-41,-32,16,-1,-17,27,55,10,22,-26,13,3,-14,-36,15,-50,-29,-3,20,-20,29,-52,-7,9,15,-10,-50,-43,60,-8,-22,2,-33,24,68,-14,44,-5,16,-17,17,20,-2,39,-2,8,65,-7,5,31,-3,-12,-8,-13,21,-2,30,-30,-6,-14,-25,-9,-11,38,12,37,-8,-26,45,-37,-24,-12,-29,18,-7,-18,-34,29,23,20,5,44,-5,20,13,52,47,-34,-18,-24,0,13,-34,36,17,37,28,0,-32,0,-16,2,-14,8,-7,-8,-13,4,19,28,-22,-2,-16,-20,-20,-31,5,-25,-11,-29,7,11,-17,23,-21,-16,6,4,-4,-21,12,6,-22,10,-39,8,-5,-13,-24,6,8,8,-1,-12,25,10,-33,6,25,-49,-20,-13,39,11,-10,20,18,-10,10,-18,-1,3,17,12,-26,1,-13,31,12,-33,-7,-27,35,-7,1,-24,-13,2,-21,9,17,-37,-20,18,6,-5,-34,-14,10,-31,3,26,11,11,46,-4,-4,16,-13,28,23,-18,-3,-14,42,3,28,0,-2,10,-44,-1,-19,-19,-22,18,-6,31,-18,-30,6,-6,0,30,3,-23,-3,19,-7,11,-3,3,-22,-17,27,-17,7,-3,12,-11,-14,-11,18,16,34,-23,-19,-22,-16,13,0,-42,-14,-17,17,-3,-9,-25,1,-29,-10,-7,-14,3,-37,-22,-4,-10,0,5,-30,11,-11,-41,-11,-35,-6,-13,-17,-26,-4,-38,-31,10,-44,-33,-13,-8,-7,-22,6,8,-6,-17,15,10,6,11,14,7,24,7,-24,0,11,-27,15,-7,23,-19,23,3,24,5,-30,13,-13,-31,-15,9,-4,11,23,4,-6,-20,-14,35,-23,-9,-14,-5,84,-5,5,-32,-11,-17,13,-17,-37,-27,-16,8,-17,55,-32,26,-57,-48,-18,3,-8,21,52,8,16,-31,-20,15,-26,-6,-18,19,77,18,41,-36,-18,22,4,-4,-5,12,-20,-17,-1,61,-24,-4,-30,-40,-11,0,-12,21,58,15,12,21,-7,12,-25,46,10,28,36,30,68,-17,-13,57,8,35,23,46,2,-54,-7,5,-27,-44,-9,-14,-8,32,-15,14,8,-16,-8,7,-8,12,-15,-30,4,-25,-16,-12,-8,9,-4,-4,-11,-8,-4,-17,-14,-25,-12,16,-1,-11,-26,21,-6,-6,-10,-13,-16,15,-2,1,31,11,3,-27,5,-5,4,3,-8,28,-10,-17,-13,-35,14,-26,-36,-27,-5,-26,-16,10,-8,-25,10,21,-7,15,-12,-18,-8,4,-12,19,-7,-40,-3,-22,32,6,-2,29,0,-10,22,-14,-38,-38,-49,-5,-43,-3,5,13,-24,-26,19,-2,-9,0,33,11,-16,38,-58,-1,-30,-23,-3,7,84,-2,4,-21,-3,12,17,18,-9,-2,-24,-30,9,41,-23,-35,-11,-17,11,-30,15,34,33,12,-14,12,-28,6,22,43,-26,24,45,26,24,-47,-5,33,30,24,-22,-1,-5,-22,6,21,-21,-5,-33,-1,-30,-9,5,33,22,9,19,-1,-9,6,17,16,-16,-24,-11,-31,-11,11,-13,-10,-5,-18,-6,-4,-10,-39,-1,12,17,5,18,12,-6,-8,-13,-10,6,13,10,-28,30,37,-14,17,-15,-11,12,-15,-9,3,-16,-9,-22,-17,9,5,-23,-37,0,-9,-9,-14,-28,-3,13,20,-11,-17,-8,5,-7,32,7,21,8,20,-11,-20,-10,-16,-7,28,26,2,-8,30,-9,13,-22,-25,-31,-21,4,-27,21,10,21,-15,1,-1,-19,13,-27,49,-21,-21,-11,-2,11,-1,33,2,-9,-18,18,-9,-6,19,-18,5,-11,-29,3,-21,17,-29,42,8,19,-13,30,-3,-19,20,-28,14,-31,-14,13,-12,-4,17,31,17,5,-31,26,39,12,-5,-37,-5,6,16,-5,-17,-8,-13,34,-4,-7,-30,35,4,-21,2,15,5,16,2,16,17,-2,-12,-9,-31,1,11,-10,4,2,3,-9,10,7,-30,-4,-6,14,-13,-12,-5,-2,1,1,-5,20,19,27,-4,12,5,-1,2,10,-12,23,-18,1,-8,17,19,-28,7,32,13,4,6,8,-33,-27,-14,9,6,6,5,-8,-16,28,8,16,-6,11,13,6,-8,-2,-11,1,-14,1,27,28,10,-18,12,28,6,-6,9,-20,-2,-4,1,10,-1,9,-4,-1,-6,-18,19,-10,16,31,-24,2,-20,10,-2,-18,-10,-9,16,6,12,6,2,-8,-2,-11,11,16,13,22,8,-8,-31,18,-6,23,-17,-21,20,-20,-11,16,-21,2,-34,-3,25,-2,0,-24,-33,-13,-13,0,-25,1,4,-8,13,-4,11,-2,0,-4,-21,-3,19,41,-16,-35,-1,-24,20,-5,-14,-13,-18,-10,-33,-19,-14,-21,-14,-14,-17,-22,-3,24,-4,-5,-24,-3,-23,2,-7,11,19,3,-6,19,-9,8,-2,-18,-12,0,-1,2,2,3,-20,-17,14,2,2,6,-9,-20,19,2,-16,14,-19,8,9,30,10,-17,12,13,13,8,-1,-11,6,-20,-1,22,-25,15,-10,-2,-6,-15,19,1,31,-1,-13,-7,12,-23,-18,-15,-6,14,16,3,30,-31,-6,1,16,-10,5,-9,11,-20,-11,12,7,-5,-18,-15,3,-8,11,-13,30,-5,4,-5,2,3,-19,15,-23,18,5,-6,18,-31,-26,-13,19,-10,12,-15,6,-31,-6,13,5,-29,10,-23,-20,8,6,-18,-6,7,28,-4,-3,-20,-21,-21,-14,15,48,-4,-8,-33,-16,6,10,-12,18,19,-7,0,25,-3,9,-6,-23,3,-21,5,-1,2,4,16,-20,-5,16,23,9,10,-10,-13,-48,7,12,-18,-3,14,-12,3,5,20,2,-11,-6,16,27,-12,8,-3,-20,-9,1,10,9,17,18,0,25,-4,6,13,-50,9,-11,17,16,-57,-7,14,23,10,16,-10,1,-9,-30,32,7,5,12,-9,-20,-22,3,-8,39,-3,12,19,27,-11,-14,10,-15,19,-20,-14,8,-39,-13,0,-7,3,32,4,-34,-21,-3,23,5,12,8,-22,1,-10,-2,-23,31,-13,-19,11,7,18,-45,3,-15,7,-31,-35,-17,-43,-51,-18,22,-4,21,22,-7,-32,-28,8,3,-15,2,-17,-9,-8,-16,-24,-3,23,11,-3,4,7,-38,-3,-30,22,19,-9,-24,37,-48,-5,-1,-11,-5,16,5,29,-8,1,40,14,-35,-9,-25,2,12,-18,1,-7,-3,-23,-2,9,3,2,-65,-5,-16,16,2,-47,1,3,19,-11,-19,23,-24,7,30,8,-5,-34,-15,-15,-30,-31,-5,-10,-1,-28,48,-17,11,-15,5,14,-61,-14,-23,4,-9,22,27,-7,19,0,12,-6,-30,-7,16,12,0,-24,-4,1,-22,-17,-30,-15,16,-45,63,-5,36,0,-23,11,-32,-13,32,-6,-2,8,62,-11,-8,1,9,0,-18,-7,-37,-1,26,-3,-27,4,-7,9,-34,-2,11,-36,20,8,24,-5,-54,-4,-22,0,-4,17,-10,-24,32,-21,-4,-5,22,13,0,-16,-2,33,28,-10,-8,12,8,7,-23,5,-2,-9,3,16,30,17,-25,-11,-28,25,16,-13,-19,22,-44,-28,3,-19,14,33,24,19,40,-6,3,14,-16,3,-43,32,14,10,-15,-12,18,-8,3,16,-9,12,-32,-4,6,5,38,29,19,-10,14,0,-30,19,-12,-6,68,36,-31,-11,2,-12,-25,-13,20,8,-24,-51,-18,-22,8,-22,-30,69,-25,-5,-44,-1,98,76,58,-26,8,0,4,-1,-10,-16,59,14,-9,-40,5,-10,-27,12,4,-15,2,-32,-2,11,30,18,-32,24,-47,-38,6,-11,38,1,32,-32,24,3,-5,13,-16,10,-8,-19,13,-26,-37,2,-36,5,-31,4,2,-28,14,38,32,7,-44,-13,-31,-15,30,8,-6,-56,-15,-32,14,6,-22,43,-23,9,-29,36,17,-9,-46,5,-10,13,-27,18,-37,-28,-12,23,25,9,-21,-28,-14,-3,52,7,-2,-36,-29,-30,26,1,7,27,7,13,38,16,-9,2,17,29,-34,18,-6,22,-23,9,14,28,-15,24,9,-5,-12,-26,-18,7,16,19,0,12,3,5,5,5,-16,-7,23,36,-35,18,27,15,-22,-10,-10,-14,-31,-9,-22,-6,-17,-25,-6,35,-6,-21,-40,15,45,3,-7,3,-28,17,11,-8,-7,-7,-25,20,15,-12,23,18,-31,-31,-7,-29,1,-7,2,-8,-15,21,7,10,-28,-31,-12,23,9,-44,-30,-8,-17,16,-27,30,1,13,-18,39,3,-14,12,5,-41,-11,-10,-5,1,3,4,36,2,20,3,12,-25,-6,46,-9,-25,7,-30,2,13,12,-22,24,-9,21,-27,62,-9,7,-16,-1,-7,26,6,9,-21,1,8,52,1,14,-16,21,-22,-12,61,50,-11,-30,-34,-5,34,16,-18,-3,3,12,-40,-22,-12,-48,17,-40,-19,-1,31,-4,-8,-7,-17,-2,-24,-5,-29,-9,-42,5,29,-25,-32,13,0,4,20,-8,-3,-32,12,18,-34,3,-12,-20,3,15,-1,27,-9,17,-1,-9,21,5,-27,-29,-6,-41,-50,-28,25,3,-23,-55,-4,1,53,-2,24,-21,-21,4,-81,4,-54,-16,10,38,16,11,-11,28,-32,-10,15,-5,-32,0,-3,-46,-29,-40,53,2,-41,-68,-44,-9,47,4,53,-37,-33,19,-51,10,-31,-24,0,36,53,22,-1,7,7,-14,39,-12,-21,5,-13,-38,-14,-23,15,29,-37,-43,-18,-14,48,2,43,-18,-13,4,-2,9,3,-9,25,34,63,20,-3,4,-1,-10,6,-9,-14,1,-24,-15,0,-7,58,30,3,-28,-16,-11,33,8,30,18,20,19,18,13,34,6,-12,-46,-4,22,22,21,5,55,23,-3,4,16,8,13,0,32,4,-37,0,34,-9,8,9,-11,-4,-7,20,17,2,-20,-6,-24,-16,-8,-38,19,2,14,6,6,7,34,-9,-27,1,-13,10,-11,24,-6,-29,-12,-13,10,-5,-12,34,-3,-22,24,-30,15,-26,12,9,65,-34,13,-13,16,0,-10,6,18,-7,-4,-18,1,-7,-25,90,16,-50,-67,-61,6,13,3,16,-13,-19,31,-49,16,-21,-7,-9,62,18,20,-11,29,-8,-9,21,-19,-13,16,-18,1,-38,-18,56,-7,-58,-22,-63,-10,8,-2,45,-31,-51,13,-29,19,-14,-23,-9,24,34,39,-15,9,19,-61,41,-15,-32,-15,6,26,-25,-41,5,-8,2,-45,-43,-6,38,5,47,-29,-28,2,41,5,31,-6,0,-27,14,-12,14,-5,29,34,1,-13,4,-5,-3,-8,0,20,42,-3,34,34,12,1,13,-10,-17,5,33,7,46,-30,-8,-20,2,-8,2,-26,8,5,-2,5,25,26,-9,-29,-5,-2,-1,9,5,-33,-3,4,-13,17,-1,-4,4,11,-2,-2,-6,8,-18,-12,10,23,-29,38,-23,-4,-13,9,6,7,-11,-8,-18,-14,0,-6,47,-14,-40,16,-40,7,-30,-3,20,12,8,5,-36,14,-31,-22,-26,20,-23,46,-19,-18,-14,-21,4,24,-8,17,-49,-19,-46,-24,75,-15,-58,-37,-43,-13,-10,-15,38,8,-21,12,-15,31,-36,-19,-21,26,-8,29,-3,13,22,0,72,-3,-14,-26,6,4,-17,-43,70,25,-37,-25,-17,-3,15,-6,39,-4,-28,-15,-5,-21,16,-13,-29,-23,22,17,2,21,2,2,-10,15,9,-21,21,-9,-22,17,19,21,11,-11,-7,6,5,9,-12,-15,10,0,9,-45,-12,-17,-20,-26,16,12,13,19,-1,13,13,17,-3,-40,5,2,10,9,-9,-15,-7,14,-17,17,-27,4,18,14,13,-26,-2,12,-18,7,-5,2,2,5,0,-8,-6,-28,-12,47,-5,-20,-15,-13,-3,-2,-9,-30,-37,4,-30,14,-6,-19,17,-7,51,-24,-22,-38,-18,-17,-38,-15,-24,15,-4,-12,-2,-3,-2,24,10,7,-36,-28,-29,-4,29,-6,-59,-26,-31,-1,-25,-11,12,1,20,-20,-16,22,1,-1,5,3,-50,31,12,3,8,0,-22,11,33,-17,-26,16,-22,-32,29,2,-31,-14,-29,14,-18,-5,27,-12,12,-2,-2,-24,-15,15,-39,-28,46,12,10,-18,1,58,-30,21,16,-12,13,-19,-28,6,26,-5,-3,25,10,19,-9,4,-12,-13,9,-3,11,-19,-3,6,-42,-20,17,16,-10,-7,-13,19,-15,3,1,-20,-5,-25,27,29,-15,-17,4,-10,3,22,0,2,-3,24,-4,-21,-6,-16,0,22,-6,9,16,16,5,-31,-3,-12,2,3,-2,22,-13,-31,34,9,2,-13,7,33,10,10,-13,-13,-5,12,53,-36,-3,-20,17,-16,-40,-36,0,0,-8,-9,-4,15,-2,-14,40,33,-13,-27,33,17,36,-25,-4,52,-7,-8,9,-9,4,27,10,-32,8,11,-3,-4,-6,-14,-39,4,3,12,40,19,-22,-26,36,6,-25,0,17,13,50,-9,5,41,-8,1,-5,9,3,14,33,5,-9,-10,4,-15,47,-49,-21,-15,-26,-15,33,-7,-10,-6,-32,13,-11,5,-1,-2,-62,22,-20,-31,-13,7,-14,-5,-24,5,37,23,-12,-27,22,10,34,-60,-12,7,-27,-14,16,18,-25,16,-19,-5,1,-3,-10,-5,-15,-23,-16,-27,-31,0,-9,-10,-4,-10,16,21,-3,0,11,15,-1,13,-25,-15,-14,12,-20,13,-80,13,1,20,-2,-16,6,1,-8,-24,-25,-5,-16,4,23,-8,9,31,21,-10,27,25,0,37,9,23,-32,31,19,13,-19,-30,-50,-6,41,39,-33,-16,37,-10,3,-16,3,1,-55,-26,-9,-4,16,46,-4,-36,9,33,45,8,62,2,40,-3,41,21,6,-25,49,8,38,-47,24,13,26,19,27,3,-19,20,-26,19,-22,11,4,-5,-1,13,-42,-11,17,9,-11,-25,-25,0,-10,-10,28,-24,41,-14,-35,9,-10,26,-16,-11,-21,25,15,8,23,6,16,-7,-38,4,14,23,-32,-14,-8,-10,-13,-40,-17,4,-5,-39,20,-2,-5,17,-30,-28,2,1,-12,-14,-13,7,-11,-14,4,7,-2,-17,5,-23,8,15,-50,-9,10,10,-44,11,-36,0,-23,-7,-5,-28,-57,-1,-10,7,-10,-36,-3,-37,-54,9,-54,-23,-33,10,2,-20,5,14,-1,-22,-26,21,6,4,-34,21,-28,-17,6,-19,-24,-47,-81,-28,-6,37,-35,-46,47,-13,-61,-35,-16,-26,-68,-27,-27,7,24,37,-32,-20,44,24,43,26,7,-2,30,5,8,16,-9,-15,21,-33,5,-14,-16,31,31,6,-11,-7,-16,-5,-56,12,30,36,-20,-3,-4,29,-6,-19,24,1,3,-4,13,34,7,19,-12,-14,56,-17,0,31,37,37,-10,24,3,7,12,20,54,-14,16,-4,1,-9,-5,26,3,30,-5,-19,15,22,22,-10,7,-14,-7,3,-7,30,-6,10,43,36,-29,12,-6,-5,-10,27,35,13,-11,-4,21,-15,-2,9,-43,10,-12,18,-4,26,1,3,-27,16,-29,-13,-39,19,16,19,-9,-16,10,0,4,36,-79,1,13,12,-12,-7,28,30,11,-39,-35,33,16,35,-9,36,-15,1,4,-6,-41,-22,-55,-34,14,29,-50,-58,50,26,-23,-13,-28,-32,-31,-34,-50,5,18,26,7,-28,-10,60,43,55,-8,9,25,8,-29,9,-25,-12,-9,-7,-6,9,-44,31,17,40,-13,-24,-35,-5,-21,-14,5,6,-8,5,-15,9,3,-29,-12,0,-5,-3,14,-15,-5,5,-25,2,4,-11,-19,16,22,-1,3,16,-10,-13,17,-13,27,-8,20,17,-21,-18,-25,10,-4,26,-1,-7,-4,17,16,-16,-2,-20,-21,-2,-17,11,-5,26,-2,-25,-39,-11,-19,-2,-11,0,0,6,-16,23,22,-10,12,18,-31,6,7,17,-15,2,-3,7,9,10,-45,22,-33,11,1,12,-48,-51,-1,2,-9,6,-41,-30,-24,5,-30,13,17,3,25,-22,-45,46,27,-9,-40,19,-24,4,13,6,-14,-6,-47,-9,15,-5,-43,-63,34,16,-14,-15,-12,-39,-34,-39,-49,12,12,23,-12,-1,-18,25,39,18,-24,30,-3,41,-1,5,-3,-24,-7,5,3,2,-49,13,-19,31,-15,-1,-26,-21,-19,-16,-36,-4,42,15,-21,-9,-2,-11,3,-15,2,31,11,-11,-15,5,-2,-22,45,18,-28,6,7,1,22,15,-23,-27,36,-6,15,4,-19,14,15,5,-14,4,-4,6,1,-23,5,11,2,-25,-13,-8,25,0,21,7,-10,26,-28,1,-1,-11,-30,20,17,-4,31,17,-19,0,55,-11,22,21,-1,-19,12,21,-10,27,-1,-1,8,4,4,12,-11,-21,-7,16,-52,-14,-4,-2,14,-1,-13,-14,15,12,-35,-12,16,-16,28,-1,-6,27,3,2,-9,-4,20,-16,12,14,-1,25,-6,-23,9,-23,-46,-42,29,9,-7,15,2,-20,-17,-13,-27,-11,0,20,9,8,38,5,11,-12,-5,16,18,0,33,-3,-4,12,46,2,25,-3,-29,18,-31,-9,36,0,-16,-3,-17,-3,4,-3,20,18,-15,-6,21,14,26,14,-20,-18,13,-35,7,-14,-4,46,-61,7,-16,-3,-26,-28,-10,-6,-26,26,29,24,8,-10,-35,-20,9,30,7,-7,10,-19,35,7,-22,-20,-20,-53,25,-6,1,20,-61,-32,-3,-12,6,-23,-45,-9,-66,26,55,44,12,-13,-1,-16,-13,-20,48,-25,33,26,21,9,-29,-18,-16,-28,12,-7,-1,-2,-49,3,8,1,20,-4,-37,12,-9,41,64,2,-17,5,12,-7,-24,26,57,-29,1,47,2,22,-28,-20,4,-7,9,16,-7,18,-19,11,-9,23,-1,-19,-40,25,8,6,17,-15,-48,16,12,-1,-32,1,18,-8,-25,1,-19,-29,-58,6,11,16,4,24,1,20,-22,49,-8,2,-22,-16,-6,18,-18,17,-9,-30,-49,5,10,14,-39,-16,-13,-12,15,22,40,15,-10,10,19,-8,5,-10,-29,20,-63,23,-1,-27,-10,-11,6,-15,22,-8,-1,3,30,6,-10,-14,2,31,-1,-1,10,-50,23,-31,-5,-23,-4,-46,3,-3,-18,-13,-57,-5,-12,6,9,-10,-32,13,-43,15,17,-15,-20,-11,-41,-11,-34,-15,13,-13,-33,-16,17,-23,-22,-21,-16,-55,-10,-1,-26,4,-40,-9,4,9,16,-32,-35,-3,-31,18,-5,-1,-48,15,-15,-9,-22,-4,-5,-13,-9,27,-9,-20,-27,-35,-7,-37,-4,4,-32,1,-29,7,-5,13,19,-22,-29,17,19,-16,-33,-23,-47,16,7,-1,-18,-17,0,-3,1,20,-18,-20,-24,-6,4,13,12,13,-12,26,-42,26,-9,-7,-11,-2,-2,31,18,8,-29,-23,-28,15,25,2,-14,-19,-5,10,-62,88,23,23,-16,67,4,26,26,-13,-4,21,0,8,-7,-34,-15,14,39,-28,88,-9,38,3,-4,-1,42,-17,36,17,-22,11,-46,3,3,-4,-17,30,-5,17,-8,15,5,17,-10,-5,-13,6,16,19,-4,-1,22,-3,4,-23,-49,-4,23,3,17,-13,-15,-7,-13,-23,3,-40,-33,4,-24,-30,5,15,18,-12,-21,-2,-5,-2,-17,9,-36,-5,-61,11,10,-68,-30,20,20,9,20,-12,-16,-5,-1,0,5,-28,-29,-41,-28,-28,20,-11,20,4,-30,-2,-17,-8,-9,26,-15,10,-14,-27,36,6,-19,7,-13,12,-2,-28,-2,0,3,9,18,-4,-11,-14,-27,-3,20,-4,27,55,-52,33,-15,30,-30,37,-15,29,10,-1,41,40,14,-9,-18,4,1,-19,31,27,-3,42,-9,17,-29,70,-8,35,-25,4,-14,6,7,26,-19,-29,-15,-26,6,1,38,1,-21,1,8,18,14,2,35,7,-2,31,-39,11,-9,15,-12,55,-6,53,-2,4,-28,-14,6,22,-22,2,-3,-1,-20,4,47,23,-64,-34,4,13,44,10,31,-6,5,11,-6,-18,-30,-23,-5,20,-12,12,4,22,3,9,10,27,-8,-21,-26,22,13,-13,12,11,-19,-28,7,25,7,18,14,-13,-25,-9,19,-10,12,-27,-12,-32,-16,-23,16,-7,27,11,-7,-16,1,-16,-22,20,-6,5,-61,10,32,6,16,13,-24,6,-3,-18,10,-10,2,-12,26,11,-17,-25,-29,-26,3,-6,20,21,-3,10,25,32,-23,-2,-13,26,14,22,3,24,7,-12,-29,-3,-10,19,31,33,-13,-21,-20,-24,-33,20,-3,21,-4,-5,29,35,25,3,-3,-23,19,-16,-5,1,19,5,-4,31,31,29,14,23,3,-12,-15,14,5,32,-21,16,-5,50,10,30,-3,-33,-17,-11,10,7,-3,-18,1,4,10,-6,29,29,-4,5,16,11,35,17,20,-9,15,2,0,5,-27,2,-1,40,4,29,14,-6,-21,-7,12,15,3,-12,-8,6,17,-19,1,-3,-15,20,11,3,28,26,6,16,-34,1,1,-5,8,3,-14,-35,5,0,29,0,0,-7,-16,13,-2,-14,-14,9,16,-9,-25,-18,11,8,-14,-25,-5,6,22,-13,-14,-7,-25,-21,43,-5,-38,-20,-13,-4,13,10,37,6,11,-10,8,7,-9,-11,3,-2,-10,17,2,1,-14,-26,42,-11,-6,9,11}
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_weights.h';
      define-mem-desc-line = '5';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__weights_8h_1adbdb9a359c8e4104203e3783d8c1adb1';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CONV2_BIAS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{55,50,34,43,-37,35,-21,10,35,-53,-76,7,14,-1,92,20}
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_weights.h';
      define-mem-desc-line = '7';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__weights_8h_1aa3605f1b1fafb1612311727d9b97b0f2';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CONV3_WT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{15,10,3,1,-20,-11,5,-18,-9,-1,-4,-11,-5,-19,-26,-15,13,5,1,7,6,16,1,-20,3,35,0,-2,8,12,-41,-5,-20,4,6,3,-3,0,-28,-13,6,16,-4,-4,1,8,17,2,-4,-10,-9,-11,3,-2,-4,-9,-21,-10,-18,2,-6,-18,27,5,2,5,-5,-3,-4,-2,-16,17,1,-17,-13,-12,-1,-18,10,6,7,-4,-1,7,1,-4,7,-8,0,4,12,-4,-5,-13,8,-17,0,-22,-2,5,12,20,3,-6,4,10,16,4,-3,-7,0,-15,-17,-1,14,25,2,3,-15,-11,1,-4,-2,-14,-2,5,12,-2,5,-13,8,-1,-4,0,-6,12,-3,-22,-20,7,3,11,8,6,6,2,10,7,-5,-6,-6,18,-2,-23,2,1,-12,-9,-3,-2,0,-3,-9,4,-16,-3,-7,-23,-10,-8,-1,-26,-3,9,30,-16,-11,-13,-9,-11,-14,5,5,-9,-16,1,10,-5,-18,-14,31,-6,-1,1,5,-7,1,2,-17,3,8,1,2,-3,-4,3,-6,7,23,-10,-6,-3,-9,-9,-38,14,-3,9,-10,-3,17,13,-6,12,22,8,8,-6,9,9,-6,13,-1,-11,12,-2,-4,-3,-2,17,2,-8,-15,-2,-9,-10,-9,-19,2,-11,6,-5,-5,8,28,2,-23,12,-19,-12,-33,2,-8,-17,-3,-15,-1,23,-18,9,23,2,-9,18,-17,-29,17,9,21,6,13,3,13,32,-4,0,-7,10,-2,-2,-10,-5,-4,-5,8,-1,-1,-9,-20,11,1,4,-10,1,-1,-6,-24,-1,-6,-2,11,6,7,-9,2,8,-6,-8,-19,11,6,-10,5,-5,0,-14,18,-11,13,5,3,-7,0,6,-21,4,2,12,-14,3,-14,0,-10,-6,10,0,-21,17,3,19,-19,-2,13,21,-10,-11,-5,-18,-10,6,25,1,-19,0,2,-11,-36,-13,11,-24,4,-16,-3,-28,0,1,-9,-6,-3,-1,6,-11,-19,3,5,-6,-7,16,-22,-19,-11,-20,6,-2,-1,-12,24,3,-27,-2,-15,-18,-2,-3,5,-12,-8,-4,-23,1,5,19,-30,12,-5,-4,-1,10,-1,13,2,-4,-12,6,-3,2,13,5,-18,-3,2,1,4,20,13,8,22,-6,-3,8,-12,-10,-28,12,-12,-5,5,-12,-6,13,1,-17,-32,-11,20,-14,-9,-6,-11,-1,-8,-2,-13,-10,-1,31,-12,21,-32,-2,-14,-1,0,11,-1,-1,-13,16,-10,-8,-10,20,-2,1,3,-7,-17,-1,-12,-4,-14,-16,-20,-1,-2,-4,-3,11,16,6,-12,-11,3,0,2,-1,-2,-18,-21,-4,5,-9,12,16,7,21,9,13,-4,2,4,0,-21,-17,-3,2,-10,-24,-10,7,3,-15,3,-11,1,1,5,-8,0,-7,3,0,-3,2,0,31,-5,7,0,6,-13,-7,11,-15,-1,-13,2,13,-2,8,25,-6,-1,-16,-3,7,3,-21,10,0,-14,13,17,7,0,-7,14,10,-1,-6,-8,-14,-6,-16,4,-26,-11,-5,-1,-14,15,10,26,-1,-27,-22,6,23,-16,-14,-1,-12,-26,-21,-3,-5,1,-9,-13,-9,-9,-12,0,-6,-3,-6,-9,-2,-10,-3,-13,5,-4,4,-2,1,-3,1,-3,-13,6,-5,3,-18,-11,-6,-19,-2,-13,12,4,-10,23,-8,-23,15,10,-3,18,4,-5,2,5,10,1,-16,15,-14,2,33,-5,-4,5,-11,-19,-4,6,5,16,-14,20,12,6,-14,-24,-29,-11,1,16,-6,11,-8,-25,7,-9,-6,7,20,-19,-3,-7,-19,2,-8,15,-7,-5,2,-11,-11,-6,-4,4,-7,-1,-4,15,-2,-3,-2,7,-9,-16,-6,-4,-19,5,-6,6,12,14,-2,-3,-1,17,3,-11,-5,25,4,15,-7,8,7,1,-19,9,-32,19,17,6,4,8,2,-5,29,28,-9,14,14,-13,-3,5,-9,-20,-17,4,-12,0,-4,-2,14,9,5,9,-28,-15,8,-8,11,-16,-34,8,-3,-2,4,8,-20,-1,-11,-19,-14,-1,-14,-5,-3,25,-16,12,13,14,22,6,-4,1,-12,3,-15,3,-14,-12,-5,23,4,-13,3,-22,19,8,-3,-29,9,-12,-21,-12,-18,-15,-9,8,-6,1,-5,-21,7,-2,1,3,-9,-16,27,-11,-19,8,0,0,-1,-2,-9,-28,-25,-24,2,-7,-5,-20,1,-27,-15,2,8,-13,-1,-1,3,-21,-6,-10,9,4,15,-15,12,-12,-10,-6,-15,2,0,5,0,-2,-18,4,-8,-3,4,1,-9,-1,16,-8,20,11,7,12,-4,-34,11,-21,-6,-9,-12,-18,-39,7,14,-14,-1,-11,4,4,-5,-21,2,-7,9,-5,-9,20,31,17,-18,-14,-1,-6,1,-6,-14,-21,-11,-6,3,8,-4,5,26,2,-18,0,19,0,4,3,-8,2,-10,-6,13,7,-3,3,16,-7,-11,9,-11,19,-9,-6,-5,2,-1,-1,-8,-10,13,7,-9,-12,-2,0,24,10,-7,13,13,14,19,-6,0,-19,-14,10,-21,15,-1,-11,-3,21,0,1,23,-37,1,3,-9,0,13,10,13,31,-29,-3,-1,9,-2,-8,-11,-11,-6,-5,-17,15,-20,0,11,7,12,6,13,0,-12,-8,-13,-2,-3,-5,-1,-10,-6,4,6,0,8,-8,-7,10,-5,-6,-2,-23,-4,-4,-13,3,16,-1,16,5,-3,-12,9,-5,-2,11,-16,13,15,7,-12,0,-4,-18,-9,-7,4,-25,-6,-6,6,-19,-5,13,9,-1,-5,3,4,-7,16,5,-8,-6,3,5,1,-6,4,14,-4,14,2,2,-10,13,23,7,3,5,11,3,-13,-4,9,12,-6,-7,-2,-11,-3,0,-6,2,-2,23,8,-4,-13,-1,-7,4,-9,4,9,-8,-3,-8,5,-12,-14,-15,-13,-1,3,14,1,-9,4,-2,-8,-2,18,-5,-5,10,-4,-2,-8,12,30,-10,17,1,-10,-1,-15,-17,17,6,-3,-4,0,1,-13,0,2,-14,3,-4,-18,6,-12,9,12,-12,3,13,5,-6,-4,-7,2,-17,11,-7,3,-7,-2,12,0,-9,21,1,9,24,13,11,-2,-18,2,-3,-1,-14,-13,-14,2,-1,0,-2,19,-8,-3,-9,6,-20,-9,-5,-5,-4,-9,-17,-4,-4,3,-3,14,11,3,1,6,-20,12,-9,-16,-12,1,4,-6,-7,6,3,-5,0,-14,-2,20,-12,-2,-29,-15,-10,6,14,-17,1,-23,4,-2,-5,0,3,5,4,12,-20,1,6,-2,-1,1,-7,2,-2,-23,0,0,3,8,0,1,-20,17,-16,-7,-12,-2,5,1,-6,-15,6,-8,3,5,-14,-11,-2,3,-1,7,-2,13,-13,4,6,21,-18,-1,9,-7,-12,2,-12,-9,-6,1,10,5,-12,-5,5,-1,-18,-15,-13,19,1,10,-21,1,-8,8,-2,-5,-13,-8,9,0,-17,-11,-9,0,6,13,-4,10,0,-19,0,15,-15,-3,15,-7,-9,-8,-3,-5,2,5,-8,17,-5,1,-11,3,-10,10,8,4,11,-1,4,-12,-10,-11,9,-1,2,-6,-3,16,2,14,-15,2,0,0,8,-3,-20,-16,13,-1,-14,2,8,4,13,5,2,14,7,-26,11,2,-1,-13,-5,2,-9,1,-9,-3,-6,-2,19,-2,-26,0,8,-19,14,2,-8,2,-13,-16,-1,2,-12,-8,32,9,-23,-3,15,19,-22,2,25,-4,-1,-16,10,8,-18,4,23,8,4,8,-9,-12,-7,2,21,-4,3,-13,-13,-10,-12,-2,-13,-20,11,5,-8,8,-2,14,13,-5,8,-2,-10,-16,-4,-2,7,-7,12,-13,-5,10,11,18,10,6,12,-9,-12,17,15,3,13,7,-26,-13,16,-8,18,-9,1,8,-7,-3,4,6,11,-19,10,6,-4,-10,13,5,-16,-2,32,-2,-11,-2,-4,15,-30,-5,13,17,-14,9,-4,10,-30,-14,16,-17,0,-11,-8,-37,-5,9,-36,-6,-8,11,3,18,-11,-6,-1,-8,5,-10,0,-9,-7,4,-20,-7,-1,16,-5,-8,-3,-10,-7,-5,9,-2,-15,-11,2,8,-9,-18,16,7,-13,-1,0,10,-12,-12,13,21,-20,7,8,-17,-6,-9,15,9,11,-7,-17,-4,-11,-34,-5,0,-19,9,-15,-28,-10,0,-13,13,19,-7,-10,-10,-4,-8,4,-7,-15,18,18,10,-27,-9,-14,3,7,20,-5,1,-10,10,-3,-16,-1,2,14,-18,-2,-3,-2,5,8,12,-7,7,-9,14,1,-12,2,7,-12,4,-6,-7,-21,-3,15,0,-14,-9,-11,-11,3,-7,0,-4,-22,-15,2,-8,-25,11,15,6,8,2,4,-7,5,-2,-4,-13,-13,-17,-3,9,-9,-5,3,-5,-4,-1,-9,-7,3,-29,-1,0,-9,6,9,6,-13,-2,-5,10,0,4,-9,-3,12,-17,-3,-5,2,-3,13,2,-5,-6,-2,7,-8,9,5,5,-2,-15,-6,0,-9,-21,9,13,-13,-19,2,4,-2,-9,2,-12,4,-21,15,2,-12,0,-2,-17,-1,11,-7,2,27,-16,16,0,22,-18,-2,-8,-19,-16,-6,23,-12,-20,5,-24,-15,-3,-8,7,-1,-6,-1,-28,-6,0,11,-20,-1,-14,8,-8,-3,11,-4,-8,2,-15,-8,7,3,8,18,-20,-6,-17,3,-25,-6,-11,-15,-7,-12,20,3,0,-9,-31,20,-11,-16,-14,5,-5,-19,-10,-20,-11,-10,17,4,-18,-4,-5,-12,-6,-13,-11,-4,-8,1,-28,7,7,-7,16,1,-7,2,3,1,19,25,-10,12,-13,16,2,11,7,1,-2,5,8,-9,-7,0,3,27,-2,-11,-3,2,8,23,4,-7,-7,-3,-5,6,1,3,-1,12,8,3,-15,-2,0,-7,1,8,9,18,26,10,13,1,-7,17,2,-13,-2,17,-19,-7,-7,0,-4,6,-3,-5,-9,-12,-13,7,-11,-2,-11,5,-1,15,-12,-24,7,-13,0,-1,24,4,-21,-4,27,16,-9,-2,5,-7,-11,-19,-6,-7,33,2,6,9,-15,15,11,-16,-3,-26,13,-7,5,-15,-12,13,-9,-7,-1,3,-10,8,18,-2,-14,0,0,-5,-2,15,6,-4,15,-18,23,-2,-9,20,8,-21,-16,0,-8,11,-28,11,-8,2,-2,-11,6,-18,-11,-1,4,-16,-7,2,11,-15,-26,11,3,-20,-1,-14,14,-6,-8,-4,-16,3,6,13,-4,9,9,3,-14,-13,-11,13,5,0,-4,9,4,-13,10,-1,-19,-1,-5,-6,-12,-14,-23,-1,-19,-2,2,19,38,-8,-18,11,-2,-7,-12,14,-7,-18,-1,6,3,4,-12,-5,-20,3,8,4,4,-22,-5,-20,-2,10,-1,-3,-7,3,-2,9,-23,3,13,20,-3,19,-18,-29,-12,-4,-6,7,-2,-18,-8,2,-13,4,3,10,0,-1,15,5,-8,-5,2,14,18,4,-1,5,4,13,2,-1,-11,-2,20,16,12,3,-5,-16,1,10,3,9,13,3,-14,18,8,7,-1,8,-3,-22,7,-28,-7,8,19,-19,-12,2,3,-9,-1,13,2,9,-9,-4,-18,-19,0,-6,-1,0,-14,5,16,-14,-23,-14,-29,-12,-2,17,-11,-1,28,21,6,1,-2,5,1,-10,6,17,8,-2,-16,-11,0,-6,-1,-2,-18,6,1,0,-5,-3,5,-3,1,9,-16,-12,-13,-13,-7,-11,-11,4,26,5,-5,-4,1,-6,2,13,2,-21,-9,-12,-7,-24,-26,5,28,-8,-15,10,-23,-7,8,20,35,-4,-12,-19,-16,-21,-16,-4,-7,-16,10,9,9,-24,0,-4,8,-1,-5,1,15,8,-26,-23,0,2,1,-17,3,7,16,-14,1,-9,-7,-10,-22,8,-4,-6,-18,-14,-7,-19,3,-10,4,13,-4,-2,-2,-10,-24,-1,-18,3,-16,-7,2,-2,7,-12,1,-3,-32,-6,2,1,-31,-6,-24,-2,15,-13,-6,11,-6,9,2,26,14,1,9,-17,-22,-11,-16,5,-6,4,3,15,32,0,17,2,0,3,32,5,-8,-16,13,-1,-13,7,0,-8,-12,-18,-2,-22,-11,8,-11,-5,-17,-2,7,-9,-22,-4,-10,-6,-8,-4,1,8,4,25,-6,13,-3,-8,1,-10,-25,-5,-5,-10,-13,-2,19,-11,-7,10,9,-13,-19,-4,4,1,-6,5,1,-8,-7,8,4,-11,2,3,14,-3,-15,-18,14,-6,-4,24,-11,-4,1,-13,-8,-7,13,2,2,30,1,-18,32,-18,-15,24,6,5,-2,-24,2,-21,-1,8,-23,-3,21,-5,-5,-8,-9,7,-9,-13,-12,-17,-13,-2,5,21,6,5,10,-12,-16,-1,29,21,3,-7,-31,4,-25,-6,18,-8,10,-7,-2,-14,-19,3,26,33,10,0,-10,5,-11,-20,-4,-9,-14,10,-16,-12,6,21,3,10,-14,-20,4,-29,12,-8,9,1,29,-13,-4,9,-12,-20,-10,-1,-6,18,7,-16,-1,-25,14,-10,1,-22,6,8,-10,-27,-13,-8,-11,2,-1,1,13,-15,-1,15,-5,8,3,-8,3,-3,7,6,2,-3,-18,17,-15,-9,-21,0,0,18,-16,-22,-9,-9,-9,9,-16,-12,-17,25,-11,-15,-9,11,-21,21,-14,-9,7,-12,-24,-7,-5,-2,0,11,27,-12,0,25,17,2,8,23,-6,13,0,-10,8,-12,3,-25,10,12,2,-29,5,-6,-18,16,6,-9,2,-1,17,-9,-1,0,14,-2,-1,-2,-10,0,-16,-19,-15,6,18,-12,19,5,-10,43,-1,4,6,-8,-6,18,-11,6,-12,6,5,17,-34,-17,-3,-6,-17,-4,4,-1,3,12,5,41,10,-16,-16,-15,8,-6,-8,-27,6,-14,-14,-11,-13,-10,22,11,2,4,-5,-7,-2,-11,-10,-19,0,14,-8,-10,-1,-1,-7,10,6,-20,-11,-8,13,-2,-17,2,-11,-8,4,1,5,-10,-18,3,-9,-1,-10,-13,-4,15,2,11,8,-11,4,0,-17,19,0,3,-18,16,-10,1,-14,-5,-3,-10,7,-11,0,-9,5,-4,-1,16,4,-2,-24,6,9,-18,-22,-5,-9,1,-9,-3,-14,-7,-3,-16,18,37,-7,1,0,-3,-4,-1,2,12,-7,-3,-11,4,1,11,-9,-1,16,5,24,10,6,-5,1,-1,6,-10,-11,-7,-1,6,3,12,-1,2,5,-17,-1,6,13,8,-4,-11,-24,0,-2,0,1,16,10,17,6,-6,-4,8,-1,16,-8,-10,-6,-5,-9,14,1,-22,-13,6,1,-11,-18,1,4,10,-1,0,-1,-25,-4,-6,-8,-2,5,-2,20,9,1,-18,22,-9,-8,11,-25,1,5,5,-12,7,5,-15,15,-4,15,1,3,0,-17,1,-21,-11,-4,4,6,-4,4,-2,-12,-18,-3,-9,3,-10,-23,-8,-14,-1,-14,14,-7,4,-7,-4,4,-19,-14,-13,-9,-2,0,1,-2,-11,-5,8,1,15,-6,-2,-1,-13,-12,-9,18,-2,-8,-1,0,8,12,-4,-8,-23,-8,0,6,-4,-8,-4,32,-28,-3,1,-9,6,-24,-8,-11,12,22,7,1,6,-4,1,11,3,-6,-6,-22,14,1,14,-3,1,6,-11,-1,-8,-9,-1,0,-2,-14,-13,-7,9,-4,9,-15,12,13,-22,6,-1,-21,-2,-25,9,-7,-13,-11,16,9,4,20,12,-8,-25,12,0,-6,-12,14,6,1,9,-4,1,4,-3,-2,-21,-7,13,-1,-13,3,5,-1,-11,2,-16,-15,-6,-35,3,-11,0,11,47,-1,-13,3,7,-15,-2,-1,-9,-25,6,-12,-10,-15,-6,6,19,-1,-4,-15,7,-13,0,-4,2,1,4,15,-24,-23,18,22,-3,0,8,-1,5,-19,22,1,15,8,12,10,-1,-5,-5,14,-31,18,-8,10,-19,-17,1,2,-3,23,-6,-8,7,-3,-3,-2,1,-14,-16,12,-3,-14,0,0,-7,27,-6,-15,-8,13,-1,-23,47,-19,-15,13,3,-5,4,-4,-2,3,9,-34,-2,1,7,-22,20,-14,0,-2,26,-5,-17,-4,-5,-5,-7,10,-16,-28,13,-7,8,-13,-12,11,0,1,-14,-13,4,20,-9,2,3,-14,-5,-4,-10,1,-5,32,-26,12,-13,-9,-23,6,-1,-10,5,-2,-4,3,-25,-5,-2,-6,-5,17,23,0,-6,22,-9,29,-8,7,-14,-5,-9,1,-8,-13,28,1,6,-5,6,-1,-6,-20,15,-4,-2,-5,-25,-6,-19,-14,31,-10,-17,4,-6,-7,12,-2,-8,-7,-5,-7,-12,-13,-9,5,1,4,-4,-13,17,6,2,-1,3,3,-23,12,-8,19,-5,-7,-9,17,-8,-4,-2,3,-1,-13,-30,25,-17,-25,9,1,-1,2,-31,6,-5,-21,-15,2,1,-11,4,20,-10,-17,5,-3,-2,6,3,12,0,-11,13,12,0,-9,-1,-13,11,0,-2,-17,5,0,-15,8,5,-6,-5,-3,4,7,13,15,5,-10,0,-14,-10,-7,-9,-9,7,-4,-15,-11,12,-7,-2,13,-28,-7,-14,-2,-8,16,-9,-3,-8,16,-4,14,1,-12,1,-10,1,-7,-16,-7,0,7,-25,13,5,-17,-10,-2,-11,27,3,11,-2,-2,2,10,4,-11,-9,-6,3,-18,22,15,-4,-2,-9,-7,-2,1,-5,-15,-3,11,-20,2,6,-2,4,-6,4,1,-2,13,-9,2,-5,-13,6,1,0,-3,16,12,-13,0,10,-18,6,-12,-14,0,6,18,30,-3,-19,-16,0,21,-15,-1,-4,-4,8,-10,18,5,-2,-20,-6,-8,8,-8,21,0,-16,-19,6,17,-4,-22,24,-13,4,-8,4,-27,14,8,5,-11,0,-10,4,1,21,16,1,0,6,-23,-5,-10,-25,-17,16,-12,15,-11,9,-2,29,13,3,21,2,-34,-1,-11,1,-14,13,-1,-19,-7,-3,-9,-14,-14,-5,17,22,-24,17,12,-12,-23,0,-3,-8,-3,-3,5,-9,-24,-16,7,-19,5,-7,5,-2,-11,-8,1,-10,17,18,4,6,-6,7,9,-12,20,-10,-18,6,-2,4,0,-15,-2,0,15,6,-8,-20,6,-4,-3,-7,-5,-10,0,-4,-19,-10,-22,4,-2,20,7,-4,-15,-2,-7,-1,6,8,1,-15,-8,-17,-9,-9,-1,4,-3,7,-9,8,-7,-11,2,-9,-4,-5,-17,4,15,-2,24,21,10,-1,-2,-13,9,7,-4,-24,-25,-17,6,12,21,6,13,-18,8,1,-6,-9,8,-26,-14,-9,-28,6,22,19,4,-6,13,-17,5,-11,12,-7,-21,-2,-21,-5,-7,21,-3,-17,-11,-13,1,-15,2,-6,-22,-1,-8,-7,-1,8,-6,14,-3,-17,-2,-10,18,9,-6,-15,-15,3,-5,-17,1,3,-10,10,-7,-4,27,-1,-1,22,16,4,4,9,-13,-3,3,7,-6,-13,-43,0,3,21,-10,-3,-2,13,2,-11,-12,2,-11,-19,-12,-5,-10,-18,15,11,-6,-10,-7,-4,-17,8,14,-4,-4,-16,-10,-26,-19,-11,-9,-8,15,11,-11,-5,-19,-4,9,4,8,10,8,14,-10,4,16,2,17,13,-13,-2,2,18,12,1,6,3,10,18,4,-14,8,-2,13,5,-3,-9,-20,37,-16,-19,18,2,-15,-21,5,-1,-9,3,-12,-11,-2,16,-2,1,-12,-6,-3,-3,-27,-10,-16,16,22,-13,22,16,-17,-8,-23,-1,7,-15,9,-6,5,-22,-6,15,3,-7,-1,26,9,-3,-6,-5,8,4,8,-11,-5,2,-14,7,7,15,-6,19,14,9,-5,8,9,0,2,11,-4,15,-8,-4,4,-4,-4,-8,-5,-5,-4,-20,-9,-5,-40,-40,-20,-3,60,-16,-24,-3,-25,-23,-20,-4,4,-10,-5,-1,2,-17,-18,-19,35,25,-32,4,20,-6,-25,-25,-10,2,-2,2,2,1,8,-25,-1,12,-6,-15,11,-7,-18,-5,11,10,-10,19,-8,7,-13,-6,-13,-1,-8,1,0,-23,1,5,5,3,8,6,-6,1,-7,15,-7,-8,1,-1,-2,-9,-2,-6,0,-25,-4,-7,-13,-3,-4,-13,68,-31,-6,-7,-27,-10,7,-18,12,-1,12,-11,16,-12,20,-7,-4,-9,7,14,-14,-10,3,-10,-9,4,15,-22,3,-2,-1,-25,-26,0,8,-12,-19,-15,1,7,12,3,-21,9,-3,3,6,-16,-11,-1,-8,0,-4,-2,1,-2,9,1,-2,-8,6,-12,-12,-4,-7,0,6,-10,7,-6,5,2,6,15,-6,-2,-7,-8,-7,-26,5,-23,2,11,-25,-15,5,-26,8,-8,-10,5,3,4,22,-7,-30,0,16,10,-16,5,-7,-13,-8,-8,-2,-7,17,9,14,2,-28,6,-2,0,16,8,9,5,-10,3,-7,1,9,-2,14,28,-11,-2,-6,7,19,6,-7,8,-2,14,9,-14,5,-6,-8,22,-12,5,1,-4,6,14,4,3,1,18,10,-6,-8,-24,-5,-2,-4,-5,-15,-4,-5,-1,-7,-14,-11,15,7,2,-2,-7,2,-3,13,3,-12,-11,-1,10,-9,-28,2,12,-18,-3,-12,0,-4,-17,-6,-5,14,2,-16,-1,-19,-7,2,-16,-8,6,-4,14,-8,-7,-15,-6,5,36,-8,1,-20,11,5,1,-2,9,-1,-5,6,-21,-1,-7,9,16,-5,13,1,1,-14,-17,9,23,-10,14,-6,-4,-13,-9,-16,-21,-13,15,-21,-3,-19,3,25,8,-14,9,1,-9,-12,3,8,-3,-8,23,-5,-13,-16,-11,-6,-14,-15,-10,12,-13,-3,-10,19,-9,-18,-11,-9,-8,-7,-9,-12,-3,-10,-2,-22,-6,4,3,-10,3,-4,-1,-23,6,-2,-7,14,-6,14,10,-17,-13,-13,-13,-7,-11,-4,-6,-5,8,-12,26,-22,0,-9,9,-10,-27,-13,-4,3,0,11,-11,-1,25,0,24,-2,-5,-19,27,13,-15,-11,1,38,5,-3,8,-8,5,-14,2,-19,-6,0,-8,39,-10,-13,11,2,19,-11,26,-18,-12,0,4,-20,-4,-10,-16,-10,-17,9,-6,-3,-7,-1,-4,-19,0,-1,15,4,9,8,5,-2,-2,-12,-3,-9,-14,-4,-4,0,-9,-3,4,-7,-20,-5,12,5,-13,10,-3,8,2,24,-8,-10,-6,6,-20,11,-15,-9,21,1,-27,27,-1,-12,-17,10,-1,-10,-4,16,-7,9,2,22,-3,1,18,10,24,4,-1,-8,1,15,-7,-9,-13,-4,1,10,-8,-8,-3,12,3,-9,1,-3,-11,13,0,15,2,3,-6,0,2,-1,11,22,13,-13,-25,21,-1,-7,13,3,-9,7,-15,5,-29,-4,-37,-7,-18,-2,11,-2,17,15,-13,10,-18,4,-18,-8,-6,11,-1,-2,-17,2,10,-6,-21,2,-11,1,17,-4,-12,-12,-4,5,16,-9,18,4,1,8,6,-7,-6,-7,6,7,4,-1,-1,2,1,6,20,10,-26,2,-5,-3,29,-4,12,7,11,5,17,7,0,-9,-13,2,0,-11,-10,-16,-15,-1,9,-5,13,3,16,1,13,-1,-1,8,10,4,-12,-13,6,5,9,-11,-14,8,-3,12,9,2,-12,8,3,-2,-9,-12,-11,-2,-9,18,-22,11,-10,5,1,4,-10,-20,8,-1,-13,1,-10,-4,-7,-6,-12,4,-5,-12,12,-13,-25,21,-10,-15,9,-5,20,-2,14,-19,-9,7,-12,-2,-10,-5,-39,13,2,-2,-16,7,-15,-11,-6,-4,3,0,-15,-7,-7,-10,-11,-18,-5,-9,-21,-12,2,5,-9,6,11,-8,-9,5,-11,3,-4,-10,0,6,-21,5,8,19,4,-18,27,-25,-6,15,-4,-17,-23,-14,-7,-4,-10,13,-15,4,6,-5,1,-18,-8,-7,2,-10,-1,6,10,-1,-6,-22,3,2,5,-16,-11,-4,0,1,-10,-3,23,-14,-6,7,-30,3,20,-15,3,16,-22,5,-16,-7,-8,7,9,3,-20,-8,-14,4,4,-4,-15,22,-1,-11,-5,6,-5,4,9,12,12,7,-13,22,0,5,-3,17,11,6,-14,-5,0,-3,-12,-13,1,3,24,18,8,-19,13,-8,2,1,-20,-11,-1,26,26,-16,6,1,5,-8,-7,-2,1,17,-17,-33,8,16,-30,16,89,-24,13,8,-16,-3,8,16,14,15,-24,-14,3,-16,-9,4,-6,9,-1,9,1,-13,3,-4,-5,20,-9,5,16,-9,-10,0,-1,16,5,5,-5,-19,-8,-4,-8,11,7,14,39,-9,14,-13,-14,-5,12,-1,13,-5,2,-16,6,-10,-14,23,-17,1,3,-2,-18,-13,-8,-20,18,-2,-19,16,-1,5,-12,0,0,24,-19,-26,11,0,-12,8,-3,-13,-9,0,8,-13,3,10,15,-3,12,2,-3,-2,19,3,-9,15,2,4,-4,-3,2,4,-11,4,-2,1,-5,-5,7,-6,-1,4,-1,-2,-8,-10,-14,-6,1,-8,11,-10,-9,-17,1,-3,-16,-8,0,15,4,-13,4,6,-23,8,3,9,-19,-6,-6,1,-9,1,-11,11,4,-7,-3,-3,-6,6,-14,18,-6,-1,0,-3,-4,4,4,-6,-12,8,6,-17,0,-8,-5,-3,-2,-15,-6,-8,8,4,-4,-20,6,-5,5,0,0,-15,-6,-1,-10,-7,-12,-10,15,-7,-23,-36,-5,-9,19,19,-5,-14,-13,-11,21,-15,-21,-21,-16,6,5,0,-10,2,11,16,-4,-16,-11,-1,6,-5,-10,-2,-15,-11,18,2,5,1,-3,5,-1,-6,2,9,0,-17,7,-16,6,-16,-15,6,20,2,-2,-17,-2,12,-9,1,11,-28,-4,4,-11,7,-8,-4,-2,1,-2,-7,1,11,4,0,-4,1,-14,-3,13,4,-9,-23,17,-10,-5,-23,1,4,-8,3,2,0,-2,9,16,1,20,-12,8,-11,-2,1,-3,6,-8,-8,12,-13,4,-5,5,4,3,-10,7,-4,-2,10,12,10,-4,0,34,-7,17,7,15,0,-9,16,0,-8,-12,-2,-6,-7,-7,23,-8,-25,-19,15,-33,-5,3,6,4,-9,1,-11,-5,-6,-2,11,-8,-4,-31,11,0,-16,-1,30,-7,-10,-9,-22,-15,-9,1,-2,-5,30,-23,13,1,2,15,5,-1,4,-17,-11,2,7,-9,10,-2,2,-5,-9,-11,-17,-2,-1,-2,14,-2,-7,-6,-4,-12,3,16,-1,-1,2,-1,-17,9,-24,4,-12,-22,1,-5,-28,-29,18,-12,9,-11,7,-25,3,-1,-28,-3,-13,-7,-12,1,-22,-11,-7,-15,1,-24,13,-9,-19,13,20,-18,-13,1,-22,-9,-22,-4,-32,-22,45,-9,14,-6,-3,-5,31,-4,-13,-12,-24,-1,-6,9,0,-11,-9,-1,7,-2,-3,-5,15,-1,-8,-13,-16,-3,0,-3,-6,-5,-6,-8,-8,-13,-9,31,-8,11,-8,-16,5,-11,-4,7,28,23,13,16,26,-22,11,6,-13,-1,-5,6,-8,-2,-15,-7,-8,16,10,-4,4,-24,3,15,-23,7,-9,22,-5,7,0,18,-24,-12,12,-4,7,-4,4,1,-23,3,-12,-5,-6,0,-1,31,-16,10,0,7,11,19,-18,-4,0,10,-4,-19,-2,-18,6,7,16,3,-9,-5,10,3,0,-10,18,2,8,-10,-13,-15,-6,-2,1,8,6,0,-2,-3,-10,23,6,-5,-2,-1,2,23,0,2,-15,-9,-3,-5,10,-20,4,-4,-21,5,-17,34,17,-10,-2,-5,2,-6,6,-3,2,-9,-9,1,-14,-7,-21,-7,-9,-6,4,-15,-6,10,-10,10,7,11,-26,-12,-10,9,-24,4,-20,10,7,7,13,24,8,-3,17,-14,11,-2,1,-19,9,-16,-8,-6,-9,-10,-8,-4,-1,-8,-2,8,-3,12,26,2,7,-5,-11,-3,-12,-6,-2,-14,9,-4,-1,4,-1,1,-2,0,-3,11,-9,-28,6,-10,-1,-20,3,-6,0,10,-9,-23,-20,-11,2,-11,-12,-5,-11,-26,3,17,-30,-2,-3,9,13,-23,-8,4,-9,-8,-11,-1,2,-12,0,16,-12,0,1,-12,-15,-13,-13,-28,14,9,-19,-16,0,-5,-12,2,-7,-1,-7,5,13,27,7,9,20,-27,-22,-7,-7,-23,-17,1,-2,9,5,-6,9,30,29,-10,19,-20,11,-19,-9,-4,-20,-17,27,-5,20,4,4,-5,13,-17,19,-30,-3,-23,-2,13,1,-6,3,-15,-29,5,-13,-18,30,21,34,-15,0,-12,40,12,1,-13,-11,-4,-20,-8,0,-8,-11,2,-8,-4,-10,10,-2,-6,-14,3,-9,0,-5,-4,0,-20,-29,-12,6,0,-1,10,-4,-10,-16,22,-14,3,3,-4,19,11,0,-13,34,-14,1,-4,-7,-15,-18,-8,4,-7,12,18,19,2,5,-6,11,0,-5,-13,-14,-6,-1,-4,-6,-7,-9,3,1,-4,23,-6,21,6,-1,2,10,-1,7,-9,3,6,-3,-10,13,29,-1,10,-12,8,13,-15,2,1,15,1,-3,-8,-12,-20,-15,-19,-11,8,-9,-9,19,-6,3,-4,-21,-13,8,-12,-5,-9,-6,-7,-7,15,17,-13,10,-4,-8,-22,-8,10,8,-7,13,20,16,11,2,1,-10,5,-5,-13,-14,-5,-9,-3,-5,-15,8,7,5,12,11,6,-5,-3,0,10,4,-14,6,3,3,-7,8,-7,-9,-19,-13,-13,-4,-4,-7,-4,1,-11,-8,3,22,11,-4,-3,26,-29,-18,3,-7,2,14,5,2,4,9,6,-6,3,3,4,-14,27,21,-13,4,2,6,10,-3,22,9,-5,-16,18,-1,-18,-17,22,4,-14,5,20,10,-10,-1,27,-10,-18,7,5,-7,8,2,-3,6,-7,-5,-3,10,3,-10,-13,12,5,-3,-1,3,7,6,-7,-11,-9,0,4,-8,-16,-2,5,-15,-30,-2,0,-14,2,2,-16,-23,5,3,-3,-8,-27,-13,-11,-11,-8,-6,-14,-31,6,-12,11,0,24,13,-2,-2,-7,-23,-23,9,3,-16,-20,-11,-31,-9,22,0,8,-5,6,-19,-14,-2,7,-4,-13,-8,-15,-7,-12,-17,28,-8,-8,-4,-8,-10,-15,-11,-3,4,20,-18,-4,-11,1,-9,-11,-31,0,-11,11,28,8,-5,-5,1,15,7,4,-2,21,19,-18,-22,8,9,-2,14,11,-1,5,-7,7,1,-2,-10,24,-12,-3,-19,11,21,-1,15,27,-7,-20,1,-15,-6,-13,-10,-2,-13,18,1,-5,-7,2,-5,0,-17,8,9,-8,12,1,-8,-5,-13,8,-2,2,3,-6,2,4,-12,-12,-1,7,7,-2,5,9,3,14,-9,-12,4,-12,-16,1,10,-3,10,-21,-9,-8,5,6,2,1,-10,2,2,-2,12,-20,2,6,-7,0,14,-7,-4,13,-13,2,-10,5,14,-1,-6,8,-12,-22,-11,-12,-15,-5,-17,-14,-8,18,9,-21,1,-9,-3,-13,-17,-3,-12,4,-17,5,5,19,-12,2,1,-1,-2,-7,3,-16,4,3,-8,-4,21,1,6,16,-28,7,0,-18,17,-17,-2,-2,0,-10,5,17,-16,-9,16,-9,-1,-3,-5,-4,5,3,19,5,16,11,-10,17,-8,8,-5,5,-4,-1,-14,12,-20,27,2,-6,0,-20,0,15,5,-4,-28,-18,1,10,2,-5,-12,9,-13,-3,-12,-15,9,25,-16,4,-3,-4,-12,-3,-23,-2,-12,3,-2,16,8,-7,0,-5,8,14,-7,13,-21,-2,-22,5,-5,0,-11,-15,-7,14,-30,25,6,1,25,4,-15,3,-7,-9,-5,15,-12,10,-1,6,-9,9,-2,17,7,4,-24,2,11,-11,-23,4,4,-8,-14,-13,35,-7,-15,-12,-6,3,-23,7,13,-4,-3,15,-1,-9,-7,-3,19,-12,-13,4,-9,-1,-18,5,-20,6,-1,4,3,-4,0,0,-27,-16,6,-3,-4,-7,0,2,-19,16,-1,-2,5,-5,-7,13,-15,7,10,-28,16,1,17,9,-4,-6,4,-7,-6,11,-18,-18,-13,13,10,-16,23,-11,4,2,11,-24,-8,5,-16,15,3,-22,2,-9,-10,-18,-16,-24,0,0,17,7,-12,8,-6,8,14,-7,15,14,-18,12,-19,-5,-4,4,-9,15,-15,4,14,-7,17,1,-4,11,15,8,-11,9,-12,-8,13,1,-13,9,8,3,3,-3,-25,-21,5,3,13,16,4,3,-16,28,-11,-11,5,2,-37,-13,-2,-1,42,-16,28,6,-11,-7,-1,-5,-2,-10,-15,21,2,6,-4,-4,-7,-25,-20,-41,9,-18,-9,22,7,-10,0,-2,15,-18,-8,39,-8,19,-25,17,-4,-5,-6,5,6,-12,9,-2,-28,-11,-17,11,8,-2,-13,0,-15,0,-13,7,-6,10,4,9,7,0,-7,6,-20,1,-18,2,9,2,-20,-3,-12,-16,14,-12,-16,-6,21,-7,-11,26,-16,16,-1,-10,0,-24,-7,-11,-17,-27,-6,3,-21,-15,-21,-4,-22,-34,-1,-27,-17,-13,2,0,3,-8,-11,8,7,11,8,9,-5,3,-26,13,-3,9,28,-13,8,15,-15,0,-14,-19,0,5,11,15,-3,8,-13,-9,-5,-7,-11,-11,6,-7,3,2,-4,5,-18,13,7,17,1,-16,-4,-4,5,-18,-27,16,19,9,9,9,7,2,0,9,4,-29,-15,4,-11,-14,8,1,9,-24,-2,-6,-33,-34,11,-8,6,-1,3,22,-11,-13,28,0,11,-19,16,4,1,5,-25,-8,14,14,2,-9,6,6,-2,4,-9,2,-6,5,27,6,-3,4,1,-8,14,-8,-3,-17,-10,-13,-4,-6,-14,-11,8,-20,-4,-5,29,-13,33,-3,-26,-3,-8,-14,-10,-24,12,-19,-8,1,12,1,26,16,2,-21,19,4,0,6,-7,-5,-2,2,3,5,7,-10,-23,8,-23,-3,-12,-3,5,-6,3,6,-4,16,5,1,-20,-13,-15,-27,14,-3,-1,-6,-4,1,25,21,-5,-2,-6,-3,0,19,8,0,17,4,-26,-13,-9,-11,8,-2,-7,-12,-2,-15,9,6,15,-4,23,5,-10,18,-6,2,-10,-7,-1,3,-9,-5,2,9,4,-3,-24,-9,-17,14,13,23,-15,5,3,-8,-5,-2,-1,-10,-25,-17,-18,14,-21,-17,7,-3,-6,9,-6,-9,2,-5,-4,-13,-13,-11,-3,-6,-9,-3,1,18,2,0,4,-3,-15,-12,3,-6,1,6,6,4,-19,16,-2,-4,26,7,-20,26,-20,-13,36,-4,-9,8,5,-9,13,9,38,-5,-1,17,-21,9,-6,0,-4,7,-21,9,-5,-9,-7,-6,31,-6,2,16,-2,-1,-15,-29,4,18,8,-8,2,10,0,-15,5,-18,-12,-7,-24,-11,-24,0,-13,2,10,8,7,-2,-6,2,11,13,-1,0,-11,-11,-8,-8,-17,-12,-17,40,-2,-16,-20,-3,16,-21,-16,-12,-3,11,-11,-20,-8,1,-5,-8,-25,-27,11,8,-20,-4,-17,8,19,-14,-1,9,-5,7,-13,-5,7,-8,2,-9,-10,-19,18,-1,31,-16,-5,-8,11,16,6,-22,-2,15,-14,-10,5,-7,-7,-13,-2,-5,-3,12,-11,15,17,-19,9,9,12,-27,7,-3,-15,-20,-18,-12,-7,-12,-18,-29,-21,-4,-21,-9,-13,-3,26,-12,-6,0,3,34,4,-4,-4,-12,-9,-8,2,-34,1,-14,-26,13,1,15,18,9,17,25,-23,-8,-17,-5,3,3,9,-11,-18,1,6,2,2,-1,2,3,-13,0,7,9,14,8,-4,8,5,-10,-5,-4,-1,9,9,19,5,18,9,14,17,0,3,19,-10,-7,-16,-22,-15,-2,-8,8,10,-16,-10,2,-16,-23,-10,-28,6,0,-18,-15,5,3,4,12,1,4,2,4,-13,-14,0,-7,-1,3,-15,-13,2,-11,-9,-7,1,5,-3,0,-12,15,-2,-10,14,-3,-21,-2,17,-3,-13,1,-22,2,4,14,1,-1,25,-10,-20,1,35,3,-11,2,-2,2,-4,-17,-18,-6,32,-11,-9,-13,-13,-2,24,2,-7,-1,5,15,-1,-10,-15,-18,-17,-16,19,-16,7,19,-11,-13,7,9,1,7,-2,1,6,17,-14,-9,15,-13,5,20,2,-6,-1,-7,-9,-28,-13,0,-2,10,-17,1,4,-12,15,16,-16,13,-6,-9,4,-4,4,6,-7,-3,-3,0,3,-19,-1,19,-7,16,4,0,-4,15,1,-16,3,9,13,-3,-11,-19,0,1,-15,18,-15,-9,0,3,-22,8,13,-24,-4,-10,-8,10,25,-2,9,-11,3,22,9,-9,-1,16,9,7,-7,1,-7,11,-17,-14,-14,-12,-15,-2,-1,-19,0,-17,7,-9,-23,29,4,-9,0,4,-15,-29,0,10,-17,-2,9,-12,3,-12,-9,7,34,-1,24,30,-20,-1,17,2,-18,9,-11,-14,2,11,9,8,12,6,-3,0,-28,-5,-16,-13,-3,1,-19,-5,15,-8,-4,-20,-8,7,19,11,-5,11,5,9,-7,-16,-21,11,-20,-11,-9,-29,-2,12,-8,-17,6,0,-1,-9,3,-23,-8,-19,-17,-16,4,10,7,22,-13,-26,-3,-13,-16,-11,-6,-19,16,-4,2,5,3,10,8,3,0,-2,-20,-14,4,3,-21,-6,11,5,-13,8,3,-9,-9,17,-3,-1,-5,-22,-3,-10,-3,1,-1,-8,-3,0,3,7,2,-1,20,-6,-14,11,-14,3,6,-8,-5,-7,-10,4,-14,-10,-4,-4,-18,16,-7,3,7,-8,-2,-2,-23,7,-14,-12,11,1,-6,-6,1,11,13,5,-4,6,-4,-8,-8,12,-9,1,4,-20,-21,2,15,-6,23,9,2,7,-5,-6,14,17,8,1,-10,-9,-22,3,13,-3,9,-3,-7,10,-4,-1,8,-7,-32,29,-13,-20,2,0,-4,-2,4,-15,16,9,19,6,-9,-17,4,36,-11,4,17,29,-10,-24,-4,24,6,19,4,-19,11,-4,0,-20,-17,-10,-14,3,-17,-5,-1,6,-5,22,-11,8,-5,-4,-18,-13,-12,-4,18,-13,-14,-9,-6,15,1,7,-8,25,-10,-10,1,5,7,-3,-2,-24,-2,-6,8,7,16,0,-11,5,12,-18,-33,-34,1,-13,-11,3,19,6,-4,-13,11,-5,-6,12,-5,-13,-5,-9,13,4,8,24,-8,-17,-15,1,-13,-17,-6,-19,9,-12,-3,-13,-1,4,-24,6,4,-5,1,2,-2,-34,4,-18,-3,-14,-7,-14,7,-19,-6,-3,-6,-2,12,8,-15,-14,3,-1,1,-2,-3,12,12,-6,-25,-20,-4,-4,10,-7,-21,-20,-2,-14,21,14,-3,-29,5,-11,-18,-18,5,4,-4,13,-19,-20,-18,48,-5,3,9,-11,23,0,-23,-14,-22,3,-30,4,-24,-21,-16,1,1,11,2,-4,10,5,-21,-25,18,14,-27,-3,-11,-4,-20,10,-10,19,4,-5,17,4,-2,22,11,0,-5,-4,-9,-8,-4,22,1,29,0,23,18,-2,-7,0,-11,-8,-12,1,7,-6,8,3,-15,19,-7,-11,-19,-11,-6,-23,-14,7,-15,-5,-23,-7,-22,-2,-4,12,12,-9,-14,-5,-12,-5,-9,15,-18,-8,-16,-9,-20,-15,-18,-7,5,-11,-3,-7,9,-1,8,-2,-18,-4,-16,4,11,-8,-11,-10,9,-12,-12,14,-5,5,-1,-1,8,-6,4,-13,-13,9,-2,6,15,-7,-5,3,4,-1,-6,-7,0,5,1,6,3,16,-8,27,-12,8,1,-6,0,-10,-8,10,1,2,-11,-2,2,-9,-3,6,1,15,2,-16,-15,-1,-7,7,-14,8,-6,-11,-15,-8,-12,-6,-5,4,3,-13,7,-8,21,7,-4,4,6,15,16,-14,3,1,16,-10,-10,2,-7,7,10,7,14,-3,13,4,8,-7,18,9,13,12,-2,-5,-7,-5,-2,-9,-12,8,11,-14,0,-15,6,4,-2,11,-2,-5,-3,-4,-27,-4,14,-8,5,-20,9,6,-7,-1,-1,22,-1,-11,13,-10,-23,-1,1,-11,7,-21,10,8,-11,-8,-12,24,2,-18,-10,-12,0,-9,-13,1,-21,-16,-14,4,-4,-17,-10,-7,-9,-7,-6,7,6,-3,-8,0,-5,-7,0,9,12,1,-4,8,-7,-2,-5,21,0,3,-6,15,-6,-14,-6,5,-3,17,-10,13,1,-5,11,14,5,-13,17,1,11,8,4,9,-1,-10,-7,17,-3,-19,11,6,4,-7,31,-7,-13,4,1,5,12,-10,-27,2,18,-25,0,-13,-12,-6,10,-10,-8,10,-8,17,-5,-21,-11,-13,0,-1,5,-5,20,-1,12,-8,-13,0,1,0,14,-14,9,0,1,-18,-2,6,-3,-13,7,18,-8,7,28,3,18,15,-1,-12,9,-10,8,3,12,-10,-7,-3,-12,2,-12,13,-12,5,-6,8,-10,-12,4,-18,-2,-7,3,3,-19,7,-17,-12,-23,10,-20,-19,18,23,8,-31,-15,19,-12,-27,2,-6,-22,-23,-16,-6,13,-12,-7,34,11,-25,15,15,-2,-6,5,-11,-11,-13,-9,-19,13,-1,12,12,6,-27,-3,-12,-15,-7,24,6,8,0,-11,-21,8,-6,-13,-9,-7,-16,-13,12,-14,3,-17,3,9,-13,9,-2,2,-9,-17,-6,0,-5,-16,9,-3,14,-4,9,3,-20,-7,17,-6,-22,13,-2,-6,-9,-8,21,-10,-10,-3,16,-10,-13,2,2,8,-11,-7,0,-11,-14,-2,13,-3,-7,2,14,-22,-15,4,1,5,3,6,2,-7,-10,-4,-5,-16,-16,11,-6,-5,-10,-24,1,-14,8,9,-23,9,-10,-12,-7,0,3,-8,2,13,10,-12,4,-19,-1,18,-8,9,-5,-5,-1,2,5,25,9,17,8,-11,15,-4,0,3,0,13,-1,-1,-12,-16,-11,-10,17,-2,5,11,0,12,-11,-10,-4,12,0,11,5,-1,-11,9,9,-15,1,-11,1,5,0,-15,0,14,2,4,-1,-7,-7,29,8,-15,10,0,-14,3,8,-7,12,-3,-24,3,10,0,-21,-21,-13,-17,-33,-30,22,18,-6,-7,13,-29,-33,-11,3,-6,-17,-13,-12,-18,-29,-23,33,13,-4,-16,31,17,-12,8,31,15,-9,-3,12,-17,-21,-19,4,-10,6,3,-3,20,16,10,-4,5,5,14,4,-9,6,-14,-10,-5,4,5,-29,-7,-3,-2,-17,-20,1,-13,9,-9,24,0,-7,15,1,-5,23,-1,-12,17,9,-19,-7,-1,-4,-18,-27,-7,2,9,-5,-8,2,-1,-5,18,1,-23,-1,-9,-5,-10,5,-7,5,-15,3,-20,-15,5,-14,26,-7,-9,-8,-11,-12,-15,-1,-2,9,-8,12,-11,-17,6,-12,-8,-12,5,12,7,-16,-6,-6,7,-6,6,12,22,-3,0,-17,-10,8,-9,18,2,6,7,4,-8,-15,16,-5,-2,15,14,-9,3,13,-5,2,15,-7,-10,5,-4,-8,-6,-2,-5,-7,2,19,12,5,-7,-6,3,10,-11,3,15,-16,7,-2,-1,-14,-1,-4,17,10,4,-20,-2,2,-13,-15,-11,-33,-9,-12,-13,-7,7,13,-14,-13,16,3,-9,-3,12,-3,-6,-10,6,-7,9,13,11,2,2,4,-11,-8,-16,-10,3,-8,18,-18,0,-4,14,0,-5,6,1,2,-16,-16,9,-11,-10,8,1,-3,-1,18,5,-23,8,8,2,1,-19,-4,1,9,-6,16,-4,6,-4,5,-7,0,-6,2,14,10,-2,-8,12,1,-30,14,12,-7,-11,-7,-8,-7,8,4,-23,-15,1,-10,1,-8,3,8,2,-13,8,17,7,-7,1,4,-9,1,-16,-23,-10,0,5,17,-2,-7,13,9,7,-2,-7,-3,15,4,-23,-16,-7,-6,-16,-15,14,0,-6,0,5,-11,12,-9,-2,-4,-5,-11,-3,-7,-12,0,-12,2,-12,4,15,-7,25,0,11,7,8,12,23,15,-18,2,-4,5,-16,9,-3,-13,0,-7,-14,-19,16,19,7,5,7,-3,-2,-5,4,10,-3,-3,-15,9,-8,-7,5,-4,-2,-3,8,5,-4,0,-9,-4,18,11,-2,6,5,-11,1,-8,33,2,-12,1,-5,4,-7,24,19,-14,15,-17,-1,-7,4,-15,-8,-6,-4,-16,12,1,17,5,-2,-19,0,-4,-15,-13,-1,4,-9,-8,-7,-14,26,9,-2,6,-5,-16,-1,4,-23,-15,-22,-12,-13,-2,-8,4,-13,15,4,2,-11,-5,11,16,-10,-8,-13,-12,4,-7,-21,1,-8,10,17,-2,-9,24,11,13,-4,-8,1,4,-2,11,6,-4,6,-11,-7,-10,15,6,-11,-17,-6,1,11,-12,-3,-5,-15,12,12,-18,-8,-10,-3,-25,-16,-4,-19,2,-13,3,-8,-19,-5,12,9,-13,-8,-4,-1,-8,-2,1,-14,-2,-7,2,-14,-7,-19,16,-9,0,5,-13,-4,6,7,5,-6,3,-1,0,1,-14,-7,-1,-6,-3,20,3,6,10,-7,3,-7,11,8,3,-14,4,8,-4,6,-8,-4,-14,18,5,-2,-13,-3,-5,-13,-3,-10,-2,-5,12,-9,2,2,-10,10,-27,-2,12,-20,-6,-9,3,-9,-16,3,15,4,12,-3,-12,-5,-19,-20,-4,-2,-9,-19,-1,-27,-14,-10,2,-6,27,11,-20,3,-24,-1,2,-5,-1,-16,8,-15,-13,4,-5,2,-7,14,8,8,-25,-10,-8,2,-13,-14,3,5,9,-7,25,2,-19,-3,-9,-3,-27,-12,-18,-6,-16,-18,-1,-7,-3,-7,8,6,-12,7,-15,-1,-29,-7,-10,-7,-2,-4,6,-23,-10,9,27,13,-12,-8,-6,7,-27,-37,-8,15,-1,-10,15,-19,-6,-5,5,10,-14,-1,-4,13,-10,-30,-19,39,-12,-16,8,-19,11,-5,9,5,12,8,9,0,-15,-13,15,3,-2,-7,10,15,-4,-7,2,-3,14,-1,-9,-5,4,-6,-18,-14,3,6,-7,-5,-8,2,-10,1,19,-5,-31,-17,5,-3,3,4,19,10,-8,18,-1,23,10,8,20,-11,-12,-13,18,-11,-10,10,11,17,1,5,2,-9,7,-12,7,-19,2,2,26,-13,4,35,-1,15,-2,-20,4,-25,-4,-4,8,-18,-5,-29,-16,16,-23,8,1,16,-15,-2,24,-1,-1,-2,8,-24,-3,-11,-8,-11,-12,-5,3,0,-19,-11,8,1,-22,-21,4,-18,2,-7,-20,-24,-32,21,18,3,8,2,-17,3,5,-25,-2,-11,-13,8,-19,-5,-28,4,24,-3,-1,-19,-7,-10,-14,-9,9,-10,-6,-28,-16,-10,-8,1,3,1,3,-2,5,10,2,-8,-16,-16,-6,-10,-2,17,-5,14,-19,10,17,-6,-6,-14,8,16,15,-9,-16,5,-1,-4,-9,-3,8,0,5,-2,-3,-10,-10,1,10,-14,-8,-18,-1,-12,-15,-2,20,9,-6,0,-2,-1,3,-18,-12,-11,-18,-1,-27,9,1,-17,3,-6,13,4,-10,-12,-10,-10,0,6,2,-18,-6,1,0,-13,-7,7,4,5,-2,2,15,-8,27,5,-12,-14,3,5,4,-14,-14,10,-20,4,8,2,31,-10,8,-5,-3,-1,-12,-6,-17,-1,-9,8,14,-1,3,-4,4,-1,16,-5,-5,-4,10,-15,-14,10,11,15,12,1,-3,1,-21,9,15,0,-22,14,-5,2,-1,23,-17,8,18,-7,-12,7,-1,-8,6,6,12,14,-9,5,-5,13,12,6,-8,12,3,-8,27,1,-10,15,-5,2,-4,-11,-20,-21,1,-19,7,-3,-6,8,5,14,10,-9,-15,-6,-6,-3,-22,-18,14,-6,-16,8,4,29,-12,-14,-12,-20,0,3,5,-28,-12,18,-9,-14,1,-8,-15,-11,-34,-11,-23,-9,-12,-13,13,-17,-9,26,-6,-13,1,-9,12,-3,-16,-21,-16,10,-11,5,14,-13,-15,9,-2,-18,-21,-10,4,-21,-6,6,8,13,20,20,2,8,14,-8,0,13,9,0,7,1,-21,10,3,10,-17,2,-10,9,-12,-10,32,18,-10,11,-2,9,-7,-11,10,-3,5,-4,-14,16,-14,3,-12,17,1,-3,6,-3,-8,-29,5,0,3,-7,-4,11,-13,-18,-12,19,6,-4,7,-17,-15,-15,5,26,13,-2,-2,-1,0,16,5,5,-8,4,4,-6,-1,11,-3,-11,-2,8,-10,-9,-1,1,-11,-2,-6,-7,3,-14,-7,3,19,4,14,7,-18,-11,-5,-12,10,-8,-8,1,16,0,23,-26,12,13,-23,21,-10,-13,-13,2,3,6,3,1,-16,-20,20,-12,-5,4,4,-1,-6,10,-11,16,5,-2,-10,-1,15,-23,-7,4,-13,-2,18,-22,-19,-5,-9,6,-10,4,-20,-1,38,-5,-5,7,-24,-4,15,-20,-13,19,1,21,2,4,8,6,1,-10,-13,18,4,18,15,-1,-12,-7,-5,-12,7,-7,-1,1,10,-10,-8,5,3,14,-9,-7,-3,-11,1,-7,-11,3,-19,8,-1,-6,0,-10,7,-4,-4,-13,-3,3,-3,3,3,-7,-18,1,-8,-15,-1,-4,-3,-12,4,-5,-10,0,-3,-8,-5,0,4,11,-12,20,-5,9,-18,-31,6,-15,12,6,-21,6,-11,-9,33,9,5,18,6,-15,23,9,-28,-1,23,12,-6,-10,10,-15,19,22,-16,-2,-21,2,5,29,-32,11,0,9,-2,-2,4,-14,-1,7,-9,6,-24,15,16,-1,-24,0,-2,-5,-3,-2,34,8,3,8,2,-6,-2,-1,12,-33,8,16,11,-6,-2,-8,2,-13,13,2,2,8,-5,-3,-15,-34,-8,1,-6,-17,-5,-29,-13,-9,48,8,-12,-4,4,-7,3,-10,-13,18,-14,-9,-5,-13,-11,-2,-6,-2,-1,-13,-18,-7,-14,2,-30,9,-18,6,7,7,-6,-4,-2,-1,-1,0,8,-2,-17,-10,-7,-2,2,11,1,4,12,10,2,-6,7,-12,-5,-2,3,-20,4,8,-1,10,6,0,-12,-10,10,-17,12,4,13,-25,-13,-11,-1,17,-17,-10,13,-11,-3,0,-22,-6,-14,-13,-17,0,-6,2,14,20,4,-19,-8,-16,-2,-8,-28,-20,5,-10,-7,12,27,9,-8,-4,0,0,15,7,1,-13,-20,-21,1,-7,-4,-8,18,15,-10,-11,17,10,8,-4,6,10,-6,-3,-2,-19,2,-17,6,5,8,2,7,13,4,-14,-1,10,1,-6,0,-10,26,-18,1,6,-18,-8,-10,4,-18,-5,9,0,-8,-5,4,1,-3,17,-10,15,-15,-8,-1,-1,9,1,-16,-4,-18,10,-4,-32,-3,-4,-1,5,9,14,-5,-3,-10,1,-3,-10,-14,3,-1,2,-5,-11,-7,-5,-7,-4,-1,-3,-10,15,7,8,7,7,1,-12,19,-7,-5,10,13,9,13,-21,-6,-6,-15,-1,1,20,-21,-9,-18,1,9,-5,1,4,0,15,-5,-12,7,4,5,0,3,9,-15,-10,2,3,6,8,14,-15,3,-6,-17,-11,-15,24,-5,-11,-15,-14,-1,1,1,-1,-2,-23,-18,-4,-5,-5,-23,17,1,10,-20,-23,-7,-7,-18,-23,-1,0,-3,10,-3,10,-6,28,2,-8,7,-6,6,0,33,0,1,-12,-4,-5,-8,8,-6,18,-3,9,-10,14,-23,6,-2,11,6,7,-2,6,8,-2,-17,-11,-11,12,27,-13,-9,8,12,6,-4,-12,4,2,-14,-4,-5,0,-18,3,17,-15,-1,10,24,18,9,-1,17,6,-1,-6,-13,8,-26,14,27,-11,-2,-1,-3,-21,-2,-1,7,6,-20,-5,-20,-14,-14,-7,11,-9,-4,-30,20,-5,-7,-18,14,1,-3,21,-19,3,16,7,8,-25,-15,-22,4,-8,10,-17,-15,7,0,-8,8,-3,-12,-7,0,-5,-7,-11,17,3,14,-7,-13,-4,23,-12,-2,-13,-11,16,-8,-12,-2,12,10,12,-7,-18,-1,-13,20,-23,-5,-35,-9,12,-3,-23,-1,-6,0,7,1,13,-11,3,11,1,13,-12,-24,9,-12,2,11,-27,3,-7,0,3,-10,9,12,4,-13,7,-2,-12,15,1,5,-18,3,13,-7,-2,-17,-7,-9,19,-2,-1,-13,11,-18,-16,12,-12,5,11,-9,2,-4,-12,14,15,-9,-4,-10,13,-8,-14,12,-7,28,1,-14,-11,-7,0,9,3,-22,-9,1,12,-8,-26,-6,-22,8,19,-10,-4,12,9,-1,-13,1,6,-1,-5,-2,-8,13,-16,1,3,2,16,-2,2,-9,17,4,-7,-8,5,11,-8,-3,-12,-13,-4,29,4,1,-32,0,-19,3,-7,-15,2,-1,-12,-1,-8,2,-19,-6,22,15,-10,1,13,-13,-12,-2,16,3,-16,-4,-4,13,-14,-3,-2,9,4,-5,-6,-13,-6,-5,-8,-6,-22,0,1,-5,-14,-9,-3,16,3,5,-10,2,-4,0,-6,-1,-17,2,9,11,-15,-15,-8,-5,-16,-2,0,-1,23,15,-23,7,8,-1,-28,20,-11,-2,-25,15,-17,-6,6,19,-6,-13,-8,5,-19,-1,-28,0,-11,-6,2,15,-2,-15,10,28,10,0,5,4,-6,1,4,7,11,34,-27,-12,2,-11,-15,-2,3,2,-15,-9,-27,11,19,-2,1,6,-3,-26,-12,1,5,-18,-4,-7,1,-15,-14,9,6,-10,4,-7,-13,-12,-26,-6,14,2,6,-3,-10,-21,-19,-6,9,-6,-1,-26,-17,-17,12,-14,9,0,-5,-7,-15,8,7,-9,8,-7,30,-9,5,-15,-2,6,15,-3,12,2,7,4,6,10,11,7,29,-1,-6,-17,0,-11,3,-13,7,-9,1,-25,-10,21,23,2,-4,12,2,-11,-4,-1,-1,-15,-12,1,3,-11,-11,13,-1,-6,17,2,-4,-7,-8,-22,0,-12,-7,-9,-23,1,-14,6,32,12,11,-31,2,-24,13,-17,-25,-18,-4,-7,-21,3,1,-22,31,-12,-5,-21,22,-11,-10,18,4,7,3,7,6,9,-10,-2,-19,-22,-11,-10,13,2,-5,8,1,6,6,-8,3,-10,-3,-9,-9,-8,-11,-11,-2,1,4,-7,-8,-3,11,-1,15,-6,-4,11,0,0,6,0,3,1,-1,-12,-15,-7,-10,-4,7,3,-9,11,9,-9,9,4,7,-6,12,-1,-5,-16,-7,-1,-12,2,24,-4,11,11,1,-6,-2,-3,0,15,17,-19,21,-2,11,11,-9,16,-10,-10,2,-4,4,0,3,4,-6,-2,-6,5,4,9,-13,8,2,-7,9,-18,9,-7,-1,-2,1,-2,9,1,15,9,-4,11,6,6,-3,-10,5,6,-10,-21,-24,-6,-3,1,15,0,-6,2,-2,6,-5,-14,6,-9,-7,-17,-14,-2,-5,3,-21,3,-2,-10,-1,-15,-14,-5,0,-4,-13,-8,-5,-13,6,-7,-9,8,-15,14,-20,1,4,-20,-9,-18,21,17,1,6,-2,-8,-2,9,-22,8,-8,-14,-22,4,-15,-17,41,6,-24,4,-16,-6,-14,-3,-17,-21,-11,-9,27,17,0,-21,27,-12,-39,-4,-19,-6,-27,10,2,-7,-11,5,6,2,-1,-11,-9,6,-8,3,-5,-11,-11,14,0,-14,7,-14,-11,8,-8,3,-12,1,-6,4,8,-13,-13,11,-14,9,-1,-14,4,-10,-2,-19,-5,8,10,-8,15,-11,2,6,-17,13,-7,7,-14,-12,-11,-15,6,8,-2,-3,-9,9,8,7,-13,10,-5,25,4,1,-8,34,0,-9,-6,4,-23,-2,-27,-22,-4,-3,-22,-6,17,1,-6,-23,-13,4,-13,3,-17,2,-17,-5,11,-8,0,-9,-4,-5,-14,-2,-20,8,-21,8,6,1,-9,3,-18,-12,1,4,-9,-11,2,-23,-20,24,6,2,8,-4,1,-11,5,-7,-18,-8,-1,-4,10,-7,-25,-6,15,5,16,5,21,3,-10,1,-21,33,-3,5,10,25,-6,-10,9,22,-4,-5,-1,-13,10,20,6,-16,10,17,-2,2,-2,12,-15,-15,4,0,-9,-1,3,19,20,-8,-5,15,-6,17,-16,8,-2,-14,11,4,-6,3,-5,-1,13,-4,14,9,-10,3,-8,-5,-4,-7,2,13,-15,6,-3,-10,5,2,0,9,0,-13,4,5,-4,-20,8,10,9,-12,-15,-6,-12,-15,-13,-10,6,-1,4,-1,-1,-13,1,-1,-4,-14,5,2,4,23,2,-8,16,4,9,-9,-11,-9,2,8,-7,-6,-2,12,15,26,-2,-7,-1,-1,-10,10,-9,17,5,6,-10,-6,-6,15,20,30,20,-20,-3,8,-4,-11,-11,-5,-8,11,-4,-8,3,-5,1,11,-9,-5,-8,-7,12,-3,-5,-3,9,-11,-18,-3,-10,0,-13,15,-7,-16,-18,-20,-6,-2,13,-4,-3,-14,-20,15,-19,1,-20,-1,-13,-5,6,-11,-19,-23,15,18,-11,0,33,-3,-7,6,7,8,-5,7,-19,0,-12,-18,-2,-5,-8,0,9,2,-8,-7,5,-19,-15,-6,7,-3,19,-1,-14,-18,1,-7,-3,9,-2,-15,-10,-27,6,-5,19,22,23,8,-12,-9,-8,-4,-16,-10,-6,21,-6,-14,4,-8,4,28,1,2,-13,-11,-21,-16,-16,-22,-21,-6,-18,-19,-4,-1,-12,-5,-14,-11,18,7,-27,-16,0,-9,-2,-5,20,-10,-13,-7,2,-2,-17,8,-7,-12,-17,-6,-3,-5,-5,-10,7,-12,-14,-21,22,-29,28,28,0,0,-5,-6,-15,1,19,-4,-5,-21,7,-13,6,0,8,12,10,-4,-14,-8,-14,-16,-10,23,0,-11,1,-31,-9,-8,-1,-3,-4,-25,-12,7,-12,-15,-16,-12,19,-10,-15,-24,20,-2,-8,-21,-15,-4,6,-22,-18,-2,-10,9,16,16,-20,5,40,6,3,17,19,-12,5,-1,-7,-30,-35,5,-10,-7,-2,-1,1,-1,-28,14,19,-14,3,28,2,-14,-23,0,14,-9,-14,18,-8,-8,-18,-16,0,-5,12,8,-8,8,-8,0,33,3,-5,-14,-8,-32,-14,0,-13,-14,3,1,4,-2,-7,16,11,3,-2,-6,5,7,27,-8,-16,-17,-4,-3,12,-5,12,4,-20,5,8,6,0,-18,6,24,15,7,-2,-11,-13,1,2,13,-27,3,40,1,-14,-10,-19,-3,19,30,1,4,17,1,-12,3,2,-1,14,-6,4,-11,-9,0,-17,10,-8,19,10,3,2,-5,-7,4,1,11,0,-9,18,15,-6,15,-6,14,8,13,2,13,11,5,2,4,-5,-2,4,7,-2,-5,10,6,12,4,-8,-16,-10,-6,-3,15,-6,0,-16,-5,3,5,16,2,-10,21,-4,-2,14,-4,10,8,-8,0,-5,-19,9,11,-4,-4,3,16,-8,-6,18,-1,6,-5,0,11,-5,-4,-9,-5,2,10,-8,5,-18,-14,13,-5,24,0,2,5,-9,-1,-23,-7,-3,-12,-10,-10,4,8,12,12,7,-14,11,-20,-10,1,8,-11,1,19,4,-17,1,2,-11,-3,-11,-19,-12,-34,2,-1,-15,-9,-12,8,-2,0,-14,6,2,-6,-22,-24,15,-6,1,-2,-26,-2,-12,-8,20,-9,12,-4,-16,1,-13,-8,4,-5,4,17,-14,1,-7,-20,14,16,7,5,-17,8,14,2,-12,0,-2,-13,-14,0,-3,-4,1,18,12,-5,4,8,4,-4,22,0,-3,3,1,-8,3,-7,0,-5,8,-2,-12,-2,-14,-14,-6,-7,18,-1,-9,-1,-25,-13,-13,14,5,-6,-19,11,-4,-10,25,12,14,-7,2,18,-11,8,0,4,6,1,-11,8,0,1,0,18,-8,18,-11,-3,-2,-4,-9,12,-3,15,2,-2,5,1,-19,4,-15,-11,-14,5,-2,-6,-7,9,9,2,0,-5,1,-8,0,10,5,-5,19,-8,-7,10,-11,-8,6,15,5,-8,-19,8,-5,12,0,2,-4,-6,-6,6,-1,-8,-5,1,-8,-1,-4,4,36,-18,0,6,7,-9,-4,20,2,1,-13,14,4,0,1,-8,24,-4,5,5,-10,-23,4,17,-11,-1,0,1,-6,0,9,-6,-11,-15,-8,-9,2,13,-4,-8,-10,19,9,-13,10,1,-18,-12,5,10,-10,4,3,-6,-20,-8,-5,-2,-5,-5,12,8,5,-1,-5,5,-16,-1,-9,5,-13,-15,-8,-5,-16,-8,-19,-7,-12,-11,-5,20,3,2,14,-9,-2,-13,-10,-22,-9,-3,1,-8,3,14,-20,5,-9,-1,-27,-13,-10,-1,-21,12,-6,-9,1,-5,1,2,2,4,-15,1,-12,-9,-14,-2,-16,20,-21,-1,-6,21,-2,-11,20,7,-7,10,-9,7,4,17,10,1,5,9,4,3,15,-18,-13,-5,6,-1,-3,-1,-8,3,-13,-1,1,8,-13,3,-9,-13,-12,4,-22,5,28,17,22,0,-28,-22,-25,19,5,4,4,8,-20,9,-25,-12,-5,10,-1,-18,-38,-11,-13,17,-3,0,-5,28,-4,23,-9,13,8,11,-4,1,-32,-14,-21,8,-12,6,-8,40,-13,-8,-15,-17,-2,-3,-8,-3,-15,4,-10,14,-13,7,-17,-19,-19,-14,-16,-5,21,26,8,-11,1,-1,-9,-6,-20,-7,-22,-16,10,11,13,-15,-8,29,1,-22,2,-2,-21,-3,-18,0,1,-4,4,1,7,-2,-9,-28,5,-12,-28,-10,11,0,5,-16,1,-1,-7,-10,1,10,2,15,2,4,0,-12,-4,15,-17,4,-21,7,-10,11,12,-19,0,-8,-21,18,-15,6,-15,2,2,-2,6,8,-2,-5,19,-12,-8,-2,-9,-4,-8,-11,-10,-4,7,3,20,11,11,10,21,-6,-6,-10,-4,-5,-9,-3,-23,-10,2,4,-6,-7,5,1,-5,5,-9,-14,-2,-5,-21,3,5,-27,40,-10,17,5,-12,-23,-7,4,-24,-9,3,15,5,9,12,19,24,-6,16,6,13,5,0,-4,-6,-34,-19,6,-3,-7,-19,-11,15,10,13,1,17,-15,10,1,0,-6,-9,1,-10,-1,10,-19,-5,34,20,-20,51,-4,9,8,-4,-19,-32,-9,-10,-13,10,-6,-16,15,-12,-17,24,21,-13,9,-7,-20,-22,8,-2,-29,-9,6,9,-10,-1,-14,2,6,-27,-9,-20,-3,31,2,33,6,-7,-17,-1,3,3,11,8,16,-15,1,-16,8,-10,-3,1,1,3,-3,1,-6,1,5,-6,8,-16,-4,2,17,-7,16,-11,-2,-11,-6,-13,0,-14,-12,-16,-12,9,-7,-14,-10,-5,13,-11,10,10,-11,-11,7,-12,-11,-18,-21,-1,-7,3,-4,-35,1,-10,9,14,12,-2,-15,-9,-9,-2,-20,-7,-8,11,14,-17,9,10,4,-17,5,-13,10,-12,-2,-13,-8,0,-1,-28,8,-6,-13,-8,-1,3,3,9,13,-5,-6,-9,11,-2,12,-9,0,25,3,-12,14,-5,8,-14,-6,-7,-17,-11,-24,0,9,-5,-10,5,-5,-27,32,1,-2,-7,2,9,-12,-1,-11,6,1,40,-8,-8,-7,-16,-6,-13,-5,-1,-25,5,1,14,-21,3,-17,52,-17,-5,13,-19,-10,-17,-10,-5,-19,-8,-3,15,-3,-18,-9,-6,-24,17,8,-2,-6,-38,-9,-8,-5,11,-18,14,-7,-33,-25,20,8,5,23,5,0,-3,8,-10,18,4,4,-1,4,5,-12,7,2,2,15,4,3,-8,12,-5,-7,-11,-4,11,-8,-7,14,4,-4,-6,-7,11,-19,-21,13,-1,3,16,10,-3,-13,-7,4,-9,-5,13,9,-16,12,-7,-7,-13,-22,-9,-9,4,-27,-16,-11,-4,-2,-31,-29,-6,-8,-15,-10,-10,-2,5,-7,0,-20,-24,-13,1,5,2,-23,-9,-1,9,8,-3,14,0,-3,2,-7,23,-11,1,-2,17,-5,-2,16,10,-9,-12,13,-11,-17,-12,-16,5,9,4,-14,-17,-4,5,-7,-2,12,-3,13,3,0,-9,-2,-5,22,-3,-21,-7,5,6,-1,-16,5,-19,-5,-7,-2,20,-12,2,1,-7,6,1,-22,7,17,4,-18,0,5,10,-16,2,-15,1,-14,1,30,2,0,5,12,-2,-6,-6,15,9,-7,1,-3,15,-8,1,4,10,10,-6,2,0,-10,-8,7,1,-32,-13,-13,4,-16,-8,-4,1,-12,-12,-15,-13,4,-6,1,-1,-21,-9,-14,-15,-2,11,-20,5,-3,-3,-13,-1,-7,-8,-13,-6,8,4,1,7,3,-15,16,16,6,0,16,-9,-17,5,7,5,8,-5,-3,-6,-13,-11,13,7,-2,12,3,1,11,-1,9,-13,9,2,8,20,0,3,-2,3,13,-2,10,-15,3,-12,2,4,-25,-14,-1,14,-7,-5,9,-6,-9,-10,1,23,21,-9,-4,-13,-11,-3,-2,-4,-12,4,-5,-4,-2,-1,-13,11,-18,-19,4,-23,-7,-4,21,8,-13,-4,9,13,1,-4,-3,0,-16,6,-4,-19,7,7,0,0,-12,-10,-6,-7,-7,-2,-13,3,-1,3,-2,-15,5,10,0,10,8,9,-6,5,5,1,13,-11,8,-1,14,-3,-6,-1,-3,-4,0,-1,0,-4,-4,-3,6,11,-9,18,14,-24,-16,13,2,-12,-1,14,-12,8,9,-2,-4,12,-7,7,32,-3,-24,-18,-5,-9,-29,6,4,0,-14,-5,-22,24,21,32,6,-13,-4,-11,3,-18,8,1,-2,2,-5,23,-4,-7,27,-15,-17,-23,2,-22,-5,-13,30,12,-5,4,0,6,11,-7,-14,-13,2,-11,-19,-2,-9,5,19,-5,-7,-8,-2,-13,-11,-6,-8,4,-5,10,-2,15,-12,10,-9,-11,-4,-9,-3,4,-23,-9,4,3,-11,-21,-7,16,4,-4,11,-8,-13,8,-2,4,-14,28,-17,-14,3,-13,-10,0,32,10,1,2,-13,-6,-11,11,17,13,-12,-8,-9,23,25,23,-9,20,-10,17,4,-2,0,-22,-5,12,-9,5,-8,4,10,15,-12,13,-15,-5,5,21,-5,-10,-2,18,6,2,0,14,-3,10,-15,-9,-1,-11,-6,0,13,8,1,-15,23,-11,-2,-17,-16,18,27,5,0,-16,13,2,-5,-14,-18,-25,11,-23,6,13,-19,-16,7,-25,-15,19,-5,13,-8,15,21,-1,-23,-7,7,5,-7,-11,1,-11,-22,6,-3,-1,10,-7,-8,-12,-5,2,8,-7,-9,0,2,10,-11,-7,26,7,17,-1,-26,1,2,7,4,15,7,0,-6,9,9,-14,-3,-11,-11,-19,-8,24,16,-4,0,-6,11,-8,-17,-13,-14,-4,-3,-23,-9,-33,0,-12,1,-3,0,7,-3,2,-25,-12,6,17,2,-6,-5,1,23,-20,0,-10,-11,5,-24,-8,3,-29,4,-20,1,-2,-1,2,8,-12,3,-1,5,-14,-11,-14,8,-12,16,-5,-15,14,-10,20,2,-12,7,-12,-14,-12,-14,7,-8,6,6,-1,-4,8,-6,-7,-10,-3,10,-15,10,-4,26,-24,-4,-10,-22,-18,9,-10,3,-24,2,-13,5,-1,-4,-5,8,11,-3,-2,-8,14,-5,0,-6,-5,9,-23,1,-15,4,-16,-12,-7,2,10,-16,7,-9,-5,-13,-10,6,0,9,2,9,-4,4,-20,16,4,-11,19,-12,2,-1,-2,25,2,9,11,10,22,-20,-16,2,-3,-9,-6,-5,4,16,-7,4,8}
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_weights.h';
      define-mem-desc-line = '9';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__weights_8h_1a8047897a26edb638e4f8c01734eb969b';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CONV3_BIAS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{18,36,-46,-45,64,8,13,-19,28,1,14,-57,23,20,-2,32,48,-11,85,73,-7,52,125,33,125,13,92,-72,89,-1,11,70}
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_weights.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__weights_8h_1ad77644a78b16c4bd9f7a12a0406004ed';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IP1_WT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{38,-13,5,-20,15,-4,-3,13,36,-19,10,14,-18,-17,-11,15,25,-18,-16,-9,-9,-8,-4,21,-11,10,4,6,7,9,-14,-9,17,-6,1,8,18,5,14,12,0,2,9,-8,-3,15,-7,2,-18,-6,-26,20,-6,9,10,-2,12,11,-10,-7,18,-12,-12,41,18,6,11,-3,-1,2,11,24,1,22,9,6,4,33,-18,-12,-26,-22,7,3,-2,-8,-3,-8,19,-16,28,-18,1,2,16,-26,-30,-18,-12,-30,9,9,-7,13,7,12,-11,16,-2,-1,14,-10,15,11,4,-15,-5,-12,7,22,-15,-12,-7,1,22,1,-12,29,3,1,-3,-12,-5,-7,-1,22,20,-6,-20,25,3,5,1,2,-17,-2,-2,4,4,0,15,-19,6,-7,-20,11,-18,-26,14,1,0,-9,4,-8,11,-16,-1,15,-16,-7,17,-13,-10,1,2,8,14,-2,-16,32,-10,-10,12,-16,9,-11,-10,-15,3,9,-30,58,4,-20,6,-10,-6,11,0,-1,13,14,-14,0,-3,-12,-4,22,2,2,14,1,10,1,-12,-8,17,-12,-1,-10,-9,-9,-2,11,-28,-25,-6,-5,4,10,-3,11,6,16,13,-3,-6,5,35,-12,-1,5,26,-3,-29,2,-4,-6,-15,-6,-11,8,-8,-12,1,-13,-2,7,12,-16,7,-5,11,20,-6,-2,42,21,36,-4,-12,1,-4,25,6,0,-12,5,28,-5,1,5,-15,1,-2,1,-5,-4,-10,41,-14,9,-11,-23,0,33,0,-9,13,-9,-3,6,1,4,1,3,-9,4,2,-16,-2,21,-32,-9,6,-12,-2,3,-7,29,-8,-27,10,-3,-3,10,-20,-3,12,0,-4,-4,-11,7,-6,8,2,-11,6,7,-6,-13,-2,-4,17,-11,5,0,11,1,4,-6,-17,-9,-25,7,4,4,21,17,14,-5,4,-12,-17,5,46,-7,17,-10,22,0,-9,-13,-13,12,-4,1,-4,-17,-2,-7,-14,-14,-14,7,9,-11,-2,3,6,15,4,6,3,8,20,10,16,-4,-20,-10,25,7,-4,5,3,1,-2,-2,8,2,9,-2,-6,2,-5,-11,4,1,24,-10,-11,11,-17,-4,-5,-14,11,2,2,0,10,13,-31,9,-14,13,19,21,-29,-10,4,9,-33,3,9,0,-13,-16,-1,-3,-4,20,3,-2,12,-6,-38,-16,-17,-8,10,12,18,-10,-8,16,25,8,-4,-1,4,-12,-6,-8,-2,11,-10,2,-16,-11,40,-17,11,5,4,-21,-1,25,33,-5,12,-7,1,6,2,-4,5,-17,17,12,-18,3,6,-8,-9,33,-5,10,-22,-3,16,-3,-22,29,45,-5,-5,-19,11,13,-10,-12,-15,8,1,16,14,-3,-4,7,-9,-5,-6,1,2,5,-15,-32,-11,-9,8,-8,9,3,-18,-4,23,12,4,-14,36,3,-4,41,14,-3,-2,2,-3,12,4,-4,8,-15,-2,7,8,8,3,2,4,11,-1,10,-26,12,-7,11,-16,-1,28,-25,19,8,-5,-8,-3,-8,-4,16,-8,-14,-9,3,16,8,8,8,4,-12,3,-6,-12,3,22,-7,-21,-11,-14,-4,-1,7,-10,-3,6,13,-14,61,-10,-14,-15,-3,13,5,-30,-20,-15,-25,5,10,-9,12,8,-1,-7,5,-17,-1,-13,0,11,-6,60,5,0,-20,6,21,-22,6,-12,-9,1,-3,1,-19,-21,-7,-4,7,-15,-6,-9,11,-5,-5,12,-12,6,8,15,2,-6,-23,-23,0,-4,6,-8,-9,-21,31,-5,3,-5,1,5,-1,-7,-6,30,-14,-3,11,11,5,-4,0,15,-7,-8,-3,-4,2,-15,-4,-20,-7,13,-10,-15,-19,-25,-16,76,-15,17,26,2,7,-16,-17,-14,-1,-9,21,-4,-5,2,42,-6,2,-8,-6,6,6,-5,3,-10,-2,6,14,-12,0,4,22,26,-5,-12,-1,-4,28,19,2,11,-22,27,-20,-6,15,-9,1,-10,-9,4,-6,-5,4,0,2,5,-11,-9,-11,-6,16,22,-4,-3,2,1,-7,11,6,6,8,-13,-9,-16,7,1,7,-16,-15,-2,-3,11,3,-12,6,-17,-15,18,-5,11,8,-10,-8,22,5,-6,-4,-17,-10,-2,12,-16,2,-7,-5,12,4,-18,1,9,-14,-5,1,-4,13,-6,-2,11,-8,4,1,-8,-8,0,1,6,-4,23,4,-3,-7,1,20,-11,-8,1,-14,3,12,10,-6,-5,44,11,5,-2,-3,24,3,6,2,1,0,-13,7,2,13,-9,7,9,2,-14,2,27,-14,1,-10,3,1,23,-10,6,4,-5,12,11,-7,-3,-7,1,-11,-9,12,-21,7,-10,-9,-14,17,-2,-2,-4,2,24,-8,-12,-4,4,14,5,21,12,-7,0,-3,3,-12,0,2,5,-5,11,-4,6,-2,33,-10,-2,15,-6,-10,12,-10,5,6,7,-2,11,3,1,16,2,-11,-6,11,-10,-5,-3,6,-7,-27,5,1,-1,-2,-2,3,-18,0,4,-10,4,1,-3,-10,5,-7,13,-16,-15,22,2,8,-2,16,23,-11,19,-3,-12,-11,9,-11,-24,8,-17,-5,-3,-22,6,2,8,12,-17,10,4,-1,-6,0,-17,5,5,-1,-22,1,1,3,31,-7,6,-3,5,6,8,-4,-1,-11,11,-12,-10,31,-8,-2,-10,-9,28,2,-10,-8,-19,6,7,4,-16,17,-5,9,-17,-11,-3,13,15,-14,-5,10,-19,0,-2,7,-6,1,2,13,3,4,-14,-1,-14,-7,-11,46,18,2,6,-10,-18,55,14,-4,-1,3,7,-12,23,19,8,0,-12,9,-4,-11,-10,-21,7,9,4,-16,-2,-6,18,-14,-15,-9,-11,-10,-8,3,4,-21,3,-9,9,13,0,19,8,-12,-8,-30,1,6,6,9,-23,-1,3,-25,39,-27,11,-19,8,-12,7,17,0,10,-7,-5,-2,19,-3,-12,-20,9,4,18,4,4,10,-6,10,-20,1,6,-3,6,4,5,-7,-3,-6,-8,5,16,14,12,-20,2,-6,9,-14,-2,-26,2,12,12,-15,-16,14,6,3,-8,-5,-1,-4,0,-12,1,6,6,1,8,-4,-9,-13,-5,-16,42,-11,7,-8,-21,-2,-5,-13,-15,-11,-7,5,-11,15,32,-3,-10,6,-10,11,-8,10,19,-17,-28,-1,-14,-8,-12,-5,2,-12,3,31,5,-19,33,3,10,-9,-1,4,-15,1,12,0,-8,-20,2,2,-13,1,-5,11,0,-17,1,-8,5,4,3,15,27,4,-2,5,-36,2,-2,-16,0,12,-5,-3,6,31,-12,-14,0,-8,-1,-14,8,29,-8,-2,5,-3,1,-12,-4,10,12,-4,-8,19,-1,-15,-1,9,14,2,-16,-2,15,3,10,-11,-5,-2,2,9,2,-12,4,11,0,3,2,-10,-11,15,1,0,-23,3,-3,-23,0,-6,-12,-1,11,-12,-13,2,-4,-5,-3,17,0,0,0,9,-3,4,5,-9,-11,4,-5,7,-9,-1,-9,11,-7,-16,-3,-9,-7,-11,8,-2,-6,3,11,3,-4,-7,-14,1,12,-12,-1,-9,15,19,8,5,2,26,7,-19,-7,-17,-4,-7,-1,33,-15,1,-8,1,-4,-6,-5,-3,-14,10,-1,-2,12,6,8,-7,26,-6,-12,6,0,31,-9,19,-11,-2,14,-6,16,-1,1,5,6,-4,-13,4,11,-6,2,7,-6,-15,2,-3,7,-3,-13,2,-5,-6,6,4,-4,11,-2,32,-3,12,0,20,-1,-8,-1,-10,5,18,-37,-13,-5,16,-3,11,6,10,-3,-2,9,1,-17,1,-13,4,4,5,-6,2,1,11,-18,-7,-11,11,-2,-9,-3,7,0,-16,6,3,3,9,-9,1,26,-9,3,-6,-12,3,1,17,1,-5,4,2,3,-22,6,-18,-18,-17,-15,27,6,9,5,9,12,-9,-2,-13,-3,-12,10,0,-3,-8,-3,8,7,16,1,-9,38,14,-9,-8,0,-8,6,-11,-19,-3,-9,-18,13,5,-5,13,-4,-2,-8,-15,5,42,-14,-4,0,0,-3,12,-2,-5,5,18,-39,13,-6,12,7,13,6,8,0,7,2,-49,23,-15,-11,23,3,1,11,-1,-3,7,-1,-26,24,7,-2,-11,3,15,2,14,3,-5,21,-19,-17,4,-4,-16,-18,9,-11,25,1,5,-7,7,-2,-15,0,-5,6,10,-2,5,7,-12,-8,-4,10,16,0,-32,7,-7,-26,-24,20,-5,4,-6,2,-5,-4,-3,6,13,-17,10,14,-3,-11,-9,15,4,1,-11,-8,-10,0,20,18,19,-5,22,-11,23,-2,-8,5,9,11,2,-11,31,-14,0,-14,1,11,-6,28,30,-7,-7,9,14,-6,8,1,-5,22,17,-19,-18,-13,5,18,3,11,-1,3,3,-7,4,-11,-3,-9,-30,20,-18,14,8,11,-1,23,-13,5,-11,0,-8,-4,-5,-9,10,2,2,0,17,14,-21,25,-18,-2,-8,0,1,0,-1,-29,17,-4,-18,18,-10,7,9,3,-3,0,-5,23,18,8,9,9,17,-14,4,10,-10,3,-13,-4,-3,6,-9,21,-25,2,6,-2,-26,23,-9,1,20,8,9,-12,-2,3,-6,-2,-10,-6,5,-3,23,-7,14,-7,-14,3,-7,-4,-16,-6,13,-3,-5,-5,30,-6,7,7,6,5,-23,12,8,-18,-14,-6,23,-14,-5,4,-1,19,18,1,-6,6,-14,-2,9,21,5,5,-1,2,2,-8,4,-5,2,-8,-14,-1,-3,15,13,6,-10,0,3,1,5,-12,12,-6,10,-7,16,3,22,10,-6,25,-19,-2,-11,-15,8,-14,6,-9,10,-3,8,5,-2,-13,-10,-4,-5,0,-1,-5,-1,-16,-3,3,6,4,22,9,17,-2,-6,-16,25,1,4,4,23,-10,0,-2,-26,10,2,25,22,-1,0,1,-16,-5,-7,-10,-22,-14,10,-7,15,31,15,-17,-7,36,12,-22,-3,-7,10,8,-2,2,7,-4,8,2,-11,6,17,-15,2,-22,-33,-19,19,-23,-8,1,9,-10,10,2,4,5,-6,17,6,0,11,-8,-10,-18,-6,-2,21,3,-11,-1,4,6,2,17,15,-13,-1,7,27,-11,-1,-2,2,-9,2,5,3,2,-3,-3,3,18,12,-1,11,-7,24,-7,-5,-9,16,3,6,-5,8,7,1,-12,-2,15,9,-18,1,-1,-12,0,-5,5,9,-17,31,-4,-8,-10,-12,9,-2,9,4,-18,12,-11,-6,5,0,3,16,2,1,10,-16,-4,9,-6,-3,-2,9,-10,-16,12,5,9,-6,31,11,-2,-16,-12,10,3,1,-9,-8,10,4,-7,-6,-15,6,-10,4,17,-24,17,2,-33,9,-23,-1,-1,32,-5,16,-8,3,12,21,-1,-24,-1,-24,27,-3,-8,18,-1,-10,-7,45,-39,-18,2,-4,-6,5,5,-19,34,15,36,11,8,-7,-14,-11,0,0,-11,2,6,-18,-25,-17,1,-3,-15,-31,37,-9,-14,10,-24,1,-16,1,13,-21,-11,-5,15,5,6,27,4,27,24,-5,-19,37,-19,-18,-10,-17,-17,-16,-1,18,14,11,12,6,35,-17,35,-14,-12,-5,7,1,-8,-9,10,-8,-14,1,23,1,-24,-7,-4,-20,49,18,15,8,-12,-30,10,0,-7,-8,10,-3,-2,6,-25,-22,-10,-10,0,1,9,-18,-7,6,-11,11,-6,7,-12,1,-16,-15,-10,22,-5,86,-12,16,-41,-11,-1,-1,12,26,11,-7,12,-20,42,6,8,16,6,-27,4,2,-24,-20,7,43,-15,-5,-2,-8,3,-15,12,-16,-4,5,-5,1,2,9,3,-17,19,4,-11,-1,8,0,-13,6,-10,15,12,-28,-14,55,-4,13,16,-42,-5,46,-10,-8,-3,-14,-13,-15,0,26,-7,-8,25,34,-12,-34,22,-10,-9,-17,-5,11,-11,-14,-6,-6,-9,0,14,7,-14,-19,7,-8,37,-13,-7,-7,17,-16,19,23,-14,-13,-7,-18,9,18,-20,-25,1,-22,-26,14,-28,16,-17,-6,4,6,-26,-6,-5,-6,-17,-5,-5,19,13,22,-16,-14,4,-8,-15,3,2,8,7,-3,-6,-2,17,9,5,1,-12,-14,0,-14,-9,11,15,39,-5,-25,2,-18,-5,4,-1,23,18,-9,-7,2,22,-10,10,-13,37,14,-11,-9,-6,-5,14,-6,-9,-8,0,-8,6,28,-7,7,25,-13,-6,25,-3,7,-11,-14,-8,-7,-14,15,10,6,11,33,-2,-23,-16,10,14,-3,8,-10,0,-14,17,7,2,24,-6,-9,23,-1,-19,-7,14,-14,-4,-2,6,2,5,6,-1,-11,9,5,-7,9,-7,-6,14,-14,-6,3,9,0,-1,-4,2,14,-22,-11,18,8,-36,2,-1,9,-14,-4,2,-8,4,-1,5,-8,29,-16,10,-1,1,-8,35,1,10,4,-17,-13,15,-4,0,0,22,-31,4,18,-7,0,-2,-11,-15,29,10,3,7,3,5,-16,26,-6,33,-8,8,2,-7,9,12,11,10,11,10,2,-4,-17,9,-16,-29,-7,-1,-19,29,-11,0,3,-3,1,26,23,-3,7,-4,19,-5,-29,20,21,7,-4,3,-23,-5,-11,3,1,-27,-5,20,-12,22,-5,7,14,-6,-15,-16,5,-19,-7,11,-2,-16,-7,-12,-12,-21,-9,3,-9,1,-14,11,-11,-9,6,-27,-13,-7,-6,4,49,-7,4,9,-13,-12,56,4,11,14,-15,12,19,-4,-25,11,-17,-22,15,4,-6,-8,2,-5,0,-11,1,-23,-6,3,21,-12,-1,-7,-22,-23,-1,19,1,-7,-10,-20,5,-8,5,-21,-1,-2,13,-6,-11,5,-9,-9,-13,18,-3,2,5,-12,-6,30,-13,-4,-18,20,0,8,-8,8,4,0,-7,6,5,6,29,9,42,-2,-12,7,14,-10,-13,1,-1,-17,8,-19,4,-17,-13,-20,8,25,-1,-17,19,10,5,10,-6,3,-12,14,30,-6,-11,-8,-4,-17,-12,-9,-12,41,-16,-21,-2,-15,22,2,9,2,-5,5,2,22,-8,-13,-19,56,-16,6,33,-4,35,-3,10,-15,13,-11,-5,11,0,1,-5,3,-6,21,-12,-6,-16,7,15,-6,-5,-15,1,-8,1,-3,-17,-29,-2,1,-12,9,-8,-8,-8,30,10,18,17,-34,10,5,2,17,-14,-6,-3,0,-22,6,20,-32,-5,-21,-16,8,-8,1,-2,16,-3,-6,-20,-13,5,3,10,13,-9,-13,11,0,4,5,-10,-9,5,-19,10,-4,-11,-3,-12,-4,-11,-7,-21,-30,-10,6,14,8,-2,-1,16,1,19,-15,-14,4,-1,-4,4,-7,12,-13,-12,29,-1,3,0,2,4,-11,-3,-3,-22,4,-6,3,6,9,-25,16,-4,-14,36,3,5,2,-15,-4,1,-11,13,-4,-3,-4,0,-4,-3,44,14,-2,-7,-7,13,-1,-6,-9,2,0,28,-13,-8,-6,1,-5,-6,-9,6,6,10,-3,6,-2,12,-15,5,0,0,17,-2,-18,4,6,2,3,-7,-2,-10,-19,-4,-7,-3,-4,3,9,-17,10,-4,-10,-12,-2,-10,7,-22,-7,-7,1,7,-2,6,-8,-8,7,18,9,-5,3,-6,-4,-10,4,-14,-11,-7,9,13,1,-5,-15,27,7,-4,-13,0,-9,11,8,11,0,-1,0,-4,9,5,9,-15,5,-10,27,-8,6,11,15,-11,13,-25,-15,-16,-9,9,-4,14,-7,-6,-2,-2,3,2,-21,-8,-1,-22,-5,-27,-6,4,9,7,13,0,-7,-2,-8,-12,5,6,-5,-8,-7,-2,-5,8,7,-16,1,16,1,4,0,-6,11,7,-14,-6,15,-4,17,-5,-1,5,24,5,5,-14,11,-8,-6,-18,-3,-14,-13,3,-4,-10,8,-7,19,-2,4,6,36,22,8,18,-20,-8,10,-7,1,-12,8,-5,4,-8,7,-2,-3,-7,-6,-16,0,-9,11,10,3,-1,-9,-6,0,-3,-8,-11,2,-13,19,-1,-22,4,0,-6,0,-10,-12,12,7,-12,-5,-17,3,-12,-4,12,-5,27,19,-11,10,-6,13,7,1,-1,27,-8,12,7,6,-2,-6,6,-7,-16,24,-10,-2,-12,-11,13,-10,-5,-19,-27,-14,-11,1,-1,-15,-2,18,-19,-10,3,3,-3,19,9,-11,-8,-5,24,-3,2,20,-18,-24,-5,11,4,14,14,2,-9,8,0,-9,-12,-2,12,-2,17,-19,-17,4,16,17,-10,5,-5,14,15,5,20,-10,3,-8,24,-16,-4,-1,4,-20,-10,-20,-5,-2,5,2,5,6,-22,-18,3,-8,-7,5,5,-3,12,0,18,-8,12,-2,13,-4,2,3,-4,11,-15,-13,-14,11,0,-4,-10,-10,-22,17,25,20,-4,-10,-5,34,-2,29,3,4,-12,-8,-11,9,-10,13,-16,-5,3,-2,6,8,-4,-5,-10,1,-2,-6,15,3,14,-7,-5,6,-5,-2,13,7,-9,-13,-10,14,-7,-4,6,-2,8,-15,29,15,-14,15,-8,48,-2,-13,-3,-8,-6,-20,12,-3,6,-9,-16,-4,-8,-8,31,-6,11,-3,0,-10,-10,-6,17,6,-12,1,18,-10,1,9,2,3,2,-27,17,-5,-8,-6,-7,-2,6,-15,-12,-12,13,-12,-10,1,-6,10,13,7,0,-13,8,-18,0,25,7,-7,4,-8,-5,1,9,-3,-2,-12,-3,-4,-22,-7,4,6,18,1,1,-11,-7,7,5,-3,15,-6,5,10,-22,11,-9,-16,10,-6,6,2,21,-2,-1,2,12,-10,-2,-4,5,3,20,3,10,-9,-7,-4,-10,12,-14,-6,2,1,-8,7,5,0,-9,-4,46,-14,4,12,-13,3,2,0,8,4,31,-13,6,-7,1,-14,-2,8,4,-12,9,-13,-7,5,4,1,10,-7,-14,-6,-7,10,15,1,-4,-4,11,-2,-3,-13,15,-4,-11,-8,4,2,7,10,-1,-7,37,-15,-3,-7,-16,2,13,11,-3,-23,3,-19,-5,-2,-21,9,-8,1,0,8,10,-4,0,-4,-17,11,6,9,-22,12,-11,11,-1,14,10,22,2,1,6,-11,-7,-4,-4,5,-5,-13,9,-9,-5,-7,-9,-17,1,9,-2,3,0,7,-1,16,-5,14,-4,3,-6,-12,8,16,1,7,-14,1,0,-4,9,-14,1,1,7,13,-3,11,7,9,5,-12,5,-8,0,-2,18,-15,-9,-5,-13,12,-7,-5,2,13,-11,3,2,19,21,-16,-8,12,13,7,4,2,-18,-4,-5,-6,-16,-12,-16,0,4,9,4,-10,9,0,-7,10,-8,6,-5,6,-20,-14,-6,-5,3,-23,-10,-4,18,3,-10,6,-7,15,-8,7,0,-22,3,-21,-2,5,-11,33,2,-6,6,-13,-7,14,1,10,0,13,-20,-16,-15,21,-16,16,5,40,5,1,15,-10,8,17,2,-21,-24,3,-9,5,3,-4,-6,-7,-13,-4,0,2,-23,28,-4,0,6,0,3,11,1,-13,-6,-8,16,-3,36,2,8,6,-12,20,6,8,9,-7,-5,6,3,-1,16,-14,-10,-1,40,-16,-5,12,26,-1,5,-3,23,21,-14,-5,0,2,-3,15,6,-13,5,-14,-4,-1,-16,-13,-16,20,-1,23,0,-38,-2,-10,17,16,-9,-24,-9,7,17,9,-8,-10,11,0,-26,6,-5,-5,-8,-17,1,1,10,0,-11,-16,-18,-10,5,11,14,7,-22,5,-1,-1,-9,1,-5,18,-17,17,-15,-6,-7,31,-4,-4,-1,4,6,-2,-4,-11,1,-15,-3,-5,11,1,1,-16,-6,-1,7,4,-5,18,0,-9,2,17,-14,-15,-8,-25,-7,-9,13,14,5,12,-4,31,-6,2,-1,0,7,3,-18,18,-5,-7,14,-13,-11,-6,-10,-6,2,-16,-14,26,9,-3,28,-9,9,7,-2,-2,-15,-1,3,9,-6,-24,-2,2,-7,-1,3,3,21,-3,3,-7,-10,18,-1,-7,14,1,22,-10,-18,-5,26,7,-6,-6,-8,-6,-2,7,2,-18,10,9,9,3,-2,5,-11,16,27,-5,-5,-16,-12,-14,-3,7,2,-16,-17,-1,-10,7,0,-8,22,-9,7,-5,-1,5,4,13,-6,8,7,-10,-2,-5,-8,4,-1,-2,7,-16,0,-2,-12,3,-10,-3,-2,1,-8,-1,-13,5,5,9,16,-4,14,6,12,4,7,29,14,3,-4,-6,-3,22,-23,-5,15,-28,5,2,8,-12,5,-18,8,5,-3,-18,-8,4,-17,18,5,-6,-8,-12,0,-5,-2,-10,1,6,-17,6,10,-8,-6,17,2,-5,5,11,1,-5,-4,-26,-3,14,-10,-4,3,-11,-11,-16,-3,-1,-5,2,9,2,24,17,8,4,-4,38,16,14,6,-6,-11,-2,14,-10,11,-11,12,4,-8,-8,-26,-13,13,-8,-14,21,1,-8,10,11,22,-17,7,-4,-7,-10,0,-11,18,9,5,0,10,-17,0,-2,2,15,1,-2,-7,-2,2,17,-6,-14,-13,7,11,3,1,14,0,10,8,-11,20,-19,0,-4,16,8,-13,3,4,-1,4,0,29,-12,-24,26,4,11,-14,-12,-10,15,15,-5,1,6,-3,-8,3,-13,-15,7,-6,1,-3,-11,2,-18,14,-1,-17,-2,12,12,-6,12,-23,-13,9,-18,4,0,5,-3,-14,20,7,-6,-6,-11,10,-7,-6,6,-24,4,-18,26,-23,-2,18,-14,-13,-3,-10,28,-4,30,-22,9,-13,-17,11,-19,-9,-12,14,2,-6,25,27,0,1,-7,-17,-6,-16,4,1,13,-12,-6,-6,-11,2,-12,-22,17,-5,-15,-7,-4,5,15,35,0,-3,10,-14,13,-16,4,7,-5,12,-1,11,-2,-23,-9,-3,10,-8,-3,-5,9,12,-3,-12,-4,6,3,-26,-7,5,-24,-11,-3,-9,23,-9,-32,-16,3,30,0,16,7,5,-1,0,-15,-7,40,-20,-6,-9,-2,-13,-7,-2,-2,-4,0,-22,-4,12,-14,5,-1,-3,-6,-8,2,41,32,-10,-6,3,-10,-15,-16,10,-12,-7,-12,-5,-13,51,4,-9,5,-16,15,2,1,-10,40,-14,9,36,1,-16,-7,-3,6,5,25,23,-15,-6,-14,-11,-4,-2,-9,3,-2,17,-5,-4,0,10,17,18,-1,1,-17,3,8,-6,6,15,-1,2,-14,5,-10,7,-5,11,-1,0,-10,3,13,1,-10,16,7,-8,-6,-6,-13,-3,9,20,4,2,-13,-9,-22,-8,-2,-16,12,5,-16,7,-15,9,6,1,5,2,8,9,-7,15,-2,7,35,-11,0,-2,1,1,-9,17,-7,7,-7,-20,-8,11,-2,6,9,0,10,-4,-11,29,7,0,-2,-10,-15,-3,-1,-4,4,-15,-27,1,12,22,-10,-3,20,-17,19,7,-3,5,37,-4,9,18,-3,-7,-12,-3,15,2,0,16,-11,-12,7,8,10,-2,-15,20,-14,2,13,-1,6,4,13,17,15,6,8,-6,9,-7,6,16,4,-2,-3,-7,14,-14,2,-3,-10,-7,-14,4,8,-3,10,0,12,-4,4,5,-5,-10,17,42,-9,2,5,2,5,3,-3,-14,12,2,6,4,-41,-6,2,-3,9,3,0,-7,-8,7,1,-3,11,-3,0,-11,4,2,-3,23,-11,-3,-8,10,-21,26,12,-9,16,-8,16,2,-8,13,-13,-8,-16,-18,18,-19,8,-3,2,-6,-21,8,1,-13,-17,-14,-7,6,18,-21,-36,16,8,20,-13,-8,-16,8,-9,2,-3,2,-5,-5,-7,-3,-12,-4,0,3,-7,-5,-9,12,17,-16,-6,-18,-19,7,25,-12,-17,9,1,-14,-3,-14,6,4,-17,-5,-1,-13,-7,-4,15,-6,5,1,-5,1,-4,-2,1,3,9,-28,-9,-28,-10,28,-3,-12,-6,24,6,-5,-7,-6,1,5,1,38,-34,-3,-14,-15,14,-4,37,2,-8,-21,-21,-6,-13,1,6,-46,-12,-8,-5,5,10,3,-15,28,-10,4,-4,-12,2,1,5,-13,10,19,-12,2,7,-8,-3,0,-13,-33,-5,10,0,13,-2,-2,1,-21,-6,6,-19,-3,14,-21,9,7,6,23,-1,-23,-13,8,-2,16,1,0,-4,11,7,5,-6,-11,-10,0,1,20,6,12,-2,-1,-5,20,-14,5,44,4,1,-7,-7,10,1,-12,22,6,1,10,-6,-9,4,3,3,0,5,-1,0,0,13,-10,-1,-14,13,0,8,11,-14,-15,19,-11,-4,-3,-15,2,4,-9,37,11,-28,-4,-6,-4,-2,-17,-3,-2,-5,-28,19,15,-8,-30,-1,-13,4,6,-3,8,-9,18,6,-2,-24,-14,-13,-16,3,12,34,8,9,0,-3,-9,18,-13,0,-8,-11,19,-1,15,-6,37,7,-12,-1,11,-2,-12,3,-3,-29,2,-10,0,-7,36,-18,-10,-4,-9,0,3,-1,12,-8,-6,-14,13,18,24,12,-1,-4,40,3,-10,10,4,-3,21,14,13,-2,11,12,-5,-11,-6,11,-2,18,7,4,-3,-3,-2,10,6,6,6,-11,9,-14,-14,6,17,11,0,0,1,-1,8,-3,1,-3,5,0,14,-3,4,12,3,-4,-1,-19,-9,-6,3,-1,-1,-7,8,7,10,-14,10,-19,-7,3,10,-8,-2,-1,2,-7,-8,-7,2,26,2,17,-3,5,0,6,4,32,-3,-4,-3,-13,-11,-7,-10,12,4,11,33,0,-12,-10,11,5,16,-7,9,-4,-4,-16,-8,-8,14,2,9,-6,-5,-11,-6,14,-13,-6,-5,-8,-7,-3,-11,28,9,8,6,5,10,-11,-8,3,-23,-16,1,12,-14,0,-2,18,3,-10,5,25,9,-20,0,15,-3,1,4,1,-10,-7,-7,16,23,-7,21,0,-14,2,3,6,-14,-3,-15,-5,-15,-4,-8,14,5,4,-19,4,-6,-18,-8,15,-2,8,-4,3,-6,-5,-11,14,16,-10,-12,-3,-10,6,-1,-6,-9,12,-4,-9,-8,-1,-4,30,-4,24,-11,16,-2,7,6,27,5,-10,-2,0,17,-8,-14,-7,-10,3,27,29,-19,-11,-5,2,-10,-1,-14,2,-2,0,-9,1,-2,23,-23,15,-8,-12,21,4,14,-6,-1,-11,-1,10,-5,11,16,-3,9,35,-7,2,1,6,-4,-11,-7,-14,-3,-8,18,9,12,7,-12,34,-1,-27,9,11,7,-9,-8,9,6,-9,-4,7,-4,-10,10,10,-11,6,-7,4,-11,-6,0,-4,-1,10,-2,15,-13,13,-31,24,1,-13,-19,8,-2,-5,7,-4,10,-4,-10,-10,-10,-8,-1,-10,-8,-3,1,-9,-3,1,1,-11,-2,6,-10,34,-5,12,-15,34,-1,-20}
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_weights.h';
      define-mem-desc-line = '13';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__weights_8h_1ac88810411c45272e8f9144682b9d85bc';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IP1_BIAS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{30,-121,-51,77,40,20,46,-35,28,-33}
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_weights.h';
      define-mem-desc-line = '15';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__weights_8h_1a4150dd1364fd3534561c5c6e530f9bfb';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CONV1_BIAS_LSHIFT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
6
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_weights.h';
      define-mem-desc-line = '17';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__weights_8h_1aa8f89682da16a15a092d06097a5696d3';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CONV1_OUT_RSHIFT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
9
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_weights.h';
      define-mem-desc-line = '18';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__weights_8h_1afa70cc595390d9205c78a58795f070f4';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CONV2_BIAS_LSHIFT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
4
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_weights.h';
      define-mem-desc-line = '19';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__weights_8h_1ad872d34bfa54d86f9e5177dd2ff40d79';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CONV2_OUT_RSHIFT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
9
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_weights.h';
      define-mem-desc-line = '20';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__weights_8h_1a5457926e12a9e6b0ae9754d509fb7918';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CONV3_BIAS_LSHIFT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_weights.h';
      define-mem-desc-line = '21';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__weights_8h_1ae38425db927f582d7b5edfcfaa03c676';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CONV3_OUT_RSHIFT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
7
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_weights.h';
      define-mem-desc-line = '22';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__weights_8h_1a3a98024d4e4c7fa2fbbc216812fb9b35';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IP1_BIAS_LSHIFT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_weights.h';
      define-mem-desc-line = '23';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__weights_8h_1a67fad411ab3695e450e62ad0509a7eec';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IP1_OUT_RSHIFT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
8
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_weights.h';
      define-mem-desc-line = '24';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__weights_8h_1a476266acb4adb419f566006dce8829c3';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'INPUT_MEAN_SHIFT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{125,123,114}
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_weights.h';
      define-mem-desc-line = '25';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__cifar10__weights_8h_1a4205de60010d416664775e3aa0f9ec62';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'INPUT_RIGHT_SHIFT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{8,8,8}
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_weights.h';
      define-mem-desc-line = '26';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/riscv_nnexamples_cifar10_weights.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__nnexamples__gru_8c';
  file-name = 'riscv_nnexamples_gru.c';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__gru_8c_1ad9fde6ff501c9cd8a6cfc45949464c49';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DIM_HISTORY';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
32
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/riscv_nnexamples_gru.c';
      define-mem-desc-line = '110';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__gru_8c_1ac8ab7c242bba66633b8c06966da6c9bc';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DIM_INPUT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
32
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/riscv_nnexamples_gru.c';
      define-mem-desc-line = '111';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__gru_8c_1a9b4b56c701e4258f8f6c87f225fbcebc';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DIM_VEC';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
64
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/riscv_nnexamples_gru.c';
      define-mem-desc-line = '112';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__gru_8c_1a206812c9f4afd792e23a8d842ffa2984';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'USE_X4';
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/riscv_nnexamples_gru.c';
      define-mem-desc-line = '114';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'riscv__nnexamples__gru_8c_1ac71a806472c7c0c284a2253e71a6a27b';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'gru_example';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'scratch_input';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'history_size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'weights_update';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'weights_reset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'weights_hidden_state';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_update';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_reset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_hidden_state';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/riscv_nnexamples_gru.c';
      func-mem-desc-line = '136';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'riscv__nnexamples__gru_8c_1ae66f6b31b5ad750f1fe042a706a4e3d4';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'main';
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/riscv_nnexamples_gru.c';
      func-mem-desc-line = '196';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
    var = {
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'riscv__nnexamples__gru_8c_1aa2fc9b2b0449790ed7c37bab7fd3093e';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static q7_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'update_gate_weights';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= UPDATE_GATE_WEIGHT_X4
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/riscv_nnexamples_gru.c';
      var-mem-desc-line = '121';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'riscv__nnexamples__gru_8c_1ac2ae1ff19167c2bb359db2b319ca1060';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static q7_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'reset_gate_weights';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= RESET_GATE_WEIGHT_X4
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/riscv_nnexamples_gru.c';
      var-mem-desc-line = '122';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'riscv__nnexamples__gru_8c_1ab18783e8d8449d7222ec4a64dfcc92e6';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static q7_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'hidden_state_weights';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= HIDDEN_STATE_WEIGHT_X4
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/riscv_nnexamples_gru.c';
      var-mem-desc-line = '123';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'riscv__nnexamples__gru_8c_1ac5569d687768d693618f987a91e8aee5';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static q7_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'update_gate_bias';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= UPDATE_GATE_BIAS
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/riscv_nnexamples_gru.c';
      var-mem-desc-line = '126';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'riscv__nnexamples__gru_8c_1a2a9d5c9f16ee778ecc8170d8664722c7';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static q7_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'reset_gate_bias';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= RESET_GATE_BIAS
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/riscv_nnexamples_gru.c';
      var-mem-desc-line = '127';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'riscv__nnexamples__gru_8c_1a40dda695923891899cb86b2f01bfd98a';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static q7_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'hidden_state_bias';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= HIDDEN_STATE_BIAS
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/riscv_nnexamples_gru.c';
      var-mem-desc-line = '128';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'riscv__nnexamples__gru_8c_1a8b0acc149c9bd4aadfb9c1fa8345f57a';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static q15_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'test_input1';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= INPUT_DATA1
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/riscv_nnexamples_gru.c';
      var-mem-desc-line = '130';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'riscv__nnexamples__gru_8c_1aad5944359ea4a426550a87efd0d90b02';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static q15_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'test_input2';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= INPUT_DATA2
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/riscv_nnexamples_gru.c';
      var-mem-desc-line = '131';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'riscv__nnexamples__gru_8c_1ac327d41d23812b53d83c2da91971cbfe';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static q15_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'test_history';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= HISTORY_DATA
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/riscv_nnexamples_gru.c';
      var-mem-desc-line = '132';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'riscv__nnexamples__gru_8c_1a935afa741bcc39e4c4c48b019d415d97';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
q15_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'scratch_buffer';
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/riscv_nnexamples_gru.c';
      var-mem-desc-line = '134';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/riscv_nnexamples_gru.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__nnexamples__gru__test__data_8h';
  file-name = 'riscv_nnexamples_gru_test_data.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__gru__test__data_8h_1ab753489637dfba855233303733416a73';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'UPDATE_GATE_WEIGHT_X2';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{-62,83,-58,-89,-80,1,-93,31,101,95,121,-83,71,18,-98,-5,44,-100,-16,-73,25,62,34,-22,-16,42,9,-125,60,-78,15,-76,-76,-63,71,-25,78,-66,38,-118,-71,-120,-80,28,33,51,82,-105,26,-47,38,86,-114,44,90,-98,105,-123,24,95,-12,11,49,-35,78,104,104,17,-116,-40,-83,4,88,-110,-111,-98,18,-89,120,-84,66,-69,-8,-22,-91,-29,-41,110,55,-124,-67,103,-40,-100,1,-25,-68,-62,-89,-75,-20,-78,101,-92,-51,-97,-54,59,-78,41,34,-102,-9,-53,56,103,-55,13,81,-75,-20,-37,29,36,110,84,-80,-127,-68,-33,-70,-16,-42,-9,-104,107,-81,-16,42,-74,-63,-4,-128,-109,-105,55,-51,-68,-88,19,-39,116,-7,66,52,-29,63,-94,71,-2,-127,31,-103,120,124,41,-13,-23,127,59,-22,54,-2,32,-87,-109,85,-31,-5,-59,-122,-97,-14,-88,-19,43,-30,115,42,14,10,121,28,-63,83,-85,101,40,23,-39,74,-99,73,50,-20,123,-88,-13,-126,-25,70,-11,16,-28,121,-29,20,-69,104,117,-40,-1,-97,-12,31,32,15,-32,77,31,16,40,107,-52,-52,-89,-17,124,-95,54,48,-40,37,24,-46,42,119,5,-118,-45,-10,106,83,57,-74,-10,-56,85,37,-25,83,-31,-54,111,-78,-96,-114,-65,-100,28,-31,-111,33,66,74,-43,112,119,-80,-26,74,-81,-123,55,-126,32,-66,110,-86,-118,-21,15,16,26,13,-109,41,-16,88,81,-82,-55,-89,109,-52,118,-39,57,-16,86,-68,-10,-19,110,-50,-17,-84,103,-3,94,-8,50,15,-44,-87,6,18,8,61,66,-108,-67,-6,107,-68,25,25,25,-82,71,62,121,-31,-4,17,-6,-60,-17,116,-67,45,117,-90,12,-68,20,121,-65,-43,74,-104,-42,-69,35,4,-17,5,95,-82,18,65,43,-57,89,1,-8,37,-51,10,67,4,-50,-18,81,-120,44,98,16,-98,25,127,88,-111,-49,114,111,-17,-74,40,-18,35,19,31,48,-23,53,102,41,89,-27,87,-54,-121,-113,97,125,125,-108,58,-17,8,70,-67,-55,59,42,-85,78,27,16,66,67,54,-74,33,-19,72,77,126,-122,-7,-109,58,78,-88,15,2,16,37,-34,-114,-88,-53,88,115,19,7,-67,93,80,-48,-11,-61,31,38,29,-59,-70,0,25,106,-7,-44,53,62,19,-64,109,70,-103,-114,97,57,112,24,-66,-127,29,29,-31,-87,-125,54,-98,101,-39,56,-88,-63,-113,-73,-91,80,112,-27,-75,-42,-5,79,60,-55,23,-61,66,51,39,-91,96,-60,-64,-1,75,55,-108,73,38,75,-113,-9,-92,-92,-3,-30,93,-27,-100,-55,125,52,72,110,12,84,-83,65,-79,92,11,87,-106,35,-38,-24,-79,15,-11,-109,-22,95,82,-1,-2,-113,116,-64,93,-62,-11,101,35,-91,51,-6,21,29,25,-16,68,-103,-111,-23,-123,-80,24,-17,-7,53,23,114,-13,-105,-88,120,13,-25,-40,29,-38,-43,3,2,-121,-110,54,-43,30,66,28,60,-81,-6,-8,126,-80,64,-42,126,75,-69,-116,-41,81,94,31,-116,5,-46,5,-21,-105,78,-20,-34,54,46,-124,120,-83,44,-17,-52,-23,-110,34,-35,31,61,88,-108,-38,31,117,-26,38,-57,65,9,0,59,124,14,-39,-95,-91,107,-34,85,-83,-31,-68,-78,-86,21,-118,56,60,-3,-116,33,53,-94,85,77,91,-94,100,-89,97,88,111,36,74,-110,7,-74,91,-112,21,32,-59,98,36,10,-41,44,-114,-88,92,111,72,43,58,42,-125,-11,96,126,25,96,-105,-128,-70,85,-82,-17,103,23,-37,76,58,108,16,-116,-44,22,89,0,6,-108,27,-34,88,-125,22,-45,-116,28,-29,-70,-3,-81,-80,42,119,105,-40,-109,105,64,5,72,-32,-95,90,60,6,-29,40,-19,57,89,-50,34,-123,-32,-18,20,9,-19,-81,-45,-120,-120,20,2,18,70,75,100,64,126,-9,63,-82,114,-62,106,-11,104,-9,-13,88,-40,101,73,108,52,33,116,-54,-114,-47,85,2,-117,-80,100,-20,98,-75,-83,-24,-125,-91,-97,95,-46,15,-94,-21,53,-27,-18,65,87,112,38,-115,-27,37,-84,1,103,85,-50,36,-49,-119,68,20,119,-113,43,-67,105,44,4,-48,16,-42,83,-39,106,31,-34,-76,-51,68,82,-111,-116,-104,-118,109,-29,-6,-91,81,-102,-76,-82,64,121,27,-98,-24,-88,36,115,59,-84,-121,4,29,45,73,110,-56,-12,109,-88,85,-30,87,18,118,23,21,106,40,115,78,-72,-103,11,83,44,117,-63,98,30,115,123,-39,25,15,84,52,46,77,64,-104,125,-13,34,125,65,6,57,-128,-2,115,7,-65,-73,82,72,-109,99,43,-94,-106,-39,-4,-127,58,123,-128,29,-80,4,51,109,-50,-38,25,-13,-52,-106,87,76,44,78,101,16,-102,-20,104,23,107,-88,18,-85,119,-21,-53,-84,-7,-8,-114,23,-54,74,80,77,-40,19,-75,-41,60,77,82,-96,-121,-43,114,-124,-1,-75,32,34,-117,21,64,-87,-100,-29,-36,-45,-46,-111,4,-44,-94,-117,100,-25,-27,105,95,15,88,25,-38,-88,122,62,-62,-28,95,-86,125,-83,-9,-100,101,-124,22,21,-91,50,-100,-27,-92,115,86,85,33,-112,-43,61,114,62,-31,-84,-7,5,-26,-10,-21,-89,60,-96,48,-34,88,-80,-91,92,12,118,-2,-38,83,-50,-109,-111,-26,-109,-78,-7,84,60,-95,15,-71,112,126,71,36,39,-42,-85,-126,-68,105,-18,-127,48,-41,57,-93,13,-25,-71,66,-43,-23,122,4,-70,123,115,124,-61,-32,18,-18,49,123,-101,37,-50,-111,-73,124,-18,54,-64,93,-69,16,112,21,-56,56,127,113,-48,-57,-4,85,-84,53,44,28,-126,-59,-11,94,58,-64,112,82,127,58,50,5,-6,-102,90,-18,-86,104,17,108,-64,-22,73,-102,-17,-31,-11,-105,-40,-49,84,-82,104,57,30,112,-119,-92,78,-92,35,90,-45,-13,-75,-125,-19,-83,-75,29,15,-33,127,-14,29,-80,61,41,67,-14,-18,101,101,108,-24,-61,-90,-59,-48,-114,1,-14,106,52,109,-45,-100,74,-33,-68,-94,-68,-22,-99,31,-86,85,-27,-70,69,127,92,125,-95,117,-87,-8,-71,18,94,-90,103,-31,-1,-50,-60,-2,96,31,-1,-98,75,104,-6,-38,-24,127,94,-48,97,-96,4,-108,106,76,-31,-7,-41,58,-13,-72,-81,-116,-24,-45,46,-20,114,97,-14,125,11,22,26,27,-2,-88,-28,-76,119,50,52,66,65,120,-42,-43,-59,-56,-28,-42,-87,-18,-47,-85,74,119,97,-6,-127,-86,30,18,-43,48,-73,22,-5,34,122,9,115,-32,-63,-13,61,119,18,-113,-12,80,26,-39,-76,-101,-104,-6,48,38,-82,-52,-91,-38,112,110,115,76,69,100,-116,109,3,-35,16,94,24,110,86,25,-5,84,2,62,57,-121,-28,-108,29,127,-25,89,16,-86,15,-68,97,-115,-73,-110,-13,41,16,-47,-74,75,-71,-52,-20,-29,3,-34,68,-2,-29,63,-5,95,-79,26,-42,-91,-109,-19,107,-102,62,111,-35,80,36,55,-65,26,76,-86,26,-88,-116,110,84,-62,-13,120,-31,-47,-32,84,-98,58,74,18,-22,5,-83,-3,11,53,114,32,-118,16,-91,-74,-67,-68,78,-34,102,88,-80,-5,63,-35,22,-87,-97,-30,-76,94,116,44,-109,-122,38,112,-103,99,-119,49,35,107,108,47,54,11,-50,-73,37,-56,71,-125,108,-47,15,-115,-65,-90,-13,-27,-16,-94,72,-101,-74,-58,27,121,-91,110,-101,45,-54,105,-8,-88,-66,-71,-128,-35,-53,-50,-51,-85,113,96,16,-72,-80,-54,78,47,75,-82,-115,-53,40,-39,54,-43,23,-35,43,81,125,-8,51,49,-91,122,123,-102,-65,-78,19,14,51,-68,60,43,-36,105,44,-100,36,89,-40,123,31,105,26,-128,63,-49,-115,48,96,-91,-73,99,37,2,3,-52,-103,-11,10,31,-106,-119,-67,118,-71,-67,-52,-12,43,-21,99,-64,-88,64,100,-62,-11,-32,23,-90,68,-102,116,-21,-78,1,108,-2,116,-122,114,53,-33,102,65,33,73,92,-79,-51,-50,-65,49,76,119,-51,15,-21,95,-109,80,17,7,115,115,-117,-77,-39,-115,-19,-83,-35,-122,56,94,1,-13,83,8,-84,72,-88,87,77,-82,-125,-18,75,10,-106,51,-59,120,-85,22,-45,-68,-44,-38,64,38,-75,-69,122,88,53,18,41,-108,48,38,-127,34,-85,36,-116,-96,56,105,38,76,92,-41,99,-101,-100,112,74,57,60,85,-14,95,0,-73,-46,12,-93,-14,-78,-1,-2,-10,34,111,115,-91,16,-79,76,-108,-8,-84,33,111,-98,2,-6,8,0,-77,1,52,18,-5,-77,-46,-80,-20,-61,-30,-81,-73,-7,49,-107,-25,-97,-125,69,-89,31,-124,-108,76,96,58,88,24,49,79,11,-43,-60,100,108,62,21,-72,-111,81,46,-108,-107,29,90,-13,55,-23,-63,-10,-128,-124,86,88,3,-39,-39,98,-57,-24,-97,-124,85,-84,-78,4,11,59,-73,120,66,21,-73,20,-95,91,-53,76,98,-29,49,-76,-74,-67,-80,-29,-106,111,60,32,-127,-87,104,30,95,-21,93,-23,-97,26,-46,63,12,-28,123,12,30,102,-115,36,74,-54,-54,-103,-57,-95,-72,-60,24,-14,-41,27,9,19,-74,-12,-65,-7,17,122,-85,123,16,-127,22,75,-85,-28,-50,125,-102,-28,24,120,-53,-128,-108,-65,-37,60,-53,-10,28,-38,-11,71,-45,21,-77,-108,-115,-24,103,-29,121,-23,11,-102,-115,-108,-78,-55,84,-17,-58,-8,-118,-119,-56,1,-109,42,-94,51,54,6,-30,56,12,23,-10,121,-113,-74,9,12,0,-93,67,51,-110,44,-69,-40,-72,49,-16,-31,-16,9,-43,7,90,96,-63,-24,-74,-26,35,-16,109,-101,38,87,-13,11,-18,-54,33,37,106,84,79,80,23,-76,-80,-45,-106,56,3,-103,-92,86,-81,68,90,-126,-125,102,-83,-36,83,97,-39,-44,-14,-14,79,-9,-31,119,114,29,-27,-29,55,-72,-3,54,49,-40,22,-37,54,68,71,66,-66,-23,49,69,-73,83,-14,-70,9,117,-63,111,65,66,92,58,-56,15,20,52,-72,-4,34,-94,119,-95}
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/riscv_nnexamples_gru_test_data.h';
      define-mem-desc-line = '1';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__gru__test__data_8h_1abb89228c76ad50a997938f676153b77f';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'UPDATE_GATE_WEIGHT_X4';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{-62,78,83,104,-68,28,-33,-63,-58,104,-89,17,-70,83,-16,-85,-80,-116,1,-40,-42,101,-9,40,-93,-83,31,4,-104,23,107,-39,101,88,95,-110,-81,74,-16,-99,121,-111,-83,-98,42,73,-74,50,71,18,18,-89,-63,-20,-4,123,-98,120,-5,-84,-128,-88,-109,-13,44,66,-100,-69,-105,-126,55,-25,-16,-8,-73,-22,-51,70,-68,-11,25,-91,62,-29,-88,16,19,-28,34,-41,-22,110,-39,121,116,-29,-16,55,42,-124,-7,20,66,-69,9,-67,-125,103,52,104,-29,117,60,-40,-78,-100,63,-40,-94,-1,15,1,-76,-25,71,-97,-2,-12,-76,-68,-63,-62,-127,31,31,32,71,-89,-25,-75,-103,15,120,-32,78,-20,-66,-78,124,77,41,31,38,101,-118,-92,-13,16,-23,40,-71,-51,-120,-97,127,107,59,-52,-80,-54,28,59,-22,-52,54,-89,33,-78,51,41,-2,-17,32,124,82,34,-105,-102,-87,-95,-109,54,26,-9,-47,-53,85,48,-31,-40,38,56,86,103,-5,37,-59,24,-114,-55,44,13,-122,-46,-97,42,90,81,-98,-75,-14,119,-88,5,105,-20,-123,-37,-19,-118,43,-45,24,29,95,36,-30,-10,115,106,-12,110,11,84,42,83,14,57,49,-80,-35,-127,10,-74,121,-10,-56,-8,85,50,-120,37,44,-34,37,15,-25,-44,98,-114,16,-88,83,-87,-31,6,-98,-53,25,88,-54,18,111,8,127,115,88,19,-78,61,-96,66,-111,7,-49,-67,-114,-108,-65,-67,114,93,111,80,-100,-6,28,107,-17,-48,-74,-11,-31,-68,-111,25,40,-61,-18,31,33,25,66,25,35,38,19,29,74,-82,-43,71,31,-59,48,-70,112,62,119,121,-23,0,53,25,-80,-31,-26,-4,102,106,41,-7,74,17,-81,-6,89,-44,-27,53,-123,-60,55,-17,87,62,-54,19,-126,116,32,-67,-121,-64,-113,109,-66,45,110,117,97,70,125,-103,-86,-90,-118,12,125,-114,-108,97,-21,-68,15,20,58,57,-17,112,16,121,26,-65,8,24,70,-66,13,-43,-109,74,-67,-127,-55,29,41,-104,-16,-42,59,29,42,-31,88,-69,81,35,-85,-87,78,-125,-82,4,-55,-17,27,54,16,-98,-89,5,109,95,66,101,67,-39,-52,-82,118,18,54,56,-74,-88,-39,65,57,43,33,-63,-19,-113,-16,-57,86,89,72,-73,77,-91,-68,1,-10,-8,126,80,-122,112,-19,37,110,-51,-7,-27,-109,-75,-50,10,-17,67,58,-42,78,-5,-84,4,103,-50,-88,79,15,60,-3,-18,94,81,2,-55,16,23,-61,-16,66,68,-52,44,-23,-114,51,-103,39,-111,-110,-88,34,92,-91,-23,96,-123,-35,111,31,72,-60,-80,-64,24,61,43,88,58,-1,-17,75,-7,-108,42,-38,-125,55,53,-108,23,31,-11,117,96,73,114,38,-13,-26,126,38,25,75,-105,-113,-88,-57,96,65,-105,-9,120,-92,13,9,-128,0,-70,-92,-25,-3,-40,59,85,124,-82,-30,29,93,-38,14,-17,-39,103,-27,-43,-100,3,-95,23,-91,-37,-55,2,125,-121,107,76,-34,58,52,-110,72,54,85,108,-83,16,110,-43,12,30,-31,-116,-68,-44,84,66,-83,28,-78,22,-86,89,65,60,-79,-81,21,0,-118,6,92,-6,11,-8,56,-108,60,27,87,126,-106,-80,-3,-34,-116,88,35,64,-38,-42,33,-125,53,22,-24,126,-79,75,-94,-45,85,-116,15,-69,-11,-116,77,28,91,-29,-109,-41,-22,81,-94,-70,100,-3,95,94,82,31,-89,-81,97,-80,-1,-116,-2,5,88,42,111,119,-113,-46,116,5,36,105,74,-40,-64,-21,93,-105,-110,-109,7,105,-62,78,-11,-20,-74,64,91,5,101,-34,35,54,-112,72,21,-32,-91,46,51,-124,32,-95,-59,90,-6,120,21,-83,98,60,36,6,29,44,25,-17,10,-29,-41,40,-19,-18,57,65,110,4,-56,51,89,87,-50,112,-12,109,109,-50,34,38,-123,-115,-88,-38,85,25,-32,-27,-18,37,-30,-13,87,-52,20,-84,9,1,18,-106,118,87,-19,103,-81,85,23,76,21,44,-45,-50,-120,36,106,78,40,101,-120,-49,20,-119,115,16,78,-102,2,68,18,20,-72,-20,-103,104,70,119,75,-113,11,23,83,107,100,43,64,-67,44,-88,117,18,126,105,-9,44,-63,-85,98,119,63,4,-82,-48,30,-21,115,-53,114,16,-62,-42,123,-84,-39,-7,106,83,-11,-39,25,-8,15,-114,104,106,-9,31,84,23,52,-54,-13,-34,88,-76,46,74,77,80,-40,-51,101,68,64,77,-104,-40,73,82,108,-111,125,19,-13,-75,52,-116,33,-104,34,-41,125,60,116,-118,-54,109,65,77,6,82,-114,-29,-47,-6,57,-96,-128,-121,85,-91,2,81,-2,-43,115,114,-117,-102,-80,-76,7,-124,-65,-1,100,-82,-20,64,-73,-75,82,32,98,121,-75,27,72,34,-109,-117,-83,-98,-24,-24,99,21,43,64,-125,-88,-91,36,-94,-87,-106,-100,-97,115,95,59,-39,-29,-4,-36,-46,-84,15,-121,-127,-45,58,-46,-94,4,-21,29,123,-111,-128,4,53,45,-27,73,29,-44,-80,-94,-117,-109,100,-78,-84,-18,53,101,-25,-7,-27,84,44,101,28,108,105,60,95,-95,-126,-24,-59,-61,15,15,88,-71,-11,-90,94,-59,25,112,-38,126,58,-48,-64,-114,-88,71,122,36,112,1,82,-14,62,39,-62,-42,127,106,58,52,-28,-85,95,-126,50,109,5,-45,-86,-68,125,105,-6,-100,-102,74,-83,-18,-9,-127,90,-33,-18,-68,-100,48,101,-41,-86,-94,104,-68,-124,57,22,-93,17,-22,108,-99,21,13,-91,-25,-64,31,-22,-86,50,-71,-100,66,73,85,-102,-27,-27,-43,-92,-23,-17,-70,-31,69,115,122,86,4,-11,127,-105,92,85,-70,33,123,-40,125,-49,-95,-112,115,-43,124,84,117,-82,-87,61,-61,114,-32,104,-8,57,-71,62,18,-31,-18,30,18,112,94,-84,49,-7,123,-119,-90,-92,103,5,-101,-26,37,78,-31,-92,-1,-10,-50,-21,-111,35,-50,90,-60,-89,-73,60,124,-45,-2,-13,96,-96,-18,48,54,-75,31,-125,-1,-34,-64,88,93,-19,-98,-83,75,-80,-69,-91,16,-75,104,29,-6,92,112,12,21,15,-38,-33,-24,118,-56,-2,56,127,127,-14,94,-38,127,83,113,29,-48,-80,97,-50,-48,-109,-57,61,-96,41,4,-111,-4,-26,85,67,-108,-14,106,76,-113,-31,-12,-2,-30,-29,-76,-7,80,-41,26,63,94,-5,116,58,-39,-13,-76,95,44,-79,-109,-72,-101,-81,-104,26,-122,-42,38,-116,-6,-24,48,-91,112,-109,-103,-45,38,46,-82,-19,99,107,-119,-20,-52,114,-91,-102,49,62,35,97,-38,-14,112,111,107,-35,108,125,110,11,115,80,47,36,54,22,76,26,69,55,11,-65,-50,27,100,-2,-116,26,-73,76,37,-88,109,-28,3,-86,-56,26,71,-76,-35,119,16,-88,-125,-116,108,50,94,52,24,110,-47,84,15,66,110,65,86,-62,-115,-13,-65,120,25,-42,-5,120,-90,-31,-13,-43,84,-59,2,-47,-27,-32,-16,-56,62,-28,57,84,-94,-98,72,-42,-121,-87,-28,58,-101,74,-74,-18,-108,-47,29,18,-58,-22,27,-85,127,74,-25,5,121,-83,-91,119,89,97,16,-3,110,11,-101,-6,-86,-127,15,53,45,114,-54,-86,-68,30,97,32,105,-118,-8,18,-115,-43,-73,16,-88,-91,-66,48,-110,-73,-13,-74,-71,-67,-128,22,41,-5,16,-68,-35,78,-53,34,-47,122,-74,-34,-50,102,-51,9,75,115,-71,88,-85,-80,113,-32,-52,-63,-20,-5,96,63,16,-13,-29,61,3,-35,-72,22,-80,119,-34,18,68,-87,-54,-97,78,47,-12,75,43,-88,115,87,-91,-82,-21,-115,99,77,16,-82,-79,-53,-64,40,-88,-125,76,-18,-108,-39,64,54,100,75,-8,10,-84,-43,-62,23,-11,-106,33,51,111,-35,-32,43,23,-59,-98,120,2,81,-90,125,68,-85,-6,22,8,-8,-102,51,116,-45,0,-68,-77,49,-21,-91,-78,-44,1,-38,52,122,1,123,108,64,18,38,-5,-102,-2,-65,116,-75,-77,-69,-46,-78,-122,19,114,122,-80,88,-20,14,53,51,-33,53,-61,18,-30,-68,102,60,65,41,-81,-108,-73,43,33,-36,73,48,-7,38,49,105,92,44,-79,-127,-107,34,-25,-100,-51,36,-50,-85,-97,36,-125,89,-65,-40,49,-116,69,-96,-89,123,76,31,119,56,31,105,-124,105,-51,26,15,38,-108,76,76,-128,-21,63,95,92,96,-41,58,-49,-109,-115,80,99,88,-101,24,48,17,96,7,-100,49,112,79,-91,115,-73,115,74,11,57,-43,99,-117,37,-77,60,-60,85,100,2,-39,3,-115,-14,108,95,62,-52,-19,-103,-83,0,21,-73,-72,-11,-35,10,-122,-46,-111,12,81,31,56,-106,94,-93,46,-14,-108,-119,1,-67,-13,-78,-107,-1,29,118,83,-71,8,-2,90,-10,-13,-67,-84,-52,72,34,55,111,-23,-63,-54,-10,-103,-118,3,-119,-103,-128,-57,-124,-95,-56,-92,1,86,86,-72,88,-60,-109,-81,42,68,3,24,-39,-14,-94,90,51,-126,-39,-41,98,27,54,-125,6,102,-57,9,-24,19,-30,-83,56,-36,-97,-74,-124,-12,12,83,23,97,85,-65,-84,-7,-10,-39,121,-44,-78,17,4,122,-113,-14,-74,-14,11,-85,59,123,9,79,12,-9,-73,16,120,-127,0,-31,-93,119,66,22,21,75,67,114,51,29,-73,-85,20,-28,-110,-27,44,-29,-95,-50,91,125,-69,55,-40,-72,-53,-102,76,-28,-72,-3,49,54,98,24,-29,120,-16,49,-31,-40,49,-53,-76,-128,-16,22,9,-37,-74,-108,-67,-65,-43,54,7,68,-80,-37,-29,60,90,71,96,66,-106,-53,111,-10,-63,-66,-24,-23,60,28,32,-38,-74,49,-26,69,-127,-11,-87,71,35,-73,-16,83,104,-45,30,21,109,-14,-101,-70,95,-77,-21,-108,38,9,87,117,93,-115,-23,-24,-13,-63,11,111,-97,103,26,-29,-18,65,-54,66,-46,121,63,-23,33,92,37,58,12,11,-28,-102,106,-56,84,15,123,-115,12,-108,79,20,80,52,30,-78,102,-55,23,-72,-76,-4,-115,84,36,-17,-80,34,-45,-94,74,-58,-54,-8,-106,119,56,-95}
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/riscv_nnexamples_gru_test_data.h';
      define-mem-desc-line = '3';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__gru__test__data_8h_1a52f158cb32bf2b46e3d2c4b94876db75';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'RESET_GATE_WEIGHT_X2';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{65,-28,-36,70,67,55,86,-53,23,25,-19,59,67,43,-92,48,94,-113,60,-58,24,76,-15,-19,15,36,-74,115,-59,3,34,-43,21,-125,-45,127,92,-5,-65,-103,-83,51,42,109,-51,-39,-97,-64,-4,57,79,-42,88,-4,-108,83,-4,20,86,82,-87,95,12,-69,28,30,-97,-13,-33,-48,75,119,18,31,-83,-59,-114,-21,127,34,-27,-26,-47,86,-83,-49,8,29,-48,-31,-94,-59,-49,-36,0,28,-64,113,65,-8,47,-55,-49,112,-40,-39,-100,-42,32,82,27,-78,-105,3,19,88,15,-121,-120,7,-9,-107,-23,104,114,66,113,-102,-90,24,80,-34,106,48,-91,-11,22,-96,-82,75,26,-42,59,-45,23,78,79,-76,6,20,63,-118,-125,-42,111,-80,-79,-59,-121,-79,83,49,-95,-49,81,15,-11,-54,-45,64,-30,-49,81,-57,71,91,113,-46,-63,-4,-96,-95,-27,5,-52,35,67,112,58,-62,48,112,106,80,-19,103,4,-32,-118,-74,12,13,-126,-20,-5,115,-74,-30,123,-74,-66,11,-99,-16,-102,-100,-81,-20,-24,92,-79,-31,44,-24,-85,-123,5,-52,-111,73,29,28,-19,18,23,-112,-32,-52,-38,99,-59,-52,-31,87,124,28,-42,-39,81,-87,-24,16,47,20,36,1,-70,121,124,13,1,30,112,87,-86,11,36,-18,74,-104,-100,-14,0,-24,28,-53,53,66,-63,-109,-10,-50,-15,63,34,82,-59,85,-44,105,-10,-27,99,5,-105,-69,-75,2,-47,-66,71,-30,73,-11,-45,93,47,-37,-34,-8,90,-106,103,112,65,-100,-25,-13,38,74,54,27,-81,-8,19,49,94,118,-121,-116,120,-71,-87,36,-65,-112,8,-59,-106,-40,-16,68,87,-109,53,12,-7,9,6,67,78,8,-42,-123,79,-93,-102,-40,12,-66,-109,47,15,-8,-5,51,-62,111,8,-66,-82,-102,120,68,-67,9,-73,-69,-79,56,-36,-10,-69,-99,-2,-11,-66,76,37,4,92,1,-89,74,85,-124,-25,40,106,-102,42,-19,-30,0,-70,82,84,106,-84,48,16,37,33,-114,38,-29,-117,51,101,26,56,127,-81,-76,38,-124,103,-25,54,-21,-112,40,102,3,63,36,-54,16,-18,114,39,5,105,83,117,-92,-5,-14,-102,-87,-48,-77,-19,-82,-55,119,-95,-43,97,126,-48,-50,-97,-25,-102,-53,47,111,66,-82,-16,-38,76,-15,23,20,88,-19,125,-90,107,-31,102,107,30,-111,71,38,26,43,-85,82,29,-99,126,-109,21,-42,-107,-115,-123,30,-46,39,4,-19,-44,-69,86,41,4,33,57,-110,95,-22,123,71,1,119,77,90,105,81,-68,74,-38,-109,6,-82,-20,-115,-104,38,27,-44,82,-107,99,-41,-28,-55,100,10,-42,7,91,56,-91,113,-91,70,-66,-48,-18,109,-27,42,-89,-20,-63,-41,77,-13,73,10,-74,-51,88,28,50,-5,7,92,18,-98,-41,-14,8,-16,99,30,-109,7,52,110,-120,-17,33,53,1,106,-99,-14,-93,-46,-60,7,-54,100,91,93,89,-84,118,58,-84,38,57,-24,-25,22,-52,119,-85,-75,-79,60,-97,1,-13,54,-43,98,-92,65,37,-110,64,21,-18,-111,-9,86,90,42,-71,-29,86,-10,-15,-20,106,-45,-22,44,105,55,-61,-89,-119,31,93,-97,-35,9,-113,86,-113,22,-68,-29,-36,-123,98,79,34,-29,71,44,49,56,93,4,63,-3,45,12,54,-96,27,-55,-72,84,69,27,-28,-111,-57,-41,92,-106,-90,55,105,-60,94,34,94,-1,112,-86,-55,-58,68,-65,37,110,-107,-62,66,61,-69,-52,27,-61,70,-56,-116,-101,-103,127,-98,-79,25,-117,40,33,111,10,-3,-65,1,84,-41,5,-93,-85,-96,78,54,43,70,77,-53,-71,-38,48,103,-88,115,94,20,-5,-125,-7,-61,30,-25,-57,-42,-100,63,-114,40,-53,123,50,-7,121,75,67,75,3,-38,-101,-44,-46,54,38,-22,4,18,102,-126,44,86,-10,-1,118,98,102,-125,74,32,18,74,73,72,64,47,105,-72,5,73,98,9,39,18,10,-68,81,-128,-89,27,-51,51,16,119,-71,-53,51,-84,107,-116,7,73,106,20,52,-85,-74,-103,-18,29,-13,73,106,-92,107,-115,5,65,83,-79,-7,98,-42,-33,82,-64,75,-32,100,-67,-122,84,43,-111,114,-99,46,12,99,43,50,-24,-88,-60,111,68,64,54,-105,-120,119,68,5,51,63,89,-57,-75,-25,-35,-28,42,-64,101,-103,-35,-99,-96,-18,-64,-94,-46,89,-65,-38,-1,-97,127,-67,84,-18,86,115,60,-78,-109,-61,-93,-67,-87,-80,124,26,-9,111,115,-88,-71,-86,-71,-65,-15,108,-25,111,9,86,-115,-55,-23,57,27,103,108,-28,65,86,68,114,62,126,-4,33,-34,-123,87,-76,-104,-126,26,-13,44,108,105,12,-35,-58,3,-5,-32,91,49,89,88,37,38,119,-125,-48,37,53,85,-73,67,116,-116,-127,103,127,-115,92,-35,-83,-45,25,-96,-13,-90,41,-27,105,119,85,27,-3,-64,93,17,-53,104,-70,-43,65,45,-90,61,-31,-49,-99,84,46,93,-37,84,-79,13,-59,-76,62,19,-11,-96,-104,-3,-8,-78,92,98,50,-7,-39,-82,37,-126,127,-113,67,94,115,-9,-33,-57,26,-67,9,28,-8,81,-98,-10,84,34,111,-95,127,75,38,-7,-2,-71,-62,-72,99,-74,25,123,114,51,-28,103,-110,43,113,7,58,75,-95,-52,19,-112,101,26,65,-115,-91,85,-5,-45,110,-103,-34,-69,50,-15,-19,-110,-44,-7,-112,-93,29,50,-84,-55,-41,11,19,-31,-47,-62,-12,-105,-47,68,-124,-47,-113,-55,30,25,55,-14,85,-66,-5,-105,62,-27,-89,-124,-84,112,34,52,25,104,32,-30,84,-46,-38,60,-2,-107,-95,-86,-25,117,60,-121,32,84,8,-88,-1,91,-46,-76,81,44,79,105,-105,82,20,59,-115,96,21,-113,19,92,122,76,36,-112,78,16,38,73,69,54,97,41,-49,78,-71,-69,95,-85,117,10,-98,25,72,126,47,-17,4,-44,-32,-16,-12,105,76,4,-82,-91,-21,-117,30,-67,46,-8,-125,84,-51,94,0,-60,127,99,43,60,16,55,-16,-121,-61,-115,38,25,17,35,23,68,9,-107,-44,118,119,43,99,-95,40,42,-70,54,19,92,-36,82,-35,122,-96,54,-29,-50,100,-79,-71,-99,-60,-2,-100,41,97,-93,-58,-123,126,-102,81,-5,83,110,-50,58,-86,41,-126,43,-49,98,-59,94,-91,115,16,-3,-58,-30,-109,110,-114,124,22,-88,-79,-29,-100,54,-33,23,-1,-77,52,-126,114,70,-50,90,82,-13,-25,-125,16,48,101,-93,19,-103,67,-1,-32,28,-72,-26,73,45,-22,83,-68,-61,89,57,-37,90,16,-38,-124,47,-5,-113,81,71,-30,-46,-18,-52,-104,-40,49,-101,106,38,6,125,-70,25,-88,-50,-77,-12,53,110,-84,23,-109,-53,112,2,88,101,-55,-10,-72,123,-35,42,-15,98,-85,48,-100,-54,123,52,-105,7,-28,86,-125,85,12,86,-34,103,-8,-65,-24,88,-43,57,-16,114,-98,101,81,34,-83,-8,3,-27,5,110,-24,-80,9,85,-108,96,-93,-34,76,-107,71,84,-98,-10,-94,71,71,-38,-96,-112,100,127,52,-32,-127,102,61,-119,-46,-119,125,109,-23,-80,-11,-68,84,-53,35,-115,105,-88,72,110,109,17,-121,80,-87,-72,-123,-31,13,71,63,-126,107,115,-100,27,39,10,75,-128,58,103,-104,126,-59,31,89,-67,97,-96,-69,87,19,99,49,111,9,91,-98,-4,-118,103,-63,-92,-74,106,-53,52,122,12,24,123,-126,-105,104,38,107,118,10,74,-38,14,-11,76,-112,-112,30,-47,95,112,65,-94,120,21,85,33,52,55,-54,-57,-77,-16,52,88,-81,-77,52,0,90,-126,66,88,-81,83,50,81,-28,-56,-36,-8,50,4,115,58,-30,-53,-78,-114,-16,-100,33,-80,-6,96,108,4,-27,-90,8,48,-118,-112,22,-56,114,-66,4,-11,-48,118,61,104,118,-27,13,52,2,74,112,-127,48,27,59,-37,-58,18,85,-5,-41,-91,-32,-56,-5,-40,-117,-89,-48,-8,-32,43,-75,-118,-109,-92,-122,67,88,107,79,-90,30,-65,-102,-100,-112,-104,57,-33,-103,69,-26,15,-12,106,-17,50,-20,33,51,14,98,-118,-82,63,-65,-40,-89,-8,-75,-16,-1,-13,118,76,34,-100,83,-10,72,26,-13,50,92,69,12,-33,-66,76,62,-47,-10,-31,60,-52,52,74,77,30,59,-98,-78,-124,107,38,-121,97,-39,-12,-1,63,-112,71,-65,9,-66,-31,50,39,77,56,-81,-125,-109,-36,-62,-74,12,31,-128,64,62,86,-9,26,69,-45,-35,46,39,95,78,-22,81,-5,-22,90,-47,-36,58,65,88,-89,37,81,115,-3,-108,52,7,-32,80,-96,-24,-22,104,-95,-3,117,59,105,66,-113,28,55,-75,46,45,-118,79,-3,-113,119,-114,-3,-64,56,34,118,67,32,25,-8,1,-64,91,112,31,-88,91,-53,115,33,-3,14,-43,82,-42,-57,-128,-124,127,-69,-112,98,-40,-9,-35,29,-87,-74,27,120,77,-70,93,39,95,118,-39,82,83,-26,60,106,-116,43,8,-114,66,28,5,-95,111,-11,68,24,44,65,-93,26,50,13,100,-33,-93,99,6,0,77,98,5,-10,84,77,46,4,-13,-31,-83,84,-78,-97,-58,76,-71,-6,2,27,-73,81,100,-126,-7,117,-10,-6,118,52,-4,25,56,43,-26,-43,-64,23,-44,-108,-53,45,-117,91,-88,-45,-87,63,120,82,70,73,-108,89,-12,35,-81,-98,-124,-114,-126,86,21,-35,-32,-105,122,111,98,77,38,-18,-7,-48,69,22,74,-127,-62,-47,-20,-8,9,-48,-2,-53,-58,-37,51,27,-91,57,69,-27,-91,76,-127,78,76,-108,-1,13,-71,-41,38,46,60,-5,-73,-98,123,106,35,-38,-102,2,125,25,-63,-110,9,25,-106,-21,-113,-111,97,-33,33,83,55,123,72,-11,-78,-85,35,56,-110,-18,118,9,85,-100,-65,126,24,-18,50,-32,98,40,114,59,-60,-6,-72,-68,16,21,-10,-6,113,-23,-24,-27,-116,-126,119,6,-78,118,15,-53,7,113,3,83,52,44,-44,-53,-85,78,-108,-83,-128,63,-10,-122,-92,24,28,21,-87}
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/riscv_nnexamples_gru_test_data.h';
      define-mem-desc-line = '5';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__gru__test__data_8h_1a177dc986b0c728df8628a205719be0ee';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'RESET_GATE_WEIGHT_X4';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{65,28,-28,30,-90,106,24,80,-36,-97,70,-13,80,-19,-34,103,67,-33,55,-48,106,4,48,-32,86,75,-53,119,-91,-118,-11,-74,23,18,25,31,22,12,-96,13,-19,-83,59,-59,-82,-126,75,-20,67,-114,43,-21,26,-5,-42,115,-92,127,48,34,59,-74,-45,-30,94,-27,-113,-26,23,123,78,-74,60,-47,-58,86,79,-66,-76,11,24,-83,76,-49,6,-99,20,-16,-15,8,-19,29,63,-102,-118,-100,15,-48,36,-31,-125,-81,-42,-20,-74,-94,115,-59,111,-24,-80,92,-59,-49,3,-36,-79,-79,-59,-31,34,0,-43,28,-121,44,-79,-24,21,-64,-125,113,83,-85,49,-123,-45,65,127,-8,-95,5,-49,-52,92,47,-5,-55,81,-111,15,73,-65,-49,-103,112,-11,29,-54,28,-83,-40,51,-39,-45,-19,64,18,42,-100,109,-42,-30,23,-49,-112,-51,32,-39,82,81,-32,-57,-52,-97,27,-64,-78,71,-38,91,99,-4,-105,57,3,113,-59,-46,-52,79,19,-42,88,-63,-31,-4,87,88,15,-4,-121,-96,124,-95,28,-108,-120,83,7,-27,-42,5,-39,-4,-9,20,-107,-52,81,35,-87,86,-23,82,104,67,-24,112,16,-87,114,95,66,58,47,-62,20,12,113,-69,-102,48,36,112,1,-70,54,121,27,-2,-102,-11,-87,124,-81,13,-8,-66,-48,76,-77,1,19,30,49,37,-19,4,-82,112,94,87,118,92,-55,1,119,-86,-121,11,-116,-89,-95,74,-43,36,120,-18,-71,85,97,-124,126,74,-87,-104,36,-25,-48,40,-50,-100,-65,-14,-112,106,-97,-102,-25,0,8,-24,-59,42,-102,-19,-53,28,-106,-53,-40,-30,47,0,111,53,-16,66,68,-70,66,82,-82,-63,87,-109,-109,84,-16,106,-38,-10,53,-50,12,-84,76,48,-15,-15,-7,63,9,16,23,37,20,34,6,82,67,33,88,-114,-19,-59,78,85,8,38,125,-29,-90,-44,-42,105,-123,-117,107,51,-31,-10,79,-27,-93,101,102,26,107,99,-102,5,-40,56,30,127,-111,-105,12,-69,-66,-81,71,-76,38,-75,-109,2,47,38,26,-124,43,-47,15,-66,-8,103,-85,-25,82,71,-5,-30,51,54,29,-21,-99,73,-62,-11,111,-112,126,40,-109,-45,8,93,-66,102,21,3,-42,47,-82,-37,-102,63,-107,36,-115,-34,120,-8,68,-54,-123,16,30,90,-67,-106,9,-18,-46,114,39,103,-73,112,-69,39,4,5,-19,65,-79,-100,56,105,-44,83,-69,-25,-36,-13,-10,117,86,-92,41,38,-69,74,-99,-5,4,-14,33,57,-41,-110,-14,-15,68,-20,-65,95,8,-22,-16,106,37,-45,110,123,99,71,30,-22,-107,44,-62,1,-109,119,7,105,66,55,61,77,52,90,110,-61,-69,-89,-52,105,-120,81,-17,-119,27,31,-61,-68,33,74,53,93,70,-97,-56,-38,1,-109,106,-35,-116,9,-101,6,-99,-82,-14,-113,-103,86,127,-20,-93,-115,-46,-113,-98,22,-79,-104,-60,38,7,-68,25,-29,-117,27,-54,-44,100,-36,40,-123,33,82,91,-107,93,98,111,79,10,99,89,-41,-84,34,-3,-29,-65,-28,118,-55,58,71,1,44,84,100,-84,10,38,49,-41,56,5,-42,57,7,-24,93,-93,4,-85,91,-25,56,22,63,-96,-3,78,-91,-52,113,119,45,54,12,43,-91,-85,70,-75,54,70,-96,77,-66,-79,-48,60,27,-53,-55,-71,-18,-97,109,1,-72,-38,84,48,-27,-13,42,54,69,103,27,-88,-89,-43,-20,98,-28,115,-111,94,-63,-92,-41,65,-57,20,-41,-5,77,37,-13,-110,92,-125,-106,-7,73,64,10,21,-90,-61,55,30,-74,-18,-51,-111,105,-25,-60,-57,88,-9,28,86,94,-42,34,-100,50,90,-5,42,94,63,-1,-114,7,-71,92,-29,112,40,-86,-53,18,86,-98,-10,-55,123,-58,50,-7,-103,121,-18,-46,-35,89,-58,75,29,67,-13,-65,3,-38,-5,75,73,3,106,-1,-32,-97,91,-38,-92,-101,107,127,49,-67,89,-44,-115,-46,5,84,88,-18,37,54,65,38,83,86,38,115,119,-22,-79,4,-7,60,-125,-78,-48,18,98,102,-42,-109,37,-61,53,-126,-33,44,82,-93,85,-67,-73,86,-64,-10,75,-87,67,-80,116,-1,-32,118,100,124,-116,26,-127,98,-67,102,-122,-9,103,111,127,-125,84,74,43,115,-115,-88,92,32,-111,18,114,-71,-35,-86,-83,74,-99,73,46,-71,-45,-65,25,72,12,64,99,-15,-96,108,-13,47,43,105,50,-25,-90,111,41,-72,-24,5,-88,9,-27,86,105,73,-60,98,111,-115,119,-55,85,9,68,39,64,-23,27,57,-3,18,54,10,-105,27,-64,103,93,-68,-120,81,119,108,17,-28,-53,-128,68,-89,5,65,104,86,-70,27,51,-51,63,68,-43,114,65,51,89,16,-57,62,45,126,-90,119,-75,-71,-25,-4,61,33,-31,-53,-35,51,-28,-34,-49,-123,-99,-84,42,107,-64,87,84,-76,46,-116,101,7,-103,-104,93,-126,-37,73,-35,106,-99,26,84,-13,-79,20,-96,52,-18,44,13,108,-59,-85,-64,-74,-94,105,-76,12,62,19,-115,-11,-91,117,-67,60,46,-96,85,-104,-5,-121,-8,32,-125,-3,-45,-8,110,84,84,8,-51,-78,-103,92,-34,-88,94,-1,0,98,-69,50,50,91,-60,-46,127,-7,-15,-39,-19,-76,99,81,43,-82,-110,37,-44,44,60,79,16,-126,-7,127,-112,105,55,-105,-16,-113,-93,67,29,82,-121,20,-61,94,50,115,-84,59,-115,-115,38,-9,-55,-33,-41,96,25,21,17,-57,11,26,19,-113,35,19,23,-67,-31,9,-47,92,68,122,9,28,-62,-8,-12,76,-107,36,-44,81,-105,-98,-47,-112,118,78,119,-10,68,84,-124,16,43,38,99,34,-47,111,-113,73,-95,69,40,-95,-55,127,30,54,42,97,-70,75,25,38,55,41,54,-49,19,-7,-14,-2,85,78,92,-71,-36,-71,-66,-62,-5,-69,82,95,-35,-72,-105,99,62,-85,122,117,-96,-74,-27,25,-89,10,54,-98,-29,123,-124,114,-84,25,-50,72,100,51,112,-28,34,126,-79,47,-71,103,52,-110,25,-17,-99,4,-60,43,104,113,32,-44,-2,-32,-100,7,-30,58,84,-16,41,-12,97,75,-46,-95,-38,105,-93,76,-58,-52,60,19,-2,4,-123,-82,126,-112,-107,101,-95,-91,-102,-21,81,26,-86,65,-25,-117,-5,30,83,110,-38,-50,-124,57,-31,-16,13,58,47,-86,-5,114,71,-98,63,41,-113,-126,81,101,-126,81,107,43,71,-49,-30,34,115,-83,-100,98,-46,-59,-18,-8,27,3,39,94,-52,-91,-104,-27,10,5,75,115,-40,16,49,110,-128,-24,58,-3,-101,-58,106,-80,103,9,-104,-30,38,-109,6,85,126,-108,-59,110,125,-114,-70,96,31,-93,89,124,25,22,-88,-34,-67,76,97,-88,-50,-79,-77,-107,-96,71,-69,-29,-12,-100,53,84,87,-98,19,54,110,-33,-84,-10,99,-94,49,23,23,-1,-109,71,111,71,9,-77,-53,52,112,-38,91,-96,-98,-126,2,114,88,-112,-4,100,-118,70,101,-50,-55,127,103,52,-63,90,-10,82,-72,-32,-92,-127,-74,-13,123,-25,-35,102,106,61,-53,-125,42,16,-15,-119,52,-46,122,48,98,101,-85,-119,12,125,24,-93,48,19,-100,109,123,-23,-126,-103,-54,67,123,-80,-105,-11,104,-1,52,-32,-105,-68,38,84,107,28,7,-72,-28,-53,118,35,10,-26,86,73,-125,-115,74,105,-38,45,85,-22,12,-88,14,72,-11,83,86,-68,-34,110,76,109,-112,-61,103,89,-8,17,-112,-121,30,57,-65,-37,-24,80,-47,-87,95,90,88,16,-43,-72,112,-123,65,-94,52,120,2,-16,26,-1,69,21,74,85,112,-13,-45,118,-35,33,-127,52,48,76,46,34,39,55,27,-54,59,-100,95,83,78,-57,-37,-77,-58,-10,-22,72,81,-16,18,52,85,26,-5,-13,-22,88,-5,-81,-41,50,90,92,-47,-77,-91,52,-32,69,-36,12,58,0,-56,90,-5,-33,65,-66,88,-126,-40,66,-117,76,-89,62,37,88,-89,-81,-48,-47,81,-10,115,83,-8,50,-32,-31,-3,60,-108,81,43,-28,-75,-52,52,52,7,-56,-118,-36,-109,74,-32,77,80,-8,-92,50,-122,30,-96,59,-24,4,67,115,88,-98,-22,-78,104,58,107,-30,79,-124,-95,107,-3,-53,-90,-78,30,38,117,-121,59,-114,-65,-16,-102,97,105,-39,66,-100,-100,33,-112,-12,-113,-1,28,-80,-104,-6,57,63,55,-112,-75,96,-33,108,-103,71,46,-65,45,4,69,-27,-26,9,-118,-66,79,-90,15,8,-12,-31,-3,50,-113,48,106,-118,-17,39,119,77,-114,-112,50,22,-20,56,-3,-81,-64,-56,33,114,51,-125,56,-109,34,-66,14,4,98,-36,118,-62,67,-11,-118,-48,-82,-74,32,12,25,118,63,61,-65,31,-8,-128,1,104,-40,118,-89,64,-64,62,91,-27,-8,13,-75,86,112,-9,31,-88,-10,91,84,111,123,98,72,-53,77,115,46,77,-11,38,-78,33,4,-3,-13,-18,-85,-7,35,14,-31,-43,-83,-48,56,69,-110,82,84,-42,-78,22,-18,74,118,-57,-97,-128,-58,-127,9,-62,85,-124,76,127,-71,-47,-100,-20,-65,-69,-6,-112,2,-8,126,9,24,98,27,-40,-73,-48,-18,-2,50,-9,81,-35,100,-53,-32,-58,98,29,-126,-87,-7,-37,40,51,114,-74,117,27,-10,27,59,-91,-60,120,-6,77,118,57,-6,69,-72,-70,52,93,-4,-27,-68,-91,16,39,25,95,56,76,21,-127,-10,118,43,-39,-26,78,-6,76,113,82,-43,83,-64,-108,-23,-1,-24,-26,23,60,-44,13,-27,-71,-116,106,-108,-116,-53,-41,-126,38,119,43,45,8,-117,46,6,60,-78,-114,91,66,-88,-5,118,-73,15,28,-45,5,-87,-98,-53,123,7,-95,63,111,120,106,113,35,3,-11,82,68,70,-38,83,-102,52,24,73,44,-108,2,44,125,-44,65,89,-93,-12,25,-53,-63,-85,26,35,50,-81,-110,78,9,-108,13,-98,100,-124,25,-83,-106,-128,-33,-114,-93,-126,-21,63,-113,-10,99,86,6,21,-111,-122,97,-92,0,-35,77,-32,-33,24,33,28,98,-105,5,122,83,21,55,-87}
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/riscv_nnexamples_gru_test_data.h';
      define-mem-desc-line = '7';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__gru__test__data_8h_1a9ab9fa603208647d992b3367a757979b';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'HIDDEN_STATE_WEIGHT_X2';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{-3,-33,59,21,117,70,0,44,108,108,-47,-80,-118,34,88,-91,-123,-108,8,51,26,82,-80,107,-100,-69,97,-90,17,19,63,111,-40,-125,110,24,58,-69,26,-31,-65,-37,-47,-41,-109,106,-100,108,-99,108,116,104,86,-50,-45,10,-53,112,34,96,-10,-39,-32,-25,69,102,-2,-4,-25,121,-1,-28,-48,-100,0,-128,60,-73,42,-32,118,-88,-113,-112,-113,70,-98,118,95,77,-52,123,-99,72,26,-102,-32,120,113,22,6,-68,84,-33,103,66,111,60,-76,33,10,25,-43,93,41,-79,110,13,67,107,-113,90,58,64,-125,79,-85,-18,76,80,-59,11,-18,-74,15,-102,99,-19,117,99,65,-50,-108,-121,-9,-104,33,94,-95,110,-48,-97,76,36,1,-58,86,-115,45,-88,38,51,123,-23,-20,-43,-37,15,91,-85,-88,6,-96,58,78,13,23,1,-43,62,-70,-108,44,30,74,90,79,-80,-20,71,-21,0,60,19,-59,-52,44,-14,77,92,-69,121,-123,-27,119,-84,79,87,24,85,118,1,-51,-96,60,102,-6,15,96,120,-109,6,35,11,-119,-109,-18,16,-112,91,-126,71,-29,121,-21,-120,37,57,-117,-39,93,56,-73,-104,77,-107,-52,111,-61,-4,44,-119,67,72,-66,36,-127,-113,-124,123,21,98,84,86,76,23,78,7,-127,-4,1,-46,-107,59,-21,53,-65,-99,-15,-98,53,-31,7,64,7,105,51,-75,50,-52,48,101,-126,-120,5,34,3,81,-39,70,41,112,25,30,79,-6,107,-11,-97,92,-84,67,49,107,60,101,-37,27,-91,-61,-96,120,-113,87,-46,68,64,102,-86,-60,13,-71,56,-105,90,-9,-35,27,103,120,39,23,-39,-1,-85,-95,-6,119,-41,-2,-69,102,102,-119,-3,-11,-125,-111,40,-115,-41,-117,-44,-7,83,123,-21,23,99,-107,43,100,-99,-3,89,3,-113,103,47,-94,-69,-38,-28,-37,49,-117,-49,-126,17,-98,37,92,55,-116,-70,-50,77,120,47,124,78,114,67,-48,6,-42,-115,85,116,-114,-46,-50,-13,70,-101,110,-55,20,-51,125,-19,-9,-15,46,30,-27,-123,114,-50,-30,-72,76,-83,71,47,-45,74,102,44,108,-26,108,-113,-43,110,-91,37,-69,76,-33,106,-76,-96,20,-117,63,-33,-5,11,-121,-51,63,-56,59,-16,-33,114,74,124,73,99,-50,51,-71,118,106,30,-92,26,-40,119,-121,2,-45,9,0,-5,-2,-89,88,-11,-85,-60,19,81,-96,75,82,-40,124,89,-36,-117,-100,-2,-34,112,101,39,-101,-106,60,59,-126,-32,96,68,-53,87,20,54,-24,46,-95,65,-112,22,60,122,-22,-106,-124,97,-37,-86,95,-110,-8,44,58,-12,-120,-45,-86,-32,-86,-94,-14,15,29,-8,-114,71,70,-93,-69,100,-123,-18,-47,-12,127,104,-102,93,-11,-73,121,87,-79,-92,46,92,-108,-107,79,121,-71,-89,16,-11,-52,72,-114,-32,-60,-9,-57,-4,10,-81,-22,68,74,76,-68,-127,96,-84,69,-3,-26,-106,-3,-87,-65,105,109,122,-103,31,-108,-86,-5,-39,85,88,67,-82,0,-25,93,61,-62,5,-54,-114,-51,-9,-114,20,49,-26,38,19,39,-103,33,-120,37,-97,32,-89,119,111,-124,-99,78,-49,-128,76,-18,-12,-109,96,90,-73,-104,59,-59,-92,123,55,54,-120,-80,-48,-16,-95,96,36,118,-119,-58,93,45,-43,-75,64,38,-2,-72,-111,22,-89,-75,-120,-42,45,108,59,-105,40,27,32,-66,121,-22,-71,-9,118,124,60,-96,47,4,14,-27,64,70,47,-91,-70,1,-44,94,-46,53,4,23,-124,-92,-95,83,-49,-81,40,-80,48,0,39,1,-113,32,40,-21,-1,-110,102,1,-74,-51,40,108,-35,-36,89,84,123,-48,-115,-115,83,-61,114,-127,-61,114,100,-82,-45,60,87,60,19,86,97,-68,40,-66,75,86,-32,-128,88,-57,-27,77,3,-27,43,-39,-62,66,5,-82,45,-104,-78,34,57,96,89,-90,66,-10,37,-110,-30,82,-58,13,94,12,115,35,117,0,80,61,-7,107,-104,-21,21,-70,-93,-94,-51,-61,39,-62,64,-82,-109,76,84,58,-47,-100,52,46,-51,88,91,8,-47,108,-80,25,-58,111,-59,-83,-75,92,98,110,54,106,65,-47,-120,-5,90,-123,101,-61,-85,-93,109,88,0,8,59,86,56,126,17,-26,58,-101,-25,35,0,-123,-3,-56,112,-128,8,17,-52,88,31,-3,105,-56,68,-1,-94,96,-19,10,-22,-88,-10,119,-44,19,42,75,-86,18,-107,89,-82,-120,76,40,84,-122,29,33,-47,17,-50,-13,23,-66,-46,85,-29,-110,42,-68,8,99,-93,-29,101,16,52,-13,127,0,86,-117,-92,-70,-32,-27,127,-123,1,34,-13,92,114,-11,29,-103,-121,-54,20,73,16,74,108,16,-61,89,50,-30,-14,116,44,-31,16,96,24,-51,7,39,-87,-69,-61,-98,61,-46,113,85,-95,103,67,99,-66,-45,-42,-70,96,104,5,-111,69,-25,99,-118,23,109,11,4,-41,-94,73,100,96,6,90,-75,-25,79,-13,-43,-6,-12,51,12,40,124,-56,81,-8,59,-60,-26,-54,33,122,85,53,-99,125,19,-26,94,41,-5,46,-48,-70,-10,41,102,-1,-98,-9,15,29,46,-66,-118,-53,45,119,-127,94,53,-58,90,124,5,-110,-98,-80,-77,77,29,19,105,-121,92,9,-124,50,-119,59,40,67,104,-12,13,103,101,47,-51,34,-66,-101,-117,112,-5,118,-48,-60,-114,38,-71,2,51,114,80,115,-5,116,20,16,-47,-19,30,24,-68,7,-30,-3,-64,-7,-34,-12,44,34,-91,-97,116,112,-99,108,-75,17,26,-14,-61,80,22,-7,34,47,-93,45,106,121,78,43,-97,39,-99,-68,-72,-7,64,-49,-82,-127,78,-64,48,18,15,126,-125,-111,-69,-111,10,-46,111,-75,123,-44,-67,-31,-96,-67,-53,-53,-106,67,-101,23,62,30,9,-114,-12,-57,-38,-78,95,-10,-3,110,88,123,-26,78,-125,114,53,10,-57,26,38,-51,73,92,-124,79,15,75,-62,109,-113,-67,1,35,52,-36,55,7,111,-43,109,101,88,122,-21,-32,-87,59,16,-122,-109,-118,17,-22,-39,53,-105,77,90,-24,-65,43,-27,113,30,-117,-30,106,37,55,59,54,-70,99,99,-73,120,97,-39,-88,-54,101,51,-76,70,-121,-68,23,-73,-31,75,-8,-63,-123,-93,96,-81,99,-95,28,-36,55,-104,32,-64,41,-97,95,-89,126,-26,-25,126,2,-26,-54,110,-86,110,74,-3,-110,56,-60,-49,117,-82,-55,-103,-112,70,-85,85,-63,82,7,75,-61,90,32,35,-115,72,73,-121,63,-84,-52,-29,-59,-4,29,64,119,127,58,-117,48,126,120,-115,-15,-10,27,27,-81,117,-5,121,-72,113,31,-13,10,27,-106,-51,81,-96,-22,19,-78,6,71,-34,123,118,75,-23,-72,-97,111,-121,0,80,28,52,95,59,-116,72,80,-75,-62,88,23,-102,13,6,113,-85,98,45,-96,-32,94,-7,12,-9,86,18,59,-15,75,13,-70,50,-93,52,67,53,-31,19,45,-111,36,39,-91,-77,104,71,7,-44,-76,3,-62,121,43,37,-7,-96,-6,57,-104,30,-126,-94,118,-44,91,29,124,-86,-13,55,41,-41,91,-112,-25,103,81,-70,-112,113,-25,-73,-82,16,67,-5,104,56,66,-115,-90,-126,106,80,-78,-51,-15,-68,-3,102,-10,-123,-10,-71,-111,86,48,-45,101,81,-114,-94,77,-127,-96,-100,86,109,-33,15,-34,60,88,-86,-63,-103,-46,101,-127,-88,90,-37,82,-125,-28,-6,61,-104,77,0,-52,59,-9,-82,59,-78,79,80,-77,-125,-95,16,26,-55,-16,15,-76,-9,56,110,85,-102,-23,-12,-6,-97,-34,32,-79,-95,71,126,127,30,-112,-115,75,-8,125,103,-118,65,-43,107,46,96,-41,-87,-64,-18,126,82,10,81,45,95,61,9,28,-113,-71,47,117,26,-81,73,49,-55,-126,-33,62,-84,-87,-56,-71,97,49,-124,-76,-9,97,119,-23,127,-29,20,-66,-80,-122,40,-2,116,126,-120,-48,124,57,-107,104,80,-13,81,118,33,88,119,-110,33,-35,-75,-6,89,-41,99,46,127,-36,54,-55,50,24,51,49,-71,37,-117,114,6,110,88,84,-30,-45,-50,113,-12,-57,59,-18,49,99,-124,46,-48,88,-82,-121,-97,15,-73,-128,-121,46,30,-93,-109,-15,-86,-2,75,1,-32,-27,-86,-13,-38,48,10,-36,-107,-27,-48,88,-7,-88,98,-83,61,-81,20,-123,18,-41,-127,-55,-66,24,-107,73,30,-42,-74,124,-43,-125,102,98,6,32,24,-123,32,113,105,-81,117,-41,-54,-113,-126,-28,31,-56,-64,-6,-103,-36,-2,-59,34,-40,-64,-39,-64,-74,-105,50,-86,-66,-14,-71,35,-116,-20,15,-119,-12,90,-117,-29,13,-8,-75,57,67,124,-38,66,113,-80,113,105,45,-74,-80,108,-24,-3,36,62,-8,109,-40,-101,106,12,-47,-113,-118,-12,-3,-86,-52,-93,-24,-62,-119,-93,67,39,4,-18,-103,24,1,71,93,95,-113,-7,34,-10,-77,-74,96,86,52,-2,-45,-71,-48,124,-97,1,23,-59,-117,-74,58,-31,-115,114,-14,-115,77,82,100,67,117,-16,-64,105,-19,59,124,124,-116,-33,22,-115,30,102,91,98,-124,38,12,-38,-23,-106,52,75,-45,74,-6,-29,31,117,20,99,66,27,-92,127,-67,-53,68,-66,-26,35,114,-84,-74,-94,-14,-43,-106,-32,-67,-27,28,29,-32,-101,-60,-55,-6,-101,-42,61,111,107,-87,-67,102,-36,119,-81,-54,52,-114,5,-26,115,-7,44,-30,-21,-67,33,-92,29,-30,3,7,-101,-83,-115,29,68,49,-70,-40,-116,63,-49,115,97,123,119,22,-13,47,-4,-14,-94,94,-122,56,58,57,-127,-60,-46,29,94,-105,49,-72,94,20,-8,104,35,-90,19,-26,24,-7,109,10,-9,80,-105,0,126,94,105,63,85,43,-63,-2,-32,39,-119,-12,-108,33,-67,127,-66,-23,-123,8,41,-21,-30,117,20,-85,-39,-87,2,96,-12,-128,83,67,-53,-101,3,-3,-22,-16,51,125,-125,-76,25,42,101,101,35,-36,103,85,-71,-24,6,26,105,60,112,-91,69,13,21,10,-93,22,-111,0,-38,4,-34,45,-86,121,-42,-54,7}
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/riscv_nnexamples_gru_test_data.h';
      define-mem-desc-line = '9';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__gru__test__data_8h_1a619947523492a72ab306da514e843ae3';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'HIDDEN_STATE_WEIGHT_X4';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{-3,69,-33,102,76,60,80,19,59,-2,21,-4,-59,-59,11,-52,117,-25,70,121,-18,44,-74,-14,0,-1,44,-28,15,77,-102,92,108,-48,108,-100,99,-69,-19,121,-47,0,-80,-128,117,-123,99,-27,-118,60,34,-73,65,119,-50,-84,88,42,-91,-32,-108,79,-121,87,-123,118,-108,-88,-9,24,-104,85,8,-113,51,-112,33,118,94,1,26,-113,82,70,-95,-51,110,-96,-80,-98,107,118,-48,60,-97,102,-100,95,-69,77,76,-6,36,15,97,-52,-90,123,1,96,-58,120,17,-99,19,72,86,-109,-115,6,63,26,111,-102,45,35,-88,11,-40,-32,-125,120,38,-119,51,-109,110,113,24,22,123,-18,-23,16,58,6,-69,-68,-20,-112,-43,91,26,84,-31,-33,-37,-126,15,71,-65,103,-37,66,91,-29,-85,121,-47,111,-41,60,-88,-21,6,-120,-109,-76,106,33,-96,37,58,57,-100,10,108,25,78,-117,13,-39,-99,-43,108,93,23,93,1,56,116,41,104,-79,-43,-73,62,-104,86,110,-50,13,-70,77,-108,-107,-45,67,10,107,44,-52,30,111,-53,-113,112,90,74,-61,90,-4,34,58,96,64,79,44,-80,-119,-10,-125,-39,79,-20,67,71,72,-32,-85,-25,-18,-21,-66,0,36,-127,-96,-113,120,49,76,-117,-33,-124,-113,123,87,-49,106,-126,-76,21,-46,98,68,17,-96,-98,20,84,64,86,102,37,-117,92,63,76,-86,23,-60,55,-33,-116,-5,78,13,7,-71,-70,11,-50,-121,-127,56,-4,-105,77,-51,120,63,1,90,-46,-9,47,-56,124,59,-107,-35,59,27,78,-16,114,-33,-21,103,53,120,67,114,-48,74,-65,39,-99,23,6,124,-42,73,-15,-39,-98,-1,-115,99,85,-50,53,-85,-31,-95,116,51,-114,-71,7,-6,64,119,-46,118,-50,106,7,-41,105,-2,-13,30,70,-92,51,-69,-75,102,-101,26,110,-40,50,102,-52,-119,-55,119,20,-121,48,-3,101,-11,-51,2,125,-45,-126,-125,-120,-111,-19,9,-9,0,5,40,34,-115,-15,-5,46,-2,3,-41,81,-117,30,-89,-27,88,-39,-44,70,-7,-123,-11,114,-85,41,83,112,123,-50,-60,-30,19,25,-21,30,23,-72,81,76,-96,79,99,-6,-107,-83,75,71,82,107,43,-11,100,47,-40,-45,124,-97,-99,92,-3,74,89,102,-36,-84,89,67,3,44,-117,108,-100,49,-113,107,103,-26,-2,108,-34,60,47,101,-94,-113,112,-43,101,-37,-69,27,-38,110,39,-91,-101,-91,-28,-61,-37,37,-106,-69,60,59,121,-126,-71,-97,47,32,4,-32,-89,96,16,-89,14,119,-27,68,-11,-53,-52,111,64,-124,70,87,72,20,-114,-99,47,78,-91,54,-32,-24,-60,-49,-70,-128,1,46,-9,-95,-57,76,-44,-18,94,65,-4,-112,10,-12,-46,-109,53,22,-81,60,-22,96,4,90,23,122,68,-22,74,-73,-124,-104,-92,-106,76,-124,-68,59,-95,-59,83,97,-127,-37,96,-92,-49,123,-81,-86,-84,95,69,55,40,54,-80,-110,-3,-8,-26,-120,48,-80,0,44,-106,58,-3,-48,39,-16,1,-12,-87,-120,-65,-95,-113,96,32,-45,105,-86,109,36,40,118,-21,-32,122,-86,-103,-119,-1,-58,-110,-94,31,-14,-108,93,102,45,1,15,-86,29,-5,-43,-74,-75,-51,-8,-39,-114,85,64,40,38,108,71,88,70,67,-2,-35,-72,-36,-93,-82,-69,0,-111,89,22,84,100,-25,-123,93,-89,123,-75,-48,-18,61,-47,-62,-120,-115,-42,-115,-12,5,127,-54,45,83,108,-61,104,-114,-102,-51,59,114,-105,-127,93,-9,-11,-114,40,-61,27,114,-73,20,121,49,32,100,-66,-82,87,-26,-79,38,121,-45,-22,60,-92,19,46,39,-71,87,-9,60,92,-103,-108,33,118,19,124,86,-107,-120,79,37,60,97,-96,-68,40,-51,-66,88,-10,-61,119,89,75,91,86,8,-44,50,19,-30,-32,-47,-128,108,42,-14,75,116,88,-80,-57,25,-86,44,18,-31,-27,-58,77,111,-107,16,89,96,3,-59,-27,-83,-82,24,-120,-51,43,-75,-39,92,76,7,40,39,-62,98,66,110,84,-87,-122,-69,5,54,-82,106,29,-61,33,-98,45,65,-104,-47,-47,61,17,-46,-78,-120,34,-5,-50,113,-13,85,57,90,96,-123,23,-95,-66,103,89,101,-90,-61,-46,67,85,99,66,-85,-10,-93,-29,-66,-110,-45,37,109,-110,88,42,-42,-68,-70,-30,0,82,8,8,96,99,104,-58,59,13,86,-93,5,-29,-111,94,56,12,126,101,69,16,-25,115,17,35,-26,52,99,-13,-118,117,58,0,-101,127,23,0,109,80,-25,61,35,86,11,-117,4,-7,0,107,-123,-92,-41,-70,-94,-104,-3,-21,-56,-32,73,-27,100,21,112,-70,-128,127,96,-123,6,-93,8,-94,17,1,90,34,-75,-51,-52,-61,88,-13,-25,92,79,39,31,-62,-3,114,-13,-11,-43,64,105,-82,-56,29,-6,-103,-12,-109,68,76,-1,-121,51,-54,12,84,-94,58,96,20,40,73,124,-47,-19,-100,10,16,-56,74,81,52,-22,46,-88,108,-8,16,59,-60,-101,-26,-117,-127,-36,78,55,-54,112,33,-5,-64,7,48,111,122,118,85,-48,18,-43,15,109,53,-60,-99,-114,126,101,-125,88,125,38,19,-71,-111,122,-69,-21,-26,2,94,51,-111,-32,10,-87,41,114,-5,80,-46,59,111,16,46,115,-48,-5,-75,-122,123,-109,-70,116,-10,20,-44,-118,-67,17,41,16,102,-47,-31,-22,-96,-39,-1,-19,-98,30,-67,53,-53,-105,-9,24,15,-68,-53,77,-106,90,29,7,46,-30,67,-24,-101,-65,-66,-3,-118,-64,23,43,62,-27,-53,-7,45,-34,30,113,9,30,119,-12,-127,44,-114,-117,-12,-30,94,34,53,-91,-57,106,-38,37,-58,-97,90,116,-78,55,95,59,124,112,5,-99,-10,54,-3,-70,-110,108,-98,-75,110,99,88,99,-80,17,-77,26,123,-73,-26,120,77,-14,29,-61,78,97,-125,-39,19,80,105,22,114,-88,53,-54,-121,-7,92,34,10,101,-57,51,9,47,-124,-93,26,-76,38,70,50,45,-119,106,-51,-121,73,-68,59,121,40,78,92,23,-124,-73,67,43,104,-97,79,-31,15,75,-12,39,13,-99,75,-8,-62,-63,103,-68,101,-72,109,-123,-113,-93,47,-7,-51,64,-67,96,1,-81,34,-49,-66,-82,35,99,52,-95,28,27,-36,27,-93,-15,52,-68,55,-81,-104,117,67,-3,53,102,32,-5,-64,121,-31,-10,19,-123,41,-72,-97,113,45,-10,-111,-71,95,31,-89,-13,36,-111,39,86,126,10,-26,27,-91,48,-77,-45,-25,-106,126,-51,104,101,71,81,2,81,-26,-96,7,-114,-44,-94,-54,-22,110,19,-76,77,3,-127,-86,-78,110,6,-62,-96,121,-100,74,71,-3,-34,43,86,37,109,-110,123,56,118,-7,-33,-96,15,-60,75,-49,-23,-6,-34,57,60,117,-72,-82,-97,-104,88,30,-86,-55,111,-103,-121,-126,-63,-94,-103,-112,0,70,80,118,-46,-44,101,-85,28,85,52,91,-127,29,-88,-63,95,82,59,124,90,-86,-37,7,-116,75,72,-13,82,55,-125,-61,80,90,-75,41,-28,-41,-6,32,-62,35,88,91,61,-112,-104,-115,23,72,-102,-25,77,103,0,73,13,-121,6,81,-52,-70,59,63,113,-84,-85,-112,-9,113,-82,-52,98,-29,45,-25,59,-73,-78,-59,-96,-4,-32,-82,79,16,80,29,94,64,-7,67,-77,-5,-125,119,12,127,-9,104,-95,56,16,58,86,-117,18,66,26,-115,-55,48,59,126,-15,-90,-16,-126,15,120,75,-115,13,106,-76,80,-9,-15,-70,-10,50,-78,56,-51,110,85,-29,-102,20,15,-56,-73,-64,-23,-66,-12,-80,-128,-6,-121,-103,-6,-122,-97,40,46,-36,30,-2,-34,-2,32,116,-93,-59,-109,34,-79,126,-95,-120,-15,-40,-86,-64,71,-48,126,124,-2,-39,75,-64,127,57,30,-107,1,-74,-32,-105,-112,104,-115,80,-27,50,-86,-86,75,-13,-8,81,-13,-66,-38,-14,125,118,103,33,48,-71,10,35,-118,88,65,119,-36,-116,-107,-20,-43,-110,107,33,-27,15,-48,-119,46,-35,96,-75,88,-12,-7,90,-41,-6,-87,89,-88,-117,98,-29,-64,-41,-18,99,-83,13,61,-8,126,46,82,127,-81,-75,20,57,10,-36,81,54,-123,67,18,124,45,-55,95,50,-41,-38,-127,66,61,24,9,51,-55,113,-66,-80,28,49,-113,-71,24,113,-107,105,-71,37,47,-117,73,45,30,-74,117,114,26,6,-42,-80,-74,108,-81,110,73,88,124,-24,-43,-3,49,84,-55,-30,-125,36,102,62,-126,-45,-33,-50,98,-8,6,109,62,113,-84,-12,32,-40,24,-101,-87,-57,-56,59,-123,106,32,12,-71,-18,97,49,113,-47,105,-113,49,99,-124,-124,-81,-118,117,-12,-76,46,-9,-48,-41,-3,-54,-86,97,88,119,-82,-113,-52,-126,-93,-23,-121,127,-97,-28,-24,31,-62,-119,52,-93,75,7,33,-101,-67,67,-45,39,74,-83,127,-115,-66,4,-6,-18,-29,29,-23,68,-123,-103,31,24,117,49,8,-70,41,1,20,71,99,-40,-21,-116,-30,93,66,95,27,63,117,-49,20,-113,-92,-7,127,115,-85,97,-39,34,-67,-10,-53,123,-87,119,2,-77,68,-74,-66,22,96,-13,-12,96,-26,86,35,47,-128,-4,83,52,114,-2,-84,-14,67,-94,-53,-45,-74,-71,-94,94,-101,-122,3,-48,-14,124,-43,56,-3,58,-22,-97,-106,1,-32,57,-16,-127,51,23,-67,-59,-27,-60,125,-46,-125,-117,28,-74,29,29,-76,94,25,58,-32,-31,-101,-105,42,49,101,-115,-60,114,-55,-72,101,94,35,-14,-6,-115,-101,20,-36,-8,103,77,-42,82,61,104,85,35,-71,100,111,67,107,-90,-24,19,6,117,-87,-16,-67,-26,26,24,105,-64,102,105,-36,-7,60,109,112,-19,119,59,-81,10,-91,-9,69,124,-54,124,52,80,13,-105,21,-116,-114,-33,5,0,10,126,-93,22,-26,-115,115,94,22,105,-111,30,-7,102,44,63,0,85,-38,91,-30,98,-21,43,4,-63,-34,-124,-67,38,33,-2,45,-32,-86,12,-92,-38,29,39,121,-119,-42,-23,-30,-106,3,-12,-54,-108,7}
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/riscv_nnexamples_gru_test_data.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__gru__test__data_8h_1a89f5a888f55a353a914ccf6542c41f0b';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'UPDATE_GATE_BIAS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{-85,78,113,70,33,38,8,114,70,-35,-67,65,31,-24,-70,-124,-89,104,124,-122,111,61,-87,75,-61,-98,83,-69,-63,45,-11,103}
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/riscv_nnexamples_gru_test_data.h';
      define-mem-desc-line = '13';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__gru__test__data_8h_1a8b4b6522d1ab0d6c51a1fe3c51d0020d';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'RESET_GATE_BIAS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{-77,67,-93,-3,98,59,-121,33,49,50,41,91,-115,-33,71,47,-70,45,89,-115,72,106,-22,100,97,-100,-95,108,-33,3,14,30}
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/riscv_nnexamples_gru_test_data.h';
      define-mem-desc-line = '15';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__gru__test__data_8h_1a73d4e38a4aa9fa9d761d08d33b3a07fd';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'HIDDEN_STATE_BIAS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{-85,78,113,70,33,38,8,114,70,-35,-67,65,31,-24,-70,-124,-89,104,124,-122,111,61,-87,75,-61,-98,83,-69,-63,45,-11,103}
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/riscv_nnexamples_gru_test_data.h';
      define-mem-desc-line = '17';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__gru__test__data_8h_1a1b0f5149443198bdde521a0a06c453c1';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'INPUT_DATA1';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{-367,-338,0,-89,453,-413,-343,-16,42,418,201,274,-352,477,-290,-92,266,-49,342,453,-398,247,-153,328,217,342,85,69,-38,351,73,128}
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/riscv_nnexamples_gru_test_data.h';
      define-mem-desc-line = '19';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__gru__test__data_8h_1ae0d8a5f051f29980e62884ec34668026';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'INPUT_DATA2';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{280,41,-322,61,315,350,504,-227,-221,-483,352,252,455,-236,344,364,-378,229,-187,-498,295,357,-511,58,-349,-458,-420,-66,-400,-379,477,-60}
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/riscv_nnexamples_gru_test_data.h';
      define-mem-desc-line = '21';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnexamples__gru__test__data_8h_1a55c93e4e823bca1e77f4487d1ab9c056';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'HISTORY_DATA';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{-38,53,105,-79,-463,51,-343,-226,-435,-282,218,441,-299,-215,-109,335,340,-471,-109,273,33,-245,-469,170,-26,-59,192,-119,76,-6,236,-145}
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/riscv_nnexamples_gru_test_data.h';
      define-mem-desc-line = '23';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/gru/riscv_nnexamples_gru_test_data.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__nnfunctions_8h';
  file-name = 'riscv_nnfunctions.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnfunctions_8h_1a710b6e009261290c6151f329cf409530';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'USE_INTRINSIC';
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      define-mem-desc-line = '102';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    enum = {
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'riscv__nnfunctions_8h_1a065cc3657730e4d77f458ca5fc435e9b';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = 'riscv_nn_activation_type';
      enum-mem-enum = { enum-name = RISCV_SIGMOID; enum-value = '= 0'; };
      enum-mem-enum = { enum-name = RISCV_TANH; enum-value = '= 1'; };
      enum-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      enum-mem-desc-line = '115';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Struct for specifying activation function types.
_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga47d4a71f628d2b45d982b7f090011ca8';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_wrapper_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_conv_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'conv_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_per_channel_quant_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'quant_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_data';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '166';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
s8 convolution layer wrapper function with the main purpose to call the optimal kernel available in
nmsis-nn
         to perform the convolution.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
  @param[in, out] ctx            Function context that contains the additional buffer if required by the function.
                                 riscv_convolve_wrapper_s8_get_buffer_size will return the buffer_size if required
  @param[in]      conv_params    Convolution parameters (e.g. strides, dilations, pads,...).
                                 Range of conv_params->input_offset  : [-127, 128]
                                 Range of conv_params->output_offset : [-128, 127]
  @param[in]      quant_params   Per-channel quantization info.
                                 It contains the multiplier and shift values to be applied to each output channel
  @param[in]      input_dims     Input (activation) tensor dimensions. Format: [N, H, W, C_IN]
  @param[in]      input_data     Input (activation) data pointer. Data type: int8
  @param[in]      filter_dims    Filter tensor dimensions. Format: [C_OUT, HK, WK, C_IN] where HK and WK are the
                                 spatial filter dimensions
  @param[in]      filter_data    Filter data pointer. Data type: int8
  @param[in]      bias_dims      Bias tensor dimensions. Format: [C_OUT]
  @param[in]      bias_data      Bias data pointer. Data type: int32
  @param[in]      output_dims    Output tensor dimensions. Format: [N, H, W, C_OUT]
  @param[out]     output_data    Output data pointer. Data type: int8

  @return     The function returns either
                   <code>RISCV_MATH_SIZE_MISMATCH</code> if argument constraints fail. or,
                   <code>RISCV_MATH_SUCCESS</code> on successful completion.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1gad619a8fad8f7995394b9e6b1be9896e4';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_wrapper_s8_get_buffer_size';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_conv_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'conv_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '192';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the required buffer size for riscv_convolve_wrapper_s8.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]      conv_params    Convolution parameters (e.g. strides, dilations, pads,...).
                               Range of conv_params->input_offset  : [-127, 128]
                               Range of conv_params->output_offset : [-128, 127]
@param[in]      input_dims     Input (activation) dimensions. Format: [N, H, W, C_IN]
@param[in]      filter_dims    Filter dimensions. Format: [C_OUT, HK, WK, C_IN] where HK and WK are the spatial
                               filter dimensions
@param[in]      output_dims    Output tensor dimensions. Format: [N, H, W, C_OUT]

@return         The function returns  required buffer size(bytes)
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1gada7d0c0cec6f5babd022ce1664b901ee';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_wrapper_s16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_conv_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'conv_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_per_channel_quant_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'quant_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int64_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_data';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '224';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
s16 convolution layer wrapper function with the main purpose to call the optimal kernel available in
nmsis-nn
         to perform the convolution.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
  @param[in, out] ctx            Function context that contains the additional buffer if required by the function.
                                 riscv_convolve_wrapper_s8_get_buffer_size will return the buffer_size if required
  @param[in]      conv_params    Convolution parameters (e.g. strides, dilations, pads,...).
                                 conv_params->input_offset  : Not used
                                 conv_params->output_offset : Not used
  @param[in]      quant_params   Per-channel quantization info.
                                 It contains the multiplier and shift values to be applied to each output channel
  @param[in]      input_dims     Input (activation) tensor dimensions. Format: [N, H, W, C_IN]
  @param[in]      input_data     Input (activation) data pointer. Data type: int16
  @param[in]      filter_dims    Filter tensor dimensions. Format: [C_OUT, HK, WK, C_IN] where HK and WK are the
                                 spatial filter dimensions
  @param[in]      filter_data    Filter data pointer. Data type: int8
  @param[in]      bias_dims      Bias tensor dimensions. Format: [C_OUT]
  @param[in]      bias_data      Bias data pointer. Data type: int64
  @param[in]      output_dims    Output tensor dimensions. Format: [N, H, W, C_OUT]
  @param[out]     output_data    Output data pointer. Data type: int16

  @return     The function returns either
                   <code>RISCV_MATH_SIZE_MISMATCH</code> if argument constraints fail. or,
                   <code>RISCV_MATH_SUCCESS</code> on successful completion.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga72ff9c14a09b1c701ae432707bec0fd2';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_wrapper_s16_get_buffer_size';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_conv_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'conv_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '250';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the required buffer size for riscv_convolve_wrapper_s16.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]      conv_params    Convolution parameters (e.g. strides, dilations, pads,...).
                               conv_params->input_offset  : Not used
                               conv_params->output_offset : Not used
@param[in]      input_dims     Input (activation) dimensions. Format: [N, H, W, C_IN]
@param[in]      filter_dims    Filter dimensions. Format: [C_OUT, HK, WK, C_IN] where HK and WK are the spatial
                               filter dimensions
@param[in]      output_dims    Output tensor dimensions. Format: [N, H, W, C_OUT]

@return         The function returns  required buffer size(bytes)
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga723ae9312a46cbc7687931df988ff772';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_conv_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'conv_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_per_channel_quant_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'quant_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_data';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '282';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Basic s8 convolution function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in, out] ctx            Function context that contains the additional buffer if required by the function.
                               riscv_convolve_s8_get_buffer_size will return the buffer_size if required
@param[in]      conv_params    Convolution parameters (e.g. strides, dilations, pads,...).
                               Range of conv_params->input_offset  : [-127, 128]
                               Range of conv_params->output_offset : [-128, 127]
@param[in]      quant_params   Per-channel quantization info.
                               It contains the multiplier and shift values to be applied to each output channel
@param[in]      input_dims     Input (activation) tensor dimensions. Format: [N, H, W, C_IN]
@param[in]      input_data     Input (activation) data pointer. Data type: int8
@param[in]      filter_dims    Filter tensor dimensions. Format: [C_OUT, HK, WK, C_IN] where HK and WK are the
                               spatial filter dimensions
@param[in]      filter_data    Filter data pointer. Data type: int8
@param[in]      bias_dims      Bias tensor dimensions. Format: [C_OUT]
@param[in]      bias_data      Optional bias data pointer. Data type: int32
@param[in]      output_dims    Output tensor dimensions. Format: [N, H, W, C_OUT]
@param[out]     output_data    Output data pointer. Data type: int8

@return     The function returns <code>RISCV_MATH_SUCCESS</code>




   1. Supported framework: TensorFlow Lite micro
   2. q7 is used as data type eventhough it is s8 data. It is done so to be consistent with existing APIs.
   3. Additional memory is required for optimization. Refer to argument 'ctx' for details.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga268e623b07753f8f29cf72f9ec1ff249';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_s8_get_buffer_size';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '303';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the required buffer size for s8 convolution function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       input_dims            Input (activation) tensor dimensions. Format: [N, H, W, C_IN]
@param[in]       filter_dims           Filter tensor dimensions. Format: [C_OUT, HK, WK, C_IN] where HK and WK
are the spatial filter dimensions
@return          The function returns  required buffer size(bytes)
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga825f6244f7a60d8d01e791f31561c346';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_s16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_conv_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'conv_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_per_channel_quant_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'quant_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int64_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_data';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '332';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Basic s16 convolution function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in, out] ctx            Function context that contains the additional buffer if required by the function.
                               riscv_convolve_s16_get_buffer_size will return the buffer_size if required
@param[in]      conv_params    Convolution parameters (e.g. strides, dilations, pads,...).
                               conv_params->input_offset  : Not used
                               conv_params->output_offset : Not used
@param[in]      quant_params   Per-channel quantization info.
                               It contains the multiplier and shift values to be applied to each output channel
@param[in]      input_dims     Input (activation) tensor dimensions. Format: [N, H, W, C_IN]
@param[in]      input_data     Input (activation) data pointer. Data type: int16
@param[in]      filter_dims    Filter tensor dimensions. Format: [C_OUT, HK, WK, C_IN] where HK and WK are the
                               spatial filter dimensions
@param[in]      filter_data    Filter data pointer. Data type: int8
@param[in]      bias_dims      Bias tensor dimensions. Format: [C_OUT]
@param[in]      bias_data      Optional bias data pointer. Data type: int64
@param[in]      output_dims    Output tensor dimensions. Format: [N, H, W, C_OUT]
@param[out]     output_data    Output data pointer. Data type: int16

@return     The function returns <code>RISCV_MATH_SUCCESS</code>




   1. Supported framework: TensorFlow Lite micro
   2. q7/q15 is used as data type eventhough it is s8/s16 data. It is done so to be consistent with existing APIs.
   3. Additional memory is required for optimization. Refer to argument 'ctx' for details.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga5134669caaa5fdb72c78497627a9209d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_fast_s16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_conv_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'conv_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_per_channel_quant_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'quant_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int64_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_data';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '373';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Optimized s16 convolution function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
  @param[in, out] ctx            Function context that contains the additional buffer if required by the function.
                                 riscv_convolve_fast_s16_get_buffer_size will return the buffer_size if required
  @param[in]      conv_params    Convolution parameters (e.g. strides, dilations, pads,...).
                                 conv_params->input_offset  : Not used
                                 conv_params->output_offset : Not used
  @param[in]      quant_params   Per-channel quantization info.
                                 It contains the multiplier and shift values to be applied to each output channel
  @param[in]      input_dims     Input (activation) tensor dimensions. Format: [N, H, W, C_IN]
  @param[in]      input_data     Input (activation) data pointer. Data type: int16
  @param[in]      filter_dims    Filter tensor dimensions. Format: [C_OUT, HK, WK, C_IN] where HK and WK are the
                                 spatial filter dimensions. (filter_dims->w * filter_dims->h * input_dims->c) must not
exceed 512
  @param[in]      filter_data    Filter data pointer. Data type: int8
  @param[in]      bias_dims      Bias tensor dimensions. Format: [C_OUT]
  @param[in]      bias_data      Optional bias data pointer. Data type: int64
  @param[in]      output_dims    Output tensor dimensions. Format: [N, H, W, C_OUT]
  @param[out]     output_data    Output data pointer. Data type: int16

  @return     The function returns <code>RISCV_MATH_SUCCESS</code>



@verbatim
 1. Supported framework: TensorFlow Lite micro
 2. q7/q15 is used as data type eventhough it is s8/s16 data. It is done so to be consistent with existing APIs.
 3. Additional memory is required for optimization. Refer to argument 'ctx' for details.
 4. Implementation supports kernel volumes (filter width * filter height * input channels) < 512.@endverbatim
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1gabe5a9ee2a2c914346bf4e9e8a0f537b9';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_s16_get_buffer_size';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '394';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the required buffer size for s16 convolution function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       input_dims            Input (activation) tensor dimensions. Format: [N, H, W, C_IN]
@param[in]       filter_dims           Filter tensor dimensions. Format: [C_OUT, HK, WK, C_IN] where HK and WK
are the spatial filter dimensions
@return          The function returns  required buffer size(bytes)
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga941037ba041535b76951eba87031c667';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_fast_s16_get_buffer_size';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '405';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the required buffer size for fast s16 convolution function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       input_dims            Input (activation) tensor dimensions. Format: [N, H, W, C_IN]
@param[in]       filter_dims           Filter tensor dimensions. Format: [C_OUT, HK, WK, C_IN] where HK and WK
are the spatial filter dimensions
@return          The function returns required buffer size(bytes)
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga053353a7bdfca7d1aa9461210048d74a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_HWC_q7_basic';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'wt';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_kernel';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'padding';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferA';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferB';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '427';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Basic Q7 convolution function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       Im_in       pointer to input tensor
@param[in]       dim_im_in   input tensor dimension
@param[in]       ch_im_in    number of input tensor channels
@param[in]       wt          pointer to kernel weights
@param[in]       ch_im_out   number of filters, i.e., output tensor channels
@param[in]       dim_kernel  filter kernel size
@param[in]       padding     padding sizes
@param[in]       stride      convolution stride
@param[in]       bias        pointer to bias
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in,out]   Im_out      pointer to output tensor
@param[in]       dim_im_out  output tensor dimension
@param[in,out]   bufferA     pointer to buffer space for input
@param[in,out]   bufferB     pointer to buffer space for output
@return     The function returns <code>RISCV_MATH_SUCCESS</code>

@param[in]       Im_in       pointer to input tensor
@param[in]       dim_im_in   input tensor dimention
@param[in]       ch_im_in    number of input tensor channels
@param[in]       wt          pointer to kernel weights
@param[in]       ch_im_out   number of filters, i.e., output tensor channels
@param[in]       dim_kernel  filter kernel size
@param[in]       padding     padding sizes
@param[in]       stride      convolution stride
@param[in]       bias        pointer to bias
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in,out]   Im_out      pointer to output tensor
@param[in]       dim_im_out  output tensor dimension
@param[in,out]   bufferA     pointer to buffer space for input
@param[in,out]   bufferB     pointer to buffer space for output
@return     The function returns <code>RISCV_MATH_SUCCESS</code>





<b>Buffer size:</b>

bufferA size: 2*ch_im_in*dim_kernel*dim_kernel

bufferB size: 0

This basic version is designed to work for any input tensor and weight
dimension.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga2434b44e25c1c62c6c9da25382bd3e08';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_HWC_q7_basic_nonsquare';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_in_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_in_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'wt';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_kernel_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_kernel_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'padding_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'padding_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_out_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_out_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferA';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferB';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '467';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Basic Q7 convolution function (non-square shape)
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       Im_in        pointer to input tensor
@param[in]       dim_im_in_x  input tensor dimension x
@param[in]       dim_im_in_y  input tensor dimension y
@param[in]       ch_im_in     number of input tensor channels
@param[in]       wt           pointer to kernel weights
@param[in]       ch_im_out    number of filters, i.e., output tensor channels
@param[in]       dim_kernel_x filter kernel size x
@param[in]       dim_kernel_y filter kernel size y
@param[in]       padding_x    padding size x
@param[in]       padding_y    padding size y
@param[in]       stride_x     convolution stride x
@param[in]       stride_y     convolution stride y
@param[in]       bias         pointer to bias
@param[in]       bias_shift   amount of left-shift for bias
@param[in]       out_shift    amount of right-shift for output
@param[in,out]   Im_out       pointer to output tensor
@param[in]       dim_im_out_x output tensor dimension x
@param[in]       dim_im_out_y output tensor dimension y
@param[in,out]   bufferA      pointer to buffer space for input
@param[in,out]   bufferB      pointer to buffer space for output
@return     The function returns <code>RISCV_MATH_SUCCESS</code>

Basic Q7 convolution function (non-square shape)

@param[in]       Im_in        pointer to input tensor
@param[in]       dim_im_in_x  input tensor dimention x
@param[in]       dim_im_in_y  input tensor dimention y
@param[in]       ch_im_in     number of input tensor channels
@param[in]       wt           pointer to kernel weights
@param[in]       ch_im_out    number of filters, i.e., output tensor channels
@param[in]       dim_kernel_x filter kernel size x
@param[in]       dim_kernel_y filter kernel size y
@param[in]       padding_x    padding size x
@param[in]       padding_y    padding size y
@param[in]       stride_x     convolution stride x
@param[in]       stride_y     convolution stride y
@param[in]       bias         pointer to bias
@param[in]       bias_shift   amount of left-shift for bias
@param[in]       out_shift    amount of right-shift for output
@param[in,out]   Im_out       pointer to output tensor
@param[in]       dim_im_out_x output tensor dimension x
@param[in]       dim_im_out_y output tensor dimension y
@param[in,out]   bufferA      pointer to buffer space for input
@param[in,out]   bufferB      pointer to buffer space for output
@return     The function returns <code>RISCV_MATH_SUCCESS</code>
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga24b8f2757e31020336b4e4d663f9f116';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_HWC_q15_basic';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'wt';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_kernel';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'padding';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferA';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferB';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '508';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Basic Q15 convolution function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       Im_in       pointer to input tensor
@param[in]       dim_im_in   input tensor dimension
@param[in]       ch_im_in    number of input tensor channels
@param[in]       wt          pointer to kernel weights
@param[in]       ch_im_out   number of filters, i.e., output tensor channels
@param[in]       dim_kernel  filter kernel size
@param[in]       padding     padding sizes
@param[in]       stride      convolution stride
@param[in]       bias        pointer to bias
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in,out]   Im_out      pointer to output tensor
@param[in]       dim_im_out  output tensor dimension
@param[in,out]   bufferA     pointer to buffer space for input
@param[in,out]   bufferB     pointer to buffer space for output
@return     The function returns <code>RISCV_MATH_SUCCESS</code>

@param[in]       Im_in       pointer to input tensor
@param[in]       dim_im_in   input tensor dimention
@param[in]       ch_im_in    number of input tensor channels
@param[in]       wt          pointer to kernel weights
@param[in]       ch_im_out   number of filters, i.e., output tensor channels
@param[in]       dim_kernel  filter kernel size
@param[in]       padding     padding sizes
@param[in]       stride      convolution stride
@param[in]       bias        pointer to bias
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in,out]   Im_out      pointer to output tensor
@param[in]       dim_im_out  output tensor dimension
@param[in,out]   bufferA     pointer to buffer space for input
@param[in,out]   bufferB     pointer to buffer space for output
@return     The function returns <code>RISCV_MATH_SUCCESS</code>





<b>Buffer size:</b>

bufferA size: ch_im_in*dim_kernel*dim_kernel

bufferB size: 0

This basic version is designed to work for any input tensor and weight
dimension.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1gaad778ec0d290ffa07f58c5b32cb8a80b';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_HWC_q7_fast';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'wt';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_kernel';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'padding';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferA';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferB';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '549';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Fast Q7 convolution function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       Im_in       pointer to input tensor
@param[in]       dim_im_in   input tensor dimension
@param[in]       ch_im_in    number of input tensor channels
@param[in]       wt          pointer to kernel weights
@param[in]       ch_im_out   number of filters, i.e., output tensor channels
@param[in]       dim_kernel  filter kernel size
@param[in]       padding     padding sizes
@param[in]       stride      convolution stride
@param[in]       bias        pointer to bias
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in,out]   Im_out      pointer to output tensor
@param[in]       dim_im_out  output tensor dimension
@param[in,out]   bufferA     pointer to buffer space for input
@param[in,out]   bufferB     pointer to buffer space for output
@return     The function returns either
<code>RISCV_MATH_SIZE_MISMATCH</code> or <code>RISCV_MATH_SUCCESS</code> based on the outcome of size checking.

This function is the version with full list of optimization tricks, but with
some contraints:
  ch_im_in is multiple of 4
  ch_im_out is multiple of 2

@param[in]       Im_in       pointer to input tensor
@param[in]       dim_im_in   input tensor dimention
@param[in]       ch_im_in    number of input tensor channels
@param[in]       wt          pointer to kernel weights
@param[in]       ch_im_out   number of filters, i.e., output tensor channels
@param[in]       dim_kernel  filter kernel size
@param[in]       padding     padding sizes
@param[in]       stride      convolution stride
@param[in]       bias        pointer to bias
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in,out]   Im_out      pointer to output tensor
@param[in]       dim_im_out  output tensor dimension
@param[in,out]   bufferA     pointer to buffer space for input
@param[in,out]   bufferB     pointer to buffer space for output
@return     The function returns either
<code>RISCV_MATH_SIZE_MISMATCH</code> or <code>RISCV_MATH_SUCCESS</code> based on the outcome of size checking.





<b>Buffer size:</b>

bufferA size: 2*ch_im_in*dim_kernel*dim_kernel

bufferB size: 0

<b>Input dimension constraints:</b>

ch_im_in is multiple of 4    ( because of the SIMD32 read and swap )

ch_im_out is multiple of 2    ( bacause 2x2 mat_mult kernel )

The im2col converts the Q7 tensor input into Q15 column, which is stored in
bufferA. There is reordering happenning during this im2col process with
riscv_q7_to_q15_reordered_no_shift. For every four elements, the second and
third elements are swapped.

The computation kernel riscv_nn_mat_mult_kernel_q7_q15_reordered does the
GEMM computation with the reordered columns.

To speed-up the determination of the padding condition, we split the
computation into 3x3 parts, i.e., {top, mid, bottom} X {left, mid, right}.
This reduces the total number of boundary condition checks and improves
the data copying performance.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1gaea6b13bcf602586c83033ce6310b1ca5';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_HWC_q7_fast_nonsquare';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_in_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_in_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'wt';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_kernel_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_kernel_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'padding_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'padding_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_out_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_out_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferA';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferB';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '596';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Fast Q7 convolution function (non-sqaure shape)
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       Im_in        pointer to input tensor
@param[in]       dim_im_in_x  input tensor dimension x
@param[in]       dim_im_in_y  input tensor dimension y
@param[in]       ch_im_in     number of input tensor channels
@param[in]       wt           pointer to kernel weights
@param[in]       ch_im_out    number of filters, i.e., output tensor channels
@param[in]       dim_kernel_x filter kernel size x
@param[in]       dim_kernel_y filter kernel size y
@param[in]       padding_x    padding size x
@param[in]       padding_y    padding size y
@param[in]       stride_x     convolution stride x
@param[in]       stride_y     convolution stride y
@param[in]       bias         pointer to bias
@param[in]       bias_shift   amount of left-shift for bias
@param[in]       out_shift    amount of right-shift for output
@param[in,out]   Im_out       pointer to output tensor
@param[in]       dim_im_out_x output tensor dimension x
@param[in]       dim_im_out_y output tensor dimension y
@param[in,out]   bufferA      pointer to buffer space for input
@param[in,out]   bufferB      pointer to buffer space for output
@return     The function returns either
<code>RISCV_MATH_SIZE_MISMATCH</code> or <code>RISCV_MATH_SUCCESS</code> based on the outcome of size checking.

This function is the version with full list of optimization tricks, but with
some contraints:
  ch_im_in is multiple of 4
  ch_im_out is multiple of 2

@param[in]       Im_in        pointer to input tensor
@param[in]       dim_im_in_x  input tensor dimention x
@param[in]       dim_im_in_y  input tensor dimention y
@param[in]       ch_im_in     number of input tensor channels
@param[in]       wt           pointer to kernel weights
@param[in]       ch_im_out    number of filters, i.e., output tensor channels
@param[in]       dim_kernel_x filter kernel size x
@param[in]       dim_kernel_y filter kernel size y
@param[in]       padding_x    padding size x
@param[in]       padding_y    padding size y
@param[in]       stride_x     convolution stride x
@param[in]       stride_y     convolution stride y
@param[in]       bias         pointer to bias
@param[in]       bias_shift   amount of left-shift for bias
@param[in]       out_shift    amount of right-shift for output
@param[in,out]   Im_out       pointer to output tensor
@param[in]       dim_im_out_x output tensor dimension x
@param[in]       dim_im_out_y output tensor dimension y
@param[in,out]   bufferA      pointer to buffer space for input
@param[in,out]   bufferB      pointer to buffer space for output
@return     The function returns either
<code>RISCV_MATH_SIZE_MISMATCH</code> or <code>RISCV_MATH_SUCCESS</code> based on the outcome of size checking.

This function is the version with full list of optimization tricks, but with
some constraints:
  ch_im_in is multiple of 4
  ch_im_out is multiple of 2
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga6c935af4ca6a80b7b747ff90e1e5c91a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_1x1_HWC_q7_fast_nonsquare';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_in_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_in_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'wt';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_kernel_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_kernel_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'padding_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'padding_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_out_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_out_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferA';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferB';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '652';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Fast Q7 version of 1x1 convolution (non-sqaure shape)
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       Im_in        pointer to input tensor
@param[in]       dim_im_in_x  input tensor dimension x
@param[in]       dim_im_in_y  input tensor dimension y
@param[in]       ch_im_in     number of input tensor channels
@param[in]       wt           pointer to kernel weights
@param[in]       ch_im_out    number of filters, i.e., output tensor channels
@param[in]       dim_kernel_x filter kernel size x
@param[in]       dim_kernel_y filter kernel size y
@param[in]       padding_x    padding size x
@param[in]       padding_y    padding size y
@param[in]       stride_x     convolution stride x
@param[in]       stride_y     convolution stride y
@param[in]       bias         pointer to bias
@param[in]       bias_shift   amount of left-shift for bias
@param[in]       out_shift    amount of right-shift for output
@param[in,out]   Im_out       pointer to output tensor
@param[in]       dim_im_out_x output tensor dimension x
@param[in]       dim_im_out_y output tensor dimension y
@param[in,out]   bufferA      pointer to buffer space for input
@param[in,out]   bufferB      pointer to buffer space for output
@return     The function returns either
                         <code>RISCV_MATH_SIZE_MISMATCH</code> if argument constraints fail. or,
                         <code>RISCV_MATH_SUCCESS</code> on successful completion.

This function implement convolution with 1x1 kernel size (i.e., dim_kernel_x=1
and dim_kernel_y=1). It can be used for
second half of MobileNets after depthwise separable convolution.

This function is the version with full list of optimization tricks, but with
some contraints:
  ch_im_in is multiple of 4
  ch_im_out is multiple of 2

@param[in]       Im_in        pointer to input tensor
@param[in]       dim_im_in_x  input tensor dimention x
@param[in]       dim_im_in_y  input tensor dimention y
@param[in]       ch_im_in     number of input tensor channels
@param[in]       wt           pointer to kernel weights
@param[in]       ch_im_out    number of filters, i.e., output tensor channels
@param[in]       dim_kernel_x filter kernel size x
@param[in]       dim_kernel_y filter kernel size y
@param[in]       padding_x    padding size x
@param[in]       padding_y    padding size y
@param[in]       stride_x     convolution stride x
@param[in]       stride_y     convolution stride y
@param[in]       bias         pointer to bias
@param[in]       bias_shift   amount of left-shift for bias
@param[in]       out_shift    amount of right-shift for output
@param[in,out]   Im_out       pointer to output tensor
@param[in]       dim_im_out_x output tensor dimension x
@param[in]       dim_im_out_y output tensor dimension y
@param[in,out]   bufferA      pointer to buffer space for input
@param[in,out]   bufferB      pointer to buffer space for output
@return     The function returns either
<code>RISCV_MATH_SIZE_MISMATCH</code> or <code>RISCV_MATH_SUCCESS</code> based on the outcome of size checking.

This function is optimized for convolution with 1x1 kernel size (i.e., dim_kernel_x=1
and dim_kernel_y=1). It can be used for the second half of MobileNets [1] after depthwise
separable convolution.

This function is the version with full list of optimization tricks, but with
some constraints:
  ch_im_in is multiple of 4
  ch_im_out is multiple of 2

[1] MobileNets: Efficient Convolutional Neural Networks for Mobile Vision Applications
https://arxiv.org/abs/1704.04861
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1gaa04044f1e2cb1ae5c3c0d7abe473e187';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_1x1_s8_fast';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_conv_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'conv_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_per_channel_quant_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'quant_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_data';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '704';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Fast s8 version for 1x1 convolution (non-square shape)
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in, out] ctx            Function context that contains the additional buffer if required by the function.
                               riscv_convolve_1x1_s8_fast_get_buffer_size will return the buffer_size if required
@param[in]      conv_params    Convolution parameters (e.g. strides, dilations, pads,...).
                               Range of conv_params->input_offset  : [-127, 128]
                               Range of conv_params->output_offset : [-128, 127]
@param[in]      quant_params   Per-channel quantization info.
                               It contains the multiplier and shift values to be applied to each output channel
@param[in]      input_dims     Input (activation) tensor dimensions. Format: [N, H, W, C_IN]
@param[in]      input_data     Input (activation) data pointer. Data type: int8
@param[in]      filter_dims    Filter tensor dimensions. Format: [C_OUT, 1, 1, C_IN]
@param[in]      filter_data    Filter data pointer. Data type: int8
@param[in]      bias_dims      Bias tensor dimensions. Format: [C_OUT]
@param[in]      bias_data      Optional bias data pointer. Data type: int32
@param[in]      output_dims    Output tensor dimensions. Format: [N, H, W, C_OUT]
@param[out]     output_data    Output data pointer. Data type: int8

@return     The function returns either
                 <code>RISCV_MATH_SIZE_MISMATCH</code> if argument constraints fail. or,
                 <code>RISCV_MATH_SUCCESS</code> on successful completion.




  - Supported framework : TensorFlow Lite Micro
  - The following constrains on the arguments apply
     -# input_dims->c is a multiple of 4
     -# conv_params->padding.w = conv_params->padding.h = 0
     -# conv_params->stride.w = conv_params->stride.h = 1
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga194f5ffb4b714e99b263280283702b1a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_1x1_s8_fast_get_buffer_size';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '723';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the required buffer size for riscv_convolve_1x1_s8_fast.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       input_dims            Input (activation) dimensions
@return          The function returns the required buffer size in bytes
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1gabaa21da3ad72b8c790efd27917a58982';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_1_x_n_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_conv_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'conv_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_per_channel_quant_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'quant_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_data';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '761';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
1xn convolution
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
 @param[in, out] ctx            Function context that contains the additional buffer if required by the function.
                                riscv_convolve_1_x_n_s8_get_buffer_size will return the buffer_size if required
 @param[in]      conv_params    Convolution parameters (e.g. strides, dilations, pads,...).
                                Range of conv_params->input_offset  : [-127, 128]
                                Range of conv_params->output_offset : [-128, 127]
 @param[in]      quant_params   Per-channel quantization info.
                                It contains the multiplier and shift values to be applied to each output channel
 @param[in]      input_dims     Input (activation) tensor dimensions. Format: [N, H, W, C_IN]
 @param[in]      input_data     Input (activation) data pointer. Data type: int8
 @param[in]      filter_dims    Filter tensor dimensions. Format: [C_OUT, 1, WK, C_IN] where WK is the horizontal
                                spatial filter dimension
 @param[in]      filter_data    Filter data pointer. Data type: int8
 @param[in]      bias_dims      Bias tensor dimensions. Format: [C_OUT]
 @param[in]      bias_data      Optional bias data pointer. Data type: int32
 @param[in]      output_dims    Output tensor dimensions. Format: [N, H, W, C_OUT]
 @param[out]     output_data    Output data pointer. Data type: int8

 @return     The function returns either
                  <code>RISCV_MATH_SIZE_MISMATCH</code> if argument constraints fail. or,
                  <code>RISCV_MATH_SUCCESS</code> on successful completion.




   - Supported framework : TensorFlow Lite Micro
   - The following constrains on the arguments apply
      -# input_dims->n equals 1
      -# ouput_dims->w is a multiple of 4
      -# Explicit constraints(since it is for 1xN convolution)
      -## input_dims->h equals 1
      -## output_dims->h equals 1
      -## filter_dims->h equals 1
\xrefitem todo 1.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1gad5d4e038de80a33c437fe39f48c523f4';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_1_x_n_s8_get_buffer_size';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '782';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the required additional buffer size for 1xn convolution.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       input_dims            Input (activation) tensor dimensions. Format: [N, H, W, C_IN]
@param[in]       filter_dims           Filter tensor dimensions. Format: [C_OUT, 1, WK, C_IN] where WK is the
                                       horizontal spatial filter dimension
@return          The function returns  required buffer size(bytes)
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga0a64a6e39851c858266bcb1227a431d4';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_HWC_q7_RGB';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'wt';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_kernel';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'padding';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferA';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferB';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '809';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Q7 version of convolution for RGB image.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       Im_in       pointer to input tensor
@param[in]       dim_im_in   input tensor dimension
@param[in]       ch_im_in    number of input tensor channels
@param[in]       wt          pointer to kernel weights
@param[in]       ch_im_out   number of filters, i.e., output tensor channels
@param[in]       dim_kernel  filter kernel size
@param[in]       padding     padding sizes
@param[in]       stride      convolution stride
@param[in]       bias        pointer to bias
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in,out]   Im_out      pointer to output tensor
@param[in]       dim_im_out  output tensor dimension
@param[in,out]   bufferA     pointer to buffer space for input
@param[in,out]   bufferB     pointer to buffer space for output
@return     The function returns either
<code>RISCV_MATH_SIZE_MISMATCH</code> or <code>RISCV_MATH_SUCCESS</code> based on the outcome of size checking.

This kernel is written exclusively for convolution with ch_im_in
equals 3. This applies on the first layer of CNNs which has input
image with RGB format.

Q7 version of convolution for RGB image.

@param[in]       Im_in       pointer to input tensor
@param[in]       dim_im_in   input tensor dimention
@param[in]       ch_im_in    number of input tensor channels
@param[in]       wt          pointer to kernel weights
@param[in]       ch_im_out   number of filters, i.e., output tensor channels
@param[in]       dim_kernel  filter kernel size
@param[in]       padding     padding sizes
@param[in]       stride      convolution stride
@param[in]       bias        pointer to bias
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in,out]   Im_out      pointer to output tensor
@param[in]       dim_im_out  output tensor dimension
@param[in,out]   bufferA     pointer to buffer space for input
@param[in,out]   bufferB     pointer to buffer space for output
@return     The function returns either
<code>RISCV_MATH_SIZE_MISMATCH</code> or <code>RISCV_MATH_SUCCESS</code> based on the outcome of size checking.





<b>Buffer size:</b>

bufferA size: 2*ch_im_in*dim_kernel*dim_kernel

bufferB size: 0

<b>Input dimension constraints:</b>

ch_im_in equals 3

This kernel is written exclusively for convolution with ch_im_in
equals 3. This applies on the first layer of CNNs which has input
image with RGB format.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga9685fbf9f838fcc9306b3962bb6d04df';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_HWC_q15_fast';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'wt';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_kernel';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'padding';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferA';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferB';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '852';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Fast Q15 convolution function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       Im_in       pointer to input tensor
@param[in]       dim_im_in   input tensor dimension
@param[in]       ch_im_in    number of input tensor channels
@param[in]       wt          pointer to kernel weights
@param[in]       ch_im_out   number of filters, i.e., output tensor channels
@param[in]       dim_kernel  filter kernel size
@param[in]       padding     padding sizes
@param[in]       stride      convolution stride
@param[in]       bias        pointer to bias
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in,out]   Im_out      pointer to output tensor
@param[in]       dim_im_out  output tensor dimension
@param[in,out]   bufferA     pointer to buffer space for input
@param[in,out]   bufferB     pointer to buffer space for output
@return     The function returns either
<code>RISCV_MATH_SIZE_MISMATCH</code> or <code>RISCV_MATH_SUCCESS</code> based on the outcome of size checking.

This function is the version with full list of optimization tricks, but with
some contraints:
  ch_im_in is multiple of 2
  ch_im_out is multiple of 2
  dim_im_out is a multiple of 2

@param[in]       Im_in       pointer to input tensor
@param[in]       dim_im_in   input tensor dimention
@param[in]       ch_im_in    number of input tensor channels
@param[in]       wt          pointer to kernel weights
@param[in]       ch_im_out   number of filters, i.e., output tensor channels
@param[in]       dim_kernel  filter kernel size
@param[in]       padding     padding sizes
@param[in]       stride      convolution stride
@param[in]       bias        pointer to bias
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in,out]   Im_out      pointer to output tensor
@param[in]       dim_im_out  output tensor dimension
@param[in,out]   bufferA     pointer to buffer space for input
@param[in,out]   bufferB     pointer to buffer space for output
@return     The function returns either
<code>RISCV_MATH_SIZE_MISMATCH</code> or <code>RISCV_MATH_SUCCESS</code> based on the outcome of size checking.





<b>Buffer size:</b>

bufferA size: 2*ch_im_in*dim_kernel*dim_kernel

bufferB size: 0

<b>Input dimension constraints:</b>

ch_im_in is multiple of 2

ch_im_out is multiple of 2

dim_im_out is a multiple of 2
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga205837a93b5bd574a95c97b7d843551c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_convolve_HWC_q15_fast_nonsquare';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_in_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_in_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'wt';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_kernel_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_kernel_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'padding_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'padding_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_out_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_out_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferA';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferB';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '909';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Fast Q15 convolution function (non-sqaure shape)
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       Im_in        pointer to input tensor
@param[in]       dim_im_in_x  input tensor dimension x
@param[in]       dim_im_in_y  input tensor dimension y
@param[in]       ch_im_in     number of input tensor channels
@param[in]       wt           pointer to kernel weights
@param[in]       ch_im_out    number of filters, i.e., output tensor channels
@param[in]       dim_kernel_x filter kernel size x
@param[in]       dim_kernel_y filter kernel size y
@param[in]       padding_x    padding size x
@param[in]       padding_y    padding size y
@param[in]       stride_x     convolution stride x
@param[in]       stride_y     convolution stride y
@param[in]       bias         pointer to bias
@param[in]       bias_shift   amount of left-shift for bias
@param[in]       out_shift    amount of right-shift for output
@param[in,out]   Im_out       pointer to output tensor
@param[in]       dim_im_out_x output tensor dimension x
@param[in]       dim_im_out_y output tensor dimension y
@param[in,out]   bufferA      pointer to buffer space for input
@param[in,out]   bufferB      pointer to buffer space for output
@return     The function returns either
<code>RISCV_MATH_SIZE_MISMATCH</code> or <code>RISCV_MATH_SUCCESS</code> based on the outcome of size checking.





<b>Buffer size:</b>

bufferA size: 2*ch_im_in*dim_kernel*dim_kernel

bufferB size: 0

<b>Input dimension constraints:</b>

ch_im_in is multiple of 2

ch_im_out is multipe of 2

@param[in]       Im_in        pointer to input tensor
@param[in]       dim_im_in_x  input tensor dimention x
@param[in]       dim_im_in_y  input tensor dimention y
@param[in]       ch_im_in     number of input tensor channels
@param[in]       wt           pointer to kernel weights
@param[in]       ch_im_out    number of filters, i.e., output tensor channels
@param[in]       dim_kernel_x filter kernel size x
@param[in]       dim_kernel_y filter kernel size y
@param[in]       padding_x    padding size x
@param[in]       padding_y    padding size y
@param[in]       stride_x     convolution stride x
@param[in]       stride_y     convolution stride y
@param[in]       bias         pointer to bias
@param[in]       bias_shift   amount of left-shift for bias
@param[in]       out_shift    amount of right-shift for output
@param[in,out]   Im_out       pointer to output tensor
@param[in]       dim_im_out_x output tensor dimension x
@param[in]       dim_im_out_y output tensor dimension y
@param[in,out]   bufferA      pointer to buffer space for input
@param[in,out]   bufferB      pointer to buffer space for output
@return     The function returns either
<code>RISCV_MATH_SIZE_MISMATCH</code> or <code>RISCV_MATH_SUCCESS</code> based on the outcome of size checking.





<b>Buffer size:</b>

bufferA size: 2*ch_im_in*dim_kernel*dim_kernel

bufferB size: 0

<b>Input dimension constraints:</b>

ch_im_in is multiple of 2

ch_im_out is multiple of 2
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga73a880af4ffcae5ba0229a20890b05d4';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_depthwise_separable_conv_HWC_q7';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'wt';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_kernel';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'padding';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferA';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferB';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '956';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Q7 depthwise separable convolution function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       Im_in       pointer to input tensor
@param[in]       dim_im_in   input tensor dimension
@param[in]       ch_im_in    number of input tensor channels
@param[in]       wt          pointer to kernel weights
@param[in]       ch_im_out   number of filters, i.e., output tensor channels
@param[in]       dim_kernel  filter kernel size
@param[in]       padding     padding sizes
@param[in]       stride      convolution stride
@param[in]       bias        pointer to bias
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in,out]   Im_out      pointer to output tensor
@param[in]       dim_im_out  output tensor dimension
@param[in,out]   bufferA     pointer to buffer space for input
@param[in,out]   bufferB     pointer to buffer space for output
@return     The function returns either
<code>RISCV_MATH_SIZE_MISMATCH</code> or <code>RISCV_MATH_SUCCESS</code> based on the outcome of size checking.

This function is the version with full list of optimization tricks, but with
some contraints:
  ch_im_in is multiple of 2
  ch_im_out is multiple of 2

@param[in]       Im_in       pointer to input tensor
@param[in]       dim_im_in   input tensor dimension
@param[in]       ch_im_in    number of input tensor channels
@param[in]       wt          pointer to kernel weights
@param[in]       ch_im_out   number of filters, i.e., output tensor channels
@param[in]       dim_kernel  filter kernel size
@param[in]       padding     padding sizes
@param[in]       stride      convolution stride
@param[in]       bias        pointer to bias
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in,out]   Im_out      pointer to output tensor
@param[in]       dim_im_out  output tensor dimension
@param[in,out]   bufferA     pointer to buffer space for input
@param[in,out]   bufferB     pointer to buffer space for output
@return     The function returns either
<code>RISCV_MATH_SIZE_MISMATCH</code> or <code>RISCV_MATH_SUCCESS</code> based on the outcome of size checking.





<b>Buffer size:</b>

bufferA size: 2*ch_im_in*dim_kernel*dim_kernel

bufferB size: 0

<b>Input dimension constraints:</b>

ch_im_in equals ch_im_out

Implementation:
There are 3 nested loop here:
Inner loop: calculate each output value with MAC instruction over an accumulator
Mid   loop: loop over different output channel
Outer loop: loop over different output (x, y)
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1gaec2d2b8c1536a08db1811d8971f20f66';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_depthwise_separable_conv_HWC_q7_nonsquare';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_in_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_in_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'wt';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_kernel_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_kernel_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'padding_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'padding_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_out_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_out_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferA';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferB';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '1002';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Q7 depthwise separable convolution function (non-square shape)
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       Im_in         pointer to input tensor
@param[in]       dim_im_in_x   input tensor dimension x
@param[in]       dim_im_in_y   input tensor dimension y
@param[in]       ch_im_in      number of input tensor channels
@param[in]       wt            pointer to kernel weights
@param[in]       ch_im_out     number of filters, i.e., output tensor channels
@param[in]       dim_kernel_x  filter kernel size x
@param[in]       dim_kernel_y  filter kernel size y
@param[in]       padding_x     padding sizes x
@param[in]       padding_y     padding sizes y
@param[in]       stride_x      convolution stride x
@param[in]       stride_y      convolution stride y
@param[in]       bias          pointer to bias
@param[in]       bias_shift    amount of left-shift for bias
@param[in]       out_shift     amount of right-shift for output
@param[in,out]   Im_out        pointer to output tensor
@param[in]       dim_im_out_x  output tensor dimension x
@param[in]       dim_im_out_y  output tensor dimension y
@param[in,out]   bufferA       pointer to buffer space for input
@param[in,out]   bufferB       pointer to buffer space for output
@return     The function returns either
<code>RISCV_MATH_SIZE_MISMATCH</code> or <code>RISCV_MATH_SUCCESS</code> based on the outcome of size checking.

This function is the version with full list of optimization tricks, but with
some contraints:
  ch_im_in is multiple of 2
  ch_im_out is multiple of 2

@param[in]       Im_in         pointer to input tensor
@param[in]       dim_im_in_x   input tensor dimension x
@param[in]       dim_im_in_y   input tensor dimension y
@param[in]       ch_im_in      number of input tensor channels
@param[in]       wt            pointer to kernel weights
@param[in]       ch_im_out     number of filters, i.e., output tensor channels
@param[in]       dim_kernel_x  filter kernel size x
@param[in]       dim_kernel_y  filter kernel size y
@param[in]       padding_x     padding sizes x
@param[in]       padding_y     padding sizes y
@param[in]       stride_x      convolution stride x
@param[in]       stride_y      convolution stride y
@param[in]       bias          pointer to bias
@param[in]       bias_shift    amount of left-shift for bias
@param[in]       out_shift     amount of right-shift for output
@param[in,out]   Im_out        pointer to output tensor
@param[in]       dim_im_out_x  output tensor dimension x
@param[in]       dim_im_out_y  output tensor dimension y
@param[in,out]   bufferA       pointer to buffer space for input
@param[in,out]   bufferB       pointer to buffer space for output
@return     The function returns either
<code>RISCV_MATH_SIZE_MISMATCH</code> or <code>RISCV_MATH_SUCCESS</code> based on the outcome of size checking.

This function is the version with full list of optimization tricks, but with
some constraints:
  ch_im_in is equal to ch_im_out
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1gadd730f9b8a5497148c7441b28461c0c6';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_depthwise_conv_wrapper_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dw_conv_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dw_conv_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_per_channel_quant_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'quant_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_data';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '1059';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Wrapper function to pick the right optimized s8 depthwise convolution function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in, out] ctx            Function context (e.g. temporary buffer). Check the function
                               definition file to see if an additional buffer is required.
                               Optional function {API}_get_buffer_size() provides the buffer
                               size if required.
@param[in]      dw_conv_params Depthwise convolution parameters (e.g. strides, dilations, pads,...)
                               dw_conv_params->dilation is not used.
                               Range of dw_conv_params->input_offset : [-127, 128]
                               Range of dw_conv_params->output_offset : [-128, 127]
@param[in]      quant_params   Per-channel quantization info.
                              It contains the multiplier and shift values to be applied to each
                              output channel
@param[in]      input_dims     Input (activation) tensor dimensions. Format: [H, W, C_IN]
                               Batch argument N is not used and assumed to be 1.
@param[in]      input_data     Input (activation) data pointer. Data type: int8
@param[in]      filter_dims    Filter tensor dimensions. Format: [1, H, W, C_OUT]
@param[in]      filter_data    Filter data pointer. Data type: int8
@param[in]      bias_dims      Bias tensor dimensions. Format: [C_OUT]
@param[in]      bias_data      Bias data pointer. Data type: int32
@param[in]      output_dims    Output tensor dimensions. Format: [1, H, W, C_OUT]
@param[in, out] output_data    Output data pointer. Data type: int8
@return     The function returns
               <code>RISCV_MATH_SUCCESS</code>   -  Successful completion.




   - Supported framework: TensorFlow Lite
   - Picks one of the the following functions
       -# riscv_depthwise_conv_s8()
       -# riscv_depthwise_conv_3x3_s8() - RISC-V CPUs with DSP extension only
       -# riscv_depthwise_conv_s8_opt()
   - q7 is used as data type eventhough it is s8 data. It is done so to be consistent with existing APIs.
   - Check details of riscv_depthwise_conv_s8_opt() for potential data that can be accessed outside of the
boundary.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga6ef29f06fe7ad6af657dadc07f49ba2c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_depthwise_conv_wrapper_s8_get_buffer_size';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dw_conv_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dw_conv_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '1085';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get size of additional buffer required by riscv_depthwise_conv_wrapper_s8()
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]      dw_conv_params Depthwise convolution parameters (e.g. strides, dilations, pads,...)
                               dw_conv_params->dilation is not used.
                               Range of dw_conv_params->input_offset : [-127, 128]
                               Range of dw_conv_params->input_offset : [-128, 127]
@param[in]      input_dims     Input (activation) tensor dimensions. Format: [H, W, C_IN]
                               Batch argument N is not used and assumed to be 1.
@param[in]      filter_dims    Filter tensor dimensions. Format: [1, H, W, C_OUT]
@param[in]      output_dims    Output tensor dimensions. Format: [1, H, W, C_OUT]
@return                        Size of additional memory required for optimizations in bytes.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1gaa5c81bf587c87928ba1990cc0aa51368';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_depthwise_conv_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dw_conv_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dw_conv_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_per_channel_quant_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'quant_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_data';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '1120';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Basic s8 depthwise convolution function that doesn't have any constraints on the input dimensions.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in, out] ctx            Function context (e.g. temporary buffer). Check the function
                               definition file to see if an additional buffer is required.
                               Optional function {API}_get_buffer_size() provides the buffer
                               size if an additional buffer is required.
                               exists if additional memory is.
@param[in]      dw_conv_params Depthwise convolution parameters (e.g. strides, dilations, pads,...)
                               dw_conv_params->dilation is not used.
                               Range of dw_conv_params->input_offset : [-127, 128]
                               Range of dw_conv_params->input_offset : [-128, 127]
@param[in]      quant_params   Per-channel quantization info.
                              It contains the multiplier and shift values to be applied to each
                              output channel
@param[in]      input_dims     Input (activation) tensor dimensions. Format: [N, H, W, C_IN]
                               Batch argument N is not used.
@param[in]      input_data     Input (activation) data pointer. Data type: int8
@param[in]      filter_dims    Filter tensor dimensions. Format: [1, H, W, C_OUT]
@param[in]      filter_data    Filter data pointer. Data type: int8
@param[in]      bias_dims      Bias tensor dimensions. Format: [C_OUT]
@param[in]      bias_data      Bias data pointer. Data type: int32
@param[in]      output_dims    Output tensor dimensions. Format: [N, H, W, C_OUT]
@param[in, out] output_data    Output data pointer. Data type: int8
@return     The function returns <code>RISCV_MATH_SUCCESS</code>




   - Supported framework: TensorFlow Lite
   - q7 is used as data type eventhough it is s8 data. It is done so to be consistent with existing APIs.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga3624f0f612e5282ee06802a1ad55a6bc';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_depthwise_conv_s16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dw_conv_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dw_conv_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_per_channel_quant_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'quant_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int64_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_data';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '1161';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Basic s16 depthwise convolution function that doesn't have any constraints on the input dimensions.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in, out] ctx            Function context (e.g. temporary buffer). Check the function
                               definition file to see if an additional buffer is required.
                               Optional function {API}_get_buffer_size() provides the buffer
                               size if an additional buffer is required.
                               exists if additional memory is.
@param[in]      dw_conv_params Depthwise convolution parameters (e.g. strides, dilations, pads,...)
                               conv_params->input_offset  : Not used
                               conv_params->output_offset : Not used
@param[in]      quant_params   Per-channel quantization info.
                              It contains the multiplier and shift values to be applied to each
                              output channel
@param[in]      input_dims     Input (activation) tensor dimensions. Format: [N, H, W, C_IN]
                               Batch argument N is not used.
@param[in]      input_data     Input (activation) data pointer. Data type: int8
@param[in]      filter_dims    Filter tensor dimensions. Format: [1, H, W, C_OUT]
@param[in]      filter_data    Filter data pointer. Data type: int8
@param[in]      bias_dims      Bias tensor dimensions. Format: [C_OUT]
@param[in]      bias_data      Bias data pointer. Data type: int64
@param[in]      output_dims    Output tensor dimensions. Format: [N, H, W, C_OUT]
@param[in, out] output_data    Output data pointer. Data type: int16
@return     The function returns <code>RISCV_MATH_SUCCESS</code>




   - Supported framework: TensorFlow Lite
   - q15 is used as data type eventhough it is s16 data. It is done so to be consistent with existing APIs.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1gad8c0e2e6040122db541485e69e8e256e';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_depthwise_conv_3x3_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dw_conv_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dw_conv_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_per_channel_quant_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'quant_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_data';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '1191';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Optimized s8 depthwise convolution function for 3x3 kernel size with some constraints on
       the input arguments(documented below). Refer riscv_depthwise_conv_s8() for function
       argument details.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@return     The function returns one of the following
               <code>RISCV_MATH_SIZE_MISMATCH</code> - Unsupported dimension of tensors
               <code>RISCV_MATH_ARGUMENT_ERROR</code> - Unsupported pad size along the x axis
               <code>RISCV_MATH_SUCCESS</code> - Successful operation




  - Supported framework : TensorFlow Lite Micro
  - The following constrains on the arguments apply
     -# Number of input channel equals number of output channels
     -# Filter height and width equals 3
     -# Padding along x is either 0 or 1.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1ga163c256dbe831cac3cb2c8069e7e110c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_depthwise_conv_s8_opt';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dw_conv_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dw_conv_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_per_channel_quant_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'quant_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_data';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '1226';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Optimized s8 depthwise convolution function with constraint that in_channel equals out_channel.
       Refer riscv_depthwise_conv_s8() for function argument details.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@return     The function returns one of the following
               <code>RISCV_MATH_SIZE_MISMATCH</code> - input channel != output channel or
                                                     ch_mult != 1
               <code>RISCV_MATH_SUCCESS</code> - Successful operation

@note       If number of channels is not a multiple of 4, upto 3 elements outside the boundary will be read out
            for the following if MVE optimizations(Arm Helium Technology) are used.
              - Output shift
              - Output multiplier
              - Output bias
              - kernel



   - Supported framework: TensorFlow Lite
   - The following constrains on the arguments apply
       -# Number of input channel equals number of output channels or ch_mult equals 1
   - q7 is used as data type eventhough it is s8 data. It is done so to be consistent with existing APIs.
   - Reccomended when number of channels is 4 or greater.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1gaf0c3458a5d997da11bacd258c7a86ab7';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_depthwise_conv_s8_opt_get_buffer_size';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '1247';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the required buffer size for optimized s8 depthwise convolution
function with constraint that in_channel equals out_channel.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       input_dims     Input (activation) tensor dimensions. Format: [1, H, W, C_IN]
                                Batch argument N is not used.
@param[in]       filter_dims    Filter tensor dimensions. Format: [1, H, W, C_OUT]
@return          The function returns  required buffer size in bytes
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__FC_1gaabd0ddb08f10926a0cb16c780f1f1092';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_fully_connected_q7';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pV';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pM';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_vec';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'num_of_rows';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pOut';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'vec_buffer';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '1280';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Q7 basic fully-connected layer function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       pV          pointer to input vector
@param[in]       pM          pointer to matrix weights
@param[in]       dim_vec     length of the vector
@param[in]       num_of_rows number of rows in weight matrix
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in]       bias        pointer to bias
@param[in,out]   pOut        pointer to output vector
@param[in,out]   vec_buffer  pointer to buffer space for input
@return     The function returns <code>RISCV_MATH_SUCCESS</code>

@param[in]       pV          pointer to input vector
@param[in]       pM          pointer to matrix weights
@param[in]       dim_vec     length of the vector
@param[in]       num_of_rows number of rows in weight matrix
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in]       bias        pointer to bias
@param[in,out]   pOut        pointer to output vector
@param[in,out]   vec_buffer  pointer to buffer space for input
@return     The function returns <code>RISCV_MATH_SUCCESS</code>





<b>Buffer size:</b>

vec_buffer size: dim_vec

This basic function is designed to work with regular weight
matrix without interleaving.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__FC_1gaee6b76ba1caa346436404498e6c022f9';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_fully_connected_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_fc_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'fc_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_per_tensor_quant_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'quant_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_data';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '1325';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Basic s8 Fully Connected function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in, out] ctx            Function context (e.g. temporary buffer). Check the function
                               definition file to see if an additional buffer is required.
                               Optional function {API}_get_buffer_size() provides the buffer
                               size if an additional buffer is required.
@param[in]      fc_params      Fully Connected layer parameters.
                               Range of fc_params->input_offset  : [-127, 128]
                               fc_params->filter_offset : 0
                               Range of fc_params->output_offset : [-128, 127]
@param[in]      quant_params   Per-tensor quantization info.
                               It contains the multiplier and shift values to be applied to the output tensor.
@param[in]      input_dims     Input (activation) tensor dimensions. Format: [N, H, W, C_IN]
                               Input dimension is taken as Nx(H * W * C_IN)
@param[in]      input_data     Input (activation) data pointer. Data type: int8
@param[in]      filter_dims    Two dimensional filter dimensions. Format: [N, C]
                               N : accumulation depth and equals (H * W * C_IN) from input_dims
                               C : output depth and equals C_OUT in output_dims
                               H & W : Not used
@param[in]      filter_data    Filter data pointer. Data type: int8
@param[in]      bias_dims      Bias tensor dimensions. Format: [C_OUT]
                               N, H, W : Not used
@param[in]      bias_data      Bias data pointer. Data type: int32
@param[in]      output_dims    Output tensor dimensions. Format: [N, C_OUT]
                               N : Batches
                               C_OUT : Output depth
                               H & W : Not used.
@param[in, out] output_data    Output data pointer. Data type: int8
@return     The function returns <code>RISCV_MATH_SUCCESS</code>




   - Supported framework: TensorFlow Lite
   - q7 is used as data type eventhough it is s8 data. It is done so to be consistent with existing APIs.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__FC_1gad6f87a614339280578e030ff6599ec2d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_fully_connected_s8_get_buffer_size';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '1344';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the required buffer size for S8 basic fully-connected and
matrix multiplication layer function for TF Lite.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]      filter_dims             dimension of filter
@return         The function returns    required buffer size in bytes
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__FC_1ga943071036b67bc0a59886c8bee86965d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_fully_connected_s16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_fc_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'fc_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_per_tensor_quant_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'quant_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int64_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_data';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '1381';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Basic s16 Fully Connected function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in, out] ctx            Function context (e.g. temporary buffer). Check the function
                               definition file to see if an additional buffer is required.
                               Optional function {API}_get_buffer_size() provides the buffer
                               size if an additional buffer is required.
@param[in]      fc_params      Fully Connected layer parameters.
                               fc_params->input_offset  : 0
                               fc_params->filter_offset : 0
                               fc_params->output_offset : 0
@param[in]      quant_params   Per-tensor quantization info.
                               It contains the multiplier and shift values to be applied to the output tensor.
@param[in]      input_dims     Input (activation) tensor dimensions. Format: [N, H, W, C_IN]
                               Input dimension is taken as Nx(H * W * C_IN)
@param[in]      input_data     Input (activation) data pointer. Data type: int16
@param[in]      filter_dims    Two dimensional filter dimensions. Format: [N, C]
                               N : accumulation depth and equals (H * W * C_IN) from input_dims
                               C : output depth and equals C_OUT in output_dims
                               H & W : Not used
@param[in]      filter_data    Filter data pointer. Data type: int8
@param[in]      bias_dims      Bias tensor dimensions. Format: [C_OUT]
                               N, H, W : Not used
@param[in]      bias_data      Bias data pointer. Data type: int64
@param[in]      output_dims    Output tensor dimensions. Format: [N, C_OUT]
                               N : Batches
                               C_OUT : Output depth
                               H & W : Not used.
@param[in, out] output_data    Output data pointer. Data type: int16
@return     The function returns <code>RISCV_MATH_SUCCESS</code>




   - Supported framework: TensorFlow Lite
   - q15 is used as data type eventhough it is s16 data. It is done so to be consistent with existing APIs.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__FC_1ga3b2b4841125e295ce99b2ae648483b4c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_fully_connected_s16_get_buffer_size';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '1400';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the required buffer size for S16 basic fully-connected and
matrix multiplication layer function for TF Lite.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]      filter_dims             dimension of filter
@return         The function returns    required buffer size in bytes
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__FC_1ga7941d995077149ea20950bb2e44f4bba';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_fully_connected_q7_opt';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pV';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pM';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_vec';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'num_of_rows';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pOut';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'vec_buffer';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '1417';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Q7 opt fully-connected layer function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       pV          pointer to input vector
@param[in]       pM          pointer to matrix weights
@param[in]       dim_vec     length of the vector
@param[in]       num_of_rows number of rows in weight matrix
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in]       bias        pointer to bias
@param[in,out]   pOut        pointer to output vector
@param[in,out]   vec_buffer  pointer to buffer space for input
@return     The function returns <code>RISCV_MATH_SUCCESS</code>

@param[in]       pV          pointer to input vector
@param[in]       pM          pointer to matrix weights
@param[in]       dim_vec     length of the vector
@param[in]       num_of_rows number of rows in weight matrix
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in]       bias        pointer to bias
@param[in,out]   pOut        pointer to output vector
@param[in,out]   vec_buffer  pointer to buffer space for input
@return     The function returns <code>RISCV_MATH_SUCCESS</code>





<b>Buffer size:</b>

vec_buffer size: dim_vec

This opt function is designed to work with interleaved weight
matrix. The vector input is assumed in q7_t format, we call
 riscv_q7_to_q15_no_shift_shuffle function to expand into
 q15_t format with certain weight re-ordering, refer to the function
 comments for more details.
 Here we use only one pointer to read 4 rows in the weight
 matrix. So if the original q7_t matrix looks like this:

 | a11 | a12 | a13 | a14 | a15 | a16 | a17 |

 | a21 | a22 | a23 | a24 | a25 | a26 | a27 |

 | a31 | a32 | a33 | a34 | a35 | a36 | a37 |

 | a41 | a42 | a43 | a44 | a45 | a46 | a47 |

 | a51 | a52 | a53 | a54 | a55 | a56 | a57 |

 | a61 | a62 | a63 | a64 | a65 | a66 | a67 |


 We operates on multiple-of-4 rows, so the first four rows becomes

 | a11 | a21 | a13 | a23 | a31 | a41 | a33 | a43 |

 | a12 | a22 | a14 | a24 | a32 | a42 | a34 | a44 |

 | a15 | a25 | a35 | a45 | a16 | a26 | a36 | a46 |

 So within the kernel, we first read the re-ordered vector in as:

 | b1  | b3  | and | b2  | b4  |

 the four q31_t weights will look like

 | a11 | a13 |, | a21 | a23 |, | a31 | a33 |, | a41 | a43 |

 | a12 | a14 |, | a22 | a24 |, | a32 | a34 |, | a42 | a44 |

 The column left over will be in-order.
 which is:

 | a17 | a27 | a37 | a47 |

 For the left-over rows, we do 1x1 computation, so the data remains
 as its original order.

 So the stored weight matrix looks like this:

 | a11 | a21 | a13 | a23 | a31 | a41 |

 | a33 | a43 | a12 | a22 | a14 | a24 |

 | a32 | a42 | a34 | a44 | a15 | a25 |

 | a35 | a45 | a16 | a26 | a36 | a46 |

 | a17 | a27 | a37 | a47 | a51 | a52 |

 | a53 | a54 | a55 | a56 | a57 | a61 |

 | a62 | a63 | a64 | a65 | a66 | a67 |
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__FC_1gab7871cb369396fba31f5e7037b163b89';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_fully_connected_q15';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pV';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pM';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_vec';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'num_of_rows';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pOut';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'vec_buffer';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '1442';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Q15 basic fully-connected layer function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       pV          pointer to input vector
@param[in]       pM          pointer to matrix weights
@param[in]       dim_vec     length of the vector
@param[in]       num_of_rows number of rows in weight matrix
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in]       bias        pointer to bias
@param[in,out]   pOut        pointer to output vector
@param[in,out]   vec_buffer  pointer to buffer space for input
@return     The function returns <code>RISCV_MATH_SUCCESS</code>

Q15 basic fully-connected layer function.

@param[in]       pV          pointer to input vector
@param[in]       pM          pointer to matrix weights
@param[in]       dim_vec     length of the vector
@param[in]       num_of_rows number of rows in weight matrix
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in]       bias        pointer to bias
@param[in,out]   pOut        pointer to output vector
@param[in,out]   vec_buffer  pointer to buffer space for input
@return     The function returns <code>RISCV_MATH_SUCCESS</code>






<b>Buffer size:</b>

vec_buffer size: 0
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__FC_1ga7aac789b484f40bcea3ca6511f2969d1';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_fully_connected_q15_opt';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pV';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pM';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_vec';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'num_of_rows';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pOut';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'vec_buffer';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '1467';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Q15 opt fully-connected layer function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       pV          pointer to input vector
@param[in]       pM          pointer to matrix weights
@param[in]       dim_vec     length of the vector
@param[in]       num_of_rows number of rows in weight matrix
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in]       bias        pointer to bias
@param[in,out]   pOut        pointer to output vector
@param[in,out]   vec_buffer  pointer to buffer space for input
@return     The function returns <code>RISCV_MATH_SUCCESS</code>

@param[in]       pV          pointer to input vector
@param[in]       pM          pointer to matrix weights
@param[in]       dim_vec     length of the vector
@param[in]       num_of_rows number of rows in weight matrix
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in]       bias        pointer to bias
@param[in,out]   pOut        pointer to output vector
@param[in,out]   vec_buffer  pointer to buffer space for input
@return     The function returns <code>RISCV_MATH_SUCCESS</code>






<b>Buffer size:</b>

vec_buffer size: 0

 Here we use only one pointer to read 4 rows in the weight
 matrix. So if the original matrix looks like this:

 | a11 | a12 | a13 |

 | a21 | a22 | a23 |

 | a31 | a32 | a33 |

 | a41 | a42 | a43 |

 | a51 | a52 | a53 |

 | a61 | a62 | a63 |

 We operates on multiple-of-4 rows, so the first four rows becomes

 | a11 | a12 | a21 | a22 | a31 | a32 | a41 | a42 |

 | a13 | a23 | a33 | a43 |

 Remaining rows are kept the same original order.

 So the stored weight matrix looks like this:


 | a11 | a12 | a21 | a22 | a31 | a32 | a41 | a42 |

 | a13 | a23 | a33 | a43 | a51 | a52 | a53 | a61 |

 | a62 | a63 |
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__FC_1gae53e7bbdcd7730c409d71d08c446d666';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_fully_connected_mat_q7_vec_q15';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pV';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pM';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_vec';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'num_of_rows';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pOut';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'vec_buffer';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '1492';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Mixed Q15-Q7 fully-connected layer function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       pV          pointer to input vector
@param[in]       pM          pointer to matrix weights
@param[in]       dim_vec     length of the vector
@param[in]       num_of_rows number of rows in weight matrix
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in]       bias        pointer to bias
@param[in,out]   pOut        pointer to output vector
@param[in,out]   vec_buffer  pointer to buffer space for input
@return     The function returns <code>RISCV_MATH_SUCCESS</code>

@param[in]       pV          pointer to input vector
@param[in]       pM          pointer to matrix weights
@param[in]       dim_vec     length of the vector
@param[in]       num_of_rows number of rows in weight matrix
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in]       bias        pointer to bias
@param[in,out]   pOut        pointer to output vector
@param[in,out]   vec_buffer  pointer to buffer space for input
@return     The function returns <code>RISCV_MATH_SUCCESS</code>





<b>Buffer size:</b>

vec_buffer size: 0

 Q7_Q15 version of the fully connected layer

 Weights are in q7_t and Activations are in q15_t
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__FC_1ga73d8955ae16c57e5fe30de697459daed';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_fully_connected_mat_q7_vec_q15_opt';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pV';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pM';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_vec';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'num_of_rows';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pOut';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'vec_buffer';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '1517';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Mixed Q15-Q7 opt fully-connected layer function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       pV          pointer to input vector
@param[in]       pM          pointer to matrix weights
@param[in]       dim_vec     length of the vector
@param[in]       num_of_rows number of rows in weight matrix
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in]       bias        pointer to bias
@param[in,out]   pOut        pointer to output vector
@param[in,out]   vec_buffer  pointer to buffer space for input
@return     The function returns <code>RISCV_MATH_SUCCESS</code>

@param[in]       pV          pointer to input vector
@param[in]       pM          pointer to matrix weights
@param[in]       dim_vec     length of the vector
@param[in]       num_of_rows number of rows in weight matrix
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in]       bias        pointer to bias
@param[in,out]   pOut        pointer to output vector
@param[in,out]   vec_buffer  pointer to buffer space for input
@return     The function returns <code>RISCV_MATH_SUCCESS</code>





<b>Buffer size:</b>

vec_buffer size: 0

 Q7_Q15 version of the fully connected layer

 Weights are in q7_t and Activations are in q15_t

 Limitation: x4 version requires weight reordering to work

 Here we use only one pointer to read 4 rows in the weight
 matrix. So if the original q7_t matrix looks like this:

 | a11 | a12 | a13 | a14 | a15 | a16 | a17 |

 | a21 | a22 | a23 | a24 | a25 | a26 | a27 |

 | a31 | a32 | a33 | a34 | a35 | a36 | a37 |

 | a41 | a42 | a43 | a44 | a45 | a46 | a47 |

 | a51 | a52 | a53 | a54 | a55 | a56 | a57 |

 | a61 | a62 | a63 | a64 | a65 | a66 | a67 |

 We operates on multiple-of-4 rows, so the first four rows becomes

 | a11 | a21 | a12 | a22 | a31 | a41 | a32 | a42 |

 | a13 | a23 | a14 | a24 | a33 | a43 | a34 | a44 |

 | a15 | a25 | a16 | a26 | a35 | a45 | a36 | a46 |

 The column left over will be in-order.
 which is:
 | a17 | a27 | a37 | a47 |

 For the left-over rows, we do 1x1 computation, so the data remains
 as its original order.

 So the stored weight matrix looks like this:

 | a11 | a21 | a12 | a22 | a31 | a41 |

 | a32 | a42 | a13 | a23 | a14 | a24 |

 | a33 | a43 | a34 | a44 | a15 | a25 |

 | a16 | a26 | a35 | a45 | a36 | a46 |

 | a17 | a27 | a37 | a47 | a51 | a52 |

 | a53 | a54 | a55 | a56 | a57 | a61 |

 | a62 | a63 | a64 | a65 | a66 | a67 |
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'riscv__nnfunctions_8h_1a0a5502e6071542d3186fd7e13a773e5b';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_mat_mult_kernel_q7_q15';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pA';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pInBuffer';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'numCol_A';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pOut';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '1552';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Matrix-Multiplication Kernels for Convolution.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
These functions are used within convolution layer functions for
matrix multiplication.

The implementation is similar to NMSIS-DSP riscv_mat_mult functions
with one Q7 and one Q15 operands. The Q15 operand is the im2col
output which is always with 2 columns.
Matrix-multiplication function for convolution
@param[in]       pA          pointer to operand A
@param[in]       pInBuffer   pointer to operand B, always conssists of 2 vectors
@param[in]       ch_im_out   numRow of A
@param[in]       numCol_A    numCol of A
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in]       bias        the bias
@param[in,out]   pOut        pointer to output
@return     The function returns the incremented output pointer

Matrix-Multiplication Kernels for Convolution.

Refer to header file for details.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'riscv__nnfunctions_8h_1a02d325bf5565604cbdd34bf2b6bb7a9a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_mat_mult_kernel_q7';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pA';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pInBuffer';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'numCol_A';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pOut';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '1573';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Matrix-multiplication function for convolution.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       pA          pointer to operand A, q7 type
@param[in]       pInBuffer   pointer to operand B, q7 type
@param[in]       ch_im_out   numRow of A
@param[in]       numCol_A    numCol of A
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in]       bias        the bias
@param[in,out]   pOut        pointer to output
@return     The function returns the incremented output pointer

@param[in]       pA          pointer to operand A
@param[in]       pInBuffer   pointer to operand B, always conssists of 2 vectors
@param[in]       ch_im_out   numRow of A
@param[in]       numCol_A    numCol of A
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in]       bias        the bias
@param[in,out]   pOut        pointer to output
@return     The function returns the incremented output pointer





This function does the matrix multiplication with weight matrix
and 2 columns from im2col.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__BasicMath_1ga550d2fcdcc84f774042d724833c9a79e';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_elementwise_add_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_1_vect';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_2_vect';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_1_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_1_mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_1_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_2_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_2_mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_2_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'left_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_activation_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_activation_max';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'block_size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '1622';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
s8 elementwise add of two vectors
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       input_1_vect            pointer to input vector 1
@param[in]       input_2_vect            pointer to input vector 2
@param[in]       input_1_offset          offset for input 1. Range: -127 to 128
@param[in]       input_1_mult            multiplier for input 1
@param[in]       input_1_shift           shift for input 1
@param[in]       input_2_offset          offset for input 2. Range: -127 to 128
@param[in]       input_2_mult            multiplier for input 2
@param[in]       input_2_shift           shift for input 2
@param[in]       left_shift              input left shift
@param[in,out]   output                  pointer to output vector
@param[in]       out_offset              output offset.  Range: -128 to 127
@param[in]       out_mult                output multiplier
@param[in]       out_shift               output shift
@param[in]       out_activation_min      minimum value to clamp output to. Min: -128
@param[in]       out_activation_max      maximum value to clamp output to. Max: 127
@param[in]       block_size              number of samples
@return          The function returns    RISCV_MATH_SUCCESS
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__BasicMath_1ga8df473e72e73447b08b45dbd909f83ae';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_elementwise_add_s16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_1_vect';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_2_vect';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_1_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_1_mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_1_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_2_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_2_mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_2_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'left_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int16_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_activation_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_activation_max';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'block_size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '1659';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
s16 elementwise add of two vectors
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       input_1_vect            pointer to input vector 1
@param[in]       input_2_vect            pointer to input vector 2
@param[in]       input_1_offset          offset for input 1. Not used.
@param[in]       input_1_mult            multiplier for input 1
@param[in]       input_1_shift           shift for input 1
@param[in]       input_2_offset          offset for input 2. Not used.
@param[in]       input_2_mult            multiplier for input 2
@param[in]       input_2_shift           shift for input 2
@param[in]       left_shift              input left shift
@param[in,out]   output                  pointer to output vector
@param[in]       out_offset              output offset. Not used.
@param[in]       out_mult                output multiplier
@param[in]       out_shift               output shift
@param[in]       out_activation_min      minimum value to clamp output to. Min: -32768
@param[in]       out_activation_max      maximum value to clamp output to. Max: 32767
@param[in]       block_size              number of samples
@return          The function returns    RISCV_MATH_SUCCESS
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__BasicMath_1ga0ec573c9ae7297928d3b5ef158fae771';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_elementwise_mul_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_1_vect';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_2_vect';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_1_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_2_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_activation_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_activation_max';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'block_size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '1693';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
s8 elementwise multiplication
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       input_1_vect            pointer to input vector 1
@param[in]       input_2_vect            pointer to input vector 2
@param[in]       input_1_offset          offset for input 1. Range: -127 to 128
@param[in]       input_2_offset          offset for input 2. Range: -127 to 128
@param[in,out]   output                  pointer to output vector
@param[in]       out_offset              output offset. Range: -128 to 127
@param[in]       out_mult                output multiplier
@param[in]       out_shift               output shift
@param[in]       out_activation_min      minimum value to clamp output to. Min: -128
@param[in]       out_activation_max      maximum value to clamp output to. Max: 127
@param[in]       block_size              number of samples
@return          The function returns    RISCV_MATH_SUCCESS



Supported framework: TensorFlow Lite micro

s8 elementwise multiplication

@note   Refer header file for details.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__BasicMath_1gadc02784b4606acb569eb5897bf089035';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_elementwise_mul_s16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_1_vect';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_2_vect';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_1_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_2_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int16_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_activation_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_activation_max';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'block_size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '1722';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
s16 elementwise multiplication
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       input_1_vect            pointer to input vector 1
@param[in]       input_2_vect            pointer to input vector 2
@param[in]       input_1_offset          offset for input 1. Not used.
@param[in]       input_2_offset          offset for input 2. Not used.
@param[in,out]   output                  pointer to output vector
@param[in]       out_offset              output offset. Not used.
@param[in]       out_mult                output multiplier
@param[in]       out_shift               output shift
@param[in]       out_activation_min      minimum value to clamp output to. Min: -32768
@param[in]       out_activation_max      maximum value to clamp output to. Max: 32767
@param[in]       block_size              number of samples
@return          The function returns    RISCV_MATH_SUCCESS



Supported framework: TensorFlow Lite micro

s16 elementwise multiplication

@note   Refer header file for details.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Acti_1gadfa641ea64baa82d43247a787fbf9396';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_relu_q7';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '1749';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Q7 RELU function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in,out]   data        pointer to input
@param[in]       size        number of elements
@return none.

@param[in,out]   data        pointer to input
@param[in]       size        number of elements





Optimized relu with QSUB instructions.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Acti_1ga4ae55579cc7a7ae6b209c2ad846908fa';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_relu6_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '1757';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
s8 ReLU6 function
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in,out]   data        pointer to input
@param[in]       size        number of elements
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Acti_1ga1eeec0b43b5de74bc3e0912d426b1ad5';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_relu_q15';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '1766';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Q15 RELU function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in,out]   data        pointer to input
@param[in]       size        number of elements
@return none.

@param[in,out]   data        pointer to input
@param[in]       size        number of elements





Optimized relu with QSUB instructions.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Acti_1gaae6ff7918c52fd8cbd47f52337ad945f';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_activations_direct_q7';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'int_width';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
riscv_nn_activation_type
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'type';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '1777';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Q7 neural network activation function using direct table look-up.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in,out]   data        pointer to input
@param[in]       size        number of elements
@param[in]       int_width   bit-width of the integer part, assume to be smaller than 3
@param[in]       type        type of activation functions
@return none.

@param[in,out]   data        pointer to input
@param[in]       size        number of elements
@param[in]       int_width   bit-width of the integer part, assume to be smaller than 3
@param[in]       type        type of activation functions





This is the direct table look-up approach.

Assume here the integer part of the fixed-point is <= 3.
More than 3 just not making much sense, makes no difference with
saturation followed by any of these activation functions.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Acti_1ga729aaae34b90575f7fa4f7a2e4e63d79';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_activations_direct_q15';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'int_width';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
riscv_nn_activation_type
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'type';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '1796';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Q15 neural network activation function using direct table look-up.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in,out]   data        pointer to input
@param[in]       size        number of elements
@param[in]       int_width   bit-width of the integer part, assume to be smaller than 3
@param[in]       type        type of activation functions
@return none.





This is the direct table look-up approach.

Assume here the integer part of the fixed-point is <= 3.
More than 3 just not making much sense, makes no difference with
saturation followed by any of these activation functions.

Q15 neural network activation function using direct table look-up.

@note  Refer header file for details.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Pooling_1gad7cc16cadfeb14ccfe21a43f0a0a98ee';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_maxpool_q7_HWC';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_kernel';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'padding';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferA';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_out';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '1820';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Q7 max pooling function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       Im_in       pointer to input tensor
@param[in]       dim_im_in   input tensor dimension
@param[in]       ch_im_in    number of input tensor channels
@param[in]       dim_kernel  filter kernel size
@param[in]       padding     padding sizes
@param[in]       stride      convolution stride
@param[in]       dim_im_out  output tensor dimension
@param[in,out]   bufferA     pointer to buffer space for input
@param[in,out]   Im_out      pointer to output tensor
@return none.

@param[in, out]  Im_in       pointer to input tensor
@param[in]       dim_im_in   input tensor dimention
@param[in]       ch_im_in    number of input tensor channels
@param[in]       dim_kernel  filter kernel size
@param[in]       padding     padding sizes
@param[in]       stride      convolution stride
@param[in]       dim_im_out  output tensor dimension
@param[in,out]   bufferA     Not used
@param[in,out]   Im_out      pointer to output tensor





The pooling function is implemented as split x-pooling then
y-pooling.

This pooling function is input-destructive. Input data is undefined
after calling this function.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Pooling_1ga667c1b6d57466cb5ce7e4c41cb79f7d7';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_avepool_q7_HWC';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_kernel';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'padding';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferA';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_out';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '1845';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Q7 average pooling function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       Im_in       pointer to input tensor
@param[in]       dim_im_in   input tensor dimension
@param[in]       ch_im_in    number of input tensor channels
@param[in]       dim_kernel  filter kernel size
@param[in]       padding     padding sizes
@param[in]       stride      convolution stride
@param[in]       dim_im_out  output tensor dimension
@param[in,out]   bufferA     pointer to buffer space for input
@param[in,out]   Im_out      pointer to output tensor
@return none.

@param[in,out]   Im_in       pointer to input tensor
@param[in]       dim_im_in   input tensor dimention
@param[in]       ch_im_in    number of input tensor channels
@param[in]       dim_kernel  filter kernel size
@param[in]       padding     padding sizes
@param[in]       stride      convolution stride
@param[in]       dim_im_out  output tensor dimension
@param[in,out]   bufferA     pointer to buffer space for input
@param[in,out]   Im_out      pointer to output tensor





<b>Buffer size:</b>

bufferA size:  2*dim_im_out*ch_im_in

The pooling function is implemented as split x-pooling then
y-pooling.

This pooling function is input-destructive. Input data is undefined
after calling this function.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Pooling_1gafc4742a0e25482c38424da25628a873d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_avgpool_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_pool_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pool_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_data';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '1879';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
s8 average pooling function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in, out] ctx            Function context (e.g. temporary buffer). Check the function
                               definition file to see if an additional buffer is required.
                               Optional function {API}_get_buffer_size() provides the buffer
                               size if an additional buffer is required.
@param[in]      pool_params    Pooling parameters
@param[in]      input_dims     Input (activation) tensor dimensions. Format: [H, W, C_IN]
                               Argument 'N' is not used.
@param[in]      input_data     Input (activation) data pointer. Data type: int8
@param[in]      filter_dims    Filter tensor dimensions. Format: [H, W]
                               Argument N and C are not used.
@param[in]      output_dims    Output tensor dimensions. Format: [H, W, C_OUT]
                               Argument N is not used.
                               C_OUT equals C_IN.
@param[in, out] output_data    Output data pointer. Data type: int8
@return                        The function returns
                                   <code>RISCV_MATH_SUCCESS</code> - Successful operation




   - Supported Framework: TensorFlow Lite
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Pooling_1ga632118d8940612a22eba8866bbe8b924';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_avgpool_s8_get_buffer_size';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_dst_width';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_src';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '1894';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the required buffer size for S8 average pooling function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       dim_dst_width         output tensor dimension
@param[in]       ch_src                number of input tensor channels
@return          The function returns  required buffer size in bytes
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Pooling_1ga5e98a793729db8f4153968c1e3e2777b';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_avgpool_s16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_pool_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pool_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int16_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_data';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '1920';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
s16 average pooling function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in, out] ctx            Function context (e.g. temporary buffer). Check the function
                               definition file to see if an additional buffer is required.
                               Optional function {API}_get_buffer_size() provides the buffer
                               size if an additional buffer is required.
@param[in]      pool_params    Pooling parameters
@param[in]      input_dims     Input (activation) tensor dimensions. Format: [H, W, C_IN]
                               Argument 'N' is not used.
@param[in]      input_data     Input (activation) data pointer. Data type: int16
@param[in]      filter_dims    Filter tensor dimensions. Format: [H, W]
                               Argument N and C are not used.
@param[in]      output_dims    Output tensor dimensions. Format: [H, W, C_OUT]
                               Argument N is not used.
                               C_OUT equals C_IN.
@param[in, out] output_data    Output data pointer. Data type: int16
@return                        The function returns
                                   <code>RISCV_MATH_SUCCESS</code> - Successful operation




   - Supported Framework: TensorFlow Lite
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Pooling_1ga78f51f2113cb5d94c730f9faca34e9d5';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_avgpool_s16_get_buffer_size';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_dst_width';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_src';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '1935';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the required buffer size for S16 average pooling function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       dim_dst_width         output tensor dimension
@param[in]       ch_src                number of input tensor channels
@return          The function returns  required buffer size in bytes
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Pooling_1ga1a1a793e01426883dd94efb50b0053e3';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_max_pool_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_pool_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pool_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_data';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '1962';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
s8 max pooling function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in, out] ctx            Function context (e.g. temporary buffer). Check the function
                               definition file to see if an additional buffer is required.
                               Optional function {API}_get_buffer_size() provides the buffer
                               size if an additional buffer is required.
@param[in]      pool_params    Pooling parameters
@param[in]      input_dims     Input (activation) tensor dimensions. Format: [H, W, C_IN]
                               Argument 'N' is not used.
@param[in]      input_data     Input (activation) data pointer. The input tensor must not
                               overlap with the output tensor. Data type: int8
@param[in]      filter_dims    Filter tensor dimensions. Format: [H, W]
                               Argument N and C are not used.
@param[in]      output_dims    Output tensor dimensions. Format: [H, W, C_OUT]
                               Argument N is not used.
                               C_OUT equals C_IN.
@param[in, out] output_data    Output data pointer. Data type: int8
@return                        The function returns
                                   <code>RISCV_MATH_SUCCESS</code> - Successful operation




   - Supported Framework: TensorFlow Lite
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Pooling_1ga6adf7a64922112bede4d64d94e9a4458';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_max_pool_s16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_pool_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pool_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'src';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int16_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '1995';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
s16 max pooling function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in, out] ctx            Function context (e.g. temporary buffer). Check the function
                               definition file to see if an additional buffer is required.
                               Optional function {API}_get_buffer_size() provides the buffer
                               size if an additional buffer is required.
@param[in]      pool_params    Pooling parameters
@param[in]      input_dims     Input (activation) tensor dimensions. Format: [H, W, C_IN]
                               Argument 'N' is not used.
@param[in]      src            Input (activation) data pointer. The input tensor must not
                               overlap with the output tensor. Data type: int16
@param[in]      filter_dims    Filter tensor dimensions. Format: [H, W]
                               Argument N and C are not used.
@param[in]      output_dims    Output tensor dimensions. Format: [H, W, C_OUT]
                               Argument N is not used.
                               C_OUT equals C_IN.
@param[in, out] dst            Output data pointer. Data type: int16
@return                        The function returns
                                   <code>RISCV_MATH_SUCCESS</code> - Successful operation




   - Supported Framework: TensorFlow Lite
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Softmax_1ga4c7867bb7ac62d4581deda5730dce99b';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_softmax_q7';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'vec_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_vec';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'p_out';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '2021';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Q7 softmax function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       vec_in      pointer to input vector
@param[in]       dim_vec     input vector dimension
@param[out]      p_out       pointer to output vector

@note This function is an optimized version which is not bit-accurate with
      TensorFlow Lite's kernel

@param[in]       vec_in      pointer to input vector
@param[in]       dim_vec     input vector dimention
@param[out]      p_out       pointer to output vector





 Here, instead of typical natural logarithm e based softmax, we use
 2-based softmax here, i.e.,:

 y_i = 2^(x_i) / sum(2^x_j)

 The relative output will be different here.
 But mathematically, the gradient will be the same
 with a log(2) scaling factor.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Softmax_1ga898a4b60ebeb23a8faa1cd9f4b867fbe';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_softmax_with_batch_q7';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'vec_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'nb_batches';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_vec';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'p_out';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '2036';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Q7 softmax function with batch parameter.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       vec_in      pointer to input vector
@param[in]       nb_batches  number of batches
@param[in]       dim_vec     input vector dimension
@param[out]      p_out       pointer to output vector
@return none.

@note This function is an optimized version which is not bit-accurate with
      TensorFlow Lite's kernel

@param[in]       vec_in      pointer to input vector
@param[in]       nb_batches  number of batches
@param[in]       dim_vec     input vector dimention
@param[out]      p_out       pointer to output vector





 Here, instead of typical natural logarithm e based softmax, we use
 2-based softmax here, i.e.,:

 y_i = 2^(x_i) / sum(2^x_j)

 The relative output will be different here.
 But mathematically, the gradient will be the same
 with a log(2) scaling factor.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Softmax_1gaa9d0de605290176e23463cbaeb84a9ce';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_softmax_q15';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'vec_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_vec';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'p_out';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '2049';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Q15 softmax function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       vec_in      pointer to input vector
@param[in]       dim_vec     input vector dimension
@param[out]      p_out       pointer to output vector
@return none.

@note This function is an optimized version which is not bit-accurate with
      TensorFlow Lite's kernel

@param[in]       vec_in      pointer to input vector
@param[in]       dim_vec     input vector dimention
@param[out]      p_out       pointer to output vector





 Here, instead of typical e based softmax, we use
 2-based softmax, i.e.,:

 y_i = 2^(x_i) / sum(2^x_j)

 The relative output will be different here.
 But mathematically, the gradient will be the same
 with a log(2) scaling factor.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Softmax_1gac9dd5c3c22158eec0237b03d50a54465';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_softmax_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'num_rows';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'row_size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'diff_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '2065';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
S8 softmax function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]  input     Pointer to the input tensor
@param[in]  num_rows  Number of rows in the input tensor
@param[in]  row_size  Number of elements in each input row
@param[in]  mult      Input quantization multiplier
@param[in]  shift     Input quantization shift within the range [0, 31]
@param[in]  diff_min  Minimum difference with max in row. Used to check if
                      the quantized exponential operation can be performed
@param[out] output    Pointer to the output tensor

@note Supported framework: TensorFlow Lite micro (bit-accurate)
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Softmax_1ga905ee1f12d8b77f94d20e53189843b8f';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_softmax_s8_s16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'num_rows';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'row_size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'diff_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int16_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '2087';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
S8 to s16 softmax function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]  input     Pointer to the input tensor
@param[in]  num_rows  Number of rows in the input tensor
@param[in]  row_size  Number of elements in each input row
@param[in]  mult      Input quantization multiplier
@param[in]  shift     Input quantization shift within the range [0, 31]
@param[in]  diff_min  Minimum difference with max in row. Used to check if
                      the quantized exponential operation can be performed
@param[out] output    Pointer to the output tensor

@note Supported framework: TensorFlow Lite micro (bit-accurate)
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Softmax_1ga8669f22315993fcfc455207a81ea4d8c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_softmax_s16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'num_rows';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'row_size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_softmax_lut_s16 *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'softmax_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int16_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '2116';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
S16 softmax function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]  input           Pointer to the input tensor
@param[in]  num_rows        Number of rows in the input tensor
@param[in]  row_size        Number of elements in each input row
@param[in]  mult            Input quantization multiplier
@param[in]  shift           Input quantization shift within the range [0, 31]
@param[in]  softmax_params  Softmax s16 layer parameters with two pointers to LUTs speficied below.
                            For indexing the high 9 bits are used and 7 remaining for interpolation.
                            That means 512 entries for the 9-bit indexing and 1 extra for interpolation, i.e. 513
                            values for each LUT.
                            - Lookup table for exp(x), where x uniform distributed between [-10.0 , 0.0]
                            - Lookup table for 1 / (1 + x), where x uniform distributed between [0.0 , 1.0]
@param[out] output          Pointer to the output tensor
@return                        The function returns
                                   <code>RISCV_MATH_ARGUMENT_ERROR</code> if LUTs are NULL
                                   <code>RISCV_MATH_SUCCESS</code> - Successful operation

@note Supported framework: TensorFlow Lite micro (bit-accurate)
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Softmax_1ga11a1ba75201c791d528d559432c484e3';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_softmax_u8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'num_rows';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'row_size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'diff_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '2139';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
U8 softmax function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]  input     Pointer to the input tensor
@param[in]  num_rows  Number of rows in the input tensor
@param[in]  row_size  Number of elements in each input row
@param[in]  mult      Input quantization multiplier
@param[in]  shift     Input quantization shift within the range [0, 31]
@param[in]  diff_min  Minimum difference with max in row. Used to check if
                      the quantized exponential operation can be performed
@param[out] output    Pointer to the output tensor

@note Supported framework: TensorFlow Lite micro (bit-accurate)
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNConv_1gaa3a3e0fac3bbb5d7b5ac90a21ee4ade8';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_depthwise_conv_u8_basic_ver1';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_ch';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'kernel';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'kernel_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'kernel_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pad_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pad_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dilation_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dilation_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filter_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_activation_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_activation_max';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
        func-mem-param-defname = 'output_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_mult';
        func-mem-param-defname = 'output_mult';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '2181';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
uint8 depthwise convolution function with asymmetric quantization
       Unless specified otherwise, arguments are mandatory.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]     input     Pointer to input tensor
@param[in]     input_x   Width of input tensor
@param[in]     input_y   Height of input tensor
@param[in]     input_ch  Channels in input tensor
@param[in]     kernel    Pointer to kernel weights
@param[in]     kernel_x  Width of kernel
@param[in]     kernel_y  Height of kernel
@param[in]     ch_mult   Number of channel multiplier
@param[in]     pad_x     Padding sizes x
@param[in]     pad_y     Padding sizes y
@param[in]     stride_x  stride along the width
@param[in]     stride_y  stride along the height
@param[in]     dilation_x Dilation along width. Not used and intended for future enhancement.
@param[in]     dilation_y Dilation along height. Not used and intended for future enhancement.
@param[in]     bias       Pointer to optional bias values. If no bias is
                          availble, NULL is expected
@param[in]     input_offset  Input tensor zero offset
@param[in]     filter_offset Kernel tensor zero offset
@param[in]     output_offset Output tensor zero offset
@param[in,out] output        Pointer to output tensor
@param[in]     output_x  Width of output tensor
@param[in]     output_y  Height of output tensor
@param[in]     output_activation_min   Minimum value to clamp the output to. Range : {0, 255}
@param[in]     output_activation_max   Minimum value to clamp the output to. Range : {0, 255}
@param[in]     out_shift  Amount of right-shift for output
@param[in]     out_mult   Output multiplier for requantization
@return        The function returns the following
               <code>RISCV_MATH_SUCCESS</code> - Successful operation

uint8 depthwise convolution function with asymmetric quantization
       Unless specified otherwise, arguments are mandatory.

@param[in]     input     Pointer to input tensor
@param[in]     input_x   Width of input tensor
@param[in]     input_y   Height of input tensor
@param[in]     input_ch  Channels in input tensor
@param[in]     kernel    Pointer to kernel weights
@param[in]     kernel_x  Width of kernel
@param[in]     kernel_y  Height of kernel
@param[in]     ch_mult   Number of channel multiplier
@param[in]     pad_x     Padding sizes x
@param[in]     pad_y     Padding sizes y
@param[in]     stride_x  Convolution stride along the width
@param[in]     stride_y  Convolution stride along the height
@param[in]     dilation_x Dilation along width. Not used and intended for future enhancement.
@param[in]     dilation_y Dilation along height. Not used and intended for future enhancement.
@param[in]     bias       Pointer to optional bias values. If no bias is
                          available, NULL is expected
@param[in]     input_offset  Input tensor zero offset
@param[in]     filter_offset Kernel tensor zero offset
@param[in]     output_offset Output tensor zero offset
@param[in,out] output        Pointer to output tensor
@param[in]     output_x  Width of output tensor
@param[in]     output_y  Height of output tensor
@param[in]     output_activation_min   Minimum value to clamp the output to. Range : {0, 255}
@param[in]     output_activation_max   Minimum value to clamp the output to. Range : {0, 255}
@param[in]     output_shift  Amount of right-shift for output
@param[in]     output_mult   Output multiplier for requantization
@return        The function returns one of the following
               <code>RISCV_MATH_SIZE_MISMATCH</code> - Not supported dimension of tensors
               <code>RISCV_MATH_SUCCESS</code> - Successful operation
               <code>RISCV_MATH_ARGUMENT_ERROR</code> - Implementation not available
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Reshape_1gad02fc1084c9fb41e448b9497c49d6a44';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_reshape_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'total_size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '2221';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Reshape a s8 vector into another with different shape.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]  input      points to the s8 input vector
@param[out] output     points to the s8 output vector
@param[in]  total_size total size of the input and output vectors in bytes

@note The output is expected to be in a memory area that does not overlap with the input's

Basic s8 reshape function.

Refer header file for details.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Concatenation_1gafa12d1ee96f292d65d1e49468d6dc831';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_concatenation_s8_x';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_z';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_w';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'offset_x';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '2266';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
int8/uint8 concatenation function to be used for concatenating N-tensors along the X axis
       This function should be called for each input tensor to concatenate. The argument offset_x
       will be used to store the input tensor in the correct position in the output tensor
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
       i.e.    offset_x = 0
               for(i = 0 i < num_input_tensors; ++i)
               {
                   riscv_concatenation_s8_x(&input[i], ..., &output, ..., ..., offset_x)
                   offset_x += input_x[i]
               }

       This function assumes that the output tensor has:
       -# The same height of the input tensor
       -# The same number of channels of the input tensor
       -# The same batch size of the input tensor

       Unless specified otherwise, arguments are mandatory.

@note This function, data layout independent, can be used to concatenate either int8 or uint8 tensors because it
     does not involve any arithmetic operation

@param[in]  input    Pointer to input tensor. Input tensor must not overlap with the output tensor.
@param[in]  input_x  Width of input tensor
@param[in]  input_y  Height of input tensor
@param[in]  input_z  Channels in input tensor
@param[in]  input_w  Batch size in input tensor
@param[out] output   Pointer to output tensor. Expected to be at least
                         (input_x * input_y * input_z * input_w) + offset_x
                     bytes.
@param[in]  output_x Width of output tensor
@param[in]  offset_x The offset (in number of elements) on the X axis to start concatenating the input tensor
                     It is user responsibility to provide the correct value

<b> Input constraints</b>
offset_x is less than output_x
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Concatenation_1ga465e5094e0cfa990768f2d1e8ed2de6f';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_concatenation_s8_y';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_z';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_w';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'offset_y';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '2313';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
int8/uint8 concatenation function to be used for concatenating N-tensors along the Y axis
       This function should be called for each input tensor to concatenate. The argument offset_y
       will be used to store the input tensor in the correct position in the output tensor
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
       i.e.    offset_y = 0
               for(i = 0 i < num_input_tensors; ++i)
               {
                   riscv_concatenation_s8_y(&input[i], ..., &output, ..., ..., offset_y)
                   offset_y += input_y[i]
               }

       This function assumes that the output tensor has:
       -# The same width of the input tensor
       -# The same number of channels of the input tensor
       -# The same batch size of the input tensor

       Unless specified otherwise, arguments are mandatory.

@note This function, data layout independent, can be used to concatenate either int8 or uint8 tensors because it
      does not involve any arithmetic operation

@param[in]  input    Pointer to input tensor. Input tensor must not overlap with the output tensor.
@param[in]  input_x  Width of input tensor
@param[in]  input_y  Height of input tensor
@param[in]  input_z  Channels in input tensor
@param[in]  input_w  Batch size in input tensor
@param[out] output   Pointer to output tensor. Expected to be at least
                         (input_z * input_w * input_x * input_y) + offset_y
                     bytes.
@param[in]  output_y Height of output tensor
@param[in]  offset_y The offset on the Y axis to start concatenating the input tensor
                     It is user responsibility to provide the correct value

<b> Input constraints</b>
offset_y is less than output_y
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Concatenation_1ga31ca151014169081ff8ed1b199bba65e';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_concatenation_s8_z';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_z';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_w';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_z';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'offset_z';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '2360';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
int8/uint8 concatenation function to be used for concatenating N-tensors along the Z axis
       This function should be called for each input tensor to concatenate. The argument offset_z
       will be used to store the input tensor in the correct position in the output tensor
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
       i.e.    offset_z = 0
               for(i = 0 i < num_input_tensors; ++i)
               {
                   riscv_concatenation_s8_z(&input[i], ..., &output, ..., ..., offset_z)
                   offset_z += input_z[i]
               }

       This function assumes that the output tensor has:
       -# The same width of the input tensor
       -# The same height of the input tensor
       -# The same batch size of the input tensor

       Unless specified otherwise, arguments are mandatory.

@note This function, data layout independent, can be used to concatenate either int8 or uint8 tensors because it
      does not involve any arithmetic operation

@param[in]  input    Pointer to input tensor. Input tensor must not overlap with output tensor.
@param[in]  input_x  Width of input tensor
@param[in]  input_y  Height of input tensor
@param[in]  input_z  Channels in input tensor
@param[in]  input_w  Batch size in input tensor
@param[out] output   Pointer to output tensor. Expected to be at least
                         (input_x * input_y * input_z * input_w) + offset_z
                     bytes.
@param[in]  output_z Channels in output tensor
@param[in]  offset_z The offset on the Z axis to start concatenating the input tensor
                     It is user responsibility to provide the correct value

<b> Input constraints</b>
offset_z is less than output_z
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Concatenation_1ga59ce48c133477f158e6bfae43414b72a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_concatenation_s8_w';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_x';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_y';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_z';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_w';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'offset_w';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '2403';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
int8/uint8 concatenation function to be used for concatenating N-tensors along the W axis (Batch size)
       This function should be called for each input tensor to concatenate. The argument offset_w
       will be used to store the input tensor in the correct position in the output tensor
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
       i.e.    offset_w = 0
               for(i = 0 i < num_input_tensors; ++i)
               {
                   riscv_concatenation_s8_w(&input[i], ..., &output, ..., ..., offset_w)
                   offset_w += input_w[i]
               }

       This function assumes that the output tensor has:
       -# The same width of the input tensor
       -# The same height of the input tensor
       -# The same number o channels of the input tensor

       Unless specified otherwise, arguments are mandatory.

@note This function, data layout independent, can be used to concatenate either int8 or uint8 tensors because it
      does not involve any arithmetic operation

@param[in]  input    Pointer to input tensor
@param[in]  input_x  Width of input tensor
@param[in]  input_y  Height of input tensor
@param[in]  input_z  Channels in input tensor
@param[in]  input_w  Batch size in input tensor
@param[out] output   Pointer to output tensor. Expected to be at least
                         input_x * input_y * input_z * input_w
                     bytes.
@param[in]  offset_w The offset on the W axis to start concatenating the input tensor
                     It is user responsibility to provide the correct value
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__SVDF_1gacc604da8dd1a04abc111922a0be61df8';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_svdf_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_svdf_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'svdf_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_per_tensor_quant_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_quant_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_per_tensor_quant_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_quant_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'state_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'state_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'weights_feature_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'weights_feature_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'weights_time_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'weights_time_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q31_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_data';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '2445';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
s8 SVDF function with 8 bit state tensor and 8 bit time weights
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]   input_ctx Temporary scratch buffer
@param[in]   output_ctx Temporary output scratch buffer
@param[in]   svdf_params SVDF Parameters
             Range of svdf_params->input_offset  : [-128, 127]
             Range of svdf_params->output_offset  : [-128, 127]
@param[in]   input_quant_params Input quantization parameters
@param[in]   output_quant_params Output quantization parameters
@param[in]   input_dims Input tensor dimensions
@param[in]   input_data Pointer to input tensor
@param[in]   state_dims State tensor dimensions
@param[in]   state_data Pointer to state tensor
@param[in]   weights_feature_dims Weights (feature) tensor dimensions
@param[in]   weights_feature_data Pointer to the weights (feature) tensor
@param[in]   weights_time_dims Weights (time) tensor dimensions
@param[in]   weights_time_data Pointer to the weights (time) tensor
@param[in]   bias_dims Bias tensor dimensions
@param[in]   bias_data Pointer to bias tensor
@param[in]   output_dims Output tensor dimensions
@param[out]  output_data Pointer to the output tensor

@return     The function returns <code>RISCV_MATH_SUCCESS</code>




   1. Supported framework: TensorFlow Lite micro
   2. q7 is used as data type eventhough it is s8 data. It is done so to be consistent with existing APIs.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__SVDF_1ga99cd86735b9e2c840951d2d0d5de5251';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_svdf_state_s16_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_svdf_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'svdf_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_per_tensor_quant_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_quant_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_per_tensor_quant_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_quant_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'state_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'state_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'weights_feature_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'weights_feature_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'weights_time_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'weights_time_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q31_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_data';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
      func-mem-desc-line = '2493';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
s8 SVDF function with 16 bit state tensor and 16 bit time weights
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]   input_ctx Temporary scratch buffer
@param[in]   output_ctx Temporary output scratch buffer
@param[in]   svdf_params SVDF Parameters
             Range of svdf_params->input_offset  : [-128, 127]
             Range of svdf_params->output_offset  : [-128, 127]
@param[in]   input_quant_params Input quantization parameters
@param[in]   output_quant_params Output quantization parameters
@param[in]   input_dims Input tensor dimensions
@param[in]   input_data Pointer to input tensor
@param[in]   state_dims State tensor dimensions
@param[in]   state_data Pointer to state tensor
@param[in]   weights_feature_dims Weights (feature) tensor dimensions
@param[in]   weights_feature_data Pointer to the weights (feature) tensor
@param[in]   weights_time_dims Weights (time) tensor dimensions
@param[in]   weights_time_data Pointer to the weights (time) tensor
@param[in]   bias_dims Bias tensor dimensions
@param[in]   bias_data Pointer to bias tensor
@param[in]   output_dims Output tensor dimensions
@param[out]  output_data Pointer to the output tensor

@return     The function returns <code>RISCV_MATH_SUCCESS</code>




   1. Supported framework: TensorFlow Lite micro
   2. q7 is used as data type eventhough it is s8 data. It is done so to be consistent with existing APIs.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnfunctions.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__nnsupportfunctions_8h';
  file-name = 'riscv_nnsupportfunctions.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnsupportfunctions_8h_1a2953f124ae444ebdd2b2a0873ac36b7e';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'LEFT_SHIFT';
      define-mem-param  = {
        define-mem-def-name = '_shift';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(_shift > 0 ? _shift : 0)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      define-mem-desc-line = '41';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnsupportfunctions_8h_1a26af54489c1401b91595bf0c92ef87c4';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'RIGHT_SHIFT';
      define-mem-param  = {
        define-mem-def-name = '_shift';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(_shift > 0 ? 0 : -_shift)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      define-mem-desc-line = '42';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnsupportfunctions_8h_1a76b700415a2c22cea484103b7123739b';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MASK_IF_ZERO';
      define-mem-param  = {
        define-mem-def-name = 'x';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(x) == 0 ? ~0 : 0
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      define-mem-desc-line = '43';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnsupportfunctions_8h_1a0bc8558b22558613ed3ad3eb624ec7a5';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MASK_IF_NON_ZERO';
      define-mem-param  = {
        define-mem-def-name = 'x';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(x) != 0 ? ~0 : 0
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      define-mem-desc-line = '44';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnsupportfunctions_8h_1a6f69b7e95b80e10a5f5d2ddbbfbc301f';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SELECT_USING_MASK';
      define-mem-param  = {
        define-mem-def-name = 'mask';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'a';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'b';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((mask) & (a)) ^ (~(mask) & (b))
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      define-mem-desc-line = '45';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnsupportfunctions_8h_1ad935f1ff1a50822e317bdb321ce991ad';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MAX';
      define-mem-param  = {
        define-mem-def-name = 'A';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'B';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((A) > (B) ? (A) : (B))
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      define-mem-desc-line = '47';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnsupportfunctions_8h_1adcd021ac91d43a62b2cdecf9a5b971a7';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MIN';
      define-mem-param  = {
        define-mem-def-name = 'A';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'B';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((A) < (B) ? (A) : (B))
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      define-mem-desc-line = '48';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnsupportfunctions_8h_1abe05f0e80d965ae31dec16ba4063f48a';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CLAMP';
      define-mem-param  = {
        define-mem-def-name = 'x';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'h';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'l';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
MAX(MIN((x), (h)), (l))
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      define-mem-desc-line = '49';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnsupportfunctions_8h_1a19343832dbe881d527496171f69dc0c3';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'REDUCE_MULTIPLIER';
      define-mem-param  = {
        define-mem-def-name = '_mult';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((_mult < 0x7FFF0000) ? ((_mult + (1 << 15)) >> 16) : 0x7FFF)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      define-mem-desc-line = '50';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnsupportfunctions_8h_1a28a5e99e4909ed729dbdee6d13868c3e';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'RVV_OPT_THRESHOLD';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0xF
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      define-mem-desc-line = '56';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnsupportfunctions_8h_1a7f8d7623a6fd3492efd9b38f45da38a6';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'PACK_Q7x4_32x1';
      define-mem-param  = {
        define-mem-def-name = 'v0';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'v1';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'v2';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'v3';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((((int32_t)(v0) << 0) & (int32_t)0x000000FF) | (((int32_t)(v1) << 8) & (int32_t)0x0000FF00) |                     \
     (((int32_t)(v2) << 16) & (int32_t)0x00FF0000) | (((int32_t)(v3) << 24) & (int32_t)0xFF000000))
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      define-mem-desc-line = '60';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
definition to pack four 8 bit values.
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnsupportfunctions_8h_1a4cbd428a2b4a4f6b2a6e4219520c7ce0';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'NN_ROUND';
      define-mem-param  = {
        define-mem-def-name = 'out_shift';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((0x1 << out_shift) >> 1)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      define-mem-desc-line = '841';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
macro for adding rounding offset
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnsupportfunctions_8h_1a518f7e0db18bea6b61a2b88f266aef20';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MUL_SAT';
      define-mem-param  = {
        define-mem-def-name = 'a';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'b';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
riscv_nn_doubling_high_mult((a), (b))
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      define-mem-desc-line = '847';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnsupportfunctions_8h_1a6349818fec8167dff87c3fb7ca81fc1c';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MUL_SAT_MVE';
      define-mem-param  = {
        define-mem-def-name = 'a';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'b';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
riscv_doubling_high_mult_mve_32x4((a), (b))
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      define-mem-desc-line = '848';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnsupportfunctions_8h_1a9d7332bc4331d55ada7ea19407e2a8c3';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MUL_POW2';
      define-mem-param  = {
        define-mem-def-name = 'a';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'b';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
riscv_nn_mult_by_power_of_two((a), (b))
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      define-mem-desc-line = '849';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnsupportfunctions_8h_1a7ce5ee6d8839bf541fb4bbdf4ef80eb1';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DIV_POW2';
      define-mem-param  = {
        define-mem-def-name = 'a';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'b';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
riscv_nn_divide_by_power_of_two((a), (b))
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      define-mem-desc-line = '851';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnsupportfunctions_8h_1a0e4379e9eef514ce88d02b5dfbff256d';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DIV_POW2_MVE';
      define-mem-param  = {
        define-mem-def-name = 'a';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'b';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
riscv_divide_by_power_of_two_mve((a), (b))
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      define-mem-desc-line = '852';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnsupportfunctions_8h_1a97055bb1e8a21ead129caecdfb24cfb1';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'EXP_ON_NEG';
      define-mem-param  = {
        define-mem-def-name = 'x';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
riscv_nn_exp_on_negative_values((x))
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      define-mem-desc-line = '854';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnsupportfunctions_8h_1a82ac477c930f5b05e8f71f6f61e405a8';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'ONE_OVER1';
      define-mem-param  = {
        define-mem-def-name = 'x';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
riscv_nn_one_over_one_plus_x_for_x_in_0_1((x))
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      define-mem-desc-line = '855';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__nnsupportfunctions_8h_1a4b3b6a6ed8cb224c5bcabd9ad1c94fde';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SELECT_IF_NON_ZERO';
      define-mem-param  = {
        define-mem-def-name = 'x';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
{                                                                                                                  \
        mask = MASK_IF_NON_ZERO(remainder & (1 << shift++));                                                           \
        result = SELECT_USING_MASK(mask, MUL_SAT(result, x), result);                                                  \
    }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      define-mem-desc-line = '1015';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__nndata__convert_1gaaf28207f289291c26b3fb4dac25c80bb';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_q7_to_q15_no_shift';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pSrc';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pDst';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'blockSize';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      func-mem-desc-line = '106';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Converts the elements of the q7 vector to q15 vector without left-shift.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       *pSrc points to the q7 input vector
@param[out]      *pDst points to the q15 output vector
@param[in]       blockSize length of the input vector

Converts the elements of the q7 vector to q15 vector without left-shift.

@param[in]       *pSrc points to the Q7 input vector
@param[out]      *pDst points to the Q15 output vector
@param[in]       blockSize length of the input vector

\par Description:

The equation used for the conversion process is:

<pre>
        pDst[n] = (q15_t) pSrc[n];   0 <= n < blockSize.
</pre>
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__nndata__convert_1ga3caedd7ab46f10c71af9d3d7876215df';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_q7_to_q7_no_shift';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pSrc';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pDst';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'blockSize';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      func-mem-desc-line = '108';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Converts the elements of the Q7 vector to Q7 vector without left-shift.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       *pSrc points to the Q7 input vector
@param[out]      *pDst points to the Q7 output vector
@param[in]       blockSize length of the input vector
@return none.

\par Description:

The equation used for the conversion process is:

<pre>
        pDst[n] = (q15_t) pSrc[n];   0 <= n < blockSize.
</pre>
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNBasicMath_1gae72ab1e8045b992f1bf49b0bbafee3b1';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_add_q7';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q31_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'block_size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      func-mem-desc-line = '126';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Non-saturating addition of elements of a q7 vector.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       *input Pointer to the q7 input vector
@param[out]      *output Pointer to the q31 output variable.
@param[in]       block_size length of the input vector
\par Description:

2^24 samples can be added without saturating the result.

The equation used for the conversion process is:

<pre>
 sum = input[0] + input[1] + .. + input[block_size -1]
</pre>
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__nndata__convert_1ga4424909bb2c474ae80731cc6fc688421';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_q7_to_q15_reordered_no_shift';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pSrc';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pDst';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'blockSize';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      func-mem-desc-line = '136';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Converts the elements of the q7 vector to reordered q15 vector without left-shift.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       *pSrc points to the q7 input vector
@param[out]      *pDst points to the q15 output vector
@param[in]       blockSize length of the input vector
@return none.

Converts the elements of the q7 vector to reordered q15 vector without left-shift.

@param[in]       *pSrc points to the Q7 input vector
@param[out]      *pDst points to the Q15 output vector
@param[in]       blockSize length of the input vector





This function does the q7 to q15 expansion with re-ordering

<pre>
                         |   A1   |   A2   |   A3   |   A4   |

                          0      7 8     15 16    23 24    31
</pre>

is converted into:

<pre>
 |       A1       |       A3       |   and  |       A2       |       A4       |

  0             15 16            31          0             15 16            31
</pre>


This looks strange but is natural considering how sign-extension is done at
assembly level.

The expansion of other other oprand will follow the same rule so that the end
results are the same.

The tail (i.e., last (N % 4) elements) will still be in original order.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__nndata__convert_1gae41bc04256cf974ec36e82c521b43d02';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_q7_to_q7_reordered_no_shift';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pSrc';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pDst';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'blockSize';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      func-mem-desc-line = '138';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Converts the elements of the Q7 vector to reordered Q7 vector without left-shift.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       *pSrc points to the Q7 input vector
@param[out]      *pDst points to the Q7 output vector
@param[in]       blockSize length of the input vector
@return none.





This function does the q7 to q7 expansion with re-ordering

<pre>
                         |   A1   |   A2   |   A3   |   A4   |

                          0      7 8     15 16    23 24    31
</pre>

is converted into:

<pre>
 |       A1       |       A3       |   and  |       A2       |       A4       |

  0             15 16            31          0             15 16            31
</pre>


This looks strange but is natural considering how sign-extension is done at
assembly level.

The expansion of other other oprand will follow the same rule so that the end
results are the same.

The tail (i.e., last (N % 4) elements) will still be in original order.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__nndata__convert_1gae18e005b31738822b1e58b6de811b3e8';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_q7_to_q15_with_offset';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'src';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'block_size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'offset';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      func-mem-desc-line = '156';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Converts the elements from a q7 vector to a q15 vector with an added offset.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]    src        pointer to the q7 input vector
@param[out]   dst        pointer to the q15 output vector
@param[in]    block_size length of the input vector
@param[in]    offset     q7 offset to be added to each input vector element.

\par Description:

The equation used for the conversion process is:

<pre>
 dst[n] = (q15_t) src[n] + offset;   0 <= n < block_size.
</pre>
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__nndata__convert_1ga4a965dd0234b45a0304588d2469906b8';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_q7_to_q15_reordered_with_offset';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'src';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'block_size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'offset';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      func-mem-desc-line = '171';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Converts the elements of the q7 vector to reordered q15 vector with an added offset.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       src        pointer to the q7 input vector
@param[out]      dst        pointer to the q15 output vector
@param[in]       block_size length of the input vector
@param[in]       offset     offset to be added to each input vector element.
@return none.



This function does the q7 to q15 expansion with re-ordering of bytes. Re-ordering is a consequence of
          the sign extension intrinsic(DSP extension). The tail (i.e., last (N % 4) elements) retains its
original order.

Converts the elements of the q7 vector to reordered q15 vector with an added offset.

@note  Refer header file for details.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNBasicMath_1gaaa2307380e2a7d065d4dad6a928f8abb';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_accumulate_q7_to_q15';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'src';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'block_size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      func-mem-desc-line = '188';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Converts the elements from a q7 vector and accumulate to a q15 vector.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]    *src       points to the q7 input vector
@param[out]   *dst       points to the q15 output vector
@param[in]    block_size length of the input vector

\par Description:

The equation used for the conversion process is:

<pre>
 dst[n] += (q15_t) src[n] ;   0 <= n < block_size.
</pre>
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'riscv__nnsupportfunctions_8h_1a71a603e13b3f587d28da10b8d7f4abed';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_depthwise_conv_s8_core';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'row';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'col';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'num_ch';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'activation_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'activation_max';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'kernel_size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *const
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      func-mem-desc-line = '209';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Depthwise conv on an im2col buffer where the input channel equals output channel.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]    row     pointer to row
@param[in]    col     pointer to im2col buffer, always consists of 2 columns.
@param[in]    num_ch   number of channels
@param[in]    out_shift  pointer to per output channel requantization shift parameter.
@param[in]    out_mult   pointer to per output channel requantization multiplier parameter.
@param[in]    out_offset      output tensor offset.
@param[in]    activation_min   minimum value to clamp the output to. Range : int8
@param[in]    activation_max   maximum value to clamp the output to. Range : int8
@param[in]    kernel_size   number of elements in one column.
@param[in]    output_bias per output channel bias. Range : int32
@param[out]   out         pointer to output
@return     The function returns one of the two
             1. The incremented output pointer for a successful operation or
             2. NULL if implementation is not available.



Supported framework: TensorFlow Lite micro.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'riscv__nnsupportfunctions_8h_1aa5f91cf7441ee0a1a6fad2de483ae2f4';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_mat_mult_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_row';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_col';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_ch';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'col_batches';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'col_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'row_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_activation_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_activation_max';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'row_len';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *const
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      func-mem-desc-line = '243';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
General Matrix-multiplication function with per-channel requantization.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       input_row    pointer to row operand
@param[in]       input_col    pointer to col operand
@param[in]       output_ch    number of rows of input_row
@param[in]       col_batches  number of column batches. Range: 1 to 4
@param[in]       output_shift  pointer to per output channel requantization shift parameter.
@param[in]       output_mult   pointer to per output channel requantization multiplier parameter.
@param[in]       out_offset    output tensor offset.
@param[in]       col_offset    input tensor(col) offset.
@param[in]       row_offset    kernel offset(row). Not used.
@param[in]       out_activation_min   minimum value to clamp the output to. Range : int8
@param[in]       out_activation_max   maximum value to clamp the output to. Range : int8
@param[in]       row_len       number of elements in each row
@param[in]       bias          per output channel bias. Range : int32
@param[in,out]   out           pointer to output
@return     The function returns one of the two
             1. The incremented output pointer for a successful operation or
             2. NULL if implementation is not available.



Supported framework: TensorFlow Lite
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'riscv__nnsupportfunctions_8h_1a431b6595595738fa228ceea5f6f245a6';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_mat_mult_kernel_s16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_a';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_b';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_ch';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'activation_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'activation_max';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'num_col_a';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int64_t *const
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_0';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      func-mem-desc-line = '278';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Matrix-multiplication function for convolution with per-channel requantization for 16 bits convolution.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       input_a     pointer to operand A
@param[in]       input_b     pointer to operand B, always consists of 2 vectors.
@param[in]       output_ch   number of rows of A
@param[in]       out_shift  pointer to per output channel requantization shift parameter.
@param[in]       out_mult   pointer to per output channel requantization multiplier parameter.
@param[in]       activation_min   minimum value to clamp the output to. Range : int16
@param[in]       activation_max   maximum value to clamp the output to. Range : int16
@param[in]       num_col_a   number of columns of A
@param[in]       output_bias per output channel bias. Range : int64
@param[in,out]   out_0       pointer to output
@return     The function returns one of the two
             1. The incremented output pointer for a successful operation or
             2. NULL if implementation is not available.



This function does the matrix multiplication of weight matrix for all output channels
           with 2 columns from im2col and produces two elements/output_channel. The outputs are
           clamped in the range provided by activation min and max.
           Supported framework: TensorFlow Lite micro.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNBasicMath_1gadfb338f9bd0ccfc54c942430f973962c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_mat_mul_core_1x_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'row_elements';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'row_base';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'col_base';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int32_t *const
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'sum_col';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int32_t *const
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      func-mem-desc-line = '305';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
General Matrix-multiplication without requantization for one row & one column.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       row_elements  number of row elements
@param[in]       row_base      pointer to row operand
@param[in]       col_base      pointer to col operand
@param[out]      sum_col       pointer to store sum of column elements
@param[out]      output        pointer to store result of multiply-accumulate
@return     The function returns the multiply-accumulated result of the row by column.



Pseudo-code
     *output = 0
     sum_col = 0
     for (i = 0; i < row_elements; i++)
         *output += row_base[i] * col_base[i]
         sum_col += col_base[i]
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNBasicMath_1ga5ce706aab34112677e5adbfba40954bb';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int8_t *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_mat_mul_core_4x_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'row_elements';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'row_base';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'col_base';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_ch';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_conv_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'conv_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_per_channel_quant_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'quant_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      func-mem-desc-line = '328';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Matrix-multiplication with requantization & activation function for four rows and one column.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       row_elements  number of row elements
@param[in]       offset        offset between rows. Can be the same as row_elements.
                               For e.g, in a 1x1 conv scenario with stride as 1.
@param[in]       row_base      pointer to row operand
@param[in]       col_base      pointer to col operand
@param[in]       out_ch        Number of output channels
@param[in]       conv_params   Pointer to convolution parameters like offsets and activation values
@param[in]       quant_params  Pointer to per-channel quantization parameters
@param[in]       bias          Pointer to per-channel bias
@param[out]      output        Pointer to output where int8 results are stored.

@return     The function returns the updated output pointer or NULL if implementation is not available.



Compliant to TFLM int8 specification. MVE implementation only
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNBasicMath_1ga0eee2411ea5e6df47751d6ff9d489dae';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_mat_mult_nt_t_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'lhs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'rhs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q31_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst_multipliers';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst_shifts';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'lhs_rows';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'rhs_rows';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'rhs_cols';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'lhs_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'activation_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'activation_max';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      func-mem-desc-line = '367';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
General Matrix-multiplication function with per-channel requantization.
       This function assumes:
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
       - LHS input matrix NOT transposed (nt)
       - RHS input matrix transposed (t)

 @note This operation also performs the broadcast bias addition before the requantization

@param[in]  lhs                Pointer to the LHS input matrix
@param[in]  rhs                Pointer to the RHS input matrix
@param[in]  bias               Pointer to the bias vector. The length of this vector is equal to the number of
output columns (or RHS input rows)
@param[out] dst                Pointer to the output matrix with "m" rows and "n" columns
@param[in]  dst_multipliers    Pointer to the multipliers vector needed for the per-channel requantization.
                               The length of this vector is equal to the number of output columns (or RHS input
rows)
@param[in]  dst_shifts         Pointer to the shifts vector needed for the per-channel requantization. The length
of this vector is equal to the number of output columns (or RHS input rows)
@param[in]  lhs_rows           Number of LHS input rows
@param[in]  rhs_rows           Number of RHS input rows
@param[in]  rhs_cols           Number of LHS/RHS input columns
@param[in]  lhs_offset         Offset to be applied to the LHS input value
@param[in]  dst_offset         Offset to be applied the output result
@param[in]  activation_min     Minimum value to clamp down the output. Range : int8
@param[in]  activation_max     Maximum value to clamp up the output. Range : int8

@return     The function returns <code>RISCV_MATH_SUCCESS</code>
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNBasicMath_1ga0c3082b00f2b9f5c7efeaab36fc58b77';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_vec_mat_mult_t_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'lhs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'rhs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q31_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'lhs_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'rhs_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst_multiplier';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'rhs_cols';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'rhs_rows';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'activation_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'activation_max';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'address_offset';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      func-mem-desc-line = '404';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
s8 Vector by Matrix (transposed) multiplication
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]      lhs             Input left-hand side vector
@param[in]      rhs             Input right-hand side matrix (transposed)
@param[in]      bias            Input bias
@param[out]     dst             Output vector
@param[in]      lhs_offset      Offset to be added to the input values of the left-hand side vector.
                                Range: -127 to 128
@param[in]      rhs_offset      Not used
@param[in]      dst_offset      Offset to be added to the output values. Range: -127 to 128
@param[in]      dst_multiplier  Output multiplier
@param[in]      dst_shift       Output shift
@param[in]      rhs_cols        Number of columns in the right-hand side input matrix
@param[in]      rhs_rows        Number of rows in the right-hand side input matrix
@param[in]      activation_min  Minimum value to clamp the output to. Range: int8
@param[in]      activation_max  Maximum value to clamp the output to. Range: int8
@param[in]      address_offset  Memory position offset for dst. First output is stored at 'dst', the
                                second at 'dst + address_offset' and so on. Default value is typically 1.

@return         The function returns <code>RISCV_MATH_SUCCESS</code>
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNBasicMath_1ga204ad5506aa1b3eba092520838913e86';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_vec_mat_mult_t_s16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'lhs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'rhs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q63_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst_multiplier';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'rhs_cols';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'rhs_rows';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'activation_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'activation_max';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      func-mem-desc-line = '436';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
s16 Vector by Matrix (transposed) multiplication
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]      lhs             Input left-hand side vector
@param[in]      rhs             Input right-hand side matrix (transposed)
@param[in]      bias            Input bias
@param[out]     dst             Output vector
@param[in]      dst_multiplier  Output multiplier
@param[in]      dst_shift       Output shift
@param[in]      rhs_cols        Number of columns in the right-hand side input matrix
@param[in]      rhs_rows        Number of rows in the right-hand side input matrix
@param[in]      activation_min  Minimum value to clamp the output to. Range: int16
@param[in]      activation_max  Maximum value to clamp the output to. Range: int16

@return         The function returns <code>RISCV_MATH_SUCCESS</code>
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNBasicMath_1ga9db069bb9afca33647c216f8d359bf49';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_vec_mat_mult_t_svdf_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'lhs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'rhs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'lhs_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'rhs_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'scatter_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst_multiplier';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'rhs_cols';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'rhs_rows';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'activation_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'activation_max';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      func-mem-desc-line = '468';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
s8 Vector by Matrix (transposed) multiplication with s16 output
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]      lhs             Input left-hand side vector
@param[in]      rhs             Input right-hand side matrix (transposed)
@param[out]     dst             Output vector
@param[in]      lhs_offset      Offset to be added to the input values of the left-hand side
                                vector. Range: -127 to 128
@param[in]      rhs_offset      Not used
@param[in]      scatter_offset  Address offset for dst. First output is stored at 'dst', the
                                second at 'dst + scatter_offset' and so on.
@param[in]      dst_multiplier  Output multiplier
@param[in]      dst_shift       Output shift
@param[in]      rhs_cols        Number of columns in the right-hand side input matrix
@param[in]      rhs_rows        Number of rows in the right-hand side input matrix
@param[in]      activation_min  Minimum value to clamp the output to. Range: int16
@param[in]      activation_max  Maximum value to clamp the output to. Range: int16

@return         The function returns <code>RISCV_MATH_SUCCESS</code>
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNBasicMath_1gafb6cf5529840ea70733e977c295f2a68';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_depthwise_conv_nt_t_padded_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'lhs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'rhs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'lhs_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'num_ch';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'activation_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'activation_max';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'row_x_col';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *const
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      func-mem-desc-line = '509';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Depthwise convolution of transposed rhs matrix with 4 lhs matrices. To be used in padded cases where
       the padding is -lhs_offset(Range: int8). Dimensions are the same for lhs and rhs.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]      lhs             Input left-hand side matrix
@param[in]      rhs             Input right-hand side matrix (transposed)
@param[in]      lhs_offset      LHS matrix offset(input offset). Range: -127 to 128
@param[in]      num_ch          Number of channels in LHS/RHS
@param[in]      out_shift       Per channel output shift. Length of vector is equal to number of channels
@param[in]      out_mult        Per channel output multiplier. Length of vector is equal to number of channels
@param[in]      out_offset      Offset to be added to the output values. Range: -127 to 128
@param[in]      activation_min  Minimum value to clamp the output to. Range: int8
@param[in]      activation_max  Maximum value to clamp the output to. Range: int8
@param[in]       row_x_col       (row_dimension * col_dimension) of LHS/RHS matrix
@param[in]      output_bias     Per channel output bias. Length of vector is equal to number of channels
@param[in]      out             Output pointer

@return         The function returns one of the two
                 - Updated output pointer if an implementation is available
                 - NULL if no implementation is available.

@note           If number of channels is not a multiple of 4, upto 3 elements outside the boundary will be read
out for the following.
                 - Output shift
                 - Output multiplier
                 - Output bias
                 - rhs
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNBasicMath_1ga8deb697159c0af5b9318ab595d09cf23';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_depthwise_conv_nt_t_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'lhs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'rhs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'lhs_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'num_ch';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'activation_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'activation_max';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'row_x_col';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *const
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      func-mem-desc-line = '550';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Depthwise convolution of transposed rhs matrix with 4 lhs matrices. To be used in non-padded cases.
       Dimensions are the same for lhs and rhs.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]      lhs             Input left-hand side matrix
@param[in]      rhs             Input right-hand side matrix (transposed)
@param[in]      lhs_offset      LHS matrix offset(input offset). Range: -127 to 128
@param[in]      num_ch          Number of channels in LHS/RHS
@param[in]      out_shift       Per channel output shift. Length of vector is equal to number of channels.
@param[in]      out_mult        Per channel output multiplier. Length of vector is equal to number of channels.
@param[in]      out_offset      Offset to be added to the output values. Range: -127 to 128
@param[in]      activation_min  Minimum value to clamp the output to. Range: int8
@param[in]      activation_max  Maximum value to clamp the output to. Range: int8
@param[in]       row_x_col       (row_dimension * col_dimension) of LHS/RHS matrix
@param[in]      output_bias     Per channel output bias. Length of vector is equal to number of channels.
@param[in]      out             Output pointer

@return         The function returns one of the two
                 - Updated output pointer if an implementation is available
                 - NULL if no implementation is available.

@note           If number of channels is not a multiple of 4, upto 3 elements outside the boundary will be read
out for the following.
                 - Output shift
                 - Output multiplier
                 - Output bias
                 - rhs
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'riscv__nnsupportfunctions_8h_1a0477f12c5cec8e93a49669b7eebbb437';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_mat_mult_kernel_q7_q15_reordered';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pA';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pInBuffer';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'numCol_A';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pOut';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      func-mem-desc-line = '577';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Matrix-multiplication function for convolution with reordered columns.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       pA          pointer to operand A
@param[in]       pInBuffer   pointer to operand B, always conssists of 2 vectors
@param[in]       ch_im_out   numRow of A
@param[in]       numCol_A    numCol of A
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in]       bias        the bias
@param[in,out]   pOut        pointer to output
@return     The function returns the incremented output pointer



This function assumes that data in pInBuffer are reordered

Matrix-multiplication function for convolution with reordered columns.

Refer to header file for details.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'riscv__nnsupportfunctions_8h_1af58bd3c1abe7649518be10ad2d7c2a1a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_mat_mult_kernel_q7_reordered';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pA';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pInBuffer';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'numCol_A';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pOut';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      func-mem-desc-line = '586';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Matrix-multiplication function for convolution with reordered columns.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       pA          pointer to operand A
@param[in]       pInBuffer   pointer to operand B, always conssists of 2 vectors
@param[in]       ch_im_out   numRow of A
@param[in]       numCol_A    numCol of A
@param[in]       bias_shift  amount of left-shift for bias
@param[in]       out_shift   amount of right-shift for output
@param[in]       bias        the bias
@param[in,out]   pOut        pointer to output
@return     The function returns the incremented output pointer





This function assumes that data in pInBuffer are reordered
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'riscv__nnsupportfunctions_8h_1aae3cc1a9193fa8abdf46d271cb95849c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
__STATIC_FORCEINLINE q31_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_read_q15x2_ia';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'in_q15';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      func-mem-desc-line = '600';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Read 2 q15 elements and post increment pointer.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]     in_q15   Pointer to pointer that holds address of input.
@return        q31 value
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'riscv__nnsupportfunctions_8h_1a88800ac5c302003036c78d5ee2f79845';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
__STATIC_FORCEINLINE q31_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_read_q7x4_ia';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'in_q7';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      func-mem-desc-line = '619';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Read 4 q7 from q7 pointer and post increment pointer.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]     in_q7       Pointer to pointer that holds address of input.
@return        q31 value
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'riscv__nnsupportfunctions_8h_1a77c3c6c9885d5a36c1e1874e923f8ecb';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
__STATIC_FORCEINLINE q31_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_read_q15x2';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'in_q15';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      func-mem-desc-line = '637';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Read 2 q15 from q15 pointer.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]     in_q15   pointer to address of input.
@return        q31 value
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'riscv__nnsupportfunctions_8h_1a6e4ef8dc4dc4bfd70dbd1d30653b192c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
__STATIC_FORCEINLINE q31_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_read_q7x4';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'in_q7';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      func-mem-desc-line = '655';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Read 4 q7 values.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]     in_q7       pointer to address of input.
@return        q31 value
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'riscv__nnsupportfunctions_8h_1a8f276a405d7a5aeddae13f8d6ada67c4';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
__STATIC_FORCEINLINE void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_write_q7x4_ia';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q31_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'value';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      func-mem-desc-line = '672';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Write four q7 to q7 pointer and increment pointer afterwards.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]     in       Double pointer to input value
@param[in]     value    Four bytes to copy
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'riscv__nnsupportfunctions_8h_1a3c74a531ce511ba70597adedf25bcb50';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
__STATIC_FORCEINLINE void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_memset_q7';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'val';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'block_size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      func-mem-desc-line = '685';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
memset
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in, out]  dst         Destination pointer
@param[in]       val         Value to set
@param[in]       block_size  Number of bytes to copy.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNBasicMath_1gae785703e6b6be36f6c643de582e1bdbf';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_mult_q15';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pSrcA';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pSrcB';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pDst';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'blockSize';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      func-mem-desc-line = '761';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
q7 vector multiplication with variable output shifts
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       *pSrcA        pointer to the first input vector
@param[in]       *pSrcB        pointer to the second input vector
@param[out]      *pDst         pointer to the output vector
@param[in]       out_shift     amount of right-shift for output
@param[in]       blockSize     number of samples in each vector
@return none.

<b>Scaling and Overflow Behavior:</b>
\par
The function uses saturating arithmetic.
Results outside of the allowable q15 range [0x8000 0x7FFF] will be saturated.

q7 vector multiplication with variable output shifts

@param[in]       *pSrcA        pointer to the first input vector
@param[in]       *pSrcB        pointer to the second input vector
@param[out]      *pDst         pointer to the output vector
@param[in]       out_shift     amount of right-shift for output
@param[in]       blockSize     number of samples in each vector

<b>Scaling and Overflow Behavior:</b>
\par
The function uses saturating arithmetic.
Results outside of the allowable Q15 range [0x8000 0x7FFF] will be saturated.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__NNBasicMath_1ga53b69e8309dbc2e6c3f6f5bc42ea3d88';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_mult_q7';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pSrcA';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pSrcB';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pDst';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'blockSize';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      func-mem-desc-line = '778';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
q7 vector multiplication with variable output shifts
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       *pSrcA        pointer to the first input vector
@param[in]       *pSrcB        pointer to the second input vector
@param[out]      *pDst         pointer to the output vector
@param[in]       out_shift     amount of right-shift for output
@param[in]       blockSize     number of samples in each vector
@return none.

<b>Scaling and Overflow Behavior:</b>
\par
The function uses saturating arithmetic.
Results outside of the allowable q7 range [0x80 0x7F] will be saturated.

q7 vector multiplication with variable output shifts

@param[in]       *pSrcA        pointer to the first input vector
@param[in]       *pSrcB        pointer to the second input vector
@param[out]      *pDst         pointer to the output vector
@param[in]       out_shift     amount of right-shift for output
@param[in]       blockSize     number of samples in each vector

<b>Scaling and Overflow Behavior:</b>
\par
The function uses saturating arithmetic.
Results outside of the allowable Q7 range [0x80 0x7F] will be saturated.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'riscv__nnsupportfunctions_8h_1addb9457e1143da16a1683b8bb0953d1c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_mat_mult_kernel_s8_s16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_a';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_b';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_ch';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'activation_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'activation_max';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'num_col_a';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t *const
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_bias';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'out_0';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      func-mem-desc-line = '802';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Matrix-multiplication function for convolution with per-channel requantization.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       input_a     pointer to operand A
@param[in]       input_b     pointer to operand B, always consists of 2 vectors.
@param[in]       output_ch   number of rows of A
@param[in]       out_shift  pointer to per output channel requantization shift parameter.
@param[in]       out_mult   pointer to per output channel requantization multiplier parameter.
@param[in]       out_offset      output tensor offset.
@param[in]       activation_min   minimum value to clamp the output to. Range : int8
@param[in]       activation_max   maximum value to clamp the output to. Range : int8
@param[in]       num_col_a   number of columns of A
@param[in]       output_bias per output channel bias. Range : int32
@param[in,out]   out_0       pointer to output
@return     The function returns one of the two
             1. The incremented output pointer for a successful operation or
             2. NULL if implementation is not available.



This function does the matrix multiplication of weight matrix for all output channels
           with 2 columns from im2col and produces two elements/output_channel. The outputs are
           clamped in the range provided by activation min and max.
           Supported framework: TensorFlow Lite micro.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Softmax_1gaa5362186d789a3944fa282915f2292c7';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_softmax_common_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'num_rows';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'row_size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'diff_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'int16_output';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
void *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      func-mem-desc-line = '829';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Common softmax function for s8 input and s8 or s16 output.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]  input          Pointer to the input tensor
@param[in]  num_rows       Number of rows in the input tensor
@param[in]  row_size       Number of elements in each input row
@param[in]  mult           Input quantization multiplier
@param[in]  shift          Input quantization shift within the range [0, 31]
@param[in]  diff_min       Minimum difference with max in row. Used to check if
                           the quantized exponential operation can be performed
@param[in]  int16_output   Indicating s8 output if 0 else s16 output
@param[out] output         Pointer to the output tensor

@note Supported framework: TensorFlow Lite micro (bit-accurate)
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'riscv__nnsupportfunctions_8h_1a9f0fe7ad33f62592db8486db9a5b1243';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
__STATIC_FORCEINLINE q31_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_doubling_high_mult';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q31_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'm1';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q31_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'm2';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      func-mem-desc-line = '865';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Saturating doubling high multiply. Result matches
                 NEON instruction VQRDMULH.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       m1        Multiplicand. Range: {NN_Q31_MIN, NN_Q31_MAX}
@param[in]       m2        Multiplier. Range: {NN_Q31_MIN, NN_Q31_MAX}
@return          Result of multiplication.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'riscv__nnsupportfunctions_8h_1a50ae168df9ae2e980e33bfb4ca75b532';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
__STATIC_FORCEINLINE q31_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_doubling_high_mult_no_sat';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q31_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'm1';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q31_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'm2';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      func-mem-desc-line = '903';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Doubling high multiply without saturation. This is intended
                 for requantization where the scale is a positive integer.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       m1        Multiplicand. Range: {NN_Q31_MIN, NN_Q31_MAX}
@param[in]       m2        Multiplier Range: {NN_Q31_MIN, NN_Q31_MAX}
@return          Result of multiplication.
@note            The result of this matches that of neon instruction
                 VQRDMULH for m1 in range {NN_Q31_MIN, NN_Q31_MAX} and m2 in
                 range {NN_Q31_MIN + 1, NN_Q31_MAX}. Saturation occurs when
                 m1 equals m2 equals NN_Q31_MIN and that is not handled by
                 this function.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'riscv__nnsupportfunctions_8h_1aa3220bb59a32ca8406b74027c0b0f5ae';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
__STATIC_FORCEINLINE q31_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_divide_by_power_of_two';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q31_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dividend';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q31_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'exponent';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      func-mem-desc-line = '930';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Rounding divide by power of two.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       dividend - Dividend
@param[in]       exponent - Divisor = power(2, exponent)
                            Range: [0, 31]
@return          Rounded result of division. Midpoint is rounded away from zero.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'riscv__nnsupportfunctions_8h_1a033decfdd0ba2c120155019cadd216f9';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
__STATIC_FORCEINLINE q31_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_requantize';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q31_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'val';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q31_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'multiplier';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q31_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'shift';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      func-mem-desc-line = '962';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Requantize a given value.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       val         Value to be requantized
@param[in]       multiplier  multiplier. Range {NN_Q31_MIN + 1, Q32_MAX}
@param[in]       shift       left or right shift for 'val * multiplier'

@return          Returns (val * multiplier)/(2 ^ shift)
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'riscv__nnsupportfunctions_8h_1a3ffeb0495fa5fab2cdcb02a04050120e';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
__STATIC_FORCEINLINE q31_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_requantize_s64';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q63_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'val';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q31_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'reduced_multiplier';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q31_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'shift';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      func-mem-desc-line = '977';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Requantize a given 64 bit value.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       val                 Value to be requantized in the range {-(1<<47)} to {(1<<47) - 1}
@param[in]       reduced_multiplier  Reduced multiplier in the range {NN_Q31_MIN + 1, Q32_MAX} to {Q16_MIN + 1,
Q16_MAX}
@param[in]       shift               Left or right shift for 'val * multiplier' in the range {-31} to {7}

@return          Returns (val * multiplier)/(2 ^ shift)
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'riscv__nnsupportfunctions_8h_1a1dd78c14d4a5dbc3f083ea4f2a048212';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
__STATIC_FORCEINLINE void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_memcpy_q7';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *__RESTRICT
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *__RESTRICT
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'src';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'block_size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      func-mem-desc-line = '994';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
memcpy
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in, out]  dst         Destination pointer
@param[in]       src         Source pointer.
@param[in]       block_size  Number of bytes to copy.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'riscv__nnsupportfunctions_8h_1af7a5dc0b0c2f4deb4ddac7e2af9ee76e';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
__STATIC_FORCEINLINE int32_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_exp_on_negative_values';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'val';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      func-mem-desc-line = '1002';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'riscv__nnsupportfunctions_8h_1acc8b4843ee8e590e087216c3b6d66b1b';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
__STATIC_FORCEINLINE q31_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_mult_by_power_of_two';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'val';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'exp';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      func-mem-desc-line = '1035';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'riscv__nnsupportfunctions_8h_1a1109145e86b808a73918925f737dee56';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
__STATIC_FORCEINLINE int32_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_one_over_one_plus_x_for_x_in_0_1';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'val';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      func-mem-desc-line = '1044';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'riscv__nnsupportfunctions_8h_1a315b44c577f8f8d5e6e01887228e16d8';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
__STATIC_FORCEINLINE void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_nn_write_q15x2_ia';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dest_q15';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q31_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'src_q31';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
      func-mem-desc-line = '1063';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Write 2 q15 elements and post increment pointer.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]     dest_q15  Pointer to pointer that holds address of destination.
@param[in]     src_q31   Input value to be written.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Include/riscv_nnsupportfunctions.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__nntables_8c';
  file-name = 'riscv_nntables.c';
    var = {
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'riscv__nntables_8c_1ae2ff3f4e7014f535358167150bdd544f';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
const q7_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'sigmoidTable_q7';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= {
    0x40, 0x42, 0x44, 0x46, 0x48, 0x4a, 0x4c, 0x4e, 0x50, 0x52, 0x53, 0x55, 0x57, 0x59, 0x5a, 0x5c, 0x5e, 0x5f, 0x61,
    0x62, 0x63, 0x65, 0x66, 0x67, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0x72, 0x73, 0x74, 0x74,
    0x75, 0x76, 0x76, 0x77, 0x77, 0x78, 0x78, 0x79, 0x79, 0x7a, 0x7a, 0x7a, 0x7b, 0x7b, 0x7b, 0x7c, 0x7c, 0x7c, 0x7c,
    0x7c, 0x7d, 0x7d, 0x7d, 0x7d, 0x7d, 0x7e, 0x7e, 0x7e, 0x7e, 0x7e, 0x7e, 0x7e, 0x7e, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,
    0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,
    0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,
    0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01,
    0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x02,
    0x02, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x03, 0x04, 0x04, 0x04, 0x04, 0x04, 0x05, 0x05, 0x05, 0x06, 0x06,
    0x06, 0x07, 0x07, 0x08, 0x08, 0x09, 0x09, 0x0a, 0x0a, 0x0b, 0x0c, 0x0c, 0x0d, 0x0e, 0x0e, 0x0f, 0x10, 0x11, 0x12,
    0x13, 0x14, 0x15, 0x16, 0x17, 0x19, 0x1a, 0x1b, 0x1d, 0x1e, 0x1f, 0x21, 0x22, 0x24, 0x26, 0x27, 0x29, 0x2b, 0x2d,
    0x2e, 0x30, 0x32, 0x34, 0x36, 0x38, 0x3a, 0x3c, 0x3e,
}
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_nntables.c';
      var-mem-desc-line = '68';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
tables for various activation functions
_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_
This file include the declaration of common tables.
Most of them are used for activation functions

Assumption:
Unified table: input is 3.x format, i.e, range of [-8, 8)
sigmoid(8) = 0.9996646498695336
tanh(8) = 0.9999997749296758
The accuracy here should be good enough

2-stage HL table:

The entire input range is divided into two parts:

Low range table: 0x000x xxxx or 0x111x xxxx
table entry will be the binary number excluding the first
two digits, i.e., 0x0x xxxx or 0x1x xxxx



High range table 0x0010 0000 &ndash; 0x0111 1111
                 0x1000 0000 &ndash; 0x1101 1111

For positive numbers, table entry will be
0x0010 0000 &ndash; 0x0111 1111 minus 0x0010 0000
i.e., 0x0000 0000 - 0x0101 11111

same thing for the negative numbers, table entry will be
0x1000 0000 &ndash; 0x1101 1111 minux 0x0010 0000
i.e., 0x0110 0000 - 0x1011 1111
_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'riscv__nntables_8c_1ab4d7b07c387a3537d4efe21da86115b0';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
const q15_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'sigmoidTable_q15';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= {
    0x4000, 0x4200, 0x43ff, 0x45fc, 0x47f5, 0x49eb, 0x4bdc, 0x4dc8, 0x4fad, 0x518a, 0x5360, 0x552c, 0x56ef, 0x58a8,
    0x5a57, 0x5bfb, 0x5d93, 0x5f20, 0x60a1, 0x6216, 0x637f, 0x64db, 0x662b, 0x676f, 0x68a6, 0x69d2, 0x6af1, 0x6c05,
    0x6d0d, 0x6e09, 0x6efb, 0x6fe2, 0x70be, 0x7190, 0x7258, 0x7316, 0x73cc, 0x7478, 0x751b, 0x75b7, 0x764a, 0x76d6,
    0x775b, 0x77d8, 0x784f, 0x78c0, 0x792a, 0x798f, 0x79ee, 0x7a48, 0x7a9d, 0x7aed, 0x7b39, 0x7b80, 0x7bc4, 0x7c03,
    0x7c3f, 0x7c78, 0x7cad, 0x7ce0, 0x7d0f, 0x7d3c, 0x7d66, 0x7d8d, 0x7db3, 0x7dd6, 0x7df7, 0x7e16, 0x7e33, 0x7e4f,
    0x7e69, 0x7e81, 0x7e98, 0x7eae, 0x7ec2, 0x7ed5, 0x7ee7, 0x7ef8, 0x7f08, 0x7f17, 0x7f25, 0x7f32, 0x7f3e, 0x7f4a,
    0x7f55, 0x7f5f, 0x7f69, 0x7f72, 0x7f7b, 0x7f83, 0x7f8a, 0x7f91, 0x7f98, 0x7f9e, 0x7fa4, 0x7faa, 0x7faf, 0x7fb4,
    0x7fb8, 0x7fbd, 0x7fc1, 0x7fc5, 0x7fc8, 0x7fcc, 0x7fcf, 0x7fd2, 0x7fd5, 0x7fd7, 0x7fda, 0x7fdc, 0x7fde, 0x7fe0,
    0x7fe2, 0x7fe4, 0x7fe6, 0x7fe7, 0x7fe9, 0x7fea, 0x7feb, 0x7fed, 0x7fee, 0x7fef, 0x7ff0, 0x7ff1, 0x7ff2, 0x7ff3,
    0x7ff4, 0x7ff4, 0x000b, 0x000c, 0x000c, 0x000d, 0x000e, 0x000f, 0x0010, 0x0011, 0x0012, 0x0013, 0x0015, 0x0016,
    0x0017, 0x0019, 0x001a, 0x001c, 0x001e, 0x0020, 0x0022, 0x0024, 0x0026, 0x0029, 0x002b, 0x002e, 0x0031, 0x0034,
    0x0038, 0x003b, 0x003f, 0x0043, 0x0048, 0x004c, 0x0051, 0x0056, 0x005c, 0x0062, 0x0068, 0x006f, 0x0076, 0x007d,
    0x0085, 0x008e, 0x0097, 0x00a1, 0x00ab, 0x00b6, 0x00c2, 0x00ce, 0x00db, 0x00e9, 0x00f8, 0x0108, 0x0119, 0x012b,
    0x013e, 0x0152, 0x0168, 0x017f, 0x0197, 0x01b1, 0x01cd, 0x01ea, 0x0209, 0x022a, 0x024d, 0x0273, 0x029a, 0x02c4,
    0x02f1, 0x0320, 0x0353, 0x0388, 0x03c1, 0x03fd, 0x043c, 0x0480, 0x04c7, 0x0513, 0x0563, 0x05b8, 0x0612, 0x0671,
    0x06d6, 0x0740, 0x07b1, 0x0828, 0x08a5, 0x092a, 0x09b6, 0x0a49, 0x0ae5, 0x0b88, 0x0c34, 0x0cea, 0x0da8, 0x0e70,
    0x0f42, 0x101e, 0x1105, 0x11f7, 0x12f3, 0x13fb, 0x150f, 0x162e, 0x175a, 0x1891, 0x19d5, 0x1b25, 0x1c81, 0x1dea,
    0x1f5f, 0x20e0, 0x226d, 0x2405, 0x25a9, 0x2758, 0x2911, 0x2ad4, 0x2ca0, 0x2e76, 0x3053, 0x3238, 0x3424, 0x3615,
    0x380b, 0x3a04, 0x3c01, 0x3e00,
}
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_nntables.c';
      var-mem-desc-line = '85';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
tables for various activation functions
_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'riscv__nntables_8c_1a69dc528cb377690d5b37accfdfd226b1';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
const q15_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'sigmoidLTable_q15';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= {
    0x4000, 0x4100, 0x4200, 0x42ff, 0x43ff, 0x44fd, 0x45fc, 0x46f9, 0x47f5, 0x48f1, 0x49eb, 0x4ae5, 0x4bdc,
    0x4cd3, 0x4dc8, 0x4ebb, 0x4fad, 0x509c, 0x518a, 0x5276, 0x5360, 0x5447, 0x552c, 0x560f, 0x56ef, 0x57cd,
    0x58a8, 0x5981, 0x5a57, 0x5b2a, 0x5bfb, 0x5cc9, 0x5d93, 0x5e5b, 0x5f20, 0x5fe2, 0x60a1, 0x615d, 0x6216,
    0x62cc, 0x637f, 0x642e, 0x64db, 0x6584, 0x662b, 0x66ce, 0x676f, 0x680c, 0x68a6, 0x693d, 0x69d2, 0x6a63,
    0x6af1, 0x6b7c, 0x6c05, 0x6c8a, 0x6d0d, 0x6d8d, 0x6e09, 0x6e84, 0x6efb, 0x6f70, 0x6fe2, 0x7051, 0x0f42,
    0x0faf, 0x101e, 0x1090, 0x1105, 0x117c, 0x11f7, 0x1273, 0x12f3, 0x1376, 0x13fb, 0x1484, 0x150f, 0x159d,
    0x162e, 0x16c3, 0x175a, 0x17f4, 0x1891, 0x1932, 0x19d5, 0x1a7c, 0x1b25, 0x1bd2, 0x1c81, 0x1d34, 0x1dea,
    0x1ea3, 0x1f5f, 0x201e, 0x20e0, 0x21a5, 0x226d, 0x2337, 0x2405, 0x24d6, 0x25a9, 0x267f, 0x2758, 0x2833,
    0x2911, 0x29f1, 0x2ad4, 0x2bb9, 0x2ca0, 0x2d8a, 0x2e76, 0x2f64, 0x3053, 0x3145, 0x3238, 0x332d, 0x3424,
    0x351b, 0x3615, 0x370f, 0x380b, 0x3907, 0x3a04, 0x3b03, 0x3c01, 0x3d01, 0x3e00, 0x3f00,
}
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_nntables.c';
      var-mem-desc-line = '107';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'riscv__nntables_8c_1a107a16eaa36f4392fa3ed3792ad6c2cb';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
const q15_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'sigmoidHTable_q15';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= {
    0x70be, 0x7190, 0x7258, 0x7316, 0x73cc, 0x7478, 0x751b, 0x75b7, 0x764a, 0x76d6, 0x775b, 0x77d8, 0x784f, 0x78c0,
    0x792a, 0x798f, 0x79ee, 0x7a48, 0x7a9d, 0x7aed, 0x7b39, 0x7b80, 0x7bc4, 0x7c03, 0x7c3f, 0x7c78, 0x7cad, 0x7ce0,
    0x7d0f, 0x7d3c, 0x7d66, 0x7d8d, 0x7db3, 0x7dd6, 0x7df7, 0x7e16, 0x7e33, 0x7e4f, 0x7e69, 0x7e81, 0x7e98, 0x7eae,
    0x7ec2, 0x7ed5, 0x7ee7, 0x7ef8, 0x7f08, 0x7f17, 0x7f25, 0x7f32, 0x7f3e, 0x7f4a, 0x7f55, 0x7f5f, 0x7f69, 0x7f72,
    0x7f7b, 0x7f83, 0x7f8a, 0x7f91, 0x7f98, 0x7f9e, 0x7fa4, 0x7faa, 0x7faf, 0x7fb4, 0x7fb8, 0x7fbd, 0x7fc1, 0x7fc5,
    0x7fc8, 0x7fcc, 0x7fcf, 0x7fd2, 0x7fd5, 0x7fd7, 0x7fda, 0x7fdc, 0x7fde, 0x7fe0, 0x7fe2, 0x7fe4, 0x7fe6, 0x7fe7,
    0x7fe9, 0x7fea, 0x7feb, 0x7fed, 0x7fee, 0x7fef, 0x7ff0, 0x7ff1, 0x7ff2, 0x7ff3, 0x7ff4, 0x7ff4, 0x000b, 0x000c,
    0x000c, 0x000d, 0x000e, 0x000f, 0x0010, 0x0011, 0x0012, 0x0013, 0x0015, 0x0016, 0x0017, 0x0019, 0x001a, 0x001c,
    0x001e, 0x0020, 0x0022, 0x0024, 0x0026, 0x0029, 0x002b, 0x002e, 0x0031, 0x0034, 0x0038, 0x003b, 0x003f, 0x0043,
    0x0048, 0x004c, 0x0051, 0x0056, 0x005c, 0x0062, 0x0068, 0x006f, 0x0076, 0x007d, 0x0085, 0x008e, 0x0097, 0x00a1,
    0x00ab, 0x00b6, 0x00c2, 0x00ce, 0x00db, 0x00e9, 0x00f8, 0x0108, 0x0119, 0x012b, 0x013e, 0x0152, 0x0168, 0x017f,
    0x0197, 0x01b1, 0x01cd, 0x01ea, 0x0209, 0x022a, 0x024d, 0x0273, 0x029a, 0x02c4, 0x02f1, 0x0320, 0x0353, 0x0388,
    0x03c1, 0x03fd, 0x043c, 0x0480, 0x04c7, 0x0513, 0x0563, 0x05b8, 0x0612, 0x0671, 0x06d6, 0x0740, 0x07b1, 0x0828,
    0x08a5, 0x092a, 0x09b6, 0x0a49, 0x0ae5, 0x0b88, 0x0c34, 0x0cea, 0x0da8, 0x0e70,
}
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_nntables.c';
      var-mem-desc-line = '120';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
2-way tables for various activation functions
_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_
2-way table, H table for value larger than 1/4
L table for value smaller than 1/4, H table for remaining
We have this only for the q15_t version. It does not make
sense to have it for q7_t type
_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'riscv__nntables_8c_1a4f854bdf13f630ec21b3ad074491e32f';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
const q7_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'tanhTable_q7';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= {
    0x00, 0x08, 0x10, 0x18, 0x1f, 0x27, 0x2e, 0x35, 0x3b, 0x41, 0x47, 0x4c, 0x51, 0x56, 0x5a, 0x5e, 0x61, 0x65, 0x68,
    0x6a, 0x6d, 0x6f, 0x71, 0x72, 0x74, 0x75, 0x76, 0x78, 0x78, 0x79, 0x7a, 0x7b, 0x7b, 0x7c, 0x7c, 0x7d, 0x7d, 0x7e,
    0x7e, 0x7e, 0x7e, 0x7e, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,
    0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,
    0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,
    0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,
    0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x80, 0x80, 0x80, 0x80, 0x80,
    0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
    0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
    0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
    0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x81, 0x81,
    0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x82, 0x82, 0x82, 0x82, 0x82, 0x83, 0x83, 0x84, 0x84, 0x85, 0x85, 0x86, 0x87,
    0x88, 0x88, 0x8a, 0x8b, 0x8c, 0x8e, 0x8f, 0x91, 0x93, 0x96, 0x98, 0x9b, 0x9f, 0xa2, 0xa6, 0xaa, 0xaf, 0xb4, 0xb9,
    0xbf, 0xc5, 0xcb, 0xd2, 0xd9, 0xe1, 0xe8, 0xf0, 0xf8,
}
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_nntables.c';
      var-mem-desc-line = '137';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'riscv__nntables_8c_1a6faad2fec173b2702fd0f219a83ca320';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
const q15_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'tanhTable_q15';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= {
    0x0000, 0x07fd, 0x0feb, 0x17b9, 0x1f59, 0x26bf, 0x2ddf, 0x34ae, 0x3b27, 0x4142, 0x46fd, 0x4c56, 0x514d, 0x55e2,
    0x5a1a, 0x5df6, 0x617c, 0x64b0, 0x6797, 0x6a37, 0x6c95, 0x6eb5, 0x709e, 0x7254, 0x73dc, 0x753a, 0x7672, 0x7788,
    0x787f, 0x795b, 0x7a1e, 0x7acb, 0x7b65, 0x7bee, 0x7c66, 0x7cd1, 0x7d30, 0x7d84, 0x7dce, 0x7e0f, 0x7e49, 0x7e7d,
    0x7eaa, 0x7ed2, 0x7ef5, 0x7f14, 0x7f30, 0x7f48, 0x7f5e, 0x7f71, 0x7f82, 0x7f91, 0x7f9e, 0x7fa9, 0x7fb3, 0x7fbc,
    0x7fc4, 0x7fcb, 0x7fd1, 0x7fd7, 0x7fdc, 0x7fe0, 0x7fe4, 0x7fe7, 0x7fea, 0x7fed, 0x7fef, 0x7ff1, 0x7ff3, 0x7ff4,
    0x7ff6, 0x7ff7, 0x7ff8, 0x7ff9, 0x7ffa, 0x7ffa, 0x7ffb, 0x7ffc, 0x7ffc, 0x7ffd, 0x7ffd, 0x7ffd, 0x7ffe, 0x7ffe,
    0x7ffe, 0x7ffe, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff,
    0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff,
    0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff,
    0x7fff, 0x7fff, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000,
    0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000,
    0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8001, 0x8001, 0x8001, 0x8001, 0x8001, 0x8001,
    0x8001, 0x8001, 0x8001, 0x8002, 0x8002, 0x8002, 0x8002, 0x8003, 0x8003, 0x8003, 0x8004, 0x8004, 0x8005, 0x8006,
    0x8006, 0x8007, 0x8008, 0x8009, 0x800a, 0x800c, 0x800d, 0x800f, 0x8011, 0x8013, 0x8016, 0x8019, 0x801c, 0x8020,
    0x8024, 0x8029, 0x802f, 0x8035, 0x803c, 0x8044, 0x804d, 0x8057, 0x8062, 0x806f, 0x807e, 0x808f, 0x80a2, 0x80b8,
    0x80d0, 0x80ec, 0x810b, 0x812e, 0x8156, 0x8183, 0x81b7, 0x81f1, 0x8232, 0x827c, 0x82d0, 0x832f, 0x839a, 0x8412,
    0x849b, 0x8535, 0x85e2, 0x86a5, 0x8781, 0x8878, 0x898e, 0x8ac6, 0x8c24, 0x8dac, 0x8f62, 0x914b, 0x936b, 0x95c9,
    0x9869, 0x9b50, 0x9e84, 0xa20a, 0xa5e6, 0xaa1e, 0xaeb3, 0xb3aa, 0xb903, 0xbebe, 0xc4d9, 0xcb52, 0xd221, 0xd941,
    0xe0a7, 0xe847, 0xf015, 0xf803,
}
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_nntables.c';
      var-mem-desc-line = '154';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'riscv__nntables_8c_1a7cb5ad2fff7e241d09024332488a706e';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
const q15_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'tanhLTable_q15';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= {
    0x0000, 0x0400, 0x07fd, 0x0bf7, 0x0feb, 0x13d7, 0x17b9, 0x1b90, 0x1f59, 0x2314, 0x26bf, 0x2a58, 0x2ddf,
    0x3151, 0x34ae, 0x37f6, 0x3b27, 0x3e40, 0x4142, 0x442c, 0x46fd, 0x49b6, 0x4c56, 0x4edd, 0x514d, 0x53a3,
    0x55e2, 0x580a, 0x5a1a, 0x5c13, 0x5df6, 0x5fc4, 0x617c, 0x6320, 0x64b0, 0x662d, 0x6797, 0x68f0, 0x6a37,
    0x6b6e, 0x6c95, 0x6dac, 0x6eb5, 0x6fb0, 0x709e, 0x717f, 0x7254, 0x731e, 0x73dc, 0x7490, 0x753a, 0x75da,
    0x7672, 0x7701, 0x7788, 0x7807, 0x787f, 0x78f0, 0x795b, 0x79bf, 0x7a1e, 0x7a77, 0x7acb, 0x7b1b, 0x849b,
    0x84e5, 0x8535, 0x8589, 0x85e2, 0x8641, 0x86a5, 0x8710, 0x8781, 0x87f9, 0x8878, 0x88ff, 0x898e, 0x8a26,
    0x8ac6, 0x8b70, 0x8c24, 0x8ce2, 0x8dac, 0x8e81, 0x8f62, 0x9050, 0x914b, 0x9254, 0x936b, 0x9492, 0x95c9,
    0x9710, 0x9869, 0x99d3, 0x9b50, 0x9ce0, 0x9e84, 0xa03c, 0xa20a, 0xa3ed, 0xa5e6, 0xa7f6, 0xaa1e, 0xac5d,
    0xaeb3, 0xb123, 0xb3aa, 0xb64a, 0xb903, 0xbbd4, 0xbebe, 0xc1c0, 0xc4d9, 0xc80a, 0xcb52, 0xceaf, 0xd221,
    0xd5a8, 0xd941, 0xdcec, 0xe0a7, 0xe470, 0xe847, 0xec29, 0xf015, 0xf409, 0xf803, 0xfc00,
}
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_nntables.c';
      var-mem-desc-line = '176';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'riscv__nntables_8c_1a4d093f7b0dc798d4898ff4fd125b21a6';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
const q15_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'tanhHTable_q15';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= {
    0x7b65, 0x7bee, 0x7c66, 0x7cd1, 0x7d30, 0x7d84, 0x7dce, 0x7e0f, 0x7e49, 0x7e7d, 0x7eaa, 0x7ed2, 0x7ef5, 0x7f14,
    0x7f30, 0x7f48, 0x7f5e, 0x7f71, 0x7f82, 0x7f91, 0x7f9e, 0x7fa9, 0x7fb3, 0x7fbc, 0x7fc4, 0x7fcb, 0x7fd1, 0x7fd7,
    0x7fdc, 0x7fe0, 0x7fe4, 0x7fe7, 0x7fea, 0x7fed, 0x7fef, 0x7ff1, 0x7ff3, 0x7ff4, 0x7ff6, 0x7ff7, 0x7ff8, 0x7ff9,
    0x7ffa, 0x7ffa, 0x7ffb, 0x7ffc, 0x7ffc, 0x7ffd, 0x7ffd, 0x7ffd, 0x7ffe, 0x7ffe, 0x7ffe, 0x7ffe, 0x7fff, 0x7fff,
    0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff,
    0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff,
    0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x8000, 0x8000,
    0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000,
    0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000,
    0x8000, 0x8000, 0x8000, 0x8000, 0x8001, 0x8001, 0x8001, 0x8001, 0x8001, 0x8001, 0x8001, 0x8001, 0x8001, 0x8002,
    0x8002, 0x8002, 0x8002, 0x8003, 0x8003, 0x8003, 0x8004, 0x8004, 0x8005, 0x8006, 0x8006, 0x8007, 0x8008, 0x8009,
    0x800a, 0x800c, 0x800d, 0x800f, 0x8011, 0x8013, 0x8016, 0x8019, 0x801c, 0x8020, 0x8024, 0x8029, 0x802f, 0x8035,
    0x803c, 0x8044, 0x804d, 0x8057, 0x8062, 0x806f, 0x807e, 0x808f, 0x80a2, 0x80b8, 0x80d0, 0x80ec, 0x810b, 0x812e,
    0x8156, 0x8183, 0x81b7, 0x81f1, 0x8232, 0x827c, 0x82d0, 0x832f, 0x839a, 0x8412,
}
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_nntables.c';
      var-mem-desc-line = '189';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_nntables.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__pool__q7__HWC_8c';
  file-name = 'riscv_pool_q7_HWC.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Pooling_1gad7cc16cadfeb14ccfe21a43f0a0a98ee';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_maxpool_q7_HWC';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_kernel';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'padding';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferA';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_out';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/PoolingFunctions/riscv_pool_q7_HWC.c';
      func-mem-desc-line = '215';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Q7 max pooling function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in, out]  Im_in       pointer to input tensor
@param[in]       dim_im_in   input tensor dimention
@param[in]       ch_im_in    number of input tensor channels
@param[in]       dim_kernel  filter kernel size
@param[in]       padding     padding sizes
@param[in]       stride      convolution stride
@param[in]       dim_im_out  output tensor dimension
@param[in,out]   bufferA     Not used
@param[in,out]   Im_out      pointer to output tensor





The pooling function is implemented as split x-pooling then
y-pooling.

This pooling function is input-destructive. Input data is undefined
after calling this function.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Pooling_1ga667c1b6d57466cb5ce7e4c41cb79f7d7';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_avepool_q7_HWC';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ch_im_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_kernel';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'padding';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stride';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_im_out';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bufferA';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'Im_out';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/PoolingFunctions/riscv_pool_q7_HWC.c';
      func-mem-desc-line = '371';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Q7 average pooling function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in,out]   Im_in       pointer to input tensor
@param[in]       dim_im_in   input tensor dimention
@param[in]       ch_im_in    number of input tensor channels
@param[in]       dim_kernel  filter kernel size
@param[in]       padding     padding sizes
@param[in]       stride      convolution stride
@param[in]       dim_im_out  output tensor dimension
@param[in,out]   bufferA     pointer to buffer space for input
@param[in,out]   Im_out      pointer to output tensor





<b>Buffer size:</b>

bufferA size:  2*dim_im_out*ch_im_in

The pooling function is implemented as split x-pooling then
y-pooling.

This pooling function is input-destructive. Input data is undefined
after calling this function.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/PoolingFunctions/riscv_pool_q7_HWC.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__q7__to__q15__no__shift_8c';
  file-name = 'riscv_q7_to_q15_no_shift.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__nndata__convert_1gaaf28207f289291c26b3fb4dac25c80bb';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_q7_to_q15_no_shift';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pSrc';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pDst';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'blockSize';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_q7_to_q15_no_shift.c';
      func-mem-desc-line = '59';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Converts the elements of the Q7 vector to Q15 vector without left-shift.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Converts the elements of the q7 vector to q15 vector without left-shift.

@param[in]       *pSrc points to the Q7 input vector
@param[out]      *pDst points to the Q15 output vector
@param[in]       blockSize length of the input vector

\par Description:

The equation used for the conversion process is:

<pre>
        pDst[n] = (q15_t) pSrc[n];   0 <= n < blockSize.
</pre>
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_q7_to_q15_no_shift.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__q7__to__q15__reordered__no__shift_8c';
  file-name = 'riscv_q7_to_q15_reordered_no_shift.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__nndata__convert_1ga4424909bb2c474ae80731cc6fc688421';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_q7_to_q15_reordered_no_shift';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pSrc';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pDst';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'blockSize';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_q7_to_q15_reordered_no_shift.c';
      func-mem-desc-line = '78';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Converts the elements of the Q7 vector to reordered Q15 vector without left-shift.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Converts the elements of the q7 vector to reordered q15 vector without left-shift.

@param[in]       *pSrc points to the Q7 input vector
@param[out]      *pDst points to the Q15 output vector
@param[in]       blockSize length of the input vector





This function does the q7 to q15 expansion with re-ordering

<pre>
                         |   A1   |   A2   |   A3   |   A4   |

                          0      7 8     15 16    23 24    31
</pre>

is converted into:

<pre>
 |       A1       |       A3       |   and  |       A2       |       A4       |

  0             15 16            31          0             15 16            31
</pre>


This looks strange but is natural considering how sign-extension is done at
assembly level.

The expansion of other other oprand will follow the same rule so that the end
results are the same.

The tail (i.e., last (N % 4) elements) will still be in original order.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_q7_to_q15_reordered_no_shift.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__q7__to__q15__reordered__with__offset_8c';
  file-name = 'riscv_q7_to_q15_reordered_with_offset.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__nndata__convert_1ga4a965dd0234b45a0304588d2469906b8';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_q7_to_q15_reordered_with_offset';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'src';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'block_size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'offset';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_q7_to_q15_reordered_with_offset.c';
      func-mem-desc-line = '51';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Converts the elements of the Q7 vector to a reordered Q15 vector with an added offset.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Converts the elements of the q7 vector to reordered q15 vector with an added offset.

@note  Refer header file for details.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_q7_to_q15_reordered_with_offset.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__q7__to__q15__with__offset_8c';
  file-name = 'riscv_q7_to_q15_with_offset.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__nndata__convert_1gae18e005b31738822b1e58b6de811b3e8';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_q7_to_q15_with_offset';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'src';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'block_size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'offset';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_q7_to_q15_with_offset.c';
      func-mem-desc-line = '43';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Converts the elements from a q7 vector to a q15 vector with an added offset.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]    src        pointer to the q7 input vector
@param[out]   dst        pointer to the q15 output vector
@param[in]    block_size length of the input vector
@param[in]    offset     q7 offset to be added to each input vector element.

\par Description:

The equation used for the conversion process is:

<pre>
 dst[n] = (q15_t) src[n] + offset;   0 <= n < block_size.
</pre>
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_q7_to_q15_with_offset.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__q7__to__q7__no__shift_8c';
  file-name = 'riscv_q7_to_q7_no_shift.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__nndata__convert_1ga3caedd7ab46f10c71af9d3d7876215df';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_q7_to_q7_no_shift';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pSrc';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pDst';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'blockSize';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_q7_to_q7_no_shift.c';
      func-mem-desc-line = '60';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Converts the elements of the Q7 vector to Q7 vector without left-shift.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       *pSrc points to the Q7 input vector
@param[out]      *pDst points to the Q7 output vector
@param[in]       blockSize length of the input vector
@return none.

\par Description:

The equation used for the conversion process is:

<pre>
        pDst[n] = (q15_t) pSrc[n];   0 <= n < blockSize.
</pre>
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_q7_to_q7_no_shift.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__q7__to__q7__reordered__no__shift_8c';
  file-name = 'riscv_q7_to_q7_reordered_no_shift.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__nndata__convert_1gae41bc04256cf974ec36e82c521b43d02';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_q7_to_q7_reordered_no_shift';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pSrc';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pDst';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'blockSize';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_q7_to_q7_reordered_no_shift.c';
      func-mem-desc-line = '79';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Converts the elements of the Q7 vector to reordered Q7 vector without left-shift.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       *pSrc points to the Q7 input vector
@param[out]      *pDst points to the Q7 output vector
@param[in]       blockSize length of the input vector
@return none.





This function does the q7 to q7 expansion with re-ordering

<pre>
                         |   A1   |   A2   |   A3   |   A4   |

                          0      7 8     15 16    23 24    31
</pre>

is converted into:

<pre>
 |       A1       |       A3       |   and  |       A2       |       A4       |

  0             15 16            31          0             15 16            31
</pre>


This looks strange but is natural considering how sign-extension is done at
assembly level.

The expansion of other other oprand will follow the same rule so that the end
results are the same.

The tail (i.e., last (N % 4) elements) will still be in original order.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/NNSupportFunctions/riscv_q7_to_q7_reordered_no_shift.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__relu6__s8_8c';
  file-name = 'riscv_relu6_s8.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Acti_1ga4ae55579cc7a7ae6b209c2ad846908fa';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_relu6_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ActivationFunctions/riscv_relu6_s8.c';
      func-mem-desc-line = '51';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
s8 ReLU6 function
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in,out]   data        pointer to input
@param[in]       size        number of elements
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ActivationFunctions/riscv_relu6_s8.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__relu__q15_8c';
  file-name = 'riscv_relu_q15.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Acti_1ga1eeec0b43b5de74bc3e0912d426b1ad5';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_relu_q15';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ActivationFunctions/riscv_relu_q15.c';
      func-mem-desc-line = '55';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Q15 RELU function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in,out]   data        pointer to input
@param[in]       size        number of elements





Optimized relu with QSUB instructions.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ActivationFunctions/riscv_relu_q15.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__relu__q7_8c';
  file-name = 'riscv_relu_q7.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Acti_1gadfa641ea64baa82d43247a787fbf9396';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_relu_q7';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ActivationFunctions/riscv_relu_q7.c';
      func-mem-desc-line = '55';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Q7 RELU function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in,out]   data        pointer to input
@param[in]       size        number of elements





Optimized relu with QSUB instructions.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ActivationFunctions/riscv_relu_q7.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__reshape__s8_8c';
  file-name = 'riscv_reshape_s8.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Reshape_1gad02fc1084c9fb41e448b9497c49d6a44';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_reshape_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'total_size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ReshapeFunctions/riscv_reshape_s8.c';
      func-mem-desc-line = '51';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Reshape a s8 vector into another with different shape.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Basic s8 reshape function.

Refer header file for details.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/ReshapeFunctions/riscv_reshape_s8.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__softmax__q15_8c';
  file-name = 'riscv_softmax_q15.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Softmax_1gaa9d0de605290176e23463cbaeb84a9ce';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_softmax_q15';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'vec_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_vec';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'p_out';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/SoftmaxFunctions/riscv_softmax_q15.c';
      func-mem-desc-line = '62';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Q15 softmax function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       vec_in      pointer to input vector
@param[in]       dim_vec     input vector dimention
@param[out]      p_out       pointer to output vector





 Here, instead of typical e based softmax, we use
 2-based softmax, i.e.,:

 y_i = 2^(x_i) / sum(2^x_j)

 The relative output will be different here.
 But mathematically, the gradient will be the same
 with a log(2) scaling factor.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/SoftmaxFunctions/riscv_softmax_q15.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__softmax__q7_8c';
  file-name = 'riscv_softmax_q7.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Softmax_1ga4c7867bb7ac62d4581deda5730dce99b';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_softmax_q7';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'vec_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_vec';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'p_out';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/SoftmaxFunctions/riscv_softmax_q7.c';
      func-mem-desc-line = '63';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Q7 softmax function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       vec_in      pointer to input vector
@param[in]       dim_vec     input vector dimention
@param[out]      p_out       pointer to output vector





 Here, instead of typical natural logarithm e based softmax, we use
 2-based softmax here, i.e.,:

 y_i = 2^(x_i) / sum(2^x_j)

 The relative output will be different here.
 But mathematically, the gradient will be the same
 with a log(2) scaling factor.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/SoftmaxFunctions/riscv_softmax_q7.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__softmax__s16_8c';
  file-name = 'riscv_softmax_s16.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Softmax_1ga8669f22315993fcfc455207a81ea4d8c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_softmax_s16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int16_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'num_rows';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'row_size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_softmax_lut_s16 *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'softmax_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int16_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/SoftmaxFunctions/riscv_softmax_s16.c';
      func-mem-desc-line = '39';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
S16 softmax function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]  input           Pointer to the input tensor
@param[in]  num_rows        Number of rows in the input tensor
@param[in]  row_size        Number of elements in each input row
@param[in]  mult            Input quantization multiplier
@param[in]  shift           Input quantization shift within the range [0, 31]
@param[in]  softmax_params  Softmax s16 layer parameters with two pointers to LUTs speficied below.
                            For indexing the high 9 bits are used and 7 remaining for interpolation.
                            That means 512 entries for the 9-bit indexing and 1 extra for interpolation, i.e. 513
                            values for each LUT.
                            - Lookup table for exp(x), where x uniform distributed between [-10.0 , 0.0]
                            - Lookup table for 1 / (1 + x), where x uniform distributed between [0.0 , 1.0]
@param[out] output          Pointer to the output tensor
@return                        The function returns
                                   <code>RISCV_MATH_ARGUMENT_ERROR</code> if LUTs are NULL
                                   <code>RISCV_MATH_SUCCESS</code> - Successful operation

@note Supported framework: TensorFlow Lite micro (bit-accurate)
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/SoftmaxFunctions/riscv_softmax_s16.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__softmax__s8_8c';
  file-name = 'riscv_softmax_s8.c';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__softmax__s8_8c_1a401e2dfaf6a8f0ef34f15295e026fd79';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'ACCUM_BITS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
12
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/SoftmaxFunctions/riscv_softmax_s8.c';
      define-mem-desc-line = '35';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Softmax_1gac9dd5c3c22158eec0237b03d50a54465';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_softmax_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'num_rows';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'row_size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'diff_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/SoftmaxFunctions/riscv_softmax_s8.c';
      func-mem-desc-line = '47';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
S8 softmax function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]  input     Pointer to the input tensor
@param[in]  num_rows  Number of rows in the input tensor
@param[in]  row_size  Number of elements in each input row
@param[in]  mult      Input quantization multiplier
@param[in]  shift     Input quantization shift within the range [0, 31]
@param[in]  diff_min  Minimum difference with max in row. Used to check if
                      the quantized exponential operation can be performed
@param[out] output    Pointer to the output tensor

@note Supported framework: TensorFlow Lite micro (bit-accurate)
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/SoftmaxFunctions/riscv_softmax_s8.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__softmax__s8__s16_8c';
  file-name = 'riscv_softmax_s8_s16.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Softmax_1ga905ee1f12d8b77f94d20e53189843b8f';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_softmax_s8_s16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'num_rows';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'row_size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'diff_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int16_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/SoftmaxFunctions/riscv_softmax_s8_s16.c';
      func-mem-desc-line = '43';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
S8 to s16 softmax function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]  input     Pointer to the input tensor
@param[in]  num_rows  Number of rows in the input tensor
@param[in]  row_size  Number of elements in each input row
@param[in]  mult      Input quantization multiplier
@param[in]  shift     Input quantization shift within the range [0, 31]
@param[in]  diff_min  Minimum difference with max in row. Used to check if
                      the quantized exponential operation can be performed
@param[out] output    Pointer to the output tensor

@note Supported framework: TensorFlow Lite micro (bit-accurate)
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/SoftmaxFunctions/riscv_softmax_s8_s16.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__softmax__u8_8c';
  file-name = 'riscv_softmax_u8.c';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'riscv__softmax__u8_8c_1a401e2dfaf6a8f0ef34f15295e026fd79';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'ACCUM_BITS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
12
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/SoftmaxFunctions/riscv_softmax_u8.c';
      define-mem-desc-line = '35';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Softmax_1ga11a1ba75201c791d528d559432c484e3';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_softmax_u8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'num_rows';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'row_size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'mult';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'shift';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'diff_min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/SoftmaxFunctions/riscv_softmax_u8.c';
      func-mem-desc-line = '45';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
U8 softmax function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]  input     Pointer to the input tensor
@param[in]  num_rows  Number of rows in the input tensor
@param[in]  row_size  Number of elements in each input row
@param[in]  mult      Input quantization multiplier
@param[in]  shift     Input quantization shift within the range [0, 31]
@param[in]  diff_min  Minimum difference with max in row. Used to check if
                      the quantized exponential operation can be performed
@param[out] output    Pointer to the output tensor

@note Supported framework: TensorFlow Lite micro (bit-accurate)
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/SoftmaxFunctions/riscv_softmax_u8.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__softmax__with__batch__q7_8c';
  file-name = 'riscv_softmax_with_batch_q7.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__Softmax_1ga898a4b60ebeb23a8faa1cd9f4b867fbe';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_softmax_with_batch_q7';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'vec_in';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'nb_batches';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dim_vec';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'p_out';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/SoftmaxFunctions/riscv_softmax_with_batch_q7.c';
      func-mem-desc-line = '63';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Q7 softmax function with batch parameter.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]       vec_in      pointer to input vector
@param[in]       nb_batches  number of batches
@param[in]       dim_vec     input vector dimention
@param[out]      p_out       pointer to output vector





 Here, instead of typical natural logarithm e based softmax, we use
 2-based softmax here, i.e.,:

 y_i = 2^(x_i) / sum(2^x_j)

 The relative output will be different here.
 But mathematically, the gradient will be the same
 with a log(2) scaling factor.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/SoftmaxFunctions/riscv_softmax_with_batch_q7.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__svdf__s8_8c';
  file-name = 'riscv_svdf_s8.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__SVDF_1gacc604da8dd1a04abc111922a0be61df8';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_svdf_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_svdf_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'svdf_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_per_tensor_quant_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_quant_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_per_tensor_quant_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_quant_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'state_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'state_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'weights_feature_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'weights_feature_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'weights_time_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'weights_time_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q31_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_data';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/SVDFunctions/riscv_svdf_s8.c';
      func-mem-desc-line = '51';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
s8 SVDF function with 8 bit state tensor and 8 bit time weights
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]   input_ctx Temporary scratch buffer
@param[in]   output_ctx Temporary output scratch buffer
@param[in]   svdf_params SVDF Parameters
             Range of svdf_params->input_offset  : [-128, 127]
             Range of svdf_params->output_offset  : [-128, 127]
@param[in]   input_quant_params Input quantization parameters
@param[in]   output_quant_params Output quantization parameters
@param[in]   input_dims Input tensor dimensions
@param[in]   input_data Pointer to input tensor
@param[in]   state_dims State tensor dimensions
@param[in]   state_data Pointer to state tensor
@param[in]   weights_feature_dims Weights (feature) tensor dimensions
@param[in]   weights_feature_data Pointer to the weights (feature) tensor
@param[in]   weights_time_dims Weights (time) tensor dimensions
@param[in]   weights_time_data Pointer to the weights (time) tensor
@param[in]   bias_dims Bias tensor dimensions
@param[in]   bias_data Pointer to bias tensor
@param[in]   output_dims Output tensor dimensions
@param[out]  output_data Pointer to the output tensor

@return     The function returns <code>RISCV_MATH_SUCCESS</code>




   1. Supported framework: TensorFlow Lite micro
   2. q7 is used as data type eventhough it is s8 data. It is done so to be consistent with existing APIs.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/SVDFunctions/riscv_svdf_s8.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'riscv__svdf__state__s16__s8_8c';
  file-name = 'riscv_svdf_state_s16_s8.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__SVDF_1ga99cd86735b9e2c840951d2d0d5de5251';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
riscv_status
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'riscv_svdf_state_s16_s8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_context *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_ctx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_svdf_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'svdf_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_per_tensor_quant_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_quant_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_per_tensor_quant_params *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_quant_params';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'input_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'state_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'state_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'weights_feature_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'weights_feature_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'weights_time_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q15_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'weights_time_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const q31_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'bias_data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nmsis_nn_dims *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_dims';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
q7_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'output_data';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/SVDFunctions/riscv_svdf_state_s16_s8.c';
      func-mem-desc-line = '50';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
s8 SVDF function with 16 bit state tensor and 16 bit time weights
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param[in]   input_ctx Temporary scratch buffer
@param[in]   output_ctx Temporary output scratch buffer
@param[in]   svdf_params SVDF Parameters
             Range of svdf_params->input_offset  : [-128, 127]
             Range of svdf_params->output_offset  : [-128, 127]
@param[in]   input_quant_params Input quantization parameters
@param[in]   output_quant_params Output quantization parameters
@param[in]   input_dims Input tensor dimensions
@param[in]   input_data Pointer to input tensor
@param[in]   state_dims State tensor dimensions
@param[in]   state_data Pointer to state tensor
@param[in]   weights_feature_dims Weights (feature) tensor dimensions
@param[in]   weights_feature_data Pointer to the weights (feature) tensor
@param[in]   weights_time_dims Weights (time) tensor dimensions
@param[in]   weights_time_data Pointer to the weights (time) tensor
@param[in]   bias_dims Bias tensor dimensions
@param[in]   bias_data Pointer to bias tensor
@param[in]   output_dims Output tensor dimensions
@param[out]  output_data Pointer to the output tensor

@return     The function returns <code>RISCV_MATH_SUCCESS</code>




   1. Supported framework: TensorFlow Lite micro
   2. q7 is used as data type eventhough it is s8 data. It is done so to be consistent with existing APIs.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Source/SVDFunctions/riscv_svdf_state_s16_s8.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'save__img_8py';
  file-name = 'save_img.py';
    var = {
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'namespacesave__img_1a901e85423f94cafabb42d8617c5f151e';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-name = 'files';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
=  os.listdir(sys.argv[1])
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/images/save_img.py';
      var-mem-desc-line = '7';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'namespacesave__img_1ad69a026f2dc8f20c5344dcad7f64902b';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
string
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'im_txt';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
=  "image_data.h"
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/images/save_img.py';
      var-mem-desc-line = '10';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'namespacesave__img_1aefdb9f39ca23c889f45dca10a51c856c';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-name = 'im';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
=  cv2.imread(img)
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/images/save_img.py';
      var-mem-desc-line = '15';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'namespacesave__img_1a3fe36a719a3e6887ef5700e03e35f28c';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-name = 'im_name';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
=  img.rstrip(".png")
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/images/save_img.py';
      var-mem-desc-line = '20';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/images/save_img.py';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'show__img_8py';
  file-name = 'show_img.py';
    var = {
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'namespaceshow__img_1ab8a66e528d1ad2b884bb703767138199';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
list
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'img_data';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
=  [235,235,235,231,231,231,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,232,233,233,231,233,232,231,233,231,233,233,230,233,232,232,232,234,232,231,234,232,232,232,233,233,230,232,233,231,233,233,233,232,232,232,232,232,232,232,232,232,233,233,233,233,233,233,232,232,232,238,238,238,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,237,234,233,236,234,233,236,236,234,234,236,234,234,235,237,234,234,238,235,236,237,236,236,235,236,236,234,236,236,236,235,235,235,235,235,235,235,235,235,236,236,236,236,236,236,235,235,235,237,237,237,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,235,235,235,235,234,234,236,233,231,236,234,231,235,235,234,234,235,236,227,230,233,231,235,238,231,233,235,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,235,235,235,235,235,235,234,234,234,238,238,238,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,235,235,235,235,235,234,233,233,230,232,232,231,228,230,232,223,226,231,186,192,197,209,216,219,207,210,213,228,228,230,236,235,235,234,234,234,234,234,234,234,234,234,234,234,234,235,235,235,235,235,235,235,235,235,237,237,237,234,234,234,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,234,234,234,234,234,234,235,235,235,235,235,235,234,234,234,234,234,234,235,235,235,235,235,235,236,238,236,233,237,237,219,225,230,203,210,219,163,172,179,195,205,208,214,218,221,230,229,232,237,235,237,235,235,235,235,235,235,235,235,235,235,236,236,236,236,236,236,236,236,236,236,236,239,239,238,236,235,235,236,235,235,236,235,235,236,235,235,236,235,235,235,236,235,235,235,235,234,234,234,235,235,235,237,236,236,237,236,236,234,235,236,232,233,234,235,237,237,229,231,232,208,216,218,194,205,210,185,198,207,174,188,200,165,179,189,184,196,202,207,215,220,226,228,232,236,235,237,236,236,235,236,236,235,236,236,235,236,236,236,237,237,237,237,237,237,237,237,237,228,229,229,228,227,228,232,230,231,231,228,230,234,232,233,237,236,236,237,237,235,236,237,235,237,235,236,237,235,236,239,236,237,239,237,238,225,229,230,224,228,229,233,237,238,221,226,228,183,197,204,161,180,190,159,180,191,154,176,190,144,163,177,143,159,171,156,169,177,198,206,211,233,238,239,236,237,234,235,236,233,235,235,235,235,236,236,236,238,237,237,237,237,239,237,238,212,220,222,224,230,233,230,234,238,227,232,234,229,234,234,234,237,236,237,238,235,238,237,236,239,237,238,239,237,238,239,236,237,240,238,239,201,204,203,219,222,221,233,236,235,214,218,218,193,204,210,185,201,210,184,201,211,173,191,203,165,182,196,159,174,187,162,176,185,186,199,204,229,239,240,234,239,238,233,238,237,233,238,238,234,239,238,236,239,238,237,239,238,238,238,238,216,234,241,221,236,243,225,238,246,225,239,243,227,240,240,231,238,237,236,237,235,238,236,235,238,236,237,238,236,237,237,237,237,239,239,239,197,198,196,220,221,218,233,234,231,230,231,229,209,213,217,209,216,222,219,228,235,208,218,227,209,221,234,210,224,235,217,233,240,218,235,241,225,240,243,228,238,240,228,239,240,230,240,240,230,240,239,235,240,239,237,240,239,238,238,238,118,140,149,119,138,148,124,142,153,136,155,161,172,188,191,225,234,233,235,236,233,237,234,232,236,233,234,235,235,235,235,237,236,233,237,235,214,216,214,226,228,226,232,234,232,236,237,236,228,230,232,227,230,235,231,236,241,225,232,239,225,237,247,217,233,243,201,219,226,185,204,211,172,189,195,167,179,186,167,180,185,186,199,201,223,235,235,235,241,239,236,240,239,238,240,239,109,130,141,103,121,133,108,125,137,111,127,137,146,159,165,222,229,231,227,228,225,229,226,224,236,232,233,234,234,234,231,236,234,230,237,235,229,234,235,231,235,236,232,237,238,230,235,236,231,236,238,231,237,240,229,237,241,223,232,238,191,206,213,164,184,191,146,165,172,137,156,163,134,149,159,128,140,153,121,133,143,149,162,166,216,228,229,234,241,239,235,240,238,237,240,239,195,212,224,188,202,215,199,211,224,200,211,223,209,217,227,223,227,231,213,213,211,211,209,206,216,213,214,220,222,222,219,226,225,210,221,219,209,219,223,211,221,225,216,225,230,220,229,233,225,234,237,226,236,239,225,237,241,218,231,237,183,204,208,175,198,203,181,200,207,178,194,202,186,197,211,170,178,196,142,151,164,185,195,202,219,230,233,231,240,238,234,241,239,236,240,239,193,207,222,191,202,217,202,211,224,214,217,234,223,225,241,214,219,227,203,208,208,171,174,174,177,180,183,207,213,214,174,184,188,98,112,121,93,114,126,101,121,132,111,129,139,122,138,147,137,152,161,153,167,174,202,216,220,223,236,237,218,232,235,220,233,238,223,234,240,217,226,233,221,228,237,212,219,229,196,203,212,222,230,237,219,227,234,221,230,233,232,239,242,235,241,242,113,130,152,111,125,147,113,125,141,125,131,151,138,145,165,170,182,193,191,201,205,190,199,204,208,219,226,216,230,234,158,172,183,54,71,92,45,70,91,49,73,91,53,73,90,66,84,98,102,114,129,159,168,179,221,227,233,234,239,241,233,237,241,227,231,237,223,228,233,207,211,217,202,208,212,211,218,220,212,219,223,199,206,214,179,186,196,188,197,205,211,221,227,221,231,234,61,81,108,69,86,114,63,79,100,68,85,102,123,141,155,139,155,164,151,157,164,195,200,207,214,228,234,206,223,228,163,180,190,103,121,138,95,112,131,101,117,135,138,151,168,181,192,207,207,212,223,221,222,232,219,219,227,205,203,212,183,186,195,158,166,174,147,154,163,131,138,147,125,133,140,130,139,144,136,146,152,133,142,151,128,137,147,138,153,160,182,197,203,197,212,216,40,53,77,58,70,94,85,98,116,127,144,153,132,151,156,96,107,110,119,115,118,163,158,161,173,180,182,184,194,197,182,194,198,181,193,200,183,194,202,198,209,217,218,228,236,200,210,217,174,181,186,159,165,172,145,150,159,132,136,149,116,125,138,98,111,123,94,106,118,99,111,123,105,118,128,107,121,130,122,135,145,138,151,161,150,164,174,157,174,184,188,206,213,185,203,208,13,15,35,26,29,47,134,140,151,206,216,220,138,150,150,118,123,123,141,133,134,172,162,162,181,181,180,207,209,211,220,224,225,228,234,233,224,234,232,230,241,240,226,238,238,176,189,190,144,159,163,138,154,162,142,158,170,145,163,177,154,171,187,149,165,182,149,165,182,154,171,187,157,174,189,160,177,191,173,190,204,187,204,217,190,207,218,178,196,208,165,183,193,157,175,183,5,5,24,58,62,79,200,207,217,225,232,239,197,205,212,199,207,211,212,212,218,226,224,229,229,230,237,233,236,246,232,238,245,230,238,239,209,221,220,223,238,239,221,238,241,210,228,234,198,217,228,180,200,214,193,216,230,188,213,229,189,212,231,194,214,234,192,212,232,184,204,224,172,193,212,171,191,209,161,181,197,144,165,179,136,156,169,131,146,161,128,143,158,138,154,165,39,45,71,145,155,179,190,204,222,186,196,216,184,197,217,192,211,229,194,211,230,194,208,227,194,206,227,191,203,228,192,207,228,190,207,221,177,193,207,180,198,215,154,176,193,147,169,188,145,161,184,156,171,195,146,163,186,113,133,156,114,137,161,132,157,180,126,150,173,111,135,158,92,115,138,91,112,135,93,114,133,94,116,131,105,125,140,121,133,151,129,141,158,129,142,156,122,135,161,162,179,207,143,160,194,137,154,189,131,152,187,128,152,190,127,150,192,130,150,193,131,150,192,128,147,190,127,147,189,129,149,189,129,149,188,124,145,186,104,126,163,100,122,154,102,120,154,118,134,170,112,128,163,94,109,145,94,112,148,94,117,153,87,112,144,83,103,136,80,97,130,83,103,134,93,111,139,101,117,141,108,121,144,115,125,146,121,133,148,130,144,156,73,87,109,76,90,113,77,90,122,80,93,127,84,98,134,87,102,142,87,102,147,90,105,150,94,111,152,102,119,160,107,124,165,113,131,172,115,137,181,118,136,186,118,132,180,120,133,175,115,136,172,110,133,168,106,127,163,100,119,155,95,109,148,85,101,139,79,97,132,80,92,127,80,94,129,77,100,133,80,100,129,82,98,122,92,104,126,113,119,138,125,135,146,136,149,156,13,25,41,3,11,25,9,16,35,18,26,48,18,26,52,21,25,56,20,25,58,22,30,61,26,36,62,34,43,70,42,51,77,48,59,87,52,69,106,60,75,121,66,77,126,70,79,126,71,87,127,72,88,126,67,81,120,60,72,112,55,67,106,53,68,104,53,69,103,57,69,102,57,71,105,57,78,110,72,89,115,87,100,119,104,113,128,120,124,136,130,136,141,137,146,149,36,46,55,11,16,20,8,13,19,32,44,53,36,45,58,22,25,41,8,11,30,3,8,24,1,4,17,0,2,15,0,2,15,0,4,20,6,13,42,5,18,56,1,19,60,3,23,62,13,29,71,24,38,81,21,33,77,21,31,76,21,38,78,22,44,79,30,50,83,39,58,90,57,70,101,85,90,118,113,115,138,123,123,138,116,115,125,122,123,128,134,139,137,153,160,158,35,41,45,26,27,26,13,19,18,27,41,41,71,81,84,70,70,76,49,50,57,27,31,37,15,15,21,5,5,11,2,2,7,0,0,7,17,17,35,57,64,91,31,50,78,10,36,62,4,30,60,4,30,62,7,30,63,14,35,69,25,43,74,41,55,83,62,71,99,86,97,123,122,124,146,144,131,149,132,120,135,114,105,114,117,111,116,132,134,133,146,152,146,172,179,175,16,15,17,13,10,9,4,10,8,3,12,11,45,44,46,65,52,57,54,43,47,36,33,35,18,18,20,4,4,7,2,2,4,0,1,3,7,8,15,118,117,134,161,158,179,131,128,148,112,112,131,105,105,125,105,103,124,109,105,127,118,107,126,138,115,133,154,126,144,151,126,141,127,106,116,105,86,91,106,94,97,120,116,116,129,130,129,142,147,144,164,172,165,184,194,190,40,40,35,12,10,7,0,3,3,0,4,4,12,6,7,30,12,17,32,12,17,21,10,12,7,6,7,2,1,3,2,1,2,3,2,3,0,0,2,68,58,64,182,128,146,205,130,148,196,127,144,194,123,141,195,119,137,187,113,129,172,110,122,150,96,106,123,75,83,103,66,69,95,71,70,104,93,88,122,118,113,129,132,126,132,141,135,152,162,158,171,182,176,185,197,194,69,77,64,26,29,21,1,1,1,1,1,2,4,1,0,12,2,5,18,3,9,12,2,5,4,1,2,2,0,0,2,0,0,4,0,1,1,1,1,32,12,11,153,45,59,203,47,68,195,46,67,191,48,69,179,50,67,155,49,59,119,42,49,91,38,42,81,48,46,94,77,71,117,110,102,125,126,116,125,128,120,129,135,128,144,153,147,162,176,171,173,187,183,184,198,196,83,94,82,47,52,43,1,1,1,2,1,2,2,0,0,5,1,2,7,1,5,4,0,2,1,0,0,1,0,0,1,0,0,3,0,0,1,2,0,27,3,2,142,25,38,205,32,54,198,25,46,169,25,43,121,25,36,85,29,34,74,41,39,85,66,56,102,92,82,121,113,105,128,124,115,122,126,115,121,127,118,132,139,131,147,157,150,165,179,174,176,191,187,186,201,199,92,102,93,54,60,50,6,7,3,3,2,1,2,2,0,1,3,1,1,3,3,1,2,2,1,1,1,1,0,0,1,0,0,1,1,1,0,3,2,15,1,0,102,19,28,157,31,47,117,17,23,74,13,12,56,27,22,74,58,55,99,90,81,115,115,99,122,126,111,124,124,112,123,123,113,125,130,119,128,135,126,136,145,137,148,159,151,162,176,171,177,192,188,188,202,201,87,99,89,43,51,37,19,23,11,11,12,4,8,10,2,5,11,4,2,10,4,2,7,2,3,4,1,3,4,1,3,4,1,2,3,2,0,6,6,4,5,2,42,13,13,71,21,24,53,27,25,57,50,41,80,77,62,113,98,82,132,113,101,134,126,113,123,126,112,116,125,111,120,128,115,131,138,126,139,148,137,143,154,145,156,168,161,169,184,179,182,197,193,188,202,201,82,96,82,46,57,36,36,44,22,31,35,17,27,30,15,22,28,15,17,26,13,16,23,12,18,21,12,19,21,13,20,22,14,19,23,15,19,27,20,23,31,21,37,40,27,64,55,45,87,70,67,104,88,81,116,102,85,128,112,88,139,121,105,131,122,110,117,122,107,115,127,112,123,133,119,131,139,127,139,149,138,148,160,151,159,172,164,174,189,183,185,200,196,187,202,200,85,101,83,62,75,48,58,67,38,55,61,37,51,56,35,47,53,33,46,53,34,48,55,38,49,55,40,51,56,41,53,58,44,55,62,46,59,67,45,68,71,48,81,84,59,104,96,74,116,103,83,127,109,92,133,116,97,127,121,97,127,127,107,118,124,106,114,125,108,122,131,117,129,136,123,136,145,133,141,152,141,149,162,153,158,171,163,168,183,178,180,195,191,186,200,199]
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/show_img.py';
      var-mem-desc-line = '4';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'namespaceshow__img_1abd29f67d6d44238922b1433715523b12';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-name = 'img';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
=  np.zeros((32,32,3), np.uint8)
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/show_img.py';
      var-mem-desc-line = '8';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    };
  file-full-name  = '/home/runner/work/NMSIS/NMSIS/NMSIS/NN/Examples/RISCV/cifar10/show_img.py';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
